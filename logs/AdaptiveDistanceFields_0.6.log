>>> 'Pkg.add("AdaptiveDistanceFields")' log
INFO: Cloning cache of AdaptiveDistanceFields from https://github.com/rdeits/AdaptiveDistanceFields.jl.git
INFO: Cloning cache of RegionTrees from https://github.com/rdeits/RegionTrees.jl.git
INFO: Installing AdaptiveDistanceFields v0.0.1
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing Calculus v0.2.1
INFO: Installing DualNumbers v0.2.3
INFO: Installing Interpolations v0.3.7
INFO: Installing Iterators v0.3.0
INFO: Installing NaNMath v0.2.2
INFO: Installing Ratios v0.0.4
INFO: Installing RegionTrees v0.0.3
INFO: Installing StaticArrays v0.3.0
INFO: Installing WoodburyMatrices v0.2.2
INFO: Package database updated

>>> 'Pkg.test("AdaptiveDistanceFields")' log
Julia Version 0.6.0-pre.alpha.63
Commit 35422b2 (2017-03-06 21:19 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1058.20703125 MB free)
Uptime: 1864.0 sec
Load Avg:  0.97119140625  0.80908203125  0.43896484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz      28766 s         57 s       4438 s     142783 s          2 s
#2  3503 MHz      14656 s         89 s       2965 s     165817 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AdaptiveDistanceFields        0.0.1
 - JSON                          0.8.3
11 additional packages:
 - AxisAlgorithms                0.1.6
 - Calculus                      0.2.1
 - Compat                        0.20.0
 - DualNumbers                   0.2.3
 - Interpolations                0.3.7
 - Iterators                     0.3.0
 - NaNMath                       0.2.2
 - Ratios                        0.0.4
 - RegionTrees                   0.0.3
 - StaticArrays                  0.3.0
 - WoodburyMatrices              0.2.2
INFO: Computing test dependencies for AdaptiveDistanceFields...
INFO: Cloning cache of DiffBase from https://github.com/JuliaDiff/DiffBase.jl.git
INFO: Cloning cache of ForwardDiff from https://github.com/JuliaDiff/ForwardDiff.jl.git
INFO: Installing DiffBase v0.0.4
INFO: Installing ForwardDiff v0.4.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Testing AdaptiveDistanceFields

WARNING: deprecated syntax "abstract AbstractRefinery" at /home/vagrant/.julia/v0.6/RegionTrees/src/adaptivesampling.jl:2.
Use "abstract type AbstractRefinery end" instead.

WARNING: deprecated syntax "inner constructor DiffResult(...) around /home/vagrant/.julia/v0.6/DiffBase/src/results.jl:8".
Use "DiffResult{#s1,V,D}(...) where {#s1,V,D}" instead.
coarse: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `StaticArrays.SVector` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] StaticArrays.Size(::Type{StaticArrays.SVector}) at /home/vagrant/.julia/v0.6/StaticArrays/src/traits.jl:42
   [2] macro expansion at /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl:10 [inlined]
   [3] macro expansion at ./test.jl:853 [inlined]
   [4] anonymous at ./<missing>:?
   [5] include_from_node1(::String) at ./loading.jl:539
   [6] include(::String) at ./sysimg.jl:14
   [7] process_options(::Base.JLOptions) at ./client.jl:305
   [8] _start() at ./client.jl:371
Test Summary: | Error  Total
coarse        |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl, in expression starting on line 6
=======================[ ERROR: AdaptiveDistanceFields ]========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/AdaptiveDistanceFields/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DiffBase v0.0.4
INFO: Removing ForwardDiff v0.4.0
INFO: Removing SpecialFunctions v0.1.1
ERROR: AdaptiveDistanceFields had test errors

>>> End of log
