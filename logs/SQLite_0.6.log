>>> 'Pkg.add("SQLite")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing CategoricalArrays v0.1.0
INFO: Installing DataArrays v0.3.10
INFO: Installing DataFrames v0.8.5
INFO: Installing DataStreams v0.1.2
INFO: Installing FileIO v0.2.0
INFO: Installing GZip v0.2.20
INFO: Installing Hiccup v0.0.3
INFO: Installing Juno v0.2.5
INFO: Installing Lazy v0.11.4
INFO: Installing LegacyStrings v0.1.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Media v0.2.4
INFO: Installing NullableArrays v0.0.10
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.0
INFO: Installing SQLite v0.4.1
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Installing URIParser v0.1.6
INFO: Installing WeakRefStrings v0.2.0
INFO: Building SQLite
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/deps/build.jl, in expression starting on line 19
INFO: Package database updated

>>> 'Pkg.test("SQLite")' log
Julia Version 0.6.0-dev.1283
Commit 581a034 (2016-11-19 20:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1286.72265625 MB free)
Uptime: 25169.0 sec
Load Avg:  1.03857421875  1.0146484375  0.98828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1392436 s      10946 s     143843 s     679665 s        126 s
#2  3504 MHz     483304 s       7022 s      85004 s    1843107 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - SQLite                        0.4.1
21 additional packages:
 - BinDeps                       0.4.5
 - CategoricalArrays             0.1.0
 - Compat                        0.9.4
 - DataArrays                    0.3.10
 - DataFrames                    0.8.5
 - DataStreams                   0.1.2
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - Hiccup                        0.0.3
 - Juno                          0.2.5
 - Lazy                          0.11.4
 - LegacyStrings                 0.1.1
 - MacroTools                    0.3.2
 - Media                         0.2.4
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SHA                           0.3.0
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - URIParser                     0.1.6
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for SQLite...
INFO: Installing DataStreamsIntegrationTests v0.0.1
INFO: Testing SQLite
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::Date) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in bind!(::SQLite.Stmt, ::Int64, ::Date) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:164
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/runtests.jl, in expression starting on line 50
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::BigInt) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in sqlreturn(::Ptr{Void}, ::BigInt) at /home/vagrant/.julia/v0.6/SQLite/src/UDF.jl:36
 in big(::Ptr{Void}, ::Int32, ::Ptr{Ptr{Void}}) at /home/vagrant/.julia/v0.6/SQLite/src/UDF.jl:48
 in execute!(::SQLite.Stmt) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:191
 in #Source#14(::Int64, ::Bool, ::Bool, ::Type{T}, ::SQLite.DB, ::String, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:15
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{SQLite.Source}, ::SQLite.DB, ::String, ::Array{Any,1}) at ./<missing>:0
 in #query#16 at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118 [inlined]
 in query(::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118
 in query(::SQLite.DB, ::String) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:111
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/runtests.jl, in expression starting on line 172
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::Float64) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in doublesum_step(::Ptr{Void}, ::Int32, ::Ptr{Ptr{Void}}) at /home/vagrant/.julia/v0.6/SQLite/src/UDF.jl:109
 in execute!(::SQLite.Stmt) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:191
 in #Source#14(::Int64, ::Bool, ::Bool, ::Type{T}, ::SQLite.DB, ::String, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:15
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{SQLite.Source}, ::SQLite.DB, ::String, ::Array{Any,1}) at ./<missing>:0
 in #query#16 at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118 [inlined]
 in query(::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118
 in query(::SQLite.DB, ::String) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:111
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/runtests.jl, in expression starting on line 178
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::Int64) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in mycount(::Ptr{Void}, ::Int32, ::Ptr{Ptr{Void}}) at /home/vagrant/.julia/v0.6/SQLite/src/UDF.jl:109
 in execute!(::SQLite.Stmt) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:191
 in #Source#14(::Int64, ::Bool, ::Bool, ::Type{T}, ::SQLite.DB, ::String, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:15
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{SQLite.Source}, ::SQLite.DB, ::String, ::Array{Any,1}) at ./<missing>:0
 in #query#16 at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118 [inlined]
 in query(::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118
 in query(::SQLite.DB, ::String) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:111
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/runtests.jl, in expression starting on line 184
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::Point3D{Int64}) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in sumpoint(::Ptr{Void}, ::Int32, ::Ptr{Ptr{Void}}) at /home/vagrant/.julia/v0.6/SQLite/src/UDF.jl:109
 in execute!(::SQLite.Stmt) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:191
 in #Source#14(::Int64, ::Bool, ::Bool, ::Type{T}, ::SQLite.DB, ::String, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:15
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{SQLite.Source}, ::SQLite.DB, ::String, ::Array{Any,1}) at ./<missing>:0
 in #query#16 at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118 [inlined]
 in query(::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118
 in query(::SQLite.DB, ::String) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:111
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/runtests.jl, in expression starting on line 207
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::Point{Int64}) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in bind!(::SQLite.Stmt, ::Int64, ::Point{Int64}) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:164
 in bind!(::SQLite.Stmt, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:110
 in #Source#14(::Int64, ::Bool, ::Bool, ::Type{T}, ::SQLite.DB, ::String, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:14
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{SQLite.Source}, ::SQLite.DB, ::String, ::Array{Any,1}) at ./<missing>:0
 in #query#16 at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118 [inlined]
 in (::SQLite.#kw##query)(::Array{Any,1}, ::SQLite.#query, ::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}) at ./<missing>:0 (repeats 2 times)
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/runtests.jl, in expression starting on line 286
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::Point{Float64}) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in bind!(::SQLite.Stmt, ::Int64, ::Point{Float64}) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:164
 in bind!(::SQLite.Stmt, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:110
 in #Source#14(::Int64, ::Bool, ::Bool, ::Type{T}, ::SQLite.DB, ::String, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:14
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{SQLite.Source}, ::SQLite.DB, ::String, ::Array{Any,1}) at ./<missing>:0
 in #query#16 at /home/vagrant/.julia/v0.6/SQLite/src/Source.jl:118 [inlined]
 in (::SQLite.#kw##query)(::Array{Any,1}, ::SQLite.#query, ::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}) at ./<missing>:0 (repeats 2 times)
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/runtests.jl, in expression starting on line 287
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:298 overwritten in module Main at /home/vagrant/.julia/v0.6/SQLite/test/datastreams.jl:26.
[2016-11-20T12:23:04.661]: Test high-level to sink from source; e.g. CSV.write
[2016-11-20T12:23:04.723]: Sink: SQLite.Sink args => Source: DataFrame args
WARNING: takebuf_array is deprecated, use take! instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_array(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Vararg{Base.AbstractIOBuffer{Array{UInt8,1}},N}) at ./deprecated.jl:30
 in sqlserialize(::DateTime) at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:161
 in bind! at /home/vagrant/.julia/v0.6/SQLite/src/SQLite.jl:164 [inlined]
 in getbind!(::Nullable{DateTime}, ::Int64, ::SQLite.Stmt) at /home/vagrant/.julia/v0.6/SQLite/src/Sink.jl:59
 in streamto!(::SQLite.Sink, ::Type{DataStreams.Data.Field}, ::Nullable{DateTime}, ::Int64, ::Int64, ::DataStreams.Data.Schema{true}) at /home/vagrant/.julia/v0.6/SQLite/src/Sink.jl:77
 in streamto!(::SQLite.Sink, ::Type{DataStreams.Data.Field}, ::DataFrames.DataFrame, ::Type{Nullable{DateTime}}, ::Type{Nullable{DateTime}}, ::Int64, ::Int64, ::DataStreams.Data.Schema{true}, ::Base.#identity) at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:172
 in stream!(::DataFrames.DataFrame, ::Type{DataStreams.Data.Field}, ::SQLite.Sink, ::DataStreams.Data.Schema{true}, ::DataStreams.Data.Schema{true}, ::Array{Function,1}) at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:185
 in #stream!#5(::Array{Any,1}, ::Function, ::DataFrames.DataFrame, ::Type{SQLite.Sink}, ::Bool, ::Dict{Int64,Function}, ::SQLite.DB, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:149
 in stream!(::DataFrames.DataFrame, ::Type{SQLite.Sink}, ::Bool, ::Dict{Int64,Function}, ::SQLite.DB, ::String) at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:143
 in #load#24(::Bool, ::Dict{Int64,Function}, ::Array{Any,1}, ::Function, ::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}, ::Symbol, ::Vararg{Symbol,N}) at /home/vagrant/.julia/v0.6/SQLite/src/Sink.jl:106
 in load(::SQLite.DB, ::String, ::Type{DataFrames.DataFrame}, ::Symbol, ::Vararg{Symbol,N}) at /home/vagrant/.julia/v0.6/SQLite/src/Sink.jl:106
 in #teststream#11(::Int64, ::Function, ::Array{DataStreamsIntegrationTests.Tester,1}, ::Array{DataStreamsIntegrationTests.Tester,1}) at /home/vagrant/.julia/v0.6/DataStreamsIntegrationTests/src/DataStreamsIntegrationTests.jl:184
 in (::DataStreamsIntegrationTests.#kw##teststream)(::Array{Any,1}, ::DataStreamsIntegrationTests.#teststream, ::Array{DataStreamsIntegrationTests.Tester,1}, ::Array{DataStreamsIntegrationTests.Tester,1}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SQLite/test/datastreams.jl, in expression starting on line 65
[2016-11-20T12:23:05.67]: Sink: SQLite.Sink args => Source: DataFrame args + append
[2016-11-20T12:23:05.835]: Sink: SQLite.Sink args => Source: DataFrame args + transforms
[2016-11-20T12:23:06.597]: Sink: SQLite.Sink args => Source: DataFrame args + append + transforms
[2016-11-20T12:23:06.663]: Sink: SQLite.Sink => Source: DataFrame args
[2016-11-20T12:23:06.748]: Sink: SQLite.Sink => Source: DataFrame args + append
[2016-11-20T12:23:06.866]: Sink: SQLite.Sink => Source: DataFrame args + transforms
[2016-11-20T12:23:06.951]: Sink: SQLite.Sink => Source: DataFrame args + append + transforms`
[2016-11-20T12:23:07.016]: Sink: SQLite.Sink args => Source: DataFrame
[2016-11-20T12:23:07.11]: Sink: SQLite.Sink args => Source: DataFrame + append
[2016-11-20T12:23:07.211]: Sink: SQLite.Sink args => Source: DataFrame + transforms
[2016-11-20T12:23:07.294]: Sink: SQLite.Sink args => Source: DataFrame + append + transforms
[2016-11-20T12:23:07.363]: Sink: SQLite.Sink => Source: DataFrame
[2016-11-20T12:23:07.428]: Sink: SQLite.Sink => Source: DataFrame + append
[2016-11-20T12:23:07.524]: Sink: SQLite.Sink => Source: DataFrame + transforms
[2016-11-20T12:23:07.59]: Sink: SQLite.Sink => Source: DataFrame + append + transforms
[2016-11-20T12:23:07.655]: finished...
[2016-11-20T12:23:07.658]: Test high-level from source to sink; e.g. CSV.read
[2016-11-20T12:23:07.658]: Source: SQLite.Source args => Sink: DataFrame args
[2016-11-20T12:23:07.917]: Source: SQLite.Source args => Sink: DataFrame args + append
[2016-11-20T12:23:07.979]: Source: SQLite.Source args => Sink: DataFrame args + transforms
[2016-11-20T12:23:08.213]: Source: SQLite.Source args => Sink: DataFrame args + append + transforms
[2016-11-20T12:23:08.219]: Source: SQLite.Source args => Sink: DataFrame
[2016-11-20T12:23:08.283]: Source: SQLite.Source args => Sink: DataFrame + append
[2016-11-20T12:23:08.379]: Source: SQLite.Source args => Sink: DataFrame + transforms
[2016-11-20T12:23:08.41]: Source: SQLite.Source args => Sink: DataFrame + append + transforms`
[2016-11-20T12:23:08.416]: Source: SQLite.Source => Sink: DataFrame args
[2016-11-20T12:23:08.433]: Source: SQLite.Source => Sink: DataFrame args + append
[2016-11-20T12:23:08.476]: Source: SQLite.Source => Sink: DataFrame args + transforms
[2016-11-20T12:23:08.482]: Source: SQLite.Source => Sink: DataFrame args + append + transforms
[2016-11-20T12:23:08.487]: Source: SQLite.Source => Sink: DataFrame
[2016-11-20T12:23:08.498]: Source: SQLite.Source => Sink: DataFrame + append
[2016-11-20T12:23:08.543]: Source: SQLite.Source => Sink: DataFrame + transforms
[2016-11-20T12:23:08.551]: Source: SQLite.Source => Sink: DataFrame + append + transforms
[2016-11-20T12:23:08.556]: Test high-level from source to sink; e.g. CSV.read
[2016-11-20T12:23:08.556]: Source: SQLite.Source args => Sink: SQLite.Sink args
[2016-11-20T12:23:08.861]: Source: SQLite.Source args => Sink: SQLite.Sink args + append
[2016-11-20T12:23:08.993]: Source: SQLite.Source args => Sink: SQLite.Sink args + transforms
[2016-11-20T12:23:09.111]: Source: SQLite.Source args => Sink: SQLite.Sink args + append + transforms
[2016-11-20T12:23:09.156]: Source: SQLite.Source args => Sink: SQLite.Sink
[2016-11-20T12:23:09.276]: Source: SQLite.Source args => Sink: SQLite.Sink + append
[2016-11-20T12:23:09.374]: Source: SQLite.Source args => Sink: SQLite.Sink + transforms
[2016-11-20T12:23:09.445]: Source: SQLite.Source args => Sink: SQLite.Sink + append + transforms`
[2016-11-20T12:23:09.497]: Source: SQLite.Source => Sink: SQLite.Sink args
[2016-11-20T12:23:09.552]: Source: SQLite.Source => Sink: SQLite.Sink args + append
[2016-11-20T12:23:09.62]: Source: SQLite.Source => Sink: SQLite.Sink args + transforms
[2016-11-20T12:23:09.672]: Source: SQLite.Source => Sink: SQLite.Sink args + append + transforms
[2016-11-20T12:23:09.723]: Source: SQLite.Source => Sink: SQLite.Sink
[2016-11-20T12:23:09.774]: Source: SQLite.Source => Sink: SQLite.Sink + append
[2016-11-20T12:23:09.856]: Source: SQLite.Source => Sink: SQLite.Sink + transforms
[2016-11-20T12:23:09.911]: Source: SQLite.Source => Sink: SQLite.Sink + append + transforms
[2016-11-20T12:23:09.971]: Test high-level to sink from source; e.g. CSV.write
[2016-11-20T12:23:09.971]: Sink: SQLite.Sink args => Source: SQLite.Source args
[2016-11-20T12:23:10.096]: Sink: SQLite.Sink args => Source: SQLite.Source args + append
[2016-11-20T12:23:10.218]: Sink: SQLite.Sink args => Source: SQLite.Source args + transforms
[2016-11-20T12:23:10.313]: Sink: SQLite.Sink args => Source: SQLite.Source args + append + transforms
[2016-11-20T12:23:10.388]: Sink: SQLite.Sink => Source: SQLite.Source args
[2016-11-20T12:23:10.478]: Sink: SQLite.Sink => Source: SQLite.Source args + append
[2016-11-20T12:23:10.604]: Sink: SQLite.Sink => Source: SQLite.Source args + transforms
[2016-11-20T12:23:10.703]: Sink: SQLite.Sink => Source: SQLite.Source args + append + transforms`
[2016-11-20T12:23:10.778]: Sink: SQLite.Sink args => Source: SQLite.Source
[2016-11-20T12:23:10.877]: Sink: SQLite.Sink args => Source: SQLite.Source + append
[2016-11-20T12:23:10.986]: Sink: SQLite.Sink args => Source: SQLite.Source + transforms
[2016-11-20T12:23:11.07]: Sink: SQLite.Sink args => Source: SQLite.Source + append + transforms
[2016-11-20T12:23:11.142]: Sink: SQLite.Sink => Source: SQLite.Source
[2016-11-20T12:23:11.22]: Sink: SQLite.Sink => Source: SQLite.Source + append
[2016-11-20T12:23:11.322]: Sink: SQLite.Sink => Source: SQLite.Source + transforms
[2016-11-20T12:23:11.392]: Sink: SQLite.Sink => Source: SQLite.Source + append + transforms
[2016-11-20T12:23:11.471]: finished...
INFO: SQLite tests passed
INFO: No packages to install, update or remove

>>> End of log
