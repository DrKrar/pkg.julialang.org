>>> 'Pkg.add("SQLite")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing CategoricalArrays v0.1.0
INFO: Installing DataArrays v0.3.9
INFO: Installing DataFrames v0.8.4
INFO: Installing DataStreams v0.1.2
INFO: Installing FileIO v0.2.0
INFO: Installing GZip v0.2.20
INFO: Installing LegacyStrings v0.1.1
INFO: Installing NullableArrays v0.0.10
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.2.1
INFO: Installing SQLite v0.4.1
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Installing URIParser v0.1.6
INFO: Installing WeakRefStrings v0.2.0
INFO: Building SQLite
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SQLite
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SQLite")' log
Julia Version 0.6.0-dev.1162
Commit d95591e (2016-10-31 16:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1392.93359375 MB free)
Uptime: 22463.0 sec
Load Avg:  1.142578125  1.02880859375  0.97802734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1239360 s       5493 s     124642 s     634538 s         83 s
#2  3500 MHz     467592 s       1644 s      66594 s    1635285 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - SQLite                        0.4.1
16 additional packages:
 - BinDeps                       0.4.5
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.9
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - LegacyStrings                 0.1.1
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SHA                           0.2.1
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - URIParser                     0.1.6
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for SQLite...
INFO: Installing DataStreamsIntegrationTests v0.0.1
INFO: Testing SQLite
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:298 overwritten in module Main at /home/vagrant/.julia/v0.6/SQLite/test/datastreams.jl:26.
[2016-11-01T10:37:33.45]: Test high-level to sink from source; e.g. CSV.write
[2016-11-01T10:37:33.518]: Sink: SQLite.Sink args => Source: DataFrame args
[2016-11-01T10:37:34.335]: Sink: SQLite.Sink args => Source: DataFrame args + append
[2016-11-01T10:37:34.386]: Sink: SQLite.Sink args => Source: DataFrame args + transforms
[2016-11-01T10:37:35.014]: Sink: SQLite.Sink args => Source: DataFrame args + append + transforms
[2016-11-01T10:37:35.029]: Sink: SQLite.Sink => Source: DataFrame args
[2016-11-01T10:37:35.065]: Sink: SQLite.Sink => Source: DataFrame args + append
[2016-11-01T10:37:35.121]: Sink: SQLite.Sink => Source: DataFrame args + transforms
[2016-11-01T10:37:35.152]: Sink: SQLite.Sink => Source: DataFrame args + append + transforms`
[2016-11-01T10:37:35.165]: Sink: SQLite.Sink args => Source: DataFrame
[2016-11-01T10:37:35.206]: Sink: SQLite.Sink args => Source: DataFrame + append
[2016-11-01T10:37:35.258]: Sink: SQLite.Sink args => Source: DataFrame + transforms
[2016-11-01T10:37:35.29]: Sink: SQLite.Sink args => Source: DataFrame + append + transforms
[2016-11-01T10:37:35.304]: Sink: SQLite.Sink => Source: DataFrame
[2016-11-01T10:37:35.323]: Sink: SQLite.Sink => Source: DataFrame + append
[2016-11-01T10:37:35.374]: Sink: SQLite.Sink => Source: DataFrame + transforms
[2016-11-01T10:37:35.386]: Sink: SQLite.Sink => Source: DataFrame + append + transforms
[2016-11-01T10:37:35.407]: finished...
[2016-11-01T10:37:35.41]: Test high-level from source to sink; e.g. CSV.read
[2016-11-01T10:37:35.41]: Source: SQLite.Source args => Sink: DataFrame args
[2016-11-01T10:37:35.686]: Source: SQLite.Source args => Sink: DataFrame args + append
[2016-11-01T10:37:35.754]: Source: SQLite.Source args => Sink: DataFrame args + transforms
[2016-11-01T10:37:35.982]: Source: SQLite.Source args => Sink: DataFrame args + append + transforms
[2016-11-01T10:37:35.988]: Source: SQLite.Source args => Sink: DataFrame
[2016-11-01T10:37:36.049]: Source: SQLite.Source args => Sink: DataFrame + append
[2016-11-01T10:37:36.141]: Source: SQLite.Source args => Sink: DataFrame + transforms
[2016-11-01T10:37:36.168]: Source: SQLite.Source args => Sink: DataFrame + append + transforms`
[2016-11-01T10:37:36.174]: Source: SQLite.Source => Sink: DataFrame args
[2016-11-01T10:37:36.196]: Source: SQLite.Source => Sink: DataFrame args + append
[2016-11-01T10:37:36.24]: Source: SQLite.Source => Sink: DataFrame args + transforms
[2016-11-01T10:37:36.245]: Source: SQLite.Source => Sink: DataFrame args + append + transforms
[2016-11-01T10:37:36.251]: Source: SQLite.Source => Sink: DataFrame
[2016-11-01T10:37:36.267]: Source: SQLite.Source => Sink: DataFrame + append
[2016-11-01T10:37:36.313]: Source: SQLite.Source => Sink: DataFrame + transforms
[2016-11-01T10:37:36.318]: Source: SQLite.Source => Sink: DataFrame + append + transforms
[2016-11-01T10:37:36.324]: Test high-level from source to sink; e.g. CSV.read
[2016-11-01T10:37:36.324]: Source: SQLite.Source args => Sink: SQLite.Sink args
[2016-11-01T10:37:36.583]: Source: SQLite.Source args => Sink: SQLite.Sink args + append
[2016-11-01T10:37:36.67]: Source: SQLite.Source args => Sink: SQLite.Sink args + transforms
[2016-11-01T10:37:36.765]: Source: SQLite.Source args => Sink: SQLite.Sink args + append + transforms
[2016-11-01T10:37:36.785]: Source: SQLite.Source args => Sink: SQLite.Sink
[2016-11-01T10:37:36.844]: Source: SQLite.Source args => Sink: SQLite.Sink + append
[2016-11-01T10:37:36.927]: Source: SQLite.Source args => Sink: SQLite.Sink + transforms
[2016-11-01T10:37:36.967]: Source: SQLite.Source args => Sink: SQLite.Sink + append + transforms`
[2016-11-01T10:37:36.985]: Source: SQLite.Source => Sink: SQLite.Sink args
[2016-11-01T10:37:37.021]: Source: SQLite.Source => Sink: SQLite.Sink args + append
[2016-11-01T10:37:37.057]: Source: SQLite.Source => Sink: SQLite.Sink args + transforms
[2016-11-01T10:37:37.071]: Source: SQLite.Source => Sink: SQLite.Sink args + append + transforms
[2016-11-01T10:37:37.081]: Source: SQLite.Source => Sink: SQLite.Sink
[2016-11-01T10:37:37.1]: Source: SQLite.Source => Sink: SQLite.Sink + append
[2016-11-01T10:37:37.142]: Source: SQLite.Source => Sink: SQLite.Sink + transforms
[2016-11-01T10:37:37.152]: Source: SQLite.Source => Sink: SQLite.Sink + append + transforms
[2016-11-01T10:37:37.165]: Test high-level to sink from source; e.g. CSV.write
[2016-11-01T10:37:37.165]: Sink: SQLite.Sink args => Source: SQLite.Source args
[2016-11-01T10:37:37.242]: Sink: SQLite.Sink args => Source: SQLite.Source args + append
[2016-11-01T10:37:37.309]: Sink: SQLite.Sink args => Source: SQLite.Source args + transforms
[2016-11-01T10:37:37.345]: Sink: SQLite.Sink args => Source: SQLite.Source args + append + transforms
[2016-11-01T10:37:37.361]: Sink: SQLite.Sink => Source: SQLite.Source args
[2016-11-01T10:37:37.388]: Sink: SQLite.Sink => Source: SQLite.Source args + append
[2016-11-01T10:37:37.432]: Sink: SQLite.Sink => Source: SQLite.Source args + transforms
[2016-11-01T10:37:37.452]: Sink: SQLite.Sink => Source: SQLite.Source args + append + transforms`
[2016-11-01T10:37:37.469]: Sink: SQLite.Sink args => Source: SQLite.Source
[2016-11-01T10:37:37.51]: Sink: SQLite.Sink args => Source: SQLite.Source + append
[2016-11-01T10:37:37.561]: Sink: SQLite.Sink args => Source: SQLite.Source + transforms
[2016-11-01T10:37:37.598]: Sink: SQLite.Sink args => Source: SQLite.Source + append + transforms
[2016-11-01T10:37:37.614]: Sink: SQLite.Sink => Source: SQLite.Source
[2016-11-01T10:37:37.636]: Sink: SQLite.Sink => Source: SQLite.Source + append
[2016-11-01T10:37:37.68]: Sink: SQLite.Sink => Source: SQLite.Source + transforms
[2016-11-01T10:37:37.697]: Sink: SQLite.Sink => Source: SQLite.Source + append + transforms
[2016-11-01T10:37:37.713]: finished...
INFO: SQLite tests passed
INFO: No packages to install, update or remove

>>> End of log
