>>> 'Pkg.add("PDMats")' log
INFO: Installing PDMats v0.5.6
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PDMats
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PDMats")' log
Julia Version 0.6.0-pre.alpha.329
Commit cded1db (2017-03-31 00:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (804.6796875 MB free)
Uptime: 12870.0 sec
Load Avg:  0.98876953125  1.0146484375  1.0361328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3513 MHz     768310 s       1421 s      63021 s     286928 s         16 s
#2  3513 MHz     183729 s       5471 s      31232 s    1037068 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - PDMats                        0.5.6
1 additional packages:
 - Compat                        0.21.0
INFO: Testing PDMats
Running tests ...
* pdmtypes 
Testing PDMats.PDMat{Float64,Array{Float64,2}} with dim = 3
Testing PDMats.PDiagMat{Float64,Array{Float64,1}} with dim = 3
Testing PDMats.ScalMat{Float64} with dim = 3
Testing PDMats.PDSparseMat{Float64,SparseMatrixCSC{Float64,Int64}} with dim = 3
Testing PDMats.PDMat{Float32,Array{Float32,2}} with dim = 3
Testing PDMats.PDiagMat{Float32,Array{Float32,1}} with dim = 3
Testing PDMats.ScalMat{Float32} with dim = 3
Testing PDMats.PDSparseMat{Float32,SparseMatrixCSC{Float32,Int64}} with dim = 3
* addition 
Testing addition with eltype = Float64
Testing addition with eltype = Float32
* generics 
Testing scalar multiplication
INFO: PDMats tests passed

>>> End of log
