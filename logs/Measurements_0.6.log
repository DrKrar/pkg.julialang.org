>>> 'Pkg.add("Measurements")' log
INFO: Cloning cache of Measurements from https://github.com/giordano/Measurements.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing Measurements v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Measurements")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (2309.875 MB free)
Uptime: 2500.0 sec
Load Avg:  0.978515625  1.00634765625  0.95751953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     126094 s         63 s      20922 s      78033 s          7 s
#2  3500 MHz      29410 s         72 s       9188 s     205774 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - Measurements                  0.2.1
2 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.2
INFO: Testing Measurements
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:994
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Measurements/src/Measurements.jl, in expression starting on line 72
WARNING: measurement{T1 <: Real,T2 <: Real}(x::AbstractArray{T1},y::AbstractArray{T2}) is deprecated, use measurement.(x,y) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in measurement(::StepRange{Int64,Int64}, ::StepRange{Int64,Int64}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Measurements/test/runtests.jl, in expression starting on line 27
ERROR: LoadError: LoadError: MethodError: no method matching lgamma(::Complex{Measurements.Measurement{Float64}})
Closest candidates are:
  lgamma(!Matched::BigFloat) at mpfr.jl:649
  lgamma(!Matched::Complex{Float64}) at special/gamma.jl:64
  lgamma(!Matched::Complex{Float16}) at math.jl:603
  ...
 in gamma(::Complex{Measurements.Measurement{Float64}}) at ./special/gamma.jl:135
 in macro expansion; at /home/vagrant/.julia/v0.6/Measurements/test/complex.jl:51 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Measurements/test/complex.jl, in expression starting on line 51
while loading /home/vagrant/.julia/v0.6/Measurements/test/runtests.jl, in expression starting on line 439
============================[ ERROR: Measurements ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Measurements/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Measurements had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
