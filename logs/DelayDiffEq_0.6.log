>>> 'Pkg.add("DelayDiffEq")' log
INFO: Cloning cache of DelayDiffEq from https://github.com/JuliaDiffEq/DelayDiffEq.jl.git
INFO: Cloning cache of InplaceOps from https://github.com/simonbyrne/InplaceOps.jl.git
INFO: Cloning cache of OrdinaryDiffEq from https://github.com/JuliaDiffEq/OrdinaryDiffEq.jl.git
INFO: Installing Calculus v0.2.1
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing DelayDiffEq v0.1.0
INFO: Installing DiffBase v0.0.4
INFO: Installing DiffEqBase v0.11.0
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.4.0
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Iterators v0.3.0
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v0.1.5
INFO: Installing MacroTools v0.3.6
INFO: Installing Media v0.2.5
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.8
INFO: Installing OrdinaryDiffEq v1.4.1
INFO: Installing Parameters v0.6.0
INFO: Installing PolynomialFactors v0.0.3
INFO: Installing Polynomials v0.1.3
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Primes v0.1.2
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.2.0
INFO: Installing Roots v0.3.0
INFO: Installing SimpleTraits v0.3.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Package database updated

>>> 'Pkg.test("DelayDiffEq")' log
Julia Version 0.6.0-pre.alpha.107
Commit e91065c (2017-03-10 09:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (496.98828125 MB free)
Uptime: 26420.0 sec
Load Avg:  0.896484375  0.58056640625  0.28955078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1346806 s       3238 s     125872 s     928002 s         44 s
#2  3499 MHz     636524 s       3662 s      92152 s    1804009 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DelayDiffEq                   0.1.0
 - JSON                          0.8.3
31 additional packages:
 - Calculus                      0.2.1
 - Combinatorics                 0.3.2
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - DiffBase                      0.0.4
 - DiffEqBase                    0.11.0
 - Distances                     0.4.1
 - ForwardDiff                   0.4.0
 - GenericSVD                    0.0.2
 - Hiccup                        0.1.1
 - InplaceOps                    0.1.0
 - Iterators                     0.3.0
 - Juno                          0.2.7
 - LineSearches                  0.1.5
 - MacroTools                    0.3.6
 - Media                         0.2.5
 - NLsolve                       0.9.1
 - NaNMath                       0.2.2
 - Optim                         0.7.8
 - OrdinaryDiffEq                1.4.1
 - Parameters                    0.6.0
 - PolynomialFactors             0.0.3
 - Polynomials                   0.1.3
 - PositiveFactorizations        0.0.4
 - Primes                        0.1.2
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.2.0
 - Roots                         0.3.0
 - SimpleTraits                  0.3.0
 - SpecialFunctions              0.1.1
INFO: Computing test dependencies for DelayDiffEq...
INFO: Installing BinDeps v0.4.7
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing DiffEqDevTools v0.6.0
INFO: Installing DiffEqPDEBase v0.0.3
INFO: Installing Distributions v0.12.1
INFO: Installing EllipsisNotation v0.0.2
INFO: Installing PDMats v0.5.6
INFO: Installing QuadGK v0.1.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Rmath
INFO: Testing DelayDiffEq
WARNING: Method definition (::Type{DiffEqBase.DiscreteTestProblem{uType, AType, tType, isinplace, F} where F where isinplace where tType where AType where uType})(Any, Any, Any) in module DiffEqBase at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/discrete_problems.jl:19 overwritten at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/discrete_problems.jl:33.
WARNING: Method definition (::Type{DiffEqBase.DiscreteTestProblem{uType, AType, tType, isinplace, F} where F where isinplace where tType where AType where uType})(Any, Any, Any) in module DiffEqBase at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/discrete_problems.jl:19 overwritten at /home/vagrant/.julia/v0.6/DiffEqBase/src/problems/discrete_problems.jl:33.

WARNING: deprecated syntax "typealias AbstractVMF Union{AbstractVecOrMat,Factorization}" at /home/vagrant/.julia/v0.6/InplaceOps/src/InplaceOps.jl:32.
Use "const AbstractVMF = Union{AbstractVecOrMat,Factorization}" instead.

WARNING: deprecated syntax "abstract AbstractDifferentiableMultivariateFunction" at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:2.
Use "abstract type AbstractDifferentiableMultivariateFunction end" instead.

WARNING: deprecated syntax "abstract UnivariateZeroMethod" at /home/vagrant/.julia/v0.6/Roots/src/find_zero.jl:14.
Use "abstract type UnivariateZeroMethod end" instead.

WARNING: deprecated syntax "abstract CallableFunction" at /home/vagrant/.julia/v0.6/Roots/src/find_zero.jl:17.
Use "abstract type CallableFunction end" instead.

WARNING: deprecated syntax "typealias BigSomething @compat Union{BigFloat,BigInt}" at /home/vagrant/.julia/v0.6/Roots/src/bracketing.jl:58.
Use "const BigSomething = @compat Union{BigFloat,BigInt}" instead.

WARNING: deprecated syntax "abstract AbstractBisection<:UnivariateZeroMethod" at /home/vagrant/.julia/v0.6/Roots/src/bracketing.jl:60.
Use "abstract type AbstractBisection<:UnivariateZeroMethod end" instead.

WARNING: deprecated syntax "abstract AbstractSecant<:UnivariateZeroMethod" at /home/vagrant/.julia/v0.6/Roots/src/derivative_free.jl:65.
Use "abstract type AbstractSecant<:UnivariateZeroMethod end" instead.

WARNING: deprecated syntax "typealias Order1 Secant" at /home/vagrant/.julia/v0.6/Roots/src/derivative_free.jl:68.
Use "const Order1 = Secant" instead.

WARNING: deprecated syntax "typealias Order2 Steffensen" at /home/vagrant/.julia/v0.6/Roots/src/derivative_free.jl:245.
Use "const Order2 = Steffensen" instead.

WARNING: deprecated syntax "typealias QQR @compat Union{Int,BigInt,Rational{Int},Rational{BigInt},Float64}" at /home/vagrant/.julia/v0.6/Roots/src/Polys/polynomials.jl:42.
Use "const QQR = @compat Union{Int,BigInt,Rational{Int},Rational{BigInt},Float64}" instead.

WARNING: deprecated syntax "typealias QQ @compat Union{Int,BigInt,Rational{Int},Rational{BigInt}}" at /home/vagrant/.julia/v0.6/Roots/src/Polys/real_roots.jl:46.
Use "const QQ = @compat Union{Int,BigInt,Rational{Int},Rational{BigInt}}" instead.

WARNING: deprecated syntax "typealias BB @compat Union{BigInt,Rational{BigInt}}" at /home/vagrant/.julia/v0.6/Roots/src/Polys/real_roots.jl:47.
Use "const BB = @compat Union{BigInt,Rational{BigInt}}" instead.

WARNING: deprecated syntax "abstract OrdinaryDiffEqAlgorithm<:AbstractODEAlgorithm" at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/algorithms.jl:2.
Use "abstract type OrdinaryDiffEqAlgorithm<:AbstractODEAlgorithm end" instead.

WARNING: deprecated syntax "abstract OrdinaryDiffEqAdaptiveAlgorithm<:OrdinaryDiffEqAlgorithm" at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/algorithms.jl:3.
Use "abstract type OrdinaryDiffEqAdaptiveAlgorithm<:OrdinaryDiffEqAlgorithm end" instead.

WARNING: deprecated syntax "abstract OrdinaryDiffEqCompositeAlgorithm<:OrdinaryDiffEqAlgorithm" at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/algorithms.jl:4.
Use "abstract type OrdinaryDiffEqCompositeAlgorithm<:OrdinaryDiffEqAlgorithm end" instead.

WARNING: deprecated syntax "inner constructor ExplicitRK(...) around /home/vagrant/.julia/v0.6/Parameters/src/Parameters.jl:364".
Use "ExplicitRK{TabType}(...) where TabType" instead.

WARNING: deprecated syntax "inner constructor ExplicitRK(...) around /home/vagrant/.julia/v0.6/Parameters/src/Parameters.jl:374".
Use "ExplicitRK{TabType}(...) where TabType" instead.

WARNING: deprecated syntax "abstract OrdinaryDiffEqCache<:DECache" at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/caches.jl:2.
Use "abstract type OrdinaryDiffEqCache<:DECache end" instead.

WARNING: deprecated syntax "abstract OrdinaryDiffEqConstantCache<:OrdinaryDiffEqCache" at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/caches.jl:3.
Use "abstract type OrdinaryDiffEqConstantCache<:OrdinaryDiffEqCache end" instead.

WARNING: deprecated syntax "abstract OrdinaryDiffEqMutableCache<:OrdinaryDiffEqCache" at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/caches.jl:4.
Use "abstract type OrdinaryDiffEqMutableCache<:OrdinaryDiffEqCache end" instead.

WARNING: deprecated syntax "inner constructor ODEIntegrator(...) around /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/type.jl:74".
Use "ODEIntegrator{algType,uType,tType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,O}(...) where {algType,uType,tType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,O}" instead.

WARNING: deprecated syntax "inner constructor DDEIntegrator(...) around /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_type.jl:44".
Use "DDEIntegrator{algType,uType,tType,absType,relType,residType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,IType,ProbType,NType,O}(...) where {algType,uType,tType,absType,relType,residType,tTypeNoUnits,tdirType,ksEltype,SolType,rateType,F,ProgressType,CacheType,IType,ProbType,NType,O}" instead.

WARNING: deprecated syntax "abstract DelayDiffEqAlgorithm<:AbstractDDEAlgorithm" at /home/vagrant/.julia/v0.6/DelayDiffEq/src/algorithms.jl:2.
Use "abstract type DelayDiffEqAlgorithm<:AbstractDDEAlgorithm end" instead.

WARNING: deprecated syntax "abstract AbstractMethodOfStepsAlgorithm{constrained}<:DelayDiffEqAlgorithm" at /home/vagrant/.julia/v0.6/DelayDiffEq/src/algorithms.jl:3.
Use "abstract type AbstractMethodOfStepsAlgorithm{constrained}<:DelayDiffEqAlgorithm end" instead.
Test Summary:           | Pass  Total
Discontinuity Tree Test |    1      1
  1.996860 seconds (802.70 k allocations: 38.458 MiB, 0.84% gc time)
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:139
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:139
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
WARNING: max{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use max.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
 [4] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
 [5] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
 [6] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:139
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
 [10] macro expansion at ./test.jl:853 [inlined]
 [11] macro expansion at ./util.jl:237 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
Constrained Timestep: Error During Test
  Got an exception of type LoadError outside of a @test
  LoadError: DimensionMismatch("Cannot left-divide transposed vector by matrix")
  Stacktrace:
   [1] /(::Array{Float64,1}, ::Array{Float64,1}) at ./linalg/generic.jl:776
   [2] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:19 [inlined]
   [3] perform_step! at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/low_order_rk_integrators.jl:8 [inlined]
   [4] perform_step!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/integrator_interface.jl:66
   [5] solve!(::DelayDiffEq.DDEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Float64,1},Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODETestSolution{Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{DelayDiffEq.##14#18{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},DelayDiffEq.##16#20{DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8}},Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.BS3,Array{Float64,1},Float64,Float64,Float64,Array{Array{Float64,1},1},DiffEqBase.ODESolution{Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,false,##3#4},OrdinaryDiffEq.BS3,OrdinaryDiffEq.InterpolationData{##3#4,Array{Array{Float64,1},1},Array{Float64,1},Array{Array{Array{Float64,1},1},1},OrdinaryDiffEq.BS3ConstantCache{Float64,Float64}}},Array{Float64,1},##3#4,Void,OrdinaryDiffEq.BS3ConstantCache{Float64,Float64},OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}},DiffEqBase.ConstantLagDDETestProblem{Array{Float64,1},Float64,Array{Int64,1},false,##3#4,##7#8},OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.DEOptions{Float64,Float64,Float64,Float64,OrdinaryDiffEq.#ODE_DEFAULT_NORM,DiffEqBase.CallbackSet{Tuple{},Tuple{}},OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN,OrdinaryDiffEq.#ODE_DEFAULT_PROG_MESSAGE,OrdinaryDiffEq.#ODE_DEFAULT_UNSTABLE_CHECK,DataStructures.BinaryHeap{Float64,DataStructures.LessThan},Void}}) at /home/vagrant/.julia/v0.6/DelayDiffEq/src/solve.jl:139
   [6] include_from_node1(::String) at ./loading.jl:539
   [7] include(::String) at ./sysimg.jl:14
   [8] macro expansion at /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl:5 [inlined]
   [9] macro expansion at ./test.jl:853 [inlined]
   [10] macro expansion at ./util.jl:237 [inlined]
   [11] anonymous at ./<missing>:?
   [12] include_from_node1(::String) at ./loading.jl:539
   [13] include(::String) at ./sysimg.jl:14
   [14] process_options(::Base.JLOptions) at ./client.jl:305
   [15] _start() at ./client.jl:371
  while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/constrained.jl, in expression starting on line 50
Test Summary:        | Pass  Error  Total
Constrained Timestep |    1      1      2
ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 1 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl, in expression starting on line 5
=============================[ ERROR: DelayDiffEq ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/DelayDiffEq/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.4.7
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing DiffEqDevTools v0.6.0
INFO: Removing DiffEqPDEBase v0.0.3
INFO: Removing Distributions v0.12.1
INFO: Removing EllipsisNotation v0.0.2
INFO: Removing PDMats v0.5.6
INFO: Removing QuadGK v0.1.1
INFO: Removing Rmath v0.1.6
INFO: Removing SHA v0.3.2
INFO: Removing StatsBase v0.13.1
INFO: Removing StatsFuns v0.4.0
INFO: Removing URIParser v0.1.8
INFO: Removing VectorizedRoutines v0.0.2
ERROR: DelayDiffEq had test errors

>>> End of log
