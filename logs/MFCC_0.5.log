>>> 'Pkg.add("MFCC")' log
INFO: Cloning cache of DSP from https://github.com/JuliaDSP/DSP.jl.git
INFO: Cloning cache of MFCC from https://github.com/davidavdav/MFCC.jl.git
INFO: Cloning cache of WAV from https://github.com/dancasimiro/WAV.jl.git
INFO: Installing BinDeps v0.4.2
INFO: Installing Blosc v0.1.6
INFO: Installing DSP v0.0.11
INFO: Installing FileIO v0.1.0
INFO: Installing HDF5 v0.6.4
INFO: Installing JLD v0.6.3
INFO: Installing LegacyStrings v0.1.1
INFO: Installing MFCC v0.1.0
INFO: Installing Polynomials v0.0.5
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.2.0
INFO: Installing URIParser v0.1.5
INFO: Installing WAV v0.8.0
INFO: Building Blosc
INFO: Building HDF5
WARNING: `@linux_only` is deprecated, use `@static if is_linux()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @linux_only(::Any) at ./deprecated.jl:501
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/HDF5/deps/build.jl, in expression starting on line 5
WARNING: bytestring(p::Union{Ptr{Int8},Ptr{UInt8}}) is deprecated, use unsafe_string(p) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in bytestring(::Ptr{UInt8}) at ./deprecated.jl:50
 in #_find_library#50(::Type{T}, ::Function, ::BinDeps.LibraryDependency) at /home/vagrant/.julia/v0.5/BinDeps/src/dependencies.jl:553
 in satisfy!(::BinDeps.LibraryDependency, ::Array{DataType,1}) at /home/vagrant/.julia/v0.5/BinDeps/src/dependencies.jl:781 (repeats 2 times)
 in macro expansion; at /home/vagrant/.julia/v0.5/BinDeps/src/dependencies.jl:836 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated

>>> 'Pkg.test("MFCC")' log
Julia Version 0.5.0-rc1+0
Commit cede539 (2016-08-04 08:48 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1925.48046875 MB free)
Uptime: 3737.0 sec
Load Avg:  1.0498046875  1.0263671875  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     161881 s         60 s      21832 s     145497 s         10 s
#2  3499 MHz      42561 s        104 s      11453 s     309409 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - MFCC                          0.1.0
13 additional packages:
 - BinDeps                       0.4.2
 - Blosc                         0.1.6
 - Compat                        0.8.6
 - DSP                           0.0.11
 - FileIO                        0.1.0
 - HDF5                          0.6.4
 - JLD                           0.6.3
 - LegacyStrings                 0.1.1
 - Polynomials                   0.0.5
 - Reexport                      0.0.3
 - SHA                           0.2.0
 - URIParser                     0.1.5
 - WAV                           0.8.0
INFO: Testing MFCC
WARNING: error while reinitializing value MethodTable(name=:add_format, defs=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Any, Any, Any, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Any, Any}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Union{AbstractArray{T<:Any, 1}, Tuple, String}, Any}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Tuple{Vararg{#T<:Array{UInt8, 1}, #N<:Any}}, Any}, tvars=svec(#sym<:Any, #T<:Array{UInt8, 1}, #N<:Any), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), cache=TypeMapLevel(index_arg1=nothing, arg1=nothing, index_targ=nothing, targ=Array{Any, 1}[
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JLD}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JLD}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMBinary}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMBinary}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGMBinary}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGMBinary}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PPMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PPMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:NRRD}}, String, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:NRRD}}, String, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AndorSIF}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:AndorSIF}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:CRW}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:CRW}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:CUR}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:CUR}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:DCX}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:DCX}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:DOT}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:DOT}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:EPS}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:EPS}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDR}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:HDR}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:ICO}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:ICO}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:INFO}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:INFO}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JP2}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JP2}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PCX}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PCX}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PDB}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PDB}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PDF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PDF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGM}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGM}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PSD}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PSD}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:RGB}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:RGB}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WMF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WMF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WPG}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WPG}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:TGA}}, Tuple{}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:TGA}}, Tuple{}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:GIF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:GIF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PNG}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PNG}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:TIFF}}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:TIFF}}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JPEG}}, Array{UInt8, 1}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JPEG}}, Array{UInt8, 1}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:GLSLShader}}, Tuple{}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:GLSLShader}}, Tuple{}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:OBJ}}, Tuple{}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:OBJ}}, Tuple{}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:2DM}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:2DM}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:OFF}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:OFF}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Function, String}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Any, String}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Function, String), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:FLAC}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:FLAC}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Function, String}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Any, String}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Function, String), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:ABAQUS_INP}}, Tuple{}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:ABAQUS_INP}}, Tuple{}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false)], list=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{T<:Any}, Function, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{T<:Any}, Any, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Function, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=false, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Function, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{T<:Any}, Any, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Function, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=false, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), any=nothing, key=#<null>), max_args=4, kwsorter=#<null>, module=FileIO, =0, =0):
OutOfMemoryError()
WARNING: error while reinitializing value FileIO.add_format(...):
OutOfMemoryError()
WARNING: error while reinitializing value MethodTable(name=:add_saver, defs=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{#sym<:Any}}, Symbol}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(...), isleafsig=false, issimplesig=false, va=false), cache=TypeMapLevel(index_arg1=nothing, arg1=nothing, index_targ=nothing, targ=Array{Any, 1}[
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JLD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JLD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PGMBinary}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PGMBinary}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PPMBinary}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PPMBinary}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:NRRD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:NRRD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:CRW}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:CRW}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:CUR}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:CUR}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:DCX}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:DCX}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:DOT}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:DOT}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:EPS}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:EPS}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:HDR}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:HDR}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JP2}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JP2}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PCX}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PCX}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PDB}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PDB}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PDF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PDF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PGM}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PGM}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PSD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PSD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:RGB}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:RGB}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:WPG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:WPG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:Imagine}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:Imagine}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:TGA}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:TGA}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:GIF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:GIF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PNG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PNG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:TIFF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:TIFF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JPEG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JPEG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:BMP}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:BMP}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:GLSLShader}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:GLSLShader}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:OBJ}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:OBJ}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_ASCII}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_ASCII}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_BINARY}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_BINARY}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:2DM}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:2DM}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:OFF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:OFF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:WAV}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:WAV}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:FLAC}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:FLAC}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:AVI}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:AVI}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:HDF5}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:HDF5}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:STL_ASCII}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:STL_ASCII}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:STL_BINARY}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:STL_BINARY}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:ABAQUS_INP}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:ABAQUS_INP}}, Symbol), isleafsig=false, issimplesig=true, va=false)], list=nothing, any=nothing, key=#<null>), max_args=3, kwsorter=#<null>, module=FileIO, =0, =0):
OutOfMemoryError()
WARNING: error while reinitializing value FileIO.add_saver(...):
OutOfMemoryError()
WARNING: error while reinitializing value MethodTable(name=:add_format, defs=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Any, Any, Any, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Any, Any}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Union{AbstractArray{T<:Any, 1}, Tuple, String}, Any}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Tuple{Vararg{#T<:Array{UInt8, 1}, #N<:Any}}, Any}, tvars=svec(#sym<:Any, #T<:Array{UInt8, 1}, #N<:Any), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), cache=TypeMapLevel(index_arg1=nothing, arg1=nothing, index_targ=nothing, targ=Array{Any, 1}[
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JLD}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JLD}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMBinary}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMBinary}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGMBinary}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGMBinary}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PPMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PPMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:NRRD}}, String, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:NRRD}}, String, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AndorSIF}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:AndorSIF}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:CRW}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:CRW}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:CUR}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:CUR}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:DCX}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:DCX}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:DOT}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:DOT}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:EPS}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:EPS}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDR}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:HDR}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:ICO}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:ICO}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:INFO}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:INFO}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JP2}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JP2}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PCX}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PCX}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PDB}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PDB}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PDF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PDF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGM}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGM}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PSD}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PSD}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:RGB}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:RGB}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WMF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WMF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WPG}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WPG}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:TGA}}, Tuple{}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:TGA}}, Tuple{}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:GIF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:GIF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PNG}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PNG}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:TIFF}}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:TIFF}}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JPEG}}, Array{UInt8, 1}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JPEG}}, Array{UInt8, 1}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:GLSLShader}}, Tuple{}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:GLSLShader}}, Tuple{}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:OBJ}}, Tuple{}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:OBJ}}, Tuple{}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:2DM}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:2DM}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:OFF}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:OFF}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Function, String}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Any, String}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Function, String), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:FLAC}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:FLAC}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Function, String}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Any, String}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Function, String), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:ABAQUS_INP}}, Tuple{}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:ABAQUS_INP}}, Tuple{}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false)], list=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{T<:Any}, Function, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{T<:Any}, Any, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Function, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=false, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Function, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{T<:Any}, Any, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Function, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=false, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), any=nothing, key=#<null>), max_args=4, kwsorter=#<null>, module=FileIO, =0, =0):
OutOfMemoryError()
WARNING: error while reinitializing value FileIO.add_format(...):
OutOfMemoryError()
WARNING: error while reinitializing value MethodTable(name=:add_saver, defs=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{#sym<:Any}}, Symbol}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(...), isleafsig=false, issimplesig=false, va=false), cache=TypeMapLevel(index_arg1=nothing, arg1=nothing, index_targ=nothing, targ=Array{Any, 1}[
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JLD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JLD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PGMBinary}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PGMBinary}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PPMBinary}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PPMBinary}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:NRRD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:NRRD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:CRW}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:CRW}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:CUR}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:CUR}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:DCX}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:DCX}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:DOT}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:DOT}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:EPS}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:EPS}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:HDR}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:HDR}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JP2}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JP2}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PCX}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PCX}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PDB}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PDB}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PDF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PDF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PGM}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PGM}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PSD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PSD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:RGB}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:RGB}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:WPG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:WPG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:Imagine}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:Imagine}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:TGA}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:TGA}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:GIF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:GIF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PNG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PNG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:TIFF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:TIFF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JPEG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JPEG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:BMP}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:BMP}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:GLSLShader}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:GLSLShader}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:OBJ}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:OBJ}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_ASCII}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_ASCII}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_BINARY}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_BINARY}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:2DM}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:2DM}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:OFF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:OFF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:WAV}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:WAV}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:FLAC}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:FLAC}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:AVI}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:AVI}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:HDF5}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:HDF5}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:STL_ASCII}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:STL_ASCII}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:STL_BINARY}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:STL_BINARY}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:ABAQUS_INP}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:ABAQUS_INP}}, Symbol), isleafsig=false, issimplesig=true, va=false)], list=nothing, any=nothing, key=#<null>), max_args=3, kwsorter=#<null>, module=FileIO, =0, =0):
OutOfMemoryError()
WARNING: error while reinitializing value FileIO.add_saver(...):
OutOfMemoryError()
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in @julia_newer_than(::Any, ::Any, ::Any) at /home/vagrant/.julia/v0.5/DSP/src/util.jl:29
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DSP/src/util.jl, in expression starting on line 58
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in collect(::Base.Generator{UnitRange{Int64},DSP.Filters.##19#22}) at ./array.jl:274
 in macro expansion; at /home/vagrant/.julia/v0.5/DSP/src/Filters/filt.jl:355 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 3 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DSP/src/Filters/filt.jl, in expression starting on line 353
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in collect_to!(::Array{Symbol,1}, ::Base.Generator{UnitRange{Int64},DSP.Filters.##19#22}, ::Int64, ::Int64) at ./array.jl:307
 in collect_to_with_first!(::Array{Symbol,1}, ::Symbol, ::Base.Generator{UnitRange{Int64},DSP.Filters.##19#22}, ::Int64) at ./array.jl:294
 in collect(::Base.Generator{UnitRange{Int64},DSP.Filters.##19#22}) at ./array.jl:275
 in macro expansion; at /home/vagrant/.julia/v0.5/DSP/src/Filters/filt.jl:355 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 3 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DSP/src/Filters/filt.jl, in expression starting on line 353
WARNING: Method definition digitalfilter(DSP.Filters.FilterType, DSP.Filters.FilterCoefficients) in module Filters at /home/vagrant/.julia/v0.5/DSP/src/Filters/design.jl:387 overwritten at /home/vagrant/.julia/v0.5/DSP/src/Filters/design.jl:389.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/HDF5.ji for module HDF5.
WARNING: error while reinitializing value MethodTable(name=:add_format, defs=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Any, Any, Any, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Any, Any}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Union{AbstractArray{T<:Any, 1}, Tuple, String}, Any}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{#sym<:Any}}, Tuple{Vararg{#T<:Array{UInt8, 1}, #N<:Any}}, Any}, tvars=svec(#sym<:Any, #T<:Array{UInt8, 1}, #N<:Any), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(...), isleafsig=false, issimplesig=false, va=false), cache=TypeMapLevel(index_arg1=nothing, arg1=nothing, index_targ=nothing, targ=Array{Any, 1}[
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JLD}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JLD}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMBinary}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMBinary}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGMBinary}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGMBinary}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PPMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PPMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:NRRD}}, String, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:NRRD}}, String, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AndorSIF}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:AndorSIF}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:CRW}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:CRW}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:CUR}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:CUR}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:DCX}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:DCX}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:DOT}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:DOT}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:EPS}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:EPS}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDR}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:HDR}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:ICO}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:ICO}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:INFO}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:INFO}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JP2}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JP2}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PCX}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PCX}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PDB}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PDB}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PDF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PDF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PGM}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PGM}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PSD}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PSD}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:RGB}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:RGB}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WMF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WMF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WPG}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WPG}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:TGA}}, Tuple{}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:TGA}}, Tuple{}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:GIF}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:GIF}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PNG}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PNG}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:TIFF}}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:TIFF}}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:JPEG}}, Array{UInt8, 1}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:JPEG}}, Array{UInt8, 1}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PBMText}}, Array{UInt8, 1}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:GLSLShader}}, Tuple{}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:GLSLShader}}, Tuple{}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:OBJ}}, Tuple{}, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:OBJ}}, Tuple{}, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:PLY_BINARY}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:2DM}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:2DM}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:OFF}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:OFF}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Function, String}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Any, String}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:WAV}}, Function, String), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:FLAC}}, String, String}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:FLAC}}, String, String), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Function, String}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Any, String}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:AVI}}, Function, String), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:HDF5}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:STL_ASCII}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Function, Array{String, 1}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Any, Array{String, 1}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:STL_BINARY}}, Function, Array{String, 1}), isleafsig=false, issimplesig=false, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{FileIO.DataFormat{:ABAQUS_INP}}, Tuple{}, Array{String, 1}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{FileIO.DataFormat{:ABAQUS_INP}}, Tuple{}, Array{String, 1}), isleafsig=false, issimplesig=true, va=false)], list=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_format, Type{T<:Any}, Function, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{T<:Any}, Any, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Function, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=false, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Function, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=Tuple{FileIO.#add_format, Type{T<:Any}, Any, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Function, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=false, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{Array{UInt8, 1}, Array{UInt8, 1}, Array{UInt8, 1}}, Array{String, 1}, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Any, 1}, Vararg{Any, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Tuple{}, String, Array{Any, 1}, Vararg{Any, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, Array{String, 1}, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Any, 1}, Vararg{Array{Any, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, Array{UInt8, 1}, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), sig=Tuple{FileIO.#add_format, Type{T<:Any}, String, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_format(FileIO.#add_format, Type{T<:Any}, String, String, Array{Symbol, 1}, Vararg{Array{Symbol, 1}, N<:Any}), isleafsig=false, issimplesig=true, va=true), any=nothing, key=#<null>), max_args=4, kwsorter=#<null>, module=FileIO, =0, =0):
OutOfMemoryError()
WARNING: error while reinitializing value FileIO.add_format(...):
OutOfMemoryError()
WARNING: error while reinitializing value MethodTable(name=:add_saver, defs=TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{#sym<:Any}}, Symbol}, tvars=#sym<:Any, simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(...), isleafsig=false, issimplesig=false, va=false), cache=TypeMapLevel(index_arg1=nothing, arg1=nothing, index_targ=nothing, targ=Array{Any, 1}[
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JLD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JLD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PGMBinary}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PGMBinary}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PPMBinary}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PPMBinary}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:NRRD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:NRRD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:CRW}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:CRW}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:CUR}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:CUR}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:DCX}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:DCX}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:DOT}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:DOT}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:EPS}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:EPS}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:HDR}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:HDR}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JP2}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JP2}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PCX}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PCX}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PDB}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PDB}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PDF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PDF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PGM}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PGM}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PSD}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PSD}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:RGB}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:RGB}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:INFO}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:WPG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:WPG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:Imagine}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:Imagine}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:TGA}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:TGA}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:GIF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:GIF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PNG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PNG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:TIFF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:TIFF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:JPEG}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:JPEG}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:BMP}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:BMP}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:GLSLShader}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:GLSLShader}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:OBJ}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:OBJ}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_ASCII}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_ASCII}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_BINARY}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:PLY_BINARY}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:2DM}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:2DM}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:OFF}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:OFF}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:WAV}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:WAV}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:FLAC}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:FLAC}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:AVI}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:AVI}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:HDF5}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:HDF5}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:STL_ASCII}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:STL_ASCII}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:STL_BINARY}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:STL_BINARY}}, Symbol), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{FileIO.#add_saver, Type{FileIO.DataFormat{:ABAQUS_INP}}, Symbol}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=FileIO.add_saver(FileIO.#add_saver, Type{FileIO.DataFormat{:ABAQUS_INP}}, Symbol), isleafsig=false, issimplesig=true, va=false)], list=nothing, any=nothing, key=#<null>), max_args=3, kwsorter=#<null>, module=FileIO, =0, =0):
OutOfMemoryError()
WARNING: error while reinitializing value FileIO.add_saver(...):
OutOfMemoryError()
WARNING: could not import Base.lastidx into LegacyStrings
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in Polynomials.Poly{Float64}(::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:71
 in DSP.Filters.PolynomialRatio{T<:Number}(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DSP/src/Filters/coefficients.jl:52
 in #mfcc#5(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Float64, ::Int64, ::Float64, ::Int64, ::Symbol, ::Bool, ::Int64, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.5/MFCC/src/mfccs.jl:16
 in (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 in #mfcc#10(::Array{Any,1}, ::Function, ::Array{Float64,1}, ::Float64, ::Symbol) at /home/vagrant/.julia/v0.5/MFCC/src/mfccs.jl:51
 in (::MFCC.#kw##mfcc)(::Array{Any,1}, ::MFCC.#mfcc, ::Array{Float64,1}, ::Float64, ::Symbol) at ./<missing>:0
 in #feacalc#14(::Symbol, ::Symbol, ::Symbol, ::Float64, ::Int64, ::Symbol, ::Float64, ::String, ::Symbol, ::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at /home/vagrant/.julia/v0.5/MFCC/src/feacalc.jl:63
 in (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::Array{Float64,2}) at ./<missing>:0
 in #feacalc#13(::Symbol, ::Symbol, ::Symbol, ::Symbol, ::Symbol, ::Float64, ::Int64, ::Symbol, ::MFCC.#feacalc, ::String) at /home/vagrant/.julia/v0.5/MFCC/src/feacalc.jl:32
 in (::MFCC.#kw##feacalc)(::Array{Any,1}, ::MFCC.#feacalc, ::String) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/MFCC/test/runtests.jl, in expression starting on line 9
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in Polynomials.Poly{Float32}(::Array{Float32,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:71
 in DSP.Filters.PolynomialRatio{T<:Number}(::Array{Float32,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/DSP/src/Filters/coefficients.jl:52
 in deltas(::Array{Float32,2}, ::Int64) at /home/vagrant/.julia/v0.5/MFCC/src/mfccs.jl:74
 in deltas(::Array{Float32,2}) at /home/vagrant/.julia/v0.5/MFCC/src/mfccs.jl:63
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/MFCC/test/runtests.jl, in expression starting on line 15
Tests passed
INFO: MFCC tests passed

>>> End of log
