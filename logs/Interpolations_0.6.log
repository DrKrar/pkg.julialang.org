>>> 'Pkg.add("Interpolations")' log
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing Interpolations v0.3.6
INFO: Installing Ratios v0.0.4
INFO: Installing WoodburyMatrices v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Interpolations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Interpolations")' log
Julia Version 0.6.0-dev.1067
Commit d66df68 (2016-10-21 02:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (2207.7109375 MB free)
Uptime: 43028.0 sec
Load Avg:  0.5693359375  0.40087890625  0.35498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1268459 s       5102 s     130374 s    2680727 s         22 s
#2  3500 MHz     456473 s        128 s      72144 s    3711428 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Interpolations                0.3.6
 - JSON                          0.8.0
4 additional packages:
 - AxisAlgorithms                0.1.5
 - Compat                        0.9.3
 - Ratios                        0.0.4
 - WoodburyMatrices              0.2.0
INFO: Computing test dependencies for Interpolations...
INFO: Installing Calculus v0.1.15
INFO: Installing DualNumbers v0.2.2
INFO: Installing NaNMath v0.2.1
INFO: Testing Interpolations
WARNING: cos{T <: Number}(x::AbstractArray{T}) is deprecated, use cos.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in cos(::FloatRange{Float64}) at ./deprecated.jl:50
 in f(::UnitRange{Int64}) at /home/vagrant/.julia/v0.6/Interpolations/test/b-splines/cubic.jl:60
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Interpolations/test/b-splines/cubic.jl, in expression starting on line 63
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sin(::FloatRange{Float64}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Interpolations/test/scaling/scaling.jl, in expression starting on line 35
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sin(::FloatRange{Float64}) at ./deprecated.jl:50
 in f1(::FloatRange{Float64}) at /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl:6
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl, in expression starting on line 12
WARNING: cos{T <: Number}(x::AbstractArray{T}) is deprecated, use cos.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in cos(::FloatRange{Float64}) at ./deprecated.jl:50
 in f2(::FloatRange{Float64}) at /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl:7
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl, in expression starting on line 12
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sin(::FloatRange{Float64}) at ./deprecated.jl:50
 in f3(::FloatRange{Float64}) at /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl:8
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl, in expression starting on line 12
WARNING: cos{T <: Number}(x::AbstractArray{T}) is deprecated, use cos.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in cos(::FloatRange{Float64}) at ./deprecated.jl:50
 in f3(::FloatRange{Float64}) at /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl:8
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Interpolations/test/scaling/nointerp.jl, in expression starting on line 12
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sin(::LinSpace{Float64}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Interpolations/test/scaling/withextrap.jl, in expression starting on line 7
INFO: Interpolations tests passed
INFO: Removing Calculus v0.1.15
INFO: Removing DualNumbers v0.2.2
INFO: Removing NaNMath v0.2.1

>>> End of log
