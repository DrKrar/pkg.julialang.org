>>> 'Pkg.add("NKLandscapes")' log
INFO: Cloning cache of NKLandscapes from https://github.com/glesica/NKLandscapes.jl.git
INFO: Installing BinDeps v0.4.2
INFO: Installing Calculus v0.1.15
INFO: Installing DataStructures v0.4.5
INFO: Installing Distributions v0.10.2
INFO: Installing FactCheck v0.4.3
INFO: Installing NKLandscapes v0.3.0
INFO: Installing PDMats v0.4.2
INFO: Installing Rmath v0.1.2
INFO: Installing SHA v0.2.1
INFO: Installing StatsBase v0.9.0
INFO: Installing StatsFuns v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of NKLandscapes
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NKLandscapes")' log
Julia Version 0.5.0-rc2+0
Commit 0350e57 (2016-08-12 11:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (749.1796875 MB free)
Uptime: 8334.0 sec
Load Avg:  0.93994140625  0.91259765625  1.10107421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3512 MHz     423066 s         70 s      51643 s     250888 s         12 s
#2  3512 MHz     138015 s        105 s      26946 s     642221 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - NKLandscapes                  0.3.0
12 additional packages:
 - BinDeps                       0.4.2
 - Calculus                      0.1.15
 - Compat                        0.8.7
 - DataStructures                0.4.5
 - Distributions                 0.10.2
 - FactCheck                     0.4.3
 - PDMats                        0.4.2
 - Rmath                         0.1.2
 - SHA                           0.2.1
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - URIParser                     0.1.6
INFO: Testing NKLandscapes
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Rmath.ji for module Rmath.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/StatsFuns.ji for module StatsFuns.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Distributions.ji for module Distributions.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/StatsBase.ji for module StatsBase.
NKLandscapes
  > genotype.jl
    > NKLandscape(4, 1)
      > Genotype
      > fitness(...)
      > rand(::Type{Genotype}, ...)
      > zeros(::Type{Genotype}, ...)
    > NKqLandscape(4, 1, 2)
      > Genotype
      > fitness(...)
      > rand(::Type{Genotype}, ...)
      > zeros(::Type{Genotype}, ...)
    > NKpLandscape(4, 1, 0.9)
      > Genotype
      > fitness(...)
      > rand(::Type{Genotype}, ...)
      > zeros(::Type{Genotype}, ...)
  > landscape.jl
    > NKLandscape
      > when near=true
    > NKqLandscape
      > when near=true
    > NKpLandscape
      > when near=true
  > metapopulation.jl
    > NKLandscape(4, 1)
      > popsize(...)
      > popct(...)
      > popfits(...)
    > NKqLandscape(4, 1, 2)
      > popsize(...)
      > popct(...)
      > popfits(...)
    > NKpLandscape(4, 1, 0.9)
      > popsize(...)
      > popct(...)
      > popfits(...)
  > migration.jl
    > NKLandscape(96, 1)
      > migrate(...)
        > should respect migration probability
        > should respect migration count
      > linmigrate(...)
        > should respect migration probability
        > should respect migration count
        > should only migrate left and right
    > NKqLandscape(96, 1, 2)
      > migrate(...)
        > should respect migration probability
        > should respect migration count
      > linmigrate(...)
        > should respect migration probability
        > should respect migration count
        > should only migrate left and right
    > NKpLandscape(96, 1, 0.9)
      > migrate(...)
        > should respect migration probability
        > should respect migration count
      > linmigrate(...)
        > should respect migration probability
        > should respect migration count
        > should only migrate left and right
  > mutation.jl
    > NKLandscape(4, 1)
      > bwmutate(...)
      > bwmutate(::Genotype)
      > bsmutate(...)
      > bsmutate(::Genotype)
      > bsmutate!(::Genotype)
    > NKqLandscape(4, 1, 2)
      > bwmutate(...)
      > bwmutate(::Genotype)
      > bsmutate(...)
      > bsmutate(::Genotype)
      > bsmutate!(::Genotype)
    > NKpLandscape(4, 1, 0.9)
      > bwmutate(...)
      > bwmutate(::Genotype)
      > bsmutate(...)
      > bsmutate(::Genotype)
      > bsmutate!(::Genotype)
  > neighbors.jl
    > NKLandscape(4, 1)
      > number_neighbors(...)
      > all_neighbors(...)
      > random_neighbor(...)
      > neutral_neighbors(...)
      > fitter_neighbors(...)
      > fitness_range_neighbors(...)
      > fittest_neighbors(...)
      > fittest_neighbor(...)
    > NKqLandscape(4, 1, 2)
      > number_neighbors(...)
      > all_neighbors(...)
      > random_neighbor(...)
      > neutral_neighbors(...)
      > fitter_neighbors(...)
      > fitness_range_neighbors(...)
      > fittest_neighbors(...)
      > fittest_neighbor(...)
    > NKpLandscape(4, 1, 0.9)
      > number_neighbors(...)
      > all_neighbors(...)
      > random_neighbor(...)
      > neutral_neighbors(...)
      > fitter_neighbors(...)
      > fitness_range_neighbors(...)
      > fittest_neighbors(...)
      > fittest_neighbor(...)
  > population.jl
    > NKLandscape(4, 1)
      > popsize(...)
      > popfits(...)
    > NKqLandscape(4, 1, 2)
      > popsize(...)
      > popfits(...)
    > NKpLandscape(4, 1, 0.9)
      > popsize(...)
      > popfits(...)
  > walks.jl
    > NKLandscape(4, 1)
      > Adaptive walks
        > Random adaptive walk should terminate and move uphill
ERROR: LoadError: LoadError: LoadError: error in type inference due to #265
 in error(::String) at ./error.jl:21
 in next at ./generator.jl:26 [inlined]
 in copy!(::Array{Int64,1}, ::Base.Generator{Tuple{Array{NKLandscapes.Genotype,1},NKLandscapes.Genotype{NKLandscapes.NKLandscape}},Base.##82#84}) at ./abstractarray.jl:469
 in _collect(::Type{Int64}, ::Base.Generator{Tuple{Array{NKLandscapes.Genotype,1},NKLandscapes.Genotype{NKLandscapes.NKLandscape}},Base.##82#84}, ::Base.HasLength) at ./array.jl:247
 in cat_t(::Int64, ::Type{T}, ::Array{NKLandscapes.Genotype,1}, ::Vararg{Any,N}) at ./abstractarray.jl:1059
 in vcat(::Array{NKLandscapes.Genotype,1}, ::NKLandscapes.Genotype{NKLandscapes.NKLandscape}) at ./abstractarray.jl:1135
 in add_step!(::NKLandscapes.Walk, ::NKLandscapes.Genotype{NKLandscapes.NKLandscape}) at /home/vagrant/.julia/v0.5/NKLandscapes/src/walks.jl:36
 in random_adaptive_walk(::NKLandscapes.Genotype{NKLandscapes.NKLandscape}) at /home/vagrant/.julia/v0.5/NKLandscapes/src/walks.jl:55
 in (::#test_adaptive_walk#490)(::NKLandscapes.#random_adaptive_walk, ::NKLandscapes.Genotype{NKLandscapes.NKLandscape}) at /home/vagrant/.julia/v0.5/NKLandscapes/test/walks.jl:32
 in context(::##478#495{#test_adaptive_walk#490}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##473#489)() at /home/vagrant/.julia/v0.5/NKLandscapes/test/walks.jl:39
 in context(::##473#489, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##472#488)() at /home/vagrant/.julia/v0.5/NKLandscapes/test/walks.jl:30
 in context(::##472#488, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##471#487)() at /home/vagrant/.julia/v0.5/NKLandscapes/test/walks.jl:29
 in context(::##471#487, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in include_from_node1(::String) at ./loading.jl:426
 in (::##1#2)() at /home/vagrant/.julia/v0.5/NKLandscapes/test/unit.jl:14
 in facts(::##1#2, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/NKLandscapes/test/walks.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.5/NKLandscapes/test/unit.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.5/NKLandscapes/test/runtests.jl, in expression starting on line 3
============================[ ERROR: NKLandscapes ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/NKLandscapes/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: NKLandscapes had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
