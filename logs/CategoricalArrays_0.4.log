>>> 'Pkg.add("CategoricalArrays")' log
INFO: Cloning cache of CategoricalArrays from https://github.com/nalimilan/CategoricalArrays.jl.git
INFO: Installing CategoricalArrays v0.0.2
INFO: Package database updated

>>> 'Pkg.test("CategoricalArrays")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1129.4296875 MB free)
Uptime: 10125.0 sec
Load Avg:  0.958984375  1.0634765625  1.05908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     414154 s        388 s      50993 s     455387 s         13 s
#2  3500 MHz     311277 s       6445 s      50945 s     606484 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - CategoricalArrays             0.0.2
 - JSON                          0.7.0
1 additional packages:
 - Compat                        0.8.8
INFO: Computing test dependencies for CategoricalArrays...
INFO: Installing NullableArrays v0.0.7
INFO: Installing Reexport v0.0.3
INFO: Testing CategoricalArrays
WARNING: Method definition convert(Type{Array{#T<:Any, N<:Any}}, AbstractArray{#S<:Any, #n<:Any}) in module Base at array.jl:240 overwritten in module CategoricalArrays at /home/vagrant/.julia/v0.4/CategoricalArrays/src/CategoricalArrays.jl:18.
WARNING: Method definition convert(Type{Array{#T<:Any, #n<:Any}}, AbstractArray{#S<:Any, #n<:Any}) in module Base at array.jl:241 overwritten in module CategoricalArrays at /home/vagrant/.julia/v0.4/CategoricalArrays/src/CategoricalArrays.jl:19.
WARNING: Method definition convert(Type{Base.Nullable}, #T<:Any) in module Base at nullable.jl:19 overwritten in module CategoricalArrays at /home/vagrant/.julia/v0.4/CategoricalArrays/src/CategoricalArrays.jl:21.
WARNING: New definition 
    convert(Type{CategoricalArrays.NominalPool{#S<:Any, #R<:Any, V<:Any}}, CategoricalArrays.NominalPool) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/pool.jl:63
is ambiguous with: 
    convert(Type{CategoricalArrays.NominalPool{#T<:Any, #R<:Any, V<:Any}}, CategoricalArrays.NominalPool{#T<:Any, #R<:Any, V<:Any}) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/pool.jl:60.
To fix, define 
    convert(Type{CategoricalArrays.NominalPool{#S<:Any, #R<:Any, V<:Any}}, CategoricalArrays.NominalPool{#S<:Any, _<:Integer, V<:Any})
before the new definition.
WARNING: New definition 
    convert(Type{CategoricalArrays.OrdinalPool{#S<:Any, #R<:Any, V<:Any}}, CategoricalArrays.OrdinalPool) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/pool.jl:63
is ambiguous with: 
    convert(Type{CategoricalArrays.OrdinalPool{#T<:Any, #R<:Any, V<:Any}}, CategoricalArrays.OrdinalPool{#T<:Any, #R<:Any, V<:Any}) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/pool.jl:60.
To fix, define 
    convert(Type{CategoricalArrays.OrdinalPool{#S<:Any, #R<:Any, V<:Any}}, CategoricalArrays.OrdinalPool{#S<:Any, _<:Integer, V<:Any})
before the new definition.
WARNING: New definition 
    convert(Type{#S<:Any}, CategoricalArrays.CategoricalValue{#T<:Any, R<:Integer}) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/value.jl:28
is ambiguous with: 
    convert(Type{Base.Nullable{#T<:Any}}, #T<:Any) at nullable.jl:18.
To fix, define 
    convert(Type{Base.Nullable{_<:CategoricalArrays.CategoricalValue{#T<:Any, R<:Integer}}}, _<:CategoricalArrays.CategoricalValue{#T<:Any, R<:Integer})
before the new definition.
WARNING: New definition 
    convert(Type{CategoricalArrays.NominalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NominalArray) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:92
is ambiguous with: 
    convert(Type{CategoricalArrays.NominalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NominalArray{#T<:Any, #N<:Any, #R<:Any}) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:59.
To fix, define 
    convert(Type{CategoricalArrays.NominalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NominalArray{#T<:Any, #N<:Any, _<:Integer})
before the new definition.
WARNING: New definition 
    convert(Type{CategoricalArrays.OrdinalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.OrdinalArray) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:92
is ambiguous with: 
    convert(Type{CategoricalArrays.OrdinalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.OrdinalArray{#T<:Any, #N<:Any, #R<:Any}) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:59.
To fix, define 
    convert(Type{CategoricalArrays.OrdinalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.OrdinalArray{#T<:Any, #N<:Any, _<:Integer})
before the new definition.
WARNING: New definition 
    convert(Type{CategoricalArrays.NullableNominalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NullableNominalArray) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:92
is ambiguous with: 
    convert(Type{CategoricalArrays.NullableNominalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NullableNominalArray{#T<:Any, #N<:Any, #R<:Any}) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:59.
To fix, define 
    convert(Type{CategoricalArrays.NullableNominalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NullableNominalArray{#T<:Any, #N<:Any, _<:Integer})
before the new definition.
WARNING: New definition 
    convert(Type{CategoricalArrays.NullableOrdinalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NullableOrdinalArray) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:92
is ambiguous with: 
    convert(Type{CategoricalArrays.NullableOrdinalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NullableOrdinalArray{#T<:Any, #N<:Any, #R<:Any}) at /home/vagrant/.julia/v0.4/CategoricalArrays/src/array.jl:59.
To fix, define 
    convert(Type{CategoricalArrays.NullableOrdinalArray{#T<:Any, #N<:Any, #R<:Any}}, CategoricalArrays.NullableOrdinalArray{#T<:Any, #N<:Any, _<:Integer})
before the new definition.
Running tests:
	[1m[32mPASSED[0m: 01_typedef.jl
	[1m[32mPASSED[0m: 02_buildorder.jl
	[1m[32mPASSED[0m: 03_buildfields.jl
	[1m[32mPASSED[0m: 03_constructors.jl
	[1m[32mPASSED[0m: 05_convert.jl
	[1m[32mPASSED[0m: 06_show.jl
	[1m[32mPASSED[0m: 06_length.jl
	[1m[32mPASSED[0m: 07_levels.jl
	[1m[32mPASSED[0m: 08_equality.jl
	[1m[32mPASSED[0m: 09_hash.jl
	[1m[32mPASSED[0m: 10_isless.jl
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/11_array.jl:10
	[1m[32mPASSED[0m: 11_array.jl
WARNING: New definition 
    promote_op(Type{#T<:Any}, Any) at /home/vagrant/.julia/v0.4/NullableArrays/src/operators.jl:10
is ambiguous with: 
    promote_op(Any, Type{#R<:Number}) at /home/vagrant/.julia/v0.4/NullableArrays/src/operators.jl:12.
To fix, define 
    promote_op(Type{#T<:Any}, Type{#R<:Number})
before the new definition.
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CategoricalArrays/test/12_nullablearray.jl:14
	[1m[32mPASSED[0m: 12_nullablearray.jl
INFO: CategoricalArrays tests passed
INFO: Removing NullableArrays v0.0.7
INFO: Removing Reexport v0.0.3

>>> End of log
