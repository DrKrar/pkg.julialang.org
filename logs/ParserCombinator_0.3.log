>>> 'Pkg.add("ParserCombinator")' log
INFO: Cloning cache of AutoHashEquals from git://github.com/andrewcooke/AutoHashEquals.jl.git
INFO: Cloning cache of ParserCombinator from git://github.com/andrewcooke/ParserCombinator.jl.git
INFO: Installing AutoHashEquals v0.0.4
INFO: Installing ParserCombinator v1.2.0
INFO: Package database updated

>>> 'Pkg.test("ParserCombinator")' log
INFO: Testing ParserCombinator
names ok
one level
  1:ab         00 Trace->Dot
  2:b          00 Trace<-{'a'}
multiple
  2:b          00 Trace->Depth
  2:b          01  Depth->Dot
  3:           01  Depth<-{'b'}
  3:           01  Depth->Dot
  3:           01  Depth<-!!!
  3:           00 Trace<-{'b'}
  2:b          00 Trace->Depth
  2:b          01  Depth->Dot
  2:b          01  Depth<-!!!
  2:b          00 Trace<-{}
debug ok
0 0 aaa r"a{0,0}"
2 2  r"a{2,2}?"
3 4 a r"a{3,4}"
1 3 a r"a{1,3}?"
1 2 aaaa r"a{1,2}"
2 3 aaaa r"a{2,3}?"
0 2 aaa r"a{0,2}"
3 4 aa r"a{3,4}?"
1 1 a r"a{1,1}"
2 4 aaaa r"a{2,4}?"
0 0 aa r"a{0,0}"
1 2 a r"a{1,2}?"
0 0 a r"a{0,0}"
2 2 aaa r"a{2,2}?"
0 0  r"a{0,0}"
2 3 aa r"a{2,3}?"
2 3 aaa r"a{2,3}"
2 4 a r"a{2,4}?"
2 3 aaaa r"a{2,3}"
1 3 aaaa r"a{1,3}?"
tests ok
greedy true
NoCache
elapsed time: 0.109038764 seconds (5255884 bytes allocated)
elapsed time: 0.007170235 seconds (792272 bytes allocated)
n results: 35
max depth: 5
max iter: 4
n calls: 323
Cache
elapsed time: 0.158041608 seconds (2335984 bytes allocated)
elapsed time: 0.018454175 seconds (885272 bytes allocated)
n results: 35
max depth: 5
max iter: 4
n calls: 232
slow ok
case ok
  1:1+2*3/4    00 Trace->all
  1:1+2*3/4    01  all->sum
  1:1+2*3/4    02   TransSuccess->Seq
  1:1+2*3/4    03    Seq->prd
  1:1+2*3/4    04     prd->Seq
  1:1+2*3/4    05      Seq->neg
  1:1+2*3/4    06       Alt->Seq
  1:1+2*3/4    07        Seq->Drop
  1:1+2*3/4    08         Drop->Equal
  2:+2*3/4     08         Drop<-!!!
  2:+2*3/4     07        Seq<-!!!
  1:1+2*3/4    06       Alt<-!!!
  1:1+2*3/4    06       Alt->TransSuccess
  1:1+2*3/4    07        TransSuccess->Pattern
  2:+2*3/4     07        TransSuccess<-{"1"}
  2:+2*3/4     06       Alt<-{1.0}
  2:+2*3/4     05      Seq<-{1.0}
  2:+2*3/4     05      Seq->Depth
  2:+2*3/4     06       Depth->Alt
  2:+2*3/4     07        Alt->mul
  2:+2*3/4     08         mul->Drop
  2:+2*3/4     09          Drop->Equal
  3:2*3/4      09          Drop<-!!!
  3:2*3/4      08         mul<-!!!
  2:+2*3/4     07        Alt<-!!!
  2:+2*3/4     07        Alt->div
  2:+2*3/4     08         div->Seq
  2:+2*3/4     09          Seq->Drop
  2:+2*3/4     10 Drop->Equal
  3:2*3/4      10 Drop<-!!!
  3:2*3/4      09          Seq<-!!!
  2:+2*3/4     08         div<-!!!
  2:+2*3/4     07        Alt<-!!!
  2:+2*3/4     06       Depth<-!!!
  2:+2*3/4     05      Seq<-{}
  2:+2*3/4     04     prd<-{1.0}
  2:+2*3/4     03    Seq<-{Prd({1.0})}
  2:+2*3/4     03    Seq->Depth
  2:+2*3/4     04     Depth->Alt
  2:+2*3/4     05      Alt->add
  2:+2*3/4     06       add->Drop
  2:+2*3/4     07        Drop->Equal
  3:2*3/4      07        Drop<-{"+"}
  3:2*3/4      06       add<-{}
  3:2*3/4      06       add->prd
  3:2*3/4      07        prd->Seq
  3:2*3/4      08         Seq->neg
  3:2*3/4      09          Alt->Seq
  3:2*3/4      10 Seq->Drop
  3:2*3/4      11  Drop->Equal
  4:*3/4       11  Drop<-!!!
  4:*3/4       10 Seq<-!!!
  3:2*3/4      09          Alt<-!!!
  3:2*3/4      09          Alt->TransSuccess
  3:2*3/4      10 TransSuccess->Pattern
  4:*3/4       10 TransSuccess<-{"2"}
  4:*3/4       09          Alt<-{2.0}
  4:*3/4       08         Seq<-{2.0}
  4:*3/4       08         Seq->Depth
  4:*3/4       09          Depth->Alt
  4:*3/4       10 Alt->mul
  4:*3/4       11  mul->Drop
  4:*3/4       12   Drop->Equal
  5:3/4        12   Drop<-{"*"}
  5:3/4        11  mul<-{}
  5:3/4        11  mul->neg
  5:3/4        12   Alt->Seq
  5:3/4        13    Seq->Drop
  5:3/4        14     Drop->Equal
  6:/4         14     Drop<-!!!
  6:/4         13    Seq<-!!!
  5:3/4        12   Alt<-!!!
  5:3/4        12   Alt->TransSuccess
  5:3/4        13    TransSuccess->Pattern
  6:/4         13    TransSuccess<-{"3"}
  6:/4         12   Alt<-{3.0}
  6:/4         11  mul<-{3.0}
  6:/4         10 Alt<-{3.0}
  6:/4         09          Depth<-{3.0}
  6:/4         09          Depth->Alt
  6:/4         10 Alt->mul
  6:/4         11  mul->Drop
  6:/4         12   Drop->Equal
  7:4          12   Drop<-!!!
  7:4          11  mul<-!!!
  6:/4         10 Alt<-!!!
  6:/4         10 Alt->div
  6:/4         11  div->Seq
  6:/4         12   Seq->Drop
  6:/4         13    Drop->Equal
  7:4          13    Drop<-{"/"}
  7:4          12   Seq<-{}
  7:4          12   Seq->neg
  7:4          13    Alt->Seq
  7:4          14     Seq->Drop
  7:4          15      Drop->Equal
  8:           15      Drop<-!!!
  8:           14     Seq<-!!!
  7:4          13    Alt<-!!!
  7:4          13    Alt->TransSuccess
  7:4          14     TransSuccess->Pattern
  8:           14     TransSuccess<-{"4"}
  8:           13    Alt<-{4.0}
  8:           12   Seq<-{4.0}
  8:           11  div<-{4.0}
  8:           10 Alt<-{Inv(4.0)}
  8:           09          Depth<-{Inv(4.0)}
  8:           09          Depth->Alt
  8:           10 Alt->mul
  8:           11  mul->Drop
  8:           12   Drop->Equal
  8:           12   Drop<-!!!
  8:           11  mul<-!!!
  8:           10 Alt<-!!!
  8:           10 Alt->div
  8:           11  div->Seq
  8:           12   Seq->Drop
  8:           13    Drop->Equal
  8:           13    Drop<-!!!
  8:           12   Seq<-!!!
  8:           11  div<-!!!
  8:           10 Alt<-!!!
  8:           09          Depth<-!!!
  8:           08         Seq<-{3.0,Inv(4.0)}
  8:           07        prd<-{2.0,3.0,Inv(4.0)}
  8:           06       add<-{Prd({2.0,3.0,Inv(4.0)})}
  8:           05      Alt<-{Prd({2.0,3.0,Inv(4.0)})}
  8:           04     Depth<-{Prd({2.0,3.0,Inv(4.0)})}
  8:           04     Depth->Alt
  8:           05      Alt->add
  8:           06       add->Drop
  8:           07        Drop->Equal
  8:           07        Drop<-!!!
  8:           06       add<-!!!
  8:           05      Alt<-!!!
  8:           05      Alt->sub
  8:           06       sub->Seq
  8:           07        Seq->Drop
  8:           08         Drop->Equal
  8:           08         Drop<-!!!
  8:           07        Seq<-!!!
  8:           06       sub<-!!!
  8:           05      Alt<-!!!
  8:           04     Depth<-!!!
  8:           03    Seq<-{Prd({2.0,3.0,Inv(4.0)})}
  8:           02   TransSuccess<-{Prd({1.0}),Prd({2.0,3.0,Inv(4.0)})}
  8:           01  all<-{Sum({Prd({1.0}),Prd({2.0,3.0,Inv(4.0)})})}
  8:           01  all->Eos
  8:           01  all<-{}
  8:           00 Trace<-{Sum({Prd({1.0}),Prd({2.0,3.0,Inv(4.0)})})}
1 = 1
-1 = -1
1+1 = 2
1-1 = 0
-1-1 = -2
1.0 = 1.0
-1.0 = -1.0
--1.0 = 1.0
1+2 = 3.0
1+2*3/4 = 2.5
Neg(Prd({7.0,Inv(0.0),Inv(2.0),Inv(Neg(0.0))})) Inf Inf
Inv(Neg(0.0)) -Inf
Inv(Prd({Neg(Sum({Prd({0.0})}))})) -Inf
Inv(Sum({Prd({Neg(Sum({Prd({0.0})}))})})) -Inf
Neg(Prd({7.0,Inv(0.0),Inv(2.0),Inv(Sum({Prd({Neg(Sum({Prd({0.0})}))})})),3.0})) Inf Inf
Inf Sum({Prd({-9.0}),Neg(Prd({7.0,Inv(0.0),Inv(2.0),Inv(Sum({Prd({Neg(Sum({Prd({0.0})}))})})),3.0})),Neg(Prd({7.0,Inv(Neg(Sum({Prd({9.0}),Prd({5.0})})))})),Prd({5.0}),Neg(Prd({7.0}))}) Inf
expr -4.0-2.0/6.0*(9.0)-8.0/7.0-7.0/(-2.0+1.0*3.0)
expr (-1.0/7.0*2.0/1.0)/-(4.0/9.0-7.0)*-6.0*5.0*5.0/8.0*5.0
expr 6.0*9.0/6.0+3.0+3.0*9.0/-6.0*-3.0/1.0+-1.0+6.0+9.0-0.0
expr (8.0/9.0-4.0+7.0)+1.0-3.0/8.0/2.0-8.0*6.0/(2.0/9.0-3.0)+-(6.0)+-2.0
expr 1.0/6.0*1.0
expr (9.0)-((8.0))+6.0*3.0*7.0*3.0+0.0
expr (5.0)+8.0+5.0*5.0+5.0/7.0+3.0
expr 9.0+5.0-3.0*1.0+2.0/7.0+2.0-4.0/5.0-0.0+(6.0)*1.0*5.0+9.0
expr 7.0+4.0/2.0/7.0-3.0-1.0+((-4.0-8.0))
expr -8.0-9.0+2.0+3.0-0.0+7.0-5.0-9.0-(5.0-3.0)/8.0+1.0-((8.0))/9.0/1.0*0.0
expr -1.0-5.0-0.0/5.0-4.0+(8.0-1.0*6.0)*6.0
expr 0.0+0.0*9.0/-6.0+1.0*-5.0+7.0-9.0+1.0*(7.0)/3.0+3.0/4.0
expr (1.0-3.0/3.0)-3.0-2.0*(4.0)+3.0*3.0-6.0
expr -7.0+4.0/1.0*(5.0/0.0)-4.0+9.0+6.0+2.0-5.0*7.0
expr 5.0+6.0/((8.0))+8.0
expr 4.0*1.0+-0.0-0.0+2.0-1.0
expr 0.0-6.0-7.0
expr 3.0*8.0/9.0-8.0+4.0-9.0/(0.0)/-6.0*8.0*6.0*5.0*7.0
expr (5.0*4.0+5.0)-6.0*5.0
expr 5.0+9.0
calc ok
INFO: ParserCombinator tests passed
INFO: No packages to install, update or remove

>>> End of log
