>>> 'Pkg.add("StringDistances")' log
INFO: Cloning cache of StringDistances from https://github.com/matthieugomez/StringDistances.jl.git
INFO: Installing Distances v0.3.1
INFO: Installing Iterators v0.1.9
INFO: Installing StringDistances v0.1.0
INFO: Package database updated
INFO: Nothing to be done

>>> 'Pkg.test("StringDistances")' log
Julia Version 0.5.0-rc0+0
Commit 0030eec* (2016-07-26 20:22 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (803.15234375 MB free)
Uptime: 25694.0 sec
Load Avg:  0.86279296875  0.95703125  0.9482421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1195646 s       5867 s     203051 s     858164 s         75 s
#2  3499 MHz     464264 s       1548 s     116225 s    1871176 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - StringDistances               0.1.0
3 additional packages:
 - Compat                        0.8.6
 - Distances                     0.3.1
 - Iterators                     0.1.9
INFO: Testing StringDistances
Running tests:
	[1m[31mFAILED[0m: distances.jl
LoadError: MethodError: no method matching nextind(::Base.UTF8proc.GraphemeIterator{String}, ::Tuple{Int64,Base.RefValue{Int32}})
Closest candidates are:
  nextind(::Base.UTF8proc.GraphemeIterator{S<:AbstractString}, !Matched::Integer) at /home/vagrant/.julia/v0.5/StringDistances/src/StringDistances.jl:41
 in macro expansion; at /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl:13 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/StringDistances/test/distances.jl, in expression starting on line 147ERROR: LoadError: LoadError: MethodError: no method matching nextind(::Base.UTF8proc.GraphemeIterator{String}, ::Tuple{Int64,Base.RefValue{Int32}})
Closest candidates are:
  nextind(::Base.UTF8proc.GraphemeIterator{S<:AbstractString}, !Matched::Integer) at /home/vagrant/.julia/v0.5/StringDistances/src/StringDistances.jl:41
 in evaluate(::StringDistances.Jaro, ::Base.UTF8proc.GraphemeIterator{String}, ::Base.UTF8proc.GraphemeIterator{String}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/StringDistances/src/distances/edit.jl:177
 in evaluate(::StringDistances.Jaro, ::Base.UTF8proc.GraphemeIterator{String}, ::Base.UTF8proc.GraphemeIterator{String}) at /home/vagrant/.julia/v0.5/StringDistances/src/StringDistances.jl:81
 in macro expansion; at /home/vagrant/.julia/v0.5/StringDistances/test/distances.jl:150 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl:9 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/StringDistances/test/distances.jl, in expression starting on line 147
while loading /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl, in expression starting on line 7
===========================[ ERROR: StringDistances ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: StringDistances had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
