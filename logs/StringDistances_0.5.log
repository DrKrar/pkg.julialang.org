>>> 'Pkg.add("StringDistances")' log
INFO: Cloning cache of StringDistances from https://github.com/matthieugomez/StringDistances.jl.git
INFO: Installing Iterators v0.1.9
INFO: Installing StringDistances v0.1.0
INFO: Package database updated

>>> 'Pkg.test("StringDistances")' log
Julia Version 0.5.0-dev+5453
Commit 1fd440e (2016-07-15 23:33 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing StringDistances
Running tests:
	[1m[31mFAILED[0m: distances.jl
LoadError: MethodError: no method matching nextind(::Base.UTF8proc.GraphemeIterator{String}, ::Tuple{Int64,Base.RefValue{Int32}})
Closest candidates are:
  nextind(::Base.UTF8proc.GraphemeIterator{S<:AbstractString}, !Matched::Integer)
 in macro expansion; at /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl:13 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/StringDistances/test/distances.jl, in expression starting on line 147ERROR: LoadError: LoadError: MethodError: no method matching nextind(::Base.UTF8proc.GraphemeIterator{String}, ::Tuple{Int64,Base.RefValue{Int32}})
Closest candidates are:
  nextind(::Base.UTF8proc.GraphemeIterator{S<:AbstractString}, !Matched::Integer)
 in evaluate(::StringDistances.Jaro, ::Base.UTF8proc.GraphemeIterator{String}, ::Base.UTF8proc.GraphemeIterator{String}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.5/StringDistances/src/distances/edit.jl:177
 in evaluate(::StringDistances.Jaro, ::Base.UTF8proc.GraphemeIterator{String}, ::Base.UTF8proc.GraphemeIterator{String}) at /home/vagrant/.julia/v0.5/StringDistances/src/StringDistances.jl:81
 in macro expansion; at /home/vagrant/.julia/v0.5/StringDistances/test/distances.jl:150 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl:9 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/StringDistances/test/distances.jl, in expression starting on line 147
while loading /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl, in expression starting on line 7
===========================[ ERROR: StringDistances ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/StringDistances/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: StringDistances had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:736
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
