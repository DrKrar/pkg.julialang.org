>>> 'Pkg.add("AffineInvariantMCMC")' log
INFO: Cloning cache of AffineInvariantMCMC from https://github.com/madsjulia/AffineInvariantMCMC.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Cloning cache of RobustPmap from https://github.com/madsjulia/RobustPmap.jl.git
INFO: Installing AffineInvariantMCMC v0.1.3
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing FileIO v0.2.2
INFO: Installing HDF5 v0.7.3
INFO: Installing JLD v0.6.9
INFO: Installing LegacyStrings v0.2.0
INFO: Installing RobustPmap v0.1.12
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.7
INFO: Building Blosc
INFO: Building HDF5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T, 1}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Tuple{BinDeps.DependencyProvider,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:50
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:236
 [14] process_options(::Base.JLOptions) at ./client.jl:281
 [15] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 6
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T, 1}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Tuple{BinDeps.DependencyHelper,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:50
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:236
 [14] process_options(::Base.JLOptions) at ./client.jl:281
 [15] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 6
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] macro expansion at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:12
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:236
 [12] process_options(::Base.JLOptions) at ./client.jl:281
 [13] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated

>>> 'Pkg.test("AffineInvariantMCMC")' log
Julia Version 0.6.0-dev.2511
Commit e0ab6a8 (2017-02-01 19:43 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (714.34375 MB free)
Uptime: 925.0 sec
Load Avg:  0.96728515625  0.75537109375  0.3916015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      27732 s         68 s       3742 s      53415 s          3 s
#2  3500 MHz       8778 s        108 s       2204 s      79333 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AffineInvariantMCMC           0.1.3
 - JSON                          0.8.2
10 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - Compat                        0.14.0
 - FileIO                        0.2.2
 - HDF5                          0.7.3
 - JLD                           0.6.9
 - LegacyStrings                 0.2.0
 - RobustPmap                    0.1.12
 - SHA                           0.3.0
 - URIParser                     0.1.7
INFO: Testing AffineInvariantMCMC
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T, 1}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{UInt64}, ::Int64) at ./deprecated.jl:50
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] anonymous at ./<missing>:2
 [6] eval(::Module, ::Any) at ./boot.jl:236
 [7] process_options(::Base.JLOptions) at ./client.jl:281
 [8] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/Blosc/src/Blosc.jl, in expression starting on line 101

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T, 1}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Pair}, ::Int64) at ./deprecated.jl:50
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:236
 [9] process_options(::Base.JLOptions) at ./client.jl:281
 [10] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/FileIO/src/query.jl, in expression starting on line 55
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T, 1}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Pair}, ::Int64) at ./deprecated.jl:50
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:236
 [9] process_options(::Base.JLOptions) at ./client.jl:281
 [10] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/FileIO/src/query.jl, in expression starting on line 57
WARNING: could not import Base.lastidx into LegacyStrings
WARNING: @test_approx_eq_eps is deprecated, use `@test mean(flatchain[i, :]) ≈ means[i] atol=0.1 * stds[i]` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1720
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:304
 [6] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 12
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:50
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:304
 [9] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] flattenmcmcarray(::Array{Float64,3}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:96
 [4] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:25
 [5] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:304
 [10] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:50
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:304
 [9] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] flattenmcmcarray(::Array{Float64,3}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:96
 [4] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:25
 [5] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:304
 [10] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:50
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:304
 [9] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] flattenmcmcarray(::Array{Float64,3}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:96
 [4] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:25
 [5] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:304
 [10] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:50
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:304
 [9] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] flattenmcmcarray(::Array{Float64,3}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:96
 [4] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:25
 [5] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:304
 [10] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:50
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:304
 [9] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T, 3}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:24
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:304
 [11] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T, 2}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] flattenmcmcarray(::Array{Float64,3}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:96
 [4] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:25
 [5] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:304
 [10] _start() at ./client.jl:370
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
INFO: AffineInvariantMCMC tests passed

>>> End of log
