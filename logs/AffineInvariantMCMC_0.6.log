>>> 'Pkg.add("AffineInvariantMCMC")' log
INFO: Cloning cache of AffineInvariantMCMC from https://github.com/madsjulia/AffineInvariantMCMC.jl.git
INFO: Cloning cache of JLD from https://github.com/JuliaIO/JLD.jl.git
INFO: Cloning cache of LegacyStrings from https://github.com/JuliaArchive/LegacyStrings.jl.git
INFO: Cloning cache of RobustPmap from https://github.com/madsjulia/RobustPmap.jl.git
INFO: Installing AffineInvariantMCMC v0.1.3
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.2.0
INFO: Installing FileIO v0.3.0
INFO: Installing HDF5 v0.7.3
INFO: Installing JLD v0.6.9
INFO: Installing LegacyStrings v0.2.0
INFO: Installing RobustPmap v0.1.12
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building HDF5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Tuple{BinDeps.DependencyProvider,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:51
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:235
 [14] process_options(::Base.JLOptions) at ./client.jl:286
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 6
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:51
 [3] macro expansion at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:12
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:235
 [12] process_options(::Base.JLOptions) at ./client.jl:286
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated

>>> 'Pkg.test("AffineInvariantMCMC")' log
Julia Version 0.6.0-dev.2788
Commit 8341444 (2017-02-12 23:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (730.11328125 MB free)
Uptime: 857.0 sec
Load Avg:  2.0234375  0.9853515625  0.45068359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      18517 s         85 s       3491 s      58232 s          1 s
#2  3500 MHz       7538 s         56 s       2437 s      74072 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AffineInvariantMCMC           0.1.3
 - JSON                          0.8.3
10 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.2.0
 - Compat                        0.17.0
 - FileIO                        0.3.0
 - HDF5                          0.7.3
 - JLD                           0.6.9
 - LegacyStrings                 0.2.0
 - RobustPmap                    0.1.12
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing AffineInvariantMCMC

WARNING: deprecated syntax "typealias BitsKindOrString Union{HDF5BitsKind,String}" at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:24.
Use "const BitsKindOrString = Union{HDF5BitsKind,String}" instead.

WARNING: deprecated syntax "typealias C_time_t Int" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:53.
Use "const C_time_t = Int" instead.

WARNING: deprecated syntax "typealias Hid Int64" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:57.
Use "const Hid = Int64" instead.

WARNING: deprecated syntax "typealias Hid Cint" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:59.
Use "const Hid = Cint" instead.

WARNING: deprecated syntax "typealias Herr Cint" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:61.
Use "const Herr = Cint" instead.

WARNING: deprecated syntax "typealias Hsize UInt64" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:62.
Use "const Hsize = UInt64" instead.

WARNING: deprecated syntax "typealias Hssize Int64" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:63.
Use "const Hssize = Int64" instead.

WARNING: deprecated syntax "typealias Htri Cint" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:64.
Use "const Htri = Cint" instead.

WARNING: deprecated syntax "typealias Haddr UInt64" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:65.
Use "const Haddr = UInt64" instead.

WARNING: deprecated syntax "typealias HDF5BitsKind Union{Int8,UInt8,Int16,UInt16,Int32,UInt32,Int64,UInt64,Float32,Float64}" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:243.
Use "const HDF5BitsKind = Union{Int8,UInt8,Int16,UInt16,Int32,UInt32,Int64,UInt64,Float32,Float64}" instead.

WARNING: deprecated syntax "typealias BitsKindOrString Union{HDF5BitsKind,String}" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:244.
Use "const BitsKindOrString = Union{HDF5BitsKind,String}" instead.

WARNING: deprecated syntax "abstract CharType<:AbstractString" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:264.
Use "abstract type CharType<:AbstractString end" instead.

WARNING: deprecated syntax "typealias HDF5Object Union{HDF5Group,HDF5Dataset,HDF5Datatype}" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:370.
Use "const HDF5Object = Union{HDF5Group,HDF5Dataset,HDF5Datatype}" instead.

WARNING: deprecated syntax "typealias DatasetOrAttribute Union{HDF5Dataset,HDF5Attribute}" at /home/vagrant/.julia/v0.6/HDF5/src/plain.jl:1208.
Use "const DatasetOrAttribute = Union{HDF5Dataset,HDF5Attribute}" instead.

WARNING: deprecated syntax "abstract DataFile" at /home/vagrant/.julia/v0.6/HDF5/src/datafile.jl:13.
Use "abstract type DataFile end" instead.

WARNING: deprecated syntax "typealias H5T_class_t Cint" at /home/vagrant/.julia/v0.6/HDF5/src/blosc_filter.jl:6.
Use "const H5T_class_t = Cint" instead.

WARNING: deprecated syntax "typealias H5Z_filter_t Cint" at /home/vagrant/.julia/v0.6/HDF5/src/blosc_filter.jl:12.
Use "const H5Z_filter_t = Cint" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "Expr(:ccall)".
Use "Expr(:call, :ccall)" instead.

WARNING: deprecated syntax "abstract OS" at /home/vagrant/.julia/v0.6/FileIO/src/query.jl:3.
Use "abstract type OS end" instead.

WARNING: deprecated syntax "abstract Unix<:OS" at /home/vagrant/.julia/v0.6/FileIO/src/query.jl:4.
Use "abstract type Unix<:OS end" instead.

WARNING: deprecated syntax "abstract Formatted{F<:DataFormat}" at /home/vagrant/.julia/v0.6/FileIO/src/query.jl:218.
Use "abstract type Formatted{F<:DataFormat} end" instead.

WARNING: deprecated syntax "typealias TypesType SimpleVector" at /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl:18.
Use "const TypesType = SimpleVector" instead.

WARNING: deprecated syntax "typealias TupleType{T<:Tuple} Type{T}" at /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl:19.
Use "TupleType{T<:Tuple} = Type{T}" instead.

WARNING: deprecated syntax "typealias BitsKindTypes Union{$(map(x->begin
    # /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl, line 129
    Type{x}
end,uniontypes(HDF5.HDF5BitsKind))...,)}" at /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl:130.
Use "const BitsKindTypes = Union{$(map(x->begin
    # /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl, line 129
    Type{x}
end,uniontypes(HDF5.HDF5BitsKind))...,)}" instead.

WARNING: deprecated syntax "typealias VoidType Type{(macrocall @compat Void)}" at /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl:150.
Use "const VoidType = Type{(macrocall @compat Void)}" instead.

WARNING: deprecated syntax "bitstype $sz $name" at /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl:771.
Use "primitive type $name $sz end" instead.

WARNING: deprecated syntax "typealias ByteString Union{ASCIIString,UTF8String}" at /home/vagrant/.julia/v0.6/LegacyStrings/src/LegacyStrings.jl:76.
Use "const ByteString = Union{ASCIIString,UTF8String}" instead.
WARNING: could not import Base.lastidx into LegacyStrings

WARNING: deprecated syntax "typealias AbstractString1632{Tel<:Union{UInt16,UInt32}} Union{AbstractVector{Tel},AbstractString}" at /home/vagrant/.julia/v0.6/LegacyStrings/src/support.jl:177.
Use "AbstractString1632{Tel<:Union{UInt16,UInt32}} = Union{AbstractVector{Tel},AbstractString}" instead.
WARNING: @test_approx_eq_eps is deprecated, use `@test mean(flatchain[i, :]) ≈ means[i] atol=0.1 * stds[i]` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @test_approx_eq_eps(::ANY, ::ANY, ::ANY) at ./deprecated.jl:1014
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:305
 [6] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 12
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:51
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int, o::Int) is deprecated, use Array{T}(m, n, o) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:60
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64, ::Float64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:62
 [4] sample(::Function, ::Int64, ::Array{Float64,2}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:58
 [5] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:23
 [6] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64, ::Int64) at ./deprecated.jl:51
 [3] flattenmcmcarray(::Array{Float64,3}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/src/AffineInvariantMCMC.jl:96
 [4] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:25
 [5] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:51
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:51
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:51
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:51
 [3] testit() at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:13
 [4] macro expansion at /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl:33 [inlined]
 [5] anonymous at ./<missing>:?
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/AffineInvariantMCMC/test/runtests.jl, in expression starting on line 32
INFO: AffineInvariantMCMC tests passed

>>> End of log
