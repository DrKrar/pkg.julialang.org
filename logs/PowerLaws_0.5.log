>>> 'Pkg.add("PowerLaws")' log
INFO: Cloning cache of PowerLaws from https://github.com/johnybx/PowerLaws.jl.git
INFO: Installing BinDeps v0.4.2
INFO: Installing Calculus v0.1.15
INFO: Installing Distributions v0.10.0
INFO: Installing DualNumbers v0.2.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.4.5
INFO: Installing PDMats v0.4.2
INFO: Installing PositiveFactorizations v0.0.2
INFO: Installing PowerLaws v0.0.3
INFO: Installing Rmath v0.1.2
INFO: Installing SHA v0.2.0
INFO: Installing StatsBase v0.9.0
INFO: Installing StatsFuns v0.3.0
INFO: Installing URIParser v0.1.5
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("PowerLaws")' log
Julia Version 0.5.0-rc1+0
Commit cede539 (2016-08-04 08:48 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1510.6875 MB free)
Uptime: 12562.0 sec
Load Avg:  0.9482421875  0.93603515625  0.9521484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     661074 s       5680 s      74433 s     349507 s         22 s
#2  3499 MHz     237866 s        104 s      39303 s     933795 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - PowerLaws                     0.0.3
14 additional packages:
 - BinDeps                       0.4.2
 - Calculus                      0.1.15
 - Compat                        0.8.6
 - Distributions                 0.10.0
 - DualNumbers                   0.2.2
 - NaNMath                       0.2.1
 - Optim                         0.4.5
 - PDMats                        0.4.2
 - PositiveFactorizations        0.0.2
 - Rmath                         0.1.2
 - SHA                           0.2.0
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - URIParser                     0.1.5
INFO: Testing PowerLaws
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Rmath.ji for module Rmath.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/StatsBase.ji for module StatsBase.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/StatsFuns.ji for module StatsFuns.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Distributions.ji for module Distributions.

WARNING: deprecated syntax "x::Float64".
Use "local x::Float64" instead.

WARNING: deprecated syntax "r::Float64".
Use "local r::Float64" instead.

WARNING: deprecated syntax "rmin::Float64".
Use "local rmin::Float64" instead.

WARNING: deprecated syntax "rmax::Float64".
Use "local rmax::Float64" instead.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Optim.ji for module Optim.
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/types.jl:66
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/types.jl:66
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/types.jl:84
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/types.jl:84
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/problems/unconstrained.jl:10
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/problems/unconstrained.jl:10
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/problems/unconstrained.jl:21
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/problems/unconstrained.jl:45
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/problems/unconstrained.jl:45
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/problems/unconstrained.jl:45
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Optim/src/problems/unconstrained.jl:45
test: discrete powerlaw
WARNING: fminbox{T <: AbstractFloat}(df::DifferentiableFunction,initial_x::Array{T},l::Array{T},u::Array{T}; optimizer=cg,nargs...) is deprecated, use optimize(df,initial_x,l,u,Fminbox(); optimizer=get_optimizer(symbol(optimizer)),nargs...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in #fminbox#76(::Function, ::Array{Any,1}, ::Function, ::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:50
 in fminbox(::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:49
 in _estimate_xmin(::Array{Int64,1}, ::Dict{Float64,Int64}, ::DataType, ::Array{Int64,1}, ::Int64) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:51
 in #estimate_xmin#7(::Array{Any,1}, ::Int64, ::Function, ::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:87
 in estimate_xmin(::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:77
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl:3 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/test.jl, in expression starting on line 16
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Function, ::Vararg{Function,N}) at ./deprecated.jl:30
 in #fminbox#76(::Function, ::Array{Any,1}, ::Function, ::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:52
 in fminbox(::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:49
 in _estimate_xmin(::Array{Int64,1}, ::Dict{Float64,Int64}, ::DataType, ::Array{Int64,1}, ::Int64) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:51
 in #estimate_xmin#7(::Array{Any,1}, ::Int64, ::Function, ::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:87
 in estimate_xmin(::Array{Int64,1}, ::Type{PowerLaws.dis_powerlaw}) at /home/vagrant/.julia/v0.5/PowerLaws/src/estimate_xmin.jl:77
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl:3 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/test.jl, in expression starting on line 16
ERROR: LoadError: LoadError: assertion failed: |est[1].α - 1.9527275186009831| <= 1.0e-8
  est[1].α = 1.9501572269094172
  1.9527275186009831 = 1.9527275186009831
  difference = 0.0025702916915659735 > 1.0e-8
 in test_approx_eq(::Float64, ::Float64, ::Float64, ::String, ::String) at ./test.jl:848
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl:3 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/test.jl, in expression starting on line 17
while loading /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl, in expression starting on line 2
==============================[ ERROR: PowerLaws ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/PowerLaws/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PowerLaws had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
