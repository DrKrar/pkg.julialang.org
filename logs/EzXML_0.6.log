>>> 'Pkg.add("EzXML")' log
INFO: Cloning cache of EzXML from https://github.com/bicycle1885/EzXML.jl.git
INFO: Installing EzXML v0.2.0
INFO: Building EzXML
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of EzXML
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EzXML")' log
Julia Version 0.6.0-dev.1262
Commit 9f999b7 (2016-11-16 21:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (704.70703125 MB free)
Uptime: 21354.0 sec
Load Avg:  0.97216796875  0.998046875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1261909 s       5654 s     121733 s     508188 s         68 s
#2  3499 MHz     530075 s       4585 s      75505 s    1434291 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - EzXML                         0.2.0
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.9.4
INFO: Testing EzXML
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl:19 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl, in expression starting on line 4
XML: Test Failed
  Expression: parse(Document," ")
    Expected: EzXML.XMLError
      Thrown: ArgumentError
 in record(::Base.Test.DefaultTestSet, ::Base.Test.Fail) at ./test.jl:430
 in do_test_throws(::Base.Test.Threw, ::Expr, ::Type{T}) at ./test.jl:329
 in macro expansion; at /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl:119 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl:0 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
XML: Test Failed
  Expression: parse(Document,"abracadabra")
    Expected: EzXML.XMLError
      Thrown: ArgumentError
 in record(::Base.Test.DefaultTestSet, ::Base.Test.Fail) at ./test.jl:430
 in do_test_throws(::Base.Test.Threw, ::Expr, ::Type{T}) at ./test.jl:329
 in macro expansion; at /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl:120 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl:0 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
XML: Test Failed
  Expression: parse(Document,"<?xml version=\"1.0\"?>")
    Expected: EzXML.XMLError
      Thrown: ArgumentError
 in record(::Base.Test.DefaultTestSet, ::Base.Test.Fail) at ./test.jl:430
 in do_test_throws(::Base.Test.Threw, ::Expr, ::Type{T}) at ./test.jl:329
 in macro expansion; at /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl:121 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl:0 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
ERROR: LoadError: Some tests did not pass: 22 passed, 3 failed, 0 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:521
 in macro expansion; at ./test.jl:718 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl, in expression starting on line 74
================================[ ERROR: EzXML ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/EzXML/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: EzXML had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
