>>> 'Pkg.add("ClusterDicts")' log
INFO: Cloning cache of ClusterDicts from git://github.com/amitmurthy/ClusterDicts.jl.git
INFO: Installing ClusterDicts v0.1.0
INFO: Package database updated

>>> 'Pkg.test("ClusterDicts")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (752.4140625 MB free)
Uptime: 11757.0 sec
Load Avg:  0.92724609375  0.98388671875  0.9677734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     508821 s       1239 s      48622 s     502009 s         26 s
#2  3498 MHz     342373 s       5138 s      43347 s     744354 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - ClusterDicts                  0.1.0
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.9.5
INFO: Testing ClusterDicts
Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(06TQkD2F_1_1,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(zn2p5u7k_1_2,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(aOLeea1t_1_3,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(ZMC5l3xT_1_4,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(XRRjLwU6_1_5,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(LlnM4oqH_1_6,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Any,Any}(4NaX4eDG_1_7,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Any,Any}(33AKB6Kc_1_8,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(b2vmuAEf_1_9,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(kDjj3Zic_1_10,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(PAdjclIX_1_11,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(iJX3goxE_1_12,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(8AhztaIF_1_13,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(wc4LuHq9_1_14,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(M2KgCwS5_1_15,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(JI7xUZ2f_1_16,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Int64}(ZzA8HOv7_1_17,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Int64}(syNdwNel_1_18,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Float64}(VNmyimdS_1_19,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Float64}(Eo5XwHxe_1_20,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(1I5OpSYj_1_21,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(FALiviGy_1_22,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Any,Any}(hA4SbXD8_1_23,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Any,Any}(PopsF2X2_1_24,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(cA0nB9MB_1_25,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(sDDlNrHQ_1_26,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(DtNP3SFK_1_27,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(2Qv2tR5O_1_28,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(btho1nhT_1_29,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(2l7pSIaN_1_30,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(lTPpiGma_1_31,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(yZXL5e2v_1_32,ClusterDicts.PidsWorkers())

Testing get/set from both participating and non-participating workers

Test for any leaks

INFO: ClusterDicts tests passed

>>> End of log
