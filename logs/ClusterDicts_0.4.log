>>> 'Pkg.add("ClusterDicts")' log
INFO: Installing ClusterDicts v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ClusterDicts
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ClusterDicts")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1307.37890625 MB free)
Uptime: 45015.0 sec
Load Avg:  0.853515625  0.96630859375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1250554 s         53 s     171268 s    2598162 s        162 s
#2  3496 MHz     738724 s         92 s     163421 s    3323152 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
4 required packages:
 - ClusterDicts                  0.1.0
 - ColorVectorSpace              0.1.8
 - Compat                        0.9.2
 - JSON                          0.7.0
2 additional packages:
 - ColorTypes                    0.2.6
 - FixedPointNumbers             0.1.6
INFO: Testing ClusterDicts
Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(R6fyvHcv_1_1,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(Y8Wka9Wc_1_2,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(cGCbF7aM_1_3,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(SaB01clM_1_4,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(dKBjlasE_1_5,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(RLujnQTd_1_6,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Any,Any}(tSzBj2ji_1_7,ClusterDicts.PidsAll())

Testing : ClusterDicts.DistributedDict{Any,Any}(avHIPEtA_1_8,ClusterDicts.PidsAll())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(uB5qQdOw_1_9,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(U7JcvoeP_1_10,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(9EgUf0uZ_1_11,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(V2oRV8hP_1_12,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(3k7I3tgn_1_13,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(vQdFcqDd_1_14,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(sf8AZOUo_1_15,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(dydm0n4w_1_16,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Int64}(72uWjlmb_1_17,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Int64}(obake6c4_1_18,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Float64}(1upzketC_1_19,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Int64,Float64}(q3JxYkqS_1_20,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(2mjOH7iy_1_21,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(hIMrAN1M_1_22,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Any,Any}(EMfziqTp_1_23,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.DistributedDict{Any,Any}(srnNnbcG_1_24,ClusterDicts.Pids([2,3]))

Testing : ClusterDicts.GlobalDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Int64}(X20B4MVh_1_25,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Int64}(JUcyvK0W_1_26,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Int64,Float64}(tFVZcXu3_1_27,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Int64,Float64}(qPr6Pgu7_1_28,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{ASCIIString,ASCIIString}(Esdz7fD7_1_29,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{ASCIIString,ASCIIString}(vo3GoLHF_1_30,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(foobar,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.GlobalDict{Any,Any}(qBdI9zIO_1_31,ClusterDicts.PidsWorkers())

Testing : ClusterDicts.DistributedDict{Any,Any}(5UCF2t9O_1_32,ClusterDicts.PidsWorkers())

Testing get/set from both participating and non-participating workers

Test for any leaks

INFO: ClusterDicts tests passed

>>> End of log
