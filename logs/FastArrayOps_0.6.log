>>> 'Pkg.add("FastArrayOps")' log
INFO: Cloning cache of FastArrayOps from https://github.com/gummif/FastArrayOps.jl.git
INFO: Installing FastArrayOps v0.1.0
INFO: Package database updated

>>> 'Pkg.test("FastArrayOps")' log
Julia Version 0.6.0-dev.1946
Commit f550489 (2017-01-06 00:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (706.80078125 MB free)
Uptime: 21178.0 sec
Load Avg:  0.84033203125  0.98291015625  1.0546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1201202 s       2068 s     117268 s     574636 s         50 s
#2  3498 MHz     409145 s       3976 s      76430 s    1578107 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FastArrayOps                  0.1.0
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.10.0
INFO: Testing FastArrayOps
WARNING: could not import LinAlg.BlasChar into FastArrayOps
Error During Test
  Test threw an exception of type MethodError
  Expression: nel2nmax(i,inc,nmax2nel(i,inc,nmax)) <= nmax
  MethodError: no method matching nmax2nel(::Int64, ::StepRange{Int64,Int64}, ::Int64)
  Closest candidates are:
    nmax2nel(::Int64, !Matched::Int64, ::Int64) at /home/vagrant/.julia/v0.6/FastArrayOps/src/FastArrayOps.jl:36
  Stacktrace:
   [1] macro expansion; at /home/vagrant/.julia/v0.6/FastArrayOps/test/runtests.jl:10 [inlined]
   [2] anonymous at ./<missing>:?
   [3] include_from_node1(::String) at ./loading.jl:532
   [4] include(::String) at ./sysimg.jl:14
   [5] process_options(::Base.JLOptions) at ./client.jl:308
   [6] _start() at ./client.jl:374
ERROR: LoadError: There was an error during testing
Stacktrace:
 [1] record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:425
 [2] do_test(::Base.Test.Threw, ::Expr) at ./test.jl:308
 [3] macro expansion; at /home/vagrant/.julia/v0.6/FastArrayOps/test/runtests.jl:10 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:308
 [8] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/FastArrayOps/test/runtests.jl, in expression starting on line 7
============================[ ERROR: FastArrayOps ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/FastArrayOps/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: FastArrayOps had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261

>>> End of log
