>>> 'Pkg.add("GeoEfficiency")' log
INFO: Cloning cache of GeoEfficiency from https://github.com/DrKrar/GeoEfficiency.jl.git
INFO: Installing GeoEfficiency v0.8.3
INFO: Building GeoEfficiency
INFO: Creating 'GeoEfficiency' folder at '/home/vagrant'.....
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GeoEfficiency
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GeoEfficiency")' log
Julia Version 0.6.0-dev.1897
Commit 8563fc5 (2017-01-04 09:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1680.33984375 MB free)
Uptime: 27505.0 sec
Load Avg:  1.01171875  1.06201171875  1.00927734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1469537 s         59 s     155402 s     832856 s         51 s
#2  3500 MHz     575315 s         87 s     112152 s    1973988 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GeoEfficiency                 0.8.3
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.10.0
INFO: Testing GeoEfficiency

    	 *************************************************
    	 **            -=) GeoEfficiency (=-            **
    	 **  Accurate Geometrical Efficiency Calculator **
    	 **                                             **
    	 *************************************************

  @author: Mohamed Krar
  @Profile: https://www.researchgate.net/profile/Mohamed_Krar3
  @repositry: https://github.com/DrKrar/GeoEfficiency.jl/
  @documentation: http://geoefficiencyjl.readthedocs.org
  @version: v"0.8.3"
  Created on Fri Aug 14 20:12:01 2015
  
  loading the Package:-
  ====================
  Pkg.add("GeoEfficiency")
  using GeoEfficiency
  
  Quick usage:-
  ============
  geoEff()	: calculate once and return the value.
  calc()	: calculate once and display full information on the console.
  calcN()	: calculate untill you quit.
  batch()	: calculate using data in the "GeoEfficiency" folder. 

WARNING: deprecated syntax "srcRhos_array::Core.apply_type(Array,Float64,1)".
Use "local srcRhos_array::Core.apply_type(Array,Float64,1)" instead.

WARNING: deprecated syntax "srcRadii_array::Core.apply_type(Array,Float64,1)".
Use "local srcRadii_array::Core.apply_type(Array,Float64,1)" instead.

WARNING: deprecated syntax "srcLengths_array::Core.apply_type(Array,Float64,1)".
Use "local srcLengths_array::Core.apply_type(Array,Float64,1)" instead.

Running tests:
 * Input_Interface
INFO: Statrting `getfloat` test...
WARNING: this test is suppressed because it need interactive input
 * Physical_model
 * Output_Interface
 * calculations
INFO: Statrting `geoEff` test...
INFO: Spectial case for cylinderical detector; very restrict test
ERROR: LoadError: LoadError: quadgk(sin,0.0,1.5707963267948966) has been moved to the package QuadGK.jl.
Run Pkg.add("QuadGK") to install QuadGK on Julia v0.6 and later, and then run `using QuadGK`.
Stacktrace:
 [1] #quadgk#999(::Array{Any,1}, ::Function, ::Function, ::Vararg{Any,N}) at ./deprecated.jl:1344
 [2] (::Base.#kw##quadgk)(::Array{Any,1}, ::Base.#quadgk, ::Function, ::Vararg{Any,N}) at ./<missing>:0
 [3] GeoEff_Pnt(::GeoEfficiency.CylDetector, ::GeoEfficiency.Point) at /home/vagrant/.julia/v0.6/GeoEfficiency/src/calculations.jl:34
 [4] geoEff(::GeoEfficiency.CylDetector, ::GeoEfficiency.Point, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/GeoEfficiency/src/calculations.jl:99
 [5] macro expansion; at /home/vagrant/.julia/v0.6/GeoEfficiency/test/test_calculations.jl:16 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] macro expansion; at /home/vagrant/.julia/v0.6/GeoEfficiency/test/runtests.jl:17 [inlined]
 [10] anonymous at ./<missing>:?
 [11] include_from_node1(::String) at ./loading.jl:532
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:298
 [14] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/GeoEfficiency/test/test_calculations.jl, in expression starting on line 14
while loading /home/vagrant/.julia/v0.6/GeoEfficiency/test/runtests.jl, in expression starting on line 15
============================[ ERROR: GeoEfficiency ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/GeoEfficiency/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: GeoEfficiency had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
