>>> 'Pkg.add("Hadamard")' log
INFO: Cloning cache of Hadamard from https://github.com/stevengj/Hadamard.jl.git
INFO: Installing Hadamard v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Hadamard
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Hadamard")' log
Julia Version 0.5.0-dev+2440
Commit 2bb94d6 (2016-02-01 02:22 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing Hadamard
WARNING: could not import FFTW.execute into Hadamard
WARNING: could not import FFTW.complexfloat into Hadamard
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
WARNING: Base.Uint32 is deprecated, use UInt32 instead.
  likely near /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl:33
Error During Test
  Test threw an exception of type MethodError
  Expression: ifwht(eye(8),1) == H8
  MethodError: `Base.DFT.Plan{T}` has no method matching Base.DFT.Plan{T}(::Ptr{Void}, ::Array{Float64,2})
  Closest candidates are:
    (!Matched::Type{BoundsError})(::ANY, ::ANY)
    (!Matched::Type{TypeError})(::Any, ::Any, !Matched::Any, !Matched::Any)
    (!Matched::Type{TypeConstructor})(::ANY, ::ANY)
    ...
   in Plan_Hadamard(Hadamard.#Plan_Hadamard, Array{Float64,2}, Array{Float64,2}, Int64, UInt32, Float64, Bool) at /home/vagrant/.julia/v0.5/Hadamard/src/Hadamard.jl:97
   in ifwht_dyadic(Hadamard.#ifwht_dyadic, Array{Float64,2}, Int64) at /home/vagrant/.julia/v0.5/Hadamard/src/Hadamard.jl:124
   in ifwht(Hadamard.#ifwht, Array{Float64,2}, Int64) at /home/vagrant/.julia/v0.5/Hadamard/src/Hadamard.jl:138
   in include at ./boot.jl:264
   in include_from_node1 at ./loading.jl:417
   in process_options at ./client.jl:244
   in _start at ./client.jl:300
ERROR: LoadError: There was an error during testing
 in record(Base.Test.#record, Base.Test.FallbackTestSet, Base.Test.Error) at ./test.jl:317
 in do_test(Base.Test.#do_test, Base.Test.Threw, Expr) at ./test.jl:215
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in process_options at ./client.jl:244
 in _start at ./client.jl:300
while loading /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl, in expression starting on line 33
==============================[ ERROR: Hadamard ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Hadamard/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("Hadamard had test errors")
 in #test#55(Base.Pkg.Entry.##test#55, Bool, Any, Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in #2(Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}) at ./pkg/dir.jl:31
 in cd(Base.Filesystem.#cd, Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, UTF8String) at ./file.jl:47
 in #cd#1(Base.Pkg.Dir.##cd#1, Array{Any,1}, Any, Any, Array{AbstractString,1}, Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(Base.Pkg.##test#4, Bool, Any, ASCIIString, Vararg{ASCIIString}) at ./pkg.jl:228
 in eval at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options at ./client.jl:221
 in _start at ./client.jl:300

>>> End of log
