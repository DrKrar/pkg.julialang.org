>>> 'Pkg.add("QDXML")' log
INFO: Cloning cache of QDXML from https://github.com/Daagr/QDXML.jl.git
INFO: Installing AutoHashEquals v0.0.10
INFO: Installing ParserCombinator v1.7.11
INFO: Installing QDXML v0.0.1
INFO: Package database updated

>>> 'Pkg.test("QDXML")' log
Julia Version 0.6.0-dev.1557
Commit 1f8006d (2016-12-13 22:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (461.57421875 MB free)
Uptime: 13318.0 sec
Load Avg:  1.0078125  1.05859375  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3509 MHz     778418 s        322 s     132782 s     281505 s         37 s
#2  3509 MHz     218768 s       6199 s      54688 s    1012927 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - QDXML                         0.0.1
3 additional packages:
 - AutoHashEquals                0.0.10
 - Compat                        0.9.5
 - ParserCombinator              1.7.11
INFO: Testing QDXML
ERROR: LoadError: LoadError: MethodError: Cannot `convert` an object of type Array{Any,1} to an object of type ParserCombinator.Seq
This may have arisen from a call to the constructor ParserCombinator.Seq(...),
since type constructors fall back to convert methods.
 in +(::ParserCombinator.Seq, ::ParserCombinator.Drop) at /home/vagrant/.julia/v0.6/ParserCombinator/src/core/sugar.jl:40
 in +(::ParserCombinator.Drop, ::ParserCombinator.Pattern, ::ParserCombinator.Drop) at ./operators.jl:289
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/QDXML/src/lexer.jl, in expression starting on line 17
while loading /home/vagrant/.julia/v0.6/QDXML/src/QDXML.jl, in expression starting on line 11
ERROR: LoadError: Failed to precompile QDXML to /home/vagrant/.julia/lib/v0.6/QDXML.ji.
 in compilecache(::String) at ./loading.jl:672
 in require(::Symbol) at ./loading.jl:453
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/QDXML/test/runtests.jl, in expression starting on line 1
================================[ ERROR: QDXML ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/QDXML/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: QDXML had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
