>>> 'Pkg.add("Cuba")' log
INFO: Cloning cache of Cuba from https://github.com/giordano/Cuba.jl.git
INFO: Installing Cuba v0.2.0
INFO: Building Cuba
INFO: Downloading Cuba source...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   155    0   155    0     0   1758      0 --:--:-- --:--:-- --:--:--  1761
100  712k  100  712k    0     0  2641k      0 --:--:-- --:--:-- --:--:-- 2641k
INFO: Building libcuba...
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for gfortran... gfortran
checking whether we are using the GNU Fortran compiler... yes
checking whether gfortran accepts -g... yes
checking for ranlib... ranlib
checking for a BSD-compatible install... /usr/bin/install -c
checking for an ANSI C-conforming const... yes
checking for inline... inline
checking for long double with more range or precision than double... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /bin/grep
checking for egrep... /bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for size_t... yes
checking for ssize_t... yes
checking for pid_t... yes
checking for powl... yes
checking for erf... yes
checking vfork.h usability... no
checking vfork.h presence... no
checking for vfork.h... no
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking for working alloca.h... yes
checking for alloca... yes
checking build system type... x86_64-unknown-linux-gnu
checking host system type... x86_64-unknown-linux-gnu
checking for shmget... yes
checking for getloadavg... yes
checking for variable-size arrays... yes
checking for MathLink... no
checking for qmake... no
configure: creating ./config.status
config.status: creating makefile
config.status: creating config.h
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -DNOUNDERSCORE -c -o Vegas.o ./src/vegas/Vegas.c
ar rv libcuba.a Vegas.o
ar: creating libcuba.a
a - Vegas.o
rm -f Vegas.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -c -o Vegas_.o ./src/vegas/Vegas.c
ar rv libcuba.a Vegas_.o
a - Vegas_.o
rm -f Vegas_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -DLONGLONGINT -DNOUNDERSCORE -c -o llVegas.o ./src/vegas/Vegas.c
ar rv libcuba.a llVegas.o
a - llVegas.o
rm -f llVegas.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/vegas -DLONGLONGINT -c -o llVegas_.o ./src/vegas/Vegas.c
ar rv libcuba.a llVegas_.o
a - llVegas_.o
rm -f llVegas_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -DNOUNDERSCORE -c -o Suave.o ./src/suave/Suave.c
ar rv libcuba.a Suave.o
a - Suave.o
rm -f Suave.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -c -o Suave_.o ./src/suave/Suave.c
ar rv libcuba.a Suave_.o
a - Suave_.o
rm -f Suave_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -DLONGLONGINT -DNOUNDERSCORE -c -o llSuave.o ./src/suave/Suave.c
ar rv libcuba.a llSuave.o
a - llSuave.o
rm -f llSuave.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/suave -DLONGLONGINT -c -o llSuave_.o ./src/suave/Suave.c
ar rv libcuba.a llSuave_.o
a - llSuave_.o
rm -f llSuave_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -DNOUNDERSCORE -c -o Divonne.o ./src/divonne/Divonne.c
ar rv libcuba.a Divonne.o
a - Divonne.o
rm -f Divonne.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -c -o Divonne_.o ./src/divonne/Divonne.c
ar rv libcuba.a Divonne_.o
a - Divonne_.o
rm -f Divonne_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -DLONGLONGINT -DNOUNDERSCORE -c -o llDivonne.o ./src/divonne/Divonne.c
ar rv libcuba.a llDivonne.o
a - llDivonne.o
rm -f llDivonne.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/divonne -DLONGLONGINT -c -o llDivonne_.o ./src/divonne/Divonne.c
ar rv libcuba.a llDivonne_.o
a - llDivonne_.o
rm -f llDivonne_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -DNOUNDERSCORE -c -o Cuhre.o ./src/cuhre/Cuhre.c
ar rv libcuba.a Cuhre.o
a - Cuhre.o
rm -f Cuhre.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -c -o Cuhre_.o ./src/cuhre/Cuhre.c
ar rv libcuba.a Cuhre_.o
a - Cuhre_.o
rm -f Cuhre_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -DLONGLONGINT -DNOUNDERSCORE -c -o llCuhre.o ./src/cuhre/Cuhre.c
ar rv libcuba.a llCuhre.o
a - llCuhre.o
rm -f llCuhre.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -I./src/cuhre -DLONGLONGINT -c -o llCuhre_.o ./src/cuhre/Cuhre.c
ar rv libcuba.a llCuhre_.o
a - llCuhre_.o
rm -f llCuhre_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -DNOUNDERSCORE -c -o Fork.o ./src/common/Fork.c
ar rv libcuba.a Fork.o
a - Fork.o
rm -f Fork.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -c -o Fork_.o ./src/common/Fork.c
ar rv libcuba.a Fork_.o
a - Fork_.o
rm -f Fork_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -DNOUNDERSCORE -c -o Global.o ./src/common/Global.c
ar rv libcuba.a Global.o
a - Global.o
rm -f Global.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -c -o Global_.o ./src/common/Global.c
ar rv libcuba.a Global_.o
a - Global_.o
rm -f Global_.o
gcc -O3 -fomit-frame-pointer -ffast-math -Wall -DHAVE_CONFIG_H -DREALSIZE=8 -I./src/common -I. -I. -fPIC -c -o Data.o ./src/common/Data.c
ar rv libcuba.a Data.o
a - Data.o
rm -f Data.o
ranlib libcuba.a
ar x libcuba.a
gcc -shared -o libcuba.so *.o -lm
rm *.o
INFO: libcuba successfully installed!
INFO: Package database updated

>>> 'Pkg.test("Cuba")' log
Julia Version 0.6.0-dev.1847
Commit 8f9036a (2017-01-02 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (843.63671875 MB free)
Uptime: 13107.0 sec
Load Avg:  0.83154296875  0.7294921875  0.84619140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz     592578 s       6404 s      59592 s     533223 s          9 s
#2  3508 MHz     232861 s         90 s      28370 s    1024332 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Cuba                          0.2.0
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.10.0
INFO: Testing Cuba
INFO: Testing Vegas algorithm
ERROR: LoadError: MethodError: no method matching integrand1(::Array{Float64,1}, ::Array{Float64,1})
The applicable method may be too new: running in world age 20452, while current world is 20457.
Closest candidates are:
  integrand1(::Any, ::Any) at /home/vagrant/.julia/v0.6/Cuba/test/runtests.jl:30 (method too new to be called from this world context.)
Stacktrace:
 [1] generic_integrand!(::Int32, ::Ptr{Float64}, ::Int32, ::Ptr{Float64}, ::Ptr{Void}) at /home/vagrant/.julia/v0.6/Cuba/src/Cuba.jl:104
 [2] dointegrate(::Symbol, ::Ptr{Void}, ::Int64, ::Int64, ::Ptr{Void}, ::Int64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Int64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Int64, ::Ptr{Void}, ::Int64, ::String, ::Ptr{Void}) at /home/vagrant/.julia/v0.6/Cuba/src/Cuba.jl:169
 [3] #vegas#1(::Int64, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::String, ::Ptr{Void}, ::Cuba.#vegas, ::#integrand1, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/Cuba/src/Cuba.jl:295
 [4] (::Cuba.#kw##vegas)(::Array{Any,1}, ::Cuba.#vegas, ::Function, ::Int64, ::Int64) at ./<missing>:0
 [5] macro expansion; at /home/vagrant/.julia/v0.6/Cuba/test/runtests.jl:52 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Cuba/test/runtests.jl, in expression starting on line 49
================================[ ERROR: Cuba ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Cuba/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Cuba had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
