>>> 'Pkg.add("RegionTrees")' log
INFO: Cloning cache of RegionTrees from https://github.com/rdeits/RegionTrees.jl.git
INFO: Installing Iterators v0.2.0
INFO: Installing RegionTrees v0.0.1
INFO: Installing StaticArrays v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of RegionTrees
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("RegionTrees")' log
Julia Version 0.6.0-dev.1701
Commit d8a5718 (2016-12-26 06:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (607.96484375 MB free)
Uptime: 16219.0 sec
Load Avg:  1.046875  0.99072265625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     948943 s         28 s     118602 s     371802 s         22 s
#2  3500 MHz     264278 s        153 s      53127 s    1267610 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - RegionTrees                   0.0.1
3 additional packages:
 - Compat                        0.9.5
 - Iterators                     0.2.0
 - StaticArrays                  0.1.2
INFO: Computing test dependencies for RegionTrees...
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing Interpolations v0.3.6
INFO: Installing Ratios v0.0.4
INFO: Installing WoodburyMatrices v0.2.1
INFO: Testing RegionTrees
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,1,1] == [-1,-2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:4 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,1,1] == [1,-2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:5 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,2,1] == [-1,2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:6 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,2,1] == [1,2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:7 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,1,2] == [-1,-2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:8 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,1,2] == [1,-2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:9 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,2,2] == [-1,2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:10 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,2,2] == [1,2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   in macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:11 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
vertices: Error During Test
  Test threw an exception of type StackOverflowError
  Expression: center(boundary) == [0,0,0]
  StackOverflowError:
   in broadcast(::Base.#*, ::Float64, ::StaticArrays.SVector{3,Float64}) at /home/vagrant/.julia/v0.6/StaticArrays/src/arraymath.jl:43 (repeats 80000 times)
ERROR: LoadError: LoadError: Some tests did not pass: 0 passed, 0 failed, 9 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:524
 in macro expansion; at ./test.jl:721 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl, in expression starting on line 1
while loading /home/vagrant/.julia/v0.6/RegionTrees/test/runtests.jl, in expression starting on line 5
=============================[ ERROR: RegionTrees ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/RegionTrees/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing AxisAlgorithms v0.1.5
INFO: Removing Interpolations v0.3.6
INFO: Removing Ratios v0.0.4
INFO: Removing WoodburyMatrices v0.2.1
ERROR: RegionTrees had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:270
 in _start() at ./client.jl:357

>>> End of log
