>>> 'Pkg.add("RegionTrees")' log
INFO: Cloning cache of RegionTrees from https://github.com/rdeits/RegionTrees.jl.git
INFO: Installing RegionTrees v0.0.1
INFO: Installing StaticArrays v0.1.3
INFO: Package database updated

>>> 'Pkg.test("RegionTrees")' log
Julia Version 0.6.0-dev.1973
Commit f4ed16b (2017-01-06 23:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (726.09765625 MB free)
Uptime: 16034.0 sec
Load Avg:  1.0029296875  0.9921875  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     997637 s       6630 s     100015 s     311378 s         30 s
#2  3500 MHz     275701 s        273 s      49844 s    1242118 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - RegionTrees                   0.0.1
19 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - Distributions                 0.11.1
 - GenerativeModels              0.0.0-             master (unregistered)
 - Iterators                     0.2.0
 - LaTeXStrings                  0.2.0
 - PDMats                        0.5.2
 - POMDPBounds                   0.0.0-             master (unregistered)
 - POMDPModels                   0.0.0-             master (unregistered)
 - POMDPToolbox                  0.0.0-             master (unregistered)
 - POMDPs                        0.4.0
 - Rmath                         0.1.6
 - SHA                           0.3.0
 - StaticArrays                  0.1.3
 - StatsBase                     0.12.0
 - StatsFuns                     0.3.1
 - TikzPictures                  0.3.5
 - URIParser                     0.1.6
INFO: Computing test dependencies for RegionTrees...
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing Interpolations v0.3.6
INFO: Installing Ratios v0.0.4
INFO: Installing WoodburyMatrices v0.2.1
INFO: Testing RegionTrees
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,1,1] == [-1,-2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:4 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,1,1] == [1,-2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:5 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,2,1] == [-1,2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:6 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,2,1] == [1,2,-3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:7 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,1,2] == [-1,-2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:8 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,1,2] == [1,-2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:9 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[1,2,2] == [-1,2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:10 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
vertices: Error During Test
  Test threw an exception of type ErrorException
  Expression: v[2,2,2] == [1,2,3]
  The size of type `RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{RegionTrees.TwosArray{3,StaticArrays.SVector{3,Float64},8}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:304
   [4] macro expansion; at /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl:11 [inlined]
   [5] macro expansion; at ./test.jl:750 [inlined]
   [6] anonymous at ./<missing>:?
ERROR: LoadError: LoadError: Some tests did not pass: 1 passed, 0 failed, 8 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/RegionTrees/test/hyperrectangle.jl, in expression starting on line 1
while loading /home/vagrant/.julia/v0.6/RegionTrees/test/runtests.jl, in expression starting on line 5
=============================[ ERROR: RegionTrees ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/RegionTrees/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing AxisAlgorithms v0.1.5
INFO: Removing Interpolations v0.3.6
INFO: Removing Ratios v0.0.4
INFO: Removing WoodburyMatrices v0.2.1
ERROR: RegionTrees had test errors

>>> End of log
