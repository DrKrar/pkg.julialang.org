>>> 'Pkg.add("StatefulIterators")' log
INFO: Cloning cache of StatefulIterators from https://github.com/andrewcooke/StatefulIterators.jl.git
INFO: Installing StatefulIterators v0.1.0
INFO: Package database updated

>>> 'Pkg.test("StatefulIterators")' log
Julia Version 0.5.0-rc0+115
Commit 643bac8 (2016-08-01 21:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (971.89453125 MB free)
Uptime: 22820.0 sec
Load Avg:  1.0283203125  0.97705078125  0.89892578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1187836 s       4814 s     124079 s     648852 s         50 s
#2  3500 MHz     379436 s        759 s      59609 s    1747482 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - StatefulIterators             0.1.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing StatefulIterators
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/StatefulIterators/src/StatefulIterators.jl:253
[1,2,3] ... Error During Test
  Test threw an exception of type MethodError
  Expression: collect(take(StatefulIterator(make_iter()),2)) == [1,2]
  MethodError: no method matching length(::StatefulIterators.StatefulIterator{Array{Int64,1},Int64})
  Closest candidates are:
    length(!Matched::SimpleVector) at essentials.jl:168
    length(!Matched::Base.MethodList) at reflection.jl:256
    length(!Matched::MethodTable) at reflection.jl:322
    ...
   in _similar_for at ./array.jl:222 [inlined]
   in _collect at ./array.jl:237 [inlined]
   in collect at ./array.jl:233 [inlined]
   in #suite_123#1(::Bool, ::Bool, ::Function, ::##2#3) at /home/vagrant/.julia/v0.5/StatefulIterators/test/runtests.jl:37
   in suite_123(::Function) at /home/vagrant/.julia/v0.5/StatefulIterators/test/runtests.jl:8
   in include_from_node1(::String) at ./loading.jl:426
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
ERROR: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:397
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:281
 in #suite_123#1(::Bool, ::Bool, ::Function, ::##2#3) at /home/vagrant/.julia/v0.5/StatefulIterators/test/runtests.jl:37
 in suite_123(::Function) at /home/vagrant/.julia/v0.5/StatefulIterators/test/runtests.jl:8
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/StatefulIterators/test/runtests.jl, in expression starting on line 113
==========================[ ERROR: StatefulIterators ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/StatefulIterators/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: StatefulIterators had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
