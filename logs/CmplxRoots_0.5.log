>>> 'Pkg.add("CmplxRoots")' log
INFO: Cloning cache of CmplxRoots from https://github.com/giordano/CmplxRoots.jl.git
INFO: Installing CmplxRoots v0.0.2
INFO: Package database updated

>>> 'Pkg.test("CmplxRoots")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (934.31640625 MB free)
Uptime: 11301.0 sec
Load Avg:  1.1474609375  1.10205078125  1.07763671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     556144 s       6144 s      68764 s     359809 s         22 s
#2  3499 MHz     280120 s        102 s      36805 s     762002 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CmplxRoots                    0.0.2
 - JSON                          0.7.0
1 additional packages:
 - Compat                        0.9.2
INFO: Testing CmplxRoots
WARNING: This package is deprecated.  Use PolynomialRoots.jl instead:

  Pkg.update(); Pkg.add("PolynomialRoots")

WARNING: deprecated syntax "root::Complex128".
Use "local root::Complex128" instead.

WARNING: deprecated syntax "root::Complex128".
Use "local root::Complex128" instead.
INFO: Testing random polynomials...
 poly1[1] = 9.516808729894542 - 9.549957352343249im
 poly1[2] = -7.611705170620144 + 7.86461707624175im
 poly1[3] = 8.817418716789504 - 6.753963034628732im
 poly1[4] = -3.2102880540097267 - 1.3469946886987714im
 poly1[5] = 8.711046375478482 - 8.834791792588405im
 poly1[6] = -1.2836611255802097 + 0.9161364935478034im
 poly2[1] = 7.946186132672899 - 8.808714316889592im
 poly2[2] = -7.185668494888913 + 8.191014475752283im
 poly2[3] = 6.558816725368075 + 4.203005297763669im
 poly2[4] = 9.597033694976496 + 6.788516627568555im
 poly2[5] = 8.341478176367666 + 4.484026259922832im
 poly2[6] = -2.701394495716243 - 3.298637497155643im
ERROR: LoadError: assertion failed: |0 - @evalpoly res1[1] poly1[1] poly1[2] poly1[3] poly1[4] poly1[5] poly1[6]| <= 2.0e-12
  0 = 0
  @evalpoly res1[1] poly1[1] poly1[2] poly1[3] poly1[4] poly1[5] poly1[6] = -1.546140993013978e-11 + 1.2732925824820995e-11im
  difference = 2.00295431073257e-11 > 2.0e-12
 in error(::String, ::String, ::Vararg{Any,N}) at ./error.jl:22
 in test_approx_eq(::Int64, ::Complex{Float64}, ::Float64, ::String, ::String) at ./test.jl:863
 in macro expansion; at /home/vagrant/.julia/v0.5/CmplxRoots/test/runtests.jl:100 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CmplxRoots/test/runtests.jl, in expression starting on line 99
=============================[ ERROR: CmplxRoots ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/CmplxRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CmplxRoots had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
