>>> 'Pkg.add("CmplxRoots")' log
INFO: Cloning cache of CmplxRoots from https://github.com/giordano/CmplxRoots.jl.git
INFO: Installing CmplxRoots v0.0.2
INFO: Package database updated

>>> 'Pkg.test("CmplxRoots")' log
Julia Version 0.5.0-rc0+187
Commit 1eeb773 (2016-08-04 02:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1121.81640625 MB free)
Uptime: 10472.0 sec
Load Avg:  1.03271484375  1.0146484375  0.86767578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     438559 s       5436 s      78784 s     395114 s         43 s
#2  3500 MHz     194038 s         54 s      43976 s     757114 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CmplxRoots                    0.0.2
 - JSON                          0.6.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing CmplxRoots
WARNING: This package is deprecated.  Use PolynomialRoots.jl instead:

  Pkg.update(); Pkg.add("PolynomialRoots")

WARNING: deprecated syntax "root::Complex128".
Use "local root::Complex128" instead.

WARNING: deprecated syntax "root::Complex128".
Use "local root::Complex128" instead.
INFO: Testing random polynomials...
 poly1[1] = -5.942398151808739 - 8.86547802142001im
 poly1[2] = -3.720217404620292 - 4.332260013388987im
 poly1[3] = 5.9137880321836676 + 1.1106971769325025im
 poly1[4] = -5.058621971068202 - 8.338797360976598im
 poly1[5] = 2.8061154987854398 - 3.041782878659065im
 poly1[6] = 5.956809499113431 - 0.166924730901151im
 poly2[1] = -3.6616622254668174 - 0.010941009289378911im
 poly2[2] = -9.64405846524162 + 3.0896324755604088im
 poly2[3] = -1.616519917966702 + 0.7194250832390292im
 poly2[4] = -2.518890594926053 - 5.540617934919458im
 poly2[5] = -0.7211621646871524 - 4.915505374096343im
 poly2[6] = -5.165616692123436 + 7.569964607695788im
ERROR: LoadError: syntax: numeric constant "8." cannot be implicitly multiplied because it ends with "."
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CmplxRoots/test/runtests.jl, in expression starting on line 120
=============================[ ERROR: CmplxRoots ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/CmplxRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CmplxRoots had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
