>>> 'Pkg.add("CmplxRoots")' log
INFO: Cloning cache of CmplxRoots from https://github.com/giordano/CmplxRoots.jl.git
INFO: Installing CmplxRoots v0.0.2
INFO: Package database updated

>>> 'Pkg.test("CmplxRoots")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (957.375 MB free)
Uptime: 12591.0 sec
Load Avg:  0.99072265625  1.0263671875  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     561293 s       4788 s      72198 s     402178 s        228 s
#2  3499 MHz     274147 s       5012 s      54166 s     800239 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CmplxRoots                    0.0.2
 - JSON                          0.7.0
1 additional packages:
 - Compat                        0.8.8
INFO: Testing CmplxRoots
WARNING: This package is deprecated.  Use PolynomialRoots.jl instead:

  Pkg.update(); Pkg.add("PolynomialRoots")

WARNING: deprecated syntax "root::Complex128".
Use "local root::Complex128" instead.

WARNING: deprecated syntax "root::Complex128".
Use "local root::Complex128" instead.
INFO: Testing random polynomials...
 poly1[1] = -1.3832483058997127 + 7.900410260155905im
 poly1[2] = -3.6584197455046397 - 8.64110750386478im
 poly1[3] = 5.883793312316952 + 5.797095878705214im
 poly1[4] = -6.57112968030459 - 8.907493574096002im
 poly1[5] = -8.180315101242893 - 7.488978416114658im
 poly1[6] = 4.04310973632767 - 3.3277147397514995im
 poly2[1] = 6.896802182397437 + 1.7275997893432269im
 poly2[2] = -4.0015775727075376 + 2.6982751907645195im
 poly2[3] = -4.40421876404232 + 0.8228981418262293im
 poly2[4] = 0.48460860163465824 - 9.230616969402124im
 poly2[5] = -6.382480001862243 - 5.821271841327094im
 poly2[6] = -2.2753364126405407 + 2.2116586778492433im
ERROR: LoadError: syntax: numeric constant "8." cannot be implicitly multiplied because it ends with "."
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CmplxRoots/test/runtests.jl, in expression starting on line 120
=============================[ ERROR: CmplxRoots ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/CmplxRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CmplxRoots had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
