>>> 'Pkg.add("ArgParse")' log
INFO: Cloning cache of ArgParse from https://github.com/carlobaldassi/ArgParse.jl.git
INFO: Cloning cache of TextWrap from https://github.com/carlobaldassi/TextWrap.jl.git
INFO: Installing ArgParse v0.3.0
INFO: Installing TextWrap v0.1.5
INFO: Package database updated

>>> 'Pkg.test("ArgParse")' log
Julia Version 0.5.0-dev+2335
Commit 5b1b0c5 (2016-01-28 04:34 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing ArgParse
Running argparse_test1WARNING: Method definition ap_test1(Any) in module ArgParseTests at /home/vagrant/.julia/v0.5/ArgParse/test/argparse_test1.jl:33 overwritten at /home/vagrant/.julia/v0.5/ArgParse/test/argparse_test1.jl:33.
Running argparse_test2WARNING: Method definition ap_test2(Any) in module ArgParseTests at /home/vagrant/.julia/v0.5/ArgParse/test/argparse_test2.jl:83 overwritten at /home/vagrant/.julia/v0.5/ArgParse/test/argparse_test2.jl:83.
Running argparse_test3Test Failed
  Expression: stringhelp(s) == "usage: $(basename(Base.source_path())) [--opt1] [--opt2] [-k] [-u] [--array ARRAY]\n                        [--custom CUSTOM]\n                        [--awkward-option XY [XY...]]\n\nTest 3 for ArgParse.jl\n\noptional arguments:\n  --opt1                append O1\n  --opt2                append O2\n  -k                    provide the answer\n  -u                    provide the answer as floating point\n  --array ARRAY         create an array (type: Array{$(Int),1},\n                        default: [7,3,2])\n" * if VERSION < @v_str("0.4-")
            "  --custom CUSTOM       the only accepted argument is \"custom\" (type:\n                        CustomType, default: CustomType())\n"
        else 
            "  --custom CUSTOM       the only accepted argument is \"custom\" (type:\n                        ArgParseTests.CustomType, default:\n                        CustomType())\n"
        end * "  --awkward-option XY [XY...]\n                        either X or Y; all XY's are stored in chunks\n                        (default: $(vecanyopen)$(vecanyopen)\"X\"$(vecanyclose)$(vecanyclose))\n\n"
   Evaluated: "usage: argparse_test3.jl [--opt1] [--opt2] [-k] [-u] [--array ARRAY]\n                        [--custom CUSTOM]\n                        [--awkward-option XY [XY...]]\n\nTest 3 for ArgParse.jl\n\noptional arguments:\n  --opt1                append O1\n  --opt2                append O2\n  -k                    provide the answer\n  -u                    provide the answer as floating point\n  --array ARRAY         create an array (type: Array{Int64,1},\n                        default: [7,3,2])\n  --custom CUSTOM       the only accepted argument is \"custom\" (type:\n                        CustomType, default: CustomType())\n  --awkward-option XY [XY...]\n                        either X or Y; all XY's are stored in chunks\n                        (default: Any[Any[\"X\"]])\n\n" == "usage: argparse_test3.jl [--opt1] [--opt2] [-k] [-u] [--array ARRAY]\n                        [--custom CUSTOM]\n                        [--awkward-option XY [XY...]]\n\nTest 3 for ArgParse.jl\n\noptional arguments:\n  --opt1                append O1\n  --opt2                append O2\n  -k                    provide the answer\n  -u                    provide the answer as floating point\n  --array ARRAY         create an array (type: Array{Int64,1},\n                        default: [7,3,2])\n  --custom CUSTOM       the only accepted argument is \"custom\" (type:\n                        ArgParseTests.CustomType, default:\n                        CustomType())\n  --awkward-option XY [XY...]\n                        either X or Y; all XY's are stored in chunks\n                        (default: Any[Any[\"X\"]])\n\n"

ERROR: LoadError: LoadError: There was an error during testing
 in record at ./test.jl:317
 in do_test at ./test.jl:215
 [inlined code] from /home/vagrant/.julia/v0.5/ArgParse/test/argparse_test3.jl:70
 in anonymous at ./no file:4294967295
 in include at ./boot.jl:262
 in include_from_node1 at ./loading.jl:417
 [inlined code] from /home/vagrant/.julia/v0.5/ArgParse/test/runtests.jl:8
 in anonymous at ./no file:4294967295
 in include at ./boot.jl:262
 in include_from_node1 at ./loading.jl:417
 in process_options at ./client.jl:245
 in _start at ./client.jl:301
while loading /home/vagrant/.julia/v0.5/ArgParse/test/argparse_test3.jl, in expression starting on line 67
while loading /home/vagrant/.julia/v0.5/ArgParse/test/runtests.jl, in expression starting on line 5
==============================[ ERROR: ArgParse ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/ArgParse/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("ArgParse had test errors")
 in test at ./pkg/entry.jl:671
 in anonymous at ./pkg/dir.jl:31
 in cd at ./file.jl:47
 in cd at ./pkg/dir.jl:31
 in test at ./pkg.jl:228
 in eval at ./boot.jl:265
 [inlined code] from ./sysimg.jl:14
 in process_options at ./client.jl:222
 in _start at ./client.jl:301

>>> End of log
