>>> 'Pkg.add("ValidatedNumerics")' log
INFO: Cloning cache of CRlibm from https://github.com/dpsanders/CRlibm.jl.git
INFO: Cloning cache of ValidatedNumerics from https://github.com/dpsanders/ValidatedNumerics.jl.git
INFO: Installing CRlibm v0.2.3
INFO: Installing Calculus v0.1.15
INFO: Installing FixedSizeArrays v0.2.3
INFO: Installing ForwardDiff v0.2.5
INFO: Installing NaNMath v0.2.1
INFO: Installing ValidatedNumerics v0.5.0
INFO: Building CRlibm
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CRlibm/deps/build.jl, in expression starting on line 9
Downloading the library files from http://lipforge.ens-lyon.fr/frs/download.php/162/crlibm-1.0beta4.tar.gz
Working in /home/vagrant/.julia/v0.5/CRlibm/deps/src
--2016-09-04 12:00:15--  http://lipforge.ens-lyon.fr/frs/download.php/162/crlibm-1.0beta4.tar.gz
Resolving lipforge.ens-lyon.fr (lipforge.ens-lyon.fr)... 140.77.166.31
Connecting to lipforge.ens-lyon.fr (lipforge.ens-lyon.fr)|140.77.166.31|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 2368435 (2.3M) [application/binary]
Saving to: ‘crlibm-1.0beta4.tar.gz’

     0K .......... .......... .......... .......... ..........  2%  265K 9s
    50K .......... .......... .......... .......... ..........  4%  179K 10s
   100K .......... .......... .......... .......... ..........  6%  527K 8s
   150K .......... .......... .......... .......... ..........  8%  530K 7s
   200K .......... .......... .......... .......... .......... 10%  526K 6s
   250K .......... .......... .......... .......... .......... 12%  533K 6s
   300K .......... .......... .......... .......... .......... 15%  540K 5s
   350K .......... .......... .......... .......... .......... 17% 20.0M 5s
   400K .......... .......... .......... .......... .......... 19%  544K 4s
   450K .......... .......... .......... .......... .......... 21% 15.9M 4s
   500K .......... .......... .......... .......... .......... 23%  549K 4s
   550K .......... .......... .......... .......... .......... 25% 18.5M 3s
   600K .......... .......... .......... .......... .......... 28% 55.2M 3s
   650K .......... .......... .......... .......... .......... 30%  545K 3s
   700K .......... .......... .......... .......... .......... 32% 21.1M 3s
   750K .......... .......... .......... .......... .......... 34%  562K 2s
   800K .......... .......... .......... .......... .......... 36% 15.0M 2s
   850K .......... .......... .......... .......... .......... 38% 27.6M 2s
   900K .......... .......... .......... .......... .......... 41% 73.6M 2s
   950K .......... .......... .......... .......... .......... 43%  513K 2s
  1000K .......... .......... .......... .......... .......... 45% 59.7M 2s
  1050K .......... .......... .......... .......... .......... 47% 95.2M 2s
  1100K .......... .......... .......... .......... .......... 49% 71.2M 1s
  1150K .......... .......... .......... .......... .......... 51%  524K 1s
  1200K .......... .......... .......... .......... .......... 54% 47.3M 1s
  1250K .......... .......... .......... .......... .......... 56% 6.43M 1s
  1300K .......... .......... .......... .......... .......... 58%  183M 1s
  1350K .......... .......... .......... .......... .......... 60%  669K 1s
  1400K .......... .......... .......... .......... .......... 62% 3.22M 1s
  1450K .......... .......... .......... .......... .......... 64% 4.04M 1s
  1500K .......... .......... .......... .......... .......... 67% 12.2M 1s
  1550K .......... .......... .......... .......... .......... 69%  804K 1s
  1600K .......... .......... .......... .......... .......... 71% 3.59M 1s
  1650K .......... .......... .......... .......... .......... 73% 53.8M 1s
  1700K .......... .......... .......... .......... .......... 75% 2.99M 1s
  1750K .......... .......... .......... .......... .......... 77%  809K 1s
  1800K .......... .......... .......... .......... .......... 79% 31.9M 0s
  1850K .......... .......... .......... .......... .......... 82% 1.54M 0s
  1900K .......... .......... .......... .......... .......... 84%  187M 0s
  1950K .......... .......... .......... .......... .......... 86% 43.4M 0s
  2000K .......... .......... .......... .......... .......... 88%  801K 0s
  2050K .......... .......... .......... .......... .......... 90% 3.81M 0s
  2100K .......... .......... .......... .......... .......... 92% 38.6M 0s
  2150K .......... .......... .......... .......... .......... 95% 3.42M 0s
  2200K .......... .......... .......... .......... .......... 97%  795K 0s
  2250K .......... .......... .......... .......... .......... 99% 3.13M 0s
  2300K .......... ..                                         100% 30.9M=2.0s

2016-09-04 12:00:17 (1.14 MB/s) - ‘crlibm-1.0beta4.tar.gz’ saved [2368435/2368435]

Working in /home/vagrant/.julia/v0.5/CRlibm/deps/src/crlibm-1.0beta4
Working in /home/vagrant/.julia/v0.5/CRlibm/deps/src/crlibm-1.0beta4
Making all in scs_lib
Making all in .
log-de.c: In function ‘log_rn’:
log-de.c:109:66: warning: division by zero [-Wdiv-by-zero]
      if (xdb.i[HI] < 0)                              return (x-x)/0;   /* log(-x) = Nan    */
                                                                  ^
log-de.c: In function ‘log_rd’:
log-de.c:243:66: warning: division by zero [-Wdiv-by-zero]
      if (xdb.i[HI] < 0)                              return (x-x)/0;   /* log(-x) = Nan    */
                                                                  ^
log-de.c: In function ‘log_ru’:
log-de.c:370:66: warning: division by zero [-Wdiv-by-zero]
      if (xdb.i[HI] < 0)                              return (x-x)/0;   /* log(-x) = Nan    */
                                                                  ^
log10-td.c: In function ‘log10_rn’:
log10-td.c:206:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
log10-td.c: In function ‘log10_ru’:
log10-td.c:391:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
log10-td.c: In function ‘log10_rd’:
log10-td.c:571:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
log10-td.c: In function ‘log10_rz’:
log10-td.c:749:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
log2-td.c: In function ‘log2_rn’:
log2-td.c:188:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
log2-td.c: In function ‘log2_ru’:
log2-td.c:374:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
log2-td.c: In function ‘log2_rd’:
log2-td.c:571:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
log2-td.c: In function ‘log2_rz’:
log2-td.c:766:20: warning: division by zero [-Wdiv-by-zero]
        return (x-x)/0;                      /* log(-x) = Nan    */
                    ^
asincos.c: In function ‘asinpi_rd’:
asincos.c:3450:29: warning: variable ‘deltal’ set but not used [-Wunused-but-set-variable]
   double deltatemp, deltah, deltal;
                             ^
asincos.c: In function ‘asinpi_ru’:
asincos.c:3804:29: warning: variable ‘deltal’ set but not used [-Wunused-but-set-variable]
   double deltatemp, deltah, deltal;
                             ^
asincos.c: In function ‘asinpi_rz’:
asincos.c:4157:29: warning: variable ‘deltal’ set but not used [-Wunused-but-set-variable]
   double deltatemp, deltah, deltal;
                             ^
Making all in tests
test_val.c: In function ‘main’:
test_val.c:85:7: warning: format ‘%llx’ expects argument of type ‘long long unsigned int *’, but argument 3 has type ‘int64_t *’ [-Wformat=]
       sscanf(argv[4],"%llx", &input.l);
       ^
test_val.c:99:5: warning: format ‘%llx’ expects argument of type ‘long long unsigned int *’, but argument 3 has type ‘int64_t *’ [-Wformat=]
     sscanf(argv[4],"%llx", &input.l);
     ^
test_val.c:100:5: warning: format ‘%llx’ expects argument of type ‘long long unsigned int *’, but argument 3 has type ‘int64_t *’ [-Wformat=]
     sscanf(argv[5],"%llx", &input2.l);
     ^
INFO: Package database updated

>>> 'Pkg.test("ValidatedNumerics")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (661.1171875 MB free)
Uptime: 27446.0 sec
Load Avg:  0.81103515625  0.93896484375  0.943359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1518289 s       1421 s     199160 s     639983 s         72 s
#2  3500 MHz     424288 s       6099 s      79139 s    2148539 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ValidatedNumerics             0.5.0
6 additional packages:
 - CRlibm                        0.2.3
 - Calculus                      0.1.15
 - Compat                        0.8.8
 - FixedSizeArrays               0.2.3
 - ForwardDiff                   0.2.5
 - NaNMath                       0.2.1
INFO: Computing test dependencies for ValidatedNumerics...
INFO: Installing FactCheck v0.4.3
INFO: Installing Polynomials v0.1.0
INFO: Testing ValidatedNumerics
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::SubString{String}, ::Vararg{SubString{String},N}) at ./deprecated.jl:30
 in collect(::Base.Generator{Array{SubString{String},1},Base.#symbol}) at ./array.jl:304
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CRlibm/src/CRlibm.jl, in expression starting on line 35
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::SubString{String}, ::Vararg{SubString{String},N}) at ./deprecated.jl:30
 in collect_to!(::Array{Symbol,1}, ::Base.Generator{Array{SubString{String},1},Base.#symbol}, ::Int64, ::Int64) at ./array.jl:337
 in collect(::Base.Generator{Array{SubString{String},1},Base.#symbol}) at ./array.jl:305
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CRlibm/src/CRlibm.jl, in expression starting on line 35
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in wrap_MPFR() at /home/vagrant/.julia/v0.5/CRlibm/src/CRlibm.jl:73
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CRlibm/src/CRlibm.jl, in expression starting on line 149
Constructing intervals
Out of 73 total facts:
  Verified: 71
  Pending:  2
Big intervals
6 facts verified.
Complex intervals
3 facts verified.
± tests
3 facts verified.
Consistency tests
25 facts verified.
inv
12 facts verified.
fma consistency
7 facts verified.
∈ tests
5 facts verified.
Inclusion tests
11 facts verified.
Comparison tests
20 facts verified.
Intersection tests
8 facts verified.
Special interval tests
18 facts verified.
mid etc.
12 facts verified.
cancelplus tests
22 facts verified.
mid and radius
7 facts verified.
abs, min, max, sign
20 facts verified.
Precision tests
4 facts verified.
Interval rounding tests
3 facts verified.
Interval power of an interval
4 facts verified.
Numeric tests
19 facts verified.
Power tests
39 facts verified.
Exp and log tests
18 facts verified.
Comparison tests
8 facts verified.
Rational tests
7 facts verified.
Floor etc. tests
24 facts verified.
Trig tests
104 facts verified.
Hyperb tests
41 facts verified.
Tests with rational intervals
3 facts verified.
Rounding rational intervals
1 fact verified.
Tests with float intervals
4 facts verified.
Testing functions of intervals
Out of 2 total facts:
  Pending:  2
Testing conversions
Out of 2 total facts:
  Pending:  2
Linear algebra with intervals tests
2 facts verified.
Interval loop tests
12 facts verified.
Pi tests
Out of 7 total facts:
  Verified: 5
  Pending:  2
Complex interval operations
6 facts verified.
Operations on boxes
9 facts verified.
@intervalbox tests
3 facts verified.
setdiff for IntervalBox
7 facts verified.
DecoratedInterval tests
15 facts verified.
displaymode tests
  > Interval
    > 6 sig figs
WARNING: bytestring(p::Union{Ptr{Int8},Ptr{UInt8}}) is deprecated, use unsafe_string(p) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in bytestring(::Ptr{UInt8}) at ./deprecated.jl:50
 in round_string(::BigFloat, ::Int64, ::RoundingMode{:Down}) at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:61
 in representation(::ValidatedNumerics.Interval{Float64}, ::Void) at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:82
 in show at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:179 [inlined]
 in print(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::ValidatedNumerics.Interval{Float64}) at ./strings/io.jl:8
 in #print_to_string#305(::Void, ::Function, ::ValidatedNumerics.Interval{Float64}, ::Vararg{ValidatedNumerics.Interval{Float64},N}) at ./strings/io.jl:61
 in (::##2345#2417{##2344#2416,ValidatedNumerics.Interval{Float64}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::##2345#2417{##2344#2416,ValidatedNumerics.Interval{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::##2343#2415{ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64}})() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:19
 in context(::##2343#2415{ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##2342#2414)() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:16
 in context(::##2342#2414, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##2341#2413)() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:9
 in facts(::##2341#2413, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl, in expression starting on line 7
WARNING: bytestring(p::Union{Ptr{Int8},Ptr{UInt8}}) is deprecated, use unsafe_string(p) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in bytestring(::Ptr{UInt8}) at ./deprecated.jl:50
 in round_string(::BigFloat, ::Int64, ::RoundingMode{:Up}) at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:61
 in representation(::ValidatedNumerics.Interval{Float64}, ::Void) at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:83
 in show at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:179 [inlined]
 in print(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::ValidatedNumerics.Interval{Float64}) at ./strings/io.jl:8
 in #print_to_string#305(::Void, ::Function, ::ValidatedNumerics.Interval{Float64}, ::Vararg{ValidatedNumerics.Interval{Float64},N}) at ./strings/io.jl:61
 in (::##2345#2417{##2344#2416,ValidatedNumerics.Interval{Float64}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::##2345#2417{##2344#2416,ValidatedNumerics.Interval{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::##2343#2415{ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64}})() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:19
 in context(::##2343#2415{ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##2342#2414)() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:16
 in context(::##2342#2414, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##2341#2413)() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:9
 in facts(::##2341#2413, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl, in expression starting on line 7
    > 10 sig figs
    > 20 sig figs
    > Full
    > Midpoint
WARNING: bytestring(p::Union{Ptr{Int8},Ptr{UInt8}}) is deprecated, use unsafe_string(p) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in bytestring(::Ptr{UInt8}) at ./deprecated.jl:50
 in round_string(::BigFloat, ::Int64, ::RoundingMode{:Nearest}) at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:61
 in representation(::ValidatedNumerics.Interval{Float64}, ::Void) at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:93
 in show at /home/vagrant/.julia/v0.5/ValidatedNumerics/src/display.jl:179 [inlined]
 in print(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::ValidatedNumerics.Interval{Float64}) at ./strings/io.jl:8
 in #print_to_string#305(::Void, ::Function, ::ValidatedNumerics.Interval{Float64}, ::Vararg{ValidatedNumerics.Interval{Float64},N}) at ./strings/io.jl:61
 in (::##2381#2453{##2380#2452,ValidatedNumerics.Interval{Float64}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::##2381#2453{##2380#2452,ValidatedNumerics.Interval{Float64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::##2379#2451{ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64}})() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:55
 in context(::##2379#2451{ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64},ValidatedNumerics.Interval{Float64}}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##2342#2414)() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:52
 in context(::##2342#2414, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##2341#2413)() at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl:9
 in facts(::##2341#2413, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ValidatedNumerics/test/display_tests/display.jl, in expression starting on line 7
  > DecoratedInterval
  > BigFloat intervals
  > IntervalBox
31 facts verified.
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in macro expansion; at /home/vagrant/.julia/v0.5/ValidatedNumerics/test/root_finding_tests/wilkinson.jl:48 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 4 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ValidatedNumerics/test/root_finding_tests/wilkinson.jl, in expression starting on line 47
Testing root finding
  > Interval rounding: wide
    > Precision: (BigFloat,53)
      > Method ValidatedNumerics.RootFinding.newton
        > Function sin; interval Interval(-5.0000000000000000, 5.0000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5000000000000000, 7.5000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.0000000000000000e+01, 2.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0000000000000000, 1.0000000000000000)
          > With autodiff=false
          > With autodiff=true
      > Method ValidatedNumerics.RootFinding.krawczyk
        > Function sin; interval Interval(-5.0000000000000000, 5.0000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5000000000000000, 7.5000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.0000000000000000e+01, 2.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0000000000000000, 1.0000000000000000)
          > With autodiff=false
          > With autodiff=true
    > Precision: (BigFloat,256)
      > Method ValidatedNumerics.RootFinding.newton
        > Function sin; interval Interval(-5.000000000000000000000000000000000000000000000000000000000000000000000000000000, 5.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.500000000000000000000000000000000000000000000000000000000000000000000000000000, 7.500000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.000000000000000000000000000000000000000000000000000000000000000000000000000000, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
      > Method ValidatedNumerics.RootFinding.krawczyk
        > Function sin; interval Interval(-5.000000000000000000000000000000000000000000000000000000000000000000000000000000, 5.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.500000000000000000000000000000000000000000000000000000000000000000000000000000, 7.500000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.000000000000000000000000000000000000000000000000000000000000000000000000000000, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
    > Precision: (Float64,64)
      > Method ValidatedNumerics.RootFinding.newton
        > Function sin; interval Interval(-5.0, 5.0)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5, 7.5)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-20.0, 20.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0, 1.0)
          > With autodiff=false
          > With autodiff=true
      > Method ValidatedNumerics.RootFinding.krawczyk
        > Function sin; interval Interval(-5.0, 5.0)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5, 7.5)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-20.0, 20.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0, 1.0)
          > With autodiff=false
          > With autodiff=true
  > Interval rounding: narrow
    > Precision: (BigFloat,53)
      > Method ValidatedNumerics.RootFinding.newton
        > Function sin; interval Interval(-5.0000000000000000, 5.0000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5000000000000000, 7.5000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.0000000000000000e+01, 2.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0000000000000000, 1.0000000000000000)
          > With autodiff=false
          > With autodiff=true
      > Method ValidatedNumerics.RootFinding.krawczyk
        > Function sin; interval Interval(-5.0000000000000000, 5.0000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5000000000000000, 7.5000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.0000000000000000e+01, 1.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.0000000000000000e+01, 2.0000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0000000000000000, 1.0000000000000000)
          > With autodiff=false
          > With autodiff=true
    > Precision: (BigFloat,256)
      > Method ValidatedNumerics.RootFinding.newton
        > Function sin; interval Interval(-5.000000000000000000000000000000000000000000000000000000000000000000000000000000, 5.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.500000000000000000000000000000000000000000000000000000000000000000000000000000, 7.500000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.000000000000000000000000000000000000000000000000000000000000000000000000000000, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
      > Method ValidatedNumerics.RootFinding.krawczyk
        > Function sin; interval Interval(-5.000000000000000000000000000000000000000000000000000000000000000000000000000000, 5.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.500000000000000000000000000000000000000000000000000000000000000000000000000000, 7.500000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01, 2.000000000000000000000000000000000000000000000000000000000000000000000000000000e+01)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.000000000000000000000000000000000000000000000000000000000000000000000000000000, 1.000000000000000000000000000000000000000000000000000000000000000000000000000000)
          > With autodiff=false
          > With autodiff=true
    > Precision: (Float64,64)
      > Method ValidatedNumerics.RootFinding.newton
        > Function sin; interval Interval(-5.0, 5.0)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5, 7.5)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-20.0, 20.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0, 1.0)
          > With autodiff=false
          > With autodiff=true
      > Method ValidatedNumerics.RootFinding.krawczyk
        > Function sin; interval Interval(-5.0, 5.0)
          > With autodiff=false
          > With autodiff=true
        > Function cos; interval Interval(-7.5, 7.5)
          > With autodiff=false
          > With autodiff=true
        > Function W₃; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function W₇; interval Interval(-10.0, 10.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2494; interval Interval(-20.0, 20.0)
          > With autodiff=false
          > With autodiff=true
        > Function #2497; interval Interval(0.0, 1.0)
          > With autodiff=false
          > With autodiff=true
1512 facts verified.

1 fact verified.
find_roots tests
9 facts verified.
Multiple roots
4 facts verified.
Promotion between Dual and Interval
2 facts verified.
INFO: ValidatedNumerics tests passed
INFO: Removing FactCheck v0.4.3
INFO: Removing Polynomials v0.1.0

>>> End of log
