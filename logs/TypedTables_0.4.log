>>> 'Pkg.add("TypedTables")' log
INFO: Cloning cache of TypedTables from https://github.com/FugroRoames/TypedTables.jl.git
INFO: Installing TypedTables v0.0.6
INFO: Package database updated

>>> 'Pkg.test("TypedTables")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for TypedTables...
INFO: Installing BaseTestNext v0.2.1
INFO: Testing TypedTables
WARNING: New definition 
    convert(Type{#T<:Any}, TypedTables.Cell{#F<:Any, #T<:Any}) at /home/vagrant/.julia/v0.4/TypedTables/src/Cell.jl:28
is ambiguous with: 
    convert(Type{Base.Nullable}, #T<:Any) at nullable.jl:19.
To fix, define 
    convert(Type{Base.Nullable}, _<:TypedTables.Cell{#F<:Any, Base.Nullable})
before the new definition.
WARNING: New definition 
    convert(Type{#StorageType<:Any}, TypedTables.Column{#F<:Any, #ElType<:Any, #StorageType<:Any}) at /home/vagrant/.julia/v0.4/TypedTables/src/Column.jl:31
is ambiguous with: 
    convert(Type{Base.Nullable}, #T<:Any) at nullable.jl:19.
To fix, define 
    convert(Type{Base.Nullable}, _<:TypedTables.Column{#F<:Any, #ElType<:Any, Base.Nullable})
before the new definition.
A::Int64
Row::Int64
Cell:
 ┌───┐
 │ A │
 ├───┤
 │ 1 │
 └───┘
3-row Column:
    ╒═══╕
Row │ A │
    ├───┤
  1 │ 1 │
  2 │ 2 │
  3 │ 3 │
    ╘═══╛
(A::Int64,B::Float64)
2-element Row:
 ╓───┬────────╖
 ║ A │ B      ║
 ╟───┼────────╢
 ║ 1 │ 2.0000 ║
 ╙───┴────────╜
3-row × 2-column Table:
    ╔═══╤════════╗
Row ║ A │ B      ║
    ╟───┼────────╢
  1 ║ 1 │ 2.0000 ║
  2 ║ 2 │ 4.0000 ║
  3 ║ 3 │ 6.0000 ║
    ╚═══╧════════╝
Test Summary: | Pass  Total
Tables tests  |  281    281
INFO: TypedTables tests passed
INFO: Removing BaseTestNext v0.2.1

>>> End of log
