>>> 'Pkg.add("FastCombinations")' log
INFO: Cloning cache of FastCombinations from https://github.com/anthonyclays/FastCombinations.jl.git
INFO: Installing FastCombinations v0.0.1
INFO: Package database updated

>>> 'Pkg.test("FastCombinations")' log
Julia Version 0.5.0-rc2+0
Commit 0350e57 (2016-08-12 11:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (841.87890625 MB free)
Uptime: 20911.0 sec
Load Avg:  1.02197265625  0.98876953125  1.0048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1106786 s       6386 s     156492 s     525694 s         36 s
#2  3500 MHz     389778 s        258 s      66811 s    1554403 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - FastCombinations              0.0.1
 - JSON                          0.6.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing FastCombinations
WARNING: symbol is deprecated, use Symbol instead.WARNING: symbol is deprecated, use Symbol instead.WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #15 at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect(::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}) at ./array.jl:304
 in next(...) at /home/vagrant/.julia/v0.5/FastCombinations/src/FastCombinations.jl:129
 in specialize_method at ./inference.jl:1386 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1482
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1538
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:849
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1040
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1070
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1091
 in copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##188#189{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:469
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1044
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1091
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1721
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1612
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1532
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1556
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/FastCombinations/test/runtests.jl, in expression starting on line 20
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #15 at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect_to!(::Array{Symbol,1}, ::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}, ::Int64, ::Int64) at ./array.jl:337
 in collect_to_with_first!(::Array{Symbol,1}, ::Symbol, ::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}, ::Int64) at ./array.jl:324
 in collect(::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}) at ./array.jl:305
 in next(...) at /home/vagrant/.julia/v0.5/FastCombinations/src/FastCombinations.jl:129
 in specialize_method at ./inference.jl:1386 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1482
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1538
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:849
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1040
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1070
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1091
 in copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##188#189{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:469
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1044
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1091
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1721
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1612
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1532
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1556
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/FastCombinations/test/runtests.jl, in expression starting on line 21
INFO: FastCombinations tests passed

>>> End of log
