>>> 'Pkg.add("FastCombinations")' log
INFO: Cloning cache of FastCombinations from https://github.com/anthonyclays/FastCombinations.jl.git
INFO: Installing FastCombinations v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FastCombinations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FastCombinations")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (634.12890625 MB free)
Uptime: 35468.0 sec
Load Avg:  0.99658203125  1.01416015625  1.044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2074901 s       6905 s     172366 s     925066 s        116 s
#2  3500 MHz     918790 s        105 s     103234 s    2408578 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - FastCombinations              0.0.1
 - JSON                          0.8.3
1 additional packages:
 - Compat                        0.19.0
INFO: Testing FastCombinations
WARNING: symbol is deprecated, use Symbol instead.WARNING: symbol is deprecated, use Symbol instead.WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #15 at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect(::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}) at ./array.jl:307
 in next(...) at /home/vagrant/.julia/v0.5/FastCombinations/src/FastCombinations.jl:129
 in specialize_method at ./inference.jl:1442 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1542
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1598
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:888
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1096
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1126
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1147
 in copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##190#191{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:477
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1100
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1147
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1781
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1672
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1592
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1616
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/FastCombinations/test/runtests.jl, in expression starting on line 20
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in #15 at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect_to!(::Array{Symbol,1}, ::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}, ::Int64, ::Int64) at ./array.jl:340
 in collect(::Base.Generator{UnitRange{Int64},FastCombinations.##15#19}) at ./array.jl:308
 in next(...) at /home/vagrant/.julia/v0.5/FastCombinations/src/FastCombinations.jl:129
 in specialize_method at ./inference.jl:1442 [inlined]
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1542
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1598
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:888
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1096
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1126
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1147
 in copy!(::Array{Any,1}, ::Core.Inference.Generator{Array{Any,1},Core.Inference.##190#191{Array{Any,1},Core.Inference.InferenceState}}) at ./abstractarray.jl:477
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1100
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1147
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1781
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1672
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::LambdaInfo) at ./inference.jl:1592
 in typeinf_ext(::LambdaInfo) at ./inference.jl:1616
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/FastCombinations/test/runtests.jl, in expression starting on line 21
INFO: FastCombinations tests passed

>>> End of log
