>>> 'Pkg.add("CxxWrap")' log
INFO: Cloning cache of CxxWrap from git://github.com/JuliaInterop/CxxWrap.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing CxxWrap v0.1.8
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building CxxWrap
Found Julia library at /home/vagrant/julia/lib/julia/libjulia.so
INFO: Attempting to Create directory /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/cxx_wrap
INFO: Changing Directory to /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/cxx_wrap
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/cxx_wrap
Scanning dependencies of target cxx_wrap
[ 25%] [ 50%] [ 75%] [100%] Building CXX object CMakeFiles/cxx_wrap.dir/c_interface.cpp.o
Building CXX object CMakeFiles/cxx_wrap.dir/containers/containers.cpp.o
Building CXX object CMakeFiles/cxx_wrap.dir/cxx_wrap.cpp.o
Building CXX object CMakeFiles/cxx_wrap.dir/functions.cpp.o
Linking CXX shared library libcxx_wrap.so
[100%] Built target cxx_wrap
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so.0.1
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so.0
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so
-- Removed runtime path from "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so.0.1"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/array.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/cxx_wrap.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/functions.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/type_conversion.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/containers/const_array.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/containers/tuple.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/cmake/CxxWrapConfig.cmake
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/cmake/CxxWrapConfig-release.cmake
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/cmake/CxxWrapConfigVersion.cmake
INFO: Attempting to Create directory /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/examples
INFO: Changing Directory to /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/examples
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/examples
Scanning dependencies of target except
Scanning dependencies of target containers
Scanning dependencies of target functions
[ 25%] [ 25%] Scanning dependencies of target extended
[ 37%] Building CXX object CMakeFiles/except.dir/except.cpp.o
Building CXX object CMakeFiles/containers.dir/containers.cpp.o
Building CXX object CMakeFiles/extended.dir/extended.cpp.o
[ 50%] Building CXX object CMakeFiles/functions.dir/functions.cpp.o
Linking CXX shared library libexcept.so
[ 50%] Built target except
Scanning dependencies of target hello
[ 62%] Building CXX object CMakeFiles/hello.dir/hello.cpp.o
Linking CXX shared library libhello.so
[ 62%] Built target hello
Scanning dependencies of target inheritance
[ 75%] Building CXX object CMakeFiles/inheritance.dir/inheritance.cpp.o
Linking CXX shared library libcontainers.so
[ 75%] Built target containers
Scanning dependencies of target parametric
[ 87%] Building CXX object CMakeFiles/parametric.dir/parametric.cpp.o
Linking CXX shared library libextended.so
[ 87%] Built target extended
Scanning dependencies of target types
[100%] Building CXX object CMakeFiles/types.dir/types.cpp.o
Linking CXX shared library libfunctions.so
[100%] Built target functions
Linking CXX shared library libinheritance.so
[100%] Built target inheritance
Linking CXX shared library libparametric.so
[100%] Built target parametric
Linking CXX shared library libtypes.so
[100%] Built target types
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcontainers.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcontainers.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libexcept.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libexcept.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libextended.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libextended.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libfunctions.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libfunctions.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libhello.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libhello.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libinheritance.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libinheritance.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libparametric.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libparametric.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libtypes.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libtypes.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
INFO: Package database updated

>>> 'Pkg.test("CxxWrap")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (738.3671875 MB free)
Uptime: 15345.0 sec
Load Avg:  1.5771484375  1.193359375  1.11572265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     695400 s       4428 s      71482 s     612145 s         39 s
#2  3499 MHz     478298 s       1961 s      64205 s     931074 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - CxxWrap                       0.1.8
 - JSON                          0.8.0
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing CxxWrap
running test containers.jl...
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CxxWrap/test/containers.jl:4
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/CxxWrap/test/containers.jl:4
Displaying const matrix
3x2 ConstArray{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
running test except.jl...
exception 1
exception 2
exception 3
running test extended_module.jl...
running test functions.jl...
methods(CppHalfFunctions.half_d) = # 2 methods for generic function "half_d":
half_d(arg1::Float64)
half_d(arg1::Int64)
---- Half test timings ----
Julia test:
  0.100819 seconds (148 allocations: 10.151 KB)
  0.107665 seconds (4 allocations: 160 bytes)
  0.107873 seconds (4 allocations: 160 bytes)
C test:
  0.157500 seconds (4 allocations: 160 bytes)
  0.155921 seconds (4 allocations: 160 bytes)
  0.159082 seconds (4 allocations: 160 bytes)
C++ test:
  0.158176 seconds (4 allocations: 160 bytes)
  0.161562 seconds (4 allocations: 160 bytes)
  0.159372 seconds (4 allocations: 160 bytes)
C++ lambda test:
  0.229149 seconds (4 allocations: 160 bytes)
  0.236152 seconds (4 allocations: 160 bytes)
  0.236852 seconds (4 allocations: 160 bytes)
C++ test, loop in the C++ code:
  0.094510 seconds (4 allocations: 160 bytes)
  0.110338 seconds (4 allocations: 160 bytes)
  0.092433 seconds (4 allocations: 160 bytes)
jl_call inside C++ loop (array is 100 times smaller than other tests):
  0.103727 seconds (1.00 M allocations: 15.320 MB, 46.32% gc time)
  0.056703 seconds (1.00 M allocations: 15.259 MB)
  0.054616 seconds (1.00 M allocations: 15.259 MB)
running test hello.jl...
CppHello.greet() = "hello, world"
running test inheritance.jl...
running test parametric.jl...
Dumping object p1:
TemplateType{P1,P2} 
  cpp_object: Ptr{Void} Ptr{Void} @0x0000000003afa860
running test property.jl...
obj.a = val = 6
running test types.jl...
Dumping type w...
World 
  cpp_object: Ptr{Void} Ptr{Void} @0x0000000005694c40
fw = CppTypes.world_factory() = World(Ptr{Void} @0x00000000031bd010)
swf = CppTypes.shared_world_factory() = CxxWrap.SharedPtr{World}(Ptr{Void} @0x0000000005696110)
uwf = CppTypes.unique_world_factory() = CxxWrap.UniquePtr{World}(Ptr{Void} @0x0000000003bec9d0)
CppTypes.greet(w) = "hello"
Destroying World with message constructed
finalized w
throw test 1 passed
throw test 2 passed
completed deepcopy test
noncopyable constructed
completed noncopyable test
creating bitsval1
created bitsval1
creating bc
created bc
a: 2.0, b: 3.0
Destroying World with message default hello
Destroying World with message constructed
Destroying World with message unique factory hello
Destroying World with message shared factory hello
Destroying World with message hello
INFO: CxxWrap tests passed

>>> End of log
