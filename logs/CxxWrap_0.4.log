>>> 'Pkg.add("CxxWrap")' log
INFO: Cloning cache of CxxWrap from git://github.com/JuliaInterop/CxxWrap.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing CxxWrap v0.1.7
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building CxxWrap
Found Julia library at /home/vagrant/julia/lib/julia/libjulia.so
INFO: Attempting to Create directory /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/cxx_wrap
INFO: Changing Directory to /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/cxx_wrap
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/cxx_wrap
Scanning dependencies of target cxx_wrap
[ 25%] [ 50%] [ 75%] Building CXX object CMakeFiles/cxx_wrap.dir/c_interface.cpp.o
Building CXX object CMakeFiles/cxx_wrap.dir/functions.cpp.o
Building CXX object CMakeFiles/cxx_wrap.dir/cxx_wrap.cpp.o
[100%] Building CXX object CMakeFiles/cxx_wrap.dir/containers/containers.cpp.o
Linking CXX shared library libcxx_wrap.so
[100%] Built target cxx_wrap
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so.0.1
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so.0
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so
-- Removed runtime path from "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcxx_wrap.so.0.1"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/array.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/cxx_wrap.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/functions.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/type_conversion.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/containers/const_array.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/include/containers/tuple.hpp
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/cmake/CxxWrapConfig.cmake
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/cmake/CxxWrapConfig-release.cmake
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/cmake/CxxWrapConfigVersion.cmake
INFO: Attempting to Create directory /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/examples
INFO: Changing Directory to /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/examples
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.4/CxxWrap/deps/builds/examples
Scanning dependencies of target functions
[ 12%] Building CXX object CMakeFiles/functions.dir/functions.cpp.o
Scanning dependencies of target except
Scanning dependencies of target extended
Scanning dependencies of target containers
[ 25%] [ 37%] Building CXX object CMakeFiles/containers.dir/containers.cpp.o
Building CXX object CMakeFiles/except.dir/except.cpp.o
[ 50%] Building CXX object CMakeFiles/extended.dir/extended.cpp.o
Linking CXX shared library libexcept.so
[ 50%] Built target except
Scanning dependencies of target hello
[ 62%] Building CXX object CMakeFiles/hello.dir/hello.cpp.o
Linking CXX shared library libhello.so
[ 62%] Built target hello
Scanning dependencies of target inheritance
Linking CXX shared library libextended.so
[ 75%] Building CXX object CMakeFiles/inheritance.dir/inheritance.cpp.o
[ 75%] Built target extended
Scanning dependencies of target parametric
[ 87%] Building CXX object CMakeFiles/parametric.dir/parametric.cpp.o
Linking CXX shared library libcontainers.so
[ 87%] Built target containers
Scanning dependencies of target types
[100%] Building CXX object CMakeFiles/types.dir/types.cpp.o
Linking CXX shared library libfunctions.so
[100%] Built target functions
Linking CXX shared library libinheritance.so
[100%] Built target inheritance
Linking CXX shared library libparametric.so
[100%] Built target parametric
Linking CXX shared library libtypes.so
[100%] Built target types
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcontainers.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libcontainers.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libexcept.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libexcept.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libextended.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libextended.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libfunctions.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libfunctions.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libhello.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libhello.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libinheritance.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libinheritance.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libparametric.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libparametric.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libtypes.so
-- Set runtime path of "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib/libtypes.so" to "/home/vagrant/.julia/v0.4/CxxWrap/deps/usr/lib"
INFO: Package database updated

>>> 'Pkg.test("CxxWrap")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (745.3359375 MB free)
Uptime: 15095.0 sec
Load Avg:  3.27490234375  1.61865234375  1.2978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     711677 s       3445 s      70840 s     567241 s         37 s
#2  3500 MHz     427081 s       2889 s      64258 s     970004 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - CxxWrap                       0.1.7
 - JSON                          0.8.0
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing CxxWrap
running test containers.jl...
Displaying const matrix
3x2 ConstArray{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
running test except.jl...
exception 1
exception 2
exception 3
running test extended_module.jl...
running test functions.jl...
methods(CppHalfFunctions.half_d) = # 2 methods for generic function "half_d":
half_d(arg1::Float64)
half_d(arg1::Int64)
---- Half test timings ----
Julia test:
  0.081229 seconds (148 allocations: 10.151 KB)
  0.094654 seconds (4 allocations: 160 bytes)
  0.102854 seconds (4 allocations: 160 bytes)
C test:
  0.155624 seconds (4 allocations: 160 bytes)
  0.107186 seconds (4 allocations: 160 bytes)
  0.121822 seconds (4 allocations: 160 bytes)
C++ test:
  0.139592 seconds (4 allocations: 160 bytes)
  0.112968 seconds (4 allocations: 160 bytes)
  0.110588 seconds (4 allocations: 160 bytes)
C++ lambda test:
  0.179542 seconds (4 allocations: 160 bytes)
  0.177743 seconds (4 allocations: 160 bytes)
  0.226733 seconds (4 allocations: 160 bytes)
C++ test, loop in the C++ code:
  0.102006 seconds (4 allocations: 160 bytes)
  0.087922 seconds (4 allocations: 160 bytes)
  0.091879 seconds (4 allocations: 160 bytes)
jl_call inside C++ loop (array is 100 times smaller than other tests):
  0.092196 seconds (1.00 M allocations: 15.320 MB, 44.04% gc time)
  0.044126 seconds (1.00 M allocations: 15.259 MB)
  0.044494 seconds (1.00 M allocations: 15.259 MB)
running test hello.jl...
CppHello.greet() = "hello, world"
running test inheritance.jl...
running test parametric.jl...
Dumping object p1:
TemplateType{P1,P2} 
  cpp_object: Ptr{Void} Ptr{Void} @0x000000000317a910
running test property.jl...
obj.a = val = 6
running test types.jl...
Dumping type w...
World 
  cpp_object: Ptr{Void} Ptr{Void} @0x00000000031dff00
fw = CppTypes.world_factory() = World(Ptr{Void} @0x0000000004cfae70)
swf = CppTypes.shared_world_factory() = CxxWrap.SharedPtr{World}(Ptr{Void} @0x0000000004d28990)
uwf = CppTypes.unique_world_factory() = CxxWrap.UniquePtr{World}(Ptr{Void} @0x00000000031fce80)
CppTypes.greet(w) = "hello"
Destroying World with message constructed
finalized w
throw test 1 passed
throw test 2 passed
completed deepcopy test
noncopyable constructed
completed noncopyable test
creating bitsval1
created bitsval1
creating bc
created bc
a: 2.0, b: 3.0
Destroying World with message default hello
Destroying World with message constructed
Destroying World with message unique factory hello
Destroying World with message shared factory hello
Destroying World with message hello
INFO: CxxWrap tests passed

>>> End of log
