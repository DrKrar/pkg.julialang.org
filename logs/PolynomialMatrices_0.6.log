>>> 'Pkg.add("PolynomialMatrices")' log
INFO: Cloning cache of PolynomialMatrices from https://github.com/neveritt/PolynomialMatrices.jl.git
INFO: Installing DataStructures v0.5.3
INFO: Installing PolynomialMatrices v0.1.0
INFO: Installing Polynomials v0.1.4
INFO: Package database updated

>>> 'Pkg.test("PolynomialMatrices")' log
Julia Version 0.6.0-pre.alpha.315
Commit 9a2400c (2017-03-29 22:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (988.296875 MB free)
Uptime: 14467.0 sec
Load Avg:  0.951171875  0.9853515625  0.9609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     878022 s        102 s      76185 s     306554 s         27 s
#2  3499 MHz     209332 s       6642 s      34520 s    1166301 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - PolynomialMatrices            0.1.0
3 additional packages:
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Polynomials                   0.1.4
INFO: Testing PolynomialMatrices
WARNING: PolyMatrix: lengt(d) == 0
WARNING: PolyMatrix: size of elements not consistent
WARNING: PolyMatrix: dimensions are not consistent
WARNING: PolyMatrix: dimensions are not consistent
Error During Test
  Test threw an exception of type MethodError
  Expression: !(isapprox(pm2, pm3))
  MethodError: no method matching rtoldefault(::Type{Polynomials.Poly{Float64}}, ::Type{Polynomials.Poly{Float64}})
  Stacktrace:
   [1] isapprox(::PolynomialMatrices.PolyMatrix{Polynomials.Poly{Float64},Array{Polynomials.Poly{Float64},2},Val{:s},2}, ::PolynomialMatrices.PolyMatrix{Polynomials.Poly{Float64},Array{Polynomials.Poly{Float64},2},Val{:s},2}) at /home/vagrant/.julia/v0.6/PolynomialMatrices/src/methods.jl:171
   [2] include_from_node1(::String) at ./loading.jl:539
   [3] include(::String) at ./sysimg.jl:14
   [4] include_from_node1(::String) at ./loading.jl:539
   [5] include(::String) at ./sysimg.jl:14
   [6] process_options(::Base.JLOptions) at ./client.jl:305
   [7] _start() at ./client.jl:371
ERROR: LoadError: LoadError: There was an error during testing
while loading /home/vagrant/.julia/v0.6/PolynomialMatrices/test/methods.jl, in expression starting on line 17
while loading /home/vagrant/.julia/v0.6/PolynomialMatrices/test/runtests.jl, in expression starting on line 6
=========================[ ERROR: PolynomialMatrices ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/PolynomialMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolynomialMatrices had test errors

>>> End of log
