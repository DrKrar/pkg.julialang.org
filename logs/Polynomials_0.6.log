>>> 'Pkg.add("Polynomials")' log
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("Polynomials")' log
Julia Version 0.6.0-dev.1321
Commit a4612cc (2016-11-27 23:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (710.2890625 MB free)
Uptime: 13381.0 sec
Load Avg:  1.2158203125  1.31591796875  1.1171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     734871 s       6307 s      84418 s     372113 s         22 s
#2  3501 MHz     252600 s        625 s      38472 s    1015636 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - Polynomials                   0.1.1
1 additional packages:
 - Compat                        0.9.4
INFO: Testing Polynomials
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Polynomials/test/runtests.jl, in expression starting on line 64
Test for the exponential function.
WARNING: gamma{T <: Number}(x::AbstractArray{T}) is deprecated, use gamma.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in gamma(::FloatRange{BigFloat}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Polynomials/test/runtests.jl, in expression starting on line 110
Test for the sine function.
WARNING: sinpi{T <: Number}(x::AbstractArray{T}) is deprecated, use sinpi.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sinpi(::FloatRange{Float64}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Polynomials/test/runtests.jl, in expression starting on line 116
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Rational{BigInt},1}) at ./deprecated.jl:50
 in gcd(::Polynomials.Poly{Rational{BigInt}}, ::Polynomials.Poly{Rational{BigInt}}) at /home/vagrant/.julia/v0.6/Polynomials/src/Polynomials.jl:517
 in Polynomials.Pade{T<:Number,S<:Number}(::Polynomials.Poly{Rational{BigInt}}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/Polynomials/src/pade.jl:27
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Polynomials/test/runtests.jl, in expression starting on line 117
Test for the cosine function.
Test for the summation of a factorially divergent series.
The approximate sum of the divergent series is:  0.596347366095526
The approximate sum of the convergent series is: 0.5963473623231946
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sin(::LinSpace{Float64}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Polynomials/test/runtests.jl, in expression starting on line 138
Test for setindex!()
Test for element-wise operations
WARNING: `x $ y` is deprecated.  use `xor(x, y)` or `x âŠ» y` instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in $ at ./deprecated.jl:1032 [inlined]
 in + at /home/vagrant/.julia/v0.6/Polynomials/test/runtests.jl:211 [inlined]
 in polyval(::Polynomials.Poly{Mod2}, ::Mod2) at /home/vagrant/.julia/v0.6/Polynomials/src/Polynomials.jl:375
 in (::Polynomials.Poly{Mod2})(::Mod2) at /home/vagrant/.julia/v0.6/Polynomials/src/Polynomials.jl:386
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Polynomials/test/runtests.jl, in expression starting on line 223
WARNING: Method definition f(Any) in module Main overwritten.
WARNING: Method definition f(Any) in module Main overwritten.
INFO: Polynomials tests passed

>>> End of log
