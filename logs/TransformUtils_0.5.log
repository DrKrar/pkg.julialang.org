>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (882.78125 MB free)
Uptime: 38678.0 sec
Load Avg:  0.88427734375  0.96923828125  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2255531 s       5670 s     235145 s     912908 s        125 s
#2  3500 MHz     742074 s       1092 s     109980 s    2898567 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.23223 0.0920876; -0.23223 0.0 0.0999885; -0.0920876 -0.0999885 0.0])
dAA = TransformUtils.so3([0.0 0.147625 -0.06856; -0.147625 0.0 0.0176159; 0.06856 -0.0176159 0.0])
dAA = TransformUtils.so3([0.0 0.094751 -0.163544; -0.094751 0.0 0.0443849; 0.163544 -0.0443849 0.0])
dAA = TransformUtils.Quaternion(0.9981484438096708,[0.0515104,0.0311453,0.00873708])
dAA = TransformUtils.SO3([0.993898 -0.0744922 0.0813491; 0.0707435 0.996337 0.0480337; -0.0846293 -0.0419857 0.995528])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.970656 -0.23493 0.0513389; 0.238604 0.967476 -0.0840183; -0.0299307 0.0938025 0.995141]),[0.261586,-1.48425,-0.826327])
xj = TransformUtils.SE3(TransformUtils.SO3([0.999236 0.0352725 0.016839; -0.0384934 0.962802 0.267451; -0.00677901 -0.267895 0.963424]),[-1.92676,0.103919,-1.20136])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.960932 0.271984 0.0513237; -0.272627 0.898072 0.345168; 0.0477877 -0.345675 0.937137]),[-1.73396,2.01545,-0.618995])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
