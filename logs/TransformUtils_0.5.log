>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.4
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (395.8359375 MB free)
Uptime: 33689.0 sec
Load Avg:  1.04150390625  1.0419921875  0.99072265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2007045 s       2521 s     212104 s     749567 s        101 s
#2  3500 MHz     596950 s       4302 s      96782 s    2585720 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.4
1 additional packages:
 - Compat                        0.10.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.072836 -0.13193; 0.072836 0.0 -0.0459963; 0.13193 0.0459963 0.0])
dAA = TransformUtils.so3([0.0 -0.069482 0.0648162; 0.069482 0.0 0.0304347; -0.0648162 -0.0304347 0.0])
dAA = TransformUtils.so3([0.0 0.0158101 -0.131238; -0.0158101 0.0 0.0528964; 0.131238 -0.0528964 0.0])
dAA = TransformUtils.Quaternion(0.9951551778874825,[-0.0925802,0.0170016,0.0283906])
dAA = TransformUtils.SO3([0.968936 -0.109717 0.221641; 0.0715834 0.982264 0.173302; -0.236724 -0.152053 0.959605])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
