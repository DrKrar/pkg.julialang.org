>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (617.8359375 MB free)
Uptime: 38638.0 sec
Load Avg:  1.1298828125  1.05078125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2289145 s       5200 s     206823 s     902246 s        183 s
#2  3503 MHz     757615 s        958 s     107336 s    2877768 s          9 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.211311 -0.106837; -0.211311 0.0 0.0615168; 0.106837 -0.0615168 0.0])
dAA = TransformUtils.so3([0.0 0.0804819 0.0641683; -0.0804819 0.0 -0.0195592; -0.0641683 0.0195592 0.0])
dAA = TransformUtils.so3([0.0 0.0715572 -0.245889; -0.0715572 0.0 -0.0525957; 0.245889 0.0525957 0.0])
dAA = TransformUtils.Quaternion(0.9998800371024474,[0.0152678,0.00237792,0.00107309])
dAA = TransformUtils.SO3([0.999613 -0.0267065 -0.00774963; 0.0265294 0.999403 -0.0221171; 0.00833567 0.021903 0.999725])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.98537 0.170291 -0.00685526; -0.16691 0.956115 -0.240802; -0.0344521 0.238424 0.97055]),[0.736928,-1.02413,0.876871])
xj = TransformUtils.SE3(TransformUtils.SO3([0.961338 0.172051 -0.215006; -0.145587 0.980298 0.133494; 0.233737 -0.0970309 0.967446]),[0.0421591,-0.0289694,0.589336])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.963521 0.00925446 -0.267472; 0.0802375 0.943441 0.321684; 0.255321 -0.331411 0.908283]),[-0.840802,0.764623,-0.513942])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
