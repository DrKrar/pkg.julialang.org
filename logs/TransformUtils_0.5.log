>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (406.9453125 MB free)
Uptime: 35861.0 sec
Load Avg:  0.90478515625  0.943359375  0.95361328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2157650 s       6258 s     181029 s     804463 s        152 s
#2  3500 MHz     676906 s         82 s      94257 s    2708761 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.17.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0174387 -0.00620895; 0.0174387 0.0 0.010739; 0.00620895 -0.010739 0.0])
dAA = TransformUtils.so3([0.0 0.200292 -0.0788164; -0.200292 0.0 -0.12661; 0.0788164 0.12661 0.0])
dAA = TransformUtils.so3([0.0 0.0978138 0.0196355; -0.0978138 0.0 -0.0738164; -0.0196355 0.0738164 0.0])
dAA = TransformUtils.Quaternion(0.9947899197734112,[-0.0681808,-0.0252723,-0.0714542])
dAA = TransformUtils.SO3([0.956483 0.129889 -0.261284; -0.0813082 0.978634 0.188852; 0.280231 -0.159389 0.946607])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.789482 -0.307482 -0.531199; -0.0145702 0.855832 -0.517049; 0.613601 0.415941 0.671184]),[-0.744169,-1.18379,0.707855])
xj = TransformUtils.SE3(TransformUtils.SO3([0.945756 0.324109 -0.022338; -0.313758 0.929059 0.195973; 0.0842701 -0.178334 0.980355]),[0.977243,0.0753906,0.9226])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.802937 0.132915 0.581055; -0.524276 0.621284 0.582358; -0.283596 -0.77223 0.568536]),[1.47244,0.637667,-1.42134])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
