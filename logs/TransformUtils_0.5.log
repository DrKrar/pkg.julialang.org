>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (880.67578125 MB free)
Uptime: 40433.0 sec
Load Avg:  1.01416015625  1.03564453125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2354783 s        879 s     256183 s     944668 s        242 s
#2  3499 MHz     758419 s       5724 s     135793 s    2991182 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0837515 0.139703; 0.0837515 0.0 -0.0771591; -0.139703 0.0771591 0.0])
dAA = TransformUtils.so3([0.0 0.0047665 -0.0091751; -0.0047665 0.0 -0.0916884; 0.0091751 0.0916884 0.0])
dAA = TransformUtils.so3([0.0 0.072156 0.0782207; -0.072156 0.0 0.120897; -0.0782207 -0.120897 0.0])
dAA = TransformUtils.Quaternion(0.9971159386891076,[0.0655211,0.0228907,-0.0307052])
dAA = TransformUtils.SO3([0.99275 -0.118228 -0.0216623; 0.117794 0.99283 -0.0203301; 0.0239106 0.0176311 0.999559])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.887316 0.275607 -0.369745; -0.450223 0.69131 -0.565146; 0.09985 0.667931 0.737495]),[0.96356,-0.393434,-1.11525])
xj = TransformUtils.SE3(TransformUtils.SO3([0.934327 -0.338229 -0.112404; 0.318209 0.933658 -0.164398; 0.160551 0.117834 0.979969]),[-0.268533,-0.765225,0.500436])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.701809 -0.708704 0.0721278; 0.584725 0.630933 0.509921; -0.406891 -0.315692 0.857192]),[-0.76454,0.48257,1.85724])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
