>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (818.296875 MB free)
Uptime: 37057.0 sec
Load Avg:  1.08642578125  1.0146484375  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2228900 s       6535 s     196572 s     848041 s        196 s
#2  3500 MHz     753883 s         96 s     106050 s    2721181 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.230384 -0.0965873; 0.230384 0.0 0.2142; 0.0965873 -0.2142 0.0])
dAA = TransformUtils.so3([0.0 0.15131 0.0946697; -0.15131 0.0 0.0716128; -0.0946697 -0.0716128 0.0])
dAA = TransformUtils.so3([0.0 0.089292 -0.00331221; -0.089292 0.0 0.0365222; 0.00331221 -0.0365222 0.0])
dAA = TransformUtils.Quaternion(0.9948848738271445,[-0.000116568,-0.0853591,-0.0540176])
dAA = TransformUtils.SO3([0.998173 0.042537 -0.0429059; -0.0331714 0.979385 0.199259; 0.0504972 -0.197471 0.979007])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.997468 -0.0573294 0.0420916; 0.0645514 0.978197 -0.197391; -0.0298576 0.199609 0.979421]),[1.00701,-0.885682,0.184376])
xj = TransformUtils.SE3(TransformUtils.SO3([0.947684 0.223294 0.22811; -0.263027 0.951144 0.161686; -0.180862 -0.213226 0.960116]),[1.32667,-2.08402,0.30239])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.933706 0.290493 0.209302; -0.347724 0.875043 0.336731; -0.0853307 -0.387187 0.918044]),[0.237976,-1.16698,0.365582])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
