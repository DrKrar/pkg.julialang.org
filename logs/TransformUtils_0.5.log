>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (905.3125 MB free)
Uptime: 38913.0 sec
Load Avg:  1.0126953125  1.01123046875  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2328624 s       4539 s     201983 s     894448 s        204 s
#2  3499 MHz     756474 s       2107 s     114078 s    2892943 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0535222 -0.0693285; -0.0535222 0.0 0.123791; 0.0693285 -0.123791 0.0])
dAA = TransformUtils.so3([0.0 0.12054 0.0164426; -0.12054 0.0 -0.0438625; -0.0164426 0.0438625 0.0])
dAA = TransformUtils.so3([0.0 0.0411232 0.0935083; -0.0411232 0.0 0.091317; -0.0935083 -0.091317 0.0])
dAA = TransformUtils.Quaternion(0.9964118463620613,[-0.0553101,-0.0518452,0.0376337])
dAA = TransformUtils.SO3([0.991754 0.0272802 0.125223; -0.0551264 0.972879 0.224652; -0.115698 -0.229702 0.96636])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.963765 -0.123553 0.236415; 0.156906 0.979304 -0.127845; -0.215727 0.160308 0.963205]),[0.285822,0.684855,-0.528021])
xj = TransformUtils.SE3(TransformUtils.SO3([0.898135 0.434734 0.0660289; -0.388256 0.854519 -0.345042; -0.206424 0.284258 0.936262]),[-0.278165,-1.5132,-2.25032])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.849202 0.491739 -0.192479; -0.524279 0.82869 -0.195969; 0.0631402 0.26733 0.961534]),[-0.516893,-2.35898,-1.51125])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
