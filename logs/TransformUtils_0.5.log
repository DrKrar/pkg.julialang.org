>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (406.71484375 MB free)
Uptime: 38316.0 sec
Load Avg:  1.0498046875  1.029296875  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    2203102 s       6248 s     213263 s     951255 s        172 s
#2  3496 MHz     772230 s        240 s     105081 s    2817936 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.058404 0.0374695; -0.058404 0.0 0.0160816; -0.0374695 -0.0160816 0.0])
dAA = TransformUtils.so3([0.0 -0.200012 0.155279; 0.200012 0.0 0.0790822; -0.155279 -0.0790822 0.0])
dAA = TransformUtils.so3([0.0 0.141865 -0.176066; -0.141865 0.0 -0.0800363; 0.176066 0.0800363 0.0])
dAA = TransformUtils.Quaternion(0.9960765020157498,[0.0405624,0.0230463,0.0752008])
dAA = TransformUtils.SO3([0.989165 -0.0779028 -0.124437; 0.0740739 0.996634 -0.0351124; 0.126753 0.0255144 0.991606])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.97651 -0.096739 0.192535; 0.149568 0.947535 -0.282502; -0.155104 0.304663 0.939746]),[-0.911083,-1.30407,-0.66154])
xj = TransformUtils.SE3(TransformUtils.SO3([0.891961 0.271508 -0.361509; -0.21349 0.957776 0.19258; 0.398532 -0.0945949 0.912263]),[-0.78298,0.591154,-0.98936])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.777264 0.423056 -0.46571; -0.167159 0.852441 0.495381; 0.606564 -0.307194 0.733289]),[0.459405,1.68352,-0.818808])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
