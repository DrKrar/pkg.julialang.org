>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (849.2265625 MB free)
Uptime: 38617.0 sec
Load Avg:  1.1123046875  1.0302734375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    2303038 s       3007 s     224466 s     867783 s        159 s
#2  3501 MHz     695180 s       3648 s     116296 s    2909436 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0321123 -0.0591045; -0.0321123 0.0 -0.0496984; 0.0591045 0.0496984 0.0])
dAA = TransformUtils.so3([0.0 0.113787 0.0455408; -0.113787 0.0 0.143086; -0.0455408 -0.143086 0.0])
dAA = TransformUtils.so3([0.0 0.2381 0.0760584; -0.2381 0.0 -0.0393749; -0.0760584 0.0393749 0.0])
dAA = TransformUtils.Quaternion(0.9916313547532695,[-0.0971717,0.0743373,0.0412174])
dAA = TransformUtils.SO3([0.999404 0.0182103 -0.0293288; -0.0196963 0.998494 -0.0512014; 0.0283523 0.0517486 0.998258])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.997444 0.0600426 -0.038746; -0.0613925 0.997512 -0.0346444; 0.0365695 0.0369345 0.998648]),[0.549027,0.640701,0.685137])
xj = TransformUtils.SE3(TransformUtils.SO3([0.948519 0.255249 0.187509; -0.186138 0.928256 -0.322016; -0.25625 0.270535 0.92798]),[-1.58678,-0.359161,2.44179])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.948151 0.207502 0.240734; -0.138188 0.951264 -0.275682; -0.286207 0.228121 0.930616]),[-2.00472,-1.06073,1.87167])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
