>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (917.13671875 MB free)
Uptime: 38146.0 sec
Load Avg:  0.9541015625  0.9853515625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2295819 s       1268 s     181988 s     857179 s        160 s
#2  3500 MHz     699736 s       5341 s      94796 s    2888251 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.078323 0.129219; -0.078323 0.0 -0.0314489; -0.129219 0.0314489 0.0])
dAA = TransformUtils.so3([0.0 -0.112626 -0.0106795; 0.112626 0.0 -0.045943; 0.0106795 0.045943 0.0])
dAA = TransformUtils.so3([0.0 -0.0218883 -0.00173957; 0.0218883 0.0 0.0399914; 0.00173957 -0.0399914 0.0])
dAA = TransformUtils.Quaternion(0.9996159255558053,[0.00617856,-0.0188857,0.0193172])
dAA = TransformUtils.SO3([0.990495 -0.072469 -0.116912; 0.0717927 0.99737 -0.00999103; 0.117329 0.0015026 0.993092])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.995652 -0.0636079 0.0680557; 0.0731894 0.98611 -0.149095; -0.0576268 0.153428 0.986478]),[0.177484,1.28526,-0.0938044])
xj = TransformUtils.SE3(TransformUtils.SO3([0.940935 0.328345 0.0826507; -0.302254 0.924564 -0.231999; -0.152592 0.193314 0.969198]),[0.0200014,0.703979,-1.75679])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.923515 0.383446 0.0094597; -0.381319 0.920497 -0.0853316; -0.0414277 0.0751978 0.996308]),[-0.103509,-0.818335,-1.56455])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
