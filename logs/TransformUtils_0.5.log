>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (832.9609375 MB free)
Uptime: 37518.0 sec
Load Avg:  0.955078125  0.97265625  0.95556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2258479 s       7258 s     185967 s     844734 s        156 s
#2  3499 MHz     711202 s        152 s      97223 s    2809922 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.133656 -0.0486863; 0.133656 0.0 0.116985; 0.0486863 -0.116985 0.0])
dAA = TransformUtils.so3([0.0 0.175071 -0.041503; -0.175071 0.0 0.050688; 0.041503 -0.050688 0.0])
dAA = TransformUtils.so3([0.0 0.377832 -0.069461; -0.377832 0.0 0.0831513; 0.069461 -0.0831513 0.0])
dAA = TransformUtils.Quaternion(0.989040862589078,[0.13829,-0.0318896,0.0407091])
dAA = TransformUtils.SO3([0.985003 -0.140545 0.100077; 0.153881 0.977953 -0.141167; -0.0780305 0.15445 0.984915])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.987192 0.0190738 0.158392; -0.0809889 0.915299 0.394549; -0.13745 -0.402324 0.90512]),[1.48616,0.812239,-0.246935])
xj = TransformUtils.SE3(TransformUtils.SO3([0.854704 -0.360401 -0.373621; 0.471439 0.840186 0.268016; 0.217318 -0.405214 0.888017]),[-0.37348,0.0875607,-0.213326])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.775705 -0.368134 -0.5126; 0.360377 0.925174 -0.119082; 0.518083 -0.092357 0.850329]),[-1.78175,-0.71229,-0.550053])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
