>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (901.37890625 MB free)
Uptime: 39901.0 sec
Load Avg:  1.03564453125  1.02294921875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2354888 s        128 s     228476 s     925395 s        194 s
#2  3500 MHz     763536 s       6517 s     123751 s    2959266 s         12 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0451933 0.0974467; -0.0451933 0.0 -0.0513525; -0.0974467 0.0513525 0.0])
dAA = TransformUtils.so3([0.0 -0.0530594 0.140327; 0.0530594 0.0 0.0683711; -0.140327 -0.0683711 0.0])
dAA = TransformUtils.so3([0.0 -0.120668 -0.14986; 0.120668 0.0 0.0822924; 0.14986 -0.0822924 0.0])
dAA = TransformUtils.Quaternion(0.9789223299103583,[-0.112136,-0.130249,0.110326])
dAA = TransformUtils.SO3([0.991997 0.124549 0.0207397; -0.121919 0.98757 -0.0992004; -0.0328372 0.0958779 0.994851])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.93742 -0.175898 -0.300504; 0.0538337 0.92586 -0.374013; 0.344013 0.33443 0.877389]),[-0.762684,-0.979463,-1.16791])
xj = TransformUtils.SE3(TransformUtils.SO3([0.931572 -0.166251 0.323317; 0.0601266 0.947524 0.313979; -0.35855 -0.273054 0.892683]),[0.756578,-0.161417,1.02522])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.753166 -0.198772 0.627081; -0.228103 0.8152 0.532369; -0.617017 -0.544002 0.568641]),[2.22269,1.22361,1.16172])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
