>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (894.0234375 MB free)
Uptime: 40508.0 sec
Load Avg:  1.083984375  1.052734375  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2337832 s       1506 s     187749 s    1056248 s        191 s
#2  3500 MHz     820700 s       5488 s      98048 s    2992717 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.00740217 0.0266395; 0.00740217 0.0 0.057764; -0.0266395 -0.057764 0.0])
dAA = TransformUtils.so3([0.0 -0.131206 0.114996; 0.131206 0.0 0.150643; -0.114996 -0.150643 0.0])
dAA = TransformUtils.so3([0.0 0.062874 0.0573352; -0.062874 0.0 0.0563411; -0.0573352 -0.0563411 0.0])
dAA = TransformUtils.Quaternion(0.9997928201571188,[-0.0135664,-0.00113684,-0.015132])
dAA = TransformUtils.SO3([0.992842 -0.100923 -0.0638685; 0.102531 0.994478 0.0224002; 0.0612551 -0.0287883 0.997707])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.979643 -0.168497 -0.109123; 0.185442 0.967754 0.170478; 0.0768795 -0.187243 0.979301]),[-0.33487,0.618538,0.00524227])
xj = TransformUtils.SE3(TransformUtils.SO3([0.86073 0.00903146 -0.508982; 0.104434 0.975444 0.193915; 0.498235 -0.220064 0.83865]),[1.03322,-1.46264,-0.794422])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.900878 0.172818 -0.398186; -0.137255 0.983674 0.116393; 0.4118 -0.0502031 0.90989]),[0.892825,-2.09486,-1.2872])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
