>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (624.0546875 MB free)
Uptime: 37028.0 sec
Load Avg:  0.9658203125  0.9951171875  1.01513671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2271053 s        375 s     190503 s     764156 s        150 s
#2  3500 MHz     648453 s       5402 s      97021 s    2829423 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.258215 -0.0376018; -0.258215 0.0 0.10288; 0.0376018 -0.10288 0.0])
dAA = TransformUtils.so3([0.0 0.134727 -0.180125; -0.134727 0.0 0.0651215; 0.180125 -0.0651215 0.0])
dAA = TransformUtils.so3([0.0 0.000621861 0.135148; -0.000621861 0.0 -0.0748322; -0.135148 0.0748322 0.0])
dAA = TransformUtils.Quaternion(0.9994335636897718,[0.0196932,0.00568292,-0.0266915])
dAA = TransformUtils.SO3([0.992704 -0.0450624 -0.111838; 0.0469312 0.998798 0.0141321; 0.111067 -0.0192777 0.993626])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.997404 -0.0468761 0.0546625; 0.0272622 0.94841 0.315872; -0.0666493 -0.313562 0.947226]),[0.0259835,0.084892,-0.854329])
xj = TransformUtils.SE3(TransformUtils.SO3([0.943912 0.249567 -0.216208; -0.270422 0.96001 -0.0724678; 0.189476 0.126871 0.973654]),[-1.17551,-0.30753,1.588])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.921461 0.266635 -0.282515; -0.360131 0.859003 -0.363895; 0.145654 0.437058 0.887561]),[-1.37185,-1.08168,2.1238])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
