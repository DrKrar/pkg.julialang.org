>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (893.0859375 MB free)
Uptime: 39718.0 sec
Load Avg:  0.9482421875  0.96337890625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2309644 s       1180 s     201552 s     982308 s        232 s
#2  3500 MHz     836813 s       5458 s     112638 s    2870520 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0851842 -0.00433987; 0.0851842 0.0 0.187833; 0.00433987 -0.187833 0.0])
dAA = TransformUtils.so3([0.0 0.0734826 -0.0923659; -0.0734826 0.0 0.0214216; 0.0923659 -0.0214216 0.0])
dAA = TransformUtils.so3([0.0 -0.18016 0.0966656; 0.18016 0.0 -0.0304592; -0.0966656 0.0304592 0.0])
dAA = TransformUtils.Quaternion(0.9988175858168874,[0.0194121,-0.0158081,-0.0416738])
dAA = TransformUtils.SO3([0.997577 0.0582431 0.0380418; -0.0543694 0.9939 -0.0959517; -0.0433982 0.093651 0.994659])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.986136 0.153116 -0.0639611; -0.161563 0.973873 -0.159591; 0.0378541 0.167712 0.985109]),[-0.171207,0.246309,-0.681923])
xj = TransformUtils.SE3(TransformUtils.SO3([0.974526 0.193672 0.11309; -0.202734 0.976362 0.074942; -0.0959025 -0.0959601 0.990754]),[1.301,0.669732,-0.461866])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.99014 0.029611 0.136918; -0.0643056 0.964413 0.256461; -0.124452 -0.262737 0.956808]),[1.39172,0.674684,0.0550417])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
