>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (901.4921875 MB free)
Uptime: 38009.0 sec
Load Avg:  1.00537109375  1.0146484375  0.982421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2268717 s       3689 s     229164 s     837303 s        178 s
#2  3500 MHz     701207 s       2601 s     116800 s    2857156 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0598172 -0.0109637; -0.0598172 0.0 0.115956; 0.0109637 -0.115956 0.0])
dAA = TransformUtils.so3([0.0 -0.159497 0.0894335; 0.159497 0.0 0.0149057; -0.0894335 -0.0149057 0.0])
dAA = TransformUtils.so3([0.0 -0.0528025 -0.0178651; 0.0528025 0.0 -0.0367829; 0.0178651 0.0367829 0.0])
dAA = TransformUtils.Quaternion(0.9975134284876453,[-0.038381,-0.00282532,0.0590413])
dAA = TransformUtils.SO3([0.999336 0.0264842 -0.025024; -0.0257355 0.999225 0.0297818; 0.0257934 -0.029118 0.999243])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.967863 0.138883 -0.209651; -0.170895 0.974832 -0.143167; 0.184491 0.174395 0.967238]),[0.364095,-0.182274,0.206621])
xj = TransformUtils.SE3(TransformUtils.SO3([0.726345 0.540255 -0.424909; -0.577342 0.81501 0.0493362; 0.372959 0.209483 0.903891]),[-0.221768,1.27638,-1.1017])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.870475 0.422259 -0.252925; -0.396893 0.906063 0.146716; 0.291118 -0.0273283 0.956297]),[-1.05769,1.11241,-1.35147])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
