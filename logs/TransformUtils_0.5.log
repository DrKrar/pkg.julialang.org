>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (398.25390625 MB free)
Uptime: 39842.0 sec
Load Avg:  1.0068359375  0.931640625  0.95654296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2300878 s         45 s     193616 s    1009889 s        330 s
#2  3500 MHz     845077 s       6175 s     113800 s    2833089 s         10 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.18.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0721975 0.0510881; -0.0721975 0.0 0.0460446; -0.0510881 -0.0460446 0.0])
dAA = TransformUtils.so3([0.0 0.0326 0.0753398; -0.0326 0.0 -0.103705; -0.0753398 0.103705 0.0])
dAA = TransformUtils.so3([0.0 -0.0605148 0.0711837; 0.0605148 0.0 -0.0235361; -0.0711837 0.0235361 0.0])
dAA = TransformUtils.Quaternion(0.9958486436687611,[0.0527726,0.0123099,0.0731368])
dAA = TransformUtils.SO3([0.985961 0.0105862 -0.166638; -0.0299372 0.993024 -0.114047; 0.164268 0.117435 0.9794])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.94759 0.299839 0.110317; -0.211641 0.847774 -0.486299; -0.239335 0.437465 0.866801]),[-1.36768,-0.917627,-1.11157])
xj = TransformUtils.SE3(TransformUtils.SO3([0.997058 0.0122364 -0.0756702; -0.00239534 0.991668 0.128798; 0.0766158 -0.128238 0.98878]),[-2.06879,0.097073,0.233076])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.926972 -0.16759 -0.335613; 0.330443 0.78828 0.519059; 0.177568 -0.592054 0.786092]),[-1.20094,1.23825,0.59475])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
