>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (899.8203125 MB free)
Uptime: 39075.0 sec
Load Avg:  0.95263671875  0.9853515625  0.96240234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2275404 s       3533 s     200130 s     970665 s        171 s
#2  3499 MHz     814429 s       3191 s     112224 s    2841940 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.101314 -0.184355; -0.101314 0.0 -0.0489343; 0.184355 0.0489343 0.0])
dAA = TransformUtils.so3([0.0 -0.0478398 0.0754691; 0.0478398 0.0 -0.100542; -0.0754691 0.100542 0.0])
dAA = TransformUtils.so3([0.0 -0.0105702 0.270413; 0.0105702 0.0 -0.0322082; -0.270413 0.0322082 0.0])
dAA = TransformUtils.Quaternion(0.995336253409586,[0.0486854,0.0682949,-0.0476579])
dAA = TransformUtils.SO3([0.986129 0.165959 0.0025331; -0.165915 0.986058 -0.0127041; -0.00460615 0.0121076 0.999916])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.995364 -0.0279503 -0.0920308; 0.0423209 0.986514 0.158114; 0.0863703 -0.161275 0.983123]),[0.0700342,0.256771,-0.73515])
xj = TransformUtils.SE3(TransformUtils.SO3([0.980821 -0.135912 -0.139703; 0.186542 0.86233 0.470732; 0.0564923 -0.487764 0.871146]),[0.218145,0.173485,0.646327])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.989048 -0.140916 -0.0438929; 0.147501 0.933164 0.327794; -0.00523215 -0.330678 0.943729]),[0.263218,-0.309101,1.33136])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
