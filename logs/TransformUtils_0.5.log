>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (402.5234375 MB free)
Uptime: 35964.0 sec
Load Avg:  1.009765625  1.0322265625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2173059 s       6308 s     191133 s     781015 s         70 s
#2  3503 MHz     619063 s        993 s      91047 s    2795246 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.18.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.104076 -0.012543; -0.104076 0.0 -0.060273; 0.012543 0.060273 0.0])
dAA = TransformUtils.so3([0.0 0.057658 -0.060373; -0.057658 0.0 -0.156759; 0.060373 0.156759 0.0])
dAA = TransformUtils.so3([0.0 0.0250709 0.023042; -0.0250709 0.0 0.10631; -0.023042 -0.10631 0.0])
dAA = TransformUtils.Quaternion(0.9974975752351929,[-0.0668055,-0.0121428,-0.019702])
dAA = TransformUtils.SO3([0.996221 -0.0531191 -0.0687224; 0.04105 0.985197 -0.166437; 0.0765461 0.162987 0.983654])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.999261 0.0382517 0.00365931; -0.0382095 0.999209 -0.010983; -0.00407654 0.0108351 0.999933]),[1.61198,-1.1851,-0.115789])
xj = TransformUtils.SE3(TransformUtils.SO3([0.778628 -0.0779051 -0.622631; 0.073811 0.996745 -0.0324113; 0.62313 -0.0207207 0.781844]),[-0.382376,-0.729538,1.21801])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.772692 -0.115848 -0.62412; 0.110288 0.992753 -0.047731; 0.625127 -0.0319517 0.779869]),[-2.01573,0.393363,1.32141])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
