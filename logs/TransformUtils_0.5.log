>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (890.31640625 MB free)
Uptime: 38457.0 sec
Load Avg:  0.95263671875  0.9755859375  0.9755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2308978 s       2607 s     183066 s     869968 s        189 s
#2  3499 MHz     691165 s       6025 s     100688 s    2909092 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0997069 -0.0543731; 0.0997069 0.0 -0.0579795; 0.0543731 0.0579795 0.0])
dAA = TransformUtils.so3([0.0 -0.16252 -0.0656085; 0.16252 0.0 -0.0945195; 0.0656085 0.0945195 0.0])
dAA = TransformUtils.so3([0.0 0.0489559 -0.0661419; -0.0489559 0.0 0.0686074; 0.0661419 -0.0686074 0.0])
dAA = TransformUtils.Quaternion(0.9910142632015675,[0.00261687,-0.116981,-0.0648018])
dAA = TransformUtils.SO3([0.997221 -0.0578996 0.0468887; 0.0541152 0.995459 0.0783113; -0.05121 -0.0755563 0.995826])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.926031 -0.16985 -0.337073; 0.264285 0.929362 0.25776; 0.269482 -0.327777 0.905506]),[0.666438,-0.277192,1.21022])
xj = TransformUtils.SE3(TransformUtils.SO3([0.948304 -0.308754 0.0734129; 0.286976 0.933023 0.217056; -0.135513 -0.184767 0.973395]),[-1.46726,-2.39683,0.941709])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.917484 -0.0891234 0.387659; 0.150053 0.98012 -0.129803; -0.368384 0.177261 0.912618]),[-2.60842,-1.51949,-0.0702848])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
