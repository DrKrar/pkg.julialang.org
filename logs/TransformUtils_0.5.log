>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (475.859375 MB free)
Uptime: 38075.0 sec
Load Avg:  0.98095703125  0.99609375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2265521 s       3380 s     181496 s     899080 s        158 s
#2  3500 MHz     752556 s       3851 s      97254 s    2834973 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0679614 0.0208863; -0.0679614 0.0 0.0724527; -0.0208863 -0.0724527 0.0])
dAA = TransformUtils.so3([0.0 0.0843771 0.0532041; -0.0843771 0.0 -0.141598; -0.0532041 0.141598 0.0])
dAA = TransformUtils.so3([0.0 -0.186792 -0.145187; 0.186792 0.0 0.207315; 0.145187 -0.207315 0.0])
dAA = TransformUtils.Quaternion(0.9979528658422226,[-0.0143427,-0.00529898,0.062099])
dAA = TransformUtils.SO3([0.979283 0.0359525 -0.199278; -0.0227429 0.997413 0.0681852; 0.201214 -0.0622404 0.977568])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.937952 -0.139322 -0.317545; 0.20073 0.964857 0.169581; 0.282759 -0.2228 0.932956]),[-1.16333,-0.120312,-0.630416])
xj = TransformUtils.SE3(TransformUtils.SO3([0.986103 -0.158396 0.0501085; 0.164208 0.88351 -0.438687; 0.025215 0.440819 0.897242]),[-2.59453,0.134569,1.12649])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.965009 0.153425 0.212645; 0.0154338 0.776314 -0.630157; -0.261761 0.61139 0.746782]),[-0.794447,0.0538812,2.13681])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
