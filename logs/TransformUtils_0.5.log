>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (888.90234375 MB free)
Uptime: 38525.0 sec
Load Avg:  1.01953125  1.041015625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2277505 s       6492 s     199198 s     910719 s        152 s
#2  3499 MHz     752484 s        164 s     107103 s    2859564 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0295471 0.0073782; -0.0295471 0.0 -0.133777; -0.0073782 0.133777 0.0])
dAA = TransformUtils.so3([0.0 0.180029 -0.235336; -0.180029 0.0 -0.228857; 0.235336 0.228857 0.0])
dAA = TransformUtils.so3([0.0 0.242524 0.00177009; -0.242524 0.0 -0.0652533; -0.00177009 0.0652533 0.0])
dAA = TransformUtils.Quaternion(0.9991758514196688,[0.0388863,0.0116301,-0.000466204])
dAA = TransformUtils.SO3([0.993971 -0.0454355 0.0997878; 0.0548628 0.994073 -0.0938574; -0.0949319 0.0987662 0.990572])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.995586 -0.0256508 0.0902795; 0.00524847 0.975638 0.219326; -0.093706 -0.217884 0.971466]),[0.715753,0.0873934,0.299308])
xj = TransformUtils.SE3(TransformUtils.SO3([0.924555 -0.33821 -0.175533; 0.354023 0.932805 0.0673934; 0.140945 -0.124452 0.982164]),[1.13655,0.524148,-0.537215])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.909125 -0.32016 -0.266439; 0.290973 0.945871 -0.143744; 0.298038 0.0531542 0.953073]),[0.499614,0.597586,-0.678873])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
