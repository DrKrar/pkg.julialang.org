>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (393.58203125 MB free)
Uptime: 34555.0 sec
Load Avg:  1.0986328125  1.03125  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2073040 s       1218 s     191036 s     763716 s         81 s
#2  3499 MHz     614334 s       5727 s      93279 s    2652823 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.2
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.15.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0477715 0.0281696; 0.0477715 0.0 -0.125643; -0.0281696 0.125643 0.0])
dAA = TransformUtils.so3([0.0 0.163992 -0.0774693; -0.163992 0.0 0.135497; 0.0774693 -0.135497 0.0])
dAA = TransformUtils.so3([0.0 -0.144016 0.0375041; 0.144016 0.0 -0.0490386; -0.0375041 0.0490386 0.0])
dAA = TransformUtils.Quaternion(0.9943342103814973,[-0.0155291,0.00205201,-0.105139])
dAA = TransformUtils.SO3([0.9895 -0.143823 0.0142701; 0.1432 0.988969 0.0378761; -0.0195602 -0.035435 0.999181])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.941304 0.244422 0.232817; -0.26446 0.962612 0.0586439; -0.209779 -0.116773 0.970751]),[1.03291,0.361199,1.5235])
xj = TransformUtils.SE3(TransformUtils.SO3([0.982189 -0.166816 -0.0864694; 0.165696 0.985974 -0.0200211; 0.0885964 0.00533685 0.996053]),[-0.915088,0.806777,1.62855])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.862133 -0.418894 -0.28505; 0.389224 0.907713 -0.156719; 0.324393 0.0241645 0.945614]),[-1.97353,-0.0594813,-0.325419])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
