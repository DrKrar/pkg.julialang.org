>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (663.359375 MB free)
Uptime: 37658.0 sec
Load Avg:  1.06396484375  1.0126953125  0.9873046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2146674 s       3974 s     170403 s     972264 s        180 s
#2  3500 MHz     711178 s       2965 s      92727 s    2820579 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0616945 -0.0353856; -0.0616945 0.0 -0.0454839; 0.0353856 0.0454839 0.0])
dAA = TransformUtils.so3([0.0 -0.00890233 0.0719754; 0.00890233 0.0 -0.0452695; -0.0719754 0.0452695 0.0])
dAA = TransformUtils.so3([0.0 -0.0664149 -0.11519; 0.0664149 0.0 0.0827298; 0.11519 -0.0827298 0.0])
dAA = TransformUtils.Quaternion(0.9869796684852518,[0.0655258,-0.0948003,-0.112207])
dAA = TransformUtils.SO3([0.997002 -0.037567 -0.0676505; 0.0397387 0.998728 0.0310472; 0.066398 -0.0336425 0.997226])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.972406 -0.0408541 -0.229689; 0.0390145 0.99916 -0.0125466; 0.230009 0.00323919 0.973183]),[0.129271,-0.0389098,-1.14109])
xj = TransformUtils.SE3(TransformUtils.SO3([0.775404 -0.615944 0.139143; 0.628957 0.772962 -0.0833287; -0.0562265 0.152129 0.98676]),[-0.240999,-1.07243,-0.876208])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.765614 -0.5338 0.359016; 0.596568 0.797969 -0.085747; -0.240712 0.279826 0.929384]),[-0.339451,-1.01666,0.355789])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
