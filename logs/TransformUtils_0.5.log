>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (884.79296875 MB free)
Uptime: 38504.0 sec
Load Avg:  1.0068359375  1.033203125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    2287629 s       5808 s     177284 s     919638 s        155 s
#2  3502 MHz     740975 s         40 s      95560 s    2883121 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0575758 0.143401; 0.0575758 0.0 0.0856336; -0.143401 -0.0856336 0.0])
dAA = TransformUtils.so3([0.0 -0.0580106 0.173511; 0.0580106 0.0 0.192489; -0.173511 -0.192489 0.0])
dAA = TransformUtils.so3([0.0 0.045482 0.00430697; -0.045482 0.0 -0.0238598; -0.00430697 0.0238598 0.0])
dAA = TransformUtils.Quaternion(0.9967022432105245,[-0.0602081,-0.0160668,-0.0519758])
dAA = TransformUtils.SO3([0.985046 -0.0352519 0.168648; 0.0528675 0.993468 -0.10113; -0.163981 0.108533 0.980475])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.961719 0.0639115 0.266481; -0.103655 0.985015 0.137846; -0.253678 -0.160192 0.953932]),[-1.01494,-1.79136,-0.200433])
xj = TransformUtils.SE3(TransformUtils.SO3([0.995718 -0.0706886 -0.059568; 0.0458617 0.937254 -0.345618; 0.0802616 0.341407 0.936483]),[-2.03994,-1.3398,0.323654])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.932486 -0.251741 -0.259028; 0.0959551 0.864 -0.494263; 0.348226 0.436038 0.829825]),[-1.16551,0.295333,0.289047])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
