>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (905.65625 MB free)
Uptime: 40375.0 sec
Load Avg:  0.98779296875  0.9775390625  0.96435546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2356593 s       6954 s     212551 s     974132 s        212 s
#2  3500 MHz     811754 s       2628 s     112238 s    2966012 s          7 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0236831 -0.0610784; 0.0236831 0.0 0.0232843; 0.0610784 -0.0232843 0.0])
dAA = TransformUtils.so3([0.0 -0.0797844 0.0901173; 0.0797844 0.0 -0.131541; -0.0901173 0.131541 0.0])
dAA = TransformUtils.so3([0.0 -0.0528408 0.12703; 0.0528408 0.0 -0.0346393; -0.12703 0.0346393 0.0])
dAA = TransformUtils.Quaternion(0.999190102524699,[-0.0267691,0.0243874,-0.0175444])
dAA = TransformUtils.SO3([0.993247 0.00565298 -0.115884; -0.011333 0.998763 -0.0484143; 0.115467 0.0494007 0.992082])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.91358 -0.406609 -0.00632209; 0.396648 0.894413 -0.206631; 0.0896725 0.186266 0.978399]),[-0.979834,0.685913,-0.192542])
xj = TransformUtils.SE3(TransformUtils.SO3([0.994274 -0.0957374 0.0474691; 0.0982183 0.993752 -0.0530175; -0.0420967 0.0573763 0.997465]),[1.96449,-0.262239,0.25444])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.943532 0.311851 0.111783; -0.324275 0.938439 0.119073; -0.0677682 -0.148597 0.986573]),[2.35388,-1.96197,0.614629])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
