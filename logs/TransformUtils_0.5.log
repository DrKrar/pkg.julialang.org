>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (889.40234375 MB free)
Uptime: 37960.0 sec
Load Avg:  1.02294921875  1.0146484375  0.99951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2264995 s         53 s     194784 s     875949 s        173 s
#2  3499 MHz     768803 s        100 s     105526 s    2800051 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.132897 0.0638914; 0.132897 0.0 0.0945672; -0.0638914 -0.0945672 0.0])
dAA = TransformUtils.so3([0.0 -0.0440637 -0.0159785; 0.0440637 0.0 0.12977; 0.0159785 -0.12977 0.0])
dAA = TransformUtils.so3([0.0 0.0616728 -0.0675189; -0.0616728 0.0 -0.058774; 0.0675189 0.058774 0.0])
dAA = TransformUtils.Quaternion(0.9985308431275453,[0.0258127,0.0446347,-0.0166615])
dAA = TransformUtils.SO3([0.991025 0.0376444 -0.128265; -0.0400629 0.999064 -0.0163269; 0.12753 0.021319 0.991606])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.990526 -0.0150314 -0.1365; -0.062418 0.836101 -0.545013; 0.12232 0.54837 0.827241]),[-0.764401,-0.77098,0.341035])
xj = TransformUtils.SE3(TransformUtils.SO3([0.927988 0.309881 -0.206911; -0.360347 0.887651 -0.28675; 0.0948059 0.34066 0.935394]),[-1.17715,0.140735,-0.958673])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.953285 0.29321 -0.0726342; -0.263247 0.924316 0.2763; 0.148151 -0.244272 0.958323]),[-0.624724,0.0557693,-1.51573])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
