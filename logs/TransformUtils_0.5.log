>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (602.83984375 MB free)
Uptime: 37889.0 sec
Load Avg:  1.0947265625  1.02734375  0.9755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2220062 s       5748 s     201616 s     908022 s        218 s
#2  3500 MHz     758213 s        230 s     111320 s    2778746 s          7 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.142122 0.0523453; 0.142122 0.0 -0.116697; -0.0523453 0.116697 0.0])
dAA = TransformUtils.so3([0.0 -0.107583 -0.10827; 0.107583 0.0 -0.0409037; 0.10827 0.0409037 0.0])
dAA = TransformUtils.so3([0.0 -0.0496835 -0.148584; 0.0496835 0.0 0.010917; 0.148584 -0.010917 0.0])
dAA = TransformUtils.Quaternion(0.9975249235184652,[-0.0662417,0.0127611,0.0198297])
dAA = TransformUtils.SO3([0.99269 0.110604 -0.048302; -0.0996399 0.976883 0.189132; 0.0681041 -0.182936 0.980763])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.896964 0.24469 0.368215; -0.333934 0.920794 0.201559; -0.289731 -0.30375 0.90763]),[0.874839,-1.87364,-0.63735])
xj = TransformUtils.SE3(TransformUtils.SO3([0.964034 -0.257334 -0.0664662; 0.253829 0.965579 -0.0568184; 0.0787997 0.0379038 0.99617]),[0.710334,-0.476841,-0.46108])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.757111 -0.56424 -0.329265; 0.445679 0.814619 -0.371168; 0.477654 0.134269 0.868227]),[-0.665063,1.19237,0.380951])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
