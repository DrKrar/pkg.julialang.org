>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (796.18359375 MB free)
Uptime: 42163.0 sec
Load Avg:  0.8623046875  0.94287109375  0.9501953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2362349 s       6422 s     258064 s    1132179 s        142 s
#2  3500 MHz     751720 s         44 s     133418 s    3208999 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0910729 -0.0981754; 0.0910729 0.0 0.0329303; 0.0981754 -0.0329303 0.0])
dAA = TransformUtils.so3([0.0 -0.0580722 0.107535; 0.0580722 0.0 -0.0809683; -0.107535 0.0809683 0.0])
dAA = TransformUtils.so3([0.0 -0.118437 -0.0317922; 0.118437 0.0 0.0614377; 0.0317922 -0.0614377 0.0])
dAA = TransformUtils.Quaternion(0.9967992410196123,[0.0446887,0.0580598,-0.0319884])
dAA = TransformUtils.SO3([0.983737 -0.0859722 0.1577; 0.0936622 0.994718 -0.041984; -0.153258 0.0560718 0.986594])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.978046 -0.0862058 0.189722; -0.0109563 0.887892 0.459921; -0.208101 -0.451903 0.867455]),[0.637973,-0.210534,0.0835864])
xj = TransformUtils.SE3(TransformUtils.SO3([0.990721 -0.135688 0.00785966; 0.124295 0.927902 0.351495; -0.0549865 -0.347257 0.936157]),[1.50806,-1.37552,0.0684309])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.979051 -0.0706107 -0.190979; 0.0498036 0.9925 -0.111639; 0.19743 0.0997893 0.975225]),[0.866901,-1.10254,-0.383874])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
