>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (880.6640625 MB free)
Uptime: 36949.0 sec
Load Avg:  0.9970703125  1.044921875  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2224494 s       2337 s     209324 s     792148 s        156 s
#2  3499 MHz     689714 s      12518 s     108912 s    2749964 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0231546 -0.0701287; -0.0231546 0.0 -0.0689101; 0.0701287 0.0689101 0.0])
dAA = TransformUtils.so3([0.0 0.0620522 -0.24071; -0.0620522 0.0 0.160908; 0.24071 -0.160908 0.0])
dAA = TransformUtils.so3([0.0 -0.0711506 -0.064227; 0.0711506 0.0 0.0762885; 0.064227 -0.0762885 0.0])
dAA = TransformUtils.Quaternion(0.9961473131192465,[-0.0229573,-0.0538554,0.0652923])
dAA = TransformUtils.SO3([0.987918 0.135065 -0.0760018; -0.131794 0.990184 0.0465415; 0.0815419 -0.0359626 0.996021])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.997304 -0.0642709 0.0354097; 0.0538697 0.968922 0.241431; -0.0498262 -0.238873 0.969772]),[0.686074,1.71256,-0.689102])
xj = TransformUtils.SE3(TransformUtils.SO3([0.915097 -0.401108 -0.0413386; 0.35535 0.753728 0.55283; -0.190587 -0.520583 0.832268]),[-0.380646,-0.912953,1.80283])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.941269 -0.333485 -0.0529151; 0.331018 0.880436 0.339499; -0.0666296 -0.337076 0.939117]),[-1.32944,-3.07061,1.74495])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
