>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (403.52734375 MB free)
Uptime: 38178.0 sec
Load Avg:  0.99609375  1.005859375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2227627 s       3488 s     198935 s     945743 s        155 s
#2  3499 MHz     757920 s       3801 s     103902 s    2816549 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0327995 -0.0823514; 0.0327995 0.0 -0.0401297; 0.0823514 0.0401297 0.0])
dAA = TransformUtils.so3([0.0 -0.0487806 0.0649529; 0.0487806 0.0 -0.0547628; -0.0649529 0.0547628 0.0])
dAA = TransformUtils.so3([0.0 -0.06072 -0.0205732; 0.06072 0.0 -0.161198; 0.0205732 0.161198 0.0])
dAA = TransformUtils.Quaternion(0.9976548707771201,[-0.0531116,0.0428103,0.00558486])
dAA = TransformUtils.SO3([0.963947 -0.042409 -0.262692; 0.0263465 0.997578 -0.0643709; 0.264785 0.0551292 0.96273])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.934615 0.0379153 0.353635; -0.100589 0.981885 0.160572; -0.341141 -0.185644 0.921498]),[1.02065,-1.25764,-0.513084])
xj = TransformUtils.SE3(TransformUtils.SO3([0.955823 -0.284963 0.0720937; 0.275259 0.953779 0.120575; -0.103121 -0.0954039 0.990083]),[0.946078,-0.681665,1.09515])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.900817 -0.329725 -0.282506; 0.325657 0.943408 -0.0626792; 0.287185 -0.0355376 0.957216]),[-0.67627,0.264158,1.5481])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
