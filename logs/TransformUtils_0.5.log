>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (409.85546875 MB free)
Uptime: 39427.0 sec
Load Avg:  1.15283203125  1.05712890625  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2303183 s        788 s     213718 s     963625 s        325 s
#2  3499 MHz     840053 s       5852 s     124701 s    2791296 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.18.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.115722 -0.0947434; 0.115722 0.0 -0.0718093; 0.0947434 0.0718093 0.0])
dAA = TransformUtils.so3([0.0 0.0345921 -0.0336159; -0.0345921 0.0 0.148285; 0.0336159 -0.148285 0.0])
dAA = TransformUtils.so3([0.0 0.243262 -0.0565744; -0.243262 0.0 0.10203; 0.0565744 -0.10203 0.0])
dAA = TransformUtils.Quaternion(0.9970407865906674,[-0.0463688,0.00654115,0.0609657])
dAA = TransformUtils.SO3([0.996573 0.0638997 -0.0525262; -0.0571185 0.990913 0.121774; 0.0598302 -0.118356 0.991167])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.88163 -0.342382 -0.324812; 0.334737 0.938821 -0.0810342; 0.332684 -0.0372843 0.942301]),[1.1354,-0.826425,-0.520789])
xj = TransformUtils.SE3(TransformUtils.SO3([0.901481 -0.297452 0.314411; 0.208057 0.934805 0.287839; -0.379531 -0.194066 0.904596]),[0.784052,0.689672,0.79128])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.738153 -0.0138912 0.67449; -0.0991719 0.986692 0.128854; -0.667304 -0.162004 0.726953]),[0.634242,1.49472,1.22763])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
