>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (395.19921875 MB free)
Uptime: 35663.0 sec
Load Avg:  1.01123046875  1.0146484375  1.05859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2143678 s       3580 s     203633 s     764640 s         93 s
#2  3500 MHz     660889 s       4274 s      92880 s    2717987 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.2
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.14.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0694751 -0.0241262; 0.0694751 0.0 0.104597; 0.0241262 -0.104597 0.0])
dAA = TransformUtils.so3([0.0 -0.0189005 0.0437001; 0.0189005 0.0 -0.0841666; -0.0437001 0.0841666 0.0])
dAA = TransformUtils.so3([0.0 -0.0849703 -0.0861546; 0.0849703 0.0 0.0452649; 0.0861546 -0.0452649 0.0])
dAA = TransformUtils.Quaternion(0.9956484920869724,[0.0646214,-0.0464685,-0.0484648])
dAA = TransformUtils.SO3([0.976514 0.0175987 0.214732; -0.0359256 0.996005 0.0817461; -0.212435 -0.0875406 0.973246])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.952748 0.288143 -0.0961535; -0.279115 0.955327 0.0971868; 0.119862 -0.0657566 0.990611]),[0.954149,-0.580843,1.03647])
xj = TransformUtils.SE3(TransformUtils.SO3([0.994306 -0.106534 -0.00252636; 0.106489 0.994215 -0.0140027; 0.00400351 0.0136539 0.999899]),[-0.186935,0.334958,-2.08399])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.91808 -0.377364 0.121351; 0.387971 0.918206 -0.079855; -0.0812907 0.120394 0.989392]),[-1.7168,0.751284,-2.89244])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
