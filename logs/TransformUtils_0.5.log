>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (571.05078125 MB free)
Uptime: 40108.0 sec
Load Avg:  0.95947265625  0.9755859375  1.02490234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2368374 s        119 s     225694 s     925093 s        196 s
#2  3500 MHz     725827 s       5447 s     116494 s    3023834 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0655042 0.259794; 0.0655042 0.0 -0.0293777; -0.259794 0.0293777 0.0])
dAA = TransformUtils.so3([0.0 0.00906613 0.0288895; -0.00906613 0.0 -0.104554; -0.0288895 0.104554 0.0])
dAA = TransformUtils.so3([0.0 0.178679 0.0951247; -0.178679 0.0 -0.0160082; -0.0951247 0.0160082 0.0])
dAA = TransformUtils.Quaternion(0.9976280040601708,[-0.0188851,0.0356952,-0.0557456])
dAA = TransformUtils.SO3([0.988313 0.0751584 0.132622; -0.0749406 0.997166 -0.0066398; -0.132746 -0.0033766 0.991144])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.977145 0.0266978 -0.21089; 0.0426583 0.947273 0.317575; 0.208249 -0.319314 0.924484]),[1.28972,-0.0512682,-0.361669])
xj = TransformUtils.SE3(TransformUtils.SO3([0.95325 0.248146 -0.172445; -0.19269 0.938751 0.285687; 0.232775 -0.239103 0.94268]),[0.52316,1.70131,-0.0973492])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.971719 0.232727 0.0399949; -0.231409 0.972227 -0.0349905; -0.0470274 0.0247458 0.998587]),[-0.619237,1.5553,0.962594])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
