>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (915.40625 MB free)
Uptime: 38223.0 sec
Load Avg:  0.92431640625  0.9228515625  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2274147 s        112 s     201278 s     902634 s        173 s
#2  3499 MHz     728955 s       6198 s     104871 s    2864446 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0368382 0.0279389; -0.0368382 0.0 -0.00764006; -0.0279389 0.00764006 0.0])
dAA = TransformUtils.so3([0.0 0.114876 0.0783162; -0.114876 0.0 0.0373406; -0.0783162 -0.0373406 0.0])
dAA = TransformUtils.so3([0.0 -0.0580023 -0.0706313; 0.0580023 0.0 -0.0381415; 0.0706313 0.0381415 0.0])
dAA = TransformUtils.Quaternion(0.9950583521325346,[-0.0324577,-0.0141607,-0.0927623])
dAA = TransformUtils.SO3([0.996863 -0.024723 0.0751821; 0.0130047 0.988213 0.152532; -0.0780669 -0.151076 0.985435])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.969253 0.00945405 0.245884; -0.00450459 0.999776 -0.0206839; -0.246024 0.0189404 0.969079]),[-0.0827693,0.640847,-1.00763])
xj = TransformUtils.SE3(TransformUtils.SO3([0.956866 0.145472 0.251487; -0.158389 0.986865 0.0317972; -0.243558 -0.0702586 0.967338]),[0.908857,1.01583,-0.244923])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.98808 0.153839 0.00562336; -0.153921 0.986688 0.0524894; 0.0025264 -0.0527293 0.998606]),[0.771805,0.398722,0.975188])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
