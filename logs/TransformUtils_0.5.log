>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (887.2578125 MB free)
Uptime: 37424.0 sec
Load Avg:  1.0029296875  0.99267578125  0.966796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2239580 s        115 s     202570 s     843433 s        173 s
#2  3499 MHz     676641 s       6035 s     103823 s    2824279 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0963943 -0.0109545; -0.0963943 0.0 -0.0772446; 0.0109545 0.0772446 0.0])
dAA = TransformUtils.so3([0.0 -0.0573712 0.0642548; 0.0573712 0.0 0.109291; -0.0642548 -0.109291 0.0])
dAA = TransformUtils.so3([0.0 -0.0676286 0.100399; 0.0676286 0.0 0.0744006; -0.100399 -0.0744006 0.0])
dAA = TransformUtils.Quaternion(0.9931956298248288,[-0.0726261,0.0326833,0.0849688])
dAA = TransformUtils.SO3([0.966461 0.250006 -0.0587385; -0.256039 0.955756 -0.144828; 0.0199317 0.15501 0.987712])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.993011 -0.0858082 -0.0810316; 0.0909682 0.993904 0.0622884; 0.0751927 -0.0692243 0.994763]),[-0.31451,0.0270398,-1.73012])
xj = TransformUtils.SE3(TransformUtils.SO3([0.982922 0.183431 -0.014752; -0.183186 0.96766 -0.17343; -0.0175375 0.17317 0.984736]),[0.811067,-1.95595,-0.540328])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.958069 0.283197 0.0436195; -0.265198 0.934033 -0.239274; -0.108504 0.217673 0.969972]),[1.02679,-2.14984,0.968841])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
