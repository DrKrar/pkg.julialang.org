>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (405.5546875 MB free)
Uptime: 40435.0 sec
Load Avg:  1.26513671875  1.0888671875  1.0625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2358869 s       6174 s     192137 s     992707 s        283 s
#2  3499 MHz     835067 s        356 s     110297 s    2922941 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.188713 -0.0520121; 0.188713 0.0 0.0633021; 0.0520121 -0.0633021 0.0])
dAA = TransformUtils.so3([0.0 -0.0318543 -0.147663; 0.0318543 0.0 0.0668838; 0.147663 -0.0668838 0.0])
dAA = TransformUtils.so3([0.0 0.0220796 0.0485135; -0.0220796 0.0 -0.00900698; -0.0485135 0.00900698 0.0])
dAA = TransformUtils.Quaternion(0.9945791456067213,[0.0897048,-0.033712,0.0403593])
dAA = TransformUtils.SO3([0.993715 0.0820521 0.0761445; -0.0756794 0.993663 -0.08311; -0.0824813 0.0768251 0.993627])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.964564 0.257657 -0.0568319; -0.242138 0.949977 0.197263; 0.104815 -0.176511 0.978702]),[0.708429,1.19006,-0.912928])
xj = TransformUtils.SE3(TransformUtils.SO3([0.933889 0.329238 -0.139474; -0.311044 0.940431 0.137267; 0.176359 -0.0848093 0.980665]),[0.458556,0.228658,-0.615884])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.994596 0.080968 -0.0649807; -0.0859909 0.993188 -0.0786346; 0.0581712 0.0837975 0.994783]),[0.0229081,-1.03013,0.115269])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
