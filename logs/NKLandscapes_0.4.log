>>> 'Pkg.add("NKLandscapes")' log
INFO: Cloning cache of NKLandscapes from git://github.com/glesica/NKLandscapes.jl.git
INFO: Installing NKLandscapes v0.3.0
INFO: Package database updated

>>> 'Pkg.test("NKLandscapes")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing NKLandscapes
NKLandscapes
  > genotype.jl
    > NKLandscape(4, 1)
      > Genotype
      > fitness(...)
      > rand(::Type{Genotype}, ...)
      > zeros(::Type{Genotype}, ...)
    > NKqLandscape(4, 1, 2)
      > Genotype
      > fitness(...)
      > rand(::Type{Genotype}, ...)
      > zeros(::Type{Genotype}, ...)
    > NKpLandscape(4, 1, 0.9)
      > Genotype
      > fitness(...)
      > rand(::Type{Genotype}, ...)
      > zeros(::Type{Genotype}, ...)
  > landscape.jl
    > NKLandscape
      > when near=true
    > NKqLandscape
      > when near=true
    > NKpLandscape
      > when near=true
  > metapopulation.jl
    > NKLandscape(4, 1)
      > popsize(...)
      > popct(...)
      > popfits(...)
    > NKqLandscape(4, 1, 2)
      > popsize(...)
      > popct(...)
      > popfits(...)
    > NKpLandscape(4, 1, 0.9)
      > popsize(...)
      > popct(...)
      > popfits(...)
  > migration.jl
    > NKLandscape(96, 1)
      > migrate(...)
        > should respect migration probability
        > should respect migration count
      > linmigrate(...)
        > should respect migration probability
        > should respect migration count
        > should only migrate left and right
    > NKqLandscape(96, 1, 2)
      > migrate(...)
        > should respect migration probability
        > should respect migration count
      > linmigrate(...)
        > should respect migration probability
        > should respect migration count
        > should only migrate left and right
    > NKpLandscape(96, 1, 0.9)
      > migrate(...)
        > should respect migration probability
        > should respect migration count
      > linmigrate(...)
        > should respect migration probability
        > should respect migration count
        > should only migrate left and right
  > mutation.jl
    > NKLandscape(4, 1)
      > bwmutate(...)
      > bwmutate(::Genotype)
      > bsmutate(...)
      > bsmutate(::Genotype)
      > bsmutate!(::Genotype)
    > NKqLandscape(4, 1, 2)
      > bwmutate(...)
      > bwmutate(::Genotype)
      > bsmutate(...)
      > bsmutate(::Genotype)
      > bsmutate!(::Genotype)
    > NKpLandscape(4, 1, 0.9)
      > bwmutate(...)
      > bwmutate(::Genotype)
      > bsmutate(...)
      > bsmutate(::Genotype)
      > bsmutate!(::Genotype)
  > neighbors.jl
    > NKLandscape(4, 1)
      > number_neighbors(...)
      > all_neighbors(...)
      > random_neighbor(...)
      > neutral_neighbors(...)
      > fitter_neighbors(...)
      > fitness_range_neighbors(...)
      > fittest_neighbors(...)
      > fittest_neighbor(...)
    > NKqLandscape(4, 1, 2)
      > number_neighbors(...)
      > all_neighbors(...)
      > random_neighbor(...)
      > neutral_neighbors(...)
      > fitter_neighbors(...)
      > fitness_range_neighbors(...)
      > fittest_neighbors(...)
      > fittest_neighbor(...)
    > NKpLandscape(4, 1, 0.9)
      > number_neighbors(...)
      > all_neighbors(...)
      > random_neighbor(...)
      > neutral_neighbors(...)
      > fitter_neighbors(...)
      > fitness_range_neighbors(...)
      > fittest_neighbors(...)
      > fittest_neighbor(...)
  > population.jl
    > NKLandscape(4, 1)
      > popsize(...)
      > popfits(...)
    > NKqLandscape(4, 1, 2)
      > popsize(...)
      > popfits(...)
    > NKpLandscape(4, 1, 0.9)
      > popsize(...)
      > popfits(...)
  > walks.jl
    > NKLandscape(4, 1)
      > Adaptive walks
        > Random adaptive walk should terminate and move uphill
        > Greedy adaptive walk should terminate and move uphill
        > Reluctant adaptive walk should terminate and move uphill
      > Neutral walks
        > Neutral walk should terminate and move sideways
    > NKqLandscape(4, 1, 2)
      > Adaptive walks
        > Random adaptive walk should terminate and move uphill
        > Greedy adaptive walk should terminate and move uphill
        > Reluctant adaptive walk should terminate and move uphill
      > Neutral walks
        > Neutral walk should terminate and move sideways
    > NKpLandscape(4, 1, 0.9)
      > Adaptive walks
        > Random adaptive walk should terminate and move uphill
        > Greedy adaptive walk should terminate and move uphill
        > Reluctant adaptive walk should terminate and move uphill
      > Neutral walks
        > Neutral walk should terminate and move sideways
  > Fast functional tests
    > NK.fitness(...)
    > NK.popfits(...)
    > NK.propsel(...)
    > NK.tournsel(...)
    > NK.moransel(...)
    > NK.elitesel(...)
    > NK.bwmutate(...)
    > NK.bsmutate(...)
  > Fast neighbors, walks, and neutral net tests
    > NK.neighbors(...)
    > NK.walks(...)
    > NK.netcounts(...)
547 facts verified.
INFO: NKLandscapes tests passed

>>> End of log
