>>> 'Pkg.add("BenchmarkTools")' log
INFO: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
INFO: Installing BenchmarkTools v0.0.2
INFO: Package database updated

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.5.0-rc0+187
Commit 1eeb773 (2016-08-04 02:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1630.8828125 MB free)
Uptime: 5684.0 sec
Load Avg:  1.06494140625  1.025390625  1.04248046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     220631 s         90 s      47898 s     223067 s         28 s
#2  3500 MHz      96572 s         53 s      32459 s     404346 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - BenchmarkTools                0.0.2
 - JSON                          0.6.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing BenchmarkTools
Testing Parameters...done (took 1.331047157 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 1.293728929 seconds)
Testing BenchmarkGroup...done (took 5.636443227 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.146661624 seconds)
(2/3) tuning 5...
done (took 0.184921501 seconds)
(3/3) tuning 20...
done (took 0.214698842 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.371918672 seconds)
  (2/3) tuning 5...
  done (took 0.199911701 seconds)
  (3/3) tuning 20...
  done (took 0.364527261 seconds)
done (took 1.064359569 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 4.607962266 seconds)
  (2/5) tuning "macro"...
  done (took 0.37214702 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.156206214 seconds)
  (4/5) tuning "block"...
  done (took 0.128988302 seconds)
  (5/5) tuning "nothing"...
  done (took 0.111656571 seconds)
done (took 10.459204568 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.020725641 seconds)
  (2/3) tuning 5...
  done (took 0.017855768 seconds)
  (3/3) tuning 20...
  done (took 0.020668786 seconds)
done (took 0.141916427 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.124366948 seconds)
  (2/3) benchmarking 5...
  done (took 0.477516381 seconds)
  (3/3) benchmarking 20...
  done (took 3.165003073 seconds)
done (took 4.851941958 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 5.151375005 seconds)
  (2/5) benchmarking "macro"...
  done (took 3.089799863 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.885348805 seconds)
  (4/5) benchmarking "block"...
  done (took 0.979635365 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.289624594 seconds)
done (took 11.482424607 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.611904469 seconds)
  (2/3) benchmarking 5...
  done (took 0.557763961 seconds)
  (3/3) benchmarking 20...
  done (took 0.540674764 seconds)
done (took 1.812335013 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.055790293 seconds)
  (2/3) benchmarking 5...
  done (took 0.53484048 seconds)
  (3/3) benchmarking 20...
  done (took 1.016083594 seconds)
done (took 2.699123299 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.014012767 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.009904494 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.014655666 seconds)
  (4/5) benchmarking "block"...
  done (took 0.709873535 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.098520634 seconds)
done (took 3.960811421 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.394067693 seconds)
  (2/3) benchmarking 5...
  done (took 0.299878197 seconds)
  (3/3) benchmarking 20...
  done (took 0.407256114 seconds)
done (took 1.218451199 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.049190025 seconds)
  (2/3) benchmarking 5...
  done (took 0.02506297 seconds)
  (3/3) benchmarking 20...
  done (took 0.02365229 seconds)
done (took 0.221545238 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.023314521 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.024837475 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.022945628 seconds)
  (4/5) benchmarking "block"...
  done (took 0.023012116 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.020541417 seconds)
done (took 0.235218055 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.021596025 seconds)
  (2/3) benchmarking 5...
  done (took 0.022008299 seconds)
  (3/3) benchmarking 20...
  done (took 0.023864265 seconds)
done (took 0.187002137 seconds)
(1/3) benchmarking 10...
done (took 0.480409308 seconds)
(2/3) benchmarking 5...
done (took 0.439541004 seconds)
(3/3) benchmarking 20...
done (took 0.558182135 seconds)
(1/3) benchmarking 10...
done (took 0.524224267 seconds)
(2/3) benchmarking 5...
done (took 0.440160837 seconds)
(3/3) benchmarking 20...
done (took 0.535789656 seconds)
(1/3) benchmarking 10...
done (took 0.018716061 seconds)
(2/3) benchmarking 5...
done (took 0.020741573 seconds)
(3/3) benchmarking 20...
done (took 0.019696674 seconds)
Test Failed
  Expression: [:x,:y,:z,:v,:w] == BenchmarkTools.collectvars($(Expr(:quote, quote 
    x = 1 + 3
    y = 1 + x
    z = begin 
            a = 4
            y + a
        end
    (v,w) = (1,2)
    [u ^ 2 for u = [1,2,3]]
end)))
   Evaluated: Symbol[:x,:y,:z,:v,:w] == Symbol[:x,:y,:z,:v,:w,:u]
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Fail) at ./test.jl:397
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:281
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/ExecutionTests.jl, in expression starting on line 152
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl, in expression starting on line 14
===========================[ ERROR: BenchmarkTools ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: BenchmarkTools had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
