>>> 'Pkg.add("BenchmarkTools")' log
INFO: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
INFO: Installing BenchmarkTools v0.0.2
INFO: Package database updated

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.5.0-rc0+146
Commit 37e6397 (2016-08-03 00:47 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (920.3984375 MB free)
Uptime: 4879.0 sec
Load Avg:  0.81982421875  0.95361328125  0.95068359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     221032 s         94 s      37526 s     164429 s          7 s
#2  3498 MHz      82075 s         59 s      22726 s     364110 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - BenchmarkTools                0.0.2
 - JSON                          0.6.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing BenchmarkTools
Testing Parameters...done (took 1.119266044 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 1.550242598 seconds)
Testing BenchmarkGroup...done (took 6.878720737 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.197352932 seconds)
(2/3) tuning 5...
done (took 0.190105616 seconds)
(3/3) tuning 20...
done (took 0.204510535 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.371679994 seconds)
  (2/3) tuning 5...
  done (took 0.315206708 seconds)
  (3/3) tuning 20...
  done (took 0.44524361 seconds)
done (took 1.25162786 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 5.14400205 seconds)
  (2/5) tuning "macro"...
  done (took 0.356975673 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.160221098 seconds)
  (4/5) tuning "block"...
  done (took 0.142027196 seconds)
  (5/5) tuning "nothing"...
  done (took 0.143525384 seconds)
done (took 11.06683564 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.030824242 seconds)
  (2/3) tuning 5...
  done (took 0.026715007 seconds)
  (3/3) tuning 20...
  done (took 0.029858053 seconds)
done (took 0.208268037 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.784241337 seconds)
  (2/3) benchmarking 5...
  done (took 0.785992287 seconds)
  (3/3) benchmarking 20...
  done (took 3.20770998 seconds)
done (took 5.867614748 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.379345198 seconds)
  (2/5) benchmarking "macro"...
  done (took 2.698379332 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.268981272 seconds)
  (4/5) benchmarking "block"...
  done (took 1.090601123 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.29593428 seconds)
done (took 6.854541867 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.598527137 seconds)
  (2/3) benchmarking 5...
  done (took 0.443874172 seconds)
  (3/3) benchmarking 20...
  done (took 0.509631772 seconds)
done (took 1.670741053 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.057762187 seconds)
  (2/3) benchmarking 5...
  done (took 0.516992391 seconds)
  (3/3) benchmarking 20...
  done (took 1.010912332 seconds)
done (took 2.700890205 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.984241044 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.013409952 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.009954286 seconds)
  (4/5) benchmarking "block"...
  done (took 0.689863572 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.073570467 seconds)
done (took 3.870914437 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.366832959 seconds)
  (2/3) benchmarking 5...
  done (took 0.48453214 seconds)
  (3/3) benchmarking 20...
  done (took 0.512121335 seconds)
done (took 1.451627016 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.046861439 seconds)
  (2/3) benchmarking 5...
  done (took 0.022641999 seconds)
  (3/3) benchmarking 20...
  done (took 0.022786244 seconds)
done (took 0.207024485 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.021434136 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.021718725 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.021762084 seconds)
  (4/5) benchmarking "block"...
  done (took 0.02177113 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.020769672 seconds)
done (took 0.225690611 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.021189726 seconds)
  (2/3) benchmarking 5...
  done (took 0.019454459 seconds)
  (3/3) benchmarking 20...
  done (took 0.021218343 seconds)
done (took 0.183133894 seconds)
(1/3) benchmarking 10...
done (took 0.349209044 seconds)
(2/3) benchmarking 5...
done (took 0.322485278 seconds)
(3/3) benchmarking 20...
done (took 0.494712199 seconds)
(1/3) benchmarking 10...
done (took 0.557635541 seconds)
(2/3) benchmarking 5...
done (took 0.511688126 seconds)
(3/3) benchmarking 20...
done (took 0.555383313 seconds)
(1/3) benchmarking 10...
done (took 0.012912921 seconds)
(2/3) benchmarking 5...
done (took 0.019674122 seconds)
(3/3) benchmarking 20...
done (took 0.019442627 seconds)
Test Failed
  Expression: [:x,:y,:z,:v,:w] == BenchmarkTools.collectvars($(Expr(:quote, quote 
    x = 1 + 3
    y = 1 + x
    z = begin 
            a = 4
            y + a
        end
    (v,w) = (1,2)
    [u ^ 2 for u = [1,2,3]]
end)))
   Evaluated: Symbol[:x,:y,:z,:v,:w] == Symbol[:x,:y,:z,:v,:w,:u]
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Fail) at ./test.jl:397
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:281
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/ExecutionTests.jl, in expression starting on line 152
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl, in expression starting on line 14
===========================[ ERROR: BenchmarkTools ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: BenchmarkTools had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
