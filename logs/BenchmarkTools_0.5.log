>>> 'Pkg.add("BenchmarkTools")' log
INFO: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
INFO: Installing BenchmarkTools v0.0.2
INFO: Package database updated
INFO: Nothing to be done

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.5.0-rc0+4
Commit 347057b (2016-07-27 09:20 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (908.0703125 MB free)
Uptime: 4946.0 sec
Load Avg:  0.97607421875  0.9853515625  0.958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     206702 s         50 s      44850 s     187537 s         11 s
#2  3499 MHz      84285 s         90 s      24999 s     365790 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - BenchmarkTools                0.0.2
 - JSON                          0.6.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing BenchmarkTools
Testing Parameters...done (took 1.151659071 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 0.986425435 seconds)
Testing BenchmarkGroup...done (took 4.996158496 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.169885902 seconds)
(2/3) tuning 5...
done (took 0.191545367 seconds)
(3/3) tuning 20...
done (took 0.187200909 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.4831742 seconds)
  (2/3) tuning 5...
  done (took 0.403968713 seconds)
  (3/3) tuning 20...
  done (took 0.565425401 seconds)
done (took 1.656139744 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 5.241222592 seconds)
  (2/5) tuning "macro"...
  done (took 0.387950014 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.306375186 seconds)
  (4/5) tuning "block"...
  done (took 0.422571589 seconds)
  (5/5) tuning "nothing"...
  done (took 0.200394051 seconds)
done (took 11.781047526 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.025672419 seconds)
  (2/3) tuning 5...
  done (took 0.017483626 seconds)
  (3/3) tuning 20...
  done (took 0.021510411 seconds)
done (took 0.26205608 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.47374057 seconds)
  (2/3) benchmarking 5...
  done (took 0.774483183 seconds)
  (3/3) benchmarking 20...
  done (took 3.230302698 seconds)
done (took 5.656469621 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.387001999 seconds)
  (2/5) benchmarking "macro"...
  done (took 4.266180108 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.500924472 seconds)
  (4/5) benchmarking "block"...
  done (took 0.906540137 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.304036327 seconds)
done (took 8.59484528 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.651990031 seconds)
  (2/3) benchmarking 5...
  done (took 0.555491667 seconds)
  (3/3) benchmarking 20...
  done (took 0.625448446 seconds)
done (took 1.956635937 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.049185996 seconds)
  (2/3) benchmarking 5...
  done (took 0.510710663 seconds)
  (3/3) benchmarking 20...
  done (took 1.013479342 seconds)
done (took 2.686110592 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.748658484 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.010980771 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.013235375 seconds)
  (4/5) benchmarking "block"...
  done (took 0.933534624 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.091305482 seconds)
done (took 3.92806185 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.562429712 seconds)
  (2/3) benchmarking 5...
  done (took 0.500646102 seconds)
  (3/3) benchmarking 20...
  done (took 0.558957425 seconds)
done (took 1.71485501 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.026407723 seconds)
  (2/3) benchmarking 5...
  done (took 0.013886554 seconds)
  (3/3) benchmarking 20...
  done (took 0.01388545 seconds)
done (took 0.170201794 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.013302488 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.012831029 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.013178879 seconds)
  (4/5) benchmarking "block"...
  done (took 0.012879638 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.012533785 seconds)
done (took 0.148601008 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.014752954 seconds)
  (2/3) benchmarking 5...
  done (took 0.015201428 seconds)
  (3/3) benchmarking 20...
  done (took 0.015297101 seconds)
done (took 0.125638917 seconds)
(1/3) benchmarking 10...
done (took 0.382472446 seconds)
(2/3) benchmarking 5...
done (took 0.301740366 seconds)
(3/3) benchmarking 20...
done (took 0.493364577 seconds)
(1/3) benchmarking 10...
done (took 0.562057537 seconds)
(2/3) benchmarking 5...
done (took 0.48913292 seconds)
(3/3) benchmarking 20...
done (took 0.566999531 seconds)
(1/3) benchmarking 10...
done (took 0.019770658 seconds)
(2/3) benchmarking 5...
done (took 0.020453773 seconds)
(3/3) benchmarking 20...
done (took 0.02327301 seconds)
Test Failed
  Expression: [:x,:y,:z,:v,:w] == BenchmarkTools.collectvars($(Expr(:quote, quote 
    x = 1 + 3
    y = 1 + x
    z = begin 
            a = 4
            y + a
        end
    (v,w) = (1,2)
    [u ^ 2 for u = [1,2,3]]
end)))
   Evaluated: Symbol[:x,:y,:z,:v,:w] == Symbol[:x,:y,:z,:v,:w,:u]
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Fail) at ./test.jl:397
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:281
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/ExecutionTests.jl, in expression starting on line 152
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl, in expression starting on line 14
===========================[ ERROR: BenchmarkTools ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: BenchmarkTools had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
