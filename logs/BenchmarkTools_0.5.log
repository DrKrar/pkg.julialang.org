>>> 'Pkg.add("BenchmarkTools")' log
INFO: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
INFO: Installing BenchmarkTools v0.0.2
INFO: Package database updated

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (892.61328125 MB free)
Uptime: 5533.0 sec
Load Avg:  1.01123046875  0.9853515625  0.95947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     230096 s         60 s      40378 s     218533 s         13 s
#2  3504 MHz      86174 s         85 s      25831 s     417453 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - BenchmarkTools                0.0.2
 - JSON                          0.6.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing BenchmarkTools
Testing Parameters...done (took 1.032106076 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 1.452126318 seconds)
Testing BenchmarkGroup...done (took 6.058165169 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.21176942 seconds)
(2/3) tuning 5...
done (took 0.200962064 seconds)
(3/3) tuning 20...
done (took 0.16165232 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 0.398821689 seconds)
  (2/3) tuning 5...
  done (took 0.268439166 seconds)
  (3/3) tuning 20...
  done (took 0.508251548 seconds)
done (took 1.296721605 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 5.099453614 seconds)
  (2/5) tuning "macro"...
  done (took 0.295398578 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.155426524 seconds)
  (4/5) tuning "block"...
  done (took 0.149321636 seconds)
  (5/5) tuning "nothing"...
  done (took 0.102157802 seconds)
done (took 10.878624772 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.03005421 seconds)
  (2/3) tuning 5...
  done (took 0.027246275 seconds)
  (3/3) tuning 20...
  done (took 0.030088029 seconds)
done (took 0.173640329 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.731661853 seconds)
  (2/3) benchmarking 5...
  done (took 0.62150239 seconds)
  (3/3) benchmarking 20...
  done (took 3.191296388 seconds)
done (took 5.641339398 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.426600005 seconds)
  (2/5) benchmarking "macro"...
  done (took 3.834127947 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.385510139 seconds)
  (4/5) benchmarking "block"...
  done (took 0.908975186 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.208130781 seconds)
done (took 7.883446905 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.447006139 seconds)
  (2/3) benchmarking 5...
  done (took 0.543470739 seconds)
  (3/3) benchmarking 20...
  done (took 0.594654809 seconds)
done (took 1.687290745 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.053092195 seconds)
  (2/3) benchmarking 5...
  done (took 0.525163621 seconds)
  (3/3) benchmarking 20...
  done (took 1.014283104 seconds)
done (took 2.677087012 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.986547232 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.011134836 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.012794812 seconds)
  (4/5) benchmarking "block"...
  done (took 0.925400479 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.07751493 seconds)
done (took 4.095379644 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.558426357 seconds)
  (2/3) benchmarking 5...
  done (took 0.389969181 seconds)
  (3/3) benchmarking 20...
  done (took 0.512461144 seconds)
done (took 1.581437415 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.042900125 seconds)
  (2/3) benchmarking 5...
  done (took 0.020633198 seconds)
  (3/3) benchmarking 20...
  done (took 0.020557583 seconds)
done (took 0.208564663 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.02239569 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.021821444 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.020005985 seconds)
  (4/5) benchmarking "block"...
  done (took 0.022967473 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.022829473 seconds)
done (took 0.360462179 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.03280775 seconds)
  (2/3) benchmarking 5...
  done (took 0.020554224 seconds)
  (3/3) benchmarking 20...
  done (took 0.021992947 seconds)
done (took 0.313074551 seconds)
(1/3) benchmarking 10...
done (took 0.536085527 seconds)
(2/3) benchmarking 5...
done (took 0.430546675 seconds)
(3/3) benchmarking 20...
done (took 0.363954161 seconds)
(1/3) benchmarking 10...
done (took 0.403843837 seconds)
(2/3) benchmarking 5...
done (took 0.344108969 seconds)
(3/3) benchmarking 20...
done (took 0.362208969 seconds)
(1/3) benchmarking 10...
done (took 0.019876121 seconds)
(2/3) benchmarking 5...
done (took 0.024456271 seconds)
(3/3) benchmarking 20...
done (took 0.02324201 seconds)
Test Failed
  Expression: [:x,:y,:z,:v,:w] == BenchmarkTools.collectvars($(Expr(:quote, quote 
    x = 1 + 3
    y = 1 + x
    z = begin 
            a = 4
            y + a
        end
    (v,w) = (1,2)
    [u ^ 2 for u = [1,2,3]]
end)))
   Evaluated: Symbol[:x,:y,:z,:v,:w] == Symbol[:x,:y,:z,:v,:w,:u]
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Fail) at ./test.jl:397
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:281
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/ExecutionTests.jl, in expression starting on line 152
while loading /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl, in expression starting on line 14
===========================[ ERROR: BenchmarkTools ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/BenchmarkTools/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: BenchmarkTools had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
