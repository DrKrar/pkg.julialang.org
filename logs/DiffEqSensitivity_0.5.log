>>> 'Pkg.add("DiffEqSensitivity")' log
INFO: Cloning cache of DiffEqSensitivity from https://github.com/JuliaDiffEq/DiffEqSensitivity.jl.git
INFO: Installing DataStructures v0.5.3
INFO: Installing DiffEqBase v0.11.0
INFO: Installing DiffEqSensitivity v0.0.4
INFO: Installing MacroTools v0.3.6
INFO: Installing Parameters v0.6.0
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.2.0
INFO: Installing SimpleTraits v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqSensitivity
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqSensitivity")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1681.015625 MB free)
Uptime: 27819.0 sec
Load Avg:  1.0751953125  1.06298828125  1.0556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1621821 s       2915 s     137847 s     732397 s         86 s
#2  3500 MHz     846804 s       3984 s      90293 s    1749142 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqSensitivity             0.0.4
 - JSON                          0.8.3
9 additional packages:
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - DiffEqBase                    0.11.0
 - MacroTools                    0.3.6
 - Parameters                    0.6.0
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.2.0
 - SimpleTraits                  0.3.0
INFO: Computing test dependencies for DiffEqSensitivity...
INFO: Installing BinDeps v0.4.7
INFO: Installing Calculus v0.2.1
INFO: Installing Combinatorics v0.3.2
INFO: Installing Conda v0.5.1
INFO: Installing DiffBase v0.0.4
INFO: Installing Distances v0.4.1
INFO: Installing ForwardDiff v0.3.4
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Iterators v0.3.0
INFO: Installing Juno v0.2.7
INFO: Installing LineSearches v0.1.5
INFO: Installing Media v0.2.5
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.7
INFO: Installing OrdinaryDiffEq v1.4.1
INFO: Installing ParameterizedFunctions v1.0.0
INFO: Installing PolynomialFactors v0.0.3
INFO: Installing Polynomials v0.1.3
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Primes v0.1.2
INFO: Installing Roots v0.3.0
INFO: Installing SHA v0.3.2
INFO: Installing SymEngine v0.1.3
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building SymEngine
INFO: Testing DiffEqSensitivity
ERROR: LoadError: ArgumentError: Module SpecialFunctions not found in current path.
Run `Pkg.add("SpecialFunctions")` to install the SpecialFunctions package.
 in require(::Symbol) at ./loading.jl:365
 in _include_from_serialized(::String) at ./loading.jl:150
 in _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:187
 in _require_search_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:217
 in require(::Symbol) at ./loading.jl:371
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/DiffEqSensitivity/test/runtests.jl, in expression starting on line 1
==========================[ ERROR: DiffEqSensitivity ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DiffEqSensitivity/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.4.7
INFO: Removing Calculus v0.2.1
INFO: Removing Combinatorics v0.3.2
INFO: Removing Conda v0.5.1
INFO: Removing DiffBase v0.0.4
INFO: Removing Distances v0.4.1
INFO: Removing ForwardDiff v0.3.4
INFO: Removing GenericSVD v0.0.2
INFO: Removing Hiccup v0.1.1
INFO: Removing InplaceOps v0.1.0
INFO: Removing Iterators v0.3.0
INFO: Removing Juno v0.2.7
INFO: Removing LineSearches v0.1.5
INFO: Removing Media v0.2.5
INFO: Removing NLsolve v0.9.1
INFO: Removing NaNMath v0.2.2
INFO: Removing Optim v0.7.7
INFO: Removing OrdinaryDiffEq v1.4.1
INFO: Removing ParameterizedFunctions v1.0.0
INFO: Removing PolynomialFactors v0.0.3
INFO: Removing Polynomials v0.1.3
INFO: Removing PositiveFactorizations v0.0.4
INFO: Removing Primes v0.1.2
INFO: Removing Roots v0.3.0
INFO: Removing SHA v0.3.2
INFO: Removing SymEngine v0.1.3
INFO: Removing URIParser v0.1.8
ERROR: DiffEqSensitivity had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
