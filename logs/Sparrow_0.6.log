>>> 'Pkg.add("Sparrow")' log
INFO: Cloning cache of Color from https://github.com/JuliaArchive/Color.jl.git
INFO: Cloning cache of Sparrow from https://github.com/rennis250/Sparrow.jl.git
INFO: Installing Color v0.2.11
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.8.5
INFO: Installing DataStructures v0.5.2
INFO: Installing FileIO v0.3.0
INFO: Installing GZip v0.2.20
INFO: Installing Hiccup v0.1.1
INFO: Installing Juno v0.2.6
INFO: Installing MacroTools v0.3.4
INFO: Installing Media v0.2.5
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing Sparrow v0.0.1
INFO: Installing StatsBase v0.13.0

signal (15): Terminated
while loading no file, in expression starting on line 0
Allocations: 0 (Pool: 0; Big: 0); GC: 0
ERROR: GitError(Code:ENOTFOUND, Class:Tree, the path 'REQUIRE' does not exist in the given tree)
macro expansion at ./libgit2/error.jl:99 [inlined]
Base.LibGit2.GitUnknownObject(::Base.LibGit2.GitRepo, ::String) at ./libgit2/repository.jl:100
revparseid(::Base.LibGit2.GitRepo, ::String) at ./libgit2/repository.jl:128
(::Base.Pkg.Read.##5#6{String})(::Base.LibGit2.GitRepo) at ./pkg/read.jl:185
with(::Base.Pkg.Read.##5#6{String}, ::Base.LibGit2.GitRepo) at ./libgit2/types.jl:576
requires_path(::String, ::Dict{VersionNumber,Base.Pkg.Types.Available}) at ./pkg/read.jl:182
requires_list at ./pkg/read.jl:196 [inlined] (repeats 2 times)
build!(::Array{String,1}, ::Pipe, ::Set{Any}) at ./pkg/entry.jl:588
build!(::Array{String,1}, ::Dict{Any,Any}, ::Set{Any}) at ./pkg/entry.jl:634
build(::Array{String,1}) at ./pkg/entry.jl:656
resolve(::Dict{String,Base.Pkg.Types.VersionSet}, ::Dict{String,Dict{VersionNumber,Base.Pkg.Types.Available}}, ::Dict{String,Tuple{VersionNumber,Bool}}, ::Dict{String,Base.Pkg.Types.Fixed}, ::Dict{String,VersionNumber}, ::Set{String}) at ./pkg/entry.jl:571
edit(::Function, ::String, ::Base.Pkg.Types.VersionSet, ::Vararg{Base.Pkg.Types.VersionSet,N} where N) at ./pkg/entry.jl:30
(::Base.Pkg.Entry.##1#3{String,Base.Pkg.Types.VersionSet})() at ./task.jl:335
Stacktrace:
 [1] sync_end() at ./task.jl:287
 [2] macro expansion at ./task.jl:303 [inlined]
 [3] add(::String, ::Base.Pkg.Types.VersionSet) at ./pkg/entry.jl:50
 [4] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#add,Tuple{String}})() at ./pkg/dir.jl:31
 [5] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#add,Tuple{String}}, ::String) at ./file.jl:69
 [6] #cd#1(::Array{Any,1}, ::Function, ::Function, ::String, ::Vararg{Any,N} where N) at ./pkg/dir.jl:31
 [7] add(::String) at ./pkg/pkg.jl:102

>>> 'Pkg.test("Sparrow")' log
Package was unable to be tested.

>>> End of log
