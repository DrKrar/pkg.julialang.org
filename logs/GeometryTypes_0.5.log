>>> 'Pkg.add("GeometryTypes")' log
INFO: Cloning cache of GeometryTypes from https://github.com/JuliaGeometry/GeometryTypes.jl.git
INFO: Installing ColorTypes v0.2.2
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.2.0
INFO: Installing GeometryTypes v0.1.5
INFO: Package database updated

>>> 'Pkg.test("GeometryTypes")' log
Julia Version 0.5.0-dev+4679
Commit 85d098c* (2016-06-11 19:03 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for GeometryTypes...
INFO: Installing FactCheck v0.4.3
INFO: Testing GeometryTypes

WARNING: deprecated syntax "call(::Type{AABB}, ...)".
Use "(::Type{AABB})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{F}, ...)".
Use "(::Type{F})(...)" instead.

WARNING: deprecated syntax "call(::Type{Face{N,T,O}}, ...)".
Use "(::Type{Face{N,T,O}})(...)" instead.

WARNING: deprecated syntax "call(ifunc::IndexConvertFunc{Face{N,T1,O1},Face{N,T2,O2}}, ...)".
Use "(ifunc::IndexConvertFunc{Face{N,T1,O1},Face{N,T2,O2}})(...)" instead.

WARNING: deprecated syntax "call(T::Type{Face{N,T1,O1}}, ...)".
Use "(T::Type{Face{N,T1,O1}})(...)" instead.

WARNING: deprecated syntax "call(HR::Type{HyperRectangle{N,T}}, ...)".
Use "(HR::Type{HyperRectangle{N,T}})(...)" instead.

WARNING: deprecated syntax "call(HR::Type{HyperRectangle{N,T1}}, ...)".
Use "(HR::Type{HyperRectangle{N,T1}})(...)" instead.

WARNING: deprecated syntax "call(HR::Type{HyperRectangle{N,T}}, ...)".
Use "(HR::Type{HyperRectangle{N,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{HyperRectangle{N,T}}, ...)".
Use "(::Type{HyperRectangle{N,T}})(...)" instead.

WARNING: deprecated syntax "call(t::Type{HyperRectangle{N1,T1}}, ...)".
Use "(t::Type{HyperRectangle{N1,T1}})(...)" instead.

WARNING: deprecated syntax "call(::Type{SimpleRectangle}, ...)".
Use "(::Type{SimpleRectangle})(...)" instead.

WARNING: deprecated syntax "call(::Type{Sphere}, ...)".
Use "(::Type{Sphere})(...)" instead.

WARNING: deprecated syntax "call(::Type{Circle}, ...)".
Use "(::Type{Circle})(...)" instead.

WARNING: deprecated syntax "call(::Type{HM1}, ...)".
Use "(::Type{HM1})(...)" instead.

WARNING: deprecated syntax "call(::Type{HM1}, ...)".
Use "(::Type{HM1})(...)" instead.

WARNING: deprecated syntax "call(::Type{HM1}, ...)".
Use "(::Type{HM1})(...)" instead.

WARNING: deprecated syntax "call(::Type{M}, ...)".
Use "(::Type{M})(...)" instead.

WARNING: deprecated syntax "call(::Type{M}, ...)".
Use "(::Type{M})(...)" instead.

WARNING: deprecated syntax "call(::Core.kwftype(Type{M}), ...)".
Use "(::Core.kwftype(Type{M}))(...)" instead.

WARNING: deprecated syntax "call(::Type{M}, ...)".
Use "(::Type{M})(...)" instead.

WARNING: deprecated syntax "call(::Type{M}, ...)".
Use "(::Type{M})(...)" instead.

WARNING: deprecated syntax "call(::Type{HM}, ...)".
Use "(::Type{HM})(...)" instead.

WARNING: deprecated syntax "call(::Type{HM}, ...)".
Use "(::Type{HM})(...)" instead.

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.

WARNING: deprecated syntax "call(m::MeshMulFunctor{T}, ...)".
Use "(m::MeshMulFunctor{T})(...)" instead.

WARNING: deprecated syntax "call(meshtype::Type{T}, ...)".
Use "(meshtype::Type{T})(...)" instead.

WARNING: deprecated syntax "call(meshtype::Type{T}, ...)".
Use "(meshtype::Type{T})(...)" instead.

WARNING: deprecated syntax "call(meshtype::Type{T}, ...)".
Use "(meshtype::Type{T})(...)" instead.

WARNING: deprecated syntax "call(t::Type{Vector{Point{N,T}}}, ...)".
Use "(t::Type{Vector{Point{N,T}}})(...)" instead.
GeometryTypes
  > Hyper Cubes
    > Core
  > Hyper Rectangles
    > constructors and containment
    > Testing split function
    > Test distance functions
    > set operations
    > relations
    > point membership
    > from Points
    > transforms
WARNING: similar{FSA<:FixedArray}(::Type{FSA}, ...) is deprecated, use similar_type instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in similar at /home/vagrant/.julia/v0.5/FixedSizeArrays/src/core.jl:160 [inlined]
 in decompose(::Type{FixedSizeArrays.Point}, ::GeometryTypes.HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.5/GeometryTypes/src/decompose.jl:8
 in *(::FixedSizeArrays.Mat{3,3,Int64}, ::GeometryTypes.HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.5/GeometryTypes/src/hyperrectangles.jl:87
 in (::##190#362)() at /home/vagrant/.julia/v0.5/GeometryTypes/test/hyperrectangles.jl:197
 in context(::##190#362, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##23#195)() at /home/vagrant/.julia/v0.5/GeometryTypes/test/hyperrectangles.jl:195
 in context(::##23#195, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in include_from_node1(::String) at ./loading.jl:426
 in (::##1#2)() at /home/vagrant/.julia/v0.5/GeometryTypes/test/runtests.jl:5
 in facts(::##1#2, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/GeometryTypes/test/hyperrectangles.jl, in expression starting on line 10
ERROR: LoadError: LoadError: MethodError: no method matching similar_type(::Type{FixedSizeArrays.Point}, ::Type{Int64}, ::Int64)
Closest candidates are:
  similar_type{FSA<:FixedSizeArrays.FixedArray{T,NDim,SIZE},T}(::Type{FSA<:FixedSizeArrays.FixedArray}, ::Type{T})
  similar_type{FSA<:FixedSizeArrays.FixedArray{T,NDim,SIZE},T}(::Type{FSA<:FixedSizeArrays.FixedArray}, ::Type{T}, !Matched::Tuple)
  similar_type{T}(!Matched::Type{FixedSizeArrays.FixedArray}, ::Type{T}, !Matched::Tuple)
  ...
 in decompose(::Type{FixedSizeArrays.Point}, ::GeometryTypes.HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.5/GeometryTypes/src/decompose.jl:8
 in *(::FixedSizeArrays.Mat{3,3,Int64}, ::GeometryTypes.HyperRectangle{2,Int64}) at /home/vagrant/.julia/v0.5/GeometryTypes/src/hyperrectangles.jl:87
 in (::##190#362)() at /home/vagrant/.julia/v0.5/GeometryTypes/test/hyperrectangles.jl:197
 in context(::##190#362, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##23#195)() at /home/vagrant/.julia/v0.5/GeometryTypes/test/hyperrectangles.jl:195
 in context(::##23#195, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in include_from_node1(::String) at ./loading.jl:426
 in (::##1#2)() at /home/vagrant/.julia/v0.5/GeometryTypes/test/runtests.jl:5
 in facts(::##1#2, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/GeometryTypes/test/hyperrectangles.jl, in expression starting on line 10
while loading /home/vagrant/.julia/v0.5/GeometryTypes/test/runtests.jl, in expression starting on line 4
============================[ ERROR: GeometryTypes ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/GeometryTypes/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: GeometryTypes had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
