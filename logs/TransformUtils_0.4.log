>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (337.03515625 MB free)
Uptime: 25753.0 sec
Load Avg:  1.07373046875  1.10888671875  1.1318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    1235851 s        107 s     124443 s     944609 s         32 s
#2  3507 MHz     763798 s         53 s     111973 s    1619010 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.14594266352879384 -0.11147906453788839
 -0.14594266352879384 0.0 -0.020286773824805295
 0.11147906453788839 0.020286773824805295 0.0])
dAA = TransformUtils.so3([0.0 0.006280619222094847 -0.0937945343764266
 -0.006280619222094847 0.0 -0.045507765436636496
 0.0937945343764266 0.045507765436636496 0.0])
dAA = TransformUtils.so3([0.0 0.03064047938287109 0.0006742298916591685
 -0.03064047938287109 0.0 0.12390592130037299
 -0.0006742298916591685 -0.12390592130037299 0.0])
dAA = TransformUtils.Quaternion(0.9867817076397278,[-0.04950159221996286,-0.10884567437531514,-0.10938040503259328])
dAA = TransformUtils.SO3([0.9982112618045967 0.059582942758409495 0.004914238366531741
 -0.05881248677321375 0.993413975824096 -0.09833495836635729
 -0.010740959269336856 0.09787004429145192 0.9951412393345799])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
