>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1095.66796875 MB free)
Uptime: 30676.0 sec
Load Avg:  1.03466796875  1.04296875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1487050 s       5828 s     133375 s    1115475 s        145 s
#2  3499 MHz     934351 s        848 s     117106 s    1876232 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.014435822583298627 -0.027691404775786212
 0.014435822583298627 0.0 0.009396610317797876
 0.027691404775786212 -0.009396610317797876 0.0])
dAA = TransformUtils.so3([0.0 0.0734392327322957 -0.023499569423202065
 -0.0734392327322957 0.0 -0.11762138211266544
 0.023499569423202065 0.11762138211266544 0.0])
dAA = TransformUtils.so3([0.0 -0.13231194353621198 0.09048477366212161
 0.13231194353621198 0.0 0.024416829964984135
 -0.09048477366212161 -0.024416829964984135 0.0])
dAA = TransformUtils.Quaternion(0.9997884968941615,[0.01393823141977526,0.007802796511517157,0.012953900941492236])
dAA = TransformUtils.SO3([0.9752556716006305 -0.1706017461614673 -0.14061087873084954
 0.14506771313016778 0.973769195161822 -0.17529664332519598
 0.16682845566025828 0.15056094699674247 0.9744227355832055])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
