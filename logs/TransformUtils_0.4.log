>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (340.90234375 MB free)
Uptime: 31520.0 sec
Load Avg:  1.0380859375  1.0146484375  1.0205078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1522116 s       5498 s     138369 s    1154337 s        142 s
#2  3500 MHz     974026 s       2738 s     123017 s    1908233 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.09947445062193033 -0.011448999437398895
 -0.09947445062193033 0.0 -0.03229453337749735
 0.011448999437398895 0.03229453337749735 0.0])
dAA = TransformUtils.so3([0.0 -0.016122759138229425 0.052737766781817186
 0.016122759138229425 0.0 0.09792902951626004
 -0.052737766781817186 -0.09792902951626004 0.0])
dAA = TransformUtils.so3([0.0 -0.06699075232526226 -0.08786011046200008
 0.06699075232526226 0.0 -0.10789316411750423
 0.08786011046200008 0.10789316411750423 0.0])
dAA = TransformUtils.Quaternion(0.9996936296524516,[-0.009240214787715351,0.004537447625654627,-0.022509483157737868])
dAA = TransformUtils.SO3([0.9961803676349535 -0.028188813593408253 0.08264421290619946
 0.029730418697365188 0.9994050575253831 -0.01748236816811035
 -0.08210223713619806 0.01987263900145328 0.996425762852582])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
