>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (341.0234375 MB free)
Uptime: 27344.0 sec
Load Avg:  1.203125  1.03564453125  1.0302734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1188567 s        463 s     123281 s    1092577 s         87 s
#2  3500 MHz     785174 s       7221 s     103648 s    1692243 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.1
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.10844609716756054 -0.08140325198903293
 0.10844609716756054 0.0 -0.04538736571989712
 0.08140325198903293 0.04538736571989712 0.0])
dAA = TransformUtils.so3([0.0 -0.14695526404221723 0.21932002898500086
 0.14695526404221723 0.0 -0.042062280301983765
 -0.21932002898500086 0.042062280301983765 0.0])
dAA = TransformUtils.so3([0.0 0.010535962543627172 0.10179105409384195
 -0.010535962543627172 0.0 0.06053135323617929
 -0.10179105409384195 -0.06053135323617929 0.0])
dAA = TransformUtils.Quaternion(0.9958474114161513,[0.03369332247092528,0.08421406625067239,-0.007790009123767673])
dAA = TransformUtils.SO3([0.9986777356164829 0.029860672959171428 -0.04184639284765022
 -0.034282545521301055 0.9934194668464511 -0.10928160853086302
 0.03830779889936752 0.110571710219831 0.993129603547567])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
