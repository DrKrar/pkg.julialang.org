>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (451.16015625 MB free)
Uptime: 37783.0 sec
Load Avg:  0.9423828125  1.072265625  1.056640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1862081 s       2200 s     146714 s    1376072 s        154 s
#2  3501 MHz    1198458 s       4982 s     126191 s    2294805 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.17.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.15427557919559295 0.19081647514761257
 -0.15427557919559295 0.0 0.027178354207072125
 -0.19081647514761257 -0.027178354207072125 0.0])
dAA = TransformUtils.so3([0.0 -0.049571845681822345 0.014618502658112096
 0.049571845681822345 0.0 0.05957727626787865
 -0.014618502658112096 -0.05957727626787865 0.0])
dAA = TransformUtils.so3([0.0 -0.019180585523031216 0.09311155806911187
 0.019180585523031216 0.0 -0.035185044987268495
 -0.09311155806911187 0.035185044987268495 0.0])
dAA = TransformUtils.Quaternion(0.9941063654504747,[-0.030657121964856718,-0.09603332164711176,-0.039878266977158155])
dAA = TransformUtils.SO3([0.9918506318316596 0.048016818031761686 -0.11801147961635919
 -0.06705503158495711 0.9843333299158816 -0.16306906008146507
 0.10833257531452892 0.16965341376705848 0.9795314044597576])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.895828196875376 -0.1225429075900709 -0.4271710166694177
 0.1686293922168472 0.9830740712397754 0.07162051756745161
 0.41116416400701716 -0.136193268025348 0.9013298086610618]),[1.0626661568821199,-0.9630266099643767,0.3256765504231101])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9731068986008939 0.2247105421715982 0.05067678099776987
 -0.21845538636659917 0.9700242172601564 -0.10644370388257211
 -0.0730767272308319 0.09251048678807836 0.993026485936535]),[0.17184516991835924,0.6848321262825109,-0.3471882552807917])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8048520678508982 0.4029136309667765 0.4357450571805737
 -0.32405261651201667 0.9134696677369853 -0.24609564777987714
 -0.49719518361288356 0.056866265093197296 0.8657731673403267]),[-0.7968030366649428,1.82077064738311,-0.10791970434004777])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
