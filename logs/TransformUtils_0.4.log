>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.48046875 MB free)
Uptime: 37927.0 sec
Load Avg:  1.1884765625  1.072265625  1.03125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1836471 s       9706 s     143691 s    1397939 s        147 s
#2  3500 MHz    1241822 s       4949 s     122103 s    2271648 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.015847258897897964 0.07173165446099003
 -0.015847258897897964 0.0 0.10414763840168582
 -0.07173165446099003 -0.10414763840168582 0.0])
dAA = TransformUtils.so3([0.0 0.1685242049318892 -0.21919402535046856
 -0.1685242049318892 0.0 -0.13584549291651254
 0.21919402535046856 0.13584549291651254 0.0])
dAA = TransformUtils.so3([0.0 -0.0608843850241301 0.004173795691138213
 0.0608843850241301 0.0 -0.18371674775214364
 -0.004173795691138213 0.18371674775214364 0.0])
dAA = TransformUtils.Quaternion(0.9958077262040168,[0.0838027980399814,0.009177501994734045,0.03549418163858702])
dAA = TransformUtils.SO3([0.9961276479775226 -0.05516620229864743 0.06845727907764025
 0.06077360693577923 0.9947171662529558 -0.08273045304907822
 -0.06353170574433385 0.0865704873824506 0.9942179203170606])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9294687066009797 -0.3329783443738836 -0.15878710787570055
 0.35948036494763075 0.7208822014939223 0.5925392128681394
 -0.08283592618314929 -0.6078275032830478 0.7897366241894044]),[0.44687185549974995,0.14778491898462132,1.766834414063111])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9709583081229013 -0.023233465689443747 0.23811797487625877
 0.023186117467550983 0.9997266645233963 0.0030000329507482416
 -0.23812258994873647 0.0026081244184448108 0.971231604635642]),[-1.6211747470657996,-0.14351708473603586,-0.09363289941435876])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9305354220669564 0.3375712805047198 0.14194878955833107
 -0.16185617116689252 0.7268361099996254 -0.667466740037139
 -0.32849110815038085 0.5981261570764284 0.730984741350405]),[-1.8727884184392478,1.6094635061593028,-1.3135078965784253])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
