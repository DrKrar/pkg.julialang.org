>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (442.53515625 MB free)
Uptime: 38864.0 sec
Load Avg:  1.02294921875  1.02490234375  1.0419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1896411 s         48 s     156754 s    1412221 s        197 s
#2  3499 MHz    1233760 s       6127 s     138192 s    2333520 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0015073954979845298 0.07585410640463727
 0.0015073954979845298 0.0 -0.07209309226897144
 -0.07585410640463727 0.07209309226897144 0.0])
dAA = TransformUtils.so3([0.0 0.044423969863379965 -0.18750220454131675
 -0.044423969863379965 0.0 -0.08847476061583355
 0.18750220454131675 0.08847476061583355 0.0])
dAA = TransformUtils.so3([0.0 -0.03630381137702626 -0.12047300832431077
 0.03630381137702626 0.0 0.10131626932759419
 0.12047300832431077 -0.10131626932759419 0.0])
dAA = TransformUtils.Quaternion(0.9944344102147116,[0.08142671608483895,0.04743861714174827,-0.04711126502479107])
dAA = TransformUtils.SO3([0.987740730317029 0.15582360370539616 -0.00934099572023668
 -0.15598883477005537 0.9875390154548586 -0.020836899518132536
 0.005977716943967934 0.02203854538557458 0.9997392507136177])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9685613049369444 0.020287068463309542 -0.24794643258576707
 -0.05027299015714149 0.9920679907968518 -0.11521166649674655
 0.24364241223461752 0.12405457061093149 0.9618985593455446]),[-1.2731216870430682,1.354911292698361,-0.6581593282872131])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9280260939598344 0.35578083505294356 -0.11039731128375782
 -0.3711393258873173 0.9085105446551962 -0.1920004974739032
 0.03198702408103021 0.21915425539867764 0.9751657513628598]),[-1.5553454279262353,1.5697313534394728,-0.1250319001034268])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9253018439658428 0.35231727963814014 0.14031761123177575
 -0.3454003798973344 0.9357090678635279 -0.07174341701330406
 -0.15657290672459367 0.017918559829078973 0.9875038481410914]),[-0.15425818892204535,0.2735275078732742,0.5580410976656548])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
