>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (445.125 MB free)
Uptime: 38821.0 sec
Load Avg:  0.8896484375  0.9697265625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1870008 s       3764 s     163634 s    1442926 s        142 s
#2  3500 MHz    1283388 s       2764 s     145876 s    2290469 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.002359619497848192 -0.14304270843564917
 -0.002359619497848192 0.0 -0.13062469748114594
 0.14304270843564917 0.13062469748114594 0.0])
dAA = TransformUtils.so3([0.0 0.08245708401586091 0.13191649142656237
 -0.08245708401586091 0.0 -0.0009225202743096032
 -0.13191649142656237 0.0009225202743096032 0.0])
dAA = TransformUtils.so3([0.0 0.01521929905421397 0.05917828518465671
 -0.01521929905421397 0.0 -0.10604663316553664
 -0.05917828518465671 0.10604663316553664 0.0])
dAA = TransformUtils.Quaternion(0.994392219708751,[-0.04147081489209994,0.06264876709678513,0.07442725895893855])
dAA = TransformUtils.SO3([0.998570181186048 0.022422633335995593 0.04852647483944088
 -0.014495732970220849 0.9873437295291702 -0.157931103602441
 -0.051453541877303666 0.15700186391794335 0.9862570393941795])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9694036359631613 -0.08265645818163367 0.23113740610786182
 0.04528621532062998 0.9856610565838133 0.16254673246797155
 -0.24125867711511706 -0.14710605512673033 0.9592466102424939]),[0.2703270724331197,-1.2801783574056547,2.4212680249203578])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9906167254959392 0.13017611606386645 0.041625496684481955
 -0.11739085492621912 0.9664185865331534 -0.22859243815785651
 -0.06998492943051685 0.221561039918549 0.9726319012055983]),[1.272086762234369,-1.1839671563176906,-0.9473064335887528])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9718757395012241 0.11650511703647509 -0.20465606434519912
 -0.1872932571579903 0.9092082978586289 -0.37183532232450084
 0.14275427416403313 0.39970842974514775 0.9054581096873385]),[1.7881643444470656,0.5075674262033947,-2.984110678066565])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
