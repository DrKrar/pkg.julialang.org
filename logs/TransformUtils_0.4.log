>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1089.92578125 MB free)
Uptime: 30887.0 sec
Load Avg:  0.98046875  0.9853515625  1.01025390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1440841 s       3460 s     137159 s    1203069 s        146 s
#2  3500 MHz    1020571 s       3804 s     123621 s    1812589 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08282568542808827 0.13029624852573876
 0.08282568542808827 0.0 -0.04524904629196285
 -0.13029624852573876 0.04524904629196285 0.0])
dAA = TransformUtils.so3([0.0 0.05110619834264693 0.0056087302106509335
 -0.05110619834264693 0.0 0.12735766978494853
 -0.0056087302106509335 -0.12735766978494853 0.0])
dAA = TransformUtils.so3([0.0 -0.10878631806089317 -0.09635059114387354
 0.10878631806089317 0.0 -0.053768119089501645
 0.09635059114387354 0.053768119089501645 0.0])
dAA = TransformUtils.Quaternion(0.9831894174017349,[0.030077542329303642,-0.13056542873076724,-0.12404265305537855])
dAA = TransformUtils.SO3([0.9944111166673886 0.04865010352902951 0.09370004522374678
 -0.04118955557663389 0.9959456235749544 -0.07997334176645954
 -0.09721086132586662 0.07566691686933111 0.9923832758222868])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
