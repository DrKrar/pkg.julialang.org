>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (314.921875 MB free)
Uptime: 30187.0 sec
Load Avg:  1.078125  1.1015625  1.16845703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1602828 s       3067 s     136997 s    1054743 s         85 s
#2  3500 MHz     765025 s       3124 s     111773 s    1966969 s         18 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.011401226446278574 0.02642455837057725
 0.011401226446278574 0.0 0.01258448980376114
 -0.02642455837057725 -0.01258448980376114 0.0])
dAA = TransformUtils.so3([0.0 0.130747571439606 -0.13872612034336054
 -0.130747571439606 0.0 -0.01865385543330349
 0.13872612034336054 0.01865385543330349 0.0])
dAA = TransformUtils.so3([0.0 0.15005741322128077 -0.07238488557460125
 -0.15005741322128077 0.0 0.038915489259999714
 0.07238488557460125 -0.038915489259999714 0.0])
dAA = TransformUtils.Quaternion(0.9947368272741328,[0.09857671444599797,-0.02638390922201591,0.009228497591092235])
dAA = TransformUtils.SO3([0.9915775225114729 -0.12901768621016774 0.011333732614827905
 0.1288771568997668 0.9915835007131231 0.012362829083234312
 -0.01283336586568821 -0.010798044197125082 0.9998593435889245])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
