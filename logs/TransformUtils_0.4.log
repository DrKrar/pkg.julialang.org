>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (342.92578125 MB free)
Uptime: 29744.0 sec
Load Avg:  1.10791015625  1.0703125  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1405843 s       3917 s     131611 s    1108794 s        140 s
#2  3500 MHz     884446 s       2941 s     112296 s    1854177 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1233573927328233 -0.04722984674732922
 0.1233573927328233 0.0 -0.08510544886961109
 0.04722984674732922 0.08510544886961109 0.0])
dAA = TransformUtils.so3([0.0 0.06567555381675512 -0.0878173223374315
 -0.06567555381675512 0.0 0.008848618519694392
 0.0878173223374315 -0.008848618519694392 0.0])
dAA = TransformUtils.so3([0.0 -0.20550214976421724 0.09396819062763416
 0.20550214976421724 0.0 0.07854206541124188
 -0.09396819062763416 -0.07854206541124188 0.0])
dAA = TransformUtils.Quaternion(0.9989885998073501,[0.009006447347733256,0.03743682909761959,-0.023219500172019708])
dAA = TransformUtils.SO3([0.9997824173724524 -0.01928389383535961 0.007952946085702678
 0.019488507711939017 0.9994586267755262 -0.026507573090368337
 -0.007437471348328497 0.026656796554089278 0.999616976255114])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
