>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (446.609375 MB free)
Uptime: 31135.0 sec
Load Avg:  0.90576171875  1.01220703125  1.07080078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz    1518836 s       3042 s     135391 s    1121295 s        121 s
#2  3492 MHz     969390 s       2858 s     117916 s    1886865 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.10795967395189741 0.09625560240671494
 0.10795967395189741 0.0 -0.07194664444232869
 -0.09625560240671494 0.07194664444232869 0.0])
dAA = TransformUtils.so3([0.0 -0.09852476779532134 -0.01013104863202853
 0.09852476779532134 0.0 0.15412231779096483
 0.01013104863202853 -0.15412231779096483 0.0])
dAA = TransformUtils.so3([0.0 0.10845163990592273 0.09768240609511694
 -0.10845163990592273 0.0 0.06295280097733177
 -0.09768240609511694 -0.06295280097733177 0.0])
dAA = TransformUtils.Quaternion(0.9971039140448474,[-0.05987586181853273,-0.0019269145108727498,-0.046850323034118777])
dAA = TransformUtils.SO3([0.9849862995059864 0.12244703401208537 0.12169105820538503
 -0.11827489417382811 0.9921355898975421 -0.04096365055541149
 -0.12574990733067345 0.02595563754368804 0.9917223732910476])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
