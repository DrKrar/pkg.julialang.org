>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (331.84765625 MB free)
Uptime: 30000.0 sec
Load Avg:  1.0419921875  1.0361328125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1328270 s       1084 s     139157 s    1127401 s        202 s
#2  3496 MHz     836922 s       5993 s     117497 s    1838260 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.20150268441796504 -0.09019093065104737
 0.20150268441796504 0.0 0.12138533098889548
 0.09019093065104737 -0.12138533098889548 0.0])
dAA = TransformUtils.so3([0.0 0.00637339057478013 0.06835992125729345
 -0.00637339057478013 0.0 0.0869843077400453
 -0.06835992125729345 -0.0869843077400453 0.0])
dAA = TransformUtils.so3([0.0 -0.11824451668580248 0.042165481700488706
 0.11824451668580248 0.0 0.03591918899727511
 -0.042165481700488706 -0.03591918899727511 0.0])
dAA = TransformUtils.Quaternion(0.9948566391367069,[0.01647472559656221,-0.05958582606972087,0.08023951840410873])
dAA = TransformUtils.SO3([0.9988895521262201 0.023374558425350023 0.0409059002039967
 -0.02811761074400946 0.9924347663577558 0.11950997653114585
 -0.03780294458276766 -0.12052744311088064 0.9919899560167057])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
