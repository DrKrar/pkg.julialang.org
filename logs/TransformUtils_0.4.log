>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (608.078125 MB free)
Uptime: 31265.0 sec
Load Avg:  1.001953125  1.013671875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1491003 s         95 s     138691 s    1137201 s        185 s
#2  3499 MHz     948814 s       6135 s     121902 s    1891068 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.05436258628331948 -0.1224491133988906
 0.05436258628331948 0.0 -0.08550671028771861
 0.1224491133988906 0.08550671028771861 0.0])
dAA = TransformUtils.so3([0.0 -0.0629806997736138 -0.10761314791213267
 0.0629806997736138 0.0 0.06655436936427726
 0.10761314791213267 -0.06655436936427726 0.0])
dAA = TransformUtils.so3([0.0 -0.023674788931855508 -0.0883649844601888
 0.023674788931855508 0.0 0.04055904458165854
 0.0883649844601888 -0.04055904458165854 0.0])
dAA = TransformUtils.Quaternion(0.993349135329508,[-0.059379500188274995,0.07610195459259052,0.06276991958491589])
dAA = TransformUtils.SO3([0.9992479884494929 -0.03627788019556109 -0.013688425335245166
 0.03586132315272083 0.9989201091140054 -0.029539483905432623
 0.01474527318764201 0.0290263848279406 0.9994698824389068])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
