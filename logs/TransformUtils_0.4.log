>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (343.10546875 MB free)
Uptime: 27632.0 sec
Load Avg:  0.9658203125  0.93359375  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1279520 s       3659 s     121875 s    1066468 s         49 s
#2  3499 MHz     737728 s        133 s     105824 s    1834102 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.06577449184096588 -0.054435723409651963
 -0.06577449184096588 0.0 0.13927922335027287
 0.054435723409651963 -0.13927922335027287 0.0])
dAA = TransformUtils.so3([0.0 -0.19038118731191922 0.03976995776832961
 0.19038118731191922 0.0 -0.044831851219126945
 -0.03976995776832961 0.044831851219126945 0.0])
dAA = TransformUtils.so3([0.0 0.026728421402887417 0.026477304127103987
 -0.026728421402887417 0.0 -0.03380398973909949
 -0.026477304127103987 0.03380398973909949 0.0])
dAA = TransformUtils.Quaternion(0.998569326347632,[0.03962918622149108,-0.025271378418202213,0.02549873545694134])
dAA = TransformUtils.SO3([0.9629864641627128 -0.2515122556150096 -0.0969466611846257
 0.2637767995297175 0.9533392898501016 0.14685366341349188
 0.05548756499663473 -0.16699037009227213 0.9843959297087683])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
