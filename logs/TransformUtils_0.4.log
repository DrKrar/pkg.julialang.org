>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (341.640625 MB free)
Uptime: 31518.0 sec
Load Avg:  0.9306640625  0.97314453125  1.0166015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1514248 s       8674 s     149893 s    1142555 s        165 s
#2  3500 MHz     918824 s       4891 s     139198 s    1940804 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.06575842264692265 -0.09859220923686746
 0.06575842264692265 0.0 0.01753103992837994
 0.09859220923686746 -0.01753103992837994 0.0])
dAA = TransformUtils.so3([0.0 -0.13394160743608682 -0.05187303203859435
 0.13394160743608682 0.0 -0.033841702686897734
 0.05187303203859435 0.033841702686897734 0.0])
dAA = TransformUtils.so3([0.0 0.04342871743320173 0.2822603505401897
 -0.04342871743320173 0.0 0.012351347237379514
 -0.2822603505401897 -0.012351347237379514 0.0])
dAA = TransformUtils.Quaternion(0.9968260749364525,[-0.04840373345852607,-0.013177419412490765,-0.06181594075713168])
dAA = TransformUtils.SO3([0.9938086502500261 0.04271176067449799 0.10256740314693706
 -0.028351391491112866 0.9900832989375434 -0.13759091454550762
 -0.10742702308422943 0.13383111247029197 0.9851642848003701])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
