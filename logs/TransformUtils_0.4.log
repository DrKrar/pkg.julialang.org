>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (342.3515625 MB free)
Uptime: 31660.0 sec
Load Avg:  1.078125  1.0634765625  1.0478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1513776 s       1196 s     144372 s    1176467 s        165 s
#2  3500 MHz     935164 s       5518 s     130838 s    1944796 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.026599853557903987 -0.09529392160003676
 0.026599853557903987 0.0 0.0026456001204145044
 0.09529392160003676 -0.0026456001204145044 0.0])
dAA = TransformUtils.so3([0.0 0.1302556546686416 -0.1076894700002536
 -0.1302556546686416 0.0 -0.07566632980174373
 0.1076894700002536 0.07566632980174373 0.0])
dAA = TransformUtils.so3([0.0 0.0876002814554846 -0.037489884823925596
 -0.0876002814554846 0.0 0.010490057398789695
 0.037489884823925596 -0.010490057398789695 0.0])
dAA = TransformUtils.Quaternion(0.9991864238023698,[0.017676918596727757,-0.03159162641332322,0.0177760000707965])
dAA = TransformUtils.SO3([0.9353387883936786 0.31098214687708553 0.16861629592054278
 -0.29640681497064464 0.9491292795773973 -0.1062855149484105
 -0.19309156109266729 0.049433945549688704 0.9799346580574579])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
