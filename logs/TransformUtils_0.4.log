>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (342.02734375 MB free)
Uptime: 26253.0 sec
Load Avg:  0.9072265625  0.94873046875  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1275740 s       6641 s     118409 s     934042 s         53 s
#2  3499 MHz     756664 s         84 s      98228 s    1683000 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.3514698543007246 0.10155574303189406
 -0.3514698543007246 0.0 0.21865738854590894
 -0.10155574303189406 -0.21865738854590894 0.0])
dAA = TransformUtils.so3([0.0 0.11717334933409998 0.07152480487588143
 -0.11717334933409998 0.0 0.14569659212255118
 -0.07152480487588143 -0.14569659212255118 0.0])
dAA = TransformUtils.so3([0.0 -0.12563114830915464 0.060873636766731756
 0.12563114830915464 0.0 -0.11100352425918616
 -0.060873636766731756 0.11100352425918616 0.0])
dAA = TransformUtils.Quaternion(0.9988592092810665,[-0.03544608118609807,-0.029487963101871545,-0.012422374775130106])
dAA = TransformUtils.SO3([0.998358146485672 0.0572548221092769 -0.001701966782618987
 -0.056556969366052846 0.9900254388052961 0.12903852035151575
 0.00907306793876474 -0.1287303999202063 0.9916381212794124])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
