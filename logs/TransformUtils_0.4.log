>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (344.6171875 MB free)
Uptime: 30099.0 sec
Load Avg:  1.01123046875  1.0087890625  1.0380859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1430211 s       4764 s     128340 s    1129273 s        158 s
#2  3499 MHz     939584 s       2122 s     109523 s    1816751 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.11247319980648601 -0.09859957641627098
 -0.11247319980648601 0.0 -0.08378850780874583
 0.09859957641627098 0.08378850780874583 0.0])
dAA = TransformUtils.so3([0.0 0.10449045434532432 0.14497540916943916
 -0.10449045434532432 0.0 0.1145617575841445
 -0.14497540916943916 -0.1145617575841445 0.0])
dAA = TransformUtils.so3([0.0 0.1235142207454149 0.019544794684707153
 -0.1235142207454149 0.0 -0.08440510121033169
 -0.019544794684707153 0.08440510121033169 0.0])
dAA = TransformUtils.Quaternion(0.992058120140197,[0.10120094053541019,0.06320376367005165,-0.039803770632780386])
dAA = TransformUtils.SO3([0.9760718653258279 -0.14997342964451532 0.15745375232118386
 0.14487380862238802 0.988495805476964 0.043446773524534674
 -0.162158235358562 -0.01959624849582528 0.9865701666634196])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
