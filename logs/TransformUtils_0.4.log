>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (440.07421875 MB free)
Uptime: 40089.0 sec
Load Avg:  0.9541015625  0.990234375  1.02197265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1994843 s       4267 s     144460 s    1448436 s        187 s
#2  3499 MHz    1285360 s       2155 s     126389 s    2425659 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.05157737371179231 -0.05163408949202278
 0.05157737371179231 0.0 -0.24903228807549949
 0.05163408949202278 0.24903228807549949 0.0])
dAA = TransformUtils.so3([0.0 0.0744889415260785 0.06765326241241569
 -0.0744889415260785 0.0 -0.02775160013729824
 -0.06765326241241569 0.02775160013729824 0.0])
dAA = TransformUtils.so3([0.0 0.07365069465121236 -0.04145935249469559
 -0.07365069465121236 0.0 0.1234040608679212
 0.04145935249469559 -0.1234040608679212 0.0])
dAA = TransformUtils.Quaternion(0.9937814947698052,[-0.003203770772969956,0.014703153819825218,0.11032630590061658])
dAA = TransformUtils.SO3([0.9875997292520273 -0.06931410188800248 -0.14086280581041405
 0.06503358964879062 0.9972770320331625 -0.03477288593889537
 0.14288949226138192 0.02518087882871294 0.9894182716842754])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9935611232479237 -0.03470280931701046 0.10785179366070552
 0.03359343658402818 0.9993624952458384 0.012086526154623472
 -0.10820247404195094 -0.008385590111538487 0.9940935099323817]),[-1.3408508814544111,-1.0112549949846783,-0.6732047630761969])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9854661930707737 -0.09254864351455848 -0.14244694064181168
 0.09698151450908554 0.9949850157879765 0.02448273270948792
 0.1394667277816493 -0.03794162543981709 0.9894996032848441]),[0.38150801561864506,0.17980193607929504,-1.4034759593819226])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9672881950752275 -0.0544223904337035 -0.24777358835757796
 0.061551732132650694 0.9978805689576294 0.02111289578119834
 0.24609943506554294 -0.03567314839313806 0.9685878868456603]),[1.8302976860554805,1.1366506891498431,-0.5258026196123242])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
