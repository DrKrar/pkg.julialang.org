>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (344.52734375 MB free)
Uptime: 32286.0 sec
Load Avg:  1.0341796875  1.02490234375  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1529467 s       6521 s     140631 s    1216463 s        119 s
#2  3499 MHz     967176 s         81 s     125034 s    2001698 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.13819851020195073 0.015594831573488897
 0.13819851020195073 0.0 0.2324365767625961
 -0.015594831573488897 -0.2324365767625961 0.0])
dAA = TransformUtils.so3([0.0 -0.020440894800177304 0.0759100294437826
 0.020440894800177304 0.0 0.2436178043145122
 -0.0759100294437826 -0.2436178043145122 0.0])
dAA = TransformUtils.so3([0.0 -0.17004727375863912 -0.09176138721271843
 0.17004727375863912 0.0 -0.021426760969174327
 0.09176138721271843 0.021426760969174327 0.0])
dAA = TransformUtils.Quaternion(0.9980819660958908,[0.011973358456668389,-0.0006379752345317358,0.060734015419939315])
dAA = TransformUtils.SO3([0.9919206374201858 -0.1255439601856556 0.018225342818040616
 0.12383874002190871 0.9894198114118024 0.07558044228250889
 -0.02752118329067073 -0.07271279699431228 0.9969731358585073])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
