>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1099.46875 MB free)
Uptime: 30681.0 sec
Load Avg:  1.25732421875  1.0537109375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1484498 s       6574 s     130246 s    1125530 s        161 s
#2  3499 MHz     965495 s         60 s     111012 s    1867438 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.011703577637481977 -0.14351282561316553
 -0.011703577637481977 0.0 0.05986711194766833
 0.14351282561316553 -0.05986711194766833 0.0])
dAA = TransformUtils.so3([0.0 -0.04872689846714926 0.06054996209604731
 0.04872689846714926 0.0 -0.06646119789566447
 -0.06054996209604731 0.06646119789566447 0.0])
dAA = TransformUtils.so3([0.0 0.05685695781525847 0.2860306164726181
 -0.05685695781525847 0.0 0.08413492036432468
 -0.2860306164726181 -0.08413492036432468 0.0])
dAA = TransformUtils.Quaternion(0.9982343245139881,[-0.03480413976327696,0.041376251448029935,-0.02459493918572785])
dAA = TransformUtils.SO3([0.997617816704538 0.06785165459827106 -0.01244366352596766
 -0.06848838583484018 0.9957816564143098 -0.061059264280791656
 0.008248199767745582 0.06176605635015417 0.998056572286131])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
