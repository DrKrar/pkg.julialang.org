>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (335.04296875 MB free)
Uptime: 29836.0 sec
Load Avg:  0.79931640625  0.92919921875  1.0068359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1351314 s       1989 s     120070 s    1213950 s        140 s
#2  3500 MHz     810546 s       3713 s     105262 s    1943422 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.12095341507859242 -0.01080433901739622
 0.12095341507859242 0.0 0.05569529747271445
 0.01080433901739622 -0.05569529747271445 0.0])
dAA = TransformUtils.so3([0.0 -0.024094794463501917 0.02501670525304644
 0.024094794463501917 0.0 0.092370928985475
 -0.02501670525304644 -0.092370928985475 0.0])
dAA = TransformUtils.so3([0.0 -0.014505474181758182 0.07237124201763873
 0.014505474181758182 0.0 -0.06267908511930757
 -0.07237124201763873 0.06267908511930757 0.0])
dAA = TransformUtils.Quaternion(0.9932484879387066,[-0.11203506063478649,0.007017742913399166,0.029263247947458115])
dAA = TransformUtils.SO3([0.9905926809218211 -0.13490064570317925 0.02297729951461668
 0.13551577864595263 0.99038716601784 -0.027726073020400997
 -0.019016157395758713 0.030579031639617747 0.999351443978485])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
