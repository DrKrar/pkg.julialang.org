>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (434.6328125 MB free)
Uptime: 34783.0 sec
Load Avg:  0.9296875  0.998046875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1506654 s       6387 s     126160 s    1516414 s        112 s
#2  3499 MHz     943726 s         89 s     110177 s    2308786 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.018919000018949965 -0.08281049794727785
 -0.018919000018949965 0.0 0.004095176786896403
 0.08281049794727785 -0.004095176786896403 0.0])
dAA = TransformUtils.so3([0.0 -0.15758308107554744 0.036358215607698634
 0.15758308107554744 0.0 -0.15190792825469418
 -0.036358215607698634 0.15190792825469418 0.0])
dAA = TransformUtils.so3([0.0 -0.06777394462083482 0.05839762405433339
 0.06777394462083482 0.0 -0.02522992658354738
 -0.05839762405433339 0.02522992658354738 0.0])
dAA = TransformUtils.Quaternion(0.9973263155423328,[0.0441417903677999,0.05332739301255455,-0.023407516407451683])
dAA = TransformUtils.SO3([0.9818579954093054 0.18579427177075458 -0.037886216860427986
 -0.18880532474673667 0.9764134722899265 -0.10473433285226261
 0.017533573454937695 0.10998736158261191 0.9937783224109873])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
