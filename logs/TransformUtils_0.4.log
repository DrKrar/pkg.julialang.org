>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (330.44140625 MB free)
Uptime: 29101.0 sec
Load Avg:  1.0478515625  1.0009765625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1217203 s       6646 s     128851 s    1186308 s        204 s
#2  3499 MHz     840345 s         58 s     110543 s    1730674 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.059729351137005296 -0.0258728307393296
 -0.059729351137005296 0.0 0.0801017516048567
 0.0258728307393296 -0.0801017516048567 0.0])
dAA = TransformUtils.so3([0.0 -0.039727368051363766 0.09383237449680432
 0.039727368051363766 0.0 -0.05404200622190878
 -0.09383237449680432 0.05404200622190878 0.0])
dAA = TransformUtils.so3([0.0 0.06598984718412776 -0.03281080988284555
 -0.06598984718412776 0.0 0.02616357201320703
 0.03281080988284555 -0.02616357201320703 0.0])
dAA = TransformUtils.Quaternion(0.9958938048304106,[0.07375873503602084,-0.036691245882427025,-0.037535729403992114])
dAA = TransformUtils.SO3([0.993261258881124 0.04512825294080499 0.10674976530370073
 -0.05348025616393596 0.9956176815665583 0.07671567214507621
 -0.1028199095823579 -0.08190770988461193 0.9913219422846111])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
