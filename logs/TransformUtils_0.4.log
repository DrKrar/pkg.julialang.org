>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.6484375 MB free)
Uptime: 37982.0 sec
Load Avg:  1.0888671875  1.02099609375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1808544 s       6956 s     140997 s    1449219 s        146 s
#2  3499 MHz    1216974 s         41 s     118595 s    2305014 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.14256311828091292 -0.07221982811715291
 -0.14256311828091292 0.0 -0.10549885841289752
 0.07221982811715291 0.10549885841289752 0.0])
dAA = TransformUtils.so3([0.0 -0.019126042682089426 0.06564103704288958
 0.019126042682089426 0.0 0.08807396818723706
 -0.06564103704288958 -0.08807396818723706 0.0])
dAA = TransformUtils.so3([0.0 -0.06485477317296166 0.18377647665592486
 0.06485477317296166 0.0 0.1407270116469783
 -0.18377647665592486 -0.1407270116469783 0.0])
dAA = TransformUtils.Quaternion(0.995962494096221,[-0.07255318242317756,-0.04420637762733917,-0.028992106701188486])
dAA = TransformUtils.SO3([0.9926501877747501 -0.12035236789966537 -0.012685119301667637
 0.11799303863763498 0.9857915281894128 -0.11955210488753468
 0.026893262052259906 0.11717666359359322 0.9927468871596944])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9424610409941652 -0.33319468196846674 0.02735854740527888
 0.2994688399507144 0.8050152589949244 -0.5121219060769692
 0.14861224749921528 0.4908479771714119 0.858476943895388]),[2.6683430816295344,0.09957198291166977,1.4837114509110065])
xj = TransformUtils.SE3(TransformUtils.SO3([0.952954416127729 -0.08205784568256218 -0.2917951177531864
 0.20686802134643736 0.8796802188964614 0.42821528957579685
 0.2215479689071173 -0.4684327299028223 0.8552702935498933]),[-0.4673052357704765,-0.9435586185428008,-0.40877212020646914])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9929976790074165 0.11648565122373646 -0.01966475387249672
 -0.04224105744566127 0.5055679791291832 0.8617521172269358
 0.11032362644400409 -0.8548871922880913 0.5069483069406857]),[-3.5488577254021867,-0.7238764401274904,-1.1762302637389526])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
