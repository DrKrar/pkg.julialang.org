>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (363.328125 MB free)
Uptime: 31558.0 sec
Load Avg:  1.0302734375  1.02197265625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1506490 s       6312 s     129911 s    1190686 s        138 s
#2  3500 MHz     996272 s         93 s     116380 s    1922882 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.03428001125360582 -0.0625726641047845
 -0.03428001125360582 0.0 0.024814910934559425
 0.0625726641047845 -0.024814910934559425 0.0])
dAA = TransformUtils.so3([0.0 -0.028061938815108597 -0.15141794883835374
 0.028061938815108597 0.0 -0.05736205025198238
 0.15141794883835374 0.05736205025198238 0.0])
dAA = TransformUtils.so3([0.0 0.21065088619333958 0.09033283997745062
 -0.21065088619333958 0.0 -0.0840534217995507
 -0.09033283997745062 0.0840534217995507 0.0])
dAA = TransformUtils.Quaternion(0.9977233361810705,[-0.012877476143297848,0.060514068976129834,-0.02683956974032307])
dAA = TransformUtils.SO3([0.9948696256066586 0.07503383089144708 -0.06785537758365646
 -0.08392735216845218 0.9866635643338174 -0.13946759614361856
 0.05648564068203059 0.14444699733064928 0.9878990015982908])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
