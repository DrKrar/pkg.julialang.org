>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1094.24609375 MB free)
Uptime: 27826.0 sec
Load Avg:  0.935546875  0.9599609375  1.013671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1318666 s       5387 s     112991 s    1045813 s         44 s
#2  3499 MHz     846216 s        620 s      95208 s    1759089 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.08035506177089166 -0.23950800203860903
 -0.08035506177089166 0.0 0.02030862167951924
 0.23950800203860903 -0.02030862167951924 0.0])
dAA = TransformUtils.so3([0.0 -0.020260591584844917 -0.079040583753243
 0.020260591584844917 0.0 -0.10842903056078189
 0.079040583753243 0.10842903056078189 0.0])
dAA = TransformUtils.so3([0.0 0.061682750988844154 -0.14715252344149848
 -0.061682750988844154 0.0 -0.01669178958058828
 0.14715252344149848 0.01669178958058828 0.0])
dAA = TransformUtils.Quaternion(0.9940890124430024,[0.10526699815682178,0.02151725580666094,-0.015585318145576173])
dAA = TransformUtils.SO3([0.9942211628711242 0.00369374395712134 -0.10728763001748513
 -0.019689705953506574 0.9887281277825222 -0.14842171273480498
 0.10553006575689221 0.14967646971801463 0.983087157699712])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
