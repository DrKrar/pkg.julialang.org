>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (444.546875 MB free)
Uptime: 36716.0 sec
Load Avg:  0.9697265625  1.02197265625  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1742898 s       6348 s     130165 s    1409664 s         77 s
#2  3500 MHz    1190453 s        352 s     108911 s    2238996 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.18.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.11613069510084698 -0.24332021301907797
 -0.11613069510084698 0.0 -0.10552176699732048
 0.24332021301907797 0.10552176699732048 0.0])
dAA = TransformUtils.so3([0.0 0.011702903556445461 -0.00455073523823337
 -0.011702903556445461 0.0 0.1302867670388252
 0.00455073523823337 -0.1302867670388252 0.0])
dAA = TransformUtils.so3([0.0 -0.052240275294882815 0.00616926641653458
 0.052240275294882815 0.0 -0.02569164793005582
 -0.00616926641653458 0.02569164793005582 0.0])
dAA = TransformUtils.Quaternion(0.9998422925286009,[-0.01730040374053728,0.0038705826657129683,0.0010510430028924562])
dAA = TransformUtils.SO3([0.9977705995427079 -0.06656994791938617 0.004719398499375757
 0.06673380242123395 0.9945294784069091 -0.08035991658834235
 0.0006559745341136454 0.08049570556055674 0.9967547396846023])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9934633459134851 -0.11395661460386446 0.006668606631783892
 0.11290808470316802 0.9723638346176472 -0.204353462256765
 0.016803116825321467 0.2037706139650444 0.9788744516786938]),[0.26067215262908594,1.8015376441058406,1.20961796019193])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9049359668377913 0.38308706186424923 0.18529759565512133
 -0.4097408023960361 0.9019577222859332 0.13632586717356338
 -0.11490592141053675 -0.19929016594149454 0.9731803835794304]),[-1.4334577252925067,0.049794523466919684,0.36709932377838245])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8508268866074684 0.4790725772219073 0.21583112560472276
 -0.5249550271852753 0.7927662853652642 0.30974802052808675
 -0.02271185722808508 -0.37684357834799387 0.9259984281839417]),[-1.8949988366504478,-1.6819548922813228,-0.4780426823003699])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
