>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (337.97265625 MB free)
Uptime: 27765.0 sec
Load Avg:  1.0341796875  1.03857421875  1.08740234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1246526 s       3488 s     120453 s    1048478 s        102 s
#2  3499 MHz     835377 s       2743 s     100771 s    1671126 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.040207359125347085 0.07635542650295973
 0.040207359125347085 0.0 0.15337774399511225
 -0.07635542650295973 -0.15337774399511225 0.0])
dAA = TransformUtils.so3([0.0 -0.016467338198815417 -0.1236936828304385
 0.016467338198815417 0.0 0.06378043626002637
 0.1236936828304385 -0.06378043626002637 0.0])
dAA = TransformUtils.so3([0.0 0.0006821359371000722 0.04074702478354218
 -0.0006821359371000722 0.0 -0.09724785411613644
 -0.04074702478354218 0.09724785411613644 0.0])
dAA = TransformUtils.Quaternion(0.9986528933948793,[-0.024853764389393154,-0.0034389155819502565,-0.045418749094758765])
dAA = TransformUtils.SO3([0.9986494206047251 -0.049479090919606214 0.01584784804371922
 0.04876995310443474 0.9979105575100068 0.042379368615625294
 -0.01791162750948974 -0.04154923310768987 0.9989758930165055])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
