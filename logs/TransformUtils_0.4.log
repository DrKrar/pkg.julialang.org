>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (441.08984375 MB free)
Uptime: 31054.0 sec
Load Avg:  0.88330078125  0.9287109375  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1531474 s       2346 s     141869 s    1112427 s        103 s
#2  3500 MHz     984989 s       4961 s     128272 s    1877244 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.019230936909294706 0.03929140460811839
 -0.019230936909294706 0.0 0.09520050493285992
 -0.03929140460811839 -0.09520050493285992 0.0])
dAA = TransformUtils.so3([0.0 -0.07789672988859024 -0.05795201914085396
 0.07789672988859024 0.0 0.20794040342326472
 0.05795201914085396 -0.20794040342326472 0.0])
dAA = TransformUtils.so3([0.0 0.03344301234705604 -0.02517695560998707
 -0.03344301234705604 0.0 0.015317939495955824
 0.02517695560998707 -0.015317939495955824 0.0])
dAA = TransformUtils.Quaternion(0.996770617256652,[-0.05580217069329876,0.039635296751747165,-0.041994018277724816])
dAA = TransformUtils.SO3([0.9939433777276923 -0.06003997858362383 0.09204217969465993
 0.04105020002037436 0.9797789156887842 0.19582685579357523
 -0.10193842724681078 -0.19086245661048284 0.9763094180161627])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
