>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1096.5078125 MB free)
Uptime: 31146.0 sec
Load Avg:  0.90087890625  0.95068359375  1.01806640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1487441 s        403 s     139410 s    1160790 s        158 s
#2  3496 MHz     938775 s       6822 s     124757 s    1915523 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.05731078441381937 -0.09863582753675655
 0.05731078441381937 0.0 0.1070651990879616
 0.09863582753675655 -0.1070651990879616 0.0])
dAA = TransformUtils.so3([0.0 0.09940597746093253 -0.02281319282195781
 -0.09940597746093253 0.0 -0.12148645524910902
 0.02281319282195781 0.12148645524910902 0.0])
dAA = TransformUtils.so3([0.0 -0.003459565738775885 -0.08202824480812684
 0.003459565738775885 0.0 -0.013895539558344425
 0.08202824480812684 0.013895539558344425 0.0])
dAA = TransformUtils.Quaternion(0.9957146686323738,[0.07161096984562336,-0.03822931594672549,0.0443022242143312])
dAA = TransformUtils.SO3([0.983766225681256 -0.17832977933680702 0.0200624776770337
 0.1764696590209817 0.9816438075645451 0.07234565996105789
 -0.032595592552893175 -0.0676307982495273 0.997177818884003])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
