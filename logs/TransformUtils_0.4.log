>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (463.19140625 MB free)
Uptime: 32399.0 sec
Load Avg:  1.05126953125  1.013671875  1.03759765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1500173 s       6580 s     133128 s    1271279 s        151 s
#2  3500 MHz    1055686 s         71 s     122292 s    1931277 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.12572468448998256 0.02567480759942689
 -0.12572468448998256 0.0 0.08625278056540982
 -0.02567480759942689 -0.08625278056540982 0.0])
dAA = TransformUtils.so3([0.0 0.1561808491896271 0.20793050560561543
 -0.1561808491896271 0.0 0.07485123252392965
 -0.20793050560561543 -0.07485123252392965 0.0])
dAA = TransformUtils.so3([0.0 -0.12449090978562048 0.11494147381124227
 0.12449090978562048 0.0 0.08891171248688785
 -0.11494147381124227 -0.08891171248688785 0.0])
dAA = TransformUtils.Quaternion(0.9975013597866688,[0.06481091136364152,-0.02454546528517944,0.013715069299678112])
dAA = TransformUtils.SO3([0.9431367822077075 -0.30638995422291726 -0.12891162088101335
 0.3125196323962044 0.9494418650889933 0.029860076745966403
 0.1132452622136251 -0.0684495490679991 0.9912064213969536])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
