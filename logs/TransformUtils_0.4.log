>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1094.75 MB free)
Uptime: 27630.0 sec
Load Avg:  1.1259765625  1.08349609375  1.02978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1315027 s        324 s     118029 s    1032016 s         41 s
#2  3500 MHz     833966 s       5154 s     102347 s    1720590 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.2000391030941475 -0.08813750654533926
 -0.2000391030941475 0.0 -0.042525702915640146
 0.08813750654533926 0.042525702915640146 0.0])
dAA = TransformUtils.so3([0.0 0.05923188300574812 -0.17727648280843267
 -0.05923188300574812 0.0 -0.1648807266286076
 0.17727648280843267 0.1648807266286076 0.0])
dAA = TransformUtils.so3([0.0 -0.015963634210783933 -0.06391983965930086
 0.015963634210783933 0.0 0.1927433743323156
 0.06391983965930086 -0.1927433743323156 0.0])
dAA = TransformUtils.Quaternion(0.9981403477335059,[-0.036372730202850014,-0.04438123329314008,-0.020571262853956683])
dAA = TransformUtils.SO3([0.9747415120150601 0.14763189081349035 -0.167582247178598
 -0.1508705924584611 0.988530882962502 -0.00669012411016367
 0.16467255110013934 0.031804374608064685 0.9858353983652456])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
