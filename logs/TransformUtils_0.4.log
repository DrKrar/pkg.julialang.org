>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.39453125 MB free)
Uptime: 38183.0 sec
Load Avg:  0.9619140625  0.97998046875  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    1838249 s         17 s     151407 s    1417595 s        212 s
#2  3503 MHz    1224057 s       5502 s     131197 s    2289361 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0143838506041784 -0.06463830338593916
 0.0143838506041784 0.0 0.0729818180823566
 0.06463830338593916 -0.0729818180823566 0.0])
dAA = TransformUtils.so3([0.0 0.12847384126698425 0.15033576735292914
 -0.12847384126698425 0.0 0.0837162733152327
 -0.15033576735292914 -0.0837162733152327 0.0])
dAA = TransformUtils.so3([0.0 0.06745875325061039 -0.0948547378305804
 -0.06745875325061039 0.0 -0.0902760589598614
 0.0948547378305804 0.0902760589598614 0.0])
dAA = TransformUtils.Quaternion(0.9993712532071731,[-0.001959008567034859,0.026860370527519176,-0.023060378220727297])
dAA = TransformUtils.SO3([0.9964859333984875 -0.08063187975870918 0.022677841729814577
 0.07953824036038766 0.9957892675988456 0.04557853502832045
 -0.026257434362836247 -0.043614613394270724 0.9987033156243899])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9903133173819146 -0.05369682908550936 -0.12804758475734238
 0.023642626318348233 0.9739397258898591 -0.22557135579314375
 0.1368230961380356 0.2203589364644595 0.9657750149405679]),[-0.44656586114076147,0.23747326321403167,-0.46918317314358543])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9103877363355949 -0.412766561685659 0.028599564401412224
 0.4112123399257978 0.8949734634728144 -0.17299396282016646
 0.045810272019511114 0.1692520760099387 0.9845075691653287]),[0.4303850382964657,-0.8693047718360093,0.690200394933304])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9175591422173092 -0.3644511067780561 0.1589358716642843
 0.36170580177166994 0.9311106726724108 0.046923642231226026
 -0.16508825972233565 0.01443280997521354 0.9861731899104083]),[1.0009194642985335,-0.8695440486252246,1.2570696600859002])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
