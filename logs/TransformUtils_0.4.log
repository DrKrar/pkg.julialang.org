>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (384.76953125 MB free)
Uptime: 31622.0 sec
Load Avg:  1.060546875  0.9921875  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    1505833 s       2025 s     141206 s    1170143 s        198 s
#2  3505 MHz     970774 s       4317 s     126117 s    1921886 s          9 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.13508941885904877 0.15226972051939047
 0.13508941885904877 0.0 0.05913699050960313
 -0.15226972051939047 -0.05913699050960313 0.0])
dAA = TransformUtils.so3([0.0 0.06641439939626415 0.20567965857346798
 -0.06641439939626415 0.0 0.045751639229034656
 -0.20567965857346798 -0.045751639229034656 0.0])
dAA = TransformUtils.so3([0.0 0.10793657263105186 -0.11385715918650015
 -0.10793657263105186 0.0 0.07966417042543578
 0.11385715918650015 -0.07966417042543578 0.0])
dAA = TransformUtils.Quaternion(0.9885905687834702,[-0.010981951885173266,0.14237453404756645,0.04793303766615574])
dAA = TransformUtils.SO3([0.9993306565977729 -0.019578549976518908 0.030901766368305203
 0.015096660831921937 0.9901592134240063 0.13912879969035652
 -0.03332160883856422 -0.13856916126025437 0.9897920276159227])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
