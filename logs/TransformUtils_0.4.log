>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (443.83203125 MB free)
Uptime: 39313.0 sec
Load Avg:  0.95361328125  0.93115234375  0.9521484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1948482 s       1656 s     149910 s    1424681 s        181 s
#2  3499 MHz    1204529 s       4816 s     127284 s    2411781 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0456531521768215 -0.03117486526593001
 -0.0456531521768215 0.0 -0.058029533204870545
 0.03117486526593001 0.058029533204870545 0.0])
dAA = TransformUtils.so3([0.0 -0.03624495232591856 0.24809577906033375
 0.03624495232591856 0.0 -0.13945483097876699
 -0.24809577906033375 0.13945483097876699 0.0])
dAA = TransformUtils.so3([0.0 0.10639473265442581 0.06553555479177327
 -0.10639473265442581 0.0 -0.1895722242422585
 -0.06553555479177327 0.1895722242422585 0.0])
dAA = TransformUtils.Quaternion(0.999252872896355,[0.016608636900112956,0.013222741373236358,0.03229563901330212])
dAA = TransformUtils.SO3([0.993800607839291 -0.05499090117606855 0.09662480347250105
 0.05777200382061148 0.9979853601980359 -0.026222440865561605
 -0.094988143643335 0.031642086186604156 0.9949753921323646])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9356201077711536 -0.07106637640668557 0.3457811216343632
 0.08571524832580171 0.9959472688461855 -0.02723846328760444
 -0.342444024825578 0.05512356866393278 0.937919763113568]),[-1.216242956719712,-0.02299849560669734,-0.18964360704114622])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9862111687135596 0.1129110767171464 0.12099016265469503
 -0.06020834309123796 0.9257930943690116 -0.373205173920269
 -0.1541508550960476 0.3607744935180772 0.9198256784303928]),[-0.4367370318525904,-0.4315076209054724,1.380212336392791])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9703462661269406 0.061451389134065906 -0.23377735259643634
 -0.13854813424123857 0.9339041003406501 -0.32958693218207585
 0.19807205333357006 0.35220286503720294 0.9147243319972468]),[0.15671816864821586,-0.37571414721754404,1.7530645084212724])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
