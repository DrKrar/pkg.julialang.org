>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1094.9609375 MB free)
Uptime: 30467.0 sec
Load Avg:  0.76953125  0.91552734375  1.009765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1479932 s        100 s     130911 s    1118398 s        156 s
#2  3499 MHz     930504 s       6485 s     114650 s    1879549 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1495236775839858 0.007751531590731138
 0.1495236775839858 0.0 -0.008837875269351462
 -0.007751531590731138 0.008837875269351462 0.0])
dAA = TransformUtils.so3([0.0 0.04946530570148039 0.02711791069124858
 -0.04946530570148039 0.0 0.22992422862464448
 -0.02711791069124858 -0.22992422862464448 0.0])
dAA = TransformUtils.so3([0.0 -0.03149673366977567 -0.03393673024799887
 0.03149673366977567 0.0 -0.057687666055298265
 0.03393673024799887 0.057687666055298265 0.0])
dAA = TransformUtils.Quaternion(0.9991170237810039,[-0.02507829859136422,0.00854664183182082,-0.032606849650801205])
dAA = TransformUtils.SO3([0.9969967628901891 0.006158898195065347 -0.0771979453062502
 0.0014017263474284088 0.9952342038707834 0.09750340819137919
 0.0774305492020488 -0.09731879273146891 0.9922366464868945])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
