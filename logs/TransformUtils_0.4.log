>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (356.515625 MB free)
Uptime: 27616.0 sec
Load Avg:  1.1787109375  1.0595703125  0.9931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1226226 s       2525 s     135601 s    1048880 s         87 s
#2  3499 MHz     769962 s       3623 s     119292 s    1727658 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.8.8
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.09075901361605446 0.16515834238564833
 0.09075901361605446 0.0 -0.08008365116941257
 -0.16515834238564833 0.08008365116941257 0.0])
dAA = TransformUtils.so3([0.0 0.04497336080946389 -0.013046472680267086
 -0.04497336080946389 0.0 -0.038020910560547204
 0.013046472680267086 0.038020910560547204 0.0])
dAA = TransformUtils.so3([0.0 0.11082149953388339 -0.10360590118774622
 -0.11082149953388339 0.0 0.12148268368390716
 0.10360590118774622 -0.12148268368390716 0.0])
dAA = TransformUtils.Quaternion(0.9965176557803082,[-0.020932144798553636,-0.07336363026722897,-0.033647953671289824])
dAA = TransformUtils.SO3([0.9995444746150919 -0.013992905126656737 -0.026740266875184434
 0.00982645590271317 0.9886325039575574 -0.15003070646705044
 0.02853566243898564 0.1496996016184632 0.9883196574208375])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
