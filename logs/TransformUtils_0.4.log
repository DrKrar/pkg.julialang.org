>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (445.5703125 MB free)
Uptime: 41398.0 sec
Load Avg:  0.90869140625  0.9443359375  1.0048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2022797 s        750 s     158707 s    1518940 s        203 s
#2  3500 MHz    1239298 s       5686 s     134354 s    2587720 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.045327174555012166 -0.052222705755925775
 -0.045327174555012166 0.0 -0.051624731727559506
 0.052222705755925775 0.051624731727559506 0.0])
dAA = TransformUtils.so3([0.0 -0.05117877376165797 0.15426901431476053
 0.05117877376165797 0.0 -0.06067932240155813
 -0.15426901431476053 0.06067932240155813 0.0])
dAA = TransformUtils.so3([0.0 0.24082284697503833 -0.056297062244325305
 -0.24082284697503833 0.0 -0.0932848497795628
 0.056297062244325305 0.0932848497795628 0.0])
dAA = TransformUtils.Quaternion(0.9984120899763285,[-0.01628352114285477,-0.05203573950606469,0.014157236395110179])
dAA = TransformUtils.SO3([0.9890038205753743 0.08049017547335166 0.12406762083469768
 -0.09104229209743439 0.9924765647137835 0.08186311467060603
 -0.11654502965360079 -0.0922583337492956 0.9888911243998731])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9080156935450188 0.06029400602583076 0.41457464118457094
 0.06715135649297349 0.9558463951694169 -0.28609153109238383
 -0.41351928080454997 0.2876148495453389 0.8638747031392341]),[0.18366100795339804,0.32324038112287606,0.9448263968334073])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9665212282751912 -0.021023555358434504 -0.2557239242102833
 0.02519030016513995 0.9995977643436827 0.013029132615082295
 0.25534714423898697 -0.01903469566875422 0.9666620486446088]),[-1.1388276775555686,-0.15671557062020147,0.04603127167510621])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7737170388036338 0.05590584128672767 -0.631059807605396
 0.1557951248399305 0.9487196641629417 0.275061589297135
 0.6140763982934425 -0.3111358798669458 0.725330711688382]),[-0.8614010604481921,-0.7970091317813868,-1.1874053111035734])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
