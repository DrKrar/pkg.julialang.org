>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (437.8125 MB free)
Uptime: 32173.0 sec
Load Avg:  0.92529296875  1.01513671875  1.03857421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1591622 s        904 s     144215 s    1151232 s        132 s
#2  3504 MHz     992693 s       5338 s     131882 s    1962194 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.15455689720153026 0.08065660788620728
 0.15455689720153026 0.0 -0.12454650069889009
 -0.08065660788620728 0.12454650069889009 0.0])
dAA = TransformUtils.so3([0.0 0.012821980256023697 -0.07252410103624106
 -0.012821980256023697 0.0 0.08209005809290663
 0.07252410103624106 -0.08209005809290663 0.0])
dAA = TransformUtils.so3([0.0 -0.057673533356004884 -0.01627273288880695
 0.057673533356004884 0.0 -0.11452318578098153
 0.01627273288880695 0.11452318578098153 0.0])
dAA = TransformUtils.Quaternion(0.9958483542020808,[0.03827632480328609,0.04493993694937827,-0.06929199419519058])
dAA = TransformUtils.SO3([0.9795158243597215 0.13194462283083147 -0.15211629214165384
 -0.14162474221238835 0.9884126436925103 -0.054615732001479664
 0.14314741430486927 0.07504040441530506 0.9868524486887682])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
