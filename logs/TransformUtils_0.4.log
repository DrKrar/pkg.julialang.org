>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1094.96875 MB free)
Uptime: 30771.0 sec
Load Avg:  0.9970703125  1.0361328125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1486196 s       4110 s     146978 s    1122796 s        154 s
#2  3499 MHz     940060 s       1207 s     132982 s    1866098 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.07803241238792993 -0.07586930469976899
 -0.07803241238792993 0.0 -0.1960598168878157
 0.07586930469976899 0.1960598168878157 0.0])
dAA = TransformUtils.so3([0.0 0.05643432073416175 -0.1246020800993158
 -0.05643432073416175 0.0 -0.10345378677756648
 0.1246020800993158 0.10345378677756648 0.0])
dAA = TransformUtils.so3([0.0 0.12068074822688557 0.06902893656233695
 -0.12068074822688557 0.0 -0.016797571749883708
 -0.06902893656233695 0.016797571749883708 0.0])
dAA = TransformUtils.Quaternion(0.9995236701243321,[0.002496477611952858,0.01961173322740381,-0.023697687240229217])
dAA = TransformUtils.SO3([0.9968403688625529 -0.028636973082834333 -0.07408915425770818
 0.035387847749577275 0.9951786030232863 0.09147266431165756
 0.07111244080765472 -0.09380550014403992 0.9930476065653169])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
