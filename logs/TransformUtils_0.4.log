>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (422.2109375 MB free)
Uptime: 39368.0 sec
Load Avg:  0.962890625  1.0712890625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1889017 s       5130 s     159801 s    1491005 s        129 s
#2  3499 MHz    1247748 s       1846 s     146630 s    2405462 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.04243791566976633 0.12093049581195758
 0.04243791566976633 0.0 0.04848186346255052
 -0.12093049581195758 -0.04848186346255052 0.0])
dAA = TransformUtils.so3([0.0 0.095835325307843 -0.04073894309046302
 -0.095835325307843 0.0 0.11823364396542146
 0.04073894309046302 -0.11823364396542146 0.0])
dAA = TransformUtils.so3([0.0 0.2061702935141951 -0.08751734921849115
 -0.2061702935141951 0.0 -0.09344367108447305
 0.08751734921849115 0.09344367108447305 0.0])
dAA = TransformUtils.Quaternion(0.997200920080745,[0.05022522354891257,0.049787533806481814,-0.024268361853368357])
dAA = TransformUtils.SO3([0.9991114679950553 0.010718392648228025 0.04076015922201913
 -0.013472914587129825 0.9976000565886051 0.06791618118637406
 -0.039934384849323074 -0.06840499362949241 0.9968580649988522])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8809406539528929 0.036367985025396364 0.47182722884361183
 0.010126014078013194 0.9953656429813337 -0.09562792798784278
 -0.47311840806709415 0.08902025857943074 0.8764897977218616]),[1.610326724849673,-1.1643983359612886,0.5125370637160409])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9724054206675806 -0.21983819371760288 0.07809523954305639
 0.227130265519545 0.9685426133826941 -0.10167127690179835
 -0.05328733753272579 0.11660349327873015 0.9917479947112928]),[-0.1613593235131755,0.6224611426965565,0.5878020852090005])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8841426117600472 -0.23902418511423384 -0.40144648584910886
 0.2566984359906631 0.9664390421102921 -0.010074266469004
 0.3903815505759331 -0.09414359678394237 0.9158270732810385]),[-1.578265768959548,1.7208459938902827,-0.9408343646655231])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
