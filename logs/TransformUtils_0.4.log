>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (385.34375 MB free)
Uptime: 32350.0 sec
Load Avg:  0.9228515625  0.96484375  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1596750 s       5619 s     141320 s    1155720 s        110 s
#2  3500 MHz     981917 s       1067 s     128587 s    2006611 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.009689812165876166 0.07775872816977925
 -0.009689812165876166 0.0 0.023470427310427172
 -0.07775872816977925 -0.023470427310427172 0.0])
dAA = TransformUtils.so3([0.0 0.01934417028769449 -0.06330270738393295
 -0.01934417028769449 0.0 0.08291941425213328
 0.06330270738393295 -0.08291941425213328 0.0])
dAA = TransformUtils.so3([0.0 0.041749715799510784 -0.09779567449600475
 -0.041749715799510784 0.0 -0.1643119914300519
 0.09779567449600475 0.1643119914300519 0.0])
dAA = TransformUtils.Quaternion(0.9907174887775033,[-0.12120320242111891,0.060905314029123296,-0.008898532254070264])
dAA = TransformUtils.SO3([0.9789906293951656 0.18620149243336778 -0.08310446300917931
 -0.18066613822756097 0.9810612242547765 0.06984712421896329
 0.09453620499257104 -0.05336551769922157 0.9940900499785201])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
