>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (458.72265625 MB free)
Uptime: 39421.0 sec
Load Avg:  0.99169921875  1.00244140625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    1833359 s       5382 s     144939 s    1554167 s        142 s
#2  3495 MHz    1220234 s       1415 s     123163 s    2443692 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.1067955251198478 0.08169819915725773
 -0.1067955251198478 0.0 0.08535194970174896
 -0.08169819915725773 -0.08535194970174896 0.0])
dAA = TransformUtils.so3([0.0 -0.17683381138246881 -0.05827700856359831
 0.17683381138246881 0.0 0.10149175883075366
 0.05827700856359831 -0.10149175883075366 0.0])
dAA = TransformUtils.so3([0.0 -0.03555365589039986 0.0960998522833018
 0.03555365589039986 0.0 -0.09450814099366671
 -0.0960998522833018 0.09450814099366671 0.0])
dAA = TransformUtils.Quaternion(0.9939518511044612,[0.09461977470895623,-0.043279487952627746,0.03512409205374566])
dAA = TransformUtils.SO3([0.986605468742454 -0.03724344925436788 0.15881616584945193
 0.009641664490288014 0.9851996354551028 0.1711394653637495
 -0.1628394526929516 -0.1673158802587806 0.9723624369852478])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.7993262611267903 -0.44517699790592946 -0.40360248860547226
 0.31106185154224136 0.8812189489149899 -0.35594056889918174
 0.5141187146838547 0.15896730672885107 0.8428590289029337]),[-0.7926192570845929,1.2933207283454837,-0.3922337682888536])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9824558119862266 -0.17914970215658885 -0.051826264689727945
 0.15261192687672834 0.9320170171146634 -0.3287154994575968
 0.10719224444639806 0.31503914681494855 0.9430059165798764]),[-0.39955122390523956,-0.2721632904894653,0.5884487105765336])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8878840183977994 0.3086833986413593 0.34114004349679605
 -0.28584214475919417 0.9511453074578069 -0.11669135520876361
 -0.36049443567583694 0.006096187678673093 0.9327414423850514]),[0.33141445941837483,-1.3986225761831168,1.2251531176828458])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
