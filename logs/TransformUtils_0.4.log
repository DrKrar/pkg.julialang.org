>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.51953125 MB free)
Uptime: 40516.0 sec
Load Avg:  1.05859375  1.0654296875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1968378 s       1390 s     166733 s    1503762 s        160 s
#2  3500 MHz    1272294 s       6000 s     146454 s    2466191 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.10519924803038434 0.10566232728017647
 -0.10519924803038434 0.0 -0.2882276210850519
 -0.10566232728017647 0.2882276210850519 0.0])
dAA = TransformUtils.so3([0.0 -0.0923620302813074 -0.06947273301554345
 0.0923620302813074 0.0 0.027145714875198085
 0.06947273301554345 -0.027145714875198085 0.0])
dAA = TransformUtils.so3([0.0 -0.049588580252752576 -0.12505415999041086
 0.049588580252752576 0.0 0.1559940055711054
 0.12505415999041086 -0.1559940055711054 0.0])
dAA = TransformUtils.Quaternion(0.9984541849552745,[-0.03126739415511542,-0.021837426578092928,0.04043163870650933])
dAA = TransformUtils.SO3([0.9872193783755641 0.1393672828064328 -0.07729592125667
 -0.13809524733272732 0.9901835859860648 0.02159094041238078
 0.07954622319053507 -0.010640795408703538 0.9967743836240939])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9480773389546725 -0.29431568069256164 -0.12053065775602968
 0.31415944311625027 0.9256710842529292 0.21080058842160276
 0.049529825979046156 -0.23772110523990192 0.9700698286525589]),[1.3611294302766197,-2.4421905498547454,-2.108080140138299])
xj = TransformUtils.SE3(TransformUtils.SO3([0.7822670037632701 -0.42438542353208236 0.45602121345035135
 0.35997182931901994 0.9054031096290613 0.22508996239447088
 -0.5084079237383641 -0.011925660045507547 0.8610337750126442]),[-0.03221424587411634,0.8821820458940358,0.5523120586333663])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8295568127271975 -0.11849994218340029 0.5457043688302519
 0.22384136139413724 0.9658437440658865 -0.13054082494763838
 -0.5115960705352536 0.23044223951203424 0.8277474463032587]),[-0.1448457587017778,2.854927103788866,3.4494865334941807])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
