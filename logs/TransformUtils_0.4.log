>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1096.31640625 MB free)
Uptime: 31244.0 sec
Load Avg:  0.916015625  0.970703125  1.00439453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1518010 s       7650 s     147129 s    1133838 s        127 s
#2  3500 MHz     958241 s         55 s     131774 s    1900013 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.22121223476204677 -0.11177948077015139
 -0.22121223476204677 0.0 0.09398308630304358
 0.11177948077015139 -0.09398308630304358 0.0])
dAA = TransformUtils.so3([0.0 -0.03510007689936009 0.1670027548704498
 0.03510007689936009 0.0 -0.09310665866409586
 -0.1670027548704498 0.09310665866409586 0.0])
dAA = TransformUtils.so3([0.0 0.04603938822437179 -0.01767230074740335
 -0.04603938822437179 0.0 -0.06320154516350227
 0.01767230074740335 0.06320154516350227 0.0])
dAA = TransformUtils.Quaternion(0.9953402192710035,[-0.04418950197134302,-0.08282768287998221,0.02201614784217319])
dAA = TransformUtils.SO3([0.9891538663747786 -0.11882242095011333 -0.0863473272046169
 0.1292481702561185 0.9834007733475899 0.12734924210535387
 0.06978208309639737 -0.13712822925611157 0.9880922576459202])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
