>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1097.38671875 MB free)
Uptime: 29927.0 sec
Load Avg:  1.11865234375  1.02294921875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1453734 s       2961 s     130550 s    1106939 s         92 s
#2  3499 MHz     934740 s       4038 s     115076 s    1841683 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.11219215842316183 -0.021524587885719145
 0.11219215842316183 0.0 -0.006129469995124254
 0.021524587885719145 0.006129469995124254 0.0])
dAA = TransformUtils.so3([0.0 0.0716435898811539 0.050065455154128594
 -0.0716435898811539 0.0 -0.04245493362883974
 -0.050065455154128594 0.04245493362883974 0.0])
dAA = TransformUtils.so3([0.0 0.048025978775019046 0.0030528438868173535
 -0.048025978775019046 0.0 0.05215686389602338
 -0.0030528438868173535 -0.05215686389602338 0.0])
dAA = TransformUtils.Quaternion(0.9978530418403577,[-0.030669215807021408,-0.0029377122067446547,0.057793390095390584])
dAA = TransformUtils.SO3([0.9976582035325947 0.06642516097486914 0.016303585911656936
 -0.06623803459093736 0.9977345263770474 -0.011761702627557673
 -0.017047923558188596 0.010654241626321134 0.9997979072981311])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
