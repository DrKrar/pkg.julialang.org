>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (342.41015625 MB free)
Uptime: 27759.0 sec
Load Avg:  1.1787109375  1.07666015625  1.03125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1275649 s       3790 s     119860 s    1093129 s         68 s
#2  3496 MHz     785413 s       3414 s     104659 s    1776064 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.14505445939259046 -0.034474900264113005
 0.14505445939259046 0.0 0.06601176728189591
 0.034474900264113005 -0.06601176728189591 0.0])
dAA = TransformUtils.so3([0.0 -0.0397098449981654 0.11219971562687972
 0.0397098449981654 0.0 -0.00883837775001453
 -0.11219971562687972 0.00883837775001453 0.0])
dAA = TransformUtils.so3([0.0 0.1694597307221061 0.06560795934634538
 -0.1694597307221061 0.0 -0.08252647977652472
 -0.06560795934634538 0.08252647977652472 0.0])
dAA = TransformUtils.Quaternion(0.993286706028118,[0.0322228860851835,0.0494783191939105,0.09947412311701011])
dAA = TransformUtils.SO3([0.9802197672220466 0.1113916342696378 0.16358823845831952
 -0.11412309557826902 0.9934393140003709 0.007365354988452009
 -0.16169454846342232 -0.02588886272534763 0.9865012112430468])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
