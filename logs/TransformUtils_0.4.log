>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.2421875 MB free)
Uptime: 39442.0 sec
Load Avg:  0.9130859375  1.02490234375  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1933891 s       2595 s     147690 s    1442029 s        174 s
#2  3500 MHz    1267695 s       4470 s     126953 s    2380591 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.0049800016349414835 0.10072003760273673
 0.0049800016349414835 0.0 -0.04478035778500097
 -0.10072003760273673 0.04478035778500097 0.0])
dAA = TransformUtils.so3([0.0 0.11229822758161596 -0.06604457062340595
 -0.11229822758161596 0.0 0.20374668604051405
 0.06604457062340595 -0.20374668604051405 0.0])
dAA = TransformUtils.so3([0.0 -0.08778756322517467 0.04284156358078777
 0.08778756322517467 0.0 0.06945532721378714
 -0.04284156358078777 -0.06945532721378714 0.0])
dAA = TransformUtils.Quaternion(0.9958066530180911,[-0.01884145016206263,0.034677899877653726,0.0825321320503286])
dAA = TransformUtils.SO3([0.9934715917722247 0.11372131677566895 -0.009036506646392209
 -0.1140608194530039 0.9887411144488579 -0.09685627529561455
 -0.0020798575123256355 0.09725466934414298 0.9952573554028578])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8194869998807688 -0.4734392952010799 -0.32294936257240325
 0.5466258888446123 0.814999878780994 0.19228971691643493
 0.17216618329757577 -0.33411140559171254 0.9266759811186841]),[0.7865171295513433,-1.2338141181728046,1.4886106758254325])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9653847381866608 0.20788857244990858 -0.15752666034995927
 -0.20677425983573924 0.9781036637020905 0.023614159352603224
 0.1589865174964673 0.009775709554147754 0.9872323549990947]),[0.059462248637084686,2.2031372006385874,-0.6136102906212678])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7054641811675103 0.7067018137027616 0.05378508714208163
 -0.6786912755770051 0.6954655720716139 -0.23602074171301268
 -0.2042019626382464 0.13000070989163912 0.9702584057262055]),[0.9209831862105748,3.847707260563889,-1.05238537011404])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
