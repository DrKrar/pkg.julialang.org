>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (342.23828125 MB free)
Uptime: 29279.0 sec
Load Avg:  0.7890625  0.8828125  0.95947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1282279 s       7331 s     125564 s    1104200 s        179 s
#2  3499 MHz     781365 s         66 s     101482 s    1861703 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.08240334624526835 0.03649099117235126
 -0.08240334624526835 0.0 -0.06524970751631341
 -0.03649099117235126 0.06524970751631341 0.0])
dAA = TransformUtils.so3([0.0 0.05659089495864869 0.025098161552899807
 -0.05659089495864869 0.0 0.12547872575684646
 -0.025098161552899807 -0.12547872575684646 0.0])
dAA = TransformUtils.so3([0.0 -0.05922914618002259 -0.13031638699868578
 0.05922914618002259 0.0 0.1015304721811996
 0.13031638699868578 -0.1015304721811996 0.0])
dAA = TransformUtils.Quaternion(0.9983357370046055,[0.010107735696606649,-0.04739825061962641,-0.0312569310195014])
dAA = TransformUtils.SO3([0.9808396852913682 -0.19299571345936398 -0.02657379054333628
 0.18886042252424753 0.975435816024392 -0.113387431493933
 0.047804315301996844 0.10619615531242045 0.9931954108005975])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
