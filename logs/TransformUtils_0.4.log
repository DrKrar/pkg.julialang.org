>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (442.25 MB free)
Uptime: 39034.0 sec
Load Avg:  1.12841796875  1.08837890625  1.05859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1867252 s        154 s     148903 s    1480198 s        154 s
#2  3499 MHz    1285368 s       6354 s     129053 s    2310032 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.08469217381325557 0.049574999067296316
 -0.08469217381325557 0.0 -0.015980756981743224
 -0.049574999067296316 0.015980756981743224 0.0])
dAA = TransformUtils.so3([0.0 -0.038117150056363076 0.11167523695684818
 0.038117150056363076 0.0 -0.12247644911651259
 -0.11167523695684818 0.12247644911651259 0.0])
dAA = TransformUtils.so3([0.0 0.1684421633022818 0.06690226003082683
 -0.1684421633022818 0.0 0.017843010302271808
 -0.06690226003082683 -0.017843010302271808 0.0])
dAA = TransformUtils.Quaternion(0.9990567014671968,[-0.01118170538514858,-0.02278550103126379,-0.035234892662223495])
dAA = TransformUtils.SO3([0.9944965497615164 0.07300929466551043 -0.07514156908718722
 -0.06066781599243901 0.9860318765918894 0.15511464936421937
 0.08541679351946793 -0.14970230872341894 0.9850346136800121])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.921925463223755 -0.2306619502789793 0.31120492437164693
 0.35908664610527985 0.8102244849719791 -0.4632419071508455
 -0.1452935678153934 0.5388240423787609 0.8297942097328016]),[-0.8409191349803768,0.39411122094773027,0.6213982659330367])
xj = TransformUtils.SE3(TransformUtils.SO3([0.988575346739805 -0.006228667933443793 0.15059876332177902
 0.021979083087485883 0.9944230943342467 -0.10314857905630752
 -0.149116409978606 0.10528016503822941 0.9831990556975813]),[-1.5571973604127167,0.709209861712163,-1.8832484888178844])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.940950834930648 0.336045155385714 -0.041050941342526376
 -0.29056623301168816 0.863870140252577 0.4114603808550592
 0.17373195007457193 -0.3752359715189688 0.9105027046645728]),[-0.18329835755935853,-0.9290451227764136,-2.4472175807814507])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
