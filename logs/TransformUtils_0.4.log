>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (336.67578125 MB free)
Uptime: 26644.0 sec
Load Avg:  0.916015625  0.97119140625  1.0224609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1198996 s       4881 s     115306 s    1018549 s         64 s
#2  3500 MHz     784886 s        101 s      96230 s    1637856 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.15430915142420856 -0.2124386436267598
 0.15430915142420856 0.0 0.07841692130502291
 0.2124386436267598 -0.07841692130502291 0.0])
dAA = TransformUtils.so3([0.0 0.08622919488519167 0.06219903521417043
 -0.08622919488519167 0.0 0.10956891792038259
 -0.06219903521417043 -0.10956891792038259 0.0])
dAA = TransformUtils.so3([0.0 -0.09908690857632046 -0.16371869834425148
 0.09908690857632046 0.0 -0.15709463890529918
 0.16371869834425148 0.15709463890529918 0.0])
dAA = TransformUtils.Quaternion(0.9931321460392132,[0.08742902550608717,-0.048161294753902587,0.06103438121444814])
dAA = TransformUtils.SO3([0.9787019580430079 -0.09618186190734127 0.18136021273371863
 0.08594924795213044 0.9942751929748634 0.06347887373970279
 -0.18642747678184604 -0.04653912413051049 0.9813658368956601])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
