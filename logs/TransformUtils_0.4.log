>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (336.1640625 MB free)
Uptime: 29710.0 sec
Load Avg:  1.06396484375  1.0107421875  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1289228 s       2656 s     128190 s    1154799 s        187 s
#2  3499 MHz     797430 s       4263 s     105380 s    1877488 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1205527371175562 -0.13417386579205057
 0.1205527371175562 0.0 -0.061010243446120264
 0.13417386579205057 0.061010243446120264 0.0])
dAA = TransformUtils.so3([0.0 0.10943065563258936 0.08677484004895411
 -0.10943065563258936 0.0 -0.038858948897168996
 -0.08677484004895411 0.038858948897168996 0.0])
dAA = TransformUtils.so3([0.0 -0.051521306361862806 -0.05979317604087691
 0.051521306361862806 0.0 0.15524863904533068
 0.05979317604087691 -0.15524863904533068 0.0])
dAA = TransformUtils.Quaternion(0.9957701615956098,[-0.020651477391845342,0.03181573921259025,0.0836842906150478])
dAA = TransformUtils.SO3([0.9955057683990095 0.09022245984072191 0.02877799201798368
 -0.09273548405714441 0.9903336740737939 0.10314719575532624
 -0.019193620840918094 -0.10535236938858944 0.994249708666402])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
