>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (658.05078125 MB free)
Uptime: 31205.0 sec
Load Avg:  1.2041015625  1.08154296875  1.0576171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1503978 s       1223 s     133263 s    1158419 s        118 s
#2  3500 MHz     962160 s       3956 s     115402 s    1920815 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.026073008214484734 0.04753590318724091
 -0.026073008214484734 0.0 -0.005502303240238293
 -0.04753590318724091 0.005502303240238293 0.0])
dAA = TransformUtils.so3([0.0 0.03655055764834263 -0.057797910701123126
 -0.03655055764834263 0.0 -0.08515107831443736
 0.057797910701123126 0.08515107831443736 0.0])
dAA = TransformUtils.so3([0.0 0.030647570288175448 -0.08953485020690043
 -0.030647570288175448 0.0 -0.06980022620917552
 0.08953485020690043 0.06980022620917552 0.0])
dAA = TransformUtils.Quaternion(0.9921787339230547,[-0.035171200505088894,0.1185456226629952,-0.017066984306489556])
dAA = TransformUtils.SO3([0.9855156613092424 0.10055590992338569 -0.13655544768952582
 -0.08532009089564076 0.9899035682399773 0.11318748904062
 0.14655839588289193 -0.09989711990463397 0.9841449090611569])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
