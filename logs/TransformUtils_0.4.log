>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (344.54296875 MB free)
Uptime: 31600.0 sec
Load Avg:  0.9833984375  0.98583984375  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1525890 s       4766 s     130380 s    1176691 s         90 s
#2  3499 MHz     940300 s       1705 s     119604 s    1969664 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08275350143123006 -0.034518452235350966
 0.08275350143123006 0.0 -0.1817649200136599
 0.034518452235350966 0.1817649200136599 0.0])
dAA = TransformUtils.so3([0.0 -0.04552901937355972 -0.07991496536674544
 0.04552901937355972 0.0 -0.1004975216909419
 0.07991496536674544 0.1004975216909419 0.0])
dAA = TransformUtils.so3([0.0 0.023705738945867992 0.0602733902753079
 -0.023705738945867992 0.0 -0.012636634876892143
 -0.0602733902753079 0.012636634876892143 0.0])
dAA = TransformUtils.Quaternion(0.998816491987762,[0.0018948145085614745,-0.00393377289387428,-0.04844120603431063])
dAA = TransformUtils.SO3([0.9941125441883961 0.021091351895811093 0.10627983986853479
 -0.017278960259194384 0.9991782069768157 -0.03666535469564019
 -0.10696582173589614 0.03461308391061086 0.9936600260665424])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
