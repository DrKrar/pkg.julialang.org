>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (439.44921875 MB free)
Uptime: 40019.0 sec
Load Avg:  1.044921875  0.9921875  0.96826171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1874324 s       6792 s     160156 s    1541294 s        223 s
#2  3500 MHz    1246722 s         98 s     142974 s    2430681 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.05801801537036377 -0.06780648681935522
 0.05801801537036377 0.0 -0.08342178764243768
 0.06780648681935522 0.08342178764243768 0.0])
dAA = TransformUtils.so3([0.0 0.23175308116036628 -0.06793227922980846
 -0.23175308116036628 0.0 0.07216793795554562
 0.06793227922980846 -0.07216793795554562 0.0])
dAA = TransformUtils.so3([0.0 -0.0023447426786075407 -0.043249790124262735
 0.0023447426786075407 0.0 -0.1336536814785189
 0.043249790124262735 0.1336536814785189 0.0])
dAA = TransformUtils.Quaternion(0.9988045738622481,[-0.03029103856758691,0.006444735111850645,0.0378198572668944])
dAA = TransformUtils.SO3([0.9770535101792185 0.157957046376026 0.1428846029025885
 -0.1358086976450866 0.9787914563898968 -0.15337301764681566
 -0.16408057743198576 0.1304486734248645 0.9777835689513706])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8642043934819112 -0.46906263944795473 -0.18201924777528336
 0.42553214521005317 0.8744273660373456 -0.2330218335648404
 0.26846444770116606 0.12392345136860924 0.9552852027124673]),[1.2039289033600087,-2.191917653532374,1.4781203484472452])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9646304397178946 0.1130767854182557 0.23812130389600805
 -0.10611167358332198 0.9934705725598272 -0.04191102703341507
 -0.24130567233077593 0.015161202364023562 0.9703307221993279]),[1.1716328781974932,-0.06338130714075658,-1.1952614561654678])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7237019419494125 0.5245453625228543 0.44845028918980206
 -0.5751624831332479 0.8175565890943739 -0.028095224227063162
 -0.38137070838574605 -0.23759921355959981 0.8933661044058107]),[0.16014230113044747,1.5451045896427356,-3.0439590231866456])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
