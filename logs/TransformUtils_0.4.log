>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (400.71875 MB free)
Uptime: 31164.0 sec
Load Avg:  1.02001953125  0.97802734375  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1521145 s       2688 s     130649 s    1137360 s         98 s
#2  3500 MHz     967146 s       3911 s     117209 s    1900334 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.04116018606569704 0.02871027445782706
 -0.04116018606569704 0.0 0.07112155781913336
 -0.02871027445782706 -0.07112155781913336 0.0])
dAA = TransformUtils.so3([0.0 0.038525301861549455 -0.014438575257437337
 -0.038525301861549455 0.0 -0.09237242800440518
 0.014438575257437337 0.09237242800440518 0.0])
dAA = TransformUtils.so3([0.0 0.14062978715626812 -0.09936859160596342
 -0.14062978715626812 0.0 0.1482661483305738
 0.09936859160596342 -0.1482661483305738 0.0])
dAA = TransformUtils.Quaternion(0.9963433890820607,[0.07308179336319379,-0.02739509464425335,-0.03476221081469556])
dAA = TransformUtils.SO3([0.9981935844140474 -0.028092582492161802 0.053107201428407
 0.031127293933979026 0.9978769491521372 -0.05720739395542523
 -0.051387348705532396 0.058757137096225466 0.9969488147509237])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
