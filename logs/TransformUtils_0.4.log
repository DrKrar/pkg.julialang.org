>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (603.00390625 MB free)
Uptime: 31200.0 sec
Load Avg:  0.96142578125  1.037109375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1498764 s        542 s     143560 s    1133659 s        186 s
#2  3499 MHz     942590 s       7374 s     124758 s    1901773 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.05236807734237767 -0.09061346000920802
 -0.05236807734237767 0.0 0.013272373916361957
 0.09061346000920802 -0.013272373916361957 0.0])
dAA = TransformUtils.so3([0.0 -0.0027813312526209417 0.053893360564777205
 0.0027813312526209417 0.0 0.19771580148522036
 -0.053893360564777205 -0.19771580148522036 0.0])
dAA = TransformUtils.so3([0.0 -0.022263072807838583 0.09492849645471083
 0.022263072807838583 0.0 0.06957109069462651
 -0.09492849645471083 -0.06957109069462651 0.0])
dAA = TransformUtils.Quaternion(0.9980241689984259,[0.04324365197220647,0.04160344687186957,-0.018625194428184732])
dAA = TransformUtils.SO3([0.993518542281302 0.11236511685307617 0.01717517562738128
 -0.11357016587633632 0.9875844302209835 0.10853022900517921
 -0.004766924171654588 -0.10977738245963843 0.9939447684525795])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
