>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (341.12890625 MB free)
Uptime: 30450.0 sec
Load Avg:  0.7607421875  0.95654296875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1457958 s       3618 s     135172 s    1105399 s        196 s
#2  3504 MHz     879874 s       4650 s     117814 s    1892014 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.05314885057243797 0.06730272176111511
 0.05314885057243797 0.0 -0.020489315443101876
 -0.06730272176111511 0.020489315443101876 0.0])
dAA = TransformUtils.so3([0.0 0.044604263112238474 -0.020837509641387433
 -0.044604263112238474 0.0 0.1510193447506753
 0.020837509641387433 -0.1510193447506753 0.0])
dAA = TransformUtils.so3([0.0 0.10888391665204994 0.15989931162165005
 -0.10888391665204994 0.0 0.044557536564523846
 -0.15989931162165005 -0.044557536564523846 0.0])
dAA = TransformUtils.Quaternion(0.995235219395992,[-0.0010897960792079814,-0.09431725705574023,0.024696668597178874])
dAA = TransformUtils.SO3([0.9895451724269518 -0.13704637983960627 0.04492929444552819
 0.14091346798319065 0.9850808745741587 -0.09878798048933599
 -0.030720453568671646 0.10408631188138759 0.9940937045427186])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
