>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (441.21484375 MB free)
Uptime: 38595.0 sec
Load Avg:  0.9521484375  1.03515625  1.04345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1884112 s        362 s     150342 s    1425746 s        188 s
#2  3500 MHz    1227766 s       5949 s     131924 s    2333457 s          9 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.023911898829940267 0.33381364961831544
 0.023911898829940267 0.0 0.15174963638057568
 -0.33381364961831544 -0.15174963638057568 0.0])
dAA = TransformUtils.so3([0.0 -0.08813447848978584 0.05315628055779897
 0.08813447848978584 0.0 0.17523344775800745
 -0.05315628055779897 -0.17523344775800745 0.0])
dAA = TransformUtils.so3([0.0 0.11839510223823052 0.31655527881750256
 -0.11839510223823052 0.0 0.04093127473360471
 -0.31655527881750256 -0.04093127473360471 0.0])
dAA = TransformUtils.Quaternion(0.9968642218979975,[0.008265223047208413,0.03664502730314245,-0.06964589838340565])
dAA = TransformUtils.SO3([0.9933077814433274 -0.058152440839709364 0.09978950319808033
 0.06460053787219196 0.9959427025059883 -0.06264905291935706
 -0.09574143215326933 0.06867624734544696 0.9930343152277209])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.979068257555783 0.2006651040215534 0.03404207800211585
 -0.1972798694113103 0.9767619317464104 -0.0837662331496241
 -0.050059965758471686 0.07529704322906687 0.9959037880785576]),[2.2324817240800368,-0.7604920552798543,0.5648348617932643])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9540981817881629 -0.29757884785960265 -0.03381551145662704
 0.26355511609800136 0.8878670922235817 -0.3771348927439767
 0.1422510466994561 0.3509114644080374 0.9255408061560094]),[0.08717048578728755,0.5070370089656823,0.3213671833647172])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8750120429670993 -0.4840749239603481 -0.0050391125534553285
 0.45959589842953885 0.8339436813791199 -0.3054661133981736
 0.15207082168939628 0.26497057248046263 0.9521896139478142]),[-2.3382761206140934,0.7892526382390531,-0.4216773708539763])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
