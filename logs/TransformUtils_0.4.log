>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (331.26953125 MB free)
Uptime: 29184.0 sec
Load Avg:  1.1259765625  1.099609375  1.12109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1316541 s       3556 s     150004 s    1053287 s        204 s
#2  3499 MHz     857639 s       2884 s     133213 s    1737224 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.06738175325470798 0.030146527443123385
 -0.06738175325470798 0.0 -0.17855101745703683
 -0.030146527443123385 0.17855101745703683 0.0])
dAA = TransformUtils.so3([0.0 -0.03413083774517707 0.08106796112345105
 0.03413083774517707 0.0 0.13394034343943426
 -0.08106796112345105 -0.13394034343943426 0.0])
dAA = TransformUtils.so3([0.0 0.0014236179100178088 0.025637072135915484
 -0.0014236179100178088 0.0 -0.18872779379290314
 -0.025637072135915484 0.18872779379290314 0.0])
dAA = TransformUtils.Quaternion(0.9944048366208978,[0.029456667297394466,-0.09331764100771202,-0.03978873626356973])
dAA = TransformUtils.SO3([0.9991405496150785 0.003034019609785433 -0.041339531200612616
 -0.00789449065861282 0.992991161259992 -0.11792468222036463
 0.04069200329450568 0.11814968634973326 0.9921616866636909])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
