>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (333.265625 MB free)
Uptime: 29621.0 sec
Load Avg:  1.06787109375  1.06494140625  1.0498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1418098 s       4721 s     126280 s    1109469 s        120 s
#2  3501 MHz     935124 s        310 s     109269 s    1805233 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.12287643301663131 -0.024949880688607234
 0.12287643301663131 0.0 0.0062522948638132686
 0.024949880688607234 -0.0062522948638132686 0.0])
dAA = TransformUtils.so3([0.0 0.006316144676149889 0.14228372625814864
 -0.006316144676149889 0.0 0.03782271775252648
 -0.14228372625814864 -0.03782271775252648 0.0])
dAA = TransformUtils.so3([0.0 -0.20293899420668238 -0.10993405026246394
 0.20293899420668238 0.0 0.31372332762758953
 0.10993405026246394 -0.31372332762758953 0.0])
dAA = TransformUtils.Quaternion(0.9971704044218487,[-0.042576889921237614,-0.006312628126519077,-0.061632326874279365])
dAA = TransformUtils.SO3([0.9923952322169302 0.04906696858453682 0.11288992721686869
 -0.045893936357900726 0.9984794317905242 -0.030538023787553506
 -0.1142166786361904 0.025124826072956276 0.9931381039090793])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
