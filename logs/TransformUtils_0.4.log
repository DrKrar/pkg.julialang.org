>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (345.1171875 MB free)
Uptime: 29104.0 sec
Load Avg:  1.13916015625  1.04345703125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1377038 s       2996 s     125132 s    1100648 s        174 s
#2  3499 MHz     853388 s       4276 s     111629 s    1801229 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.031344602636183314 -0.07618619537211369
 0.031344602636183314 0.0 0.027103234870573728
 0.07618619537211369 -0.027103234870573728 0.0])
dAA = TransformUtils.so3([0.0 -0.024918246968726618 0.09928325003803151
 0.024918246968726618 0.0 0.1385979932362557
 -0.09928325003803151 -0.1385979932362557 0.0])
dAA = TransformUtils.so3([0.0 0.11009321361089881 0.05028139381259326
 -0.11009321361089881 0.0 -0.16151120267635444
 -0.05028139381259326 0.16151120267635444 0.0])
dAA = TransformUtils.Quaternion(0.9989223453349277,[0.01389703274592435,0.013792424485385847,0.04208074973477874])
dAA = TransformUtils.SO3([0.9961503720455342 0.07598476371120196 -0.04371214885242459
 -0.0769871114345002 0.9967954564249086 -0.021721020317429153
 0.04192160477028004 0.025002674545158733 0.9988080122421292])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
