>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (442.15234375 MB free)
Uptime: 39311.0 sec
Load Avg:  0.916015625  0.9716796875  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1897599 s       4148 s     156373 s    1454879 s        203 s
#2  3500 MHz    1257479 s       2300 s     137304 s    2341996 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0060063573779033375 -0.05607928794287537
 -0.0060063573779033375 0.0 -0.10834805663928614
 0.05607928794287537 0.10834805663928614 0.0])
dAA = TransformUtils.so3([0.0 0.063221157826794 0.05108525845018579
 -0.063221157826794 0.0 0.010420648056456254
 -0.05108525845018579 -0.010420648056456254 0.0])
dAA = TransformUtils.so3([0.0 0.030925007672124027 0.02114603106550289
 -0.030925007672124027 0.0 -0.04367637691543573
 -0.02114603106550289 0.04367637691543573 0.0])
dAA = TransformUtils.Quaternion(0.989419525007855,[-0.139653109567021,0.030383485049237272,0.024957090330302578])
dAA = TransformUtils.SO3([0.9977179375950446 0.04965055344200563 -0.04575739878963952
 -0.04943107399018737 0.9987600138912921 0.00591638200621201
 0.04599441189175248 -0.003641043088093096 0.998935061392863])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.928784791233689 0.3635544282719262 -0.07202075573656247
 -0.34631861593455165 0.9205490564156428 0.18070099886122984
 0.13199328706479452 -0.1428902110577997 0.9808976295993829]),[0.9251140544606403,-1.9156991312811447,0.6891343453893847])
xj = TransformUtils.SE3(TransformUtils.SO3([0.969235292591229 0.24065257720276523 0.051665120548218355
 -0.21227759916891242 0.9235301390988019 -0.31942182622236426
 -0.12458398166167824 0.2986275594479097 0.9462031559086599]),[-1.9565988070528015,0.04302324575098818,-0.09272200145151867])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9572824339686105 -0.056904392689754515 0.2834999677385226
 0.17475967047991528 0.8949741532387389 -0.4104635460163958
 -0.23036796476264798 0.44247390332901293 0.8666876286666971]),[-3.458032890322005,0.8671601825627357,-0.20543480917995605])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
