>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (336.91015625 MB free)
Uptime: 33761.0 sec
Load Avg:  0.869140625  0.95654296875  1.0224609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1672167 s         56 s     137053 s    1197775 s        100 s
#2  3500 MHz     988947 s         91 s     122446 s    2128005 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08941555130252313 -0.1561759709065005
 0.08941555130252313 0.0 0.007866086691767065
 0.1561759709065005 -0.007866086691767065 0.0])
dAA = TransformUtils.so3([0.0 0.2759987166934081 0.006098941795238243
 -0.2759987166934081 0.0 0.0679687892894844
 -0.006098941795238243 -0.0679687892894844 0.0])
dAA = TransformUtils.so3([0.0 -0.08454866719999521 0.01509009033240389
 0.08454866719999521 0.0 0.060640769573277124
 -0.01509009033240389 -0.060640769573277124 0.0])
dAA = TransformUtils.Quaternion(0.9990648841815746,[0.030887653778892053,-0.027477022119482285,-0.012661883538320656])
dAA = TransformUtils.SO3([0.9961700474283898 -0.0873519489653531 0.0038566330489915274
 0.08693064552569883 0.9941769830594945 0.06368036764346906
 -0.009396780033901165 -0.06310121525514727 0.9979628936780759])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
