>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (442.4609375 MB free)
Uptime: 39370.0 sec
Load Avg:  0.9716796875  0.9853515625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1927066 s       5771 s     146419 s    1455505 s        176 s
#2  3496 MHz    1247393 s       2016 s     123840 s    2383630 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.09690971882559413 -0.03512280050456706
 0.09690971882559413 0.0 0.014846674915668198
 0.03512280050456706 -0.014846674915668198 0.0])
dAA = TransformUtils.so3([0.0 0.07412413788439871 0.126911230550614
 -0.07412413788439871 0.0 0.08639717812467035
 -0.126911230550614 -0.08639717812467035 0.0])
dAA = TransformUtils.so3([0.0 -0.04289465879738804 -0.005976045998852218
 0.04289465879738804 0.0 0.17264065255632105
 0.005976045998852218 -0.17264065255632105 0.0])
dAA = TransformUtils.Quaternion(0.9989796758922701,[-0.016361179669893495,-0.021334032173866313,0.03628743618924999])
dAA = TransformUtils.SO3([0.9709195433116192 0.08149500328201834 -0.22510842910833218
 -0.09158636928954206 0.9951910282261919 -0.03473836925439829
 0.22119488551030475 0.054345025330375184 0.9737142500990342])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8824327300856419 0.05590931791863676 -0.46710451190656815
 0.0919389519651522 0.9532710969137113 0.28778715207680694
 0.4613672138168792 -0.29689790157359236 0.8360573724667748]),[-0.5213962998605364,0.10959933982559529,0.7348433071595888])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8994274331240045 -0.3303522211515711 0.28617774638183846
 0.42926774616298363 0.7908475245462169 -0.4362217269041894
 -0.08221614590891896 0.5151966642936893 0.8531195124087474]),[0.4244043345719956,0.1222628090272513,0.5049092764794075])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7952187978514443 0.01889092974330689 0.6060282141263206
 0.4839047107535636 0.5824615113316634 -0.6531269545254923
 -0.36532628492104674 0.8126387392874326 0.4540429329425999]),[0.7296856789490747,0.13321771874403623,-0.6303814015017407])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
