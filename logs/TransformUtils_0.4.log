>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (453.03125 MB free)
Uptime: 39477.0 sec
Load Avg:  1.00341796875  1.0146484375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1896130 s         74 s     151399 s    1481398 s        145 s
#2  3499 MHz    1267281 s       6236 s     132244 s    2378041 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.019804803395433078 0.008737038627478886
 0.019804803395433078 0.0 0.053568914401892764
 -0.008737038627478886 -0.053568914401892764 0.0])
dAA = TransformUtils.so3([0.0 -0.2448119662566687 -0.058130071683149334
 0.2448119662566687 0.0 -0.07604347369951749
 0.058130071683149334 0.07604347369951749 0.0])
dAA = TransformUtils.so3([0.0 -0.030423084022665272 -0.00023683457396390549
 0.030423084022665272 0.0 -0.007510309987551813
 0.00023683457396390549 0.007510309987551813 0.0])
dAA = TransformUtils.Quaternion(0.9986207943107864,[-0.0016979668914849106,-0.05182808573553912,0.008214353749309462])
dAA = TransformUtils.SO3([0.9869395198039818 0.017045843464262182 -0.1601868392524109
 -0.031060093632738393 0.9958629487678236 -0.08539471795714829
 0.15806851309673087 0.08925484016033669 0.983385945941542])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9397191935547033 0.2344837257404552 -0.24888796601638477
 -0.24395511843168877 0.9697578244534448 -0.0074607038744669415
 0.23961163881556097 0.06772845985401375 0.968503545822071]),[-1.014087802507309,0.5040775217226711,0.0369398394201786])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8617254757655743 0.5073415079352637 0.0058136685980109855
 -0.4901064621577328 0.8293783077413817 0.2681926143637683
 0.13124351476482726 -0.23395772475816007 0.9633477683880103]),[1.7049201780948038,0.5733796911500543,-0.7804944602292592])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9607914228285087 0.218368475561168 0.1708655924996644
 -0.26433505524883005 0.907413833998784 0.3266911575696927
 -0.08370675233078728 -0.3590478279404004 0.9295578717140277]),[2.342330595686937,0.6494058765163173,-1.4689334265253953])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
