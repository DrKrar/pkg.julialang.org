>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (476.32421875 MB free)
Uptime: 33001.0 sec
Load Avg:  0.7578125  0.89892578125  0.9755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    1569244 s       7504 s     146176 s    1224470 s        190 s
#2  3502 MHz    1016053 s       8840 s     129313 s    2006452 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.07730285608355952 0.0535395047870075
 0.07730285608355952 0.0 0.1485281721782467
 -0.0535395047870075 -0.1485281721782467 0.0])
dAA = TransformUtils.so3([0.0 0.015183408175513417 0.10463396053516037
 -0.015183408175513417 0.0 0.13359222651787847
 -0.10463396053516037 -0.13359222651787847 0.0])
dAA = TransformUtils.so3([0.0 0.05376770442053887 -0.010200654018160895
 -0.05376770442053887 0.0 -0.012407734705060096
 0.010200654018160895 0.012407734705060096 0.0])
dAA = TransformUtils.Quaternion(0.9998143625976379,[-0.004051476684167527,-0.01855834313989638,-0.003227038899457313])
dAA = TransformUtils.SO3([0.9918413836460925 -0.12597352109069454 0.01952797150287806
 0.12475836868887498 0.9906978862942669 0.054341950040117284
 -0.026191966881004152 -0.05146231704931485 0.9983314133066336])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
