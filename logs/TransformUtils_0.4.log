>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (526.99609375 MB free)
Uptime: 31981.0 sec
Load Avg:  0.96240234375  0.97509765625  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1596427 s       5036 s     146266 s    1113015 s        117 s
#2  3500 MHz     986045 s       1507 s     133867 s    1968152 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.002122569976474752 -0.3034529488692243
 0.002122569976474752 0.0 0.2077875373255704
 0.3034529488692243 -0.2077875373255704 0.0])
dAA = TransformUtils.so3([0.0 0.22484153457742342 -0.26925530179763346
 -0.22484153457742342 0.0 -0.07155554301014413
 0.26925530179763346 0.07155554301014413 0.0])
dAA = TransformUtils.so3([0.0 0.20865219186065206 -0.009081242637215572
 -0.20865219186065206 0.0 0.1843543499956143
 0.009081242637215572 -0.1843543499956143 0.0])
dAA = TransformUtils.Quaternion(0.9977157906446058,[-0.04322130022268738,0.010353488513313691,-0.05087165793518282])
dAA = TransformUtils.SO3([0.9945761508051925 -0.07238801259210537 -0.07468772243476349
 0.08025290030270255 0.9908710816865756 0.10832345761782355
 0.0661645845035814 -0.11372983386183735 0.9913060943256766])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
