>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (339.75390625 MB free)
Uptime: 31218.0 sec
Load Avg:  1.0029296875  1.0205078125  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1540907 s       6594 s     127886 s    1110990 s        115 s
#2  3499 MHz     943635 s       7427 s     112339 s    1947193 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.08351724952577731 0.06068191334740561
 -0.08351724952577731 0.0 -0.2554775211184697
 -0.06068191334740561 0.2554775211184697 0.0])
dAA = TransformUtils.so3([0.0 0.10566344304867384 0.06572999003809311
 -0.10566344304867384 0.0 -0.03018752833993593
 -0.06572999003809311 0.03018752833993593 0.0])
dAA = TransformUtils.so3([0.0 -0.016321074023674522 -0.03834885542417997
 0.016321074023674522 0.0 -0.11470477381561495
 0.03834885542417997 0.11470477381561495 0.0])
dAA = TransformUtils.Quaternion(0.9968616622049327,[-0.0489699884268371,0.0031870028712302602,-0.06211770820139058])
dAA = TransformUtils.SO3([0.9964243583391733 -0.06527877602564727 -0.053639346649269205
 0.06491098157041947 0.9978542367245261 -0.008572439703992945
 0.054083847680539095 0.005060005089652368 0.9985235769718016])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
