>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (345.97265625 MB free)
Uptime: 27019.0 sec
Load Avg:  1.0576171875  1.0009765625  0.9716796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1235162 s       4909 s     125581 s     987743 s         81 s
#2  3501 MHz     744602 s        268 s     102498 s    1731625 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08695207153742736 -0.025231647214112387
 0.08695207153742736 0.0 -0.001344784377324698
 0.025231647214112387 0.001344784377324698 0.0])
dAA = TransformUtils.so3([0.0 -0.032263003463267693 0.05041629563899465
 0.032263003463267693 0.0 -0.10133908349278775
 -0.05041629563899465 0.10133908349278775 0.0])
dAA = TransformUtils.so3([0.0 0.019769005195695313 0.021021047773885203
 -0.019769005195695313 0.0 -0.18463585521403292
 -0.021021047773885203 0.18463585521403292 0.0])
dAA = TransformUtils.Quaternion(0.9934553979353952,[-0.03360675060564103,-0.07111525468903517,0.08282257649499648])
dAA = TransformUtils.SO3([0.9917411925895879 -0.11978137678496474 -0.045845705322091965
 0.11009604478695263 0.9784372527496535 -0.17475526702786354
 0.06578957245073948 0.16826456610709484 0.9835439837391818])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
