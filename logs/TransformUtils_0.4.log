>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (346.07421875 MB free)
Uptime: 30617.0 sec
Load Avg:  1.1064453125  1.0712890625  1.052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1482877 s       2030 s     131836 s    1129474 s        143 s
#2  3499 MHz     893831 s       6593 s     112481 s    1922589 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.19739370242691978 0.1679674003095738
 -0.19739370242691978 0.0 -0.08070235408538638
 -0.1679674003095738 0.08070235408538638 0.0])
dAA = TransformUtils.so3([0.0 -0.020584805789608192 -0.12946024184220004
 0.020584805789608192 0.0 0.000825022561805412
 0.12946024184220004 -0.000825022561805412 0.0])
dAA = TransformUtils.so3([0.0 0.13640096616589778 -0.02872286683652922
 -0.13640096616589778 0.0 0.03393227752179401
 0.02872286683652922 -0.03393227752179401 0.0])
dAA = TransformUtils.Quaternion(0.9987935441493418,[-0.020578523005025398,-0.008817893176369494,0.0437061244731057])
dAA = TransformUtils.SO3([0.9995731983651062 -0.013045184106098527 -0.026138941864397386
 0.007281680022687527 0.9777766486890196 -0.20952279688500977
 0.028291310436237227 0.20924303680196352 0.9774543228732957])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
