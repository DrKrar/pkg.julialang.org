>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (525.13671875 MB free)
Uptime: 34345.0 sec
Load Avg:  1.1025390625  1.0830078125  1.0546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1711973 s         70 s     144310 s    1213969 s        128 s
#2  3501 MHz    1016478 s         84 s     129112 s    2163288 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1576362563357065 0.04482639882755343
 0.1576362563357065 0.0 0.03842885459628512
 -0.04482639882755343 -0.03842885459628512 0.0])
dAA = TransformUtils.so3([0.0 0.06760863533310636 0.082350209295286
 -0.06760863533310636 0.0 0.09658897172657181
 -0.082350209295286 -0.09658897172657181 0.0])
dAA = TransformUtils.so3([0.0 0.08429186854341611 -0.0006969936427083981
 -0.08429186854341611 0.0 0.02252953951511348
 0.0006969936427083981 -0.02252953951511348 0.0])
dAA = TransformUtils.Quaternion(0.9923407138736259,[-0.10147010474488127,0.045539799354263194,-0.053757344676043164])
dAA = TransformUtils.SO3([0.9932936500228813 -0.11512835864878236 -0.010638884295795742
 0.11545994437665015 0.9828968400536264 0.1434670800467365
 -0.006060203689880464 -0.14373330458676994 0.989597903738586])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
