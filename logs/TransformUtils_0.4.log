>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (445.875 MB free)
Uptime: 37891.0 sec
Load Avg:  0.98779296875  0.96142578125  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1821821 s       1648 s     153435 s    1417508 s        166 s
#2  3499 MHz    1204832 s       5086 s     131892 s    2291524 s         10 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.009562586546411652 -0.15600763703798315
 0.009562586546411652 0.0 -0.1416999414200728
 0.15600763703798315 0.1416999414200728 0.0])
dAA = TransformUtils.so3([0.0 0.02161428209953608 -0.12034890617139965
 -0.02161428209953608 0.0 -0.13879562789855804
 0.12034890617139965 0.13879562789855804 0.0])
dAA = TransformUtils.so3([0.0 -0.061183774847922937 -0.012655404122121197
 0.061183774847922937 0.0 -0.16908513252204554
 0.012655404122121197 0.16908513252204554 0.0])
dAA = TransformUtils.Quaternion(0.9978933669448364,[-0.014536341774238966,-0.04732050092439268,-0.04193200648174458])
dAA = TransformUtils.SO3([0.9947502268616034 -0.02510060109217177 0.0992065823602481
 0.021401441409604614 0.9990417689417873 0.03817750928564971
 -0.10006979796312315 -0.035853922163081045 0.9943342153426803])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.8861362197160814 -0.1524827161699154 -0.43762040786135403
 0.1876449836835094 0.9815027126725967 0.03797084558907882
 0.42373571976611585 -0.11576461586244385 0.898357720236495]),[0.10223469869011113,-1.555348777932998,-0.3312386274161312])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9664600261262776 -0.2424434406716002 0.08471243105537299
 0.2411824501201895 0.9701584768566965 0.024971094031239534
 -0.08823856103777634 -0.003702412512261032 0.9960924899262978]),[2.8055896412132935,-0.6405303461224814,1.2376760121135337])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.864282080803328 -0.034361386882252765 0.5018324221229611
 0.09956768231139997 0.9896102194705939 -0.10372024951039895
 -0.49305452177361253 0.13960984424778727 0.8587236633211541]),[3.232006993061434,0.3040570674514962,0.26113971568885])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
