>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (378.73046875 MB free)
Uptime: 31592.0 sec
Load Avg:  1.0283203125  1.08154296875  1.0478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1528752 s       7137 s     150382 s    1166271 s        106 s
#2  3500 MHz    1016307 s        460 s     137089 s    1890345 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.13044552593466105 -0.15573689624788678
 -0.13044552593466105 0.0 0.07391292189091495
 0.15573689624788678 -0.07391292189091495 0.0])
dAA = TransformUtils.so3([0.0 0.11517811613895956 -0.015568390499293948
 -0.11517811613895956 0.0 0.00936126979045509
 0.015568390499293948 -0.00936126979045509 0.0])
dAA = TransformUtils.so3([0.0 -0.018229984863013797 -0.04866359774989515
 0.018229984863013797 0.0 -0.1250569833909808
 0.04866359774989515 0.1250569833909808 0.0])
dAA = TransformUtils.Quaternion(0.9967997149553518,[0.05048776340235072,0.05300167861849942,-0.03212687465625841])
dAA = TransformUtils.SO3([0.9844235234632958 0.1447887574179558 -0.09973235271201977
 -0.14779625001914073 0.988740530949548 -0.02341860238967655
 0.09521866903286358 0.037793890815454145 0.9947386726596287])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
