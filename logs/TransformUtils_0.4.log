>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (346.83984375 MB free)
Uptime: 31913.0 sec
Load Avg:  0.935546875  0.966796875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1500479 s       2337 s     133520 s    1227938 s        142 s
#2  3498 MHz    1009106 s       4394 s     120708 s    1931008 s          7 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.015160908544148461 -0.0045465960060846996
 0.015160908544148461 0.0 0.0853214317207252
 0.0045465960060846996 -0.0853214317207252 0.0])
dAA = TransformUtils.so3([0.0 -0.06535283784218088 0.10975699426778002
 0.06535283784218088 0.0 0.1739609797603752
 -0.10975699426778002 -0.1739609797603752 0.0])
dAA = TransformUtils.so3([0.0 -0.11478189203466699 0.0022944297794154998
 0.11478189203466699 0.0 -0.011114358783252907
 -0.0022944297794154998 0.011114358783252907 0.0])
dAA = TransformUtils.Quaternion(0.9964871275801023,[-0.00418480371733068,-0.018618937579415566,0.08154279335672897])
dAA = TransformUtils.SO3([0.9974672807432825 -0.07082527700690466 0.006542475334069178
 0.06879484244881628 0.9840344894317599 0.16414442805413276
 -0.018063595961054533 -0.16327860774048464 0.9864146201041855])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
