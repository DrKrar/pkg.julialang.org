>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (448.7421875 MB free)
Uptime: 40748.0 sec
Load Avg:  1.4931640625  1.12744140625  1.0478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1968393 s       3462 s     163423 s    1517156 s        189 s
#2  3504 MHz    1255934 s       3383 s     143847 s    2495800 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.03380944089598679 0.09130412026066993
 0.03380944089598679 0.0 -0.08779794074492084
 -0.09130412026066993 0.08779794074492084 0.0])
dAA = TransformUtils.so3([0.0 0.2471405442036519 0.12120011744440229
 -0.2471405442036519 0.0 0.07208945876984767
 -0.12120011744440229 -0.07208945876984767 0.0])
dAA = TransformUtils.so3([0.0 0.10697906609263522 -0.030389827570055462
 -0.10697906609263522 0.0 -0.10620263490801037
 0.030389827570055462 0.10620263490801037 0.0])
dAA = TransformUtils.Quaternion(0.9990318005957776,[-0.04134844893624271,-0.0017003056388257905,-0.014929036461206193])
dAA = TransformUtils.SO3([0.9979844269926504 -0.02228439226088289 0.05941792104840678
 0.01624545306608433 0.9948299420408165 0.10024705319232119
 -0.06134467160910757 -0.0990797268901642 0.993186809711316])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9881257901699257 0.13236128475050846 0.07802507994391798
 -0.09675929666800984 0.9305383270174223 -0.35317992646798174
 -0.11935267617180621 0.34143654205549195 0.9322961044860245]),[0.2242842487974476,0.9141696464882332,-1.1155115292985174])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9378188543237393 0.21828430095468188 0.2699032427215998
 -0.31385433966283205 0.8653798636064306 0.3906573244409008
 -0.14829447039494298 -0.4510761084575877 0.8800790273771111]),[-0.17242015454801762,0.16437579040901953,0.8096797428462358])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9747506635299947 0.18579594111089542 0.12385883987245946
 -0.21855573491306926 0.6801476543545144 0.6997374929304988
 0.045766086619275864 -0.7091396453046246 0.7035811458337897]),[-0.5492210563324873,-0.09288957418036509,2.028707569582114])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
