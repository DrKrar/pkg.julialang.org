>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (438.0625 MB free)
Uptime: 36661.0 sec
Load Avg:  1.1220703125  1.1142578125  1.037109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1815158 s       6189 s     134260 s    1291550 s         96 s
#2  3499 MHz    1157442 s        745 s     113649 s    2260212 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.2
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.14.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.14055389404482485 0.005319805474714498
 0.14055389404482485 0.0 0.13698949338124755
 -0.005319805474714498 -0.13698949338124755 0.0])
dAA = TransformUtils.so3([0.0 -0.09090371039767552 -0.0006046676963038127
 0.09090371039767552 0.0 -0.06455731957263425
 0.0006046676963038127 0.06455731957263425 0.0])
dAA = TransformUtils.so3([0.0 0.047953876989118786 -0.01252887361326274
 -0.047953876989118786 0.0 0.11188619261711433
 0.01252887361326274 -0.11188619261711433 0.0])
dAA = TransformUtils.Quaternion(0.9985670091152039,[0.007097583952902008,0.046750934315256024,-0.025057987736414888])
dAA = TransformUtils.SO3([0.9866288573769227 0.13911733778016847 0.08491091873291215
 -0.12740142417804237 0.9832217929216521 -0.13055184043642915
 -0.10164829023901592 0.11798844118340936 0.9877987410594299])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9075813705928754 -0.29398900453586213 0.2997774523955574
 0.22002539876760904 0.9410893790145584 0.2567870802886071
 -0.35760995462921963 -0.16709651677400625 0.9188002364127263]),[0.41491070603710584,0.0035049198740581887,0.34224555289188496])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8891123709028337 -0.07777547557191052 -0.4510323351014927
 0.032898467518161646 0.9937670378764217 -0.10651180810257163
 0.4565050741694976 0.07986269360524806 0.8861292611282034]),[0.7509277719650468,-0.4399355222993612,-0.6773613546040828])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.650929563767839 0.11950672183605812 -0.7496724927920257
 -0.3067092702584294 0.9447439612793215 -0.11570769708104037
 0.6944207129331273 0.30524906398260276 0.6516155940331632]),[0.5720162490478575,-0.34572965035284847,-0.9499545040976369])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
