>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (332.12890625 MB free)
Uptime: 29182.0 sec
Load Avg:  0.86328125  0.919921875  0.95947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1341187 s       2428 s     125260 s    1118230 s        174 s
#2  3499 MHz     831217 s       4702 s     108116 s    1842757 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08127519566469313 0.16334685256537126
 0.08127519566469313 0.0 0.013534512802383013
 -0.16334685256537126 -0.013534512802383013 0.0])
dAA = TransformUtils.so3([0.0 -0.026805966652842125 0.022220900548425345
 0.026805966652842125 0.0 -0.1668787932427436
 -0.022220900548425345 0.1668787932427436 0.0])
dAA = TransformUtils.so3([0.0 -0.11591257305955134 0.1718897429151104
 0.11591257305955134 0.0 0.20481034494743877
 -0.1718897429151104 -0.20481034494743877 0.0])
dAA = TransformUtils.Quaternion(0.9958064973742861,[-0.0278065934343608,0.03702107941740733,-0.078902806208032])
dAA = TransformUtils.SO3([0.9821127422558078 0.1844966582918031 0.037623723605389445
 -0.18259334434319116 0.981968047663931 -0.04897370691153149
 -0.045980779683971365 0.04122786007356447 0.9980911939564485])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
