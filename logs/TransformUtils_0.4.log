>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.5546875 MB free)
Uptime: 42309.0 sec
Load Avg:  1.17822265625  1.07373046875  1.02197265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2048106 s       7210 s     168214 s    1553341 s        308 s
#2  3500 MHz    1354183 s         10 s     149467 s    2484622 s         14 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.18.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.12120876167574142 -0.028792854151535943
 0.12120876167574142 0.0 0.09041410827441355
 0.028792854151535943 -0.09041410827441355 0.0])
dAA = TransformUtils.so3([0.0 0.03600469969578258 -0.08886162380485424
 -0.03600469969578258 0.0 -0.0015062103596587286
 0.08886162380485424 0.0015062103596587286 0.0])
dAA = TransformUtils.so3([0.0 0.04389176904749371 -0.040642476949038484
 -0.04389176904749371 0.0 -0.03000560156820671
 0.040642476949038484 0.03000560156820671 0.0])
dAA = TransformUtils.Quaternion(0.9989853696555914,[-0.012045609950564043,-0.026087332972130436,0.03467831531954298])
dAA = TransformUtils.SO3([0.9991899999173788 -0.002805786132103654 -0.04014313925554057
 0.0026899754644884046 0.9999920641053561 -0.0029386660766525644
 0.04015106595234151 0.002828301697222734 0.9991896179466642])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.984931420261877 0.158677491425398 -0.06878627112923517
 -0.15812438289737193 0.9873276286335547 0.0134474261539796
 0.07004838980481429 -0.0023680058665842218 0.9975407839451822]),[0.041381145050479635,-0.5821758142253566,-2.2095544130019493])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9850482190743404 0.058046088652945194 0.1622056031417065
 -0.08993852864380332 0.9763087801897758 0.19680504767342685
 -0.1469389912986275 -0.20845099499989553 0.9669318049995539]),[2.1232053811047047,0.05422674389093873,-0.39489151261189953])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9741335760398091 -0.1118084634001562 0.19637373435362832
 0.06785413852051993 0.9736408536724506 0.2177597390373621
 -0.2155448721671001 -0.19880230273333824 0.9560429135297173]),[2.0769375539868937,0.9543793435329735,1.6755573023111623])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
