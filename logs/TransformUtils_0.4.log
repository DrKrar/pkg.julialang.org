>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (446.44140625 MB free)
Uptime: 35004.0 sec
Load Avg:  0.96923828125  0.984375  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1675203 s       3328 s     130493 s    1318325 s         80 s
#2  3500 MHz    1112950 s       2886 s     110853 s    2133623 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.2
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.15.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1034315155038229 -0.008404807675535456
 0.1034315155038229 0.0 0.005194507456153229
 0.008404807675535456 -0.005194507456153229 0.0])
dAA = TransformUtils.so3([0.0 0.0703125785050063 0.15161155602527052
 -0.0703125785050063 0.0 -0.10559718697061489
 -0.15161155602527052 0.10559718697061489 0.0])
dAA = TransformUtils.so3([0.0 -0.12912190812938049 -0.0261534132561999
 0.12912190812938049 0.0 0.019020252213935024
 0.0261534132561999 -0.019020252213935024 0.0])
dAA = TransformUtils.Quaternion(0.997469068579944,[-0.0351674630171369,0.06171999129319698,0.003057686374556531])
dAA = TransformUtils.SO3([0.9780759791917185 -0.03257030974313612 0.20568557035289944
 0.02531198433310343 0.9989638486486087 0.037822381499331544
 -0.20670433565187282 -0.03178685288600339 0.977886963614058])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.960801104677706 -0.11127798938636954 -0.2539260646885762
 0.06705455658703768 0.9819926398886557 -0.1766186333471774
 0.2690072930071148 0.1526684783530508 0.9509613094265972]),[-0.4763056581151631,-2.159493412643418,0.39930058617647435])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9373047438374156 0.23387696070596606 -0.25838224480566935
 -0.32482732573509193 0.8548967129480839 -0.4045229519401215
 0.1262815332329527 0.46309089544224613 0.8772683722344224]),[1.2368306426218494,0.97578304981114,0.024945500467769985])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9127529344159078 0.4066087904185659 -0.03938746335447699
 -0.4040002209203439 0.8841763043751879 -0.23455507727983307
 -0.06054669447181152 0.23000337896601833 0.9713045575167201]),[1.755513574949322,2.8310318257568263,-1.3447554055816475])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
