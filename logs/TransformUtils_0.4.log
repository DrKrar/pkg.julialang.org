>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (526.140625 MB free)
Uptime: 39514.0 sec
Load Avg:  0.90625  0.8994140625  0.93115234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1900890 s        802 s     150716 s    1490411 s        151 s
#2  3499 MHz    1302227 s       5900 s     131869 s    2355786 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.02221487547845232 0.11736253380414821
 -0.02221487547845232 0.0 0.03091262511906917
 -0.11736253380414821 -0.03091262511906917 0.0])
dAA = TransformUtils.so3([0.0 0.007589696001809209 -0.15581583400538404
 -0.007589696001809209 0.0 0.0005638416164914013
 0.15581583400538404 -0.0005638416164914013 0.0])
dAA = TransformUtils.so3([0.0 0.2072951976463684 0.0017903725068648818
 -0.2072951976463684 0.0 0.12064669218381836
 -0.0017903725068648818 -0.12064669218381836 0.0])
dAA = TransformUtils.Quaternion(0.9969220169372891,[0.02625060191167926,0.020848632053491422,0.07087123948725783])
dAA = TransformUtils.SO3([0.9839636837812117 0.06278904172184611 0.16695210462692772
 -0.07920897004307849 0.9924558948094254 0.09358010431035992
 -0.15981679531395643 -0.10530352841987499 0.98151401357184])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9363649186724302 -0.07953128225816171 -0.341899859932621
 0.25530252056490155 0.8227689719545482 0.5078108326749873
 0.24091774960094006 -0.5627841450602784 0.7907165383346868]),[-0.20204802035040223,0.562254681917624,-1.4268552992789691])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9466103663240015 0.30534058929967123 -0.10342117236847169
 -0.30861448787981216 0.9510371245062728 -0.016896321538177467
 0.09319824160691507 0.04791150526720794 0.994494130412246]),[0.632157244511194,-0.00019433127213353918,1.232088565274119])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8300357926735933 0.5402551231331953 0.138437656759479
 -0.38165405387963736 0.7312358730978135 -0.5653620796021939
 -0.4066703407404557 0.4164354689783452 0.8131425054311375]),[1.2781126663950115,-2.0255224603157216,1.531638523269322])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
