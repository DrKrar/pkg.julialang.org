>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (438.1015625 MB free)
Uptime: 38213.0 sec
Load Avg:  1.04638671875  1.0654296875  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1900416 s       3187 s     153843 s    1368387 s        149 s
#2  3499 MHz    1181522 s       4296 s     133765 s    2331956 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.2022081163187037 0.003749547298619445
 0.2022081163187037 0.0 -0.03889550378114879
 -0.003749547298619445 0.03889550378114879 0.0])
dAA = TransformUtils.so3([0.0 0.051198367386894775 0.1129852622229378
 -0.051198367386894775 0.0 0.38044085944010986
 -0.1129852622229378 -0.38044085944010986 0.0])
dAA = TransformUtils.so3([0.0 0.07840157300409385 -0.015303742274130134
 -0.07840157300409385 0.0 -0.05893874450106521
 0.015303742274130134 0.05893874450106521 0.0])
dAA = TransformUtils.Quaternion(0.994633494477939,[0.02646622976698359,-0.06090439648518841,0.07933728526550285])
dAA = TransformUtils.SO3([0.9908977680624397 0.12852922592190566 0.040023134969562106
 -0.12230519903702684 0.9837782523978541 -0.13123181168275297
 -0.05624101294775278 0.1251422718066922 0.9905434671278545])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9792696746776282 -0.15406168988831068 -0.13151387746367457
 0.18457658126242454 0.9461241612713138 0.2660461559732233
 0.0834409366333336 -0.28480531449994234 0.9549468796358994]),[1.5182938503156238,-0.28577952445934074,0.527922118694783])
xj = TransformUtils.SE3(TransformUtils.SO3([0.968215228560678 -0.03868670885182391 0.24710849791419212
 0.06773166314158877 0.9916054114808535 -0.11014140788078597
 -0.24077311517540412 0.12337765794543809 0.9627077752509481]),[0.223568529323993,-1.0705647037420267,-1.606614365848267])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9405551564700718 0.15543716335937638 0.3019855723115744
 -0.016508848515646324 0.9090033653179307 -0.41646169062875893
 -0.33923952534786694 0.3867197565259204 0.8575338910820298]),[-1.5908459328500744,0.06489068615805194,-2.076883688382273])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
