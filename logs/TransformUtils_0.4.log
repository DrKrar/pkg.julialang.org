>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (345.3515625 MB free)
Uptime: 30506.0 sec
Load Avg:  1.1826171875  1.0673828125  1.056640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1487406 s       3659 s     135346 s    1096025 s        157 s
#2  3500 MHz     883713 s       4658 s     117220 s    1921367 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.07722821604712045 -0.008233614016523583
 -0.07722821604712045 0.0 0.05827524020530067
 0.008233614016523583 -0.05827524020530067 0.0])
dAA = TransformUtils.so3([0.0 -0.13582752595064848 0.019019264582611398
 0.13582752595064848 0.0 0.1296746359306839
 -0.019019264582611398 -0.1296746359306839 0.0])
dAA = TransformUtils.so3([0.0 -0.09398772094361985 0.019754766305286577
 0.09398772094361985 0.0 0.060280621853121066
 -0.019754766305286577 -0.060280621853121066 0.0])
dAA = TransformUtils.Quaternion(0.9993043246436308,[0.008123051606495617,-0.01564850883901116,-0.03286345922526369])
dAA = TransformUtils.SO3([0.9780900008235444 0.15725901764932712 0.13641683054875547
 -0.16050065227514546 0.9869497419640291 0.013028716605617961
 -0.1325876725350139 -0.03463824771990184 0.9905658488392596])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
