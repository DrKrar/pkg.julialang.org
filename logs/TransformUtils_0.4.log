>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (343.8671875 MB free)
Uptime: 27666.0 sec
Load Avg:  0.87255859375  1.00390625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1250670 s       4273 s     130879 s    1015741 s         91 s
#2  3500 MHz     766301 s       1460 s     111960 s    1745697 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.1
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.08116767236429183 0.15565601708755553
 -0.08116767236429183 0.0 -0.03282370762973548
 -0.15565601708755553 0.03282370762973548 0.0])
dAA = TransformUtils.so3([0.0 -0.25507019853619445 -0.028492684473622954
 0.25507019853619445 0.0 0.09951971086807959
 0.028492684473622954 -0.09951971086807959 0.0])
dAA = TransformUtils.so3([0.0 0.046411725391137554 -0.11049354239787962
 -0.046411725391137554 0.0 -0.02245176856720571
 0.11049354239787962 0.02245176856720571 0.0])
dAA = TransformUtils.Quaternion(0.9980372527986243,[-0.042335843070629084,-0.004580121459040775,0.04591667349770103])
dAA = TransformUtils.SO3([0.9800139606821607 -0.16700817671268214 -0.10807823915650176
 0.1514794852232737 0.9786752392200564 -0.13873983456115804
 0.12894418336844998 0.11959533874140346 0.9844137100461232])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
