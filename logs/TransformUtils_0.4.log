>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (326.10546875 MB free)
Uptime: 30172.0 sec
Load Avg:  1.166015625  1.07177734375  1.11181640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1663653 s       4596 s     149354 s     992646 s         76 s
#2  3499 MHz     759572 s       2068 s     127986 s    1972215 s         12 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.03756019485040675 0.16181307830642466
 0.03756019485040675 0.0 -0.0271276396883206
 -0.16181307830642466 0.0271276396883206 0.0])
dAA = TransformUtils.so3([0.0 -0.13336293956777423 -0.1960635433552636
 0.13336293956777423 0.0 -0.14815477648155176
 0.1960635433552636 0.14815477648155176 0.0])
dAA = TransformUtils.so3([0.0 0.09921195868187765 0.01642455092344398
 -0.09921195868187765 0.0 0.05881040970367216
 -0.01642455092344398 -0.05881040970367216 0.0])
dAA = TransformUtils.Quaternion(0.9951309411785719,[0.07563457312046008,0.02965143868379262,0.055808721916173754])
dAA = TransformUtils.SO3([0.9940880629340774 -0.08775430440348844 0.06393829205283558
 0.0927905212999065 0.9924186529369781 -0.080592409441867
 -0.056381222839393993 0.0860488196398639 0.9946943039696772])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
