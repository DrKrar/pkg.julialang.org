>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (331.55078125 MB free)
Uptime: 28509.0 sec
Load Avg:  1.14892578125  1.10205078125  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1399004 s       8110 s     123313 s    1026551 s         99 s
#2  3499 MHz     865439 s          0 s     107009 s    1767178 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.15022729891682896 0.13129678990959565
 0.15022729891682896 0.0 -0.10550902704221841
 -0.13129678990959565 0.10550902704221841 0.0])
dAA = TransformUtils.so3([0.0 0.2520411855398771 0.01246711248715567
 -0.2520411855398771 0.0 0.049388046723663336
 -0.01246711248715567 -0.049388046723663336 0.0])
dAA = TransformUtils.so3([0.0 0.06927895569968867 -0.09858941674097776
 -0.06927895569968867 0.0 0.2025669294998962
 0.09858941674097776 -0.2025669294998962 0.0])
dAA = TransformUtils.Quaternion(0.9942807180143296,[-0.0198692167967015,0.08988054186188266,0.05415308119959065])
dAA = TransformUtils.SO3([0.9791729698380343 0.15538621145416506 0.1306729521687096
 -0.16585480624983515 0.9834147441806695 0.07340043713697039
 -0.11710029198253098 -0.09354446118285253 0.9887046856365231])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
