>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (338.5078125 MB free)
Uptime: 30309.0 sec
Load Avg:  1.10205078125  1.0263671875  1.04248046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    1304376 s        111 s     134030 s    1182841 s        177 s
#2  3502 MHz     854202 s         36 s     110481 s    1879444 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0625381342811148 0.060196755759840515
 -0.0625381342811148 0.0 0.1479817387496237
 -0.060196755759840515 -0.1479817387496237 0.0])
dAA = TransformUtils.so3([0.0 -0.023878030950076654 -0.18620182252259035
 0.023878030950076654 0.0 0.05468276369626034
 0.18620182252259035 -0.05468276369626034 0.0])
dAA = TransformUtils.so3([0.0 0.101293557157286 0.04789381951270556
 -0.101293557157286 0.0 0.00014148144141658115
 -0.04789381951270556 -0.00014148144141658115 0.0])
dAA = TransformUtils.Quaternion(0.9968936694961206,[0.04321462226510359,0.04931167216958641,0.04363332589756634])
dAA = TransformUtils.SO3([0.9987033375018595 -0.040854197055043985 0.030373973161815875
 0.04451766074439773 0.9902777512246876 -0.13178828973479617
 -0.024694565080069442 0.13296958303448014 0.9908124284864128])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
