>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (449.4921875 MB free)
Uptime: 39952.0 sec
Load Avg:  1.02978515625  0.9755859375  1.015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1845653 s       3739 s     145906 s    1582197 s        180 s
#2  3501 MHz    1261788 s       3227 s     128043 s    2408383 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.1859839432084455 0.0858815550880857
 -0.1859839432084455 0.0 -0.03563477389878444
 -0.0858815550880857 0.03563477389878444 0.0])
dAA = TransformUtils.so3([0.0 0.10392218867041676 -0.09052515325387323
 -0.10392218867041676 0.0 0.017120111712021154
 0.09052515325387323 -0.017120111712021154 0.0])
dAA = TransformUtils.so3([0.0 0.11065148832436252 0.08699897700741403
 -0.11065148832436252 0.0 0.057932899924284624
 -0.08699897700741403 -0.057932899924284624 0.0])
dAA = TransformUtils.Quaternion(0.9987288783228354,[0.034141916868877284,-0.008312498825584519,0.03613667776379714])
dAA = TransformUtils.SO3([0.9889165997311953 -0.008700623715355743 -0.14821692859810257
 0.024628406827044882 0.9940643468502077 0.10596941020139529
 0.1464151643555162 -0.10844525562805317 0.9832610163016295])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9846418011015616 -0.08086285584951208 0.15473112830757
 -0.019938430392703 0.8283893501173477 0.5597977702756894
 -0.1734444652243132 -0.5542853806082381 0.8140545032901867]),[-1.060943265558675,0.25583149143490486,0.7122423744382612])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9716271671343603 -0.23651775108903972 3.881032150916854e-5
 0.2351803089843048 0.9661154340256238 -0.10635408033323156
 0.025117132648949495 0.10334564121076227 0.994328320068493]),[0.6573949409439666,0.021819221669525952,0.4844634435715723])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9476591699857013 -0.27007281923050325 -0.1703019960390933
 0.10233025633433927 0.7621622592702801 -0.6392473771417221
 0.3024410953897634 0.5883615919287312 0.7499066748352953]),[1.7361204587576822,-0.20654847537357968,-0.050543601752304435])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
