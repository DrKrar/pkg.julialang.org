>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (343.80859375 MB free)
Uptime: 26655.0 sec
Load Avg:  0.9150390625  1.0400390625  1.0439453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1213562 s       2766 s     126954 s     984377 s        106 s
#2  3500 MHz     771178 s       3760 s     106448 s    1644588 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.03626214495626788 -0.012175306178791843
 -0.03626214495626788 0.0 0.08762916129379311
 0.012175306178791843 -0.08762916129379311 0.0])
dAA = TransformUtils.so3([0.0 -0.07393988182115993 0.00727925949606128
 0.07393988182115993 0.0 0.08795229719162362
 -0.00727925949606128 -0.08795229719162362 0.0])
dAA = TransformUtils.so3([0.0 0.005468024842306723 -0.06695885360859975
 -0.005468024842306723 0.0 -0.0821840454331631
 0.06695885360859975 0.0821840454331631 0.0])
dAA = TransformUtils.Quaternion(0.9984353409522904,[0.03490503240294733,0.002126280064908053,0.04363470618118918])
dAA = TransformUtils.SO3([0.9987884164812992 -0.012648132927556292 -0.04755758442378591
 0.010705644761791845 0.9991067029307037 -0.040880133673615905
 0.048032158737797495 0.04032146937284469 0.9980316081340319])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
