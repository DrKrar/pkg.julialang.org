>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (440.84375 MB free)
Uptime: 40020.0 sec
Load Avg:  1.03857421875  0.9755859375  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1944492 s       6847 s     147563 s    1475341 s        162 s
#2  3500 MHz    1254928 s         43 s     125124 s    2450930 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.03386343586589289 0.018958116929079862
 0.03386343586589289 0.0 0.09740959799751313
 -0.018958116929079862 -0.09740959799751313 0.0])
dAA = TransformUtils.so3([0.0 -0.09150973509477772 0.11156957664380117
 0.09150973509477772 0.0 -0.02754909637768571
 -0.11156957664380117 0.02754909637768571 0.0])
dAA = TransformUtils.so3([0.0 -0.14901671769654118 0.008956130312242221
 0.14901671769654118 0.0 -0.06210415536647548
 -0.008956130312242221 0.06210415536647548 0.0])
dAA = TransformUtils.Quaternion(0.9955806021493275,[0.044162591189962706,0.07393968468174324,0.037441330004889035])
dAA = TransformUtils.SO3([0.9993408372862649 -0.010990586804110362 0.0345991030763562
 0.013371136408420962 0.9975033235910944 -0.06934213824124434
 -0.03375060952241315 0.06975905981606802 0.9969927632287225])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.941204843002816 -0.0314983037395499 -0.33636483224257496
 0.04113527739562056 0.9989209209892369 0.021561135489581253
 0.3353227288175227 -0.03412990582386345 0.941484900073721]),[-0.21193899731247914,-0.047083608252048596,0.32985704875702015])
xj = TransformUtils.SE3(TransformUtils.SO3([0.8579734557294002 0.4507751439887446 0.2463398441699547
 -0.3725622629747621 0.8761938333873435 -0.30574781526793676
 -0.3536649678309617 0.17054657984233734 0.9196928588573503]),[1.128728577312241,-0.5535804461447394,0.39038175930601143])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.673611417565527 0.5175023695594466 0.5276731522692043
 -0.3871143953203492 0.8552289599001773 -0.3445662071123942
 -0.6295951898332146 0.0278338579506813 0.776424608890303]),[1.2613032372690838,-0.5502447449362518,-0.40489096971534466])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
