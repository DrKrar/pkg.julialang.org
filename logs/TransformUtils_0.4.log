>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1091.203125 MB free)
Uptime: 30744.0 sec
Load Avg:  0.9931640625  1.02685546875  1.04296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1501047 s        126 s     135825 s    1124667 s        125 s
#2  3499 MHz     943747 s       6142 s     119744 s    1893178 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.1849591423512913 -0.016048674689856764
 0.1849591423512913 0.0 -0.013014114895517851
 0.016048674689856764 0.013014114895517851 0.0])
dAA = TransformUtils.so3([0.0 -0.12353529350992705 0.006875573409729946
 0.12353529350992705 0.0 -0.05432234278190434
 -0.006875573409729946 0.05432234278190434 0.0])
dAA = TransformUtils.so3([0.0 -0.012402502178231148 0.08279186220251127
 0.012402502178231148 0.0 -0.13499783951396102
 -0.08279186220251127 0.13499783951396102 0.0])
dAA = TransformUtils.Quaternion(0.9970865932220595,[0.009318536882411209,0.07381557910664503,-0.016815194567687902])
dAA = TransformUtils.SO3([0.9971843558043747 -0.05048344195878261 -0.055450722511148395
 0.053166127568155266 0.9974304505003937 0.04801936373993622
 0.05288405637260432 -0.05083225848391834 0.9973060503571627])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
