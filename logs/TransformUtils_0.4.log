>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (330.05078125 MB free)
Uptime: 27283.0 sec
Load Avg:  0.96142578125  0.99853515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1250656 s       3942 s     131174 s    1008308 s         83 s
#2  3499 MHz     797498 s       3768 s     116044 s    1659773 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.033062924697510675 0.017377648455837974
 -0.033062924697510675 0.0 -0.08086179547847724
 -0.017377648455837974 0.08086179547847724 0.0])
dAA = TransformUtils.so3([0.0 -0.027689924017012923 -0.0676500781647797
 0.027689924017012923 0.0 -0.23245229280299506
 0.0676500781647797 0.23245229280299506 0.0])
dAA = TransformUtils.so3([0.0 0.1877434263791513 0.194731120720531
 -0.1877434263791513 0.0 -0.03267279899792894
 -0.194731120720531 0.03267279899792894 0.0])
dAA = TransformUtils.Quaternion(0.9966277700176889,[0.005871330947834478,-0.08068466953394988,0.013733157126715889])
dAA = TransformUtils.SO3([0.9840308676389037 -0.021410427262067943 0.17670553227978583
 -0.0008957394942480726 0.9921312219952253 0.12519918527298715
 -0.17799564372361806 -0.1233581450359765 0.9762685690263199])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
