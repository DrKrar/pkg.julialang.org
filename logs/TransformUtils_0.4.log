>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (340.0390625 MB free)
Uptime: 26971.0 sec
Load Avg:  1.0380859375  0.9580078125  0.9873046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1309346 s       1965 s     126532 s     972178 s         54 s
#2  3500 MHz     783033 s       5682 s     107126 s    1706726 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.013833374446648223 -0.11906703651783318
 0.013833374446648223 0.0 -0.011065565956731254
 0.11906703651783318 0.011065565956731254 0.0])
dAA = TransformUtils.so3([0.0 -0.053384793629667505 0.0652964512552811
 0.053384793629667505 0.0 -0.07916434800802276
 -0.0652964512552811 0.07916434800802276 0.0])
dAA = TransformUtils.so3([0.0 -0.24952650004589372 0.04316627985867422
 0.24952650004589372 0.0 -0.20487996923578994
 -0.04316627985867422 0.20487996923578994 0.0])
dAA = TransformUtils.Quaternion(0.9991840416937797,[0.038295443663767845,0.011003056079511183,-0.006606252794850707])
dAA = TransformUtils.SO3([0.9912894805556888 0.018279580144299264 -0.13042631133855342
 -0.006093653802880129 0.9956263731176896 0.09322549295040446
 0.13155999818700126 -0.09161867769327063 0.9870653396684402])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
