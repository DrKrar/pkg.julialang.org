>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (321.7734375 MB free)
Uptime: 28615.0 sec
Load Avg:  1.080078125  1.07958984375  1.06640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    1268085 s       1812 s     127296 s    1122414 s         77 s
#2  3502 MHz     799983 s       5244 s     104416 s    1814974 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.09598943912351288 0.09075807278222642
 -0.09598943912351288 0.0 0.1867099836302739
 -0.09075807278222642 -0.1867099836302739 0.0])
dAA = TransformUtils.so3([0.0 -0.09241298774102741 -0.024365454687089408
 0.09241298774102741 0.0 0.2030789087652256
 0.024365454687089408 -0.2030789087652256 0.0])
dAA = TransformUtils.so3([0.0 0.04095492028269132 0.00068282751726748
 -0.04095492028269132 0.0 0.027193969739245
 -0.00068282751726748 -0.027193969739245 0.0])
dAA = TransformUtils.Quaternion(0.9939613972930871,[-0.05400677095674566,0.09337778128564149,-0.020114654960266626])
dAA = TransformUtils.SO3([0.9984609849282807 -0.05468866332930196 0.009209325670310953
 0.05535667110612122 0.9928535405807876 -0.10572362990478185
 -0.003361627596315429 0.10607071725716208 0.9943529063669775])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
