>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (333.28515625 MB free)
Uptime: 27643.0 sec
Load Avg:  0.98828125  1.0166015625  1.04052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1253793 s       3107 s     135192 s    1035763 s         68 s
#2  3499 MHz     750446 s       4268 s     116233 s    1769856 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.08969956272969327 -0.09377159359891804
 -0.08969956272969327 0.0 -0.012983342511113077
 0.09377159359891804 0.012983342511113077 0.0])
dAA = TransformUtils.so3([0.0 -0.03240570806943916 -0.0598297992969643
 0.03240570806943916 0.0 0.0009159225864838167
 0.0598297992969643 -0.0009159225864838167 0.0])
dAA = TransformUtils.so3([0.0 -0.028078125172162627 0.16038116623197707
 0.028078125172162627 0.0 0.05978436633284132
 -0.16038116623197707 -0.05978436633284132 0.0])
dAA = TransformUtils.Quaternion(0.9979024910901914,[0.057734742232598855,-0.02450394004990049,0.016027312231217984])
dAA = TransformUtils.SO3([0.9935173344396132 0.07302729846744999 -0.08712244169300831
 -0.07628452936375879 0.996483560022419 -0.03465811859862119
 0.08428509208487275 0.04107953606836676 0.9955945434606662])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
