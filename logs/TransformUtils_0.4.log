>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (386.32421875 MB free)
Uptime: 27603.0 sec
Load Avg:  0.97314453125  0.99072265625  1.01611328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1173436 s        130 s     129826 s    1128947 s         84 s
#2  3500 MHz     783648 s       5678 s     112466 s    1719139 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.031302452244409244 0.05016699474449188
 -0.031302452244409244 0.0 0.11177546089434057
 -0.05016699474449188 -0.11177546089434057 0.0])
dAA = TransformUtils.so3([0.0 -0.08797391883526261 0.10868737374271692
 0.08797391883526261 0.0 -0.14258639963334718
 -0.10868737374271692 0.14258639963334718 0.0])
dAA = TransformUtils.so3([0.0 0.0714145638887687 -0.012762287963497716
 -0.0714145638887687 0.0 -0.015956732070071665
 0.012762287963497716 0.015956732070071665 0.0])
dAA = TransformUtils.Quaternion(0.9961552971036145,[-0.019867692545312295,0.0030365307022880124,0.0852682726846773])
dAA = TransformUtils.SO3([0.97761189671925 0.0296114636019344 -0.20832220384860997
 0.008645095882447985 0.9835598542110209 0.18037537387786245
 0.21023853526452704 -0.17813807680489507 0.9612838206700867])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
