>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (342.9140625 MB free)
Uptime: 33110.0 sec
Load Avg:  0.91455078125  0.982421875  1.033203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1608451 s       6092 s     143105 s    1201463 s        134 s
#2  3500 MHz    1040896 s       1053 s     128328 s    1987214 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.08384235941363277 0.030592159402438104
 0.08384235941363277 0.0 0.017901375326375726
 -0.030592159402438104 -0.017901375326375726 0.0])
dAA = TransformUtils.so3([0.0 0.12442612347027904 0.09534332775858079
 -0.12442612347027904 0.0 0.10165299845072812
 -0.09534332775858079 -0.10165299845072812 0.0])
dAA = TransformUtils.so3([0.0 0.09975895108373845 -0.12730586212294734
 -0.09975895108373845 0.0 0.11217947625011036
 0.12730586212294734 -0.11217947625011036 0.0])
dAA = TransformUtils.Quaternion(0.9960850953582459,[-0.04899553442930984,0.07207918460418104,0.014782136446980548])
dAA = TransformUtils.SO3([0.9991800617027176 -0.019837870528669182 -0.03529395399557015
 0.023285051443177916 0.9947042511841138 0.10010623884424058
 0.03312115147518609 -0.10084597943963527 0.9943505809098814])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
