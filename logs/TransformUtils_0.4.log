>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (325.7890625 MB free)
Uptime: 29763.0 sec
Load Avg:  0.8876953125  0.9453125  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1314164 s       5190 s     145505 s    1112892 s        199 s
#2  3501 MHz     843233 s       1865 s     124528 s    1797078 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.09404762716224514 -0.17347392890548702
 -0.09404762716224514 0.0 0.0025333848510245083
 0.17347392890548702 -0.0025333848510245083 0.0])
dAA = TransformUtils.so3([0.0 0.040606439057185445 0.039300654941960375
 -0.040606439057185445 0.0 0.022214911757341724
 -0.039300654941960375 -0.022214911757341724 0.0])
dAA = TransformUtils.so3([0.0 -0.13295122852752547 -0.008794345819665967
 0.13295122852752547 0.0 -0.17466870971698423
 0.008794345819665967 0.17466870971698423 0.0])
dAA = TransformUtils.Quaternion(0.988017620530055,[0.12473599246444109,0.021217182936535663,0.08838520721408556])
dAA = TransformUtils.SO3([0.9705353845466361 -0.06271483501601718 0.23265407112669914
 0.05261899966823124 0.9973942309451841 0.049355738786686025
 -0.23514316536278088 -0.03565946643149121 0.9713063853578815])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
