>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (544.43359375 MB free)
Uptime: 39126.0 sec
Load Avg:  1.0361328125  1.01171875  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1961351 s         62 s     147932 s    1376562 s        185 s
#2  3499 MHz    1174789 s         96 s     125474 s    2440157 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.13950388587774595 -0.09523895141550952
 -0.13950388587774595 0.0 0.05988505618505749
 0.09523895141550952 -0.05988505618505749 0.0])
dAA = TransformUtils.so3([0.0 -0.0829658176208301 -0.051959463069419246
 0.0829658176208301 0.0 0.030708568491407434
 0.051959463069419246 -0.030708568491407434 0.0])
dAA = TransformUtils.so3([0.0 -0.01450323730350823 -0.11079558045858509
 0.01450323730350823 0.0 -0.09119772673284056
 0.11079558045858509 0.09119772673284056 0.0])
dAA = TransformUtils.Quaternion(0.998499350363682,[0.004573267157769047,0.030430552044344146,-0.04530026548581329])
dAA = TransformUtils.SO3([0.9999031253102344 0.01237009500643787 -0.006381280777224279
 -0.013106294567656608 0.9911090923755923 -0.1324046526868894
 0.004686687266277337 0.13247546097282203 0.9911752050987286])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.973608761789609 -0.19446097116429512 0.11946091268839269
 0.2071770788309026 0.9726270273359532 -0.10523461266484987
 -0.09572688741204614 0.12720690385928826 0.9872460517201045]),[0.27596859329831985,-0.17842806451827506,0.6191218443818997])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9759535754834058 -0.10250874936607886 -0.19237093024820184
 0.08792448057174708 0.9926716841889172 -0.08289881257127388
 0.19945902891908548 0.0639912784130865 0.9778145080073798]),[-0.3947712751215555,1.5838905249488129,-0.024265167883700353])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.9493192972284658 0.09972971732150034 -0.29807189634822173
 -0.07889458841563599 0.9935733926687319 0.08116376839127776
 0.3042507449923152 -0.05353407198896072 0.9510865298740708]),[-0.22633675935449024,1.7626681472902193,-0.9007653985997723])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
