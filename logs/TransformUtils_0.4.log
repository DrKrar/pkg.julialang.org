>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (339.43359375 MB free)
Uptime: 30149.0 sec
Load Avg:  1.03662109375  0.9833984375  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1422888 s       5757 s     131140 s    1125060 s        160 s
#2  3499 MHz     923944 s        418 s     112438 s    1839807 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.024722786150794894 -0.1310500347807768
 0.024722786150794894 0.0 0.05579414554562115
 0.1310500347807768 -0.05579414554562115 0.0])
dAA = TransformUtils.so3([0.0 0.02181284017845208 0.0594553554000113
 -0.02181284017845208 0.0 -0.01196554087581002
 -0.0594553554000113 0.01196554087581002 0.0])
dAA = TransformUtils.so3([0.0 -0.04007506276008776 -0.12841867724735778
 0.04007506276008776 0.0 -0.04120869673646885
 0.12841867724735778 0.04120869673646885 0.0])
dAA = TransformUtils.Quaternion(0.9966237294186515,[0.030976634409547253,0.062376622498033225,-0.0434827212356087])
dAA = TransformUtils.SO3([0.999495069987659 0.007671797471688061 -0.030834211420400996
 -0.005452445307366783 0.9974309257227292 0.07142702046193684
 0.03130296967597101 -0.07122283296424799 0.9969691229692181])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
