>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (348.13671875 MB free)
Uptime: 26181.0 sec
Load Avg:  1.0732421875  0.99951171875  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1205327 s       2288 s     119657 s     964991 s         74 s
#2  3499 MHz     741660 s       5283 s      99098 s    1650300 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.026227645368989517 -0.132641876293181
 -0.026227645368989517 0.0 0.018219180105072865
 0.132641876293181 -0.018219180105072865 0.0])
dAA = TransformUtils.so3([0.0 0.03755573035732113 0.04211552656177314
 -0.03755573035732113 0.0 0.049050895810740375
 -0.04211552656177314 -0.049050895810740375 0.0])
dAA = TransformUtils.so3([0.0 0.04884395046217122 0.12465532379325406
 -0.04884395046217122 0.0 0.07851105416746551
 -0.12465532379325406 -0.07851105416746551 0.0])
dAA = TransformUtils.Quaternion(0.986676779979182,[-0.012103837105498576,-0.106562438676303,0.12233918276903533])
dAA = TransformUtils.SO3([0.9892846204404289 -0.025025280545838687 0.1438390596939466
 0.018889761431361844 0.9988589068593612 0.04386412088242912
 -0.14477263786055328 -0.04067701465599692 0.9886284761251685])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
