>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (433.578125 MB free)
Uptime: 40040.0 sec
Load Avg:  1.06884765625  1.02880859375  1.04248046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1971606 s       4180 s     144192 s    1476879 s        182 s
#2  3499 MHz    1262595 s       2809 s     123370 s    2455750 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.21.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.1516331266633968 -0.07857574395605599
 -0.1516331266633968 0.0 0.1298109026472524
 0.07857574395605599 -0.1298109026472524 0.0])
dAA = TransformUtils.so3([0.0 -0.16341311898365085 -0.08049949351085164
 0.16341311898365085 0.0 0.1414734248895866
 0.08049949351085164 -0.1414734248895866 0.0])
dAA = TransformUtils.so3([0.0 0.11760664140970692 0.09685529384186187
 -0.11760664140970692 0.0 0.06185270316875549
 -0.09685529384186187 -0.06185270316875549 0.0])
dAA = TransformUtils.Quaternion(0.9968305337942841,[0.035065930361885295,-0.0025354956357905843,0.07136412743906426])
dAA = TransformUtils.SO3([0.9900510425449601 0.03978496460117736 -0.13496699502960338
 -0.03816173935632516 0.9991650034590683 0.014593749070752522
 0.13543490984579207 -0.009297981196111919 0.9907426167984997])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.890302228135553 0.44574061595886194 0.09315173568691017
 -0.455219088680965 0.8764544516649277 0.15685399407475267
 -0.011727057488619195 -0.1820519086451585 0.9832189881614947]),[1.2775306592161944,1.100046568953062,0.20000432225351808])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9639007182910045 -0.2600508181454515 -0.057174970572504744
 0.26598254323247605 0.950262079582386 0.16203477035298072
 0.012193931837987079 -0.1713929756134729 0.9851272790541789]),[-2.330957392968026,-0.28377837325881866,0.22322127407040207])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.7369396273209319 -0.6620913254207766 -0.13621696842407435
 0.6605513554104901 0.7481486363764002 -0.06281341221026884
 0.14349875452229682 -0.04368861053743872 0.9886856996841097]),[-2.582973690501119,-2.8255359083785394,-0.5303680466790441])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
