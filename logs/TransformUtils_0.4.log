>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (329.0625 MB free)
Uptime: 32253.0 sec
Load Avg:  1.0283203125  1.0009765625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1571192 s         95 s     141013 s    1183308 s         98 s
#2  3499 MHz    1029944 s       6553 s     128079 s    1937219 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.028129379768498032 -0.054501529107752626
 -0.028129379768498032 0.0 -0.235805950194516
 0.054501529107752626 0.235805950194516 0.0])
dAA = TransformUtils.so3([0.0 -0.003403157992237816 -0.1847961146437086
 0.003403157992237816 0.0 -0.06239335403434381
 0.1847961146437086 0.06239335403434381 0.0])
dAA = TransformUtils.so3([0.0 -0.006617229360863922 -0.04016416172727764
 0.006617229360863922 0.0 0.16567642999702556
 0.04016416172727764 -0.16567642999702556 0.0])
dAA = TransformUtils.Quaternion(0.9980262370173426,[0.057953718761411144,0.016289439788520616,-0.0178787823439585])
dAA = TransformUtils.SO3([0.9864361461723189 -0.13257536790781316 -0.09678585304067877
 0.13032773759652383 0.9910404566801593 -0.02921462024660423
 0.09979183502509364 0.016204476149806777 0.9948763765488832])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
