>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1093.2578125 MB free)
Uptime: 30835.0 sec
Load Avg:  0.958984375  1.015625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1509918 s       7944 s     145106 s    1099295 s        133 s
#2  3500 MHz     941348 s         46 s     131340 s    1894353 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.3
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.018848543554759324 0.08360862162557225
 -0.018848543554759324 0.0 0.0007015506379619749
 -0.08360862162557225 -0.0007015506379619749 0.0])
dAA = TransformUtils.so3([0.0 0.28069068955246657 -0.02482777927072069
 -0.28069068955246657 0.0 0.12647168157732688
 0.02482777927072069 -0.12647168157732688 0.0])
dAA = TransformUtils.so3([0.0 -0.05768177315116523 0.03901607665898693
 0.05768177315116523 0.0 -0.08085215176190949
 -0.03901607665898693 0.08085215176190949 0.0])
dAA = TransformUtils.Quaternion(0.9973992167414014,[-0.006393860475689938,0.060520171265297074,-0.03861644548473572])
dAA = TransformUtils.SO3([0.997217368214271 0.041120174055964354 0.06218240761992508
 -0.045864213819676106 0.9959836869906112 0.07689583304244384
 -0.058770693568362384 -0.0795338074921323 0.9950981755803286])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
