>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.375 MB free)
Uptime: 39591.0 sec
Load Avg:  0.8857421875  0.95751953125  1.0146484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1898210 s       6119 s     159195 s    1491183 s        158 s
#2  3500 MHz    1262985 s        458 s     140218 s    2385500 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.20.0
INFO: Testing TransformUtils
WARNING: could not import Base.normalize into TransformUtils
WARNING: could not import Base.normalize! into TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.03987525436692803 0.08058213163934166
 -0.03987525436692803 0.0 0.12072232411533744
 -0.08058213163934166 -0.12072232411533744 0.0])
dAA = TransformUtils.so3([0.0 -0.05001741090158841 0.06256387051027626
 0.05001741090158841 0.0 0.1520905246348876
 -0.06256387051027626 -0.1520905246348876 0.0])
dAA = TransformUtils.so3([0.0 0.1172713700580383 -0.06993579576658085
 -0.1172713700580383 0.0 -0.21358861902613208
 0.06993579576658085 0.21358861902613208 0.0])
dAA = TransformUtils.Quaternion(0.9982069024804526,[0.04438896562935466,0.009829874398062058,0.03893549974065218])
dAA = TransformUtils.SO3([0.9891874490659632 -0.046916760039370786 0.13894966080484308
 0.035602474172395746 0.9959281333648345 0.08282280486219298
 -0.14226965397855137 -0.07698032735605315 0.986829962433741])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.9622605621428689 0.06983073051548487 0.2630176412717665
 -0.05444896798701147 0.9963769155252282 -0.06533262656270382
 -0.2666269311784527 0.048545970832871835 0.9625764220498312]),[-0.7703032427633435,0.008318707365414669,0.6019895303932201])
xj = TransformUtils.SE3(TransformUtils.SO3([0.9504206022826419 0.08800875171200076 -0.29825348007826447
 -0.047637581314426455 0.9890003918373734 0.1400317313755462
 0.30729682654269586 -0.11888096806308873 0.9441588721339069]),[0.7900971931321196,-0.9692995948013892,0.4826630797083054])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.8352124703426707 0.06253416791177209 -0.5463603272819832
 0.033821601399589306 0.9857916832877948 0.16453223525918298
 0.5488863531395738 -0.15589815587170405 0.8212305013410917]),[1.5865577536054785,-0.870905224533249,0.3594223855887986])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler,q) = TransformUtils.Euler(0.7853981633974484,0.0,1.5707963267948963,TransformUtils.Quaternion(1.0,[0.0,0.0,0.0]))
INFO: TransformUtils tests passed

>>> End of log
