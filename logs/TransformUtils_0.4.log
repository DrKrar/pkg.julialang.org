>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (341.2890625 MB free)
Uptime: 27807.0 sec
Load Avg:  0.892578125  0.97216796875  1.0615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1226908 s       2833 s     132964 s    1076740 s         92 s
#2  3504 MHz     755072 s       1530 s     115592 s    1768292 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.0
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.03656806160391592 -0.11007196975024831
 0.03656806160391592 0.0 0.10376965586833967
 0.11007196975024831 -0.10376965586833967 0.0])
dAA = TransformUtils.so3([0.0 -0.0440788439180765 -0.09044796206069443
 0.0440788439180765 0.0 -0.017038253992545535
 0.09044796206069443 0.017038253992545535 0.0])
dAA = TransformUtils.so3([0.0 -0.1313332691929424 -0.07519454427351702
 0.1313332691929424 0.0 -0.023547526114147566
 0.07519454427351702 0.023547526114147566 0.0])
dAA = TransformUtils.Quaternion(0.9971638879504748,[-0.042139764867112614,-0.047985330536121355,-0.03982246649539154])
dAA = TransformUtils.SO3([0.9959132477896487 0.04123293639799544 0.0803532689632024
 -0.04132049816655588 0.999145778916071 -0.0005735028036280238
 -0.08030827671131748 -0.0027490780630931213 0.9967662831684575])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
