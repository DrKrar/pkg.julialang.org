>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (345.22265625 MB free)
Uptime: 29759.0 sec
Load Avg:  0.9580078125  0.94873046875  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1406659 s       7352 s     132205 s    1097577 s        185 s
#2  3500 MHz     909395 s         43 s     114194 s    1796705 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.0758206649517209 0.12748862398967506
 -0.0758206649517209 0.0 0.07262674358992245
 -0.12748862398967506 -0.07262674358992245 0.0])
dAA = TransformUtils.so3([0.0 -0.039793893297219975 -0.01333779049914839
 0.039793893297219975 0.0 0.09390784176568089
 0.01333779049914839 -0.09390784176568089 0.0])
dAA = TransformUtils.so3([0.0 0.1485063054617367 -0.16777612137171521
 -0.1485063054617367 0.0 0.05201493092042188
 0.16777612137171521 -0.05201493092042188 0.0])
dAA = TransformUtils.Quaternion(0.9854599221401352,[-0.01734419255862024,0.0918296269043156,-0.14189869788924223])
dAA = TransformUtils.SO3([0.989710599687901 0.11837167989510596 0.08038080781023534
 -0.10927793558386951 0.9879717201917511 -0.10940846811778376
 -0.09236482912853296 0.09949887185372006 0.9907414964761967])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
