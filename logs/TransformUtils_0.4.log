>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TransformUtils
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (400.2890625 MB free)
Uptime: 31067.0 sec
Load Avg:  0.951171875  1.0146484375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1560808 s       5528 s     125165 s    1086486 s         90 s
#2  3500 MHz     979548 s       1992 s     111290 s    1907642 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.11164359728298445 -0.053205856397902776
 0.11164359728298445 0.0 0.03978368570150447
 0.053205856397902776 -0.03978368570150447 0.0])
dAA = TransformUtils.so3([0.0 -0.0012152517075617168 0.0986375928830982
 0.0012152517075617168 0.0 -0.003731348418629143
 -0.0986375928830982 0.003731348418629143 0.0])
dAA = TransformUtils.so3([0.0 -0.06775917864911499 0.097549488361265
 0.06775917864911499 0.0 -0.013860416262116402
 -0.097549488361265 0.013860416262116402 0.0])
dAA = TransformUtils.Quaternion(0.9929375955243644,[-0.031841417131016105,-0.10902296498416274,-0.03427898270725493])
dAA = TransformUtils.SO3([0.9993668505211345 0.01433968162264241 -0.0325618121490436
 -0.019577542423122797 0.985808546178656 -0.1667280123848293
 0.029708886080416733 0.1672599288893972 0.9854651177366832])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
