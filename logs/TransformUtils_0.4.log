>>> 'Pkg.add("TransformUtils")' log
INFO: Cloning cache of TransformUtils from git://github.com/dehann/TransformUtils.jl.git
INFO: Installing TransformUtils v0.0.2
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (341.84765625 MB free)
Uptime: 27186.0 sec
Load Avg:  1.12109375  1.07666015625  1.01904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1251900 s       3567 s     135038 s     986313 s         87 s
#2  3499 MHz     747016 s        222 s     116898 s    1701334 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - TransformUtils                0.0.2
1 additional packages:
 - Compat                        0.9.2
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 -0.022982860545392603 0.15203980930936567
 0.022982860545392603 0.0 0.1299055011280041
 -0.15203980930936567 -0.1299055011280041 0.0])
dAA = TransformUtils.so3([0.0 0.04451209667381204 -0.1225118673799886
 -0.04451209667381204 0.0 -0.011539480923913957
 0.1225118673799886 0.011539480923913957 0.0])
dAA = TransformUtils.so3([0.0 0.08583202988576874 0.001965118888096299
 -0.08583202988576874 0.0 0.010149684175687864
 -0.001965118888096299 -0.010149684175687864 0.0])
dAA = TransformUtils.Quaternion(0.9952375101913569,[-0.057073461598515104,-0.006022409850525882,-0.07879497997248387])
dAA = TransformUtils.SO3([0.9954658120917789 0.060099199649139574 0.07372857762081468
 -0.05506305491153809 0.9961279051782607 -0.0685365341185211
 -0.07756208442444397 0.06416605587616499 0.9949205196059797])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
