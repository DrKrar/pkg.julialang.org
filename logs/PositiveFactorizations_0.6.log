>>> 'Pkg.add("PositiveFactorizations")' log
INFO: Installing PositiveFactorizations v0.0.3
INFO: Package database updated

>>> 'Pkg.test("PositiveFactorizations")' log
Julia Version 0.6.0-dev.1591
Commit 56c009e (2016-12-17 00:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (696.69921875 MB free)
Uptime: 12019.0 sec
Load Avg:  0.9658203125  1.13671875  1.115234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     687142 s       5933 s      98548 s     281790 s         38 s
#2  3499 MHz     235955 s        893 s      46848 s     881074 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - PositiveFactorizations        0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing PositiveFactorizations
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in maxabs(::Array{Int64,2}) at ./deprecated.jl:50
 in default_tol at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:271 [inlined]
 in cholfact(::Type{PositiveFactorizations.Positive}, ::Array{Int64,2}, ::DataType) at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:12
 in macro expansion; at /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl, in expression starting on line 4
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in maxabs(::Array{Int64,2}) at ./deprecated.jl:50
 in default_tol at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:271 [inlined]
 in ldltfact(::Type{PositiveFactorizations.Positive}, ::Array{Int64,2}, ::DataType) at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:20
 in macro expansion; at /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl:8 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl, in expression starting on line 4
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in maxabs(::Array{Float64,2}) at ./deprecated.jl:50
 in default_tol at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:271 [inlined]
 in cholfact(::Type{PositiveFactorizations.Positive}, ::Array{Float64,2}, ::DataType) at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:12
 in macro expansion; at /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl, in expression starting on line 4
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in maxabs(::Array{Float64,2}) at ./deprecated.jl:50
 in default_tol at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:271 [inlined]
 in ldltfact(::Type{PositiveFactorizations.Positive}, ::Array{Float64,2}, ::DataType) at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:20
 in macro expansion; at /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl:26 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl, in expression starting on line 4
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in maxabs(::Array{Int64,2}) at ./deprecated.jl:50
 in default_tol at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/cholesky.jl:271 [inlined]
 in eigfact(::Type{PositiveFactorizations.Positive}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/PositiveFactorizations/src/eig.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl, in expression starting on line 46
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Int64,2}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/PositiveFactorizations/test/runtests.jl, in expression starting on line 47
INFO: PositiveFactorizations tests passed

>>> End of log
