>>> 'Pkg.add("JuMPeR")' log
INFO: Cloning cache of JuMPeR from https://github.com/IainNZ/JuMPeR.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing DataStructures v0.4.6
INFO: Installing ForwardDiff v0.2.5
INFO: Installing JuMP v0.14.1
INFO: Installing JuMPeR v0.5.0
INFO: Installing Lazy v0.11.4
INFO: Installing MacroTools v0.3.2
INFO: Installing MathProgBase v0.5.8
INFO: Installing NaNMath v0.2.2
INFO: Installing ReverseDiffSparse v0.5.8
INFO: Package database updated

>>> 'Pkg.test("JuMPeR")' log
Julia Version 0.6.0-dev.1527
Commit 4dcada1 (2016-12-08 19:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1542.03125 MB free)
Uptime: 31168.0 sec
Load Avg:  1.06982421875  0.9814453125  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1891426 s        918 s     250588 s     646392 s        106 s
#2  3499 MHz     747858 s       5526 s     125982 s    2116665 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - JuMPeR                        0.5.0
10 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - ForwardDiff                   0.2.5
 - JuMP                          0.14.1
 - Lazy                          0.11.4
 - MacroTools                    0.3.2
 - MathProgBase                  0.5.8
 - NaNMath                       0.2.2
 - ReverseDiffSparse             0.5.8
INFO: Computing test dependencies for JuMPeR...
INFO: Installing BaseTestNext v0.2.2
INFO: Installing BinDeps v0.4.5
INFO: Installing ECOS v0.6.7
INFO: Installing GLPK v0.3.0
INFO: Installing GLPKMathProgInterface v0.2.3
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ECOS
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ECOS/deps/build.jl, in expression starting on line 48
INFO: Building GLPK
INFO: Testing JuMPeR
WARNING: filter(flt,itr) is deprecated, use Iterators.filter(flt,itr) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in filter(::Function, ::Tuple{Symbol,Expr}) at ./deprecated.jl:50
 in @constraint(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:306
 in docm(::String, ::Expr, ::Bool) at ./docs/Docs.jl:605 (repeats 2 times)
 in @doc(::String, ::Vararg{Any,N}) at ./boot.jl:343
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JuMPeR/src/uncsets_basic_cut.jl, in expression starting on line 17

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Loading solvers...
Operators...
Printing...
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
in #570 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.6/JuMPeR/test/print.jl:29
in #570 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl
Macros...
UncertainySet...
BasicUncertaintySet polyhedral...
  LP tests...
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::JuMP.Model, ::Vararg{JuMP.Model,N}) at ./deprecated.jl:30
 in merge_duplicates(::Type{Int32}, ::JuMP.GenericAffExpr{Float64,JuMP.Variable}, ::JuMP.IndexedVector{Float64}, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:1046
 in addconstraint(::JuMP.Model, ::JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{Float64,JuMP.Variable}}) at /home/vagrant/.julia/v0.6/JuMP/src/affexpr.jl:169
 in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:188
 in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
 in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
 in #667 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
 in do_test(::##667#709, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:40 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl, in expression starting on line 27
WARNING: `x $ y` is deprecated.  use `xor(x, y)` or `x ‚äª y` instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in $ at ./deprecated.jl:1029 [inlined]
 in getunboundedray(::GLPKMathProgInterface.GLPKInterfaceLP.GLPKMathProgModelLP) at /home/vagrant/.julia/v0.6/GLPKMathProgInterface/src/GLPKInterfaceLP.jl:340
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:190
 in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
 in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
 in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
 in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
 in #685 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
 in do_test(::##685#727, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:133 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl, in expression starting on line 27
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #667 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##667#709, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[1]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##668#710, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##669#711, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:42 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #670 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##670#712, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:53 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0 + 2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##671#713, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:54 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[2]),2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##672#714, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #673 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##673#715, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:68 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##674#716, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[2]),10.0 / 11.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##675#717, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:70 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #676 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##676#718, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:80 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##677#719, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:81 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #678 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##678#720, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:94 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 5: Test Failed
  Expression: isapprox(getobjectivevalue(m),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##679#721, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:95 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 0: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 0: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 1: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 2: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 3: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 4: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 5: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 6: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 7: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 7: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 7: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #683 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##683#725, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:123 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 7: Test Failed
  Expression: isapprox(getvalue(x),3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##684#726, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:124 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 8 (unbounded LP): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,suppress_warnings=true) == :Unbounded
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #685 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##685#727, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:133 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 9 (infeasible LP): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,suppress_warnings=true) == :Infeasible
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #686 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##686#728, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:144 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:137 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #667 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##667#709, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[1]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##668#710, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##669#711, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:42 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #670 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##670#712, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:53 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0 + 2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##671#713, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:54 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[2]),2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##672#714, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #673 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##673#715, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:68 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##674#716, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[2]),10.0 / 11.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##675#717, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:70 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #676 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##676#718, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:80 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##677#719, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:81 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #678 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##678#720, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:94 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 5: Test Failed
  Expression: isapprox(getobjectivevalue(m),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##679#721, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:95 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 0: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 0: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 1: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 2: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 3: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 4: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 5: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 6: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 variant 7: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(rm,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #681 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##681#723, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:113 [inlined]
   in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 6 variant 7: Test Failed
  Expression: isapprox(getobjectivevalue(rm),3.46,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##682#724, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:114 [inlined]
 in (::##680#722{ECOS.ECOSSolver})(::Int64) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{UnitRange{Int64},##680#722{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 7: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #683 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##683#725, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:123 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 7: Test Failed
  Expression: isapprox(getvalue(x),3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##684#726, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:124 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 8 (unbounded LP): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,suppress_warnings=true) == :Unbounded
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #685 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##685#727, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:133 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:98 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 9 (infeasible LP): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,suppress_warnings=true) == :Infeasible
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #686 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##686#728, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:144 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:137 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 10 (empty unc. set): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #688 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##688#730, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:159 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:137 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 11 (unbounded unc. set): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=false,suppress_warnings=true) == :Infeasible
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #690 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##690#732, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:175 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:164 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##666#708)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in next(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./generator.jl:26
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##666#708}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
  MILP tests...
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isnan(::Array{Float64,1}) at ./deprecated.jl:50
 in #build#93(::Bool, ::Bool, ::JuMP.ProblemTraits, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:416
 in (::JuMP.#kw##build)(::Array{Any,1}, ::JuMP.#build, ::JuMP.Model) at ./<missing>:0
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:134
 in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
 in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:105
 in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
 in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
 in #692 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
 in do_test(::##692#734, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:194 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##691#733)(::Tuple{GLPKMathProgInterface.GLPKInterfaceMIP.GLPKSolverMIP,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##691#733}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:183 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl, in expression starting on line 27
glp_intopt: optimal basis to initial LP relaxation not provided
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,active_scenarios=true) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #703 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##703#745, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:258 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0 + 2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##704#746, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:259 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[2]),2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##705#747, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:260 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Got an exception of type BoundsError outside of a @test
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [1]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:261 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,active_scenarios=true) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #703 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##703#745, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:258 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0 + 2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##704#746, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:259 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x[2]),2.0 / 3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##705#747, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:260 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Got an exception of type BoundsError outside of a @test
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [1]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:261 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##702#744)(::Tuple{ECOS.ECOSSolver,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,2}, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Int64, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,2}, ::Void, ::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}, ::Tuple{Int64,Int64,Nullable{Bool},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod2{Array{Any,1},Array{Bool,1}},##702#744}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:248 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:27 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Method definition solver_name(Any) in module Main at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic.jl:25 overwritten at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:24.
BasicUncertaintySet L1 norm...
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #753 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##753#774, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##754#775, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #766 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##766#787, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:95 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##767#788, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:96 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #768 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##768#789, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:110 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##769#790, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:111 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##770#791, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:112 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #771 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##771#792, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:131 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##772#793, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:132 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #753 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##753#774, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##754#775, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #766 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##766#787, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:95 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##767#788, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:96 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #768 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##768#789, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:110 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##769#790, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:111 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##770#791, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:112 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #771 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##771#792, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:131 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##772#793, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:132 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #753 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##753#774, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##754#775, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #766 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##766#787, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:95 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##767#788, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:96 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #768 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##768#789, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:110 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##769#790, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:111 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##770#791, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:112 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #771 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##771#792, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:131 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##772#793, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:132 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #753 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##753#774, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##754#775, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=true: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #756 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##756#777, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:57 [inlined]
   in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##757#778, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:62 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##758#779, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:63 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##759#780, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:64 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##760#781, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:65 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2, macr=false: Test Failed
  Expression: isapprox(getvalue(x[5]),1 + 1 / 3,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##761#782, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:66 [inlined]
 in (::##755#776{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##755#776{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:44 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #763 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##763#784, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:82 [inlined]
   in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##764#785, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:83 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##765#786, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:84 [inlined]
 in (::##762#783{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##762#783{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #766 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##766#787, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:95 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##767#788, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:96 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #768 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##768#789, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:110 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##769#790, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:111 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##770#791, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:112 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #771 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##771#792, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:131 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##772#793, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:132 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:69 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##752#773)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##752#773}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Method definition solver_name(Any) in module Main at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L1.jl:24 overwritten at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:24.
BasicUncertaintySet L2 norm...
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #797 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##797#816, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##798#817, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #799 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##799#818, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:54 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##800#819, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##801#820, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:56 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##802#821, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:57 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##803#822, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:58 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[5]),1.283,atol=TOL * 100)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##804#823, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:59 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #805 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##805#824, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:74 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##806#825, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:75 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##807#826, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:76 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #808 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##808#827, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:87 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##809#828, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:88 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #810 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##810#829, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:102 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##811#830, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:103 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##812#831, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:104 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #813 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##813#832, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:123 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##814#833, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:124 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #797 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##797#816, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##798#817, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #799 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##799#818, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:54 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##800#819, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##801#820, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:56 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##802#821, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:57 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##803#822, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:58 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[5]),1.283,atol=TOL * 100)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##804#823, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:59 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #805 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##805#824, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:74 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##806#825, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:75 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##807#826, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:76 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #808 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##808#827, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:87 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##809#828, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:88 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #810 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##810#829, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:102 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##811#830, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:103 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##812#831, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:104 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #813 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##813#832, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:123 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##814#833, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:124 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #797 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##797#816, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##798#817, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #799 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##799#818, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:54 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##800#819, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##801#820, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:56 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##802#821, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:57 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##803#822, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:58 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[5]),1.283,atol=TOL * 100)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##804#823, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:59 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #805 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##805#824, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:74 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##806#825, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:75 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##807#826, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:76 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #808 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##808#827, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:87 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##809#828, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:88 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #810 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##810#829, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:102 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##811#830, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:103 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##812#831, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:104 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #813 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##813#832, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:123 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##814#833, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:124 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #797 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##797#816, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##798#817, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #799 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##799#818, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:54 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[1]),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##800#819, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:55 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[2]),4.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##801#820, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:56 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[3]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[3]),6.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##802#821, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:57 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[4]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[4]),8.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##803#822, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:58 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[5]. Check that the model was properly solved.
Test 2: Test Failed
  Expression: isapprox(getvalue(x[5]),1.283,atol=TOL * 100)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##804#823, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:59 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #805 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##805#824, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:74 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##806#825, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:75 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##807#826, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:76 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #808 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##808#827, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:87 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##809#828, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:88 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #810 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##810#829, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:102 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##811#830, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:103 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##812#831, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:104 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #813 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##813#832, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:123 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##814#833, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:124 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##796#815)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##796#815}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Method definition solver_name(Any) in module Main at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_L2.jl:24 overwritten at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:24.
BasicUncertaintySet L‚àû norm...
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #837 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##837#857, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##838#858, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #849 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##849#869, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:100 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##850#870, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:101 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #851 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##851#871, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:117 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##852#872, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:118 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##853#873, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:119 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #854 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##854#874, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:138 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##855#875, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:139 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #837 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##837#857, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##838#858, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #849 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##849#869, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:100 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##850#870, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:101 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #851 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##851#871, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:117 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##852#872, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:118 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##853#873, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:119 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #854 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##854#874, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:138 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##855#875, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:139 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #837 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##837#857, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##838#858, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #849 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##849#869, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:100 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##850#870, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:101 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #851 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##851#871, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:117 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##852#872, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:118 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##853#873, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:119 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #854 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##854#874, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:138 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##855#875, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:139 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 1: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #837 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##837#857, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:40 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 1: Test Failed
  Expression: isapprox(getvalue(x),1.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##838#858, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:41 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:0 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2, macr=true: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 2, macr=false: Error During Test
  Got an exception of type UndefVarError outside of a @test
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:58 [inlined]
   in (::##839#859{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##839#859{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:45 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 3, macr=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=true: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3, macr=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #846 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##846#866, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:86 [inlined]
   in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[1]),1.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##847#867, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:87 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3, macr=false: Test Failed
  Expression: isapprox(getvalue(x[2]),0.0,atol=TOL / 10)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##848#868, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:88 [inlined]
 in (::##845#865{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##845#865{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #849 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##849#869, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:100 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 4: Test Failed
  Expression: isapprox(getvalue(x),7.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##850#870, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:101 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #851 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##851#871, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:117 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(x),(10 - 4 * 2) / 7,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##852#872, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:118 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 5: Test Failed
  Expression: isapprox(getvalue(y),2.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##853#873, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:119 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,suppress_warnings=true,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #854 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##854#874, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:138 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
   in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
   in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
   in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for obj. Check that the model was properly solved.
Test 6: Test Failed
  Expression: isapprox(getvalue(obj),1.19,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##855#875, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:139 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:73 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606 [inlined]
 in (::##836#856)(::Tuple{ECOS.ECOSSolver,Bool,Bool}) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:603
 in collect_to!(::Array{Void,3}, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Int64, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,3}, ::Void, ::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}, ::Tuple{Int64,Tuple{Int64,Int64,Nullable{Bool},Bool},Nullable{Tuple{Bool,Bool}},Bool}) at ./array.jl:386
 in collect(::Base.Generator{Base.Iterators.Prod{Array{Any,1},Base.Iterators.Prod2{Array{Bool,1},Array{Bool,1}}},##836#856}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Method definition solver_name(Any) in module Main at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_basic_Linf.jl:24 overwritten at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:24.
WARNING: filter(flt,itr) is deprecated, use Iterators.filter(flt,itr) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in filter(::Function, ::Tuple{Symbol,Expr,Expr}) at ./deprecated.jl:50
 in @constraint(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:306
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl, in expression starting on line 26
BudgetUncertaintySet...
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in get_worst_case_value(::JuMPeR.BudgetUncertaintySet, ::JuMP.Model, ::Int64) at /home/vagrant/.julia/v0.6/JuMPeR/src/uncsets_budget.jl:108
 in generate_cut(::JuMPeR.BudgetUncertaintySet, ::JuMP.Model, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/uncsets_budget.jl:178
 in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:186
 in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
 in solve(::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:116
 in #879 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
 in do_test(::##879#912, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:38 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::GLPKMathProgInterface.GLPKInterfaceLP.GLPKSolverLP) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:366
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl, in expression starting on line 26
Test 1 (+x, +coeff): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in solve(::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:116
   in #879 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##879#912, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:38 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 1 (+x, +coeff): Test Failed
  Expression: isapprox(getvalue(x[1]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##880#913, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:39 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 1 (+x, +coeff): Test Failed
  Expression: isapprox(getvalue(x[2]),3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##881#914, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:40 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 2 (+x, -coeff): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in solve(::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:116
   in #882 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##882#915, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:51 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 2 (+x, -coeff): Test Failed
  Expression: isapprox(getvalue(x[1]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##883#916, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:52 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 2 (+x, -coeff): Test Failed
  Expression: isapprox(getvalue(x[2]),3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##884#917, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:53 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 3 (-x, +coeff): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in solve(::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:116
   in #885 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##885#918, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:64 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 3 (-x, +coeff): Test Failed
  Expression: isapprox(getvalue(x[1]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##886#919, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:65 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 3 (-x, +coeff): Test Failed
  Expression: isapprox(getvalue(x[2]),-3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##887#920, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:66 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 4 (-x, -coeff): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in solve(::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:116
   in #888 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##888#921, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:77 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x[1]. Check that the model was properly solved.
Test 4 (-x, -coeff): Test Failed
  Expression: isapprox(getvalue(x[1]),0.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##889#922, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:78 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for x[2]. Check that the model was properly solved.
Test 4 (-x, -coeff): Test Failed
  Expression: isapprox(getvalue(x[2]),-3.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##890#923, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:79 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 5 (multi-variable u, positive): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in solve(::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:116
   in #891 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##891#924, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:94 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for slack. Check that the model was properly solved.
Test 5 (multi-variable u, positive): Test Failed
  Expression: isapprox(getvalue(slack),10.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##892#925, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:95 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 6 (multi-variable u, negative): Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in solve(::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:116
   in #893 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##893#926, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:110 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for slack. Check that the model was properly solved.
Test 6 (multi-variable u, negative): Test Failed
  Expression: isapprox(getvalue(slack),12.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##894#927, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:111 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:0 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 7 (set mixing default), cuts=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #896 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##896#929{Bool}, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:126 [inlined]
   in (::##895#928{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:114 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 7 (set mixing default), cuts=true: Test Failed
  Expression: isapprox(getvalue(x),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##897#930, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:127 [inlined]
 in (::##895#928{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:114 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 7 (set mixing default), cuts=true: Test Failed
  Expression: isapprox(getvalue(y),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##898#931, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:128 [inlined]
 in (::##895#928{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:114 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 7 (set mixing default), cuts=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #896 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##896#929{Bool}, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:126 [inlined]
   in (::##895#928{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:114 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 7 (set mixing default), cuts=false: Test Failed
  Expression: isapprox(getvalue(x),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##897#930, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:127 [inlined]
 in (::##895#928{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:114 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 7 (set mixing default), cuts=false: Test Failed
  Expression: isapprox(getvalue(y),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##898#931, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:128 [inlined]
 in (::##895#928{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##895#928{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:114 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 8 (set mixing explicit), cuts=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #900 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##900#933{Bool}, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:144 [inlined]
   in (::##899#932{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:131 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 8 (set mixing explicit), cuts=true: Test Failed
  Expression: isapprox(getvalue(x),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##901#934, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:145 [inlined]
 in (::##899#932{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:131 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 8 (set mixing explicit), cuts=true: Test Failed
  Expression: isapprox(getvalue(y),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##902#935, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:146 [inlined]
 in (::##899#932{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:131 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 8 (set mixing explicit), cuts=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #900 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##900#933{Bool}, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:144 [inlined]
   in (::##899#932{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:131 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 8 (set mixing explicit), cuts=false: Test Failed
  Expression: isapprox(getvalue(x),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##901#934, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:145 [inlined]
 in (::##899#932{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:131 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 8 (set mixing explicit), cuts=false: Test Failed
  Expression: isapprox(getvalue(y),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##902#935, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:146 [inlined]
 in (::##899#932{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##899#932{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:131 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=true: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,active_scenarios=true) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #904 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##904#937{Bool}, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:162 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 9 (set mixing, scens), cuts=true: Test Failed
  Expression: isapprox(getvalue(x),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##905#938, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:163 [inlined]
 in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 9 (set mixing, scens), cuts=true: Test Failed
  Expression: isapprox(getvalue(y),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##906#939, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:164 [inlined]
 in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for z. Check that the model was properly solved.
Test 9 (set mixing, scens), cuts=true: Test Failed
  Expression: isapprox(getvalue(z),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##907#940, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:165 [inlined]
 in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:366
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=true: Error During Test
  Test threw an exception of type BoundsError
  Expression: isapprox(uncvalue(get(getscenario(cn1)),u),10.0,atol=TOL)
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [1]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in do_test(::##908#941, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:166 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=true: Error During Test
  Test threw an exception of type BoundsError
  Expression: isapprox(uncvalue(get(getscenario(cn2)),u),100.0,atol=TOL)
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [2]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in do_test(::##909#942, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:167 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=true: Error During Test
  Test threw an exception of type BoundsError
  Expression: isapprox(uncvalue(get(getscenario(cn3)),u),1000.0,atol=TOL)
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [3]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in do_test(::##910#943, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:168 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:366
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=false: Error During Test
  Test threw an exception of type UndefVarError
  Expression: solve(m,prefer_cuts=cuts,active_scenarios=true) == :Optimal
  UndefVarError: settings not defined
   in #5 at ./<missing>:0 [inlined]
   in next at ./generator.jl:26 [inlined]
   in collect_to!(::Array{Real,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64, ::Int64) at ./array.jl:409
   in collect_to_with_first!(::Array{Float64,1}, ::Float64, ::Base.Generator{Array{Symbol,1},ECOS.##5#6}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Symbol,1},ECOS.##5#6}) at ./array.jl:367
   in #setup#4(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:120
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in #setup#7(::Array{Any,1}, ::Function, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ECOS/src/ECOS.jl:161
   in (::ECOS.#kw##setup)(::Array{Any,1}, ::ECOS.#setup, ::Int64, ::Int64, ::Int64, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::SparseMatrixCSC{Float64,Int64}, ::SparseMatrixCSC{Float64,Int64}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
   in optimize!(::ECOS.ECOSMathProgModel) at /home/vagrant/.julia/v0.6/ECOS/src/ECOSSolverInterface.jl:83
   in optimize!(::MathProgBase.SolverInterface.ConicToLPQPBridge) at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/conic_to_lpqp.jl:168
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:141
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in _solve_robust(::JuMP.Model, ::Bool, ::Bool, ::Bool, ::Bool, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/JuMPeR/src/solve.jl:127
   in (::JuMPeR.#kw##solve_robust)(::Array{Any,1}, ::JuMPeR.#solve_robust, ::JuMP.Model) at ./<missing>:0
   in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:117
   in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
   in #904 at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:165 [inlined]
   in do_test(::##904#937{Bool}, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:162 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Variable value not defined for x. Check that the model was properly solved.
Test 9 (set mixing, scens), cuts=false: Test Failed
  Expression: isapprox(getvalue(x),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##905#938, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:163 [inlined]
 in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for y. Check that the model was properly solved.
Test 9 (set mixing, scens), cuts=false: Test Failed
  Expression: isapprox(getvalue(y),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##906#939, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:164 [inlined]
 in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
WARNING: Variable value not defined for z. Check that the model was properly solved.
Test 9 (set mixing, scens), cuts=false: Test Failed
  Expression: isapprox(getvalue(z),5.0,atol=TOL)
 in record(::BaseTestNext.DefaultTestSet, ::BaseTestNext.Fail) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:320
 in do_test(::##907#940, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:192
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:165 [inlined]
 in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:367
 in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
 in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
 in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
 in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
 in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=false: Error During Test
  Test threw an exception of type BoundsError
  Expression: isapprox(uncvalue(get(getscenario(cn1)),u),10.0,atol=TOL)
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [1]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in do_test(::##908#941, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:166 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=false: Error During Test
  Test threw an exception of type BoundsError
  Expression: isapprox(uncvalue(get(getscenario(cn2)),u),100.0,atol=TOL)
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [2]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in do_test(::##909#942, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:167 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
Test 9 (set mixing, scens), cuts=false: Error During Test
  Test threw an exception of type BoundsError
  Expression: isapprox(uncvalue(get(getscenario(cn3)),u),1000.0,atol=TOL)
  BoundsError: attempt to access 0-element Array{Nullable{JuMPeR.Scenario},1} at index [3]
   in getindex(::Array{Nullable{JuMPeR.Scenario},1}, ::Int64) at ./array.jl:445
   in getscenario(::JuMP.ConstraintRef{JuMP.Model,JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{JuMP.GenericAffExpr{Float64,JuMPeR.Uncertain},Union{JuMP.Variable,JuMPeR.Adaptive}}}}) at /home/vagrant/.julia/v0.6/JuMPeR/src/JuMPeR.jl:262
   in do_test(::##910#943, ::Expr) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:181
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:168 [inlined]
   in (::##903#936{ECOS.ECOSSolver})(::Bool) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Bool,1},##903#936{ECOS.ECOSSolver}}) at ./array.jl:367
   in macro expansion at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:149 [inlined]
   in (::##878#911)(::ECOS.ECOSSolver) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:606
   in collect_to!(::Array{Void,1}, ::Base.Generator{Array{Any,1},##878#911}, ::Int64, ::Int64) at ./array.jl:399
   in collect_to_with_first!(::Array{Void,1}, ::Void, ::Base.Generator{Array{Any,1},##878#911}, ::Int64) at ./array.jl:386
   in collect(::Base.Generator{Array{Any,1},##878#911}) at ./array.jl:367
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:28 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl:31 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:552 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: Method definition solver_name(Any) in module Main at /home/vagrant/.julia/v0.6/JuMPeR/test/uncsets_budget.jl:24 overwritten at /home/vagrant/.julia/v0.6/JuMPeR/test/adp_newsvendor.jl:33.
Adaptive Newsvendor Model...
WARNING: Method definition solver_name(Any) in module Main at /home/vagrant/.julia/v0.6/JuMPeR/test/adp_newsvendor.jl:33 overwritten at /home/vagrant/.julia/v0.6/JuMPeR/test/adp_inventory.jl:26.
Adaptive Inventory Model...
Test Summary:                                        | Pass  Fail  Error  Total
JuMPeR                                               |  767   222    144   1133
  Operators                                          |  313                 313
  Printing                                           |   19                  19
  Macros                                             |   19                  19
  UncertainySet                                      |   28                  28
  BasicUncertaintySet polyhedral                     |   98    38     38    174
    LPs with GLPKInterfaceLP, cuts=true              |   35                  35
    LPs with ECOSSolver, cuts=true                   |    2    17     16     35
      Test 1                                         |          2      1      3
      Test 2                                         |          2      1      3
      Test 3                                         |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          1      1      2
      Test 6 variant 0                               |          1      1      2
      Test 6 variant 1                               |          1      1      2
      Test 6 variant 2                               |          1      1      2
      Test 6 variant 3                               |          1      1      2
      Test 6 variant 4                               |          1      1      2
      Test 6 variant 5                               |          1      1      2
      Test 6 variant 6                               |          1      1      2
      Test 6 variant 7                               |          1      1      2
      Test 7                                         |          1      1      2
      Test 8 (unbounded LP)                          |                 1      1
      Test 9 (infeasible LP)                         |                 1      1
      Test 10 (empty unc. set)                       |    1                   1
      Test 11 (unbounded unc. set)                   |    1                   1
    LPs with GLPKInterfaceLP, cuts=false             |   35                  35
    LPs with ECOSSolver, cuts=false                  |         17     18     35
      Test 1                                         |          2      1      3
      Test 2                                         |          2      1      3
      Test 3                                         |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          1      1      2
      Test 6 variant 0                               |          1      1      2
      Test 6 variant 1                               |          1      1      2
      Test 6 variant 2                               |          1      1      2
      Test 6 variant 3                               |          1      1      2
      Test 6 variant 4                               |          1      1      2
      Test 6 variant 5                               |          1      1      2
      Test 6 variant 6                               |          1      1      2
      Test 6 variant 7                               |          1      1      2
      Test 7                                         |          1      1      2
      Test 8 (unbounded LP)                          |                 1      1
      Test 9 (infeasible LP)                         |                 1      1
      Test 10 (empty unc. set)                       |                 1      1
      Test 11 (unbounded unc. set)                   |                 1      1
    MILPs with GLPKInterfaceMIP, cuts=true           |    9                   9
    MILPs with GLPKInterfaceMIP, cuts=false          |    7                   7
    Scenarios with GLPKInterfaceLP, cuts=true        |    5                   5
    Scenarios with ECOSSolver, cuts=true             |          2      2      4
      Test 1                                         |          2      2      4
    Scenarios with GLPKInterfaceLP, cuts=false       |    5                   5
    Scenarios with ECOSSolver, cuts=false            |          2      2      4
      Test 1                                         |          2      2      4
  BasicUncertaintySet L1 norm                        |  108    76     32    216
    LPs with GLPKInterfaceLP, cuts=true, flip=true   |   27                  27
    LPs with ECOSSolver, cuts=true, flip=true        |         19      8     27
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |          5      1      6
      Test 2, macr=false                             |          5      1      6
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    LPs with GLPKInterfaceLP, cuts=false, flip=true  |   27                  27
    LPs with ECOSSolver, cuts=false, flip=true       |         19      8     27
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |          5      1      6
      Test 2, macr=false                             |          5      1      6
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    LPs with GLPKInterfaceLP, cuts=true, flip=false  |   27                  27
    LPs with ECOSSolver, cuts=true, flip=false       |         19      8     27
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |          5      1      6
      Test 2, macr=false                             |          5      1      6
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    LPs with GLPKInterfaceLP, cuts=false, flip=false |   27                  27
    LPs with ECOSSolver, cuts=false, flip=false      |         19      8     27
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |          5      1      6
      Test 2, macr=false                             |          5      1      6
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
  BasicUncertaintySet L2 norm                        |         48     24     72
    SOCPs with ECOSSolver, cuts=true, flip=true      |         12      6     18
      Test 1                                         |          1      1      2
      Test 2                                         |          5      1      6
      Test 3                                         |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    SOCPs with ECOSSolver, cuts=false, flip=true     |         12      6     18
      Test 1                                         |          1      1      2
      Test 2                                         |          5      1      6
      Test 3                                         |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    SOCPs with ECOSSolver, cuts=true, flip=false     |         12      6     18
      Test 1                                         |          1      1      2
      Test 2                                         |          5      1      6
      Test 3                                         |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    SOCPs with ECOSSolver, cuts=false, flip=false    |         12      6     18
      Test 1                                         |          1      1      2
      Test 2                                         |          5      1      6
      Test 3                                         |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
  BasicUncertaintySet L‚àû norm                        |  100    36     32    168
    LPs with GLPKInterfaceLP, cuts=true, flip=true   |   25                  25
    LPs with ECOSSolver, cuts=true, flip=true        |          9      8     17
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |                 1      1
      Test 2, macr=false                             |                 1      1
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    LPs with GLPKInterfaceLP, cuts=false, flip=true  |   25                  25
    LPs with ECOSSolver, cuts=false, flip=true       |          9      8     17
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |                 1      1
      Test 2, macr=false                             |                 1      1
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    LPs with GLPKInterfaceLP, cuts=true, flip=false  |   25                  25
    LPs with ECOSSolver, cuts=true, flip=false       |          9      8     17
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |                 1      1
      Test 2, macr=false                             |                 1      1
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
    LPs with GLPKInterfaceLP, cuts=false, flip=false |   25                  25
    LPs with ECOSSolver, cuts=false, flip=false      |          9      8     17
      Test 1                                         |          1      1      2
      Test 2, macr=true                              |                 1      1
      Test 2, macr=false                             |                 1      1
      Test 3, macr=true                              |          2      1      3
      Test 3, macr=false                             |          2      1      3
      Test 4                                         |          1      1      2
      Test 5                                         |          2      1      3
      Test 6                                         |          1      1      2
  BudgetUncertaintySet                               |   42    24     18     84
    LPs with GLPKInterfaceLP                         |   42                  42
    LPs with ECOSSolver                              |         24     18     42
      Test 1 (+x, +coeff)                            |          2      1      3
      Test 2 (+x, -coeff)                            |          2      1      3
      Test 3 (-x, +coeff)                            |          2      1      3
      Test 4 (-x, -coeff)                            |          2      1      3
      Test 5 (multi-variable u, positive)            |          1      1      2
      Test 6 (multi-variable u, negative)            |          1      1      2
      Test 7 (set mixing default), cuts=true         |          2      1      3
      Test 7 (set mixing default), cuts=false        |          2      1      3
      Test 8 (set mixing explicit), cuts=true        |          2      1      3
      Test 8 (set mixing explicit), cuts=false       |          2      1      3
      Test 9 (set mixing, scens), cuts=true          |          3      4      7
      Test 9 (set mixing, scens), cuts=false         |          3      4      7
  Adaptive Newsvendor Model                          |   32                  32
  Adaptive Inventory                                 |    8                   8
ERROR: LoadError: Some tests did not pass: 767 passed, 222 failed, 144 errored.
 in finish(::BaseTestNext.DefaultTestSet) at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:385
 in macro expansion; at /home/vagrant/.julia/v0.6/BaseTestNext/src/BaseTestNext.jl:559 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl, in expression starting on line 22
===============================[ ERROR: JuMPeR ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/JuMPeR/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
INFO: Removing BinDeps v0.4.5
INFO: Removing ECOS v0.6.7
INFO: Removing GLPK v0.3.0
INFO: Removing GLPKMathProgInterface v0.2.3
INFO: Removing SHA v0.3.0
INFO: Removing URIParser v0.1.6
ERROR: JuMPeR had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
