>>> 'Pkg.add("NonNegLeastSquares")' log
INFO: Cloning cache of NonNegLeastSquares from https://github.com/ahwillia/NonNegLeastSquares.jl.git
INFO: Installing NonNegLeastSquares v0.0.1
INFO: Package database updated

>>> 'Pkg.test("NonNegLeastSquares")' log
Julia Version 0.5.0-rc1+0
Commit cede539 (2016-08-04 08:48 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1767.5390625 MB free)
Uptime: 7574.0 sec
Load Avg:  1.0595703125  1.11767578125  1.37646484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     403468 s         62 s      46587 s     206933 s         14 s
#2  3499 MHz     118560 s        104 s      23823 s     593304 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - NonNegLeastSquares            0.0.1
1 additional packages:
 - Compat                        0.8.6
INFO: Computing test dependencies for NonNegLeastSquares...
INFO: Installing BinDeps v0.4.2
INFO: Installing Conda v0.2.3
INFO: Installing MacroTools v0.3.0
INFO: Installing PyCall v1.7.0
INFO: Installing SHA v0.2.0
INFO: Installing URIParser v0.1.5
INFO: Building PyCall
WARNING: `@windows` is deprecated, use `@static is_windows()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @windows(::Any, ::Any) at ./deprecated.jl:473
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PyCall/deps/build.jl, in expression starting on line 17
INFO: No system-wide Python was found; got the following error:
could not spawn `'' -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('VERSION'))"`: no such file or directory (ENOENT)
using the Python distribution in the Conda package
Fetching package metadata .......
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.11.1                   py27_0  
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.12) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7.so
INFO: Testing NonNegLeastSquares
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/PyCall.ji for module PyCall.

WARNING: deprecated syntax "global gui::Symbol".
Use "typeassert" instead.

WARNING: deprecated syntax "global gui::Symbol".
Use "typeassert" instead.

WARNING: deprecated syntax "global npy_initialized::Bool".
Use "typeassert" instead.
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::SubString{String}, ::Vararg{SubString{String},N}) at ./deprecated.jl:30
 in bname(::Symbol) at /home/vagrant/.julia/v0.5/MacroTools/src/match.jl:17
 in allbindings(::Symbol, ::Array{Any,1}) at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:1
 in collect_to!(::Array{Array{Any,1},1}, ::Base.Generator{Array{Symbol,1},MacroTools.##1#2{Array{Any,1}}}, ::Int64, ::Int64) at ./array.jl:307
 in collect_to_with_first!(::Array{Array{Any,1},1}, ::Array{Any,1}, ::Base.Generator{Array{Symbol,1},MacroTools.##1#2{Array{Any,1}}}, ::Int64) at ./array.jl:294
 in _collect(::Array{Symbol,1}, ::Base.Generator{Array{Symbol,1},MacroTools.##1#2{Array{Any,1}}}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:288
 in map(::Function, ::Array{Symbol,1}) at ./abstractarray.jl:1429
 in allbindings(::Expr, ::Array{Any,1}) at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:1
 in map(::MacroTools.##1#2{Array{Any,1}}, ::Array{Any,1}) at ./essentials.jl:124
 in allbindings(::Expr, ::Array{Any,1}) at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:1
 in map(::MacroTools.##1#2{Array{Any,1}}, ::Array{Any,1}) at ./essentials.jl:124
 in allbindings(::Expr, ::Array{Any,1}) at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:1
 in allbindings(::Expr) at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:10
 in @capture(::Any, ::Any) at /home/vagrant/.julia/v0.5/MacroTools/src/macro.jl:53
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PyCall/src/pyclass.jl, in expression starting on line 45

WARNING: deprecated syntax "global pyio_initialized::Bool".
Use "typeassert" instead.
WARNING: error while reinitializing value MethodTable(name=:npy_type, defs=TypeMapLevel(index_arg1=nothing, arg1=Array{Any, 1}[TypeMapLevel(index_arg1=nothing, arg1=nothing, index_targ=nothing, targ=Array{Any, 1}[
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Bool}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Int8}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{UInt8}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Int16}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{UInt16}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Int32}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{UInt32}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Int64}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{UInt64}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Float32}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Float64}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Base.Complex{Float64}}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Base.Complex{Float64}}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false),
  TypeMapEntry(next=nothing, sig=Tuple{PyCall.#npy_type, Type{Ptr{PyCall.PyObject_struct}}}, tvars=svec(), simplesig=nothing, guardsigs=svec(), func=PyCall.npy_type(...), isleafsig=false, issimplesig=true, va=false)], list=nothing, any=nothing, key=PyCall.#npy_type)], index_targ=nothing, targ=nothing, list=nothing, any=nothing, key=#<null>), cache=nothing, max_args=2, kwsorter=#<null>, module=PyCall, =0, =0):
OutOfMemoryError()
ERROR: LoadError: PyError (:PyImport_ImportModule) <type 'exceptions.ImportError'>
ImportError('No module named scipy.optimize',)

 in pyerr_check at /home/vagrant/.julia/v0.5/PyCall/src/exception.jl:56 [inlined]
 in pyerr_check at /home/vagrant/.julia/v0.5/PyCall/src/exception.jl:61 [inlined]
 in macro expansion at /home/vagrant/.julia/v0.5/PyCall/src/exception.jl:81 [inlined]
 in pyimport(::String) at /home/vagrant/.julia/v0.5/PyCall/src/PyCall.jl:386
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/NonNegLeastSquares/test/runtests.jl, in expression starting on line 426
=========================[ ERROR: NonNegLeastSquares ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/NonNegLeastSquares/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.4.2
INFO: Removing Conda v0.2.3
INFO: Removing MacroTools v0.3.0
INFO: Removing PyCall v1.7.0
INFO: Removing SHA v0.2.0
INFO: Removing URIParser v0.1.5
ERROR: NonNegLeastSquares had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
