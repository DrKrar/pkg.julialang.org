>>> 'Pkg.add("JuMPeR")' log
INFO: Cloning cache of JuMPeR from git://github.com/IainNZ/JuMPeR.jl.git
INFO: Installing Calculus v0.1.10
INFO: Installing DataStructures v0.3.11
INFO: Installing DualNumbers v0.1.3
INFO: Installing JuMP v0.9.3
INFO: Installing JuMPeR v0.1.2
INFO: Installing MathProgBase v0.3.15
INFO: Installing NaNMath v0.0.2
INFO: Installing ReverseDiffSparse v0.2.10
INFO: Package database updated

>>> 'Pkg.test("JuMPeR")' log
Julia Version 0.4.0-dev+6661
Commit 9c3cb36 (2015-08-12 03:21 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i7-4960HQ CPU @ 2.60GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Haswell)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for JuMPeR...
INFO: Installing ECOS v0.4.3
INFO: Installing FactCheck v0.3.1
INFO: Installing GLPK v0.2.16
INFO: Installing GLPKMathProgInterface v0.1.13
INFO: Building ECOS

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.4/ECOS/deps/build.jl:49.
Use "Dict(a=>b, ...)" instead.
INFO: Building GLPK
INFO: Testing JuMPeR
WARNING: module DataStructures should explicitly import < from Base
WARNING: module DataStructures should explicitly import <= from Base
WARNING: module JuMP should explicitly import - from Base
WARNING: module JuMP should explicitly import + from Base
WARNING: module JuMP should explicitly import * from Base
WARNING: module JuMP should explicitly import / from Base
WARNING: module JuMP should explicitly import ^ from Base
WARNING: module JuMP should explicitly import <= from Base
WARNING: module JuMP should explicitly import == from Base
WARNING: module JuMP should explicitly import >= from Base
WARNING: module JuMPeR should explicitly import + from Base
WARNING: module JuMPeR should explicitly import - from Base
WARNING: module JuMPeR should explicitly import * from Base
WARNING: module JuMPeR should explicitly import / from Base
WARNING: module JuMPeR should explicitly import <= from Base
WARNING: module JuMPeR should explicitly import == from Base
WARNING: module JuMPeR should explicitly import >= from Base

WARNING: deprecated syntax "rd.uncCat [" at /home/vagrant/.julia/v0.4/JuMPeR/src/oracle_gen_graph.jl:86.
Use "rd.uncCat[" instead.

WARNING: deprecated syntax "gen.comp_cut_vars [" at /home/vagrant/.julia/v0.4/JuMPeR/src/oracle_gen_graph.jl:334.
Use "gen.comp_cut_vars[" instead.
Loading solvers...

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.4/GLPKMathProgInterface/src/GLPKInterfaceMIP.jl:398.
Use "Dict(a=>b, ...)" instead.
Running tests...
WARNING: the `=>` syntax is deprecated, use `-->` instead
[operators] Robust operator tests: .....................................................................................................................................
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[operators] Higher level operations: WARNING: int(x::AbstractFloat) is deprecated, use round(Int,x) instead.
 in depwarn at ./deprecated.jl:63
 in int at deprecated.jl:49
 in fill_unc_names at /home/vagrant/.julia/v0.4/JuMPeR/src/print.jl:120
 in unc_str at /home/vagrant/.julia/v0.4/JuMPeR/src/print.jl:106
 in unc_str at /home/vagrant/.julia/v0.4/JuMPeR/src/print.jl:147
 in aff_str at /home/vagrant/.julia/v0.4/JuMPeR/src/print.jl:293
 in affToStr at /home/vagrant/.julia/v0.4/JuMPeR/src/print.jl:316
 in anonymous at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:218
 in do_fact at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:277
 in anonymous at /home/vagrant/.julia/v0.4/JuMPeR/test/operators.jl:218
 in context at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:417
 in anonymous at /home/vagrant/.julia/v0.4/JuMPeR/test/operators.jl:250
 in facts at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:391
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:264
 in anonymous at no file:20
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:264
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/JuMPeR/test/operators.jl, in expression starting on line 239
............
WARNING: module JuMP should explicitly import setindex! from Base
[operators] Check ellipse construction: .............
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[print] RobustModel: .
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[print] JuMPContainer{Uncertain}: ..................
WARNING: module JuMP should explicitly import setindex! from Base
[print] EllipseConstraint: ....
WARNING: module JuMP should explicitly import setindex! from Base
[macro] Uncertainty set constraints: ......
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[macro] Uncertain constraints: .......
[oracle] Check interface throws: ....
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle] Test oracle utilities: ...................WARNING: The comparison operator <= has been deprecated for constructing constraints. Use the macro form @addConstraint instead.
.....
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_poly] Test 1: ......WARNING: Solver does not appear to support adding constraints to an existing model. Hot-start is disabled.
......
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_poly] Test 2: ............
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_poly] Test 2-IP: ......
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_poly] Test 3: ............
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_poly] Test 3-IP: ......
[oracle_gen_poly] Test 4: ........
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_poly] Test 5: WARNING: The comparison operator >= has been deprecated for constructing constraints. Use the macro form @addConstraint instead.
........
[oracle_gen_poly] Test 6: ................................................................
[oracle_gen_poly] Test 7 (integer uncertainty set): ..
[oracle_gen_poly] Test 8: ........
[oracle_gen_poly] Test 9 (infeasible LP): ..
[oracle_gen_poly] Test 10 (infeasible MILP): .glp_intopt: optimal basis to initial LP relaxation not provided
.
[oracle_gen_poly] Test 11 (unbounded LP): ....
[oracle_gen_poly] Test 12 (unbounded MILP): glp_intopt: optimal basis to initial LP relaxation not provided
.glp_intopt: optimal basis to initial LP relaxation not provided
.
[oracle_gen_poly] Test 13 (empty uncertainty set): ....
[oracle_gen_poly] Test 14 (unbounded uncertainty set): ....
[oracle_gen_ell] Test 1: ....
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_ell] Test 2: ....................
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_ell] Test 3: ........
[oracle_gen_ell] Test 4: ....
[oracle_gen_ell] Test 5: ........
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_ell] Test 6: ....
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen] Resolve: ............................................................
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_bertsim] +x, +coeff: ........
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_bertsim] +x, -coeff: ......
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_bertsim] -x, +coeff: ......
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_bertsim] -x, -coeff: ......
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_graph] Test 1: ..WARNING: Solver does not appear to support hot-starts. Problem will be solved from scratch.
..............
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_graph] Test 2: ................
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
[oracle_gen_graph] Test 3: ................

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.4/JuMPeR/test/scenario.jl:30.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.4/JuMPeR/test/scenario.jl:34.
Use "Dict(a=>b, ...)" instead.
[scenario] Test providing scenarios: ........
[scenario] Test retrieval of active cuts: ............
INFO: JuMPeR tests passed
INFO: Removing ECOS v0.4.3
INFO: Removing FactCheck v0.3.1
INFO: Removing GLPK v0.2.16
INFO: Removing GLPKMathProgInterface v0.1.13

>>> End of log
