>>> 'Pkg.add("ForwardDiff")' log
INFO: Installing Calculus v0.1.15
INFO: Installing DiffBase v0.0.2
INFO: Installing ForwardDiff v0.3.3
INFO: Installing NaNMath v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ForwardDiff
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ForwardDiff")' log
Julia Version 0.6.0-dev.1847
Commit 8f9036a (2017-01-02 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (673.13671875 MB free)
Uptime: 22412.0 sec
Load Avg:  1.05908203125  1.0146484375  0.88916015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz    1080457 s       6404 s     126006 s     796368 s         27 s
#2  3508 MHz     446032 s         95 s      84981 s    1656220 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ForwardDiff                   0.3.3
 - JSON                          0.8.0
4 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - DiffBase                      0.0.2
 - NaNMath                       0.2.2
INFO: Testing ForwardDiff
Testing Partials...
  ...testing Partials{0,Int64}
  ...testing Partials{0,Float32}
  ...testing Partials{0,Float64}
  ...testing Partials{3,Int64}
  ...testing Partials{3,Float32}
  ...testing Partials{3,Float64}
done (took 3.609773365 seconds).
Testing Dual...
  ...testing Dual{0,Int64} and Dual{0,Dual{0,Int64}}
ERROR: LoadError: LoadError: UndefVarError: N not defined
Stacktrace:
 [1] (::DualTest.#test_approx_diffnums#9)(::ForwardDiff.Dual{0,Float64}, ::ForwardDiff.Dual{0,Float64}) at /home/vagrant/.julia/v0.6/ForwardDiff/test/DualTest.jl:313
 [2] macro expansion; at /home/vagrant/.julia/v0.6/ForwardDiff/test/DualTest.jl:356 [inlined]
 [3] anonymous at ./<missing>:?
 [4] include_from_node1(::String) at ./loading.jl:532
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ForwardDiff/test/DualTest.jl, in expression starting on line 23
while loading /home/vagrant/.julia/v0.6/ForwardDiff/test/runtests.jl, in expression starting on line 10
=============================[ ERROR: ForwardDiff ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ForwardDiff/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ForwardDiff had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
