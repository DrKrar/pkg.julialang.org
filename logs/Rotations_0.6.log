>>> 'Pkg.add("Rotations")' log
INFO: Installing Rotations v0.3.3
INFO: Installing StaticArrays v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Rotations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Rotations")' log
Julia Version 0.6.0-dev.1701
Commit d8a5718 (2016-12-26 06:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (505.9453125 MB free)
Uptime: 18861.0 sec
Load Avg:  1.12451171875  1.15087890625  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1116146 s         28 s     131807 s     418754 s         26 s
#2  3500 MHz     292766 s        153 s      60573 s    1490397 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - Rotations                     0.3.3
2 additional packages:
 - Compat                        0.9.5
 - StaticArrays                  0.1.2
INFO: Computing test dependencies for Rotations...
INFO: Installing Calculus v0.1.15
INFO: Installing DiffBase v0.0.2
INFO: Installing ForwardDiff v0.3.3
INFO: Installing NaNMath v0.2.2
INFO: Testing Rotations
Skipping Base.<|
Skipping Base.>:
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.cluster_manager
Skipping StaticArrays.MutableFieldVector
Skipping Base.<|
Skipping Base.>:
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.cluster_manager
Core: Error During Test
  Test threw an exception of type ErrorException
  Expression: RotMatrix((1,0,0,1)) == RotMatrix(@SMatrix([1 0;0 1]))
  The size of type `Rotations.RotMatrix{2,Int64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Int64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Int64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Int64,4}, ::Rotations.RotMatrix{2,Int64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:11 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Identity rotation checks: Error During Test
  Test threw an exception of type ErrorException
  Expression: eye(R)::R == I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::StaticArrays.SMatrix{2,2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:25 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Identity rotation checks: Error During Test
  Test threw an exception of type ErrorException
  Expression: eye(R{Float32})::R{Float32} == I32
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float32,4}, ::StaticArrays.SMatrix{2,2,Float32,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:26 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Rotate Points: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size; at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10 [inlined]
   in Type; at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:78 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:59 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Compose rotations: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size; at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10 [inlined]
   in Type; at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:78 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:80 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Convert rotations: Error During Test
  Test threw an exception of type ErrorException
  Expression: R(r1) == r1
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:102 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: size(R) == (2,2)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:110 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R == $(Expr(:typed_vcat, :T, :(cos(pi / 4) -(sin(pi / 4))), :(sin(pi / 4) cos(pi / 4))))
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float64,4}, ::Array{Float64,2}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:111 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R * R â‰ˆ $(Expr(:typed_vcat, :T, :(0 -1), :(1 0)))
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:31
   in #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Array{Float64,2}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Array{Float64,2}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:112 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: size(R) == (2,2)
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:110 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R == $(Expr(:typed_vcat, :T, :(cos(pi / 4) -(sin(pi / 4))), :(sin(pi / 4) cos(pi / 4))))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:111 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R * R â‰ˆ $(Expr(:typed_vcat, :T, :(0 -1), :(1 0)))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:31
   in #isapprox#12(::Float32, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:112 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: size(R) == (2,2)
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:110 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R == $(Expr(:typed_vcat, :T, :(cos(pi / 4) -(sin(pi / 4))), :(sin(pi / 4) cos(pi / 4))))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   in ==(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./abstractarray.jl:1465
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:111 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R * R â‰ˆ $(Expr(:typed_vcat, :T, :(0 -1), :(1 0)))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   in map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:31
   in #isapprox#12(::Float32, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1170
   in isapprox(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1170
   in eval_comparison(::Expr) at ./test.jl:171
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:112 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
show: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   in size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   in getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   in alignment(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Rotations.RotMatrix{2,Float64,4}, ::Array{Int64,1}, ::Array{Int64,1}, ::Int64, ::Int64, ::Int64) at ./show.jl:1308
   in print_matrix(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Rotations.RotMatrix{2,Float64,4}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./show.jl:1437
   in #showarray#1(::Bool, ::Function, ::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Rotations.RotMatrix{2,Float64,4}, ::Bool) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:179
   in show(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::MIME{Symbol("text/plain")}, ::Rotations.RotMatrix{2,Float64,4}) at ./replutil.jl:140
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:119 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   in macro expansion; at ./test.jl:714 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:293
   in _start() at ./client.jl:357
ERROR: LoadError: LoadError: Some tests did not pass: 6 passed, 0 failed, 516 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:524
 in macro expansion; at ./test.jl:721 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/Rotations/test/2d.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/Rotations/test/runtests.jl, in expression starting on line 12
==============================[ ERROR: Rotations ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Rotations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Calculus v0.1.15
INFO: Removing DiffBase v0.0.2
INFO: Removing ForwardDiff v0.3.3
INFO: Removing NaNMath v0.2.2
ERROR: Rotations had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:270
 in _start() at ./client.jl:357

>>> End of log
