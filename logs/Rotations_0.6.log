>>> 'Pkg.add("Rotations")' log
INFO: Installing Rotations v0.3.3
INFO: Installing StaticArrays v0.1.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Rotations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Rotations")' log
Julia Version 0.6.0-dev.1897
Commit 8563fc5 (2017-01-04 09:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (609.55078125 MB free)
Uptime: 17869.0 sec
Load Avg:  1.4287109375  1.55419921875  1.25634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1087883 s         64 s     104995 s     383840 s         40 s
#2  3499 MHz     297098 s         85 s      53950 s    1393040 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - Rotations                     0.3.3
19 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - Distributions                 0.11.1
 - GenerativeModels              0.0.0-             master (unregistered)
 - Iterators                     0.2.0
 - LaTeXStrings                  0.2.0
 - PDMats                        0.5.2
 - POMDPBounds                   0.0.0-             master (unregistered)
 - POMDPModels                   0.0.0-             master (unregistered)
 - POMDPToolbox                  0.0.0-             master (unregistered)
 - POMDPs                        0.4.0
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - StaticArrays                  0.1.3
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - TikzPictures                  0.3.5
 - URIParser                     0.1.6
INFO: Computing test dependencies for Rotations...
INFO: Installing DiffBase v0.0.2
INFO: Installing ForwardDiff v0.3.3
INFO: Installing NaNMath v0.2.2
INFO: Testing Rotations
Skipping Base.<|
Skipping Base.>:
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.cluster_manager
Skipping StaticArrays.MutableFieldVector
Skipping Base.<|
Skipping Base.>:
Skipping Base.active_repl
Skipping Base.active_repl_backend
Skipping Base.cluster_manager
Core: Error During Test
  Test threw an exception of type ErrorException
  Expression: RotMatrix((1,0,0,1)) == RotMatrix(@SMatrix([1 0;0 1]))
  The size of type `Rotations.RotMatrix{2,Int64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Int64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Int64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Int64,4}, ::Rotations.RotMatrix{2,Int64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:11 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Identity rotation checks: Error During Test
  Test threw an exception of type ErrorException
  Expression: eye(R)::R == I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::StaticArrays.SMatrix{2,2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:25 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Identity rotation checks: Error During Test
  Test threw an exception of type ErrorException
  Expression: eye(R{Float32})::R{Float32} == I32
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float32,4}, ::StaticArrays.SMatrix{2,2,Float32,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:26 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: isrotation(r)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] isrotation(::Rotations.RotMatrix{2,Float64,4}, ::Float64) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:125
   [5] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:40 [inlined]
   [6] macro expansion; at ./test.jl:738 [inlined]
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:41 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) == r.'
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:42 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: inv(r) * r â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:43 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Testing inverse(): Error During Test
  Test threw an exception of type ErrorException
  Expression: r * inv(r) â‰ˆ I
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:17
   [3] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [4] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Rotations.RotMatrix{2,Float64,4}) at ./linalg/generic.jl:1220
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:44 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Rotate Points: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size; at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10 [inlined]
   [3] Type; at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:78 [inlined]
   [4] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:59 [inlined]
   [5] macro expansion; at ./test.jl:738 [inlined]
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] anonymous at ./<missing>:?
   [9] include_from_node1(::String) at ./loading.jl:532
   [10] include(::String) at ./sysimg.jl:14
   [11] include_from_node1(::String) at ./loading.jl:532
   [12] include(::String) at ./sysimg.jl:14
   [13] process_options(::Base.JLOptions) at ./client.jl:298
   [14] _start() at ./client.jl:364
Compose rotations: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size; at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10 [inlined]
   [3] Type; at /home/vagrant/.julia/v0.6/StaticArrays/src/SMatrix.jl:78 [inlined]
   [4] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:80 [inlined]
   [5] macro expansion; at ./test.jl:738 [inlined]
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] anonymous at ./<missing>:?
   [9] include_from_node1(::String) at ./loading.jl:532
   [10] include(::String) at ./sysimg.jl:14
   [11] include_from_node1(::String) at ./loading.jl:532
   [12] include(::String) at ./sysimg.jl:14
   [13] process_options(::Base.JLOptions) at ./client.jl:298
   [14] _start() at ./client.jl:364
Convert rotations: Error During Test
  Test threw an exception of type ErrorException
  Expression: R(r1) == r1
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:102 [inlined]
   [5] macro expansion; at ./test.jl:738 [inlined]
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: size(R) == (2,2)
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:110 [inlined]
   [3] macro expansion; at ./test.jl:738 [inlined]
   [4] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [5] macro expansion; at ./test.jl:738 [inlined]
   [6] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R == $(Expr(:typed_vcat, :T, :(cos(pi / 4) -(sin(pi / 4))), :(sin(pi / 4) cos(pi / 4))))
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float64,4}, ::Array{Float64,2}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:111 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R * R â‰ˆ $(Expr(:typed_vcat, :T, :(0 -1), :(1 0)))
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:31
   [4] #isapprox#12(::Float64, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float64,4}, ::Array{Float64,2}) at ./linalg/generic.jl:1220
   [5] isapprox(::Rotations.RotMatrix{2,Float64,4}, ::Array{Float64,2}) at ./linalg/generic.jl:1220
   [6] eval_comparison(::Expr) at ./test.jl:195
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:112 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [10] macro expansion; at ./test.jl:738 [inlined]
   [11] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: size(R) == (2,2)
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:110 [inlined]
   [3] macro expansion; at ./test.jl:738 [inlined]
   [4] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [5] macro expansion; at ./test.jl:738 [inlined]
   [6] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R == $(Expr(:typed_vcat, :T, :(cos(pi / 4) -(sin(pi / 4))), :(sin(pi / 4) cos(pi / 4))))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:111 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R * R â‰ˆ $(Expr(:typed_vcat, :T, :(0 -1), :(1 0)))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:31
   [4] #isapprox#12(::Float32, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1220
   [5] isapprox(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1220
   [6] eval_comparison(::Expr) at ./test.jl:195
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:112 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [10] macro expansion; at ./test.jl:738 [inlined]
   [11] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: size(R) == (2,2)
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:110 [inlined]
   [3] macro expansion; at ./test.jl:738 [inlined]
   [4] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [5] macro expansion; at ./test.jl:738 [inlined]
   [6] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R == $(Expr(:typed_vcat, :T, :(cos(pi / 4) -(sin(pi / 4))), :(sin(pi / 4) cos(pi / 4))))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] convert(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:127
   [4] ==(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./abstractarray.jl:1465
   [5] eval_comparison(::Expr) at ./test.jl:195
   [6] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:111 [inlined]
   [7] macro expansion; at ./test.jl:738 [inlined]
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] anonymous at ./<missing>:?
Types and products: Error During Test
  Test threw an exception of type ErrorException
  Expression: R * R â‰ˆ $(Expr(:typed_vcat, :T, :(0 -1), :(1 0)))
  The size of type `Rotations.RotMatrix{2,Float32,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] length(::Type{Rotations.RotMatrix{2,Float32,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:4
   [3] map(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/mapreduce.jl:31
   [4] #isapprox#12(::Float32, ::Int64, ::Base.LinAlg.#vecnorm, ::Function, ::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1220
   [5] isapprox(::Rotations.RotMatrix{2,Float32,4}, ::Array{Float32,2}) at ./linalg/generic.jl:1220
   [6] eval_comparison(::Expr) at ./test.jl:195
   [7] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:112 [inlined]
   [8] macro expansion; at ./test.jl:738 [inlined]
   [9] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [10] macro expansion; at ./test.jl:738 [inlined]
   [11] anonymous at ./<missing>:?
show: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `Rotations.RotMatrix{2,Float64,4}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
  Stacktrace:
   [1] size(::Type{Rotations.RotMatrix{2,Float64,4}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:138
   [2] size(::Type{Rotations.RotMatrix{2,Float64,4}}, ::Int64) at /home/vagrant/.julia/v0.6/StaticArrays/src/abstractarray.jl:10
   [3] getindex(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/indexing.jl:136
   [4] alignment(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Rotations.RotMatrix{2,Float64,4}, ::Array{Int64,1}, ::Array{Int64,1}, ::Int64, ::Int64, ::Int64) at ./show.jl:1315
   [5] print_matrix(::IOContext{Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Rotations.RotMatrix{2,Float64,4}, ::String, ::String, ::String, ::String, ::String, ::String, ::Int64, ::Int64) at ./show.jl:1444
   [6] #showarray#1(::Bool, ::Function, ::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Rotations.RotMatrix{2,Float64,4}, ::Bool) at /home/vagrant/.julia/v0.6/Rotations/src/core_types.jl:179
   [7] show(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::MIME{Symbol("text/plain")}, ::Rotations.RotMatrix{2,Float64,4}) at ./replutil.jl:140
   [8] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:119 [inlined]
   [9] macro expansion; at ./test.jl:738 [inlined]
   [10] macro expansion; at /home/vagrant/.julia/v0.6/Rotations/test/2d.jl:0 [inlined]
   [11] macro expansion; at ./test.jl:738 [inlined]
   [12] anonymous at ./<missing>:?
   [13] include_from_node1(::String) at ./loading.jl:532
   [14] include(::String) at ./sysimg.jl:14
   [15] include_from_node1(::String) at ./loading.jl:532
   [16] include(::String) at ./sysimg.jl:14
   [17] process_options(::Base.JLOptions) at ./client.jl:298
   [18] _start() at ./client.jl:364
ERROR: LoadError: LoadError: Some tests did not pass: 6 passed, 0 failed, 516 errored, 0 broken.
Stacktrace:
 [1] finish(::Base.Test.DefaultTestSet) at ./test.jl:548
 [2] macro expansion; at ./test.jl:745 [inlined]
 [3] anonymous at ./<missing>:?
 [4] include_from_node1(::String) at ./loading.jl:532
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Rotations/test/2d.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/Rotations/test/runtests.jl, in expression starting on line 12
==============================[ ERROR: Rotations ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Rotations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DiffBase v0.0.2
INFO: Removing ForwardDiff v0.3.3
INFO: Removing NaNMath v0.2.2
ERROR: Rotations had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
