>>> 'Pkg.add("QuadGK")' log
INFO: Cloning cache of QuadGK from https://github.com/JuliaMath/QuadGK.jl.git
INFO: Installing QuadGK v0.1.0
INFO: Package database updated

>>> 'Pkg.test("QuadGK")' log
Julia Version 0.6.0-dev.1973
Commit f4ed16b (2017-01-06 23:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (860.56640625 MB free)
Uptime: 14052.0 sec
Load Avg:  1.07958984375  1.11083984375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     868783 s       6630 s      87861 s     277693 s         24 s
#2  3500 MHz     247578 s        273 s      44809 s    1081414 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - QuadGK                        0.1.0
18 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - Distributions                 0.11.1
 - GenerativeModels              0.0.0-             master (unregistered)
 - Iterators                     0.2.0
 - LaTeXStrings                  0.2.0
 - PDMats                        0.5.2
 - POMDPBounds                   0.0.0-             master (unregistered)
 - POMDPModels                   0.0.0-             master (unregistered)
 - POMDPToolbox                  0.0.0-             master (unregistered)
 - POMDPs                        0.4.0
 - Rmath                         0.1.6
 - SHA                           0.3.0
 - StatsBase                     0.12.0
 - StatsFuns                     0.3.1
 - TikzPictures                  0.3.5
 - URIParser                     0.1.6
INFO: Testing QuadGK
quadgk: Error During Test
  Test threw an exception of type ErrorException
  Expression: (quadgk(cos,0,0.7,1))[1] ≈ sin(1)
  Base.Collections.heappush!(QuadGK.Segment[],QuadGK.Segment(0.0,0.7,0.644217687237691,0.0),Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}(Base.Order.ForwardOrdering())) has been moved to the package DataStructures.jl.
  Run Pkg.add("DataStructures") to install DataStructures on Julia v0.6 and later, and then run `using DataStructures`.
  Stacktrace:
   [1] do_quadgk(::Base.#cos, ::Array{Float64,1}, ::Int64, ::Type{Float64}, ::Float64, ::Float64, ::Int64, ::Base.LinAlg.#vecnorm) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:125
   [2] #quadgk#13(::Float64, ::Float64, ::Int64, ::Int64, ::Function, ::Function, ::Function, ::Float64, ::Float64, ::Float64, ::Vararg{Float64,N}) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:162
   [3] quadgk(::Function, ::Float64, ::Float64, ::Float64, ::Vararg{Float64,N}) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:162
   [4] #quadgk#15(::Array{Any,1}, ::Function, ::Function, ::Int64, ::Float64, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:235
   [5] macro expansion; at /home/vagrant/.julia/v0.6/QuadGK/test/runtests.jl:9 [inlined]
   [6] macro expansion; at ./test.jl:750 [inlined]
   [7] anonymous at ./<missing>:?
quadgk: Error During Test
  Test threw an exception of type ErrorException
  Expression: (quadgk((x->begin 
                exp(im * x)
            end),0,0.7,1))[1] ≈ (exp(1im) - 1) / im
  Base.Collections.heappush!(QuadGK.Segment[],QuadGK.Segment(0.0,0.7,0.644217687237691 + 0.23515781271551156im,2.7755575615628914e-17),Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}(Base.Order.ForwardOrdering())) has been moved to the package DataStructures.jl.
  Run Pkg.add("DataStructures") to install DataStructures on Julia v0.6 and later, and then run `using DataStructures`.
  Stacktrace:
   [1] do_quadgk(::##1#7, ::Array{Float64,1}, ::Int64, ::Type{Float64}, ::Float64, ::Float64, ::Int64, ::Base.LinAlg.#vecnorm) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:125
   [2] #quadgk#13(::Float64, ::Float64, ::Int64, ::Int64, ::Function, ::Function, ::Function, ::Float64, ::Float64, ::Float64, ::Vararg{Float64,N}) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:162
   [3] quadgk(::Function, ::Float64, ::Float64, ::Float64, ::Vararg{Float64,N}) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:162
   [4] #quadgk#15(::Array{Any,1}, ::Function, ::Function, ::Int64, ::Float64, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:235
   [5] macro expansion; at /home/vagrant/.julia/v0.6/QuadGK/test/runtests.jl:10 [inlined]
   [6] macro expansion; at ./test.jl:750 [inlined]
   [7] anonymous at ./<missing>:?
quadgk: Error During Test
  Test threw an exception of type ErrorException
  Expression: (quadgk((x->begin 
                exp(im * x)
            end),0,1im))[1] ≈ (-1im) * expm1(-1)
  Base.Collections.heappush!(QuadGK.Segment[],QuadGK.Segment(0.0 + 0.0im,0.0 + 1.0im,0.0 + 0.6321205588285577im,0.0),Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}(Base.Order.ForwardOrdering())) has been moved to the package DataStructures.jl.
  Run Pkg.add("DataStructures") to install DataStructures on Julia v0.6 and later, and then run `using DataStructures`.
  Stacktrace:
   [1] do_quadgk(::##2#8, ::Array{Complex{Float64},1}, ::Int64, ::Type{Float64}, ::Float64, ::Float64, ::Int64, ::Base.LinAlg.#vecnorm) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:125
   [2] #quadgk#15(::Array{Any,1}, ::Function, ::Function, ::Int64, ::Complex{Int64}) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:235
   [3] macro expansion; at /home/vagrant/.julia/v0.6/QuadGK/test/runtests.jl:11 [inlined]
   [4] macro expansion; at ./test.jl:750 [inlined]
   [5] anonymous at ./<missing>:?
quadgk: Error During Test
  Got an exception of type ErrorException outside of a @test
  Base.Collections.heappush!(QuadGK.Segment[],QuadGK.Segment(0.000000000000000000000000000000000000000000000000000000000000000000000000000000,1.000000000000000000000000000000000000000000000000000000000000000000000000000000,8.414709848078965066525023216302989996225630607983710656727517099919104043912312e-01,2.590850566528333387615905558840119871334800109330884415507111041050577540948728e-77),Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}(Base.Order.ForwardOrdering())) has been moved to the package DataStructures.jl.
  Run Pkg.add("DataStructures") to install DataStructures on Julia v0.6 and later, and then run `using DataStructures`.
  Stacktrace:
   [1] do_quadgk(::Base.#cos, ::Array{BigFloat,1}, ::Int64, ::Type{BigFloat}, ::BigFloat, ::BigFloat, ::Int64, ::Base.LinAlg.#vecnorm) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:125
   [2] (::QuadGK.#kw##quadgk)(::Array{Any,1}, ::QuadGK.#quadgk, ::Function, ::BigFloat, ::BigFloat) at ./<missing>:0
   [3] #quadgk#15(::Array{Any,1}, ::Function, ::Function, ::Int64, ::BigFloat) at /home/vagrant/.julia/v0.6/QuadGK/src/QuadGK.jl:235
   [4] (::QuadGK.#kw##quadgk)(::Array{Any,1}, ::QuadGK.#quadgk, ::Function, ::Int64, ::BigFloat) at ./<missing>:0
   [5] macro expansion; at /home/vagrant/.julia/v0.6/QuadGK/test/runtests.jl:12 [inlined]
   [6] macro expansion; at ./test.jl:750 [inlined]
   [7] anonymous at ./<missing>:?
   [8] include_from_node1(::String) at ./loading.jl:532
   [9] include(::String) at ./sysimg.jl:14
   [10] process_options(::Base.JLOptions) at ./client.jl:308
   [11] _start() at ./client.jl:374
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 4 errored, 0 broken.
while loading /home/vagrant/.julia/v0.6/QuadGK/test/runtests.jl, in expression starting on line 8
===============================[ ERROR: QuadGK ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/QuadGK/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: QuadGK had test errors

>>> End of log
