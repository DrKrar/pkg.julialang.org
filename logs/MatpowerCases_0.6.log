>>> 'Pkg.add("MatpowerCases")' log
INFO: Cloning cache of MatpowerCases from https://github.com/kersulis/MatpowerCases.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing BufferedStreams v0.2.0
INFO: Installing HDF5 v0.7.2
INFO: Installing Libz v0.2.1
INFO: Installing MAT v0.3.1
INFO: Installing MatpowerCases v0.5.0
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Blosc
INFO: Building HDF5
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::SubString{String}) at ./sysimg.jl:14
 [7] evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:13
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:236
 [12] process_options(::Base.JLOptions) at ./client.jl:275
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated

>>> 'Pkg.test("MatpowerCases")' log
Julia Version 0.6.0-dev.1918
Commit cfa2312 (2017-01-04 22:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (573.28125 MB free)
Uptime: 1917.0 sec
Load Avg:  0.96728515625  1.08642578125  0.947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      83175 s        119 s      15125 s      76682 s          2 s
#2  3500 MHz      34500 s         58 s       7944 s     144047 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - MatpowerCases                 0.5.0
9 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - BufferedStreams               0.2.0
 - Compat                        0.10.0
 - HDF5                          0.7.2
 - Libz                          0.2.1
 - MAT                           0.3.1
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing MatpowerCases
Running tests...
- number/case9 check
 CASE9    Power flow data for 9 bus, 3 generator case.
- file check
- key check
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] read_string(::BufferedStreams.BufferedInputStream{Libz.Source{:inflate,BufferedStreams.BufferedInputStream{BufferedStreams.EmptyStream}}}, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:280
 [4] read_matrix(::BufferedStreams.BufferedInputStream{Libz.Source{:inflate,BufferedStreams.BufferedInputStream{BufferedStreams.EmptyStream}}}, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:322
 [5] read_struct(::BufferedStreams.BufferedInputStream{Libz.Source{:inflate,BufferedStreams.BufferedInputStream{BufferedStreams.EmptyStream}}}, ::Bool, ::Array{Int32,1}, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:181
 [6] read_matrix(::BufferedStreams.BufferedInputStream{Libz.Source{:inflate,BufferedStreams.BufferedInputStream{BufferedStreams.EmptyStream}}}, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:318
 [7] read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:295
 [8] read(::MAT.MAT_v5.Matlabv5File) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:345
 [9] matread(::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT.jl:116
 [10] #loadcase#1(::Bool, ::Function, ::String) at /home/vagrant/.julia/v0.6/MatpowerCases/src/loadcase.jl:23
 [11] (::MatpowerCases.#kw##loadcase)(::Array{Any,1}, ::MatpowerCases.#loadcase, ::String) at ./<missing>:0
 [12] macro expansion; at /home/vagrant/.julia/v0.6/MatpowerCases/test/misc.jl:20 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:532
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:532
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:298
 [19] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/MatpowerCases/test/misc.jl, in expression starting on line 19
- graceful failure test
- extract_branch check
- extract_bus check
- extract_gen check
- extract_gencost check
- extract_case check
INFO: No base MVA found. Guessing 100.0.
INFO: No base MVA found. Guessing 100.0.
INFO: MatpowerCases tests passed

>>> End of log
