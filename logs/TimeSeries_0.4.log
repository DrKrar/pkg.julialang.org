>>> 'Pkg.add("TimeSeries")' log
INFO: Installing TimeSeries v0.5.10
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TimeSeries
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TimeSeries")' log
Julia Version 0.4.0-pre+7304
Commit b3a1be5 (2015-09-05 13:59 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for TimeSeries...
INFO: Installing FactCheck v0.4.0
INFO: Installing MarketData v0.2.6
INFO: Testing TimeSeries
WARNING: module TimeSeries should explicitly import .+ from Base
WARNING: module TimeSeries should explicitly import .- from Base
WARNING: module TimeSeries should explicitly import .* from Base
WARNING: module TimeSeries should explicitly import ./ from Base
WARNING: module TimeSeries should explicitly import .^ from Base
WARNING: module TimeSeries should explicitly import + from Base
WARNING: module TimeSeries should explicitly import - from Base
WARNING: module TimeSeries should explicitly import * from Base
WARNING: module TimeSeries should explicitly import / from Base
WARNING: module TimeSeries should explicitly import ^ from Base
WARNING: module TimeSeries should explicitly import .> from Base
WARNING: module TimeSeries should explicitly import .< from Base
WARNING: module TimeSeries should explicitly import .== from Base
WARNING: module TimeSeries should explicitly import .>= from Base
WARNING: module TimeSeries should explicitly import .<= from Base
WARNING: The `=>` syntax is deprecated, use `-->` instead
field extraction methods work
Out of 4 total facts:
  Verified: 3
  Pending:  1
type constructors enforce invariants
  > unequal length between values and timestamp fails
  > unequal length between colnames and array width fails
  > duplicate timestamp values fails
  > mangled order of timestamp values fails
  > flipping occurs when needed
6 facts verified.
conversion methods
4 facts verified.
getindex methods
  > getindex on single Int and Date
  > getindex on array of Int and Date
  > getindex on range of Int and Date
  > getindex on range of DateTime when only Date is in timestamp
  > getindex on range of Date
  > getindex on single column name
  > getindex on multiple column name
  > getindex on 1d returns 1d object
17 facts verified.
find methods
  > findall returns correct row numbers array
  > findwhen returns correct Dates array
2 facts verified.
split date operations
  > from and to correctly subset
  > bydate methods correctly subset
7 facts verified.
element wrappers
  > type element wrappers isolate elements
4 facts verified.
time series methods
  > lag takes previous day and timestamps it to next day
  > lag accepts kwarg
  > lag operates on 2d arrays
  > lag returns 1d from 1d time arrays
  > lag returns 2d from 2d time arrays
  > lead takes next day and timestamps it to current day
  > lead accepts kwarg
  > lead operates on 2d arrays
  > lead returns 1d from 1d time arrays
  > lead returns 2d from 2d time arrays
  > correct simple return value
  > correct log return value
  > moving supplies correct window length
  > upto method accumulates
20 facts verified.
base element-wise operators on TimeArray values
  > correct alignment and operation between two TimeVectors
    Failure :: (line:-1) :: correct alignment and operation between two TimeVectors :: fact was false
      Expression: cl .* op.values[1] --> roughly(11740.27)
        Expected: 11740.267199999998 ≅ 11740.27
    Failure :: (line:-1) :: correct alignment and operation between two TimeVectors :: fact was false
      Expression: cl ./ op.values[1] --> roughly(1.067315)
        Expected: 1.0673150266971778 ≅ 1.067315
  > only values on intersecting Dates computed
    Failure :: (line:-1) :: only values on intersecting Dates computed :: fact was false
      Expression: cl[1:2] ./ op[2:3].values[1] --> roughly(0.946882)
        Expected: 0.9468822170900693 ≅ 0.946882
  > correct dot operation between TimeVectors values and Int/Float64 and viceversa
  > element-wise mathematical operations between 2d time array and 1d time array
    Failure :: (line:-1) :: element-wise mathematical operations between 2d time array and 1d time array :: fact was false
      Expression: ohlc .* cl.values[1,1] --> roughly(11740.27)
        Expected: 11740.267199999998 ≅ 11740.27
  > correct non-dot operation between TimeVectors values and Int/Float64 and viceversa
  > correct operation between two TimeVectors values returns bool for comparisons
  > correct operation between TimeVectors values and Int/Float64 (and viceversa) returns bool for comparison
Out of 47 total facts:
  Verified: 41
  Failed:   4
  Pending:  2
basecall works with Base methods
  > cumsum works
  > log works
2 facts verified.
collapse operations
  > collapse squishes correctly
4 facts verified.
merge works correctly
  > takes colnames kwarg correctly
  > returns correct alignment with Dates and values
  > aligns with disparate sized objects
  > column names match the correct values
19 facts verified.
construction with and without meta field
  > default meta field to Nothing
  > allow objects in meta field
Out of 3 total facts:
  Verified: 1
  Pending:  2
get index operations preserve meta
  > index by integer row
  > index by integer range
  > index by column name
  > index by date range
4 facts verified.
split operations preserve meta
  > by
  > from
  > to
3 facts verified.
apply operations preserve meta
  > lag
  > lead
  > percentchange
  > moving
  > upto
5 facts verified.
combine operations preserve meta
  > merge when both have identical meta
  > merge when both have different meta
  > collapse
3 facts verified.
basecall operations preserve meta
  > basecall
1 fact verified.
mathematical and comparison operations preserve meta
  > .+
  > .<
2 facts verified.
readwrite accepts meta argument
  > Apple is present
1 fact verified.
readwrite parses csv file correctly
  > 1d values array works
  > 2d values array works
  > Specifying DateTime string format for reading
  > timestamp parses to correct type
  > readtimearray accepts meta field
Out of 9 total facts:
  Verified: 8
  Pending:  1
const values are set the package defaults
  > SHOWINT
  > DECIMALS
2 facts verified.
ERROR: LoadError: FactCheck finished with 4 non-successful tests.
 in error at ./error.jl:21
 in exitstatus at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:563
 in include at ./boot.jl:260
 in include_from_node1 at ./loading.jl:271
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/TimeSeries/test/runtests.jl, in expression starting on line 11
=============================[ ERROR: TimeSeries ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/TimeSeries/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.0
INFO: Removing MarketData v0.2.6
ERROR: TimeSeries had test errors
 in error at ./error.jl:21
 [inlined code] from pkg/entry.jl:753
 in __test#412__ at no file:0
 in test at no file
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 [inlined code] from pkg/dir.jl:31
 in __cd#396__ at no file:0
 in cd at no file
 in __test#420__ at no file
 in test at no file
 in process_options at ./client.jl:284
 in _start at ./client.jl:411

>>> End of log
