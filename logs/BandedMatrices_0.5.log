>>> 'Pkg.add("BandedMatrices")' log
INFO: Cloning cache of BandedMatrices from https://github.com/ApproxFun/BandedMatrices.jl.git
INFO: Installing BandedMatrices v0.0.3
INFO: Package database updated

>>> 'Pkg.test("BandedMatrices")' log
Julia Version 0.5.0-dev+4946
Commit 68e1dd4* (2016-06-26 23:37 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing BandedMatrices
Julia Version 0.5.0-dev+4946
Commit 68e1dd4* (2016-06-26 23:37 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Error During Test
  Test threw an exception of type MethodError
  Expression: full(A) \ copy(b) â‰ˆ lufact(A) \ copy(b)
  MethodError: \(::BandedMatrices.BandedLU{Float64}, ::Array{Complex{Float64},1}) is ambiguous. Candidates:
    \{T<:Number,S<:Number}(A::BandedMatrices.BandedLU{T}, B::Union{Base.ReshapedArray{S,1,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N<:Any}}},Base.ReshapedArray{S,2,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N<:Any}}},DenseArray{S,1},DenseArray{S,2},SubArray{S,1,A<:Union{Base.ReshapedArray{T<:Any,N<:Any,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N<:Any}}},DenseArray},I<:Tuple{Vararg{Union{Base.AbstractCartesianIndex,Colon,Int64,Range{Int64}},N<:Any}},L<:Any},SubArray{S,2,A<:Union{Base.ReshapedArray{T<:Any,N<:Any,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N<:Any}}},DenseArray},I<:Tuple{Vararg{Union{Base.AbstractCartesianIndex,Colon,Int64,Range{Int64}},N<:Any}},L<:Any}}) at /home/vagrant/.julia/v0.5/BandedMatrices/src/blas.jl:474
    \{T<:Union{Float32,Float64}}(F::Factorization{T}, B::Union{Array{Complex{T},1},Array{Complex{T},2}}) at linalg/factorization.jl:27
   in macro expansion; at /home/vagrant/.julia/v0.5/BandedMatrices/test/test_bandedlu.jl:53 [inlined]
   in anonymous at ./<missing>:31
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:399
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:282
 in macro expansion; at /home/vagrant/.julia/v0.5/BandedMatrices/test/test_bandedlu.jl:53 [inlined]
 in anonymous at ./<missing>:31
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/BandedMatrices/test/test_bandedlu.jl, in expression starting on line 30
while loading /home/vagrant/.julia/v0.5/BandedMatrices/test/runtests.jl, in expression starting on line 5
===========================[ ERROR: BandedMatrices ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/BandedMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: BandedMatrices had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
