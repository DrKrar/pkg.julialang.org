>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (472.6484375 MB free)
Uptime: 5854.0 sec
Load Avg:  0.98193359375  1.4716796875  1.63671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     251527 s         16 s      33278 s     252103 s          7 s
#2  3507 MHz     145559 s        151 s      25915 s     397926 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.452005 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.338587; 0.0 0.142445 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.50833; 0.0 0.0 0.572424 0.0 0.0 0.0 0.0 0.0 0.0 0.753448; 0.0 0.0 0.0 0.640691 0.0 0.0 0.0 0.0 0.0 0.680747; 0.0 0.0 0.0 0.0 0.457018 0.0 0.0 0.0 0.0 0.240821; 0.0 0.0 0.0 0.0 0.0 0.653305 0.0 0.0 0.0 0.458288; 0.0 0.0 0.0 0.0 0.0 0.0 0.467121 0.0 0.0 0.722755; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0694991 0.0 0.692024; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.790245 0.665222; 0.338587 0.50833 0.753448 0.680747 0.240821 0.458288 0.722755 0.692024 0.665222 0.470288]
(U,Lambda) = eig(full(A)) = ([-1.30676,0.108396,0.219291,0.45378,0.458223,0.51253,0.60882,0.649801,0.754763,2.2562],
[-0.134925 0.0419466 0.155645 -0.900052 -0.244542 -0.247333 0.0669079 0.0113279 -0.0535886 0.1314; -0.245835 0.635527 -0.707637 -0.00770212 -0.00722944 -0.0607283 0.0337757 0.00663025 -0.0397801 0.168383; -0.281004 0.0691194 0.228245 0.0299569 0.0296295 0.556182 0.641504 0.0644376 -0.198003 0.313312; -0.24499 0.0544408 0.172814 0.0171808 0.0167549 0.234843 -0.661883 0.494482 -0.285958 0.295043; -0.0956929 0.0294056 0.108368 0.350779 -0.897569 -0.191803 0.04916 0.00826653 -0.0387568 0.0937191; -0.163869 0.0358018 0.112959 0.0108351 0.0105503 0.143933 -0.319241 -0.865633 -0.216445 0.20019; -0.285559 0.0857671 0.311978 0.255559 0.364804 -0.703707 0.158059 0.0261816 -0.120403 0.282859; -0.352411 -0.757341 -0.494218 -0.00849502 -0.00799504 -0.0690611 0.0397619 0.00789158 -0.0483905 0.221585; -0.222329 0.0415307 0.124638 0.00932649 0.00899789 0.105905 -0.113622 -0.0313445 0.898378 0.317727; 0.700856 -0.0425687 -0.106976 -0.00471729 -0.00449098 -0.0442127 0.030988 0.00661755 -0.0479179 0.700177])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
