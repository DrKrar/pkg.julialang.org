>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (605.96875 MB free)
Uptime: 4494.0 sec
Load Avg:  1.08544921875  1.130859375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     212260 s       5731 s      25795 s     155256 s          6 s
#2  3499 MHz      88332 s       1226 s      19302 s     326373 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0718235 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.673485; 0.0 0.280567 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.492479; 0.0 0.0 0.262329 0.0 0.0 0.0 0.0 0.0 0.0 0.162152; 0.0 0.0 0.0 0.665078 0.0 0.0 0.0 0.0 0.0 0.623585; 0.0 0.0 0.0 0.0 0.59307 0.0 0.0 0.0 0.0 0.328037; 0.0 0.0 0.0 0.0 0.0 0.149565 0.0 0.0 0.0 0.216063; 0.0 0.0 0.0 0.0 0.0 0.0 0.114082 0.0 0.0 0.2342; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.53805 0.0 0.796704; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0751561 0.726566; 0.673485 0.492479 0.162152 0.623585 0.328037 0.216063 0.2342 0.796704 0.726566 0.368224]
(U,Lambda) = eig(full(A)) = ([-1.24474,0.073349,0.111469,0.145339,0.221646,0.264414,0.38528,0.58398,0.632437,1.94478],
[-0.355342 0.739286 0.181425 0.17061 0.361793 -0.0417189 0.25462 -0.0321751 -0.0530732 -0.252682; -0.22428 -0.00397975 -0.0311037 -0.0678233 -0.672706 0.363736 0.557347 -0.0397143 -0.0618323 -0.207947; -0.0747393 -0.00143681 -0.0114791 -0.0258124 -0.32078 -0.927995 0.15629 -0.0123348 -0.0193555 -0.0677256; -0.226811 -0.00176468 -0.0120297 -0.0223443 -0.113182 0.0185676 -0.264116 0.188139 0.844008 -0.342421; -0.123989 -0.00105693 -0.0072744 -0.0136446 -0.071082 0.0119075 -0.187086 0.882943 -0.368131 -0.170535; -0.107642 -0.00474708 -0.0605703 -0.952116 0.241252 -0.0224437 0.108626 -0.0121694 -0.0197678 -0.0845741; -0.119725 -0.0096279 -0.95705 0.139541 0.175239 -0.0185856 0.102339 -0.0121949 -0.0199605 -0.0898968; -0.310425 -0.0028709 -0.0199461 -0.0377816 -0.202657 0.0347347 -0.618019 -0.424423 -0.372903 -0.397979; -0.38238 -0.673282 0.213687 0.192797 0.399187 -0.0457995 0.27764 -0.0349383 -0.0575985 -0.273083; 0.694643 0.00167453 0.0106798 0.0186233 0.0804837 -0.01193 0.118506 -0.0244677 -0.0441784 -0.702704])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
