>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (700.31640625 MB free)
Uptime: 3986.0 sec
Load Avg:  0.9833984375  0.931640625  0.91015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     163946 s        104 s      26560 s     159677 s          4 s
#2  3500 MHz      92790 s         73 s      21257 s     267148 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.125146 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.215676; 0.0 0.604894 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.210411; 0.0 0.0 0.678685 0.0 0.0 0.0 0.0 0.0 0.0 0.327736; 0.0 0.0 0.0 0.170715 0.0 0.0 0.0 0.0 0.0 0.625168; 0.0 0.0 0.0 0.0 0.0571878 0.0 0.0 0.0 0.0 0.636957; 0.0 0.0 0.0 0.0 0.0 0.513796 0.0 0.0 0.0 0.402742; 0.0 0.0 0.0 0.0 0.0 0.0 0.919072 0.0 0.0 0.329355; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.332223 0.0 0.132727; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.138155 0.573039; 0.215676 0.210411 0.327736 0.625168 0.636957 0.402742 0.329355 0.132727 0.573039 0.995505]
(U,Lambda) = eig(full(A)) = ([-0.72261,0.0890898,0.12662,0.155061,0.32874,0.461884,0.592159,0.653552,0.880715,1.97017],
[-0.149217 0.237879 0.94121 -0.135244 0.027434 0.0725974 -0.0257585 -0.028579 0.0316662 0.0920574; -0.0929651 0.0162225 -0.00283076 0.00877462 -0.019732 -0.166768 0.921542 -0.302781 0.0846272 0.121369; -0.137177 0.0221056 -0.00381982 0.0117412 -0.0242536 -0.171345 0.211263 0.913038 0.17996 0.199845; -0.410463 0.304581 -0.0912254 0.749161 0.102453 0.243368 -0.0827379 -0.0906587 0.0976803 0.273599; -0.479087 -0.794009 0.0590277 -0.122083 0.0607446 0.178399 -0.0664089 -0.0747844 0.0858025 0.262215; -0.191052 0.0377113 -0.00669311 0.0210602 -0.0563605 -0.879358 -0.286659 -0.201777 0.121766 0.217777; -0.117669 0.0157808 -0.00267425 0.00808677 -0.0144484 -0.0816546 0.0561926 0.086852 -0.952556 0.246763; -0.0738011 0.0217095 -0.00415375 0.014054 -0.986896 0.116028 -0.0284801 -0.0289217 0.0268447 0.0638144; -0.390469 0.464455 -0.319662 -0.635838 0.0778658 0.200638 -0.0703998 -0.0778494 0.0856093 0.246328; 0.586524 -0.0397679 0.00643442 -0.018759 0.0258971 0.113347 -0.0557759 -0.0700184 0.110935 0.787512])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
