>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (459.421875 MB free)
Uptime: 4992.0 sec
Load Avg:  1.00634765625  1.5556640625  1.705078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     243037 s        128 s      35268 s     171012 s         10 s
#2  3504 MHz     141128 s         37 s      25963 s     318222 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.237088 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.971586; 0.0 0.460125 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.334704; 0.0 0.0 0.982968 0.0 0.0 0.0 0.0 0.0 0.0 0.453716; 0.0 0.0 0.0 0.0263684 0.0 0.0 0.0 0.0 0.0 0.637498; 0.0 0.0 0.0 0.0 0.901526 0.0 0.0 0.0 0.0 0.822722; 0.0 0.0 0.0 0.0 0.0 0.058589 0.0 0.0 0.0 0.0271812; 0.0 0.0 0.0 0.0 0.0 0.0 0.324675 0.0 0.0 0.968944; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.376633 0.0 0.459305; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.637992 0.835161; 0.971586 0.334704 0.453716 0.637498 0.822722 0.0271812 0.968944 0.459305 0.835161 0.718336]
(U,Lambda) = eig(full(A)) = ([-1.48477,0.0580978,0.0622813,0.276989,0.368168,0.449468,0.551772,0.812317,0.969712,2.66026],
[-0.382048 0.0915544 -0.270891 0.753122 0.12483 -0.135823 -0.251345 -0.150741 -0.0363657 -0.289537; -0.11652 0.0140421 -0.0410034 -0.0565269 -0.0612988 0.932531 -0.297307 -0.0848152 -0.0180109 -0.109855; -0.124485 0.00827426 -0.0240183 -0.0198774 -0.0124286 0.0252497 0.0856589 0.237283 0.938549 -0.195336; -0.285633 -0.338878 0.865165 0.0786738 0.031411 -0.0447345 -0.0987756 -0.0723897 -0.0185311 -0.174779; -0.233433 0.0164525 -0.0477788 -0.0407439 -0.0259782 0.0540339 0.191494 0.823075 -0.330861 -0.3378; -0.0119244 0.933284 0.35879 0.00384933 0.00147867 -0.00206459 -0.00448668 -0.00321845 -0.000818058 -0.00754439; -0.362566 0.0613059 -0.179977 -0.62845 0.375194 -0.230523 -0.347337 -0.177333 -0.0411914 -0.299579; -0.167069 0.0243204 -0.0712126 -0.142567 -0.913822 -0.187225 -0.213492 -0.0940853 -0.0212364 -0.145239; -0.266381 0.0242911 -0.0707028 -0.0715527 -0.052127 0.131526 0.788544 -0.427566 -0.0690383 -0.298222; 0.677069 -0.0168666 0.0487383 0.0309291 0.0168412 -0.0296898 -0.0814074 -0.0892468 -0.0274215 -0.722117])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
