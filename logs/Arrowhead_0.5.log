>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (468.3203125 MB free)
Uptime: 4999.0 sec
Load Avg:  1.0107421875  1.5068359375  1.67138671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     264581 s        118 s      31260 s     154176 s         12 s
#2  3499 MHz     118676 s         54 s      25964 s     340681 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.54277 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.437045; 0.0 0.303455 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.532019; 0.0 0.0 0.514853 0.0 0.0 0.0 0.0 0.0 0.0 0.320587; 0.0 0.0 0.0 0.518906 0.0 0.0 0.0 0.0 0.0 0.0196282; 0.0 0.0 0.0 0.0 0.261494 0.0 0.0 0.0 0.0 0.812698; 0.0 0.0 0.0 0.0 0.0 0.638788 0.0 0.0 0.0 0.572552; 0.0 0.0 0.0 0.0 0.0 0.0 0.262099 0.0 0.0 0.21204; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.753702 0.0 0.0214059; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.663781 0.177387; 0.437045 0.532019 0.320587 0.0196282 0.812698 0.572552 0.21204 0.0214059 0.177387 0.952847]
(U,Lambda) = eig(full(A)) = ([-0.648167,0.26206,0.290859,0.456813,0.518886,0.525439,0.596586,0.66214,0.753635,1.99444],
[-0.227924 0.000275302 0.033938 -0.511956 0.0188117 0.629252 0.482721 -0.0329969 0.00651943 0.233102; -0.347227 0.00227257 0.826231 0.349307 -0.0025388 -0.0598016 0.107883 -0.0133677 0.00371731 0.243599; -0.171203 0.000224245 0.0279972 -0.556165 -0.0817292 -0.755647 0.233149 -0.0196167 0.00422312 0.167762; -0.0104456 1.35129e-5 0.00168369 -0.0318292 0.996455 -0.0749646 0.0150195 -0.00123503 0.000263029 0.0102996; -0.554882 -0.254124 -0.541385 0.41896 -0.00324596 -0.0768287 0.144162 -0.0182815 0.00519431 0.363104; -0.276314 0.000268737 0.0321906 -0.316802 0.00490901 0.126039 -0.806432 -0.220975 0.0156814 0.327005; -0.144678 0.967169 -0.14422 0.10965 -0.000848893 -0.0200913 0.0376812 -0.00477701 0.00135691 0.0947703; -0.00948371 7.69886e-6 0.000904703 -0.00725983 9.37159e-5 0.00233995 -0.00809843 0.00210698 -0.999801 0.013358; -0.0839761 7.80796e-5 0.00930483 -0.0862987 0.00125856 0.0319945 -0.156918 0.974204 0.00620971 0.103215; 0.621086 -0.000176824 -0.0195616 0.10069 -0.00102803 -0.0249521 0.0594411 -0.00901246 0.00314549 0.774263])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
