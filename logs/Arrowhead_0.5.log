>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (741.71484375 MB free)
Uptime: 3611.0 sec
Load Avg:  1.01318359375  0.97900390625  0.91162109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     135608 s         54 s      27272 s     151157 s          8 s
#2  3501 MHz      65276 s         88 s      19674 s     260988 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.627227 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.749255; 0.0 0.899822 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0105023; 0.0 0.0 0.746332 0.0 0.0 0.0 0.0 0.0 0.0 0.662165; 0.0 0.0 0.0 0.655297 0.0 0.0 0.0 0.0 0.0 0.564018; 0.0 0.0 0.0 0.0 0.230604 0.0 0.0 0.0 0.0 0.39396; 0.0 0.0 0.0 0.0 0.0 0.152478 0.0 0.0 0.0 0.227672; 0.0 0.0 0.0 0.0 0.0 0.0 0.33462 0.0 0.0 0.459288; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.172919 0.0 0.261776; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.959787 0.937815; 0.749255 0.0105023 0.662165 0.564018 0.39396 0.227672 0.459288 0.261776 0.937815 0.541236]
(U,Lambda) = eig(full(A)) = ([-1.04204,0.15721,0.183451,0.258073,0.38209,0.643877,0.70603,0.856519,0.899836,2.27528],
[-0.320742 0.0310489 -0.0612827 0.124318 0.275067 -0.669346 0.424683 -0.276565 -0.00358774 0.310497; -0.00386473 0.000275456 -0.000532131 0.00100237 0.00182556 0.000610365 -0.00242064 0.0205269 -0.999763 0.00521478; -0.264582 0.0218922 -0.0426993 0.0830666 0.163604 0.0961358 -0.733877 -0.508618 -0.00563091 0.295782; -0.237453 0.0220555 -0.0433875 0.0869698 0.185788 0.734682 0.496568 -0.237232 -0.00301076 0.237783; -0.221206 0.104549 -0.303258 -0.878448 -0.234044 -0.0141797 0.0370126 -0.0532713 -0.000768435 0.131591; -0.136197 -0.937209 0.26681 -0.132061 -0.0892344 -0.00689169 0.018371 -0.0273696 -0.000397661 0.0732483; -0.238402 0.0504238 -0.110279 0.367509 -0.870738 -0.0220911 0.0552348 -0.0744828 -0.00106073 0.161634; -0.153964 0.32456 0.902211 -0.188294 -0.112628 -0.00826798 0.0219328 -0.0324105 -0.000470086 0.0850396; -0.334767 0.0227593 -0.0438469 0.0818592 0.146095 0.0441576 -0.165075 0.768617 0.0204199 0.486886; 0.714584 -0.0194773 0.0362971 -0.0612506 -0.0899948 -0.0148748 0.0446664 -0.0846364 -0.00130537 0.682965])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
