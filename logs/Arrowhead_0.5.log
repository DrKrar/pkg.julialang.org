>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (464.98828125 MB free)
Uptime: 5057.0 sec
Load Avg:  0.9970703125  1.52734375  1.6962890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3512 MHz     266227 s         60 s      34606 s     153662 s          8 s
#2  3512 MHz     116899 s         97 s      25690 s     348575 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.586034 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.94836; 0.0 0.0800687 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.994049; 0.0 0.0 0.343649 0.0 0.0 0.0 0.0 0.0 0.0 0.233065; 0.0 0.0 0.0 0.216099 0.0 0.0 0.0 0.0 0.0 0.755306; 0.0 0.0 0.0 0.0 0.399578 0.0 0.0 0.0 0.0 0.290429; 0.0 0.0 0.0 0.0 0.0 0.218394 0.0 0.0 0.0 0.163051; 0.0 0.0 0.0 0.0 0.0 0.0 0.78196 0.0 0.0 0.0973667; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.983276 0.0 0.752235; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.33086 0.396346; 0.94836 0.994049 0.233065 0.755306 0.290429 0.163051 0.0973667 0.752235 0.396346 0.895146]
(U,Lambda) = eig(full(A)) = ([-1.22348,0.1546,0.218293,0.303073,0.340784,0.385495,0.462809,0.780112,0.88541,2.52797],
[-0.33958 -0.117511 0.00156717 -0.177135 -0.0424227 0.198881 0.724243 -0.0920148 0.366004 0.362202; -0.494096 0.712998 -0.00437026 0.235588 0.0418288 -0.136874 -0.244409 -0.0267388 0.142612 0.30118; -0.0963615 -0.0659055 0.00112984 -0.303577 -0.892545 -0.234226 -0.18406 -0.0100552 0.0497047 0.0791357; -0.339952 -0.656555 -0.209219 0.45898 0.0664575 -0.187516 -0.288104 -0.025217 0.130384 0.24231; -0.115941 -0.0633771 0.000973563 -0.159056 -0.054193 0.867326 -0.43224 -0.0143716 0.0690689 0.101205; -0.0732701 -0.136634 0.977854 0.101767 0.0146155 -0.0410358 -0.0627783 -0.00546594 0.0282433 0.0523604; -0.0314581 -0.00829683 0.000104972 -0.0107457 -0.00242121 0.0103282 0.0287095 0.992146 0.108745 0.0413595; -0.220867 -0.0485274 0.000597566 -0.0584485 -0.0128446 0.0529213 0.13601 0.0697213 -0.888071 0.361179; -0.165219 -0.12021 0.00213968 -0.75387 0.438127 -0.305081 -0.28267 -0.0166128 0.0825774 0.133793; 0.647936 0.0534587 -0.000607693 0.0528516 0.0109707 -0.0420551 -0.094105 -0.0188304 0.115539 0.741673])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
