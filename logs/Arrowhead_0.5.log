>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (445.6171875 MB free)
Uptime: 5905.0 sec
Load Avg:  0.9521484375  1.52099609375  1.7763671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     243624 s       4190 s      32190 s     258919 s         18 s
#2  3500 MHz     155535 s       2939 s      26350 s     388965 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.17.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.379302 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.200697; 0.0 0.00183457 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.932006; 0.0 0.0 0.502039 0.0 0.0 0.0 0.0 0.0 0.0 0.323794; 0.0 0.0 0.0 0.634558 0.0 0.0 0.0 0.0 0.0 0.372429; 0.0 0.0 0.0 0.0 0.232264 0.0 0.0 0.0 0.0 0.412858; 0.0 0.0 0.0 0.0 0.0 0.47952 0.0 0.0 0.0 0.759086; 0.0 0.0 0.0 0.0 0.0 0.0 0.783487 0.0 0.0 0.781637; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.868621 0.0 0.230728; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.485899 0.40005; 0.200697 0.932006 0.323794 0.372429 0.412858 0.759086 0.781637 0.230728 0.40005 0.134787]
(U,Lambda) = eig(full(A)) = ([-1.41559,0.146744,0.282785,0.384601,0.484449,0.499408,0.605981,0.696811,0.863806,1.95332],
[-0.080899 -0.0989705 -0.200301 0.964445 0.00603024 -0.0126287 0.055749 0.0531441 -0.00845177 -0.0847652; -0.475728 0.737598 0.319549 0.0620033 0.00610105 -0.0141561 0.0971365 0.11275 -0.0220612 -0.317496; -0.122164 -0.104514 -0.142256 -0.0702089 -0.0581544 0.930195 0.196148 0.139769 -0.0182618 -0.148321; -0.131431 -0.087556 -0.101983 -0.0379411 -0.00783831 0.0208262 -0.820602 0.502981 -0.0331467 -0.187742; -0.181268 -0.553641 0.787189 0.069012 0.00517211 -0.0116798 0.0695607 0.0747204 -0.0133383 -0.159474; -0.289799 -0.261598 -0.371669 -0.203643 0.486606 -0.288459 0.377956 0.29371 -0.0403032 -0.342403; -0.257161 -0.140779 -0.150375 -0.0498985 -0.00825781 0.0207945 -0.277267 -0.758183 -0.198559 -0.444188; -0.0730808 -0.036655 -0.0379378 -0.0121386 -0.0018974 0.00472286 -0.0553152 -0.112906 0.977701 -0.141409; -0.152216 -0.135273 -0.189724 -0.100565 -0.871544 -0.2238 0.209769 0.159471 -0.0215989 -0.181236; 0.723503 0.114682 0.0963271 0.0254642 0.00315926 -0.00755756 0.0629659 0.0840752 -0.0204034 -0.664791])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
