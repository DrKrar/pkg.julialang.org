>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (446.4453125 MB free)
Uptime: 4782.0 sec
Load Avg:  1.09375  1.619140625  1.7197265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     252600 s        405 s      33492 s     139545 s          7 s
#2  3499 MHz     110725 s       6411 s      25179 s     321794 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.988222 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.402292; 0.0 0.888552 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.346054; 0.0 0.0 0.675126 0.0 0.0 0.0 0.0 0.0 0.0 0.0762093; 0.0 0.0 0.0 0.876032 0.0 0.0 0.0 0.0 0.0 0.333742; 0.0 0.0 0.0 0.0 0.271528 0.0 0.0 0.0 0.0 0.554834; 0.0 0.0 0.0 0.0 0.0 0.295651 0.0 0.0 0.0 0.945976; 0.0 0.0 0.0 0.0 0.0 0.0 0.58891 0.0 0.0 0.0869792; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.886168 0.0 0.488786; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.067315 0.106033; 0.402292 0.346054 0.0762093 0.333742 0.554834 0.945976 0.0869792 0.488786 0.106033 0.0299986]
(U,Lambda) = eig(full(A)) = ([-1.13803,0.0691034,0.27759,0.583958,0.654369,0.687554,0.87858,0.887787,0.964401,1.70219],
[-0.142898 -0.00735418 -0.0053676 0.0547435 -0.201727 -0.171372 0.024449 0.00735128 0.88627 -0.346858; -0.128968 -0.00709557 -0.00537049 0.0625 -0.247382 -0.220516 0.23124 0.830788 -0.239431 -0.26182; -0.0317449 -0.00211292 -0.00181767 0.0459858 -0.614632 0.785375 -0.00249596 -0.000657695 -0.0138256 -0.0456772; -0.125152 -0.00694928 -0.00528777 0.0628601 -0.252056 -0.226797 -0.872642 -0.052103 -0.198196 -0.248677; -0.297291 -0.0460536 0.86782 -0.0976936 0.242619 0.170816 -0.00609023 -0.00165236 -0.042024 -0.238734; -0.498343 -0.0701592 -0.49661 -0.180502 0.441477 0.309163 -0.0108134 -0.002932 -0.0742342 -0.414016; -0.0380399 -0.0028115 -0.00264906 0.966352 0.222448 0.112935 -0.00200082 -0.000534106 -0.0121563 -0.0480949; -0.182376 -0.0100514 -0.00761529 0.0889747 -0.353009 -0.315207 0.429206 -0.554083 -0.327883 -0.368728; -0.0664403 0.996197 0.00478121 -0.0112903 0.0302373 0.0218962 -0.000870914 -0.000237183 -0.0062029 -0.039925; 0.755266 0.0168021 0.00948165 -0.0550118 0.167409 0.128081 -0.00666341 -0.00183529 -0.0524792 -0.615583])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
