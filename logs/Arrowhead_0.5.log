>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (723.41015625 MB free)
Uptime: 4416.0 sec
Load Avg:  0.9970703125  0.9853515625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     188185 s         96 s      24756 s     183321 s          6 s
#2  3499 MHz      91189 s         59 s      23295 s     310179 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.1
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.551957 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.796917; 0.0 0.281971 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.657833; 0.0 0.0 0.188083 0.0 0.0 0.0 0.0 0.0 0.0 0.308896; 0.0 0.0 0.0 0.452238 0.0 0.0 0.0 0.0 0.0 0.548547; 0.0 0.0 0.0 0.0 0.348496 0.0 0.0 0.0 0.0 0.922113; 0.0 0.0 0.0 0.0 0.0 0.625048 0.0 0.0 0.0 0.872404; 0.0 0.0 0.0 0.0 0.0 0.0 0.368147 0.0 0.0 0.51518; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.106234 0.0 0.809245; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.463472 0.791573; 0.796917 0.657833 0.308896 0.548547 0.922113 0.872404 0.51518 0.809245 0.791573 0.828247]
(U,Lambda) = eig(full(A)) = ([-1.5536,0.146371,0.196457,0.298294,0.363006,0.409641,0.456031,0.519103,0.598073,2.78051],
[-0.253062 -0.0854504 0.0565829 0.0686326 0.0352818 0.192291 -0.0461178 0.774755 0.458491 -0.264459; -0.239621 -0.21098 0.194173 -0.880451 -0.0679093 -0.17694 0.02098 -0.0886065 0.0552147 -0.194714; -0.118583 -0.322064 -0.931053 -0.0612299 -0.0147724 -0.0478766 0.00639957 -0.0298056 0.0199896 -0.08812; -0.182851 -0.0779948 0.0541324 0.0778441 0.0514258 0.442222 0.802688 -0.262031 0.0997971 -0.17424; -0.324139 -0.198403 0.153088 0.401267 -0.531623 -0.517871 0.0476018 -0.172634 0.098027 -0.280406; -0.267738 -0.0792609 0.0513791 0.0583273 0.0278505 0.139078 -0.0286536 0.263014 -0.858067 -0.299327; -0.179243 -0.101025 0.0757401 0.161119 0.838315 -0.426354 0.0325415 -0.109006 0.059448 -0.157938; -0.325983 0.87684 -0.2264 -0.0920493 -0.0263645 -0.0915913 0.0128426 -0.0626049 0.0436539 -0.223791; -0.262391 -0.108562 0.0748284 0.104692 0.0659108 0.504961 -0.590544 -0.454482 0.156031 -0.252654; 0.66862 0.0434894 -0.0252413 -0.0218462 -0.0083654 -0.03434 0.00555124 -0.0319404 0.0265317 -0.739553])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
