>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (754.30078125 MB free)
Uptime: 3575.0 sec
Load Avg:  0.9111328125  0.9296875  0.90478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     136792 s         82 s      25425 s     152877 s          9 s
#2  3500 MHz      63311 s         56 s      19748 s     260247 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.697164 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.865394; 0.0 0.608139 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.32216; 0.0 0.0 0.81398 0.0 0.0 0.0 0.0 0.0 0.0 0.46094; 0.0 0.0 0.0 0.526497 0.0 0.0 0.0 0.0 0.0 0.155785; 0.0 0.0 0.0 0.0 0.913234 0.0 0.0 0.0 0.0 0.195281; 0.0 0.0 0.0 0.0 0.0 0.153658 0.0 0.0 0.0 0.370529; 0.0 0.0 0.0 0.0 0.0 0.0 0.003578 0.0 0.0 0.00359624; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.382718 0.0 0.0894503; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.369121 0.511867; 0.865394 0.32216 0.46094 0.155785 0.195281 0.370529 0.00359624 0.0894503 0.511867 0.547472]
(U,Lambda) = eig(full(A)) = ([-0.68254,0.00358277,0.194107,0.382251,0.439542,0.531671,0.619326,0.790373,0.907429,1.82982],
[-0.441046 -0.00165527 0.17368 0.014042 0.380784 -0.168176 0.357399 0.425411 0.119983 0.527948; -0.175513 -0.000706948 0.0785581 0.0072876 0.216605 -0.135494 -0.925713 0.0810021 0.03138 0.182217; -0.21658 -0.00075457 0.0750751 0.00545557 0.139545 -0.052511 0.0761219 -0.89466 0.143795 0.313541; -0.090603 -0.000395229 0.0473186 0.00551859 0.203085 0.968335 -0.0539471 0.0270508 0.0119221 0.0825941; -0.086049 -0.000284799 0.0274163 0.00187926 0.0467319 -0.0164598 0.0213589 -0.0728287 -0.980792 0.147219; -0.31158 -0.00327542 -0.924855 -0.00828259 -0.14692 0.0315243 -0.0255784 0.0266644 0.0143303 0.15275; -0.00368558 0.99999 -0.00190565 -4.85278e-5 -0.000935075 0.000219012 -0.000187747 0.000209431 0.000115991 0.00136071; -0.059045 -0.000312997 0.0478816 0.979749 -0.178442 0.0193135 -0.0121528 0.0100541 0.00496975 0.0427127; -0.342245 -0.00185771 0.295282 -0.199205 -0.823959 0.101274 -0.065764 0.0556762 0.0277204 0.242143; 0.703164 0.00132664 -0.100961 -0.00510983 -0.113357 0.032161 -0.0321461 0.0458199 0.0291523 0.690994])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
