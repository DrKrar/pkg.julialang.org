>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc0+67
Commit 5098f48 (2016-07-30 09:04 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (465.43359375 MB free)
Uptime: 3679.0 sec
Load Avg:  0.9765625  0.9853515625  0.951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     116127 s         68 s      27233 s     187603 s         14 s
#2  3498 MHz      68782 s         78 s      22068 s     257868 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.966339 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.388385; 0.0 0.0884844 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.507541; 0.0 0.0 0.545445 0.0 0.0 0.0 0.0 0.0 0.0 0.530501; 0.0 0.0 0.0 0.0675533 0.0 0.0 0.0 0.0 0.0 0.824803; 0.0 0.0 0.0 0.0 0.071867 0.0 0.0 0.0 0.0 0.183432; 0.0 0.0 0.0 0.0 0.0 0.305589 0.0 0.0 0.0 0.0518078; 0.0 0.0 0.0 0.0 0.0 0.0 0.471141 0.0 0.0 0.0989176; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.570992 0.0 0.949344; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.29719 0.97165; 0.388385 0.507541 0.530501 0.824803 0.183432 0.0518078 0.0989176 0.949344 0.97165 0.706432]
(U,Lambda) = eig(full(A)) = ([-1.30006,0.0716353,0.0824237,0.170105,0.305565,0.435725,0.472976,0.552127,0.93915,2.36138],
[-0.11402 -0.000530929 0.00430482 -0.0369364 0.000270395 0.0621437 -0.0141585 -0.00996268 0.969361 0.204436; -0.243201 -0.0368423 0.820455 0.470876 -0.00107557 -0.124095 0.0237414 0.0116312 -0.0404874 0.163973; -0.191261 -0.00136941 0.0112251 -0.107027 0.00101737 0.4105 -0.13166 0.84357 -0.0914371 0.21452; -0.401274 0.247133 -0.543411 0.609034 -0.00159419 -0.190201 0.0365901 0.0180853 -0.0642158 0.264041; -0.0889608 -0.968262 -0.170234 0.141394 -0.000361084 -0.0428012 0.00822498 0.00405821 -0.0143523 0.058832; -0.0214684 -0.000270843 0.00227443 -0.028956 0.998571 -0.0337996 0.00556667 0.00223279 -0.00554899 0.0185054; -0.0371587 -0.000302833 0.00249312 -0.0248821 0.000274831 0.237131 0.96949 0.0129777 -0.0143425 0.0384272; -0.337592 -0.00232523 0.0190371 -0.179322 0.00164538 0.59586 -0.1742 -0.534682 -0.174983 0.389366; -0.404755 -0.0052688 0.0443249 -0.57896 -0.0533693 -0.595474 0.0994138 0.040496 -0.102709 0.345654; 0.665357 0.00122307 -0.00979722 0.0757238 -0.000460032 -0.084901 0.0179855 0.0106252 -0.067859 0.734315])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
