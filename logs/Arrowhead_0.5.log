>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (807.95703125 MB free)
Uptime: 4731.0 sec
Load Avg:  0.982421875  1.060546875  1.0390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz     168802 s        108 s      28535 s     227918 s          3 s
#2  3497 MHz      98106 s         38 s      19016 s     327425 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.96317 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0498292; 0.0 0.120295 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.863967; 0.0 0.0 0.841908 0.0 0.0 0.0 0.0 0.0 0.0 0.353033; 0.0 0.0 0.0 0.333474 0.0 0.0 0.0 0.0 0.0 0.10872; 0.0 0.0 0.0 0.0 0.674821 0.0 0.0 0.0 0.0 0.396903; 0.0 0.0 0.0 0.0 0.0 0.601585 0.0 0.0 0.0 0.859497; 0.0 0.0 0.0 0.0 0.0 0.0 0.139109 0.0 0.0 0.58304; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.289584 0.0 0.178308; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.693124 0.39274; 0.0498292 0.863967 0.353033 0.10872 0.396903 0.859497 0.58304 0.178308 0.39274 0.399052]
(U,Lambda) = eig(full(A)) = ([-1.14408,0.133057,0.280845,0.328612,0.386045,0.658593,0.68647,0.823502,0.962673,1.94041],
[-0.0164668 0.000509649 -0.00334376 0.00331428 0.0128893 0.00526979 -0.00261101 -0.017781 0.998964 -0.0355104; -0.475841 -0.574787 0.246394 -0.175045 -0.485334 -0.0516989 0.0221249 0.0612327 -0.0102134 -0.330575; -0.123788 0.00422848 -0.0288101 0.0290284 0.11561 0.062033 -0.0329299 -0.955901 -0.0291109 -0.223814; -0.0512396 0.00460574 -0.0945857 0.943721 -0.308732 -0.0107714 0.00446553 0.0110575 -0.00172069 -0.0471175; -0.151955 0.00622012 -0.0461272 0.0483863 0.205182 0.787835 0.493992 0.133045 -0.0137308 -0.218406; -0.342866 0.0155752 -0.122697 0.132892 0.595294 -0.485643 0.146808 0.19303 -0.0237035 -0.447088; -0.316408 0.817985 0.188348 -0.129855 -0.352477 -0.036152 0.0154439 0.0424583 -0.00704988 -0.225416; -0.086609 0.00967178 -0.934263 -0.192827 -0.275952 -0.0155646 0.00651385 0.0166443 -0.00263802 -0.0752212; -0.148864 0.00595374 -0.043617 0.0454747 0.190929 0.366356 -0.855761 0.150131 -0.0145094 -0.219286; 0.696371 -0.00849032 0.045787 -0.0422062 -0.149285 -0.0322112 0.0144989 0.049839 -0.0099582 -0.69642])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
