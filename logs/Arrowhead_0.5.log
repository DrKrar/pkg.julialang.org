>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc2+0
Commit 0350e57 (2016-08-12 11:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (816.26171875 MB free)
Uptime: 5021.0 sec
Load Avg:  1.21484375  1.02685546875  0.978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     182241 s         54 s      31933 s     228685 s          9 s
#2  3503 MHz     106042 s         93 s      20714 s     352484 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.717726 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.850215; 0.0 0.880983 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.804587; 0.0 0.0 0.994171 0.0 0.0 0.0 0.0 0.0 0.0 0.922179; 0.0 0.0 0.0 0.376735 0.0 0.0 0.0 0.0 0.0 0.862459; 0.0 0.0 0.0 0.0 0.0789481 0.0 0.0 0.0 0.0 0.0134414; 0.0 0.0 0.0 0.0 0.0 0.736943 0.0 0.0 0.0 0.157171; 0.0 0.0 0.0 0.0 0.0 0.0 0.335799 0.0 0.0 0.426696; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.104877 0.0 0.60808; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.388889 0.283095; 0.850215 0.804587 0.922179 0.862459 0.0134414 0.157171 0.426696 0.60808 0.283095 0.368371]
(U,Lambda) = eig(full(A)) = ([-1.4197,0.078957,0.153099,0.342673,0.387704,0.522276,0.736223,0.796899,0.940569,2.44474],
[-0.288196 0.000879181 -0.11024 -0.03361 -0.0102359 0.498039 -0.206082 -0.688985 -0.17095 -0.330329; -0.253377 0.000662641 -0.0809248 -0.0221602 -0.00648071 0.256805 0.0249187 0.61393 -0.60502 -0.345237; -0.276791 0.000665559 -0.08027 -0.0209863 -0.00604158 0.223739 0.0160282 0.299923 0.770866 -0.42657; -0.347838 0.00191311 -0.282337 -0.375397 0.312407 -0.678459 -0.0107561 -0.131698 -0.0685373 -0.279834; -0.00649823 -0.999876 0.0132708 0.000755663 0.00017297 -0.00347128 -9.16852e-5 -0.00120118 -0.000698986 -0.00381225; -0.0528012 0.000157779 -0.0197081 -0.00591032 -0.0017881 0.0838257 0.977989 -0.168189 -0.0345843 -0.0617517; -0.176103 0.00109735 -0.170982 0.920367 0.0326624 -0.261976 -0.00477749 -0.0593719 -0.0316131 -0.135759; -0.288976 0.0154958 0.923177 0.0379132 0.00854244 -0.166794 -0.00431812 -0.0563766 -0.0326027 -0.174375; -0.113408 0.000603336 -0.0878977 -0.0908171 -0.949242 -0.24299 -0.00365415 -0.0445163 -0.0229924 -0.0923961; 0.72452 -0.000660532 0.07321 0.0148263 0.00397322 -0.114491 -0.00448334 -0.0641591 -0.0448064 -0.670987])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
