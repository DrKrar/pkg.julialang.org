>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (442.87890625 MB free)
Uptime: 4554.0 sec
Load Avg:  0.994140625  1.62109375  1.7255859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     183446 s        118 s      32926 s     192362 s          5 s
#2  3503 MHz     138227 s         43 s      27650 s     264230 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.98329 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.496071; 0.0 0.560389 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.10471; 0.0 0.0 0.313025 0.0 0.0 0.0 0.0 0.0 0.0 0.196663; 0.0 0.0 0.0 0.317989 0.0 0.0 0.0 0.0 0.0 0.0187432; 0.0 0.0 0.0 0.0 0.130102 0.0 0.0 0.0 0.0 0.721884; 0.0 0.0 0.0 0.0 0.0 0.465216 0.0 0.0 0.0 0.0669212; 0.0 0.0 0.0 0.0 0.0 0.0 0.259057 0.0 0.0 0.0484534; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.628942 0.0 0.270484; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.837109 0.871964; 0.496071 0.10471 0.196663 0.0187432 0.721884 0.0669212 0.0484534 0.270484 0.871964 0.329827]
(U,Lambda) = eig(full(A)) = ([-0.867041,0.257545,0.286248,0.317947,0.386688,0.468307,0.5637,0.648196,0.948877,1.81448],
[-0.193069 0.0208374 -0.0777615 -0.00163048 0.17324 -0.0436637 -0.036766 -0.0985383 0.875102 -0.384003; -0.0528261 0.0105402 -0.0417342 -0.000944486 0.125595 -0.0515444 0.983601 0.0793756 -0.0163624 -0.0537214; -0.120015 0.108061 -0.802503 0.0873681 -0.556241 0.0574078 0.0243972 0.0390557 -0.018776 -0.0842753; -0.0113902 0.0094531 -0.0645226 -0.996126 -0.0568434 0.00565198 0.00237217 0.0037782 -0.00180355 -0.00805859; -0.521347 -0.172677 0.505143 0.00840393 -0.586169 0.0967512 0.0517735 0.0927441 -0.0535228 -0.275751; -0.0361737 0.00982358 -0.0408571 -0.00099373 0.177551 0.981464 0.0211314 0.0243438 -0.00839962 -0.0319122; -0.030986 0.976856 0.194702 0.00179926 -0.0790964 0.0104961 0.00494608 0.00828796 -0.00426408 -0.0200431; -0.130206 0.0222018 -0.0862414 -0.00190198 0.232627 -0.076326 -0.128927 0.935075 -0.0513235 -0.146797; -0.368475 0.0458649 -0.172956 -0.00367293 0.403337 -0.107171 -0.0991775 -0.307231 -0.473604 -0.574022; 0.72014 -0.0304848 0.109265 0.00218684 -0.208347 0.0453283 0.0310976 0.0665622 -0.0607067 -0.643412])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
