>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (433.52734375 MB free)
Uptime: 5483.0 sec
Load Avg:  0.87646484375  1.3828125  1.59033203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     248174 s        104 s      36816 s     210358 s          8 s
#2  3499 MHz     131344 s         38 s      26596 s     373742 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.639008 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.980611; 0.0 0.914554 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.721406; 0.0 0.0 0.8093 0.0 0.0 0.0 0.0 0.0 0.0 0.165187; 0.0 0.0 0.0 0.224068 0.0 0.0 0.0 0.0 0.0 0.278916; 0.0 0.0 0.0 0.0 0.772852 0.0 0.0 0.0 0.0 0.93493; 0.0 0.0 0.0 0.0 0.0 0.273041 0.0 0.0 0.0 0.27775; 0.0 0.0 0.0 0.0 0.0 0.0 0.358872 0.0 0.0 0.616783; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.264348 0.0 0.761495; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.135649 0.0695107; 0.980611 0.721406 0.165187 0.278916 0.93493 0.27775 0.616783 0.761495 0.0695107 0.263917]
(U,Lambda) = eig(full(A)) = ([-1.45787,0.136068,0.227201,0.271918,0.314285,0.440205,0.70793,0.808293,0.87762,2.32996],
[-0.34308 0.0117296 0.0259539 0.0100024 -0.13576 0.457036 -0.684153 -0.0348099 -0.185989 -0.38756; -0.223079 0.00557483 0.0114393 0.00420337 -0.0540285 0.140916 0.167885 0.0407972 0.883972 -0.340622; -0.0534521 0.0014761 0.00309301 0.001151 -0.0150019 0.0414682 0.0783573 0.9858 -0.109424 -0.072597; -0.121656 0.0190675 -0.970444 -0.0218262 0.138987 -0.119569 -0.0277181 -0.0028689 -0.0193142 -0.0885137; -0.307472 0.00883263 0.0186752 0.00698846 -0.0916569 0.260419 0.692472 -0.158522 -0.40386 -0.401268; -0.11772 0.0121989 0.0660397 0.925604 0.302753 -0.153953 -0.0307106 -0.00311831 -0.0207915 -0.0902425; -0.249064 0.0166538 0.0510556 0.0265599 -0.621891 -0.702648 -0.0849663 -0.00824712 -0.0538095 -0.209122; -0.324378 0.0357117 0.223429 -0.376683 0.685545 -0.401221 -0.0825479 -0.00841271 -0.056195 -0.246373; -0.0320012 -0.998824 -0.0082754 -0.00191003 0.0174934 -0.0211476 -0.00584057 -0.000620998 -0.00423983 -0.0211703; 0.733621 -0.00601593 -0.0108994 -0.00374441 0.0449561 -0.0926567 -0.0480853 -0.0060093 -0.0452568 -0.668303])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
