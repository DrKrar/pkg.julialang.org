>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (442.42578125 MB free)
Uptime: 5894.0 sec
Load Avg:  1.009765625  1.58203125  1.78857421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     272974 s       7201 s      37595 s     215238 s         10 s
#2  3501 MHz     127543 s         68 s      29265 s     415937 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.787594 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.163189; 0.0 0.445794 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.730397; 0.0 0.0 0.771422 0.0 0.0 0.0 0.0 0.0 0.0 0.632786; 0.0 0.0 0.0 0.518708 0.0 0.0 0.0 0.0 0.0 0.366319; 0.0 0.0 0.0 0.0 0.366421 0.0 0.0 0.0 0.0 0.892428; 0.0 0.0 0.0 0.0 0.0 0.639715 0.0 0.0 0.0 0.455625; 0.0 0.0 0.0 0.0 0.0 0.0 0.518255 0.0 0.0 0.941032; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.99434 0.0 0.260693; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.515509 0.462988; 0.163189 0.730397 0.632786 0.366319 0.892428 0.455625 0.941032 0.260693 0.462988 0.828671]
(U,Lambda) = eig(full(A)) = ([-1.14572,0.399901,0.470995,0.516003,0.518651,0.62551,0.735523,0.786837,0.98512,2.49361],
[-0.0568968 -0.0129258 -0.0133546 -0.000581181 -8.98736e-5 0.0292477 -0.160054 0.981926 -0.0288315 -0.0702481; -0.309349 -0.488731 0.750924 0.0100623 0.00148489 -0.118063 0.128749 -0.00976374 -0.0472615 -0.261936; -0.222486 -0.0523033 -0.0545719 -0.0023963 -0.000370794 0.125982 -0.900218 -0.18715 -0.103337 -0.269839; -0.148352 -0.0946827 -0.198914 -0.130987 -0.935726 -0.0996382 0.0862872 -0.00622849 -0.0274088 -0.13622; -0.397815 0.81854 0.221107 0.00577069 0.000868315 -0.100062 0.123482 -0.00967743 -0.0503377 -0.308102; -0.172014 -0.058343 -0.0699668 -0.00356233 -0.000557436 0.931782 0.242873 -0.0141187 -0.0460339 -0.180489; -0.381204 -0.244162 -0.515897 -0.404339 0.352047 -0.254876 0.221199 -0.0159733 -0.0703417 -0.349854; -0.0821113 -0.0134672 -0.012906 -0.000527146 -8.11724e-5 0.0205327 -0.0514411 0.00572755 0.986662 -0.127696; -0.187863 -0.122981 -0.269478 0.905096 0.021827 -0.122269 0.107472 -0.00777932 -0.0344057 -0.171889; 0.674063 0.0307083 0.0259091 0.000967244 0.000148117 -0.0290498 0.0510711 -0.00455896 -0.0348979 -0.734393])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
