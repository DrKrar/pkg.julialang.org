>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (780.5 MB free)
Uptime: 5067.0 sec
Load Avg:  0.93798828125  1.046875  1.09619140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     206893 s       6178 s      31897 s     211432 s         34 s
#2  3499 MHz     117013 s         65 s      25182 s     342672 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.259652 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0985282; 0.0 0.985195 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.459294; 0.0 0.0 0.781833 0.0 0.0 0.0 0.0 0.0 0.0 0.665351; 0.0 0.0 0.0 0.618629 0.0 0.0 0.0 0.0 0.0 0.369603; 0.0 0.0 0.0 0.0 0.891315 0.0 0.0 0.0 0.0 0.222033; 0.0 0.0 0.0 0.0 0.0 0.664425 0.0 0.0 0.0 0.590752; 0.0 0.0 0.0 0.0 0.0 0.0 0.740262 0.0 0.0 0.567403; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.885703 0.0 0.494975; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.247709 0.907974; 0.0985282 0.459294 0.665351 0.369603 0.222033 0.590752 0.567403 0.494975 0.907974 0.780015]
(U,Lambda) = eig(full(A)) = ([-0.943088,0.259507,0.416985,0.627931,0.696096,0.759475,0.858457,0.890473,0.964476,2.32443],
[-0.0554042 -0.993625 0.0907533 -0.00614087 -0.00912748 -0.00460831 0.0073426 -0.000550606 -0.0058686 0.0342482; -0.161092 -0.000926512 -0.117139 0.0295085 0.0642337 0.0475682 -0.161718 0.0170933 0.930611 0.246142; -0.260877 -0.00186475 -0.264276 0.0992319 0.313763 0.69568 0.38749 -0.0215898 -0.152934 0.309563; -0.160062 -0.00150662 -0.265625 -0.912084 -0.192902 -0.0613464 0.0687719 -0.00479295 -0.0448649 0.15551; -0.0818612 -0.000514451 -0.0678357 0.0193497 0.045985 0.0393703 -0.301549 0.930123 -0.127407 0.111196; -0.248545 -0.00213574 -0.345983 0.371559 -0.754147 -0.145295 0.135864 -0.00921277 -0.082654 0.255415; -0.227967 -0.00172774 -0.254353 0.115941 0.519424 -0.6904 0.214224 -0.0133161 -0.106239 0.257064; -0.183052 -0.00115713 -0.153035 0.0440751 0.105548 0.0916695 -0.810703 -0.365773 -0.263791 0.24692; -0.515691 0.112658 0.777317 -0.0548128 -0.0818726 -0.0414762 0.0663416 -0.00497976 -0.0531801 0.313795; 0.676323 0.0014639 0.144917 -0.0229533 -0.0404314 -0.0233774 0.0446247 -0.00352523 -0.0419812 0.717711])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
