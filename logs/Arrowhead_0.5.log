>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (757.19921875 MB free)
Uptime: 4610.0 sec
Load Avg:  1.029296875  1.00048828125  1.01708984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     212944 s        102 s      31403 s     160102 s          9 s
#2  3500 MHz      91204 s         54 s      24774 s     333527 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.63565 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.271885; 0.0 0.762326 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.211344; 0.0 0.0 0.568349 0.0 0.0 0.0 0.0 0.0 0.0 0.935134; 0.0 0.0 0.0 0.720005 0.0 0.0 0.0 0.0 0.0 0.0976747; 0.0 0.0 0.0 0.0 0.636161 0.0 0.0 0.0 0.0 0.0353635; 0.0 0.0 0.0 0.0 0.0 0.590582 0.0 0.0 0.0 0.157722; 0.0 0.0 0.0 0.0 0.0 0.0 0.0244153 0.0 0.0 0.550281; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.772987 0.0 0.743385; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.650219 0.817023; 0.271885 0.211344 0.935134 0.0976747 0.0353635 0.157722 0.550281 0.743385 0.817023 0.467574]
(U,Lambda) = eig(full(A)) = ([-1.09474,0.103322,0.589609,0.609424,0.63615,0.637405,0.718356,0.732789,0.763306,2.13265],
[-0.111514 -0.0672738 -0.0350263 0.309233 0.172705 0.908069 -0.0525578 0.114976 0.00928793 0.125308; -0.0807699 -0.0422416 -0.00725783 0.041229 -0.000532113 -0.00991698 0.0768444 -0.293921 0.941394 0.106409; -0.399067 -0.264872 0.260895 -0.679079 0.00438156 0.0793778 -0.0996667 0.233604 0.0209174 0.412446; -0.0381992 -0.0208622 -0.00444295 0.0263469 -0.000370038 -0.00693154 0.946819 0.313854 0.00983698 0.0477048; -0.0145001 -0.00874176 -0.00450574 0.0394518 -0.984789 0.166695 -0.00687862 0.0150338 0.00121292 0.0163041; -0.0664199 -0.0426356 -0.961028 -0.249687 0.00109958 0.0197453 -0.0197351 0.0455604 0.00398213 0.0705673; -0.348965 0.918561 0.00577487 -0.0280576 0.000285769 0.0052621 -0.012678 0.0319107 0.00324771 0.180086; -0.282481 -0.146216 -0.0240448 0.135568 -0.00172585 -0.0321395 0.217549 -0.759666 -0.334839 0.377221; -0.332305 -0.196774 -0.0799548 0.597392 -0.0184489 -0.373752 -0.191708 0.406467 0.0315062 0.380253; 0.709723 0.131716 0.00593136 -0.0298283 0.000317682 0.00586175 -0.0159877 0.0410785 0.00436087 0.689944])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
