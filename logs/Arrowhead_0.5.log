>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (464.4296875 MB free)
Uptime: 5664.0 sec
Load Avg:  1.03857421875  1.490234375  1.642578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     264132 s        125 s      34143 s     210135 s         12 s
#2  3500 MHz     118653 s         28 s      26758 s     405491 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.359434 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.950033; 0.0 0.402202 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.529703; 0.0 0.0 0.622821 0.0 0.0 0.0 0.0 0.0 0.0 0.302034; 0.0 0.0 0.0 0.546967 0.0 0.0 0.0 0.0 0.0 0.765457; 0.0 0.0 0.0 0.0 0.764148 0.0 0.0 0.0 0.0 0.873704; 0.0 0.0 0.0 0.0 0.0 0.798568 0.0 0.0 0.0 0.830625; 0.0 0.0 0.0 0.0 0.0 0.0 0.597071 0.0 0.0 0.133559; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.634552 0.0 0.902927; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.592679 0.245624; 0.950033 0.529703 0.302034 0.765457 0.873704 0.830625 0.133559 0.902927 0.245624 0.35624]
(U,Lambda) = eig(full(A)) = ([-1.58389,0.388131,0.449418,0.574659,0.595178,0.599022,0.624077,0.705006,0.784458,2.53862],
[-0.354659 0.6538 0.56937 -0.121638 0.0322647 -0.0464799 -0.0140219 -0.121002 -0.0304862 -0.298019; -0.193486 -0.743498 0.605006 -0.0846394 0.0219764 -0.0315466 -0.00932502 -0.0769946 -0.0188997 -0.16949; -0.0992951 -0.025416 -0.0939327 0.172812 -0.0874759 0.148759 -0.939466 -0.161755 -0.0254856 -0.107772; -0.260606 -0.0951742 -0.423172 -0.761693 0.127117 -0.172364 -0.0387735 -0.21318 -0.0439594 -0.262728; -0.269946 -0.0458885 -0.149708 0.127059 -0.0413984 0.0620214 0.0243639 0.65022 -0.586717 -0.336585; -0.252928 -0.0399672 -0.128295 0.102225 -0.0326966 0.0487924 0.0185934 0.390744 0.802845 -0.326319; -0.0444266 -0.012624 -0.0487808 0.164218 -0.56477 -0.80244 -0.019317 -0.0544631 -0.00972103 -0.0470245; -0.295272 -0.0723637 -0.263017 0.415432 -0.183597 0.297883 0.336682 -0.56408 -0.0821511 -0.324168; -0.0818683 -0.023715 -0.0924618 0.375627 0.786858 -0.453869 -0.0305554 -0.0962445 -0.0174682 -0.086286; 0.725465 0.019749 0.0539286 -0.0275564 0.00800623 -0.0117217 -0.00390596 -0.0440139 -0.0136388 -0.683595])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
