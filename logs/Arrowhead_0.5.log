>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (425.8828125 MB free)
Uptime: 5232.0 sec
Load Avg:  1.05322265625  1.4814453125  1.7041015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     229791 s        100 s      34202 s     210283 s          8 s
#2  3499 MHz     123843 s       7610 s      24820 s     351192 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0224744 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.377307; 0.0 0.607896 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.540591; 0.0 0.0 0.559402 0.0 0.0 0.0 0.0 0.0 0.0 0.254089; 0.0 0.0 0.0 0.453805 0.0 0.0 0.0 0.0 0.0 0.771215; 0.0 0.0 0.0 0.0 0.0190116 0.0 0.0 0.0 0.0 0.493426; 0.0 0.0 0.0 0.0 0.0 0.116489 0.0 0.0 0.0 0.887168; 0.0 0.0 0.0 0.0 0.0 0.0 0.0524135 0.0 0.0 0.868926; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.741933 0.0 0.0825373; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.455779 0.483459; 0.377307 0.540591 0.254089 0.771215 0.493426 0.887168 0.868926 0.0825373 0.483459 0.117318]
(U,Lambda) = eig(full(A)) = ([-1.60241,0.0209306,0.0293482,0.085762,0.323553,0.455225,0.550361,0.584096,0.741049,1.95861],
[-0.165888 -0.686608 0.664608 0.148525 0.134307 -0.000849052 0.022856 0.0257674 0.00561139 -0.134275; -0.174727 -0.00258743 -0.0113135 -0.0257935 -0.203755 0.00344816 -0.300459 -0.87117 0.0433876 -0.275767; -0.0839675 -0.00132567 -0.00580409 -0.0133648 -0.115461 0.00237514 -0.898758 0.394657 0.0149487 -0.125124; -0.267948 -0.00500525 -0.0219994 -0.0522037 -0.634562 -0.529149 0.255413 0.22703 0.0286928 -0.353128; -0.217405 0.722375 0.577979 0.184159 0.173643 -0.00110154 0.0296953 0.0334911 0.00730315 -0.175286; -0.368722 -0.0260825 -0.123269 -0.719304 0.45918 -0.00255048 0.0653869 0.0727688 0.0151803 -0.331837; -0.375124 -0.077539 -0.456134 0.649129 0.343457 -0.00210067 0.0558014 0.0626832 0.0134847 -0.314088; -0.025152 -0.000321607 -0.00140243 -0.0031337 -0.0211428 0.000280341 -0.0137774 -0.0200568 -0.998064 -0.0467425; -0.16781 -0.00312344 -0.0137271 -0.0325509 -0.391855 0.84851 0.163455 0.14451 0.0181114 -0.22166; 0.714404 0.00280939 0.0121079 0.0249129 0.107172 -0.000973816 0.0319777 0.0383548 0.0106868 -0.689026])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
