>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (460.703125 MB free)
Uptime: 5143.0 sec
Load Avg:  0.99267578125  1.49609375  1.658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     253160 s       6711 s      32581 s     170710 s          7 s
#2  3504 MHz     123594 s         42 s      24882 s     351033 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.22306 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.549797; 0.0 0.0659065 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.158187; 0.0 0.0 0.964082 0.0 0.0 0.0 0.0 0.0 0.0 0.974389; 0.0 0.0 0.0 0.566869 0.0 0.0 0.0 0.0 0.0 0.0114687; 0.0 0.0 0.0 0.0 0.905859 0.0 0.0 0.0 0.0 0.462917; 0.0 0.0 0.0 0.0 0.0 0.641588 0.0 0.0 0.0 0.366579; 0.0 0.0 0.0 0.0 0.0 0.0 0.494581 0.0 0.0 0.672878; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.231074 0.0 0.418211; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.601923 0.12069; 0.549797 0.158187 0.974389 0.0114687 0.462917 0.366579 0.672878 0.418211 0.12069 0.0735408]
(U,Lambda) = eig(full(A)) = ([-1.18226,0.0702874,0.22802,0.32045,0.566803,0.581562,0.607603,0.706278,0.91726,1.95248],
[-0.298484 0.0987185 0.629022 0.654094 0.00918552 0.126799 0.0575375 -0.139678 -0.0173313 -0.195887; -0.0966927 -0.990477 0.0055376 0.0720051 0.00181367 0.025364 0.0117519 -0.0303255 -0.00406606 -0.0516655; -0.346359 0.0299044 -0.00751254 -0.175408 -0.0140855 -0.210612 -0.11 0.463992 0.455399 -0.607441; -0.00500247 0.000633524 -0.000192077 -0.00539253 -0.997759 0.0645373 0.0113305 -0.0100993 -0.000716263 -0.00510005; -0.169138 0.0151971 -0.00387567 -0.0916217 -0.00784093 -0.118023 -0.062461 0.284743 -0.888542 -0.272532; -0.153346 0.0176012 -0.00503025 -0.13226 -0.0281506 -0.50493 -0.434085 -0.695661 -0.0290996 -0.172307; -0.306153 0.0435022 -0.0143255 -0.44773 0.0535055 0.639608 0.239587 -0.3902 -0.0348368 -0.284388; -0.225759 0.0713487 -0.777151 0.542159 0.00715388 0.0986568 0.0446982 -0.108039 -0.0133372 -0.149698; -0.0516092 0.00622731 -0.00183182 -0.0496811 -0.0197361 -0.490107 0.854969 -0.141979 -0.00837548 -0.0550634; 0.762945 -0.027431 0.00567504 0.115865 0.00574295 0.0826808 0.0402433 -0.122763 -0.0218833 -0.616172])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
