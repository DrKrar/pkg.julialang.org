>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (441.96875 MB free)
Uptime: 5086.0 sec
Load Avg:  0.80615234375  1.50927734375  1.6494140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     194827 s         63 s      34763 s     225451 s          5 s
#2  3499 MHz     137854 s         98 s      25800 s     306952 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.1
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.901022 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.635326; 0.0 0.471335 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.348983; 0.0 0.0 0.742833 0.0 0.0 0.0 0.0 0.0 0.0 0.0317646; 0.0 0.0 0.0 0.770307 0.0 0.0 0.0 0.0 0.0 0.975866; 0.0 0.0 0.0 0.0 0.492943 0.0 0.0 0.0 0.0 0.169922; 0.0 0.0 0.0 0.0 0.0 0.491595 0.0 0.0 0.0 0.291498; 0.0 0.0 0.0 0.0 0.0 0.0 0.482401 0.0 0.0 0.925256; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.831029 0.0 0.41377; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.223271 0.0839886; 0.635326 0.348983 0.0317646 0.975866 0.169922 0.291498 0.925256 0.41377 0.0839886 0.0779665]
(U,Lambda) = eig(full(A)) = ([-1.27848,0.224278,0.472577,0.49067,0.492758,0.60937,0.742861,0.820604,0.874321,2.03575],
[-0.223184 -0.0112369 0.0049966 -0.00451216 0.00162701 -0.204154 -0.00357696 0.175564 0.866694 -0.355445; -0.152699 -0.0169076 -0.94639 0.0526014 -0.0170313 0.236941 0.00114449 -0.0222042 -0.0315439 -0.141618; -0.0120319 -0.000733201 0.000396043 -0.000367119 0.000132803 -0.0223054 0.999477 -0.00907635 -0.00879947 -0.015597; -0.364684 -0.0213919 0.0110444 -0.0101704 0.00367609 -0.568277 -0.0316607 -0.431159 -0.341744 -0.489571; -0.0734431 -0.00757029 0.0281137 -0.21785 0.960367 0.13678 0.00060544 -0.0115243 -0.0162291 -0.0699207; -0.126086 -0.0130522 0.051647 -0.918302 -0.262033 0.231957 0.00103305 -0.0196887 -0.0277427 -0.119843; -0.402305 -0.0429051 0.317353 0.326113 -0.0934043 0.682954 0.00316329 -0.0607961 -0.0859936 -0.378147; -0.150176 -0.00816249 0.00388957 -0.00354296 0.00127888 -0.174944 -0.00417892 0.882034 -0.348142 -0.218042; -0.04282 0.998424 -0.00113517 0.000915388 -0.00032585 0.0203867 0.000143939 -0.0031246 -0.00469902 -0.0294181; 0.76564 0.0119695 -0.00336956 0.00291437 -0.00104553 0.0937187 0.000890467 -0.0222224 -0.0364251 -0.634844])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
