>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (739.38671875 MB free)
Uptime: 4321.0 sec
Load Avg:  0.98486328125  1.0  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     205550 s         68 s      24146 s     145967 s          8 s
#2  3499 MHz      70800 s         80 s      23809 s     323905 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.551805 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.455751; 0.0 0.807173 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.683377; 0.0 0.0 0.906269 0.0 0.0 0.0 0.0 0.0 0.0 0.374258; 0.0 0.0 0.0 0.795899 0.0 0.0 0.0 0.0 0.0 0.183444; 0.0 0.0 0.0 0.0 0.723816 0.0 0.0 0.0 0.0 0.452482; 0.0 0.0 0.0 0.0 0.0 0.754528 0.0 0.0 0.0 0.947018; 0.0 0.0 0.0 0.0 0.0 0.0 0.380539 0.0 0.0 0.223347; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.604623 0.0 0.288931; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.462535 0.491923; 0.455751 0.683377 0.374258 0.183444 0.452482 0.947018 0.223347 0.288931 0.491923 0.097666]
(U,Lambda) = eig(full(A)) = ([-1.15524,0.385752,0.486872,0.573447,0.61647,0.72893,0.788615,0.797328,0.896156,1.96653],
[-0.206055 0.0629896 -0.316702 -0.860961 -0.259625 0.02668 0.0361726 -0.0125559 0.0343028 -0.203123; -0.268764 0.0372162 -0.0962706 0.119536 0.132005 -0.0905635 -0.692111 0.469496 0.199047 -0.371662; -0.140116 0.0165015 -0.040266 0.0459734 0.0475732 -0.0218829 -0.0597882 0.0232376 -0.959149 -0.222569; -0.0725633 0.0102649 -0.0267855 0.0337144 0.0376616 -0.0284033 -0.473347 -0.868608 0.0474234 -0.0988073; -0.18585 0.0307179 -0.0861684 0.123024 0.155276 0.91736 0.131245 -0.0416348 0.0680482 -0.22958; -0.382718 0.0589364 -0.159651 0.213812 0.252687 -0.383605 0.52219 -0.149671 0.173306 -0.492674; -0.112241 -0.983254 0.0947779 -0.0473346 -0.0348725 0.00664741 0.0102871 -0.00362475 0.0112268 -0.0887941; -0.126711 0.0302966 -0.110719 0.378898 -0.898385 0.024101 0.0295152 -0.0101418 0.0256867 -0.133767; -0.234682 0.147034 0.912086 -0.181329 -0.117719 0.0191474 0.0283547 -0.00993881 0.0294029 -0.206232; 0.771794 -0.0229503 0.0451225 -0.0408835 -0.0368373 0.010369 0.0187954 -0.00676415 0.0259181 -0.630527])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
