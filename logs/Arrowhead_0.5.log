>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (490.6171875 MB free)
Uptime: 4331.0 sec
Load Avg:  1.63427734375  1.17138671875  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     203878 s         58 s      29148 s     154386 s          5 s
#2  3503 MHz     101631 s       2440 s      18862 s     297006 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.64835 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.485893; 0.0 0.747127 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.789457; 0.0 0.0 0.445358 0.0 0.0 0.0 0.0 0.0 0.0 0.822949; 0.0 0.0 0.0 0.0618166 0.0 0.0 0.0 0.0 0.0 0.487996; 0.0 0.0 0.0 0.0 0.75868 0.0 0.0 0.0 0.0 0.0406879; 0.0 0.0 0.0 0.0 0.0 0.59264 0.0 0.0 0.0 0.994385; 0.0 0.0 0.0 0.0 0.0 0.0 0.0712432 0.0 0.0 0.901373; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.651917 0.0 0.29373; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.721633 0.678466; 0.485893 0.789457 0.822949 0.487996 0.0406879 0.994385 0.901373 0.29373 0.678466 0.0210775]
(U,Lambda) = eig(full(A)) = ([-1.80843,0.063869,0.198076,0.492462,0.632357,0.651024,0.686121,0.734546,0.758659,2.31116],
[-0.146447 0.00310924 0.115629 -0.148235 -0.696208 0.482521 0.428662 0.0683298 -0.00228655 -0.192984; -0.228744 0.00432143 0.154071 -0.147429 -0.157634 -0.0218128 -0.431208 -0.760613 -0.0355358 -0.333354; -0.270375 0.00806817 0.356603 0.830883 0.100851 0.0106249 0.113897 0.0344941 -0.00136352 -0.291293; -0.193207 -0.889284 -0.383754 0.0538916 0.019601 0.0021992 0.0260464 0.00879283 -0.000363522 -0.143279; -0.0117362 0.000219019 0.00777702 -0.00726862 -0.00738126 -0.00100356 -0.0186854 -0.0204353 0.999313 -0.0173086; -0.30666 0.00703349 0.270048 -0.472069 0.573757 0.0452245 0.354453 0.084939 -0.00310918 -0.38214; -0.355082 0.457164 -0.761512 0.10177 0.0368131 0.00412816 0.0488478 0.016472 -0.000680667 -0.265764; -0.0884014 0.00186819 0.0693505 -0.0876062 -0.344134 -0.87399 0.286152 0.0430893 -0.00142844 -0.116913; -0.198565 0.00385782 0.138857 -0.140797 -0.174157 -0.0255145 -0.636625 0.636887 -0.00951198 -0.281892; 0.740469 -0.00374011 -0.107153 0.0475581 0.0229165 0.00265532 0.0333218 0.0121214 -0.000519098 -0.660423])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
