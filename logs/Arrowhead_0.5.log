>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-dev+4306
Commit 0a3cf4a (2016-05-24 22:35 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
WARNING: Union(args...) is deprecated, use Union{args...} instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Union(::Type{T}, ::Type{T}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl, in expression starting on line 6
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:8
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:48
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:50
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:64
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:77
WARNING: module DoubleDouble should explicitly import - from Base
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.214541 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.345297; 0.0 0.929241 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.038641; 0.0 0.0 0.062324 0.0 0.0 0.0 0.0 0.0 0.0 0.570691; 0.0 0.0 0.0 0.0723621 0.0 0.0 0.0 0.0 0.0 0.504438; 0.0 0.0 0.0 0.0 0.838345 0.0 0.0 0.0 0.0 0.405556; 0.0 0.0 0.0 0.0 0.0 0.450025 0.0 0.0 0.0 0.240443; 0.0 0.0 0.0 0.0 0.0 0.0 0.142848 0.0 0.0 0.105731; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.854857 0.0 0.238358; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.377468 0.551638; 0.345297 0.038641 0.570691 0.504438 0.405556 0.240443 0.105731 0.238358 0.551638 0.822886]
(U,Lambda) = eig(full(A)) = ([-0.645111,0.0678894,0.140681,0.1831,0.296967,0.441394,0.741965,0.85099,0.928868,1.75815],
[-0.241592 0.0154427 0.0931586 0.816387 -0.467915 0.0519163 0.123928 -0.00780531 -0.00465616 0.170727; -0.0147624 0.000294228 0.000976453 0.00384968 0.0068263 -0.0027016 -0.0390574 0.00710423 0.998434 0.0355785; -0.485206 -0.672542 -0.145131 -0.351252 -0.271666 0.0513497 0.15895 -0.0104104 -0.00634371 0.256843; -0.422877 0.739696 -0.147131 -0.338618 -0.250859 0.046623 0.142603 -0.0093205 -0.00567297 0.228377; -0.164432 0.00345238 0.0115836 0.0460091 0.0836743 -0.0348474 -0.796524 -0.461443 -0.0431544 0.336513; -0.132055 0.00412678 0.0154885 0.0669608 0.175469 -0.950236 0.155904 -0.00862715 -0.00483673 0.140285; -0.080707 0.00925125 0.97244 -0.195258 -0.0766279 0.0120794 0.0334064 -0.00214804 -0.00129569 0.049957; -0.0955784 0.00198651 0.00665063 0.0263764 0.0477226 -0.019663 -0.399672 0.886677 -0.0310217 0.201395; -0.324466 0.0116869 0.0464231 0.210973 0.765415 0.294328 0.286483 -0.0167601 -0.00963652 0.304935; 0.601466 -0.00655868 -0.0199268 -0.0743357 -0.111697 0.0341081 0.189295 -0.0143867 -0.00963236 0.763217])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:324 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:322 [inlined]
 in _unsafe_getindex!(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:316
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 212
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
