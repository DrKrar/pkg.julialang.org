>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (428.94921875 MB free)
Uptime: 4608.0 sec
Load Avg:  0.98388671875  1.41015625  1.57470703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     203374 s         55 s      32657 s     170391 s         12 s
#2  3499 MHz     106190 s         87 s      28937 s     297955 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.836535 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.681684; 0.0 0.888263 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.9899; 0.0 0.0 0.0346689 0.0 0.0 0.0 0.0 0.0 0.0 0.431451; 0.0 0.0 0.0 0.7354 0.0 0.0 0.0 0.0 0.0 0.197323; 0.0 0.0 0.0 0.0 0.628589 0.0 0.0 0.0 0.0 0.0443102; 0.0 0.0 0.0 0.0 0.0 0.83626 0.0 0.0 0.0 0.501673; 0.0 0.0 0.0 0.0 0.0 0.0 0.00798076 0.0 0.0 0.0607846; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.686228 0.0 0.791751; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.406189 0.500627; 0.681684 0.9899 0.431451 0.197323 0.0443102 0.501673 0.0607846 0.791751 0.500627 0.926385]
(U,Lambda) = eig(full(A)) = ([-0.876975,0.0083598,0.0922388,0.448507,0.628706,0.726391,0.746872,0.836356,0.860201,2.51584],
[-0.267501 -0.00510552 -0.113647 -0.137387 0.00867337 0.198825 -0.308269 0.590751 0.571648 0.293634; -0.377066 -0.00697808 -0.154308 -0.176038 0.0100849 0.196458 -0.283876 0.00294448 -0.700089 0.439949; -0.318226 -0.10172 0.929946 0.0815321 -0.00192056 -0.0200377 0.0245631 -8.30926e-5 0.0103723 0.125785; -0.0822888 -0.00168344 -0.0380697 -0.0537878 0.00489045 0.70364 0.69738 -0.000301772 0.0313788 0.0801683; -0.0197895 -0.00044313 -0.0102513 -0.0192424 -0.999193 -0.0145548 0.0151892 -3.29278e-5 0.00379682 0.0169835; -0.196894 -0.00375856 -0.0836676 -0.101179 0.00639145 0.146687 -0.227561 -0.806848 0.415877 0.216059; -0.046185 0.994691 0.0895167 0.0107907 -0.000258942 -0.00271812 0.00333555 -1.13293e-5 0.00141553 0.0175325; -0.340567 -0.00724473 -0.165399 -0.260464 0.0363971 -0.633302 0.529361 -0.000814257 0.0903199 0.313027; -0.262338 -0.00780543 -0.197868 0.925156 -0.00594921 -0.050227 0.0595824 -0.000179685 0.0218838 0.171655; 0.672403 0.00620267 0.124086 0.0782037 -0.00264429 -0.0321254 0.0405467 -0.000154396 0.0198462 0.723357])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
