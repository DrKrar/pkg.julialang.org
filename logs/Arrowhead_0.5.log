>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (862.765625 MB free)
Uptime: 4417.0 sec
Load Avg:  1.28662109375  1.1787109375  1.0703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     194696 s        101 s      27900 s     152764 s         38 s
#2  3499 MHz      77694 s         48 s      25139 s     315069 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.111183 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.458086; 0.0 0.554294 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0218179; 0.0 0.0 0.263641 0.0 0.0 0.0 0.0 0.0 0.0 0.797521; 0.0 0.0 0.0 0.0871438 0.0 0.0 0.0 0.0 0.0 0.259305; 0.0 0.0 0.0 0.0 0.811835 0.0 0.0 0.0 0.0 0.0511534; 0.0 0.0 0.0 0.0 0.0 0.167879 0.0 0.0 0.0 0.603252; 0.0 0.0 0.0 0.0 0.0 0.0 0.0816508 0.0 0.0 0.41971; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.357573 0.0 0.00548331; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.58616 0.434304; 0.458086 0.0218179 0.797521 0.259305 0.0511534 0.603252 0.41971 0.00548331 0.434304 0.31875]
(U,Lambda) = eig(full(A)) = ([-1.01446,0.0851641,0.0949522,0.131857,0.21092,0.35757,0.539534,0.554522,0.810871,1.56918],
[-0.281367 -0.098711 -0.516364 -0.733111 0.213303 -0.00106675 0.105228 -0.0106701 0.0123307 0.223983; -0.00961575 -0.000260747 -0.000868989 0.00170886 -0.00295088 6.36339e-5 -0.145446 -0.989193 0.00160155 0.0153257; -0.431422 -0.025053 -0.0864953 0.200232 -0.702524 -0.00487167 0.284437 -0.0283131 0.0274485 0.435488; -0.162746 -0.73436 0.607558 -0.191881 0.0972928 -0.000550169 0.0564004 -0.00572931 0.0067481 0.124732; -0.0193655 -0.000394673 -0.00130546 0.00248906 -0.00395337 6.46098e-5 -0.0184845 0.00205292 -0.998467 0.0481511; -0.352763 -0.0408899 -0.151339 0.5541 0.650912 -0.00182467 0.159714 -0.016112 0.0176701 0.306896; -0.264741 0.669788 0.577285 -0.276597 0.150786 -0.000872772 0.0901941 -0.0091657 0.0108402 0.201144; -0.00276315 -0.000112855 -0.000381989 0.000803777 -0.00173643 0.999985 0.00296517 -0.000287508 0.000227827 0.00322631; -0.187599 -0.00486026 -0.0161758 0.0316303 -0.0537515 0.00109011 -0.916521 0.141754 0.0364012 0.314961; 0.691392 0.00560661 0.0182952 -0.0330869 0.0464415 -0.000573764 0.0983974 -0.0103266 0.0188341 0.712892])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
