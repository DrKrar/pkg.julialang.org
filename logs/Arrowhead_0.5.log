>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (631.8359375 MB free)
Uptime: 4682.0 sec
Load Avg:  0.99365234375  1.1943359375  1.103515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     221963 s       5857 s      25713 s     160240 s          6 s
#2  3501 MHz      79894 s       1126 s      21247 s     354280 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.633349 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.204917; 0.0 0.76918 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.865989; 0.0 0.0 0.495583 0.0 0.0 0.0 0.0 0.0 0.0 0.960651; 0.0 0.0 0.0 0.844948 0.0 0.0 0.0 0.0 0.0 0.0364565; 0.0 0.0 0.0 0.0 0.809197 0.0 0.0 0.0 0.0 0.404622; 0.0 0.0 0.0 0.0 0.0 0.50372 0.0 0.0 0.0 0.690334; 0.0 0.0 0.0 0.0 0.0 0.0 0.813907 0.0 0.0 0.19529; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.58401 0.0 0.236927; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.39959 0.329516; 0.204917 0.865989 0.960651 0.0364565 0.404622 0.690334 0.19529 0.236927 0.329516 0.0378023]
(U,Lambda) = eig(full(A)) = ([-1.30844,0.405453,0.500908,0.579252,0.626154,0.674097,0.802346,0.813286,0.84488,1.95335],
[-0.0806605 0.0155775 -0.00507785 0.0723876 -0.912369 0.3813 0.0181257 0.00344821 -0.00179947 -0.0991714; -0.318589 0.0412471 -0.010594 0.087133 -0.193964 -0.690574 0.390311 0.0594491 -0.0212497 -0.467176; -0.407013 0.184651 0.592062 -0.219414 0.235692 0.408031 0.0468123 0.0091555 -0.00510872 -0.420979; -0.0129401 0.00143707 -0.000347767 0.0026221 -0.00533779 -0.0161792 -0.0127921 -0.0034864 0.999458 -0.0210116; -0.146044 0.017362 -0.00430738 0.0336267 -0.0708138 -0.227087 -0.882828 0.299618 -0.0210634 -0.225916; -0.29117 0.121705 -0.805661 -0.17466 0.180627 0.307219 0.0345565 0.00675218 -0.00375875 -0.304218; -0.0703313 0.00828311 -0.00204767 0.0159041 -0.0333207 -0.105911 -0.252505 -0.952112 -0.0117122 -0.109489; -0.095692 0.0229878 -0.00935686 0.951596 0.180095 0.199411 0.0162213 0.00312891 -0.00168706 -0.110532; -0.147457 -0.973626 0.0106736 -0.0350494 0.0465917 0.0910168 0.0122301 0.00241175 -0.00137459 -0.13548; 0.764338 -0.0173243 0.00328187 -0.01911 0.0320349 0.0758226 0.0149485 0.00302787 -0.00185755 -0.638827])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
