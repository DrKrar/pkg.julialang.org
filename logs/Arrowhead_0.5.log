>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (442.96875 MB free)
Uptime: 5951.0 sec
Load Avg:  0.98876953125  1.5283203125  1.71826171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     256708 s       7452 s      33908 s     240555 s          9 s
#2  3500 MHz     139909 s         96 s      26824 s     414058 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.773819 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.766414; 0.0 0.366692 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.656501; 0.0 0.0 0.751754 0.0 0.0 0.0 0.0 0.0 0.0 0.302592; 0.0 0.0 0.0 0.409065 0.0 0.0 0.0 0.0 0.0 0.67585; 0.0 0.0 0.0 0.0 0.347973 0.0 0.0 0.0 0.0 0.542389; 0.0 0.0 0.0 0.0 0.0 0.0720298 0.0 0.0 0.0 0.0665362; 0.0 0.0 0.0 0.0 0.0 0.0 0.139551 0.0 0.0 0.947677; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.672866 0.0 0.681369; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.119523 0.360962; 0.766414 0.656501 0.302592 0.67585 0.542389 0.0665362 0.947677 0.681369 0.360962 0.992636]
(U,Lambda) = eig(full(A)) = ([-1.16713,0.0722426,0.121838,0.237811,0.354876,0.391221,0.581281,0.722997,0.755893,2.57488],
[-0.253792 0.00348792 -0.00712742 0.108366 -0.0188205 0.0414484 -0.378261 0.650766 0.501997 -0.321143; -0.275099 0.00711874 -0.0162567 0.386055 -0.571597 -0.553778 0.290719 -0.0795109 -0.0198055 -0.224369; -0.101353 0.0014218 -0.00291258 0.0446216 -0.00784374 0.017366 -0.168673 0.454068 -0.858513 -0.125257; -0.275593 0.0064066 -0.0142669 0.299097 -0.128311 0.783704 0.372926 -0.0929026 -0.0228803 -0.2355; -0.23009 0.00628064 -0.0145428 0.373147 0.808394 -0.259497 0.220916 -0.0624116 -0.0156121 -0.183811; -0.0345111 -0.998607 0.00809951 -0.0304177 0.00242009 -0.00431314 0.0124157 -0.00441075 -0.00114239 -0.0200625; -0.466143 0.0449544 -0.324407 -0.730947 0.0452782 -0.0779139 0.203868 -0.0700927 -0.0180536 -0.293674; -0.23801 0.00362208 -0.00749744 0.118697 -0.0220441 0.0500573 -0.706971 -0.58653 -0.0963583 -0.270353; -0.180314 0.0243756 0.945443 -0.231274 0.0157785 -0.0274892 0.0742836 -0.0258117 -0.00666005 -0.110946; 0.64273 -0.00319285 0.00606322 -0.0757884 0.0102878 -0.0206913 0.0950266 -0.0431532 -0.0117415 -0.754681])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
