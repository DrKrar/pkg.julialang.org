>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (440.2109375 MB free)
Uptime: 5888.0 sec
Load Avg:  1.0166015625  1.5390625  1.72119140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     248396 s       6317 s      35887 s     243454 s         16 s
#2  3499 MHz     151065 s         39 s      30395 s     386914 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.514183 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.602843; 0.0 0.0978291 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.104311; 0.0 0.0 0.42176 0.0 0.0 0.0 0.0 0.0 0.0 0.0648623; 0.0 0.0 0.0 0.568541 0.0 0.0 0.0 0.0 0.0 0.04454; 0.0 0.0 0.0 0.0 0.180306 0.0 0.0 0.0 0.0 0.365277; 0.0 0.0 0.0 0.0 0.0 0.453616 0.0 0.0 0.0 0.185164; 0.0 0.0 0.0 0.0 0.0 0.0 0.351379 0.0 0.0 0.638341; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.617713 0.0 0.94431; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.833074 0.129059; 0.602843 0.104311 0.0648623 0.04454 0.365277 0.185164 0.638341 0.94431 0.129059 0.894137]
(U,Lambda) = eig(full(A)) = ([-0.691784,0.0999127,0.204546,0.405845,0.423152,0.458318,0.549961,0.568769,0.830544,2.08328],
[-0.324355 -0.0288722 -0.121292 -0.372021 -0.1363 0.258415 0.7532 -0.0559656 -0.0371765 -0.289257; -0.0857168 0.993308 0.0608943 0.0226413 0.00659928 -0.00692926 0.0103132 -0.00112244 -0.00277742 -0.0395548; -0.0377952 -0.00399854 -0.018603 -0.272462 0.959572 -0.0424878 0.0226167 -0.00223588 -0.00309561 -0.0293911; -0.0229308 -0.00188573 -0.00762315 -0.0183027 -0.00630518 0.00967668 -0.107159 -0.993459 -0.0033166 -0.0221382; -0.271776 -0.0901487 0.938807 0.108279 0.030958 -0.0314636 0.0441727 -0.00476508 -0.0109597 -0.144517; -0.104894 -0.0103867 -0.0463144 -0.259141 -0.125099 -0.942912 0.0859117 -0.00814851 -0.00958396 -0.0855436; -0.397056 -0.0503654 -0.270838 0.78356 0.183051 -0.142944 0.143694 -0.0148803 -0.0259905 -0.277497; -0.467909 -0.0361836 -0.142387 -0.297984 -0.0998942 0.14187 -0.623054 0.0977717 -0.0865619 -0.485108; -0.0549172 -0.00349257 -0.0127921 -0.0201962 -0.00647986 0.00824684 -0.0203777 0.00247444 0.994901 -0.0777204; 0.64886 0.0198408 0.0622988 0.0668566 0.0205817 -0.0239469 0.0447021 -0.00506754 -0.0195095 -0.752884])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
