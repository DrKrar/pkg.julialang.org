>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (741.33203125 MB free)
Uptime: 4163.0 sec
Load Avg:  0.97265625  1.009765625  0.990234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     215860 s        100 s      27559 s     125472 s          5 s
#2  3500 MHz      79916 s         48 s      22722 s     302722 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.772944 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.953614; 0.0 0.599194 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0956851; 0.0 0.0 0.170651 0.0 0.0 0.0 0.0 0.0 0.0 0.0758119; 0.0 0.0 0.0 0.0113942 0.0 0.0 0.0 0.0 0.0 0.930793; 0.0 0.0 0.0 0.0 0.572017 0.0 0.0 0.0 0.0 0.982901; 0.0 0.0 0.0 0.0 0.0 0.0400435 0.0 0.0 0.0 0.968365; 0.0 0.0 0.0 0.0 0.0 0.0 0.166969 0.0 0.0 0.506672; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.638707 0.0 0.402373; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0956481 0.601811; 0.953614 0.0956851 0.0758119 0.930793 0.982901 0.968365 0.506672 0.402373 0.601811 0.168761]
(U,Lambda) = eig(full(A)) = ([-1.88711,0.0240302,0.082538,0.151567,0.170582,0.369806,0.598895,0.627983,0.703688,2.39435],
[-0.255916 -0.0132951 0.0259097 0.0418799 -0.00141372 -0.307421 -0.0169549 0.155966 0.806718 0.402478; -0.0274729 -0.00173701 0.00347407 0.00583334 -0.000199356 -0.0542112 -0.992895 -0.0787973 -0.0536489 0.0364757; -0.0263001 -0.00539874 0.0161396 0.10841 -0.992063 0.0494721 0.000547821 -0.00393017 -0.00833274 0.0233304; -0.34999 0.769117 -0.245421 -0.181208 0.00522145 0.337509 0.00490273 -0.0357902 -0.0787718 0.267299; -0.285327 -0.0187279 0.0376679 0.0637947 -0.00218647 -0.631714 0.11316 -0.416376 -0.437348 0.369099; -0.358705 -0.631408 -0.427466 -0.236952 0.00662442 0.381639 0.00536211 -0.0390492 -0.0854893 0.281473; -0.176086 -0.0370106 0.112569 0.89772 0.125221 0.324635 0.00363004 -0.0260567 -0.055308 0.155666; -0.113721 -0.0068349 0.0135712 0.0225405 -0.000767567 -0.194469 -0.0312757 0.889559 -0.362791 0.156839; -0.216673 -0.0877382 0.861087 -0.293689 0.00717181 0.285282 0.0037006 -0.0268029 -0.0579878 0.179159; 0.713863 0.0104412 -0.0187584 -0.027289 0.000892995 0.129962 0.00309452 -0.0237086 -0.0585879 0.684323])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
