>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-dev+4946
Commit 68e1dd4* (2016-06-26 23:37 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.540353 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.174906; 0.0 0.607073 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.848275; 0.0 0.0 0.423817 0.0 0.0 0.0 0.0 0.0 0.0 0.441649; 0.0 0.0 0.0 0.679248 0.0 0.0 0.0 0.0 0.0 0.285354; 0.0 0.0 0.0 0.0 0.82277 0.0 0.0 0.0 0.0 0.68855; 0.0 0.0 0.0 0.0 0.0 0.970761 0.0 0.0 0.0 0.397437; 0.0 0.0 0.0 0.0 0.0 0.0 0.18744 0.0 0.0 0.265515; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.520342 0.0 0.329506; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.256639 0.354196; 0.174906 0.848275 0.441649 0.285354 0.68855 0.397437 0.265515 0.329506 0.354196 0.294733]
(U,Lambda) = eig(full(A)) = ([-0.96061,0.198704,0.283063,0.449489,0.529223,0.544362,0.670669,0.750634,0.94673,1.89091],
[-0.0864366 -0.0208078 0.0469151 0.101283 0.373242 0.909181 0.0369643 -0.0675619 0.0242641 -0.0848315; -0.401367 -0.0844276 0.18068 0.283234 0.258779 -0.281943 0.367356 -0.479955 0.140795 -0.432806; -0.23663 -0.0797401 0.216544 -0.905204 -0.0995091 0.0763655 0.0492741 -0.109767 0.0476144 -0.19719; -0.129075 -0.0241352 0.0497069 0.0653482 0.0451723 -0.0440948 -0.916075 -0.324688 0.0601421 -0.154265; -0.286388 -0.0448442 0.0880459 0.097056 0.0557069 -0.0515494 -0.124676 0.77533 0.313144 -0.422254; -0.152639 -0.0209228 0.0398843 0.0401168 0.0213772 -0.0194277 -0.0364747 0.146655 -0.932386 -0.282928; -0.17155 0.95808 -0.191628 -0.0533125 -0.0184497 0.0155054 0.0151326 -0.038294 0.0197139 -0.102099; -0.165039 -0.0416386 0.0958373 0.244696 -0.881116 0.285925 0.0603675 -0.116221 0.043566 -0.157481; -0.215838 -0.248487 -0.925084 -0.0966376 -0.0308598 0.0256589 0.0235608 -0.0582399 0.0289353 -0.141966; 0.741761 0.0406444 -0.0690131 -0.0526165 -0.0237493 0.0208434 0.0275409 -0.0812269 0.0563755 -0.655038])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:287 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:285 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:277 [inlined]
 in macro expansion at ./multidimensional.jl:235 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:228
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 212
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
