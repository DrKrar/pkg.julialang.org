>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (460.98046875 MB free)
Uptime: 3325.0 sec
Load Avg:  1.02783203125  1.205078125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     131864 s         40 s      27182 s     144974 s          5 s
#2  3503 MHz      65563 s        141 s      19660 s     235129 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.635992 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.645847; 0.0 0.80416 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.945743; 0.0 0.0 0.623117 0.0 0.0 0.0 0.0 0.0 0.0 0.539249; 0.0 0.0 0.0 0.921014 0.0 0.0 0.0 0.0 0.0 0.166648; 0.0 0.0 0.0 0.0 0.722202 0.0 0.0 0.0 0.0 0.00132372; 0.0 0.0 0.0 0.0 0.0 0.560215 0.0 0.0 0.0 0.173859; 0.0 0.0 0.0 0.0 0.0 0.0 0.184688 0.0 0.0 0.92637; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.396543 0.0 0.262434; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.998192 0.171621; 0.645847 0.945743 0.539249 0.166648 0.00132372 0.173859 0.92637 0.262434 0.171621 0.415054]
(U,Lambda) = eig(full(A)) = ([-1.16134,0.337029,0.423815,0.56277,0.628249,0.714562,0.722203,0.918443,0.994364,2.12108],
[-0.255568 0.257294 -0.26374 -0.127148 -0.62097 0.553173 -0.00583544 0.0349288 0.0398266 -0.297177; -0.34222 0.241131 -0.215447 -0.0564776 -0.0400268 -0.710332 0.0089886 0.126412 0.109883 -0.49074; -0.214926 0.224495 -0.234435 -0.128812 0.782326 0.396841 -0.00423919 0.0278923 0.0320999 -0.245995; -0.0569181 0.0339872 -0.0290412 -0.00670565 -0.00423789 -0.0543206 0.000652923 -0.990062 0.0502088 -0.0948925; -0.000499833 0.000409314 -0.00038438 -0.000119686 -0.000104895 -0.0116598 -0.999932 0.000103039 0.000107484 -0.000646625; -0.071826 0.0927785 -0.11044 0.980816 0.0190258 0.0758029 -0.000836026 0.0074137 0.00884984 -0.0761149; -0.489481 -0.724241 0.335661 0.0353198 0.015549 0.117651 -0.00134245 0.0192855 0.0252842 -0.326911; -0.119809 0.525194 0.833773 0.0227582 0.00843243 0.0555332 -0.000627711 0.0076812 0.00970119 -0.103988; -0.0565218 0.0309157 -0.0258892 -0.00568173 -0.00345387 -0.0407196 0.000484376 -0.0328733 -0.990701 -0.104441; 0.711222 -0.119101 0.0866454 0.0144152 0.0074451 0.0672954 -0.00077894 0.0152756 0.0220992 -0.683342])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
