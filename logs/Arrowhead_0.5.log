>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc0+115
Commit 643bac8 (2016-08-01 21:42 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (882.8125 MB free)
Uptime: 3632.0 sec
Load Avg:  0.99169921875  0.974609375  0.9345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     136073 s         88 s      26557 s     158071 s          9 s
#2  3499 MHz      65310 s         58 s      20018 s     262757 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.803157 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.971036; 0.0 0.587387 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.581806; 0.0 0.0 0.84167 0.0 0.0 0.0 0.0 0.0 0.0 0.138694; 0.0 0.0 0.0 0.916175 0.0 0.0 0.0 0.0 0.0 0.383094; 0.0 0.0 0.0 0.0 0.146828 0.0 0.0 0.0 0.0 0.80885; 0.0 0.0 0.0 0.0 0.0 0.617892 0.0 0.0 0.0 0.662584; 0.0 0.0 0.0 0.0 0.0 0.0 0.663827 0.0 0.0 0.570847; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.150371 0.0 0.23142; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.311325 0.320109; 0.971036 0.581806 0.138694 0.383094 0.80885 0.662584 0.570847 0.23142 0.320109 0.77279]
(U,Lambda) = eig(full(A)) = ([-1.09379,0.150098,0.257434,0.350741,0.598446,0.645011,0.726333,0.841012,0.905966,2.43017],
[-0.345893 -0.00168473 0.172457 0.20977 -0.0746765 0.150509 0.72108 -0.120701 -0.242378 -0.430242; -0.233845 -0.0015075 0.170901 0.240285 0.828214 -0.247493 -0.238881 -0.0107939 -0.0468649 -0.2276; -0.0484214 -0.000227232 0.0230085 0.0276114 -0.00897726 0.0172875 0.0686024 0.992095 -0.0553554 -0.0629419; -0.128789 -0.000566605 0.0563648 0.0662171 -0.0189819 0.0346306 0.115123 0.0239822 0.962907 -0.18241; -0.440547 0.280275 -0.708774 -0.387677 0.028196 -0.0397985 -0.0796269 -0.00548257 -0.0273422 -0.255367; -0.261566 -0.00160485 0.178157 0.242399 -0.536408 -0.598915 -0.348578 -0.0139732 -0.0590234 -0.263563; -0.219461 -0.00125902 0.136142 0.178198 -0.137454 0.743658 -0.521015 -0.0151595 -0.0604981 -0.232977; -0.125686 -0.959911 -0.209498 -0.112879 0.00813094 -0.0114683 -0.0229222 -0.00157666 -0.00785955 -0.0731767; -0.153939 -0.00224961 0.575697 -0.793734 0.0175519 -0.0235152 -0.0440039 -0.00284361 -0.0138143 -0.10891; 0.675712 0.00113305 -0.096921 -0.0977344 0.0157431 -0.0245125 -0.0570492 -0.00470534 -0.0256617 -0.72089])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
