>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (619.22265625 MB free)
Uptime: 4385.0 sec
Load Avg:  1.2294921875  1.181640625  1.10498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     193528 s       1971 s      23558 s     172141 s          4 s
#2  3499 MHz      90176 s       3776 s      21566 s     310387 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.226992 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.312049; 0.0 0.0626293 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.178236; 0.0 0.0 0.22822 0.0 0.0 0.0 0.0 0.0 0.0 0.0383769; 0.0 0.0 0.0 0.111093 0.0 0.0 0.0 0.0 0.0 0.849618; 0.0 0.0 0.0 0.0 0.641989 0.0 0.0 0.0 0.0 0.0924956; 0.0 0.0 0.0 0.0 0.0 0.676609 0.0 0.0 0.0 0.492011; 0.0 0.0 0.0 0.0 0.0 0.0 0.360395 0.0 0.0 0.920734; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.969269 0.0 0.71888; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.583207 0.975256; 0.312049 0.178236 0.0383769 0.849618 0.0924956 0.492011 0.920734 0.71888 0.975256 0.563292]
(U,Lambda) = eig(full(A)) = ([-1.35006,0.0641311,0.183504,0.228201,0.24482,0.467928,0.641306,0.660837,0.891319,2.39171],
[-0.136699 0.0159492 -0.475221 0.127779 -0.845913 0.101962 0.00548502 0.0209929 0.0456401 -0.101867; -0.0871642 -0.987922 0.0976577 0.000532899 -0.0472798 0.034621 0.00224308 0.00869617 0.0208982 -0.0540786; -0.0167987 0.00194681 -0.0568394 -0.991789 -0.11173 0.012604 0.000676574 0.00258912 0.00562338 -0.0125351; -0.401714 0.150596 0.777075 0.00359146 -0.30705 0.187446 0.0116697 0.0451074 0.105806 -0.26326; -0.0320782 0.00133239 -0.0133611 -0.000110657 0.0112552 -0.041835 -0.986765 0.143228 0.0360456 -0.0373565; -0.167719 0.00668678 -0.0660816 -0.000543172 0.0550693 -0.185614 -0.101496 -0.910495 0.222653 -0.202721; -0.371888 0.0258695 -0.344725 -0.00344793 0.385014 0.674081 0.0238699 0.0894454 0.168503 -0.32031; -0.214133 0.00661111 -0.0605912 -0.000480214 0.0479574 -0.112887 -0.0159631 -0.0680273 -0.896079 -0.357138; -0.348511 0.0156394 -0.161594 -0.00135994 0.139287 -0.666019 0.122247 0.366669 0.307551 -0.381078; 0.69086 -0.00832401 0.0662286 0.000495035 -0.0483289 0.0787263 0.00728259 0.0291867 0.0971641 -0.706666])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
