>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (735.82421875 MB free)
Uptime: 4853.0 sec
Load Avg:  0.98046875  1.01513671875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     219864 s         68 s      27962 s     184319 s          6 s
#2  3504 MHz      77380 s         89 s      24481 s     371096 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.612394 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.282856; 0.0 0.296888 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.294789; 0.0 0.0 0.187031 0.0 0.0 0.0 0.0 0.0 0.0 0.00689904; 0.0 0.0 0.0 0.990101 0.0 0.0 0.0 0.0 0.0 0.280608; 0.0 0.0 0.0 0.0 0.830848 0.0 0.0 0.0 0.0 0.501356; 0.0 0.0 0.0 0.0 0.0 0.396821 0.0 0.0 0.0 0.0786159; 0.0 0.0 0.0 0.0 0.0 0.0 0.933743 0.0 0.0 0.118579; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.486932 0.0 0.378194; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.920283 0.801449; 0.282856 0.294789 0.00689904 0.280608 0.501356 0.0786159 0.118579 0.378194 0.801449 0.473131]
(U,Lambda) = eig(full(A)) = ([-0.534628,0.187049,0.32743,0.398851,0.530255,0.640497,0.855536,0.933462,0.983644,1.80608],
[-0.183326 0.00177616 -0.0968265 -0.0338233 0.347026 -0.899669 0.0484728 -0.00206534 0.016757 -0.15298; -0.263555 0.00716824 0.941529 0.0738253 -0.127297 -0.0766844 0.0219869 -0.00108564 0.00944075 -0.126103; -0.00710703 -0.999956 0.00479339 0.000831682 -0.00202562 -0.00135989 0.000430007 -2.16682e-5 0.000190476 -0.00275099; -0.136816 0.000933284 -0.0413066 -0.0121189 0.061494 0.0717434 -0.0868875 0.0116146 -0.955784 -0.222014; -0.272956 0.00207996 -0.0971485 -0.0296348 0.168079 0.235423 0.846172 -0.0114542 0.072166 -0.331894; -0.0627455 0.00100097 -0.110516 0.989007 -0.0593732 -0.0288376 0.00714101 -0.000343439 0.00294647 -0.0360147; -0.0600349 0.000424155 -0.0190779 -0.00566081 0.0296159 0.036144 -0.0631764 0.989642 0.0522629 -0.0877576; -0.275221 0.00336839 -0.231296 -0.10964 -0.879713 -0.220132 0.042751 -0.00198558 0.0167459 -0.185089; -0.409516 0.00291939 -0.13187 -0.0392477 0.207074 0.25604 -0.515756 -0.142572 0.278198 -0.584121; 0.743414 -0.0026709 0.097548 0.025535 -0.100773 -0.089384 0.0416669 -0.00234435 0.0219937 -0.645593])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
