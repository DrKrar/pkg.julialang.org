>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (805.578125 MB free)
Uptime: 4965.0 sec
Load Avg:  0.99072265625  0.97998046875  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     167281 s        102 s      31038 s     245866 s          9 s
#2  3500 MHz     123307 s         57 s      19924 s     321379 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.46078 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.768328; 0.0 0.408369 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.270076; 0.0 0.0 0.057737 0.0 0.0 0.0 0.0 0.0 0.0 0.37862; 0.0 0.0 0.0 0.0898187 0.0 0.0 0.0 0.0 0.0 0.390386; 0.0 0.0 0.0 0.0 0.151526 0.0 0.0 0.0 0.0 0.968794; 0.0 0.0 0.0 0.0 0.0 0.288629 0.0 0.0 0.0 0.18257; 0.0 0.0 0.0 0.0 0.0 0.0 0.0396761 0.0 0.0 0.701187; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.970736 0.0 0.443606; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.592731 0.437069; 0.768328 0.270076 0.37862 0.390386 0.968794 0.18257 0.701187 0.443606 0.437069 0.298713]
(U,Lambda) = eig(full(A)) = ([-1.40222,0.0519146,0.0735019,0.103457,0.282888,0.351701,0.416539,0.571267,0.916165,1.9935],
[-0.288189 0.0213895 -0.0475558 0.0569923 0.129777 0.648805 0.460296 0.318508 0.195102 0.349007; -0.104234 0.00862419 -0.0193328 0.023477 0.0646723 0.438995 -0.876137 0.0759371 0.0615024 0.118624; -0.181221 0.740175 0.575696 -0.219498 -0.0505287 -0.118637 -0.0279684 0.0337693 0.0510029 0.136177; -0.182834 0.117231 -0.573507 -0.758697 -0.0607559 -0.137309 -0.0316692 0.0371388 0.0546294 0.142774; -0.435708 0.110703 -0.297635 0.534193 -0.221599 -0.445792 -0.0968908 0.105714 0.146511 0.366183; -0.0754516 0.00877889 -0.0203429 0.0261327 0.955534 -0.266628 -0.0378307 0.0295857 0.0336423 0.074557; -0.339816 -0.652143 0.496896 -0.29139 -0.0866277 -0.206993 -0.0493139 0.0604143 0.0925086 0.249861; -0.130633 0.00549544 -0.0118515 0.0135572 0.0193782 0.0660075 0.0212155 -0.0508626 -0.940011 0.301976; -0.153095 0.0091989 -0.0201777 0.0236771 0.0423855 0.167028 0.0657482 -0.932674 0.156264 0.217237; 0.698785 -0.0113824 0.0239707 -0.0265052 -0.0300475 -0.0921109 -0.0265045 0.0458019 0.115636 0.696228])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
