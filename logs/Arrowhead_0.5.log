>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (476.25 MB free)
Uptime: 5473.0 sec
Load Avg:  0.94677734375  1.41845703125  1.60205078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     273030 s        100 s      34851 s     185509 s          6 s
#2  3499 MHz     109316 s         39 s      26408 s     399218 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.562662 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.295748; 0.0 0.521294 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.980556; 0.0 0.0 0.527724 0.0 0.0 0.0 0.0 0.0 0.0 0.912205; 0.0 0.0 0.0 0.927044 0.0 0.0 0.0 0.0 0.0 0.628538; 0.0 0.0 0.0 0.0 0.354435 0.0 0.0 0.0 0.0 0.658765; 0.0 0.0 0.0 0.0 0.0 0.369513 0.0 0.0 0.0 0.609053; 0.0 0.0 0.0 0.0 0.0 0.0 0.541599 0.0 0.0 0.557855; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.889385 0.0 0.703862; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.411165 0.0094516; 0.295748 0.980556 0.912205 0.628538 0.658765 0.609053 0.557855 0.703862 0.0094516 0.511792]
(U,Lambda) = eig(full(A)) = ([-1.4342,0.361532,0.40415,0.411187,0.524637,0.539117,0.561336,0.807616,0.912865,2.52837],
[-0.105213 -0.0122014 -0.074002 -0.0046185 0.0186153 -0.0512269 0.978914 0.103895 -0.0157305 -0.104877; -0.356213 -0.0509286 -0.331998 -0.0210658 -0.702095 0.224389 -0.107536 0.294697 -0.0466447 -0.340555; -0.330297 -0.0455456 -0.292786 -0.0185161 0.707322 0.326553 -0.119176 0.280453 -0.0441176 -0.317835; -0.189097 -0.00922263 -0.0476764 -0.00288219 0.0037384 -0.00660799 0.00754719 -0.45288 0.825711 -0.273609; -0.261639 0.770274 0.525572 0.0274578 -0.0092637 0.0145477 -0.0139816 0.125088 -0.0219736 -0.211234; -0.239873 -0.633183 0.697443 0.0345707 -0.00939713 0.0146457 -0.0139426 0.119629 -0.0208792 -0.196657; -0.200573 -0.025707 -0.160977 -0.0101187 0.078716 -0.916425 -0.12412 0.180456 -0.0279883 -0.195728; -0.21519 -0.0110647 -0.0575335 -0.00348177 0.00461864 -0.00819548 0.00942186 -0.740725 -0.558375 -0.299358; -0.00363846 -0.00158014 -0.0534366 0.998556 -0.000199359 0.000301265 -0.000276382 0.00205151 -0.000350915 -0.00311187; 0.710384 0.00829785 0.039663 0.00236548 -0.00239342 0.00407838 -0.00439125 0.0860514 -0.0186269 -0.697075])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
