>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (719.078125 MB free)
Uptime: 5069.0 sec
Load Avg:  0.99267578125  0.89892578125  0.89990234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     186107 s         88 s      29630 s     230139 s          5 s
#2  3500 MHz      86049 s         67 s      20272 s     382323 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.435771 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.285581; 0.0 0.893393 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.806607; 0.0 0.0 0.873743 0.0 0.0 0.0 0.0 0.0 0.0 0.024932; 0.0 0.0 0.0 0.775376 0.0 0.0 0.0 0.0 0.0 0.437286; 0.0 0.0 0.0 0.0 0.575886 0.0 0.0 0.0 0.0 0.92079; 0.0 0.0 0.0 0.0 0.0 0.965845 0.0 0.0 0.0 0.263196; 0.0 0.0 0.0 0.0 0.0 0.0 0.53164 0.0 0.0 0.935562; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.76353 0.0 0.974927; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.606575 0.528785; 0.285581 0.806607 0.024932 0.437286 0.92079 0.263196 0.935562 0.974927 0.528785 0.328921]
(U,Lambda) = eig(full(A)) = ([-1.49422,0.439388,0.550793,0.599531,0.683344,0.773452,0.85767,0.873779,0.962343,2.5046],
[-0.108918 0.98637 -0.0399611 0.0202806 0.0619008 0.00341284 0.0259873 -0.000939623 -0.00710391 -0.0929175; -0.248671 -0.0221937 0.0378934 -0.031921 -0.206068 -0.0271388 -0.866872 0.0592669 -0.153233 -0.336979; -0.00775012 -0.000717035 0.00124254 -0.00105737 -0.00702685 -0.0010032 -0.059551 -0.998109 -0.00368595 -0.0102904; -0.141822 -0.0162581 0.0313383 -0.0289195 -0.254973 -0.917181 0.204005 -0.00640419 -0.0306356 -0.170218; -0.327412 -0.0842677 0.590587 0.452892 0.459826 0.018808 0.125454 -0.00445458 -0.0312094 -0.321355; -0.0787516 -0.00624518 0.0102062 -0.00835571 -0.0499952 -0.00552058 -0.0934096 0.0041199 0.984407 -0.115134; -0.33993 -0.126685 -0.786199 0.160259 0.330937 0.0156131 0.110168 -0.00394072 -0.0284525 -0.319188; -0.317851 -0.0375721 0.0737593 -0.0691333 -0.652441 0.396513 0.397595 -0.0127439 -0.0642323 -0.376919; -0.185277 -0.0395097 0.152569 -0.8729 0.369629 0.0127872 0.0808505 -0.00285196 -0.0194688 -0.187529; 0.736082 0.0124919 -0.0160949 0.0116294 0.0536623 0.00403547 0.038392 -0.00144114 -0.0130986 -0.673119])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
