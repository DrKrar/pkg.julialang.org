>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (468.14453125 MB free)
Uptime: 3823.0 sec
Load Avg:  0.92578125  1.42724609375  1.5634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     186650 s         60 s      22011 s     138966 s          4 s
#2  3498 MHz      96107 s         96 s      11024 s     268663 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.598338 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.383014; 0.0 0.413785 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.433403; 0.0 0.0 0.968849 0.0 0.0 0.0 0.0 0.0 0.0 0.880798; 0.0 0.0 0.0 0.888822 0.0 0.0 0.0 0.0 0.0 0.00505118; 0.0 0.0 0.0 0.0 0.296146 0.0 0.0 0.0 0.0 0.534576; 0.0 0.0 0.0 0.0 0.0 0.483419 0.0 0.0 0.0 0.487499; 0.0 0.0 0.0 0.0 0.0 0.0 0.030461 0.0 0.0 0.0253989; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.427151 0.0 0.33711; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.350431 0.792033; 0.383014 0.433403 0.880798 0.00505118 0.534576 0.487499 0.0253989 0.33711 0.792033 0.00965788]
(U,Lambda) = eig(full(A)) = ([-1.28709,0.0305795,0.309479,0.393264,0.422687,0.462452,0.573507,0.769432,0.888826,1.90392],
[-0.154831 -0.00314621 -0.0295061 -0.0604905 0.0239557 0.100706 -0.887358 -0.374497 -0.000925875 -0.181989; -0.19421 -0.00527469 -0.0924625 -0.684027 -0.534872 -0.318185 0.156102 -0.203865 -0.000640659 -0.180427; -0.297579 -0.0043781 -0.0297256 -0.0495622 0.0177174 0.0621445 -0.128169 0.738898 0.00772906 -0.584342; -0.00176931 -2.74485e-5 -0.000194017 -0.000330127 0.000119049 0.000423276 -0.000921568 0.00707774 -0.999968 -0.00308688; -0.257345 -0.00938799 0.892198 0.178276 -0.0464112 -0.114847 0.110878 -0.188953 -0.000633367 -0.206263; -0.209859 -0.00502071 -0.0623673 -0.175132 0.088186 0.830695 0.311307 -0.285139 -0.000844401 -0.212896; -0.0146927 0.999829 0.00202566 0.0022674 -0.000711416 -0.00210068 0.00269066 -0.00574985 -2.07783e-5 -0.00841022; -0.149883 -0.00396448 -0.0637504 -0.3222 0.829741 -0.341194 0.132507 -0.164762 -0.000512744 -0.14161; -0.368645 -0.0115486 -0.430379 0.598892 -0.120424 -0.252617 0.204254 -0.316225 -0.00103302 -0.31628; 0.762172 0.00466376 0.0222527 0.0323879 -0.0109861 -0.0357288 0.0575281 -0.16729 -0.000702208 -0.620351])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
