>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-dev+5146
Commit 3e1878b* (2016-07-04 02:26 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [8.5251e-5 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.144152; 0.0 0.617189 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.499066; 0.0 0.0 0.497568 0.0 0.0 0.0 0.0 0.0 0.0 0.175751; 0.0 0.0 0.0 0.947269 0.0 0.0 0.0 0.0 0.0 0.177675; 0.0 0.0 0.0 0.0 0.880898 0.0 0.0 0.0 0.0 0.812947; 0.0 0.0 0.0 0.0 0.0 0.302293 0.0 0.0 0.0 0.903965; 0.0 0.0 0.0 0.0 0.0 0.0 0.341082 0.0 0.0 0.893591; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.90451 0.0 0.0694716; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00687108 0.330355; 0.144152 0.499066 0.175751 0.177675 0.812947 0.903965 0.893591 0.0694716 0.330355 0.498512]
(U,Lambda) = eig(full(A)) = ([-1.18103,0.000942954,0.0265504,0.321523,0.492475,0.567452,0.756988,0.904354,0.94494,2.16208],
[-0.085039 0.948902 0.298447 -0.0068347 0.00821442 -0.0212755 0.023243 0.000357338 -0.00197109 -0.0465959; -0.193377 -0.00457236 -0.0462973 0.0257248 -0.112281 0.840232 0.435677 0.00389567 -0.0196727 -0.225757; -0.0729524 -0.00199805 -0.0204447 0.0152149 -0.968178 -0.210592 0.0826808 0.000968472 -0.00507549 -0.0737889; -0.0581678 -0.00106004 -0.0105735 0.00432737 -0.0109617 0.0391719 -0.113957 -0.00928057 0.985551 -0.102211; -0.274712 -0.00521602 -0.0521372 0.022149 -0.0587248 0.217181 -0.800695 0.077689 -0.164001 -0.443437; -0.424624 -0.0169362 -0.179625 -0.716427 0.133367 -0.285474 0.242628 0.00336563 -0.0181731 -0.339679; -0.409054 -0.0148327 -0.155666 0.696269 0.165615 -0.330554 0.262213 0.00355612 -0.0191185 -0.342934; -0.0232101 -0.000434094 -0.00433563 0.00181612 -0.00473083 0.0172593 -0.0574725 -0.996911 -0.0222003 -0.0386061; -0.193771 -0.31463 0.919793 -0.0160009 0.0190881 -0.0493474 0.053748 0.000825106 -0.00454983 -0.10712; 0.696767 0.00564595 0.0547923 -0.0152404 0.0280585 -0.0837378 0.122042 0.00224159 -0.0129196 -0.698844])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:287 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:285 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:0 [inlined]
 in macro expansion at ./multidimensional.jl:235 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:228
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 198
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
