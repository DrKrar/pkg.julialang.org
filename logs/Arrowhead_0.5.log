>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-dev+5122
Commit 2e1bcc6* (2016-07-03 00:01 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.276572 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.382785; 0.0 0.96637 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.349078; 0.0 0.0 0.820733 0.0 0.0 0.0 0.0 0.0 0.0 0.129651; 0.0 0.0 0.0 0.50672 0.0 0.0 0.0 0.0 0.0 0.584948; 0.0 0.0 0.0 0.0 0.243121 0.0 0.0 0.0 0.0 0.708134; 0.0 0.0 0.0 0.0 0.0 0.955926 0.0 0.0 0.0 0.660776; 0.0 0.0 0.0 0.0 0.0 0.0 0.263302 0.0 0.0 0.389008; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.181616 0.0 0.887197; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.529216 0.336598; 0.382785 0.349078 0.129651 0.584948 0.708134 0.660776 0.389008 0.887197 0.336598 0.308042]
(U,Lambda) = eig(full(A)) = ([-1.27165,0.213629,0.258569,0.272792,0.437586,0.524318,0.791476,0.83584,0.964176,2.02488],
[-0.17589 -0.159702 -0.218713 0.901813 0.213348 -0.0202006 -0.103577 -0.0623139 -0.00312569 0.148021; -0.110963 -0.0121781 -0.00507313 0.00448198 -0.0592435 0.0103244 0.278089 0.243478 0.893059 0.222953; -0.0440814 -0.00560812 -0.00237235 0.00210711 -0.0303675 0.00571866 0.617443 -0.781345 -0.00507489 0.072792; -0.233999 -0.0524105 -0.0242475 0.0222679 -0.759317 -0.434567 -0.286207 -0.161813 -0.00717955 0.260487; -0.332574 -0.630553 0.471511 -0.212528 0.326792 -0.0329246 -0.179924 -0.108772 -0.00551412 0.268691; -0.211029 -0.0233765 -0.00974686 0.00861374 -0.114403 0.0200162 0.559834 0.500971 -0.449698 0.417909; -0.180295 -0.205656 -0.845455 -0.36503 0.200309 -0.0194853 -0.102617 -0.0618593 -0.00311637 0.149295; -0.434305 0.727775 0.118593 -0.0866526 0.311049 -0.0338469 -0.202687 -0.123465 -0.00636549 0.325402; -0.132969 -0.0280089 -0.012793 0.0116895 -0.329664 0.898567 -0.17882 -0.0999438 -0.00434502 0.152147; 0.711411 0.0262605 0.0102864 -0.00890518 0.0897424 -0.0130742 -0.139328 -0.0910438 -0.00561474 0.676064])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:287 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:285 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:0 [inlined]
 in macro expansion at ./multidimensional.jl:235 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:228
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 198
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
