>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (880.90625 MB free)
Uptime: 4009.0 sec
Load Avg:  1.12353515625  1.01318359375  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     184444 s        107 s      23764 s     146854 s          1 s
#2  3500 MHz      86598 s         42 s      20644 s     285454 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.977544 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.81132; 0.0 0.368137 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0658933; 0.0 0.0 0.655426 0.0 0.0 0.0 0.0 0.0 0.0 0.58235; 0.0 0.0 0.0 0.982694 0.0 0.0 0.0 0.0 0.0 0.798339; 0.0 0.0 0.0 0.0 0.445012 0.0 0.0 0.0 0.0 0.292964; 0.0 0.0 0.0 0.0 0.0 0.30955 0.0 0.0 0.0 0.693656; 0.0 0.0 0.0 0.0 0.0 0.0 0.159324 0.0 0.0 0.938576; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.743237 0.0 0.962285; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.241652 0.650931; 0.81132 0.0658933 0.58235 0.798339 0.292964 0.693656 0.938576 0.962285 0.650931 0.111524]
(U,Lambda) = eig(full(A)) = ([-1.79025,0.203111,0.276127,0.367641,0.419261,0.492427,0.678367,0.866221,0.980194,2.501],
[-0.216603 -0.037114 0.0393165 0.00995583 -0.0985241 -0.166038 0.0908869 -0.551149 0.691915 0.349303; -0.0225589 -0.0141455 0.0243425 0.993847 0.0873807 0.0526343 -0.00711858 0.0100047 0.000243317 0.0202636; -0.175951 -0.0456114 0.052187 0.0151448 -0.167176 -0.354701 -0.850734 0.208923 0.00405259 0.206963; -0.212742 -0.036279 0.0384055 0.00971452 -0.0960617 -0.161666 0.0879194 -0.518353 -0.721893 0.344879; -0.0968483 -0.0429048 0.0589633 0.0283388 -0.77132 0.613426 -0.0420758 0.0525993 0.00123718 0.0934614; -0.244103 -0.230872 0.705421 -0.0893692 0.428646 0.376574 -0.0630333 0.0942345 0.00233763 0.207612; -0.355743 0.759376 -0.273135 -0.0337204 0.244797 0.27974 -0.0606042 0.10041 0.00258415 0.262895; -0.280667 -0.0631159 0.0700236 0.0191747 -0.201371 -0.38091 0.497168 0.591722 0.00917815 0.359073; -0.236722 -0.598325 -0.6418 -0.038668 0.24847 0.257701 -0.0499545 0.0788168 0.00199197 0.188969; 0.738935 0.0354267 -0.0339907 -0.00748422 0.0677961 0.0992804 -0.0335148 0.0756247 0.00226008 0.655902])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
