>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (456.8203125 MB free)
Uptime: 4968.0 sec
Load Avg:  0.84375  1.41748046875  1.5869140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz     226271 s        129 s      33916 s     174158 s          4 s
#2  3497 MHz     115277 s         24 s      29107 s     333491 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.28773 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.878522; 0.0 0.418858 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.539617; 0.0 0.0 0.626993 0.0 0.0 0.0 0.0 0.0 0.0 0.681905; 0.0 0.0 0.0 0.763342 0.0 0.0 0.0 0.0 0.0 0.955884; 0.0 0.0 0.0 0.0 0.763916 0.0 0.0 0.0 0.0 0.621391; 0.0 0.0 0.0 0.0 0.0 0.854463 0.0 0.0 0.0 0.581383; 0.0 0.0 0.0 0.0 0.0 0.0 0.965154 0.0 0.0 0.549135; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.10969 0.0 0.220325; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.901964 0.447656; 0.878522 0.539617 0.681905 0.955884 0.621391 0.581383 0.549135 0.220325 0.447656 0.860558]
(U,Lambda) = eig(full(A)) = ([-1.19574,0.115288,0.35965,0.476867,0.662834,0.763746,0.834955,0.891373,0.948464,2.69523],
[-0.402947 0.127966 -0.770387 -0.37842 -0.102928 -0.000425294 0.0459369 -0.0311652 0.0374598 -0.263594; -0.227402 0.0446491 0.574794 -0.757851 -0.0972009 -0.00036055 0.0371078 -0.024455 0.028706 -0.171234; -0.254551 0.0334726 0.160864 0.370055 -0.836133 -0.00114907 0.0938244 -0.0552324 0.0597616 -0.238162; -0.331991 0.0370492 0.149335 0.271842 0.417966 -0.545136 0.381933 -0.159877 0.145474 -0.357414; -0.215754 0.0240632 0.0969399 0.176363 0.270162 0.838345 0.250292 -0.1044 0.094863 -0.232414; -0.192947 0.0197561 0.0741014 0.125439 0.133333 0.00147683 -0.852756 -0.337298 0.174248 -0.228146; -0.172909 0.0162298 0.0571962 0.0916225 0.0798264 0.00062829 -0.120683 0.159379 -0.926966 -0.229278; -0.114837 -0.988469 -0.0555901 -0.0488861 -0.0175048 -7.76259e-5 0.00869243 -0.00603573 0.00740045 -0.0615547; -0.145202 0.0142933 0.0520594 0.0857936 0.0822707 0.000746341 -0.191155 0.905126 0.271225 -0.180322; 0.680412 -0.025118 -0.0630674 -0.08147 -0.0439474 -0.00023044 0.0286137 -0.021414 0.0281734 -0.722351])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
