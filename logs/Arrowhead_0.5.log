>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (853.609375 MB free)
Uptime: 3717.0 sec
Load Avg:  0.96630859375  0.95947265625  0.87841796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     120591 s        114 s      25705 s     189757 s          5 s
#2  3500 MHz      64148 s         39 s      18864 s     273726 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.928126 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.800378; 0.0 0.00607162 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.654395; 0.0 0.0 0.596867 0.0 0.0 0.0 0.0 0.0 0.0 0.470187; 0.0 0.0 0.0 0.343049 0.0 0.0 0.0 0.0 0.0 0.260065; 0.0 0.0 0.0 0.0 0.650969 0.0 0.0 0.0 0.0 0.747675; 0.0 0.0 0.0 0.0 0.0 0.441092 0.0 0.0 0.0 0.0410888; 0.0 0.0 0.0 0.0 0.0 0.0 0.0144562 0.0 0.0 0.318945; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0286515 0.0 0.0587534; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.393528 0.100996; 0.800378 0.654395 0.470187 0.260065 0.747675 0.0410888 0.318945 0.0587534 0.100996 0.107506]
(U,Lambda) = eig(full(A)) = ([-1.15076,0.0127981,0.0285086,0.179415,0.364381,0.398035,0.441559,0.611225,0.799975,1.82518],
[-0.284956 0.00405573 -0.00215505 0.206342 0.106108 -0.0645868 0.0186499 -0.0666404 -0.73711 -0.559153; -0.418681 -0.451235 0.0706475 -0.728683 -0.136495 0.0714157 -0.0170368 0.0285325 0.0972816 -0.225442; -0.199129 0.00373385 -0.00200387 0.217406 0.15115 -0.101154 0.0343243 0.864068 0.273214 -0.239892; -0.128855 0.00365248 -0.00200275 0.306772 -0.911144 0.202316 -0.0299312 0.0255875 0.067173 -0.109964; -0.30714 0.00543408 -0.00290952 0.306047 0.194979 -0.126446 0.04048 -0.49637 0.592198 -0.399044; -0.0191044 0.00044497 -0.00024123 0.0303084 0.040031 -0.0408199 -0.997436 0.00637238 0.0135123 -0.0186043; -0.202592 0.892186 0.0549776 -0.373204 -0.06812 0.0355681 -0.00846656 0.0141018 0.0479201 -0.110387; -0.0368706 0.0171894 -0.995971 -0.0752216 -0.0130791 0.00680385 -0.00161326 0.00266102 0.00898989 -0.0204952; -0.0484048 0.00123037 -0.000670206 0.0910474 0.258968 0.958524 -0.0238396 0.012241 0.0293263 -0.0442099; 0.740138 -0.00463821 0.00242226 -0.193022 -0.0747367 0.0427759 -0.0113377 0.0263855 0.118021 -0.626691])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
