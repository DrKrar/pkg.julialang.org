>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (426.234375 MB free)
Uptime: 4671.0 sec
Load Avg:  0.96142578125  1.50634765625  1.67529296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     202683 s         47 s      32954 s     178484 s          9 s
#2  3496 MHz     128652 s        103 s      27945 s     289521 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.534831 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.702425; 0.0 0.478401 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.453696; 0.0 0.0 0.966259 0.0 0.0 0.0 0.0 0.0 0.0 0.68815; 0.0 0.0 0.0 0.988579 0.0 0.0 0.0 0.0 0.0 0.873441; 0.0 0.0 0.0 0.0 0.169218 0.0 0.0 0.0 0.0 0.236406; 0.0 0.0 0.0 0.0 0.0 0.10257 0.0 0.0 0.0 0.140182; 0.0 0.0 0.0 0.0 0.0 0.0 0.162559 0.0 0.0 0.985117; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.400247 0.0 0.743763; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.911991 0.155069; 0.702425 0.453696 0.68815 0.873441 0.236406 0.140182 0.985117 0.743763 0.155069 0.439928]
(U,Lambda) = eig(full(A)) = ([-1.41579,0.103466,0.168843,0.277401,0.448732,0.501441,0.762046,0.913554,0.975158,2.41973],
[-0.254953 0.0103433 0.00295424 0.237709 -0.346628 0.701246 -0.448381 -0.0184052 -0.0157727 -0.254654; -0.16958 0.00768627 0.00225599 0.196641 -0.64972 -0.6564 -0.231992 -0.0103463 -0.0090303 -0.1597; -0.204534 0.00506619 0.00132834 0.0870276 -0.0564954 0.0493502 0.488744 0.129565 -0.764596 -0.323531; -0.257196 0.00626816 0.0016401 0.106994 -0.0687426 0.0597683 0.559222 0.115528 0.643472 -0.417049; -0.105599 0.022838 0.97042 -0.190371 0.0359352 -0.0237202 -0.057838 -0.00315175 -0.00290026 -0.0717822; -0.0653656 -0.993851 -0.00325589 -0.0698516 0.0172059 -0.0117152 -0.0308302 -0.0017153 -0.00158841 -0.0413404; -0.441894 0.105891 -0.241306 -0.747291 0.146259 -0.0969012 -0.238337 -0.0130171 -0.0119865 -0.298238; -0.289963 0.0159186 0.00494739 0.527446 0.651773 -0.245003 -0.298161 -0.0143787 -0.0127913 -0.251672; -0.0471647 0.00121826 0.000321191 0.0212881 -0.0142222 0.0125907 0.149995 -0.984344 -0.0242724 -0.0702813; 0.707998 -0.00635193 -0.00153926 -0.0871171 0.0424878 -0.0333342 -0.145038 -0.00992343 -0.00988738 -0.683344])
Remedy 3 
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
