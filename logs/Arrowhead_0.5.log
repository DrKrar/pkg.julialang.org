>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc0+146
Commit 37e6397 (2016-08-03 00:47 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (749.6796875 MB free)
Uptime: 3352.0 sec
Load Avg:  0.9970703125  0.978515625  0.931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     131778 s         94 s      26102 s     134887 s          4 s
#2  3498 MHz      60888 s         59 s      18604 s     240876 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0329418 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00825925; 0.0 0.921334 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.583206; 0.0 0.0 0.283807 0.0 0.0 0.0 0.0 0.0 0.0 0.198948; 0.0 0.0 0.0 0.2822 0.0 0.0 0.0 0.0 0.0 0.681097; 0.0 0.0 0.0 0.0 0.225427 0.0 0.0 0.0 0.0 0.18862; 0.0 0.0 0.0 0.0 0.0 0.301107 0.0 0.0 0.0 0.888712; 0.0 0.0 0.0 0.0 0.0 0.0 0.247053 0.0 0.0 0.291432; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.124476 0.0 0.957807; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0462957 0.558884; 0.00825925 0.583206 0.198948 0.681097 0.18862 0.888712 0.291432 0.957807 0.558884 0.494388]
(U,Lambda) = eig(full(A)) = ([-1.35638,0.0329436,0.0613553,0.192361,0.227943,0.250936,0.283666,0.290251,0.835002,2.14095],
[-0.00404032 0.999957 -0.00718465 0.00257346 0.000535159 -0.000467111 2.21506e-5 -0.000262898 -0.00140503 0.00281448; -0.174021 -0.000139438 0.016762 -0.0397402 -0.0106273 0.0107254 -0.000614992 0.00756901 0.921725 0.343502; -0.0824376 -0.000168447 0.0221052 -0.108067 -0.0449978 0.0746185 -0.949293 -0.252863 -0.0492478 0.076953; -0.282501 -0.000580394 0.0762274 -0.376584 -0.158611 0.268584 0.312434 -0.692901 -0.168109 0.26322; -0.0810425 -0.000208141 0.0284149 -0.283356 0.946924 -0.0911624 0.00217777 -0.0238315 -0.0422195 0.0707345; -0.364409 -0.00070392 0.09162 -0.405946 -0.153479 0.218391 -0.0342647 0.670531 -0.227121 0.346985; -0.123528 -0.00028911 0.0387902 -0.264689 -0.192697 -0.925294 0.00535227 -0.055255 -0.0676316 0.110538; -0.439586 -0.00222261 0.375055 0.700847 0.116965 -0.0933792 0.0040458 -0.0473219 -0.183929 0.341206; -0.270796 -0.00889064 -0.91727 0.190061 0.0388751 -0.0336709 0.0015832 -0.0187635 -0.0966848 0.191664; 0.67964 0.000212403 -0.0247167 0.0496728 0.0126351 -0.0123289 0.000672422 -0.00819036 -0.136443 0.718342])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
