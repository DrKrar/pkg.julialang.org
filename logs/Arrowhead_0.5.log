>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (726.375 MB free)
Uptime: 4780.0 sec
Load Avg:  1.01513671875  1.01611328125  1.03173828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     213966 s         52 s      27940 s     185470 s          6 s
#2  3498 MHz      75913 s         99 s      23213 s     366867 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.889626 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.893727; 0.0 0.130061 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.180351; 0.0 0.0 0.0203903 0.0 0.0 0.0 0.0 0.0 0.0 0.481971; 0.0 0.0 0.0 0.385519 0.0 0.0 0.0 0.0 0.0 0.511971; 0.0 0.0 0.0 0.0 0.281401 0.0 0.0 0.0 0.0 0.716137; 0.0 0.0 0.0 0.0 0.0 0.365981 0.0 0.0 0.0 0.873389; 0.0 0.0 0.0 0.0 0.0 0.0 0.894238 0.0 0.0 0.0816678; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.832861 0.0 0.271474; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.553871 0.916886; 0.893727 0.180351 0.481971 0.511971 0.716137 0.873389 0.0816678 0.271474 0.916886 0.401194]
(U,Lambda) = eig(full(A)) = ([-1.44114,0.0488763,0.133817,0.306929,0.380478,0.476178,0.765998,0.840021,0.894201,2.34978],
[-0.272461 0.0597853 0.0242773 -0.0468997 -0.0148194 0.13532 -0.729908 0.42675 -0.0878628 -0.42222; -0.0815613 0.12494 -0.985732 0.0311802 0.00608026 -0.0326191 0.0286341 -0.00601691 -0.000106163 -0.0560471; -0.234321 -0.951579 -0.0872393 0.0514335 0.0113001 -0.0661966 0.0652663 -0.0139281 -0.000248104 -0.142729; -0.199152 0.0855326 0.0417606 -0.199196 -0.857396 -0.353519 0.135861 -0.0266808 -0.000452719 -0.179796; -0.295409 0.173214 0.0996241 0.857833 0.0610228 -0.230164 0.149209 -0.0303647 -0.000525663 -0.238836; -0.343414 0.154904 0.0772365 -0.452253 0.508599 -0.496149 0.220449 -0.0436397 -0.000743742 -0.303699; -0.024848 0.00543331 0.00220498 -0.00425199 -0.00134202 0.012229 -0.0642993 0.0356785 0.996129 -0.0387043; -0.0848272 0.019475 0.00797319 -0.0157836 -0.00506629 0.0476457 -0.409939 -0.898066 -0.00199074 -0.123452; -0.326564 0.102114 0.0448145 -0.113534 -0.0446429 0.738775 0.436414 -0.0758946 -0.00121184 -0.352179; 0.710555 -0.0562414 -0.0205309 0.030578 0.00844245 -0.0626005 0.100967 -0.0236859 -0.000449811 -0.689816])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
