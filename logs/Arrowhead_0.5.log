>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (447.58203125 MB free)
Uptime: 5420.0 sec
Load Avg:  1.103515625  1.4873046875  1.7568359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz     255772 s       2508 s      37646 s     198041 s         16 s
#2  3505 MHz     140842 s       5796 s      27574 s     351498 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.2
2 additional packages:
 - Compat                        0.14.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.460749 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.999888; 0.0 0.443262 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.906433; 0.0 0.0 0.911052 0.0 0.0 0.0 0.0 0.0 0.0 0.367376; 0.0 0.0 0.0 0.470536 0.0 0.0 0.0 0.0 0.0 0.178219; 0.0 0.0 0.0 0.0 0.883702 0.0 0.0 0.0 0.0 0.20043; 0.0 0.0 0.0 0.0 0.0 0.575923 0.0 0.0 0.0 0.819593; 0.0 0.0 0.0 0.0 0.0 0.0 0.91369 0.0 0.0 0.384748; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.657096 0.0 0.129639; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.550539 0.432528; 0.999888 0.906433 0.367376 0.178219 0.20043 0.819593 0.384748 0.129639 0.432528 0.480664]
(U,Lambda) = eig(full(A)) = ([-1.24379,0.450755,0.470284,0.529698,0.558783,0.656154,0.860668,0.8902,0.912357,2.2621],
[-0.416992 -0.635482 0.146826 -0.441529 0.141249 0.0370272 0.174902 -0.0591503 0.00549011 -0.387728; -0.381935 0.768298 0.0469685 -0.319288 0.108665 0.0308094 0.151912 -0.0515238 0.00479145 -0.34811; -0.121193 -0.00506902 -0.00116701 0.0293308 -0.0144427 -0.0104292 -0.510071 0.447597 0.698223 -0.189939; -0.0738999 -0.057222 -0.987955 -0.0917174 0.0279684 0.00694771 0.0319565 -0.0107888 0.00100023 -0.0694859; -0.0669697 -0.00294022 -0.000678812 0.0172384 -0.00854279 -0.00637379 -0.608709 -0.78355 0.0173442 -0.101569; -0.320168 -0.0415869 -0.0108629 0.539838 -0.662201 0.0739203 0.201353 -0.066253 0.00604075 -0.339523; -0.126769 -0.00527846 -0.00121493 0.0305067 -0.0150132 -0.0108105 -0.507613 0.416119 -0.715595 -0.199309; -0.0484798 -0.00399025 -0.000971635 0.0309822 -0.0182613 -0.995475 0.0445485 -0.0141288 0.00125934 -0.0564199; -0.171354 -0.02753 -0.00754599 0.631898 0.726578 0.0296342 0.0975635 -0.032351 0.00296425 -0.176521; 0.710858 0.00635112 0.00140015 -0.0304467 0.0138488 0.00723613 0.0699544 -0.025405 0.00247965 -0.698514])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
