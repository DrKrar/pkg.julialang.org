>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (437.12890625 MB free)
Uptime: 5341.0 sec
Load Avg:  1.0712890625  1.5869140625  1.69921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     241484 s         96 s      34302 s     206493 s          9 s
#2  3499 MHz     144371 s         54 s      26356 s     344623 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.950809 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.196094; 0.0 0.704983 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.433893; 0.0 0.0 0.155245 0.0 0.0 0.0 0.0 0.0 0.0 0.645727; 0.0 0.0 0.0 0.068281 0.0 0.0 0.0 0.0 0.0 0.453762; 0.0 0.0 0.0 0.0 0.517455 0.0 0.0 0.0 0.0 0.680784; 0.0 0.0 0.0 0.0 0.0 0.235823 0.0 0.0 0.0 0.576978; 0.0 0.0 0.0 0.0 0.0 0.0 0.548445 0.0 0.0 0.272246; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.11173 0.0 0.665664; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.188927 0.49825; 0.196094 0.433893 0.645727 0.453762 0.680784 0.576978 0.272246 0.665664 0.49825 0.459535]
(U,Lambda) = eig(full(A)) = ([-1.19434,0.0770134,0.131095,0.176891,0.218053,0.425276,0.544728,0.675373,0.940439,1.9467],
[-0.0622929 0.00398389 0.00527263 0.00476504 -0.00688974 0.0396554 -0.00623008 0.0454209 0.986074 0.141382; -0.155674 0.0122658 0.0166641 0.0154515 -0.0229411 0.164861 -0.0349312 0.934873 -0.0960948 0.2509; -0.326048 0.146528 0.58932 -0.561004 0.264685 -0.25414 0.0213896 -0.0792048 -0.0428843 0.258812; -0.244899 -0.922454 -0.159221 -0.0785696 0.0779999 -0.135084 0.0122873 -0.0476855 -0.0271306 0.173451; -0.271013 0.0274393 0.0388367 0.0375931 -0.0585401 0.784904 0.322045 -0.275037 -0.083929 0.342014; -0.27492 0.0644963 0.121428 0.184122 -0.835943 -0.323665 0.0240977 -0.0837459 -0.0427005 0.242149; -0.106451 0.0102517 0.0143776 0.0137796 -0.0212143 0.234908 -0.944962 -0.136841 -0.0362166 0.139803; -0.347313 0.340385 -0.757655 -0.192116 0.161185 -0.225628 0.019834 -0.0753466 -0.0418871 0.260476; -0.245456 0.0790345 0.18989 0.778507 0.440412 -0.224043 0.0180668 -0.0653469 -0.0345731 0.203529; 0.681445 -0.0177522 -0.0220407 -0.018806 0.0257453 -0.106277 0.0129015 -0.0637988 -0.0521466 0.718028])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
