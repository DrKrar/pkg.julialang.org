>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (885.68359375 MB free)
Uptime: 4512.0 sec
Load Avg:  1.0078125  1.138671875  1.05615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     203060 s         84 s      28806 s     170909 s          9 s
#2  3495 MHz      97879 s         74 s      19270 s     319687 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.857949 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.808693; 0.0 0.700676 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.523996; 0.0 0.0 0.990494 0.0 0.0 0.0 0.0 0.0 0.0 0.584306; 0.0 0.0 0.0 0.0273038 0.0 0.0 0.0 0.0 0.0 0.607893; 0.0 0.0 0.0 0.0 0.587487 0.0 0.0 0.0 0.0 0.360113; 0.0 0.0 0.0 0.0 0.0 0.202157 0.0 0.0 0.0 0.872942; 0.0 0.0 0.0 0.0 0.0 0.0 0.834852 0.0 0.0 0.558337; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.752176 0.0 0.386635; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.212759 0.0246179; 0.808693 0.523996 0.584306 0.607893 0.360113 0.872942 0.558337 0.386635 0.0246179 0.0519224]
(U,Lambda) = eig(full(A)) = ([-1.46592,0.0714425,0.212751,0.393181,0.606484,0.723691,0.770566,0.842634,0.960691,2.10226],
[-0.259667 -0.0665363 0.000436714 -0.283222 -0.156416 -0.215613 0.356408 0.590742 -0.360321 -0.413694; -0.180466 -0.0538882 0.000374181 -0.277377 -0.270578 0.814961 -0.288735 -0.0412957 -0.0922536 -0.237976; -0.177494 -0.0411413 0.000261764 -0.159227 -0.0740069 -0.0783934 0.102317 0.0442103 0.897488 -0.334542; -0.303771 0.891221 -0.00114213 0.27044 0.0510491 0.0312469 -0.0314973 -0.00834123 -0.0298139 -0.186484; -0.130861 -0.0451575 0.000334827 -0.30167 0.921974 0.0946409 -0.0757511 -0.0157901 -0.044172 -0.151327; -0.390493 -0.432154 -0.0287114 0.743836 0.105009 0.0599146 -0.0591443 -0.0152482 -0.0526823 -0.292437; -0.181079 -0.0473277 0.00031271 -0.205767 -0.118915 -0.179793 0.334478 -0.802746 -0.203112 -0.280417; -0.130067 -0.0367538 0.000249734 -0.175304 -0.129075 -0.485871 -0.809659 -0.047818 -0.0848825 -0.182291; -0.0109428 -0.0112729 0.999587 0.0222096 0.00304111 0.00172472 -0.00169963 -0.000437253 -0.00150676 -0.0082933; 0.746182 0.0647109 -0.000348423 0.162772 0.0486378 0.0357956 -0.0385113 -0.0111876 -0.0457777 -0.636537])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
