>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (843.27734375 MB free)
Uptime: 5457.0 sec
Load Avg:  0.95458984375  0.96337890625  1.00634765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     197085 s        108 s      27323 s     258593 s          6 s
#2  3500 MHz      81560 s         43 s      23183 s     421194 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.285257 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.862772; 0.0 0.997871 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00399088; 0.0 0.0 0.901324 0.0 0.0 0.0 0.0 0.0 0.0 0.060184; 0.0 0.0 0.0 0.326299 0.0 0.0 0.0 0.0 0.0 0.353382; 0.0 0.0 0.0 0.0 0.353561 0.0 0.0 0.0 0.0 0.989373; 0.0 0.0 0.0 0.0 0.0 0.796998 0.0 0.0 0.0 0.10682; 0.0 0.0 0.0 0.0 0.0 0.0 0.278531 0.0 0.0 0.416022; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.705611 0.0 0.944026; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.351929 0.778691; 0.862772 0.00399088 0.060184 0.353382 0.989373 0.10682 0.416022 0.944026 0.778691 0.677322]
(U,Lambda) = eig(full(A)) = ([-1.34072,0.279625,0.306122,0.32892,0.35256,0.610704,0.796253,0.900924,0.997868,2.44245],
[-0.360941 -0.373292 -0.758179 -0.13507 -0.00810604 0.228749 -0.0117447 0.00931634 -0.000715593 0.290994; -0.00116083 -1.35384e-5 0.000105783 4.0781e-5 3.91063e-6 -0.000889437 0.000137691 -0.000273672 0.999997 0.00201004; -0.0182596 -0.00023587 0.001854 0.000718723 6.93494e-5 -0.017869 0.00398439 -0.99926 -0.000368449 0.0284133; -0.144198 -0.0184476 0.321118 -0.921616 -0.00850927 0.107214 -0.00523064 0.00408842 -0.000311012 0.1215; -0.397218 -0.0326043 0.382396 0.274467 0.624689 0.331994 -0.0155462 0.0120166 -0.00090759 0.344606; -0.0339906 -0.000503062 0.00399002 0.00155998 0.000151981 -0.0494766 0.997046 0.00683324 -0.000314312 0.0472331; -0.174766 0.926567 -0.276473 -0.0564367 -0.00355357 0.108068 -0.00558966 0.00444373 -0.000341828 0.139879; -0.313807 -0.00539958 0.0433284 0.017131 0.0016908 -0.858283 -0.072447 0.0321328 -0.00190916 0.39546; -0.312934 -0.0262407 0.31169 0.231344 -0.780775 0.259649 -0.0121907 0.00942957 -0.000712518 0.271012; 0.680228 0.00243653 -0.0183355 -0.0068357 -0.000632335 0.0862868 -0.00695608 0.00664806 -0.000591048 0.727573])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
