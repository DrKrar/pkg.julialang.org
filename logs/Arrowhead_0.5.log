>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (435.4140625 MB free)
Uptime: 5709.0 sec
Load Avg:  0.9970703125  1.44482421875  1.61962890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     266670 s        103 s      34532 s     213071 s         11 s
#2  3499 MHz     121452 s         46 s      27116 s     406174 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.843071 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.22606; 0.0 0.958284 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.515634; 0.0 0.0 0.466484 0.0 0.0 0.0 0.0 0.0 0.0 0.831917; 0.0 0.0 0.0 0.71074 0.0 0.0 0.0 0.0 0.0 0.832061; 0.0 0.0 0.0 0.0 0.261153 0.0 0.0 0.0 0.0 0.718826; 0.0 0.0 0.0 0.0 0.0 0.479321 0.0 0.0 0.0 0.639253; 0.0 0.0 0.0 0.0 0.0 0.0 0.515816 0.0 0.0 0.906093; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.576362 0.0 0.215927; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.756005 0.954609; 0.22606 0.515634 0.831917 0.832061 0.718826 0.639253 0.906093 0.215927 0.954609 0.783123]
(U,Lambda) = eig(full(A)) = ([-1.42557,0.298105,0.473669,0.496221,0.573449,0.628986,0.732772,0.840563,0.938721,2.79344],
[-0.0684866 0.0196997 -0.00374481 -0.00982611 -0.0108954 0.0615998 -0.0364434 0.987506 -0.0861273 -0.0835617; -0.148665 0.0370924 -0.00651104 -0.0168244 -0.0174118 0.091347 -0.0406574 0.0479977 0.9605 -0.202567; -0.3022 0.234637 0.708576 0.421781 0.101069 -0.298651 0.0555519 -0.0243699 -0.0641981 -0.257746; -0.267694 0.0957622 -0.0214774 -0.0584775 -0.0787571 0.593728 0.67156 -0.0702331 -0.133002 -0.288025; -0.292906 -0.923832 0.0206985 0.0461032 0.0299113 -0.114003 0.0271021 -0.0135949 -0.038661 -0.20465; -0.230649 0.167526 -0.692124 0.570268 0.0882532 -0.249169 0.0448486 -0.0193915 -0.0507088 -0.199153; -0.320782 0.197651 -0.131556 -0.697154 0.204305 -0.467072 0.0742629 -0.0305749 -0.0780786 -0.286808; -0.074132 0.0368524 -0.0128668 -0.0406212 -0.963302 -0.239366 0.0245478 -0.00895588 -0.0217155 -0.0702144; -0.300749 0.0990056 -0.0206902 -0.0554003 -0.0679525 0.438427 -0.730589 -0.123712 -0.190393 -0.337787; 0.687302 -0.0474903 0.00611936 0.0150765 0.012995 -0.0583367 0.0177815 -0.0109581 -0.036442 -0.720944])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
