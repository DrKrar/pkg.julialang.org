>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (922.953125 MB free)
Uptime: 4564.0 sec
Load Avg:  0.9970703125  1.08544921875  1.04345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     216555 s         61 s      27426 s     164855 s          5 s
#2  3500 MHz      97657 s       6334 s      20585 s     317490 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.316942 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.345155; 0.0 0.773644 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.68353; 0.0 0.0 0.829557 0.0 0.0 0.0 0.0 0.0 0.0 0.0361121; 0.0 0.0 0.0 0.702128 0.0 0.0 0.0 0.0 0.0 0.475916; 0.0 0.0 0.0 0.0 0.980451 0.0 0.0 0.0 0.0 0.836829; 0.0 0.0 0.0 0.0 0.0 0.229934 0.0 0.0 0.0 0.94633; 0.0 0.0 0.0 0.0 0.0 0.0 0.495735 0.0 0.0 0.948186; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.643712 0.0 0.845533; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.741173 0.873836; 0.345155 0.68353 0.0361121 0.475916 0.836829 0.94633 0.948186 0.845533 0.873836 0.100876]
(U,Lambda) = eig(full(A)) = ([-1.85775,0.289291,0.340675,0.556207,0.677103,0.712812,0.763369,0.829497,0.928076,2.57487],
[-0.11799 0.590847 -0.787095 -0.072358 -0.0267822 -0.0153077 0.0098843 0.00112071 -0.0316655 -0.10085; -0.193108 0.0668003 0.0854385 0.157679 0.197866 0.197275 -0.850494 0.0203671 -0.248157 -0.250359; -0.00998995 0.00316393 0.00399762 0.00662649 0.00661972 0.00543075 -0.0069752 -0.99955 -0.0205513 -0.0136506; -0.13821 0.0545674 0.0712575 0.163592 0.531462 -0.782089 0.0993504 0.0062185 -0.118094 -0.167659; -0.21919 0.0573113 0.0707883 0.0989398 0.0770942 0.054895 -0.0492827 -0.0092259 0.895824 -0.346264; -0.336981 -0.754671 -0.462476 -0.145483 -0.0591423 -0.0344074 0.02268 0.00262679 -0.0759988 -0.266247; -0.299509 0.217407 0.330937 -0.786488 -0.146104 -0.0766879 0.0452933 0.00472797 -0.122963 -0.300874; -0.251284 0.112926 0.151004 0.484674 -0.707665 -0.214831 0.0903383 0.00757421 -0.166711 -0.288859; -0.249957 0.091535 0.118082 0.236967 0.381152 0.54094 0.503313 0.0164654 -0.262133 -0.314395; 0.743409 -0.0473351 -0.0541194 -0.0501592 -0.0279465 -0.0175568 0.0127844 0.00166425 -0.0560671 -0.659741])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
