>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-pre+5606
Commit 5fe9e53 (2016-07-21 19:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.172115 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0835352; 0.0 0.396529 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0743035; 0.0 0.0 0.0539658 0.0 0.0 0.0 0.0 0.0 0.0 0.269025; 0.0 0.0 0.0 0.0549851 0.0 0.0 0.0 0.0 0.0 0.871142; 0.0 0.0 0.0 0.0 0.298727 0.0 0.0 0.0 0.0 0.097546; 0.0 0.0 0.0 0.0 0.0 0.10601 0.0 0.0 0.0 0.17116; 0.0 0.0 0.0 0.0 0.0 0.0 0.0659364 0.0 0.0 0.632197; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.215443 0.0 0.916746; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.92532 0.0131706; 0.0835352 0.0743035 0.269025 0.871142 0.097546 0.17116 0.632197 0.916746 0.0131706 0.764438]
(U,Lambda) = eig(full(A)) = ([-1.05086,0.0540509,0.0622322,0.104546,0.153988,0.172978,0.298129,0.395909,0.925251,1.93725],
[-0.0426999 0.000214488 -0.0035961 -0.0103249 -0.232081 -0.970985 -0.00405046 -0.00311062 -0.000581034 -0.0368512; -0.0320922 6.57704e-5 -0.00105141 -0.00212529 -0.015429 0.00333277 0.00461391 0.998641 -0.000736185 -0.037553; -0.152221 -0.959077 0.153947 0.0444203 0.135461 -0.0226659 -0.00673232 -0.00655637 -0.00161747 -0.111233; -0.492459 0.282678 0.568614 0.146798 0.443157 -0.0740295 -0.0218916 -0.021294 -0.00524375 -0.360385; -0.0451839 0.000120857 -0.00195111 -0.00419536 -0.033942 0.00777817 0.997249 -0.00836468 -0.000815599 -0.0463571; -0.0924896 0.000998604 -0.0184944 -0.976121 0.179672 -0.0256276 -0.00544358 -0.00492018 -0.00109445 -0.0727807; -0.353878 0.0161246 -0.807339 0.13675 0.361603 -0.0592204 -0.0166363 -0.0159661 -0.00385395 -0.263066; -0.452571 0.00172195 -0.0283044 -0.0690394 -0.751289 0.216468 -0.0677434 -0.0423329 -0.00676571 -0.414595; -0.00416633 4.58254e-6 -7.21845e-5 -0.000134014 -0.000859962 0.000175534 0.000128309 0.000207318 0.99994 -0.0101348; 0.625137 -0.000303147 0.00473035 0.00835155 0.0503634 -0.010027 -0.00611017 -0.00833345 -0.00523848 -0.778678])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 200
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:736
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
