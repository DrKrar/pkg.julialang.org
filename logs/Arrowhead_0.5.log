>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (845.328125 MB free)
Uptime: 5220.0 sec
Load Avg:  0.83056640625  0.9384765625  0.95703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     189456 s         83 s      24908 s     243241 s          6 s
#2  3496 MHz      92640 s         67 s      25755 s     383579 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.719184 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.521883; 0.0 0.395736 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.471101; 0.0 0.0 0.986485 0.0 0.0 0.0 0.0 0.0 0.0 0.875133; 0.0 0.0 0.0 0.356038 0.0 0.0 0.0 0.0 0.0 0.409729; 0.0 0.0 0.0 0.0 0.752236 0.0 0.0 0.0 0.0 0.899146; 0.0 0.0 0.0 0.0 0.0 0.966064 0.0 0.0 0.0 0.937619; 0.0 0.0 0.0 0.0 0.0 0.0 0.348454 0.0 0.0 0.853745; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.898768 0.0 0.866202; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.216496 0.353532; 0.521883 0.471101 0.875133 0.409729 0.899146 0.937619 0.853745 0.866202 0.353532 0.638804]
(U,Lambda) = eig(full(A)) = ([-1.49739,0.225742,0.354505,0.384543,0.488699,0.726204,0.81254,0.926434,0.977949,2.87904],
[-0.167234 -0.0269731 0.00473256 0.030828 -0.222952 0.902775 -0.271514 0.0595161 0.0155241 -0.167688; -0.176753 -0.0706762 0.0377851 0.832003 0.49898 0.0173109 -0.0548966 0.0209808 0.00622832 -0.131655; -0.250252 -0.0293379 0.00457935 0.0287389 -0.173106 -0.0408288 0.244359 -0.344441 -0.789114 -0.320907; -0.15702 -0.0801968 0.883514 -0.284138 0.304113 0.0134411 -0.0435932 0.0169776 0.00507117 -0.112702; -0.283892 -0.0435541 0.00747607 0.0483386 -0.335945 -0.419416 -0.724183 0.121996 0.030663 -0.293397; -0.270343 -0.0322997 0.00507016 0.0318721 -0.1934 -0.0474682 0.29663 -0.559196 0.607273 -0.34015; -0.328524 -0.177433 -0.466625 -0.467632 0.599407 0.0274448 -0.0893499 0.0349118 0.0104394 -0.234132; -0.256766 -0.0328231 0.00526312 0.0332978 -0.20799 -0.060954 0.487905 0.739994 0.0842057 -0.303562; -0.146514 0.975108 -0.00847139 -0.041586 0.127884 0.00842252 -0.0288081 0.0117697 0.00357375 -0.0921478; 0.710286 0.0255031 -0.00330699 -0.0197674 0.0984646 0.0121433 -0.0485696 0.0236351 0.00769731 -0.69399])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
