>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (552.375 MB free)
Uptime: 4951.0 sec
Load Avg:  1.55810546875  1.21484375  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     211632 s       1154 s      30815 s     205750 s          9 s
#2  3500 MHz     100847 s       5205 s      21156 s     352763 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.531082 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.781542; 0.0 0.185331 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.471825; 0.0 0.0 0.636438 0.0 0.0 0.0 0.0 0.0 0.0 0.77878; 0.0 0.0 0.0 0.840803 0.0 0.0 0.0 0.0 0.0 0.626835; 0.0 0.0 0.0 0.0 0.0649666 0.0 0.0 0.0 0.0 0.158606; 0.0 0.0 0.0 0.0 0.0 0.143856 0.0 0.0 0.0 0.382369; 0.0 0.0 0.0 0.0 0.0 0.0 0.0944404 0.0 0.0 0.235193; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.57246 0.0 0.112521; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.38451 0.0860389; 0.781542 0.471825 0.77878 0.626835 0.158606 0.382369 0.235193 0.112521 0.0860389 0.801646]
(U,Lambda) = eig(full(A)) = ([-0.802693,0.0680594,0.101481,0.158417,0.269464,0.385943,0.570431,0.585597,0.786515,2.13232],
[-0.38747 0.0321434 -0.0513523 -0.0655863 -0.387431 -0.0890931 0.330233 -0.626753 0.233251 -0.357176; -0.315778 0.0766178 -0.158837 -0.548245 0.727323 0.0389133 0.0203709 -0.0515344 0.0598305 -0.177339; -0.357835 0.0260927 -0.041093 -0.0509503 -0.275226 -0.0514387 -0.196167 0.66968 0.395594 -0.380981; -0.252204 0.0154475 -0.0239327 -0.0287278 -0.142288 -0.0228008 -0.0385473 0.107381 -0.880242 -0.355172; -0.120876 -0.976584 0.122609 0.0530786 0.100587 0.0081756 0.00521713 -0.0133185 0.0167573 -0.0561423; -0.267121 0.0960671 -0.254711 0.821265 0.394799 0.0261327 0.0149036 -0.0378425 0.0453577 -0.140718; -0.173355 0.169776 0.942892 0.11497 0.174277 0.0133492 0.00821542 -0.0209348 0.0259072 -0.0844563; -0.0541065 0.00424814 -0.00674377 -0.00849896 -0.048162 -0.00998132 -0.921906 -0.374451 0.0400734 -0.0527876; -0.0479224 0.00517763 -0.00858098 -0.0119011 -0.0969914 0.993016 0.00769431 -0.0187057 0.0163159 -0.0360235; 0.661254 -0.0190433 0.0282275 0.0312737 0.129691 0.0165453 0.0166266 -0.0437185 0.0762341 -0.731787])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
