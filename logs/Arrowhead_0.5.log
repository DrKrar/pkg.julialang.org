>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (768.6328125 MB free)
Uptime: 4401.0 sec
Load Avg:  0.998046875  0.99267578125  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3489 MHz     222480 s         77 s      27713 s     140572 s          6 s
#2  3489 MHz      82834 s         78 s      23169 s     322325 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.349686 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.82046; 0.0 0.814232 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.970393; 0.0 0.0 0.190425 0.0 0.0 0.0 0.0 0.0 0.0 0.164175; 0.0 0.0 0.0 0.441906 0.0 0.0 0.0 0.0 0.0 0.0580284; 0.0 0.0 0.0 0.0 0.883064 0.0 0.0 0.0 0.0 0.128581; 0.0 0.0 0.0 0.0 0.0 0.111939 0.0 0.0 0.0 0.705212; 0.0 0.0 0.0 0.0 0.0 0.0 0.0701412 0.0 0.0 0.715282; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.380674 0.0 0.476846; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.891679 0.567956; 0.82046 0.970393 0.164175 0.0580284 0.128581 0.705212 0.715282 0.476846 0.567956 0.493506]
(U,Lambda) = eig(full(A)) = ([-1.34526,0.0892069,0.184353,0.223362,0.373052,0.441595,0.602899,0.872866,0.883741,2.30144],
[-0.33544 0.0644502 -0.165434 0.543898 0.48841 -0.0477637 -0.480781 0.0426749 -0.00754469 -0.293733; -0.311393 0.0273863 -0.0513591 0.137531 -0.0305946 0.0139335 0.681324 0.450366 -0.0685615 -0.455927; -0.0740829 0.0331887 -0.9014 -0.417414 0.0125042 -0.00349734 -0.0590589 0.00654648 -0.00116291 -0.054342; -0.0225003 0.00336648 -0.00751105 0.0222355 -0.0117226 0.99772 -0.0534823 0.00366412 -0.000644986 -0.021805; -0.0399864 0.00331417 -0.00613489 0.0163221 -0.00350679 0.00155839 0.0680984 -0.343101 -0.933651 -0.063344; -0.335362 0.63477 0.324658 -0.53002 0.0375669 -0.0114461 -0.213132 0.0252199 -0.00448728 -0.225058; -0.350195 -0.767652 0.208782 -0.390936 0.0328455 -0.0103032 -0.199215 0.024248 -0.00431753 -0.223995; -0.191455 0.0334756 -0.0809726 0.253841 -0.870229 -0.0418802 -0.31839 0.0263639 -0.00465502 -0.173469; -0.175944 0.0144818 -0.0267684 0.0711668 -0.0152325 0.00675179 0.291824 -0.821532 0.351358 -0.281507; 0.692969 -0.0204616 0.0333371 -0.0837425 0.0139096 -0.00535055 -0.14838 0.0272124 -0.00491099 -0.698747])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
