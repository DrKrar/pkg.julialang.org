>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (478.02734375 MB free)
Uptime: 3702.0 sec
Load Avg:  0.90673828125  0.9638671875  0.927734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     129062 s         66 s      25242 s     185414 s          7 s
#2  3499 MHz      72767 s         94 s      19122 s     261972 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.00832754 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.711949; 0.0 0.451064 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.633598; 0.0 0.0 0.223464 0.0 0.0 0.0 0.0 0.0 0.0 0.646578; 0.0 0.0 0.0 0.504198 0.0 0.0 0.0 0.0 0.0 0.0172654; 0.0 0.0 0.0 0.0 0.5449 0.0 0.0 0.0 0.0 0.875921; 0.0 0.0 0.0 0.0 0.0 0.0916337 0.0 0.0 0.0 0.439984; 0.0 0.0 0.0 0.0 0.0 0.0 0.652656 0.0 0.0 0.41749; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.581886 0.0 0.393851; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.826579 0.0127024; 0.711949 0.633598 0.646578 0.0172654 0.875921 0.439984 0.41749 0.393851 0.0127024 0.65155]
(U,Lambda) = eig(full(A)) = ([-1.14392,0.0563149,0.137203,0.315362,0.484475,0.504224,0.576325,0.640954,0.826555,2.13877],
[-0.410532 -0.743569 -0.399662 0.232073 0.0608562 0.00218133 0.0163819 0.0298974 -0.00161782 -0.24517; -0.263938 0.0804435 0.146047 -0.467294 0.771846 0.018109 0.0661093 0.0886428 -0.00313739 -0.275426; -0.314177 0.193873 0.542283 0.704165 0.100823 0.00349903 0.0239486 0.0411439 -0.00199339 -0.247669; -0.00696039 0.00193202 0.00340356 -0.00915076 -0.0356288 0.999251 0.00312854 0.00335398 -9.9585e-5 -0.00774929; -0.344609 0.0898512 0.155433 -0.381922 -0.589993 -0.0327185 0.364292 0.242258 -0.0057823 -0.403181; -0.236603 0.624353 -0.698516 0.196824 0.0455846 0.00162025 0.0118641 0.0212786 -0.00111314 -0.157681; -0.154399 0.0350873 0.0585967 -0.12388 -0.101034 -0.00427347 -0.0714834 -0.947795 -0.0044638 -0.206103; -0.15163 0.0375577 0.0640763 -0.147897 -0.164558 -0.00770522 -0.925553 0.177138 -0.00299301 -0.185594; -0.00428306 0.000826504 0.00133305 -0.00248682 -0.00151121 -5.98708e-5 -0.000663389 -0.00181795 0.999958 -0.00710194; 0.664424 -0.0501186 -0.0723462 0.100084 0.0407003 0.00151937 0.0130696 0.0265663 -0.00185932 -0.733648])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
