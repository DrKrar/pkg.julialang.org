>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (784.5546875 MB free)
Uptime: 4115.0 sec
Load Avg:  1.0458984375  1.240234375  1.11865234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     162135 s         52 s      22236 s     188199 s          2 s
#2  3500 MHz      97352 s         98 s      19244 s     281266 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.672368 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0139787; 0.0 0.835501 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.723009; 0.0 0.0 0.78963 0.0 0.0 0.0 0.0 0.0 0.0 0.688183; 0.0 0.0 0.0 0.88935 0.0 0.0 0.0 0.0 0.0 0.902939; 0.0 0.0 0.0 0.0 0.963379 0.0 0.0 0.0 0.0 0.10308; 0.0 0.0 0.0 0.0 0.0 0.532676 0.0 0.0 0.0 0.154; 0.0 0.0 0.0 0.0 0.0 0.0 0.585031 0.0 0.0 0.410571; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.122394 0.0 0.0950508; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.407164 0.162596; 0.0139787 0.723009 0.688183 0.902939 0.10308 0.154 0.410571 0.0950508 0.162596 0.669757]
(U,Lambda) = eig(full(A)) = ([-0.696555,0.125997,0.412343,0.535322,0.608083,0.67239,0.806891,0.860393,0.962796,2.17959],
[-0.00737187 -0.000965874 -0.00169676 0.00172986 0.0114926 0.999879 0.00214198 0.00169881 -0.000271585 -0.00637408; -0.34069 -0.0384708 -0.0539274 0.0408483 0.168028 -0.00701965 -0.520931 0.663716 -0.0320489 -0.369696; -0.334289 -0.0391488 -0.0575705 0.0458939 0.200344 -0.00929571 0.821827 0.222226 -0.0224245 -0.340276; -0.411029 -0.0446555 -0.0597451 0.0432546 0.169669 -0.00659075 -0.225722 -0.712528 -0.0693696 -0.480969; -0.0448306 -0.00464722 -0.00590423 0.00408398 0.0153337 -0.000560988 -0.0135782 -0.0228712 0.996785 -0.0582499; -0.0904437 -0.0142959 -0.040393 -0.986888 -0.107937 0.00174557 0.0115765 0.0107378 -0.00202028 -0.0642657; -0.231277 -0.0337665 -0.0750405 0.140077 -0.941326 0.00744279 0.0381466 0.0340705 -0.00613262 -0.176961; -0.0837895 0.995854 0.0103467 -0.00390384 -0.0103433 0.000273686 0.00286241 0.00294303 -0.000638187 -0.0317548; -0.106351 -0.0218317 0.99086 -0.0215166 -0.0427711 0.000970841 0.0083848 0.00819758 -0.0016512 -0.0630478; 0.721923 0.0377522 0.0315623 -0.0169594 -0.0528521 0.00158364 0.0206133 0.0228504 -0.0056426 -0.687273])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
