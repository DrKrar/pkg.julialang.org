>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (436.68359375 MB free)
Uptime: 4975.0 sec
Load Avg:  1.0068359375  1.48974609375  1.658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     224717 s        108 s      33597 s     180130 s          6 s
#2  3499 MHz     117896 s         38 s      29156 s     331558 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.808187 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.656096; 0.0 0.348343 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.760552; 0.0 0.0 0.534258 0.0 0.0 0.0 0.0 0.0 0.0 0.0568385; 0.0 0.0 0.0 0.31889 0.0 0.0 0.0 0.0 0.0 0.187858; 0.0 0.0 0.0 0.0 0.665892 0.0 0.0 0.0 0.0 0.994917; 0.0 0.0 0.0 0.0 0.0 0.304844 0.0 0.0 0.0 0.678433; 0.0 0.0 0.0 0.0 0.0 0.0 0.088542 0.0 0.0 0.0309434; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0546348 0.0 0.610699; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.148194 0.94049; 0.656096 0.760552 0.0568385 0.187858 0.994917 0.678433 0.0309434 0.610699 0.94049 0.519096]
(U,Lambda) = eig(full(A)) = ([-1.49549,0.0750635,0.0886352,0.225643,0.317257,0.327254,0.523215,0.537318,0.775413,2.41657],
[-0.19655 -0.0271563 0.00273686 0.0668869 0.0102941 0.0259399 0.211211 0.114856 -0.901856 -0.290215; -0.284665 -0.0844506 0.00879005 0.368118 0.188452 0.685739 -0.398988 -0.19084 0.0802294 -0.261621; -0.0193254 -0.003756 0.000382844 0.0109377 0.00201752 0.00522092 0.472164 -0.880879 0.0106182 -0.0214829; -0.0714542 -0.0233791 0.00244887 0.119645 0.885681 -0.427102 -0.0843451 -0.0407817 0.0185383 -0.0637136; -0.317675 -0.0510982 0.00517326 0.134212 0.0219814 0.0558644 0.639711 0.366925 0.409256 -0.404318; -0.260064 -0.089593 0.00941847 0.508719 -0.421004 -0.575647 -0.285012 -0.138381 0.0649513 -0.228566; -0.0134813 -0.0696638 -0.997312 -0.0134038 -0.00104211 -0.00246478 -0.00653065 -0.00326951 0.00202953 -0.00945631; -0.271887 0.90712 -0.0539126 -0.212086 -0.0179117 -0.0425947 -0.119562 -0.0599942 0.0381706 -0.183951; -0.394878 -0.390246 0.0473978 -0.72117 -0.0428494 -0.0998711 -0.230064 -0.114607 0.067552 -0.294972; 0.690124 0.0303445 -0.00300156 -0.0593884 -0.00770264 -0.0190145 -0.0917385 -0.0474181 0.0450509 -0.711447])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
