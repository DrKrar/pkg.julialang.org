>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (836.60546875 MB free)
Uptime: 4398.0 sec
Load Avg:  1.03857421875  0.9853515625  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     211263 s        100 s      25198 s     150235 s          4 s
#2  3499 MHz      68140 s         46 s      20328 s     343726 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.402795 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.428468; 0.0 0.850233 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.153285; 0.0 0.0 0.853129 0.0 0.0 0.0 0.0 0.0 0.0 0.174604; 0.0 0.0 0.0 0.920272 0.0 0.0 0.0 0.0 0.0 0.444125; 0.0 0.0 0.0 0.0 0.868317 0.0 0.0 0.0 0.0 0.0252326; 0.0 0.0 0.0 0.0 0.0 0.338628 0.0 0.0 0.0 0.262868; 0.0 0.0 0.0 0.0 0.0 0.0 0.977393 0.0 0.0 0.102077; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.540567 0.0 0.980714; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.994452 0.282775; 0.428468 0.153285 0.174604 0.444125 0.0252326 0.262868 0.102077 0.980714 0.282775 0.556875]
(U,Lambda) = eig(full(A)) = ([-0.680726,0.346652,0.425426,0.814671,0.851486,0.868002,0.876723,0.973391,0.983608,1.84343],
[-0.279606 -0.224167 -0.899967 -0.119996 -0.00588491 0.0112318 0.0611439 0.0248767 -0.0232271 -0.205362; -0.0707949 -0.00894081 0.0171529 0.497197 -0.754201 0.105199 0.391354 0.0412328 -0.0361859 -0.106567; -0.0804887 -0.0101261 0.0194062 0.523705 0.654889 0.143159 0.500492 0.0480983 -0.0421334 -0.121743; -0.196146 -0.0227419 0.0426642 0.485122 0.0397896 -0.103617 -0.689716 0.276989 -0.220785 -0.332189; -0.0115176 -0.00142074 0.00270828 0.0542548 0.00923864 -0.977335 0.203016 0.00795556 -0.00689096 -0.0178674; -0.182338 0.962253 -0.143964 -0.0636952 -0.00315871 0.00605553 0.0330389 0.0137192 -0.0128323 -0.120618; -0.0435286 -0.00475357 0.00879105 0.0723592 0.00499622 -0.0113794 -0.0685757 -0.844875 -0.51718 -0.0813852; -0.567789 -0.148552 0.404896 -0.412707 -0.0194385 0.0365253 0.197309 0.0750644 -0.0696964 -0.519755; -0.119356 -0.0128217 0.0236231 0.181431 0.0121892 -0.0272709 -0.162444 -0.4448 0.821032 -0.229985; 0.707073 0.0293728 -0.0475366 -0.115349 -0.00616267 0.0121949 0.0676312 0.0331286 -0.0314856 -0.690485])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
