>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (769.4609375 MB free)
Uptime: 4608.0 sec
Load Avg:  1.07958984375  1.001953125  0.98779296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     194861 s        121 s      27633 s     192429 s          6 s
#2  3500 MHz      97526 s         46 s      22492 s     323019 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.605507 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.201236; 0.0 0.0261677 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0881034; 0.0 0.0 0.0111146 0.0 0.0 0.0 0.0 0.0 0.0 0.351296; 0.0 0.0 0.0 0.822413 0.0 0.0 0.0 0.0 0.0 0.836874; 0.0 0.0 0.0 0.0 0.0659063 0.0 0.0 0.0 0.0 0.472343; 0.0 0.0 0.0 0.0 0.0 0.34021 0.0 0.0 0.0 0.396553; 0.0 0.0 0.0 0.0 0.0 0.0 0.369134 0.0 0.0 0.0135737; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.11199 0.0 0.949817; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.439819 0.56274; 0.201236 0.0881034 0.351296 0.836874 0.472343 0.396553 0.0135737 0.949817 0.56274 0.723082]
(U,Lambda) = eig(full(A)) = ([-1.07147,0.0184484,0.0269395,0.0751215,0.292348,0.369091,0.388173,0.588897,0.672386,2.1554],
[-0.0781851 -0.00668107 0.00296044 -0.00657361 -0.0584422 0.0027356 -0.064192 0.896581 -0.416337 0.0951485; -0.0522973 -0.22245 -0.971704 0.0311814 0.0301024 -0.000825697 0.0168725 -0.0115862 -0.0188645 0.0303227; -0.211426 0.93361 -0.188945 0.0950902 0.113603 -0.00315387 0.0645903 -0.0449944 -0.0735064 0.120057; -0.287907 -0.0202882 0.00895443 -0.0194026 -0.143587 0.00593304 -0.133608 0.265212 0.771835 0.460078; -0.270582 -0.193986 0.103173 0.888058 0.189708 -0.00500697 0.101612 -0.0668364 -0.107764 0.165659; -0.183025 -0.0240209 0.0107742 -0.025918 -0.753529 -0.044128 0.573187 -0.118004 -0.165183 0.160095; -0.00613901 -0.000754398 0.000337619 -0.000799872 -0.0160768 0.998584 0.0494274 -0.00457081 -0.00619335 0.00556864; -0.522916 -0.197905 0.0950535 -0.446353 0.478947 -0.011873 0.238421 -0.147386 -0.234518 0.340629; -0.242608 -0.0260294 0.0116008 -0.026734 -0.347045 0.0255704 -0.755387 -0.279347 -0.334805 0.240378; 0.651544 0.0194904 -0.00851145 0.0173256 0.0909462 -0.00321384 0.069327 -0.074003 -0.138367 0.732822])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
