>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (450.703125 MB free)
Uptime: 4675.0 sec
Load Avg:  1.0029296875  1.546875  1.6689453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     190099 s         83 s      34243 s     194332 s          6 s
#2  3500 MHz     140320 s        120 s      24423 s     265261 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.716706 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.629518; 0.0 0.532097 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.710628; 0.0 0.0 0.607193 0.0 0.0 0.0 0.0 0.0 0.0 0.553129; 0.0 0.0 0.0 0.694504 0.0 0.0 0.0 0.0 0.0 0.0654148; 0.0 0.0 0.0 0.0 0.395685 0.0 0.0 0.0 0.0 0.330601; 0.0 0.0 0.0 0.0 0.0 0.288592 0.0 0.0 0.0 0.309847; 0.0 0.0 0.0 0.0 0.0 0.0 0.471713 0.0 0.0 0.230926; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.333531 0.0 0.744234; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.964053 0.821987; 0.629518 0.710628 0.553129 0.0654148 0.330601 0.309847 0.230926 0.744234 0.821987 0.890925]
(U,Lambda) = eig(full(A)) = ([-0.912481,0.293478,0.3785,0.427884,0.477871,0.577826,0.671156,0.694876,0.866808,2.41908],
[-0.258618 -0.0224376 -0.0705665 -0.134013 -0.0648369 -0.17902 -0.776323 0.16164 -0.41466 0.269581; -0.329248 -0.0449241 -0.175401 -0.419265 -0.322362 0.613736 0.287059 -0.0244704 -0.209914 0.274543; -0.243612 -0.0265971 -0.0916952 -0.189668 -0.105212 -0.74389 0.485764 -0.0353595 -0.210652 0.222552; -0.0272449 -0.00246063 -0.00784794 -0.0150853 -0.00742786 -0.0221422 -0.157379 -0.985634 -0.0375363 0.0276522; -0.169147 -0.0487944 -0.729356 0.631295 0.0989508 0.071685 0.0674149 -0.00619372 -0.0693808 0.119113; -0.172663 0.956485 0.130653 0.13677 0.0402678 0.0423088 0.0454957 -0.00427478 -0.0529818 0.106024; -0.11166 -0.0195445 -0.0939227 -0.323952 0.922453 0.0859478 0.0650401 -0.00580025 -0.0577884 0.0864493; -0.399769 -0.280302 0.627427 0.48498 0.126834 0.120317 0.123823 -0.0115447 -0.137983 0.260151; -0.293177 -0.018491 -0.0532195 -0.0942612 -0.041589 -0.0840535 -0.157644 0.0171168 0.835724 0.411842; 0.669301 0.0150849 0.0379116 0.0614852 0.0245987 0.0394942 0.0561729 -0.00560527 -0.098871 0.729015])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
