>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (457.37109375 MB free)
Uptime: 4869.0 sec
Load Avg:  0.962890625  1.46923828125  1.60888671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     242632 s         60 s      33034 s     149278 s          7 s
#2  3500 MHz     100378 s         95 s      27569 s     343984 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.426507 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.731085; 0.0 0.448352 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.172124; 0.0 0.0 0.199589 0.0 0.0 0.0 0.0 0.0 0.0 0.147077; 0.0 0.0 0.0 0.868082 0.0 0.0 0.0 0.0 0.0 0.923568; 0.0 0.0 0.0 0.0 0.208387 0.0 0.0 0.0 0.0 0.402847; 0.0 0.0 0.0 0.0 0.0 0.420617 0.0 0.0 0.0 0.340442; 0.0 0.0 0.0 0.0 0.0 0.0 0.0980595 0.0 0.0 0.302157; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.853023 0.0 0.0723988; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.745268 0.793123; 0.731085 0.172124 0.147077 0.923568 0.402847 0.340442 0.302157 0.0723988 0.793123 0.437216]
(U,Lambda) = eig(full(A)) = ([-1.04845,0.113424,0.200461,0.241246,0.421637,0.447254,0.553066,0.801906,0.853129,2.12142],
[-0.356985 -0.114123 -0.0183583 0.284246 0.410283 0.218567 0.683924 0.0974463 -0.00248963 -0.291631; -0.0828206 -0.0251163 -0.00394132 0.0598629 0.0176066 -0.972263 0.194613 0.02436 -0.000617783 -0.069557; -0.0848744 -0.0834222 0.957024 -0.254305 -0.00181 0.00368345 0.0492624 0.0122183 -0.00032695 -0.0517418; -0.347067 -0.0598114 -0.00785235 0.106126 0.00565308 -0.0136126 -0.347112 -0.698335 0.0897345 -0.498211; -0.230846 -0.207325 -0.288499 -0.883055 -0.00516219 0.0104607 0.138375 0.0339623 -0.000907747 -0.142374; -0.166902 -0.0541623 -0.00877754 0.13671 -0.911722 0.0792747 0.304318 0.0446766 -0.00114355 -0.135332; -0.189809 0.961101 0.0167489 -0.151998 -0.00255175 0.00536712 0.0786228 0.0214806 -0.000581375 -0.100965; -0.0274222 -0.0047841 -0.000629753 0.00852406 0.000458615 -0.00110669 -0.0285762 -0.0708691 -0.995903 -0.0385913; -0.318454 -0.0613474 -0.00826339 0.113344 0.00669691 -0.0165074 -0.488557 0.70068 -0.0106828 -0.389661; 0.720212 0.0488725 0.00567624 -0.0720291 -0.00273265 0.00620263 0.118395 0.0500371 -0.00145282 -0.676104])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
