>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (817.11328125 MB free)
Uptime: 4818.0 sec
Load Avg:  0.92578125  1.0234375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     183408 s         60 s      27786 s     210054 s          6 s
#2  3499 MHz     105649 s         91 s      23117 s     327574 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.977073 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.389813; 0.0 0.724712 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.651646; 0.0 0.0 0.373129 0.0 0.0 0.0 0.0 0.0 0.0 0.429117; 0.0 0.0 0.0 0.299295 0.0 0.0 0.0 0.0 0.0 0.894793; 0.0 0.0 0.0 0.0 0.926656 0.0 0.0 0.0 0.0 0.134739; 0.0 0.0 0.0 0.0 0.0 0.711508 0.0 0.0 0.0 0.279928; 0.0 0.0 0.0 0.0 0.0 0.0 0.294216 0.0 0.0 0.0710479; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.523497 0.0 0.277294; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.619666 0.779484; 0.389813 0.651646 0.429117 0.894793 0.134739 0.279928 0.0710479 0.277294 0.779484 0.468375]
(U,Lambda) = eig(full(A)) = ([-1.04438,0.294246,0.355019,0.458844,0.536444,0.681043,0.714014,0.921011,0.951743,2.05015],
[-0.136645 -0.000246045 -0.0216576 0.0725579 0.0366049 -0.0599796 -0.0116165 -0.274497 -0.912158 -0.251277; -0.261013 -0.000652441 -0.0609188 0.236426 0.143215 -0.679695 -0.477492 0.131051 0.170122 -0.340079; -0.214512 -0.00234456 -0.818909 -0.482913 -0.108719 0.0634789 0.00986827 0.0309198 0.0439562 -0.176997; -0.471876 -0.0763813 0.554962 -0.540976 -0.156119 0.106765 0.0169138 0.0568169 0.0812849 -0.353508; -0.0484396 -9.18258e-5 -0.00814621 0.0277826 0.0142873 -0.0249876 -0.00496727 -0.942203 0.318331 -0.0829568; -0.112966 -0.000289138 -0.0271381 0.106869 0.0661611 -0.41852 0.875826 0.0527477 0.0690625 -0.144647; -0.0376099 0.997075 0.0403835 -0.0416289 -0.0121362 0.00836598 0.00132673 0.00447479 0.00640428 -0.0279879; -0.125323 -0.000521313 -0.0568826 0.413717 -0.886184 0.0801708 0.0114098 0.0275382 0.0383778 -0.12564; -0.331927 -0.00103236 -0.101794 0.467533 0.387547 0.578475 0.0647659 0.102115 0.139124 -0.376922; 0.7086 0.000430991 0.0345606 -0.0964604 -0.0413766 0.0455494 0.00783922 0.0394773 0.0592698 -0.691713])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
