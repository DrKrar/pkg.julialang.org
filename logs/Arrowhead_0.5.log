>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (815.73828125 MB free)
Uptime: 6737.0 sec
Load Avg:  0.95849609375  0.9990234375  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     201849 s        110 s      46665 s     295722 s        105 s
#2  3500 MHz     111090 s         64 s      46479 s     426703 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.226292 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.959744; 0.0 0.180581 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.211721; 0.0 0.0 0.888558 0.0 0.0 0.0 0.0 0.0 0.0 0.23666; 0.0 0.0 0.0 0.657895 0.0 0.0 0.0 0.0 0.0 0.61183; 0.0 0.0 0.0 0.0 0.919473 0.0 0.0 0.0 0.0 0.0402977; 0.0 0.0 0.0 0.0 0.0 0.963467 0.0 0.0 0.0 0.824474; 0.0 0.0 0.0 0.0 0.0 0.0 0.141633 0.0 0.0 0.875959; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.88666 0.0 0.345987; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.789847 0.876422; 0.959744 0.211721 0.23666 0.61183 0.0402977 0.824474 0.875959 0.345987 0.876422 0.937858]
(U,Lambda) = eig(full(A)) = ([-1.24204,0.172406,0.186107,0.481756,0.701417,0.864707,0.887966,0.917567,0.920951,2.70143],
[-0.429243 -0.4193 0.484289 0.551496 0.113174 0.0630945 0.00302374 0.0434985 -0.0379033 0.284829; -0.0977343 -0.609734 -0.776779 0.103196 0.0227751 0.0129887 0.000623937 0.00900065 -0.00784528 0.0616942; -0.0729452 -0.00777975 0.00683152 -0.0854 -0.0708523 -0.416432 -0.833151 0.255602 -0.200435 0.0958928; -0.211478 -0.0296686 0.0262961 -0.509907 0.787633 0.124164 0.00554373 0.0738202 -0.0638082 0.219926; -0.0122432 -0.00126989 0.00111421 -0.0135146 -0.0103541 -0.0308822 -0.00266633 -0.662615 -0.747838 0.0166116; -0.245494 -0.0245365 0.0215061 -0.25125 -0.176275 -0.350376 -0.0227646 -0.56278 0.532011 0.348469; -0.415741 0.670124 -0.399372 0.378063 0.0876721 0.0508441 0.00244672 0.0353694 -0.0308363 0.251365; -0.106738 -0.0114039 0.0100144 -0.125436 -0.104644 -0.661447 0.55221 0.350728 -0.276805 0.140044; -0.283261 -0.0334166 0.0294355 -0.41759 -0.555276 0.491368 0.0186206 0.214993 -0.183397 0.336781; 0.656709 0.0235421 -0.0202772 0.146797 0.0560272 0.04197 0.00208465 0.0313307 -0.0274343 0.73456])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
