>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (742.51171875 MB free)
Uptime: 3944.0 sec
Load Avg:  0.9228515625  0.96337890625  0.9208984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     135767 s         60 s      27386 s     190989 s         10 s
#2  3504 MHz      66168 s         85 s      21168 s     287399 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.235446 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.360884; 0.0 0.136428 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00576113; 0.0 0.0 0.716926 0.0 0.0 0.0 0.0 0.0 0.0 0.588989; 0.0 0.0 0.0 0.714151 0.0 0.0 0.0 0.0 0.0 0.180362; 0.0 0.0 0.0 0.0 0.0213061 0.0 0.0 0.0 0.0 0.582931; 0.0 0.0 0.0 0.0 0.0 0.484523 0.0 0.0 0.0 0.82264; 0.0 0.0 0.0 0.0 0.0 0.0 0.229019 0.0 0.0 0.79997; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.872736 0.0 0.572307; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.190256 0.813194; 0.360884 0.00576113 0.588989 0.180362 0.582931 0.82264 0.79997 0.572307 0.813194 0.939551]
(U,Lambda) = eig(full(A)) = ([-1.16277,0.0527559,0.136429,0.208253,0.234452,0.394496,0.657583,0.714396,0.832146,2.4726],
[-0.165354 0.0976745 0.00106044 -0.217475 0.925628 0.19428 -0.0704076 0.000976526 0.0391938 0.121632; -0.00284088 0.00340454 -0.999985 0.00131444 -0.000149826 0.00191147 -0.00091043 1.29185e-5 0.000536636 0.00185944; -0.200743 0.0438488 0.000295213 -0.0189748 0.00311208 -0.156411 0.817425 -0.301719 0.331273 0.252954; -0.0615629 0.0134838 9.08351e-5 -0.00584239 0.000958502 -0.0483125 0.262594 0.953368 0.0990574 0.077338; -0.315398 -0.916492 -0.00147327 0.0510986 -0.00697197 0.133746 -0.075453 0.00109002 0.0465894 0.179308; -0.319933 0.0942085 0.000687609 -0.0487961 0.00838618 -0.782413 -0.391487 0.00463797 0.153358 0.312; -0.368232 0.22441 0.00251385 -0.631285 -0.375327 0.413933 -0.153732 0.002136 0.0859549 0.26885; -0.180126 0.0345108 0.000226151 -0.0141141 0.00228577 -0.102466 0.219073 -0.00468431 -0.913724 0.269727; -0.385042 0.292428 0.00439562 0.740491 -0.0469059 0.340917 -0.143311 0.00201073 0.0820993 0.268653; 0.640649 -0.0494458 -0.000290956 0.0163874 -0.00254927 0.0856239 -0.0823581 0.001296 0.0648045 0.754011])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
