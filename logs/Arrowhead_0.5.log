>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (434.34375 MB free)
Uptime: 5515.0 sec
Load Avg:  0.951171875  1.42431640625  1.58447265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     252797 s        117 s      32646 s     207755 s          5 s
#2  3500 MHz     110298 s         41 s      25756 s     397063 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.415933 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.163675; 0.0 0.750178 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.606774; 0.0 0.0 0.08748 0.0 0.0 0.0 0.0 0.0 0.0 0.583461; 0.0 0.0 0.0 0.624733 0.0 0.0 0.0 0.0 0.0 0.251046; 0.0 0.0 0.0 0.0 0.147204 0.0 0.0 0.0 0.0 0.282953; 0.0 0.0 0.0 0.0 0.0 0.446977 0.0 0.0 0.0 0.174307; 0.0 0.0 0.0 0.0 0.0 0.0 0.655917 0.0 0.0 0.769861; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.730911 0.0 0.640343; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.260183 0.17336; 0.163675 0.606774 0.583461 0.251046 0.282953 0.174307 0.769861 0.640343 0.17336 0.290098]
(U,Lambda) = eig(full(A)) = ([-1.00025,0.131167,0.21525,0.280672,0.421197,0.454284,0.627096,0.693292,0.741981,1.84492],
[-0.0840185 -0.0257655 -0.103986 -0.122732 0.964734 0.171579 0.00705684 -0.0203078 -0.00531752 -0.0758919; -0.251996 -0.0439412 -0.144622 -0.131079 -0.0572343 -0.0824442 -0.0448828 0.36706 0.784079 -0.367246; -0.389945 0.59869 0.582216 0.306319 0.0542542 0.0639509 0.00984406 -0.0331434 -0.00944301 -0.219975; -0.112309 -0.0228008 -0.0781662 -0.0740059 -0.0382747 -0.0592145 0.967125 -0.126013 -0.0226807 -0.136323; -0.179263 -0.790942 0.530164 0.215024 0.032046 0.0370451 0.00536806 -0.0178309 -0.00503928 -0.110431; -0.087557 -0.0247419 -0.0959052 -0.106306 -0.209817 0.958991 0.00881054 -0.0243527 -0.00625888 -0.0826167; -0.337924 -0.0657663 -0.222743 -0.208088 -0.10178 -0.153505 -0.2432 -0.708849 -0.0947539 -0.429013; -0.268897 -0.0478619 -0.158325 -0.144251 -0.0641583 -0.0930654 -0.0561569 0.585768 -0.612714 -0.38086; -0.0999866 -0.060235 -0.491912 0.858204 0.0334107 0.035908 0.00430164 -0.0137745 -0.00381148 -0.0724826; 0.72696 0.0448274 0.127498 0.101426 0.0310313 0.040204 0.00910432 -0.0344129 -0.0105927 -0.662584])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
