>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (445.140625 MB free)
Uptime: 5692.0 sec
Load Avg:  0.9970703125  1.4287109375  1.6689453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     251677 s       6236 s      37702 s     224974 s         16 s
#2  3499 MHz     145207 s        341 s      28153 s     376118 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.134343 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.358554; 0.0 0.278695 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.630299; 0.0 0.0 0.552488 0.0 0.0 0.0 0.0 0.0 0.0 0.978115; 0.0 0.0 0.0 0.95402 0.0 0.0 0.0 0.0 0.0 0.912762; 0.0 0.0 0.0 0.0 0.423864 0.0 0.0 0.0 0.0 0.180828; 0.0 0.0 0.0 0.0 0.0 0.80381 0.0 0.0 0.0 0.605759; 0.0 0.0 0.0 0.0 0.0 0.0 0.511326 0.0 0.0 0.111723; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.165016 0.0 0.734135; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.401397 0.513845; 0.358554 0.630299 0.978115 0.912762 0.180828 0.605759 0.111723 0.734135 0.513845 0.532026]
(U,Lambda) = eig(full(A)) = ([-1.35735,0.138912,0.215727,0.335513,0.420409,0.447118,0.511939,0.725966,0.872702,2.44605],
[-0.168506 -0.939121 0.235574 -0.116175 0.0210024 0.06562 0.00516228 -0.0561335 -0.0329258 -0.107966; -0.270079 0.0539623 -0.535225 -0.723069 0.0745272 0.214219 0.014691 -0.130523 -0.0719455 -0.202432; -0.359032 0.028303 -0.155303 0.293836 -0.12409 -0.53136 -0.131137 -0.522225 -0.207109 -0.359562; -0.276839 0.0134011 -0.0661058 0.0961916 -0.0286625 -0.103074 -0.0112246 0.370709 0.761067 -0.425837; -0.0711689 0.00759438 -0.0464544 0.133407 -0.876905 0.445129 0.0111617 -0.0554404 -0.0273166 -0.0622456; -0.196496 0.0109029 -0.0550773 0.0843146 -0.0264745 -0.0972123 -0.011283 0.720761 -0.596177 -0.256759; -0.041913 0.00359017 -0.0202093 0.0414207 -0.0205911 -0.0996026 0.990647 -0.0482108 -0.020962 -0.0401964; -0.338062 0.336567 0.774076 -0.28066 0.0481667 0.148964 0.0115042 -0.121217 -0.070337 -0.22403; -0.204818 0.0234275 -0.147979 0.508371 0.452876 0.643318 0.0252708 -0.146635 -0.0739228 -0.174934; 0.701035 -0.0119674 0.0534701 -0.0651814 0.0167564 0.0572419 0.00543644 -0.0926217 -0.0678031 -0.696086])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
