>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (910.890625 MB free)
Uptime: 4678.0 sec
Load Avg:  0.99072265625  0.9853515625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     205392 s         71 s      27752 s     182430 s          4 s
#2  3501 MHz      93859 s        112 s      19534 s     335391 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.998007 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.56625; 0.0 0.907144 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.862108; 0.0 0.0 0.341621 0.0 0.0 0.0 0.0 0.0 0.0 0.687108; 0.0 0.0 0.0 0.229751 0.0 0.0 0.0 0.0 0.0 0.319892; 0.0 0.0 0.0 0.0 0.0481328 0.0 0.0 0.0 0.0 0.703313; 0.0 0.0 0.0 0.0 0.0 0.244368 0.0 0.0 0.0 0.490517; 0.0 0.0 0.0 0.0 0.0 0.0 0.441821 0.0 0.0 0.677081; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.668982 0.0 0.0943275; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.572135 0.932676; 0.56625 0.862108 0.687108 0.319892 0.703313 0.490517 0.677081 0.0943275 0.932676 0.79016]
(U,Lambda) = eig(full(A)) = ([-1.29804,0.106696,0.233266,0.271695,0.385983,0.496987,0.668107,0.788206,0.976959,2.61226],
[-0.165907 -0.0469725 -0.00729285 0.0343282 0.0442455 -0.0613939 -0.0158242 -0.2872 -0.903507 -0.253479; -0.262999 -0.0796328 -0.0126004 0.0597375 0.0791076 -0.114178 -0.03325 -0.771302 0.414696 -0.365353; -0.281909 -0.216252 -0.0624567 0.432668 -0.740697 0.240237 0.0194023 0.163721 0.0363194 -0.218666; -0.140857 -0.192207 0.896243 -0.335808 -0.0979175 0.0650247 0.00672774 0.0609533 0.0143774 -0.0970226; -0.351468 0.887952 0.0374169 -0.138521 -0.0995527 0.0851167 0.0104585 0.101125 0.0254292 -0.198205; -0.21394 -0.263434 -0.435173 -0.790351 -0.165643 0.105477 0.0106721 0.095977 0.022486 -0.149691; -0.261796 -0.149382 -0.0319759 0.175242 0.579885 0.666711 0.0275852 0.208 0.0424907 -0.225423; -0.0322602 -0.0124035 -0.00213225 0.0104544 0.0159398 -0.0297917 -0.994548 0.0841891 0.0102858 -0.0350758; -0.335495 -0.14816 -0.0271083 0.136691 0.239603 -0.674196 0.0895939 0.459321 0.0773719 -0.330353; 0.672724 0.0739374 0.00984924 -0.0440317 -0.0478221 0.0543215 0.00921921 0.10641 0.033583 -0.72261])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
