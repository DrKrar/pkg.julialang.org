>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (762.859375 MB free)
Uptime: 3810.0 sec
Load Avg:  0.9326171875  0.94970703125  0.94970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     163990 s         57 s      27793 s     139603 s          1 s
#2  3500 MHz      90891 s        100 s      19363 s     250736 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.23593 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.208808; 0.0 0.72405 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0305524; 0.0 0.0 0.435793 0.0 0.0 0.0 0.0 0.0 0.0 0.510505; 0.0 0.0 0.0 0.705994 0.0 0.0 0.0 0.0 0.0 0.648809; 0.0 0.0 0.0 0.0 0.976305 0.0 0.0 0.0 0.0 0.857969; 0.0 0.0 0.0 0.0 0.0 0.535875 0.0 0.0 0.0 0.369615; 0.0 0.0 0.0 0.0 0.0 0.0 0.455824 0.0 0.0 0.228729; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.260195 0.0 0.942043; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.269586 0.947528; 0.208808 0.0305524 0.510505 0.648809 0.857969 0.369615 0.228729 0.942043 0.947528 0.711822]
(U,Lambda) = eig(full(A)) = ([-1.27468,0.236569,0.264834,0.405238,0.453229,0.517854,0.634145,0.724014,0.865959,2.48421],
[-0.0937635 0.988808 0.0253739 0.0610562 -0.0102964 0.0325468 -0.0469494 0.000497781 -0.0357433 0.066696; -0.0103688 -0.000189805 -0.000233686 -0.0047443 0.00120882 -0.00651115 0.0304271 -0.999102 -0.0232189 0.0124651; -0.202452 -0.00776027 -0.0104885 -0.827145 -0.313721 0.273374 -0.230443 0.00206091 -0.127989 0.178971; -0.222199 -0.00418572 -0.00516565 -0.106798 0.0275041 -0.15154 0.808523 0.0418937 -0.437422 0.26202; -0.258546 -0.00351248 -0.00423564 -0.0743782 0.0175753 -0.0822378 0.224513 -0.0039569 0.838536 0.408601; -0.138477 -0.00373985 -0.00478983 -0.14007 0.0479212 -0.901283 -0.336767 0.00228589 -0.120763 0.136235; -0.0896574 -0.00315929 -0.00420644 -0.223848 0.944566 0.162037 -0.114847 0.000992346 -0.0601453 0.0809789; -0.416329 -0.120757 0.713174 0.321538 -0.0522916 0.160664 -0.225557 0.00236324 -0.167716 0.304183; -0.416206 -0.0869112 -0.70038 0.3458 -0.0552858 0.167712 -0.232715 0.00242612 -0.171349 0.307251; 0.678325 0.00302844 0.0035124 0.0495063 -0.0107151 0.0439433 -0.0895363 0.00116355 -0.107847 0.718128])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
