>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (432.078125 MB free)
Uptime: 5477.0 sec
Load Avg:  1.052734375  1.49951171875  1.66015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     270340 s         53 s      33471 s     186221 s         10 s
#2  3499 MHz     110528 s         88 s      27079 s     398103 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.841033 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.265369; 0.0 0.230232 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.386508; 0.0 0.0 0.531453 0.0 0.0 0.0 0.0 0.0 0.0 0.643342; 0.0 0.0 0.0 0.793108 0.0 0.0 0.0 0.0 0.0 0.872989; 0.0 0.0 0.0 0.0 0.192297 0.0 0.0 0.0 0.0 0.726451; 0.0 0.0 0.0 0.0 0.0 0.928228 0.0 0.0 0.0 0.823975; 0.0 0.0 0.0 0.0 0.0 0.0 9.73351e-6 0.0 0.0 0.327609; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.609173 0.0 0.893838; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.530926 0.652794; 0.265369 0.386508 0.643342 0.872989 0.726451 0.823975 0.327609 0.893838 0.652794 0.513425]
(U,Lambda) = eig(full(A)) = ([-1.44438,0.0135752,0.219057,0.288457,0.531192,0.567882,0.714532,0.836912,0.88539,2.55726],
[-0.0822547 -0.012969 0.00965156 -0.042066 -0.000246511 0.0290283 -0.134448 -0.944078 0.263623 0.10726; -0.163501 -0.0721423 0.782399 0.581455 0.000369635 -0.0342032 0.0511494 0.00933997 0.0259959 0.115218; -0.230657 -0.0502363 0.0465862 -0.231908 -0.7094 -0.527685 0.225217 0.0308771 0.0800957 0.220296; -0.276391 -0.0452874 0.0344017 -0.151527 -0.000959337 0.115815 -0.712059 0.292176 0.416858 0.34327; -0.314427 -0.164374 -0.614109 0.661732 0.000616972 -0.0577928 0.0891533 0.0165216 0.0461857 0.213081; -0.246016 -0.0364302 0.0262836 -0.112814 -0.000597323 0.0683235 -0.247125 -0.132287 -0.847574 0.35087; -0.160675 0.976619 -0.033833 0.099486 0.000177516 -0.0172377 0.0293858 0.00573889 0.0163049 0.0888679; -0.308339 -0.0606888 0.0518305 -0.244125 -0.00329909 0.646807 0.543731 0.0575398 0.142594 0.318282; -0.234109 -0.0510263 0.0473505 -0.235827 0.704797 -0.527793 0.227869 0.0312767 0.0811514 0.223474; 0.708394 0.0404393 -0.0226215 0.0875938 0.000287822 -0.0298796 0.064091 0.0146604 0.0440648 0.693686])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
