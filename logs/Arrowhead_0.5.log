>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (450.890625 MB free)
Uptime: 5178.0 sec
Load Avg:  0.974609375  1.38671875  1.5546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     238222 s         51 s      35244 s     195811 s          6 s
#2  3500 MHz     125842 s         97 s      25036 s     352763 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.705563 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00956012; 0.0 0.328469 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.572713; 0.0 0.0 0.647948 0.0 0.0 0.0 0.0 0.0 0.0 0.123857; 0.0 0.0 0.0 0.533143 0.0 0.0 0.0 0.0 0.0 0.386258; 0.0 0.0 0.0 0.0 0.533365 0.0 0.0 0.0 0.0 0.967046; 0.0 0.0 0.0 0.0 0.0 0.725451 0.0 0.0 0.0 0.596749; 0.0 0.0 0.0 0.0 0.0 0.0 0.895771 0.0 0.0 0.716675; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.207907 0.0 0.756281; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.146777 0.858352; 0.00956012 0.572713 0.123857 0.386258 0.967046 0.596749 0.716675 0.756281 0.858352 0.0184293]
(U,Lambda) = eig(full(A)) = ([-1.68832,0.176379,0.281525,0.398533,0.533173,0.645531,0.681961,0.705571,0.836529,2.17194],
[-0.00296099 -0.000475727 0.0012676 0.0024577 4.08196e-6 -0.00301702 -0.0246164 -0.999661 0.00525834 -0.00427982; -0.210549 -0.0991606 0.685941 -0.645188 -0.000205933 0.0342209 0.0984585 -0.00127312 0.0812022 -0.203943; -0.0393074 -0.00691633 0.0190047 0.0391962 7.94312e-5 -0.9708 0.22129 -0.00180183 0.0473114 -0.0533513; -0.128919 -0.02851 0.0863097 0.226489 -0.928627 0.0651113 0.157731 -0.00187784 0.0917122 -0.154725; -0.322732 -0.071334 0.215896 0.566109 0.371015 0.163338 0.39549 -0.00470749 0.229782 -0.387426; -0.183304 -0.0286196 0.0755796 0.144079 0.000228444 -0.14146 -0.833878 0.0251627 0.386998 -0.270823; -0.205632 -0.0262336 0.0655999 0.113764 0.000145483 -0.054258 -0.2037 0.00315864 -0.871451 -0.368657; -0.295713 -0.631663 -0.577593 -0.313147 -0.000171143 0.0327402 0.0969508 -0.0012739 0.0866642 -0.25278; -0.346804 0.763557 -0.35815 -0.269111 -0.000163511 0.0326045 0.0974671 -0.00128767 0.0896434 -0.278236; 0.741441 0.026333 -0.0562242 -0.0789308 -7.36065e-5 0.0189452 0.060771 -0.00083828 0.0720355 -0.656459])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
