>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc2+0
Commit 0350e57 (2016-08-12 11:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (881.74609375 MB free)
Uptime: 3286.0 sec
Load Avg:  1.09326171875  1.001953125  0.94775390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     137918 s         78 s      27103 s     123070 s          6 s
#2  3499 MHz      60283 s         65 s      19295 s     234344 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.7
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0157696 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.202801; 0.0 0.243971 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.982193; 0.0 0.0 0.867238 0.0 0.0 0.0 0.0 0.0 0.0 0.269392; 0.0 0.0 0.0 0.936905 0.0 0.0 0.0 0.0 0.0 0.837758; 0.0 0.0 0.0 0.0 0.946192 0.0 0.0 0.0 0.0 0.987181; 0.0 0.0 0.0 0.0 0.0 0.837415 0.0 0.0 0.0 0.478413; 0.0 0.0 0.0 0.0 0.0 0.0 0.657996 0.0 0.0 0.4036; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.614207 0.0 0.807628; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.012611 0.619124; 0.202801 0.982193 0.269392 0.837758 0.987181 0.478413 0.4036 0.807628 0.619124 0.836206]
(U,Lambda) = eig(full(A)) = ([-1.3556,0.0154487,0.0638446,0.404036,0.647546,0.730128,0.8508,0.872999,0.940888,2.79842],
[-0.0998903 -0.945229 0.298405 0.0642624 -0.00698219 0.0234319 0.00577599 -0.00452104 0.000780262 -0.0523198; -0.414765 -0.00642832 -0.385724 0.754949 -0.0529369 0.166754 0.0384937 -0.0298396 0.00501631 -0.276029; -0.0818625 -0.000473022 -0.0237199 -0.0715537 0.026672 -0.16217 -0.389772 -0.89358 0.0130191 -0.100142; -0.246841 -0.00135979 -0.0678783 -0.193427 0.0629748 -0.334404 -0.231394 0.250521 0.748713 -0.323078; -0.289694 -0.00158634 -0.0791433 -0.224022 0.0718995 -0.377112 -0.246121 0.257748 -0.662451 -0.382611; -0.147357 -0.00087052 -0.0437482 -0.135817 0.0548069 -0.368056 0.85 -0.256927 0.0164568 -0.175138; -0.13539 -0.000939454 -0.0480519 -0.195526 0.84008 0.461822 0.0497844 -0.0358733 0.00507807 -0.135365; -0.276947 -0.00201739 -0.103805 -0.472779 -0.526916 0.575044 0.0811834 -0.0596383 0.00879945 -0.265443; -0.305656 0.326327 0.854831 0.194602 -0.0212097 0.0712197 0.0175669 -0.0137515 0.00237393 -0.159544; 0.675476 0.00149565 0.0707387 0.123032 -0.0217513 0.0825382 0.0237826 -0.0191102 0.00355933 -0.717886])
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
