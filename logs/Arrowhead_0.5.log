>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (429.87109375 MB free)
Uptime: 5984.0 sec
Load Avg:  0.84765625  1.38720703125  1.57080078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     281850 s        120 s      33751 s     221050 s          6 s
#2  3499 MHz     104804 s         39 s      26208 s     455065 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.321532 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.016276; 0.0 0.137771 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.489676; 0.0 0.0 0.786945 0.0 0.0 0.0 0.0 0.0 0.0 0.0578841; 0.0 0.0 0.0 0.0957629 0.0 0.0 0.0 0.0 0.0 0.78229; 0.0 0.0 0.0 0.0 0.413404 0.0 0.0 0.0 0.0 0.138147; 0.0 0.0 0.0 0.0 0.0 0.600031 0.0 0.0 0.0 0.0542737; 0.0 0.0 0.0 0.0 0.0 0.0 0.0505254 0.0 0.0 0.328029; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.293083 0.0 0.856937; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.91981 0.486094; 0.016276 0.489676 0.0578841 0.78229 0.138147 0.0542737 0.328029 0.856937 0.486094 0.202208]
(U,Lambda) = eig(full(A)) = ([-1.1767,0.0555496,0.124513,0.210305,0.321523,0.411194,0.599133,0.782061,0.817106,1.67639],
[-0.00769831 0.000893406 -0.00178094 0.0102055 0.999858 0.00287946 -0.000967159 -0.00280002 -0.00582245 0.00809483; -0.263988 0.086952 -0.796243 -0.470835 -0.00147043 0.0284082 -0.017508 -0.0602141 -0.127788 0.214453; -0.0208893 0.00115548 -0.00188377 0.00700093 6.86247e-5 -0.0024436 0.00508403 0.939037 -0.340241 0.0438525; -0.435662 0.284023 0.586596 -0.476326 -0.001912 0.03934 -0.025636 -0.0903078 -0.192261 0.333497; -0.0615664 0.00563627 -0.0103091 0.047439 0.000829638 -0.991804 -0.0122696 -0.0296886 -0.0606663 0.0737051; -0.0216469 0.00145533 -0.00246056 0.00971251 0.000107528 -0.00455905 0.997863 -0.0236219 -0.0443247 0.0339771; -0.189415 -0.953247 0.0955793 -0.143183 -0.000667904 0.014427 -0.00986327 -0.0355261 -0.0758614 0.135951; -0.413165 0.052672 -0.109592 0.721998 -0.0166255 0.115087 -0.0461877 -0.138845 -0.289911 0.417431; -0.164305 0.00821166 -0.0131765 0.0477821 0.00044831 -0.0151601 0.0250048 0.279578 0.839065 0.432933; 0.708643 -0.0146001 0.0215581 -0.0697431 -0.000551783 0.0158625 -0.0164957 -0.0792266 -0.177283 0.673835])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
