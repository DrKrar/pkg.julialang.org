>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (464.0859375 MB free)
Uptime: 4747.0 sec
Load Avg:  1.0068359375  1.544921875  1.66455078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     206550 s         82 s      36982 s     184498 s          8 s
#2  3500 MHz     143576 s         73 s      23875 s     285480 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.768345 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.175419; 0.0 0.684385 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.395595; 0.0 0.0 0.390912 0.0 0.0 0.0 0.0 0.0 0.0 0.0444069; 0.0 0.0 0.0 0.0733317 0.0 0.0 0.0 0.0 0.0 0.785615; 0.0 0.0 0.0 0.0 0.722829 0.0 0.0 0.0 0.0 0.859786; 0.0 0.0 0.0 0.0 0.0 0.100842 0.0 0.0 0.0 0.282745; 0.0 0.0 0.0 0.0 0.0 0.0 0.72801 0.0 0.0 0.92479; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.533151 0.0 0.441956; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.454206 0.915937; 0.175419 0.395595 0.0444069 0.785615 0.859786 0.282745 0.92479 0.441956 0.915937 0.927997]
(U,Lambda) = eig(full(A)) = ([-1.18517,0.0970677,0.187723,0.391026,0.510337,0.579853,0.688566,0.725267,0.767656,2.62168],
[-0.0591243 -0.00318773 -0.034101 -0.00119387 0.0259503 -0.0604754 0.0218153 -0.00834307 -0.992747 -0.0700529; -0.139322 -0.00821646 -0.0899031 -0.00346292 0.0867524 -0.245923 -0.938534 0.0198258 0.0185389 -0.151133; -0.0185514 -0.00184348 -0.0246681 0.999195 -0.0141924 0.0152728 -0.00148016 0.000272117 0.000459974 -0.0147333; -0.411019 0.403749 0.775175 0.00635025 -0.0686156 0.100787 -0.012669 0.00246898 0.00441547 -0.228168; -0.296701 -0.0167606 -0.181357 -0.00665427 0.154435 -0.390772 0.248966 0.722708 0.0748486 -0.335122; -0.144762 -0.913797 0.367327 0.00250214 -0.0263539 0.0383569 -0.00477302 0.000927742 0.0016547 -0.0830145; -0.318268 -0.0178797 -0.193198 -0.00704734 0.162158 -0.405619 0.232618 -0.69076 0.0910273 -0.361445; -0.169348 -0.0123628 -0.144413 -0.00798545 0.739386 0.614944 -0.0282135 0.00471334 0.00735457 -0.156618; -0.367869 -0.031285 -0.387955 -0.0372288 -0.622818 0.473702 -0.0387751 0.00692326 0.0114032 -0.312763; 0.658425 0.0121985 0.112872 0.00256797 -0.038168 0.0649822 -0.00992137 0.00204886 0.00390238 -0.740124])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
