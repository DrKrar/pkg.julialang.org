>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (466.25 MB free)
Uptime: 5762.0 sec
Load Avg:  1.08203125  1.56005859375  1.96875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     245756 s       5241 s      44539 s     203732 s         75 s
#2  3500 MHz     168490 s       2072 s      37277 s     315415 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.2
2 additional packages:
 - Compat                        0.14.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.817792 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.569064; 0.0 0.0519061 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0260954; 0.0 0.0 0.41929 0.0 0.0 0.0 0.0 0.0 0.0 0.826156; 0.0 0.0 0.0 0.365317 0.0 0.0 0.0 0.0 0.0 0.681962; 0.0 0.0 0.0 0.0 0.560307 0.0 0.0 0.0 0.0 0.649581; 0.0 0.0 0.0 0.0 0.0 0.615014 0.0 0.0 0.0 0.702474; 0.0 0.0 0.0 0.0 0.0 0.0 0.249582 0.0 0.0 0.865801; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.23909 0.0 0.172378; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.749467 0.00466682; 0.569064 0.0260954 0.826156 0.681962 0.649581 0.702474 0.865801 0.172378 0.00466682 0.0699718]
(U,Lambda) = eig(full(A)) = ([-1.53213,0.0519785,0.23944,0.296865,0.387177,0.507392,0.590677,0.749462,0.780434,2.06644],
[-0.179684 0.00206125 -0.00197134 0.0487496 -0.0320287 0.102433 0.0685262 0.00730692 0.926186 0.302062; -0.0122236 -0.999867 0.000278789 -0.00475398 0.00188641 -0.00320101 -0.00132465 -3.2822e-5 -0.0021779 0.00858548; -0.314132 0.00623908 -0.00920331 0.301148 -0.62351 -0.523928 -0.131833 -0.00219533 -0.139091 0.332433; -0.266681 0.00603725 -0.0108544 0.444591 0.756117 -0.268188 -0.0827606 -0.00155756 -0.099887 0.265705; -0.230346 0.00354472 -0.00405602 0.110036 -0.0909343 0.685896 -0.58495 -0.00301296 -0.179423 0.285855; -0.242756 0.00346088 -0.00374737 0.0985339 -0.0747259 0.364692 0.789404 -0.00458411 -0.258204 0.320783; -0.360563 0.0121539 -0.171044 -0.817137 0.152504 -0.187635 -0.0694196 -0.00151961 -0.0991661 0.315844; -0.0722123 0.0025555 0.985141 -0.133145 0.0282119 -0.0358968 -0.0134088 -0.000296329 -0.019361 0.0625224; -0.00151769 1.856e-5 -1.83324e-5 0.000460142 -0.000312199 0.00107714 0.000803786 0.999953 -0.00916301 0.00234866; 0.741994 -0.00277391 0.00200351 -0.0446258 0.0242363 -0.0558724 -0.0273489 -0.000877363 -0.0608021 0.662788])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
