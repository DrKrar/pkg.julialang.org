>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: Nothing to be done

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc0+4
Commit 347057b (2016-07-27 09:20 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (454.671875 MB free)
Uptime: 3384.0 sec
Load Avg:  0.88818359375  0.96826171875  0.89599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     117359 s         50 s      29252 s     157039 s          8 s
#2  3499 MHz      61388 s         90 s      19644 s     242925 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.155981 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.393662; 0.0 0.658108 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.298003; 0.0 0.0 0.419339 0.0 0.0 0.0 0.0 0.0 0.0 0.269095; 0.0 0.0 0.0 0.950325 0.0 0.0 0.0 0.0 0.0 0.762022; 0.0 0.0 0.0 0.0 0.268098 0.0 0.0 0.0 0.0 0.856509; 0.0 0.0 0.0 0.0 0.0 0.976082 0.0 0.0 0.0 0.142128; 0.0 0.0 0.0 0.0 0.0 0.0 0.961377 0.0 0.0 0.0672672; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.997585 0.0 0.805255; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.224643 0.65968; 0.393662 0.298003 0.269095 0.762022 0.856509 0.142128 0.0672672 0.805255 0.65968 0.196436]
(U,Lambda) = eig(full(A)) = ([-1.30101,0.16539,0.24062,0.406298,0.571632,0.702519,0.96125,0.971518,0.978013,2.11175],
[-0.198775 0.947859 0.0894424 0.0713239 0.15731 -0.0857953 -0.000918664 -0.00844711 0.00539189 -0.129449; -0.111906 -0.0137015 -0.0137266 -0.0536721 -0.572376 -0.79927 -0.00184735 -0.0166393 0.0104883 -0.131842; -0.115076 -0.0240053 -0.028955 -0.935862 0.293486 -0.113189 -0.000933151 -0.00852814 0.00542317 -0.102257; -0.249013 -0.0219928 -0.0206479 -0.0635256 -0.334226 0.366281 -0.13108 -0.629228 0.309872 -0.421958; -0.401582 -0.188919 -0.599419 0.281077 0.46869 -0.234845 -0.00232208 -0.0213081 0.0135841 -0.298776; -0.0459191 -0.00397164 -0.00371625 -0.0113128 -0.0583678 0.0618842 0.0180069 0.544929 0.828702 -0.0804858; -0.0218742 -0.00191445 -0.00179474 -0.00549604 -0.028667 0.0309528 0.990324 -0.116083 0.0455266 -0.037606; -0.257731 -0.0219208 -0.0204571 -0.0617641 -0.314001 0.325067 0.0416459 0.540582 -0.463231 -0.464811; -0.318106 -0.252216 0.794001 0.164697 0.315775 -0.164429 -0.00168295 -0.0154566 0.00985894 -0.224817; 0.735692 0.0226541 0.0192304 0.0453525 0.166097 -0.119113 -0.0018792 -0.0174996 0.0112592 -0.643121])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
