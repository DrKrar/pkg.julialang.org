>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (483.15234375 MB free)
Uptime: 5831.0 sec
Load Avg:  1.01513671875  1.5341796875  1.763671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     265760 s       3682 s      36318 s     220449 s         12 s
#2  3500 MHz     134037 s       3246 s      27726 s     400720 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.514725 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.920435; 0.0 0.566448 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.783076; 0.0 0.0 0.766732 0.0 0.0 0.0 0.0 0.0 0.0 0.420175; 0.0 0.0 0.0 0.950349 0.0 0.0 0.0 0.0 0.0 0.158489; 0.0 0.0 0.0 0.0 0.891385 0.0 0.0 0.0 0.0 0.945202; 0.0 0.0 0.0 0.0 0.0 0.67131 0.0 0.0 0.0 0.777882; 0.0 0.0 0.0 0.0 0.0 0.0 0.244433 0.0 0.0 0.0828952; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.138707 0.0 0.513169; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.106993 0.636557; 0.920435 0.783076 0.420175 0.158489 0.945202 0.777882 0.0828952 0.513169 0.636557 0.661863]
(U,Lambda) = eig(full(A)) = ([-1.35672,0.124103,0.21358,0.247138,0.54183,0.628165,0.748161,0.822337,0.949241,2.59511],
[-0.340612 -0.0459209 0.290651 -0.108376 0.721232 0.337532 -0.149524 -0.174733 -0.0147076 -0.313755; -0.281988 -0.0344998 0.211031 -0.0772675 -0.675588 0.52782 -0.163419 -0.178705 -0.0142034 -0.273738; -0.137035 -0.0127422 0.0722339 -0.0254784 -0.0396796 -0.126143 0.858007 -0.441265 -0.0159845 -0.162969; -0.0475755 -0.00373822 0.0204562 -0.00710102 -0.00823983 -0.0204638 0.0297256 0.0722991 0.992969 -0.0683343; -0.291174 -0.0240073 0.13261 -0.0462251 -0.05743 -0.149381 0.250262 0.799389 -0.11343 -0.393429; -0.265634 -0.0277036 0.161607 -0.0577799 -0.127597 -0.750025 -0.383838 -0.300776 -0.0194326 -0.286744; -0.0358543 -0.0134255 0.255502 0.96561 0.00592001 0.0089865 -0.00624048 -0.0083764 -0.000816605 -0.0250079; -0.237651 -0.684801 -0.651762 0.149113 0.0270366 0.0436148 -0.0319304 -0.0438352 -0.00439585 -0.14815; -0.301179 0.72503 -0.567919 0.143109 0.0310914 0.0508095 -0.0376487 -0.0519644 -0.00524748 -0.181429; 0.692538 0.0194883 -0.0950943 0.0315069 0.0212388 0.0415996 -0.0379214 -0.0583961 -0.00694309 -0.709153])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
