>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (443.609375 MB free)
Uptime: 5822.0 sec
Load Avg:  0.9970703125  1.47412109375  1.7060546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     247386 s       6815 s      34762 s     241851 s         16 s
#2  3499 MHz     153087 s         63 s      27155 s     383739 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.18.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.97359 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0241139; 0.0 0.00384531 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.148959; 0.0 0.0 0.669054 0.0 0.0 0.0 0.0 0.0 0.0 0.803098; 0.0 0.0 0.0 0.18211 0.0 0.0 0.0 0.0 0.0 0.407155; 0.0 0.0 0.0 0.0 0.765829 0.0 0.0 0.0 0.0 0.177182; 0.0 0.0 0.0 0.0 0.0 0.0437 0.0 0.0 0.0 0.419102; 0.0 0.0 0.0 0.0 0.0 0.0 0.3592 0.0 0.0 0.716216; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.559906 0.0 0.771965; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.507418 0.227187; 0.0241139 0.148959 0.803098 0.407155 0.177182 0.419102 0.716216 0.771965 0.227187 0.274958]
(U,Lambda) = eig(full(A)) = ([-1.12715,0.00630539,0.0764359,0.211641,0.431357,0.51155,0.618542,0.76306,0.973458,1.87442],
[-0.00830166 0.000404083 -0.00192426 -0.00208645 -0.00351399 -0.000904452 0.0032311 0.00177046 -0.999784 -0.0181186; -0.0952526 -0.981468 0.14691 0.0472605 0.0275322 0.00508457 -0.0115286 -0.00303276 0.00084568 -0.0539005; -0.323358 0.0196417 -0.0970192 -0.115752 -0.266972 -0.0883643 0.756396 -0.132053 0.0145229 -0.450972; -0.224907 0.0375395 -0.27584 0.908948 0.129077 0.0214181 -0.0443826 -0.0108332 0.00283223 -0.162847; -0.0676932 0.00378127 -0.0184 -0.0210781 -0.0418582 -0.0120756 0.0572304 0.988798 0.00469754 -0.108181; -0.258874 0.181664 0.916556 0.164524 0.0854265 0.0155242 -0.034685 -0.00900551 0.00248134 -0.154952; -0.348492 0.0328971 -0.181336 -0.319998 0.784306 0.0814699 -0.131383 -0.0274125 0.00641844 -0.31994; -0.330932 0.0226027 -0.114312 -0.146135 -0.474513 -0.276661 -0.626329 -0.0587366 0.0102755 -0.397496; -0.10052 0.00734864 -0.0377388 -0.0506392 -0.236014 0.952807 -0.0972628 -0.0137369 0.00268348 -0.11249; 0.723222 -0.0162091 0.0715919 0.0659276 0.079017 0.01733 -0.0475741 -0.0154574 0.00550473 -0.67686])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
