>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (761.94921875 MB free)
Uptime: 4650.0 sec
Load Avg:  1.048828125  1.0615234375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     214312 s         53 s      28802 s     176413 s          5 s
#2  3495 MHz      91072 s         93 s      22881 s     338610 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.490282 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.999349; 0.0 0.0831994 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.966099; 0.0 0.0 0.980653 0.0 0.0 0.0 0.0 0.0 0.0 0.952131; 0.0 0.0 0.0 0.695928 0.0 0.0 0.0 0.0 0.0 0.657233; 0.0 0.0 0.0 0.0 0.594382 0.0 0.0 0.0 0.0 0.333285; 0.0 0.0 0.0 0.0 0.0 0.64049 0.0 0.0 0.0 0.735619; 0.0 0.0 0.0 0.0 0.0 0.0 0.699367 0.0 0.0 0.707049; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.970357 0.0 0.96532; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.513499 0.850987; 0.999349 0.966099 0.952131 0.657233 0.333285 0.735619 0.707049 0.96532 0.850987 0.776479]
(U,Lambda) = eig(full(A)) = ([-1.78653,0.174672,0.502861,0.574375,0.60431,0.665759,0.697567,0.852793,0.975715,3.18312],
[-0.302888 -0.26927 -0.702438 0.416154 -0.204893 -0.131589 0.00858451 -0.199053 0.00779951 0.264757; -0.356562 0.898156 -0.0203544 0.0688781 -0.0433423 -0.038318 0.00280002 -0.0906428 0.00410096 0.222337; -0.237439 -0.10046 0.0176195 -0.0820672 0.0591471 0.0698644 -0.0059889 0.537697 -0.73064 0.308409; -0.182696 -0.107223 0.0300986 -0.189342 0.167709 0.503365 0.71395 -0.302529 0.00889962 0.188517; -0.0965973 -0.0675287 0.0321982 -0.583345 -0.784849 -0.107889 0.00575129 -0.0931275 0.00331124 0.0918477; -0.209157 -0.134294 0.0472583 -0.389625 0.475336 -0.672638 0.0229486 -0.25019 0.00831373 0.2064; -0.196272 -0.114595 0.0318133 -0.19809 0.173894 0.486111 -0.699634 -0.332754 0.0096933 0.203087; -0.241627 -0.10317 0.018257 -0.0853673 0.061653 0.0732264 -0.00630103 0.592888 0.682474 0.311227; -0.255318 -0.213583 0.707288 0.489524 -0.219082 -0.129139 0.00823211 -0.181101 0.00697521 0.227412; 0.69007 0.0850396 -0.0088417 0.0350184 -0.0233787 -0.0231059 0.0017806 -0.072206 0.00378861 0.713411])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
