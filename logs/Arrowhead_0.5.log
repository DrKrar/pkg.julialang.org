>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-dev+4361
Commit bc56e32 (2016-05-27 12:01 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
WARNING: Union(args...) is deprecated, use Union{args...} instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Union(::Type{T}, ::Type{T}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl, in expression starting on line 6
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:8
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:48
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:50
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:64
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:77
WARNING: module DoubleDouble should explicitly import - from Base
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.439851 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.68571; 0.0 0.721633 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.560188; 0.0 0.0 0.0329225 0.0 0.0 0.0 0.0 0.0 0.0 0.969019; 0.0 0.0 0.0 0.937353 0.0 0.0 0.0 0.0 0.0 0.61097; 0.0 0.0 0.0 0.0 0.389297 0.0 0.0 0.0 0.0 0.413582; 0.0 0.0 0.0 0.0 0.0 0.66622 0.0 0.0 0.0 0.434063; 0.0 0.0 0.0 0.0 0.0 0.0 0.571883 0.0 0.0 0.36075; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.885521 0.0 0.408437; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.347742 0.810471; 0.68571 0.560188 0.969019 0.61097 0.413582 0.434063 0.36075 0.408437 0.810471 0.777222]
(U,Lambda) = eig(full(A)) = ([-1.28289,0.161382,0.377466,0.412076,0.549349,0.625742,0.693853,0.844227,0.909277,2.47917],
[-0.263275 -0.260111 0.239545 -0.738097 0.33417 0.243684 0.102718 0.127011 0.0519879 -0.245812; -0.184847 -0.10562 0.0354722 -0.0541027 -0.17351 -0.385928 -0.767282 0.342257 0.10625 -0.233012; -0.48711 0.796817 -0.061293 0.076409 0.100129 0.107983 0.0557856 0.0894616 0.0393534 -0.289588; -0.182016 -0.0831703 0.0237817 -0.0347743 -0.0840269 -0.129526 -0.0954702 -0.491404 -0.774485 -0.289692; -0.163593 -0.191683 0.761862 0.542824 0.137891 0.115552 0.0516701 0.0680933 0.0283077 -0.144674; -0.147301 -0.0908227 0.0327603 -0.0510621 -0.19819 -0.708417 0.597667 0.182643 0.0635585 -0.175031; -0.128648 -0.0928295 0.0404385 -0.0674894 -0.854269 0.442481 0.112538 0.0992151 0.038054 -0.138274; -0.124587 -0.0595795 0.0175201 -0.0257918 -0.0648333 -0.103865 -0.0810816 -0.740843 0.611913 -0.187362; -0.328753 -0.459386 -0.594234 0.376643 0.21452 0.192593 0.089098 0.12227 0.0513678 -0.277981; 0.661439 0.105632 -0.0217933 0.0298969 0.0533623 0.0660614 0.0380492 0.0749011 0.0355901 -0.731051])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:324 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:322 [inlined]
 in _unsafe_getindex!(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:316
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 213
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
