>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (626.83203125 MB free)
Uptime: 4830.0 sec
Load Avg:  1.68359375  1.234375  1.04736328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     224133 s        194 s      28634 s     172721 s          7 s
#2  3500 MHz      78421 s       5910 s      20690 s     359287 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0640503 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.916474; 0.0 0.915135 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.362283; 0.0 0.0 0.119823 0.0 0.0 0.0 0.0 0.0 0.0 0.401911; 0.0 0.0 0.0 0.266665 0.0 0.0 0.0 0.0 0.0 0.201675; 0.0 0.0 0.0 0.0 0.654059 0.0 0.0 0.0 0.0 0.839084; 0.0 0.0 0.0 0.0 0.0 0.289987 0.0 0.0 0.0 0.197417; 0.0 0.0 0.0 0.0 0.0 0.0 0.00422263 0.0 0.0 0.428397; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.172907 0.0 0.697696; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.868107 0.641897; 0.916474 0.362283 0.401911 0.201675 0.839084 0.197417 0.428397 0.697696 0.641897 0.740865]
(U,Lambda) = eig(full(A)) = ([-1.22037,0.0125139,0.1067,0.143542,0.261597,0.285869,0.472369,0.800827,0.906669,2.3261],
[-0.467319 0.323416 -0.548409 0.363999 -0.111443 0.0829668 -0.353284 0.105709 -0.0236064 0.296518; -0.111108 0.00729957 0.0114369 -0.0148238 0.0133161 -0.011561 0.128788 -0.269338 0.928708 0.187917; -0.19641 0.0681156 0.781642 0.534984 -0.0680982 0.0486054 -0.179439 0.0501541 -0.0110862 0.133322; -0.0888241 0.0144316 0.0321761 -0.0517145 0.955873 0.210884 -0.154316 0.0320852 -0.00683928 0.0716699; -0.293181 0.0237866 0.0391235 -0.0518913 0.051358 -0.045763 0.726901 0.485849 -0.0720937 0.367276; -0.0856061 0.0129395 0.027489 -0.0425608 0.167041 -0.962728 -0.170374 0.0328417 -0.00694806 0.0709603; -0.229116 -0.939677 -0.106689 0.0970813 -0.0399837 0.0305439 -0.144035 0.0457015 -0.0103031 0.135033; -0.327966 0.0791108 0.26895 -0.75013 -0.18897 0.124027 -0.366713 0.0944252 -0.0206373 0.237146; -0.201296 0.0136444 0.0215156 -0.0279697 0.0254231 -0.0221384 0.255305 -0.810792 -0.361284 0.322213; 0.654936 -0.0181867 -0.0255214 0.0315719 -0.0240216 0.0200808 -0.157399 0.084982 -0.0217041 0.731869])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
