>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (459.8203125 MB free)
Uptime: 5116.0 sec
Load Avg:  1.14013671875  1.56396484375  1.70458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     233098 s       7286 s      36973 s     187482 s          5 s
#2  3500 MHz     154131 s        100 s      25090 s     314668 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.11.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.597658 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.168778; 0.0 0.229271 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.92033; 0.0 0.0 0.586804 0.0 0.0 0.0 0.0 0.0 0.0 0.878018; 0.0 0.0 0.0 0.573552 0.0 0.0 0.0 0.0 0.0 0.0392268; 0.0 0.0 0.0 0.0 0.519802 0.0 0.0 0.0 0.0 0.829947; 0.0 0.0 0.0 0.0 0.0 0.646978 0.0 0.0 0.0 0.646638; 0.0 0.0 0.0 0.0 0.0 0.0 0.841589 0.0 0.0 0.696522; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.364456 0.0 0.951579; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.260234 0.950208; 0.168778 0.92033 0.878018 0.0392268 0.829947 0.646638 0.696522 0.951579 0.950208 0.19997]
(U,Lambda) = eig(full(A)) = ([-1.93306,0.242371,0.314335,0.449617,0.553881,0.573586,0.597304,0.632539,0.80514,2.5846],
[-0.0482968 0.00536297 0.0208083 0.0597099 -0.10224 -0.00611311 0.984268 -0.0969955 0.0397659 -0.0581086; -0.308225 -0.79309 -0.377917 -0.218752 0.0751848 0.00233051 -0.00516418 -0.0457477 0.0781256 -0.267301; -0.252332 0.0287784 0.112561 0.335198 -0.707219 -0.0579147 -0.17269 -0.384839 0.196586 -0.30065; -0.0113329 0.00133717 0.00528594 0.0165769 -0.0528836 0.998166 -0.00341051 -0.0133304 0.00828019 -0.0133435; -0.245032 0.0337726 0.141095 0.619324 0.645815 0.0134543 -0.0221147 -0.147572 0.142189 -0.274968; -0.181502 0.0180425 0.0679025 0.171598 -0.184195 -0.00768204 0.0268831 0.897719 0.199864 -0.228298; -0.181791 0.0131226 0.0461442 0.0930663 -0.0641996 -0.00226599 0.0058882 0.0667887 -0.934151 -0.273365; -0.299939 0.0879936 0.663175 -0.585221 0.133216 0.00396728 -0.00843951 -0.0711534 0.105558 -0.293206; -0.313739 0.600533 -0.613497 -0.26278 0.0858108 0.00264393 -0.00582161 -0.051161 0.0852454 -0.279655; 0.724181 -0.0112894 -0.0349303 -0.0523738 0.0265185 0.000871895 -0.00206512 -0.0200456 0.0488848 -0.684085])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
