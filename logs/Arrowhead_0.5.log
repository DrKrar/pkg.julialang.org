>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (914.3515625 MB free)
Uptime: 4695.0 sec
Load Avg:  1.00927734375  1.0146484375  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     219577 s        105 s      26343 s     172717 s          8 s
#2  3504 MHz      88614 s         40 s      19508 s     348772 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.316154 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0677106; 0.0 0.623339 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.586531; 0.0 0.0 0.443132 0.0 0.0 0.0 0.0 0.0 0.0 0.473813; 0.0 0.0 0.0 0.0315002 0.0 0.0 0.0 0.0 0.0 0.157295; 0.0 0.0 0.0 0.0 0.360594 0.0 0.0 0.0 0.0 0.576494; 0.0 0.0 0.0 0.0 0.0 0.738528 0.0 0.0 0.0 0.311732; 0.0 0.0 0.0 0.0 0.0 0.0 0.23331 0.0 0.0 0.833536; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.193215 0.0 0.456819; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.887793 0.784103; 0.0677106 0.586531 0.473813 0.157295 0.576494 0.311732 0.833536 0.456819 0.784103 0.992876]
(U,Lambda) = eig(full(A)) = ([-0.900499,0.0350867,0.201325,0.31055,0.318886,0.415749,0.551059,0.714985,0.797682,2.37562],
[-0.0355091 0.00544565 0.0094731 -0.582527 0.810319 -0.0321543 0.0272178 -0.0107938 -0.0127232 0.0247209; -0.245585 0.0225388 0.022328 -0.0903943 -0.0629957 0.13363 -0.766234 -0.406899 -0.304402 0.251681; -0.224997 0.0262483 0.0314793 -0.172277 -0.1247 0.818376 0.414538 -0.11081 -0.120917 0.184354; -0.107684 -0.991376 -0.01488 0.0271728 0.0178974 -0.0193609 0.0285871 -0.0146317 -0.0185757 0.0504543; -0.291674 0.0400347 0.0581498 -0.555323 -0.451974 -0.494348 0.285804 -0.103424 -0.11934 0.215118; -0.121351 0.0100174 0.00932242 -0.0351124 -0.0242908 0.0456769 -0.157015 0.84182 -0.476826 0.143176; -0.469067 0.0950545 0.418658 0.520214 0.318503 -0.216087 0.247702 -0.110022 -0.133635 0.292553; -0.266496 0.0653039 -0.90491 0.187679 0.118863 -0.0970887 0.120542 -0.0556638 -0.0683804 0.157388; -0.279759 0.0207863 0.0183501 -0.0654811 -0.0450684 0.0785619 -0.219875 0.288481 0.787328 0.396262; 0.638043 -0.0226049 -0.0160652 0.048206 0.0326994 -0.0472957 0.0944255 -0.0635781 -0.0904815 0.751902])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
