>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (460.37890625 MB free)
Uptime: 4410.0 sec
Load Avg:  1.02490234375  1.517578125  1.66455078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     210926 s        121 s      32700 s     142390 s          4 s
#2  3499 MHz     123237 s         41 s      25216 s     272969 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.559874 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.363662; 0.0 0.290434 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.142764; 0.0 0.0 0.692593 0.0 0.0 0.0 0.0 0.0 0.0 0.452457; 0.0 0.0 0.0 0.432941 0.0 0.0 0.0 0.0 0.0 0.263622; 0.0 0.0 0.0 0.0 0.161179 0.0 0.0 0.0 0.0 0.0555602; 0.0 0.0 0.0 0.0 0.0 0.285318 0.0 0.0 0.0 0.5836; 0.0 0.0 0.0 0.0 0.0 0.0 0.969364 0.0 0.0 0.196588; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.527623 0.0 0.455171; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.135002 0.029052; 0.363662 0.142764 0.452457 0.263622 0.0555602 0.5836 0.196588 0.455171 0.029052 0.806638]
(U,Lambda) = eig(full(A)) = ([-0.394767,0.135255,0.161985,0.290138,0.381178,0.458037,0.547842,0.647976,0.951422,1.6819],
[-0.242055 -0.00745296 0.0132053 -0.00271338 -0.223948 0.264024 0.795966 -0.349083 0.0823528 -0.243122; -0.132391 -0.00800603 0.0160583 -0.969829 0.173126 -0.0629779 -0.0146064 -0.033768 0.0191509 -0.0769616; -0.2644 -0.00706462 0.0123202 -0.00226263 -0.159883 0.142621 0.0823194 0.857606 0.154999 -0.343064; -0.202378 -0.00770646 0.0140572 -0.00371534 -0.560442 -0.776645 -0.0604231 -0.103678 0.0450831 -0.15833; -0.0635021 -0.0186507 -0.996874 0.000867098 0.0277912 -0.0138378 -0.00378423 -0.00965228 0.00623402 -0.0274059; -0.545267 -0.0338434 0.0683675 0.243691 0.669948 -0.24982 -0.0585453 -0.136092 0.0776852 -0.313457; -0.0915711 -0.002051 0.00351798 -0.0005825 -0.0367796 0.0284257 0.0122824 0.0517298 -0.971483 -0.206957; -0.313557 -0.0100951 0.0179861 -0.00385736 -0.342029 0.483619 -0.592881 -0.31984 0.0952313 -0.295797; -0.0348454 0.999048 -0.0155565 0.000376893 0.0129866 -0.00664935 -0.00185328 -0.00478954 0.0031552 -0.0140878; 0.635415 0.00870222 -0.0144482 0.00201258 0.110043 -0.0739354 -0.0263358 -0.0845695 0.0886676 -0.750118])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
