>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (865.296875 MB free)
Uptime: 3787.0 sec
Load Avg:  0.99462890625  0.99658203125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     174955 s         70 s      21373 s     139769 s          3 s
#2  3499 MHz      80130 s         83 s      20055 s     267540 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.520915 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.12906; 0.0 0.58792 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.516686; 0.0 0.0 0.846456 0.0 0.0 0.0 0.0 0.0 0.0 0.191035; 0.0 0.0 0.0 0.435805 0.0 0.0 0.0 0.0 0.0 0.945276; 0.0 0.0 0.0 0.0 0.569581 0.0 0.0 0.0 0.0 0.246443; 0.0 0.0 0.0 0.0 0.0 0.412341 0.0 0.0 0.0 0.881708; 0.0 0.0 0.0 0.0 0.0 0.0 0.811887 0.0 0.0 0.59361; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.647225 0.0 0.599548; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.329659 0.548016; 0.12906 0.516686 0.191035 0.945276 0.246443 0.881708 0.59361 0.599548 0.548016 0.357429]
(U,Lambda) = eig(full(A)) = ([-1.32428,0.342148,0.423122,0.519278,0.549823,0.574141,0.624349,0.773596,0.844434,2.19261],
[-0.050369 -0.015399 -0.0118983 0.975759 0.195794 -0.0361867 -0.0401143 0.0297129 0.0041409 0.0531548; -0.194585 -0.0448419 -0.0282668 0.093165 -0.594788 0.559611 -0.455984 0.161882 0.0209083 0.221689; -0.0633754 -0.0080799 -0.00406846 0.00722677 -0.0282435 0.0104694 0.0276518 -0.152528 -0.980493 0.0977072; -0.386759 -0.215282 -0.671959 -0.140162 0.36359 -0.101978 -0.161183 0.162794 0.0240123 0.370462; -0.0937093 -0.0231127 -0.0151705 0.0606364 -0.547002 -0.80665 -0.144665 0.0702717 0.00930721 0.104544; -0.365624 -0.267929 0.737317 -0.10205 0.281258 -0.0813256 -0.133704 0.141983 0.0211812 0.340995; -0.200116 -0.0269547 -0.0137662 0.025109 -0.099339 0.0372622 0.101762 -0.901849 0.18932 0.296008; -0.218999 -0.0419183 -0.02412 0.0579974 -0.269948 0.122428 0.842589 0.275997 0.0315575 0.267114; -0.23861 0.935992 0.0528633 -0.0357707 0.109162 -0.0334524 -0.0597862 0.0718123 0.0110504 0.202535; 0.720137 0.0213299 0.00901571 -0.012377 0.0438557 -0.0149238 -0.0321494 0.0581737 0.0103801 0.688507])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
