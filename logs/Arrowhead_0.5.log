>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (461.03515625 MB free)
Uptime: 4594.0 sec
Load Avg:  1.00634765625  1.544921875  1.65478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     213178 s        118 s      31766 s     158407 s          7 s
#2  3500 MHz     118885 s         43 s      27404 s     286151 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.246673 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.700199; 0.0 0.0238165 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.707978; 0.0 0.0 0.111751 0.0 0.0 0.0 0.0 0.0 0.0 0.309653; 0.0 0.0 0.0 0.774632 0.0 0.0 0.0 0.0 0.0 0.0227975; 0.0 0.0 0.0 0.0 0.880427 0.0 0.0 0.0 0.0 0.415245; 0.0 0.0 0.0 0.0 0.0 0.868315 0.0 0.0 0.0 0.427676; 0.0 0.0 0.0 0.0 0.0 0.0 0.516353 0.0 0.0 0.757763; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.359689 0.0 0.813126; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.242282 0.62878; 0.700199 0.707978 0.309653 0.0227975 0.415245 0.427676 0.757763 0.813126 0.62878 0.821089]
(U,Lambda) = eig(full(A)) = ([-1.20196,0.0706877,0.126152,0.244216,0.309212,0.465036,0.774444,0.811938,0.875054,2.37025],
[-0.314602 -0.220147 0.239023 0.659138 -0.502112 0.184413 0.0108817 -0.118516 -0.0111359 -0.246073; -0.37593 0.835761 -0.284627 -0.00742867 -0.11125 0.0922812 0.00773597 -0.0859479 -0.00831179 -0.225176; -0.153417 -0.417247 -0.884625 -0.00540598 -0.0703268 0.0504078 0.0038325 -0.0423126 -0.00405418 -0.102321; -0.00750705 -0.00179191 0.00144635 9.93971e-5 0.00219669 -0.00423487 -0.998187 -0.0584676 -0.00226872 -0.0106627; -0.12979 -0.0283745 0.0226494 0.00150941 0.032601 -0.0574905 -0.032136 0.580089 0.77244 -0.208008; -0.134458 -0.0296677 0.0237081 0.00158477 0.0343044 -0.0609898 -0.0373685 0.725806 -0.634216 -0.212508; -0.287032 -0.0940791 0.0798964 0.00643947 0.164057 -0.849226 0.0240813 -0.245279 -0.0211118 -0.305042; -0.338901 -0.155678 0.143246 0.0162848 0.722415 0.443899 0.01608 -0.172024 -0.0157677 -0.301822; -0.283372 -0.202751 0.222759 -0.751755 -0.421316 0.162339 0.00969113 -0.105608 -0.00993063 -0.220518; 0.650879 0.055331 -0.0411417 -0.00231261 -0.0448463 0.0575106 0.00820201 -0.0956773 -0.00999369 -0.746296])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
