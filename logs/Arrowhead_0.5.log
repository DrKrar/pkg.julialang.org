>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.1.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-dev+4370
Commit 758aebc (2016-05-27 21:34 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Arrowhead
WARNING: Union(args...) is deprecated, use Union{args...} instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Union(::Type{T}, ::Type{T}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl, in expression starting on line 6
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:8
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:48
WARNING: Base.FloatingPoint is deprecated, use AbstractFloat instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:50
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:64
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:77
WARNING: module DoubleDouble should explicitly import - from Base
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:161
WARNING: Base.MathConst is deprecated, use Base.Irrational instead.
  likely near /home/vagrant/.julia/v0.5/DoubleDouble/src/DoubleDouble.jl:162
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.686273 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.161895; 0.0 0.960303 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.476964; 0.0 0.0 0.312942 0.0 0.0 0.0 0.0 0.0 0.0 0.349791; 0.0 0.0 0.0 0.612396 0.0 0.0 0.0 0.0 0.0 0.803926; 0.0 0.0 0.0 0.0 0.726004 0.0 0.0 0.0 0.0 0.630403; 0.0 0.0 0.0 0.0 0.0 0.757666 0.0 0.0 0.0 0.620066; 0.0 0.0 0.0 0.0 0.0 0.0 0.565226 0.0 0.0 0.353599; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.423086 0.0 0.0732546; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.59741 0.558185; 0.161895 0.476964 0.349791 0.803926 0.630403 0.620066 0.353599 0.0732546 0.558185 0.496676]
(U,Lambda) = eig(full(A)) = ([-0.923014,0.332464,0.423764,0.56926,0.602138,0.675144,0.691161,0.744337,0.929531,2.0932],
[-0.0728882 -0.0247009 -0.00569268 0.0150462 -0.0135321 -0.569484 -0.811953 0.0477032 -0.0401448 -0.0785368; -0.183493 -0.0410096 -0.00820562 0.0132644 -0.00936497 -0.0654739 0.0434484 -0.037785 0.934958 -0.287347; -0.205052 0.967224 0.0291346 -0.0148407 0.00850587 0.037803 -0.0226743 0.0138725 -0.0342197 -0.134102; -0.379358 -0.155028 -0.0393393 0.202674 -0.551133 0.501515 -0.250238 0.104246 -0.15291 -0.370535; -0.276981 -0.0864725 -0.0192528 0.0437374 -0.0357908 -0.485195 0.443583 0.588315 -0.186835 -0.314701; -0.267307 -0.0787211 -0.0171414 0.0357906 -0.0280372 -0.294131 0.228589 -0.795895 -0.217627 -0.316879; -0.172146 -0.0820066 -0.0230728 -0.953131 0.0673657 0.125924 -0.0688387 0.0337761 -0.0585477 -0.157945; -0.0394289 -0.0436364 0.997668 -0.00544992 0.00287713 0.0113763 -0.00669959 0.00390132 -0.00872502 -0.0299364; -0.265993 -0.113728 -0.0296715 0.215637 0.830209 0.281083 -0.145973 0.0649979 -0.101378 -0.254694; 0.724532 0.0539819 0.00923053 -0.0108749 0.00703239 0.0391443 -0.0245171 0.0171088 -0.0603203 -0.682512])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:324 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:322 [inlined]
 in _unsafe_getindex!(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:316
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 213
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
