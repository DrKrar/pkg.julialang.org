>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: Nothing to be done

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc0+0
Commit 0030eec* (2016-07-26 20:22 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (466.33984375 MB free)
Uptime: 3785.0 sec
Load Avg:  0.9931640625  0.96728515625  0.87841796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     116771 s         83 s      26662 s     199850 s         10 s
#2  3499 MHz      65958 s         49 s      19127 s     278425 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.651924 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.600094; 0.0 0.872612 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.212159; 0.0 0.0 0.896337 0.0 0.0 0.0 0.0 0.0 0.0 0.984433; 0.0 0.0 0.0 0.421125 0.0 0.0 0.0 0.0 0.0 0.344051; 0.0 0.0 0.0 0.0 0.953955 0.0 0.0 0.0 0.0 0.910303; 0.0 0.0 0.0 0.0 0.0 0.44272 0.0 0.0 0.0 0.791914; 0.0 0.0 0.0 0.0 0.0 0.0 0.977356 0.0 0.0 0.979878; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.490687 0.0 0.704253; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.856478 0.891211; 0.600094 0.212159 0.984433 0.344051 0.910303 0.791914 0.979878 0.704253 0.891211 0.598154]
(U,Lambda) = eig(full(A)) = ([-1.5955,0.423551,0.465859,0.557268,0.686366,0.869132,0.875062,0.926095,0.966671,2.98684],
[-0.19203 0.017737 -0.0709854 0.412928 0.867481 -0.027354 0.0243728 0.0419792 -0.0162238 -0.177115; -0.0618206 0.00318907 -0.0114801 0.0438211 -0.0567147 0.603705 0.784538 0.076082 -0.0191934 -0.0691539; -0.28412 0.0140549 -0.0503329 0.189106 -0.233425 0.358282 -0.419367 0.63448 -0.1191 -0.32452; -0.122697 -0.957173 0.16928 -0.164602 0.0645808 -0.00760354 0.00686889 0.0130675 -0.00536643 -0.0924105; -0.256788 0.0115847 -0.0410484 0.149466 -0.16937 0.106255 -0.10457 -0.62666 -0.609147 -0.308588; -0.279424 0.278868 0.753275 -0.450294 0.161823 -0.0183876 0.0166001 0.0314217 -0.0128612 -0.21451; -0.2739 0.0119432 -0.0421643 0.151928 -0.167654 0.0896449 -0.0868125 -0.366619 0.78036 -0.336042; -0.242779 0.0708077 -0.624298 -0.688948 0.179187 -0.0184248 0.0166048 0.0310219 -0.0125901 -0.19443; -0.261396 0.0138954 -0.050216 0.194003 -0.260834 -0.697328 0.434609 0.24553 -0.068821 -0.288293; 0.719177 -0.00675004 0.0220098 -0.0651337 0.0497875 -0.00990097 0.00906274 0.0191794 -0.00850931 -0.68914])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
