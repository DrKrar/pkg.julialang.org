>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (459.2734375 MB free)
Uptime: 5936.0 sec
Load Avg:  1.021484375  1.48486328125  1.60888671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     258792 s         98 s      33086 s     247680 s         11 s
#2  3501 MHz     129002 s         41 s      27036 s     419435 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.864047 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.861424; 0.0 0.426094 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.324722; 0.0 0.0 0.28005 0.0 0.0 0.0 0.0 0.0 0.0 0.581483; 0.0 0.0 0.0 0.728209 0.0 0.0 0.0 0.0 0.0 0.640823; 0.0 0.0 0.0 0.0 0.846818 0.0 0.0 0.0 0.0 0.897185; 0.0 0.0 0.0 0.0 0.0 0.270298 0.0 0.0 0.0 0.961676; 0.0 0.0 0.0 0.0 0.0 0.0 0.00309811 0.0 0.0 0.573434; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.537058 0.0 0.751973; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.448155 0.610847; 0.861424 0.324722 0.581483 0.640823 0.897185 0.961676 0.573434 0.751973 0.610847 0.975352]
(U,Lambda) = eig(full(A)) = ([-1.41942,0.0385969,0.277337,0.370612,0.430779,0.489203,0.642223,0.766978,0.856202,2.92666],
[-0.249988 0.0609299 0.00577492 0.107629 0.0253411 -0.098618 -0.303042 -0.396773 -0.753489 -0.307894; -0.116598 0.048927 0.00858594 0.360833 -0.883306 0.220804 0.117245 0.0425901 0.00518058 -0.0957361; -0.226736 0.140607 0.842993 -0.395853 -0.0491704 0.119306 0.12529 0.0533919 0.00692538 -0.161975; -0.197732 0.0542547 0.00559033 0.110481 0.0274611 -0.115059 -0.581572 0.739015 0.0343555 -0.214893; -0.262346 0.0648121 0.00619662 0.116153 0.0274861 -0.10766 -0.342201 -0.502418 0.656077 -0.318019; -0.377148 0.242329 -0.537378 -0.591031 -0.0763782 0.188522 0.201776 0.0865677 0.0112628 -0.266897; -0.267131 -0.943136 -0.00822446 -0.0961951 -0.0170895 0.0506224 0.0700154 0.0335631 0.00461239 -0.144602; -0.254698 0.0880796 0.011388 0.27853 0.0901822 -0.674321 0.557993 0.146227 0.0161681 -0.231995; -0.216746 0.0870807 0.0140654 0.485662 0.448084 0.638595 0.245626 0.0856616 0.0102723 -0.181696; 0.662668 -0.0583854 -0.00393326 -0.0616514 -0.0127457 0.0429131 0.0780361 0.0447099 0.0068619 -0.737229])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
