>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-pre+5664
Commit 0d7c014 (2016-07-24 18:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (468.9765625 MB free)
Uptime: 2824.0 sec
Load Avg:  0.97607421875  0.998046875  0.91845703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     109908 s         93 s      26189 s     113820 s          5 s
#2  3500 MHz      52403 s         40 s      18418 s     198532 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
13 additional packages:
 - ColorTypes                    0.2.5
 - ColorVectorSpace              0.1.5
 - Colors                        0.6.6
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
 - FileIO                        0.1.0
 - FixedPointNumbers             0.1.4
 - Graphics                      0.1.3
 - Images                        0.5.5              8840a952 (dirty)
 - Reexport                      0.0.3
 - SIUnits                       0.0.6
 - TexExtensions                 0.0.3
 - Zlib                          0.1.12
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.137895 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.417536; 0.0 0.384786 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00882317; 0.0 0.0 0.157932 0.0 0.0 0.0 0.0 0.0 0.0 0.21358; 0.0 0.0 0.0 0.330462 0.0 0.0 0.0 0.0 0.0 0.696879; 0.0 0.0 0.0 0.0 0.19927 0.0 0.0 0.0 0.0 0.552465; 0.0 0.0 0.0 0.0 0.0 0.0330611 0.0 0.0 0.0 0.925453; 0.0 0.0 0.0 0.0 0.0 0.0 0.542216 0.0 0.0 0.537642; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.481965 0.0 0.329064; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.405355 0.180527; 0.417536 0.00882317 0.21358 0.696879 0.552465 0.925453 0.537642 0.329064 0.180527 0.481247]
(U,Lambda) = eig(full(A)) = ([-1.1834,0.104152,0.152721,0.171192,0.270093,0.384778,0.40139,0.459332,0.512743,1.88119],
[-0.211869 0.630478 0.542593 -0.424491 0.207336 -0.001572 -0.0336379 -0.0742188 0.0511643 -0.175388; -0.00377225 0.00160193 -0.000732529 0.00139832 -0.00505005 0.999877 -0.0112805 -0.00676264 0.00316729 -0.00431771; -0.106757 0.20235 -0.789781 -0.545242 0.125003 -0.00087514 -0.0186227 -0.0404885 0.0276497 -0.0907585; -0.308634 0.156896 -0.0755402 0.148113 -0.75779 -0.0119257 -0.208569 -0.308975 0.175608 -0.329078; -0.267892 0.29594 -0.228669 0.666051 0.512076 -0.00276816 -0.0580233 -0.121379 0.0809529 -0.240534; -0.51007 -0.663283 0.149009 -0.226797 0.256303 -0.00244574 -0.0533365 -0.124046 0.0886194 -0.366691; -0.208892 0.062534 -0.0265951 0.0490528 -0.129699 0.00317418 0.081043 0.370628 -0.837925 -0.294035; -0.132478 0.0443775 -0.0192562 0.0358434 -0.101956 0.00314716 0.0866928 0.830707 0.491092 -0.172215; -0.076183 0.0305382 -0.0137677 0.0260973 -0.0876143 0.00815479 0.966513 -0.191094 0.0772166 -0.0895739; 0.670461 -0.0509518 0.0192668 -0.0338511 0.0656457 -0.000929498 -0.0212278 -0.0571367 0.0459333 -0.73228])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:736
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
