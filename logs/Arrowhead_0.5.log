>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc2+0
Commit 0350e57 (2016-08-12 11:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (864.01953125 MB free)
Uptime: 4282.0 sec
Load Avg:  0.98095703125  0.97265625  0.912109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     136208 s        102 s      27796 s     222192 s          6 s
#2  3499 MHz      75585 s         42 s      20417 s     314630 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.7
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.898659 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.269863; 0.0 0.570263 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.528405; 0.0 0.0 0.425742 0.0 0.0 0.0 0.0 0.0 0.0 0.318881; 0.0 0.0 0.0 0.749841 0.0 0.0 0.0 0.0 0.0 0.451064; 0.0 0.0 0.0 0.0 0.519987 0.0 0.0 0.0 0.0 0.134809; 0.0 0.0 0.0 0.0 0.0 0.252428 0.0 0.0 0.0 0.886078; 0.0 0.0 0.0 0.0 0.0 0.0 0.150994 0.0 0.0 0.613061; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.556692 0.0 0.145221; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.685596 0.0315708; 0.269863 0.528405 0.318881 0.451064 0.134809 0.886078 0.613061 0.145221 0.0315708 0.333509]
(U,Lambda) = eig(full(A)) = ([-1.0245,0.18097,0.400727,0.493981,0.525475,0.557794,0.685038,0.703878,0.880538,1.73981],
[-0.0989182 -0.0156448 -0.0366176 0.0600588 -0.0256768 0.00571014 0.0220545 0.123548 -0.959007 0.221101; -0.233571 -0.0564745 -0.210582 0.623864 -0.418916 0.305637 -0.0803744 -0.352654 0.109666 0.311366; -0.155001 -0.0542037 -0.861281 -0.420855 0.113529 -0.0174168 -0.0214699 -0.102237 0.0451504 0.167237; -0.179204 -0.0329903 -0.0872944 0.158773 -0.0713839 0.0169401 0.121517 0.875116 0.222241 0.314006; -0.0615294 -0.0165448 -0.0763733 0.466876 0.872133 -0.0257178 -0.0142593 -0.0653726 0.0240771 0.0761631; -0.489162 -0.515921 0.403692 -0.330369 0.115227 -0.0209285 -0.0357579 -0.175025 0.090842 0.410555; -0.367646 0.850937 0.165861 -0.160978 0.058129 -0.0108695 -0.0200412 -0.0988796 0.0541131 0.26592; -0.0647431 -0.0160815 -0.0629098 0.208559 -0.16518 -0.951152 -0.0197536 -0.0879837 0.0288764 0.084591; -0.013014 -0.00260302 -0.00748783 0.0148388 -0.00700095 0.00178169 0.987546 -0.15399 0.0104287 0.0206385; 0.704933 0.0416066 0.0675642 -0.0900621 0.0355074 -0.0072125 -0.0174581 -0.0891738 0.0643948 0.689163])
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
