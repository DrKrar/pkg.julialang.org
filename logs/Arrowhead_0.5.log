>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (457.4375 MB free)
Uptime: 5826.0 sec
Load Avg:  1.0029296875  1.5712890625  1.76904296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     268498 s       6830 s      32102 s     215509 s         10 s
#2  3499 MHz     118858 s         75 s      26959 s     422560 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.890464 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.153666; 0.0 0.305582 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.795765; 0.0 0.0 0.418927 0.0 0.0 0.0 0.0 0.0 0.0 0.79187; 0.0 0.0 0.0 0.404661 0.0 0.0 0.0 0.0 0.0 0.802894; 0.0 0.0 0.0 0.0 0.250879 0.0 0.0 0.0 0.0 0.0310454; 0.0 0.0 0.0 0.0 0.0 0.143984 0.0 0.0 0.0 0.089108; 0.0 0.0 0.0 0.0 0.0 0.0 0.558068 0.0 0.0 0.421982; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.441483 0.0 0.532903; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.590851 0.728005; 0.153666 0.795765 0.79187 0.802894 0.0310454 0.089108 0.421982 0.532903 0.728005 0.446017]
(U,Lambda) = eig(full(A)) = ([-1.27369,0.144705,0.250921,0.334389,0.411586,0.436419,0.533023,0.570788,0.886722,2.15605],
[-0.050045 -0.00166377 0.00032556 0.00865588 -0.0020104 -0.00287725 0.0178963 -0.00962338 0.994802 0.0858019; -0.355139 -0.0399394 0.0197253 -0.865296 0.047032 0.0517074 -0.145648 0.0600706 -0.0331745 0.303888; -0.329735 -0.0233164 0.00638629 0.293403 -0.675766 0.38487 -0.288916 0.104392 -0.0410108 0.322131; -0.337167 -0.0249385 0.00707608 0.357883 0.726386 0.21493 -0.260381 0.096756 -0.0403512 0.323955; -0.0143522 -0.00236097 -0.999745 -0.0116446 0.00121029 0.00142251 -0.00458051 0.00194281 -0.0011829 0.0115152; -0.0443007 0.998356 -0.00112905 -0.014659 0.0020862 0.00259051 -0.00953481 0.00417973 -0.00290657 0.0312957; -0.162366 -0.00824279 0.00186153 0.0590928 -0.0180484 -0.0294907 0.701408 0.664164 -0.0311068 0.186609; -0.218983 -0.0144987 0.00378907 0.155864 -0.111672 -0.894674 -0.24234 0.0825075 -0.0289971 0.219636; -0.27519 -0.0131756 0.00290179 0.0889155 -0.0254429 -0.0400771 0.524069 -0.726427 -0.0596118 0.328681; 0.704806 0.00807443 -0.00135495 -0.0313232 0.00626509 0.00850154 -0.0416283 0.0200198 -0.024227 0.70666])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
