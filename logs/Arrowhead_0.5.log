>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (787.953125 MB free)
Uptime: 4307.0 sec
Load Avg:  1.0693359375  1.02978515625  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     152964 s         66 s      25232 s     214767 s          1 s
#2  3500 MHz     116675 s         98 s      17288 s     280504 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.691218 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.162144; 0.0 0.834581 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.721109; 0.0 0.0 0.322032 0.0 0.0 0.0 0.0 0.0 0.0 0.478822; 0.0 0.0 0.0 0.626514 0.0 0.0 0.0 0.0 0.0 0.114652; 0.0 0.0 0.0 0.0 0.857089 0.0 0.0 0.0 0.0 0.0668676; 0.0 0.0 0.0 0.0 0.0 0.807638 0.0 0.0 0.0 0.946387; 0.0 0.0 0.0 0.0 0.0 0.0 0.886352 0.0 0.0 0.178475; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.853454 0.0 0.00717189; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.764095 0.756052; 0.162144 0.721109 0.478822 0.114652 0.0668676 0.946387 0.178475 0.00717189 0.756052 0.557871]
(U,Lambda) = eig(full(A)) = ([-0.86978,0.371346,0.627652,0.692605,0.778497,0.82571,0.853453,0.856994,0.885172,2.1792],
[-0.0753298 -0.0490711 -0.0252103 0.992331 0.0294271 0.0123577 -0.000138754 -0.00139608 -0.00548279 0.074237; -0.306836 -0.150696 -0.0344417 -0.043118 -0.203667 -0.83322 -0.00530476 -0.045923 -0.0934815 0.365357; -0.291362 0.939943 0.0154845 0.0109691 0.0166158 0.00974437 -0.00012509 -0.00127755 -0.00557642 0.175646; -0.0555692 -0.0434969 0.996035 0.0147268 0.0119493 0.00589978 -7.01394e-5 -0.000710033 -0.00290707 0.0503056; -0.0280817 -0.0133263 -0.00288043 -0.00345115 -0.013477 -0.0218425 0.00255297 0.998457 -0.0156163 0.034456; -0.409161 -0.209987 -0.0519678 -0.0698422 -0.514424 0.53679 -0.00286781 -0.0273691 -0.0800528 0.470078; -0.0737034 -0.0335479 -0.00681845 -0.00782012 -0.0262115 -0.030167 0.000753143 0.00867698 0.991371 0.0940473; -0.00301826 -0.00144009 -0.000313914 -0.000378519 -0.00151558 -0.00264968 0.999978 -0.00289198 -0.00148296 0.00368544; -0.335583 -0.186353 -0.0547651 -0.0897794 0.831553 0.125777 -0.00117465 -0.0116164 -0.0409534 0.363981; 0.725216 0.0968056 0.00988339 0.00848928 0.01584 0.0102502 -0.000138831 -0.00142734 -0.00655839 0.681263])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
