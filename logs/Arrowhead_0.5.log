>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (532.171875 MB free)
Uptime: 5213.0 sec
Load Avg:  0.9970703125  1.5322265625  1.62060546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     202848 s       1395 s      22505 s     252229 s          3 s
#2  3500 MHz      79303 s       4160 s      14373 s     414715 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.355596 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.826143; 0.0 0.181238 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.121366; 0.0 0.0 0.280932 0.0 0.0 0.0 0.0 0.0 0.0 0.995002; 0.0 0.0 0.0 0.771557 0.0 0.0 0.0 0.0 0.0 0.939902; 0.0 0.0 0.0 0.0 0.793105 0.0 0.0 0.0 0.0 0.533328; 0.0 0.0 0.0 0.0 0.0 0.716298 0.0 0.0 0.0 0.651127; 0.0 0.0 0.0 0.0 0.0 0.0 0.0610651 0.0 0.0 0.222398; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.105463 0.0 0.197074; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.221619 0.562762; 0.826143 0.121366 0.995002 0.939902 0.533328 0.651127 0.222398 0.197074 0.562762 0.0945034]
(U,Lambda) = eig(full(A)) = ([-1.64848,0.0650829,0.108469,0.181857,0.232772,0.324835,0.552967,0.733877,0.788487,2.24151],
[-0.304335 0.0507848 0.0504179 -0.0241295 -0.122099 0.751734 -0.484615 -0.0478029 0.0148519 -0.290357; -0.048969 0.0186596 0.0251536 0.995618 0.0427505 -0.023657 -0.0378002 -0.00480692 0.00155537 -0.0390455; -0.380723 0.0823225 0.0870118 -0.0509624 -0.375039 -0.634367 -0.423472 -0.048083 0.0152562 -0.336387; -0.286729 0.0237592 0.0213777 -0.00808805 -0.031667 0.0588919 0.497825 0.545994 0.432051 -0.423818; -0.161262 0.0130826 0.0117486 -0.00442761 -0.0172778 0.0318793 0.257134 0.197099 -0.898787 -0.244064; -0.203276 0.0178561 0.016156 -0.00618242 -0.0244448 0.0465571 0.461554 -0.810719 0.0701937 -0.282967; -0.0960419 -0.988536 -0.0707564 0.00934302 0.0235116 -0.0236002 -0.0523453 -0.0072352 0.0023793 -0.0676061; -0.0829514 0.0871578 -0.988705 0.0130907 0.0281002 -0.0251454 -0.0509867 -0.0068643 0.00224542 -0.061153; -0.222163 0.0642028 0.07501 -0.0718191 0.915991 -0.152612 -0.196638 -0.0240464 0.00772589 -0.18467; 0.738262 -0.0178585 -0.0150817 0.00507449 0.0181526 -0.0279905 -0.115778 -0.0218884 0.00778225 -0.662827])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
