>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (823.54296875 MB free)
Uptime: 5136.0 sec
Load Avg:  0.98046875  0.9853515625  1.015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     201859 s        115 s      30079 s     215980 s          9 s
#2  3499 MHz      80432 s         43 s      23329 s     381597 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.8.8
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.689137 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.171026; 0.0 0.334306 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.183767; 0.0 0.0 0.50035 0.0 0.0 0.0 0.0 0.0 0.0 0.558025; 0.0 0.0 0.0 0.12337 0.0 0.0 0.0 0.0 0.0 0.277055; 0.0 0.0 0.0 0.0 0.0856405 0.0 0.0 0.0 0.0 0.0227886; 0.0 0.0 0.0 0.0 0.0 0.0836153 0.0 0.0 0.0 0.964409; 0.0 0.0 0.0 0.0 0.0 0.0 0.615022 0.0 0.0 0.553129; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.327936 0.0 0.249584; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.27711 0.732119; 0.171026 0.183767 0.558025 0.277055 0.0227886 0.964409 0.553129 0.249584 0.732119 0.461637]
(U,Lambda) = eig(full(A)) = ([-1.15983,0.0856394,0.119679,0.198561,0.322113,0.332866,0.44012,0.576537,0.685899,1.89654],
[-0.0627916 -1.4243e-5 -0.00376017 0.0257891 0.00958861 -0.0034776 -0.0594342 -0.0915438 -0.986355 -0.1023; -0.083492 -3.71418e-5 -0.0107199 0.100144 0.310128 -0.924508 0.150288 0.0457235 0.00976039 -0.0849547; -0.228174 -6.76272e-5 -0.0183531 0.136782 0.0644232 -0.0241366 -0.801754 0.441444 0.0561612 -0.288653; -0.146568 -0.000369051 -0.939895 -0.272572 -0.0286855 0.00958051 0.0756924 0.0368478 0.00919734 -0.112845; -0.0124209 -0.999713 0.00838201 -0.0149288 -0.00198301 0.000667762 0.00556325 0.00279789 0.000708957 -0.00908845; -0.526505 0.0239474 0.334806 -0.620653 -0.083208 0.02803 0.234098 0.11792 0.029902 -0.384192; -0.21156 -5.25134e-5 -0.0139806 0.09825 0.0388581 -0.0142015 -0.273674 -0.866242 0.145735 -0.311723; -0.113881 -5.17704e-5 -0.0150046 0.142707 0.881947 0.366754 0.192525 0.0605084 0.0130202 -0.114913; -0.345868 -0.000192173 -0.0582234 0.689476 -0.334759 0.0951242 0.38866 0.147365 0.0334444 -0.326502; 0.678843 5.02589e-5 0.01252 -0.0739742 -0.0205773 0.00724432 0.0865371 0.0602703 0.0186741 -0.722217])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
