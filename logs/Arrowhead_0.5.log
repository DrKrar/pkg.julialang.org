>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (805.95703125 MB free)
Uptime: 5297.0 sec
Load Avg:  0.98681640625  0.96484375  0.96630859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     183542 s         77 s      31535 s     257732 s          2 s
#2  3500 MHz      94971 s        111 s      20262 s     394783 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.517192 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.807595; 0.0 0.0439722 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.594593; 0.0 0.0 0.431638 0.0 0.0 0.0 0.0 0.0 0.0 0.0724035; 0.0 0.0 0.0 0.53142 0.0 0.0 0.0 0.0 0.0 0.367498; 0.0 0.0 0.0 0.0 0.769928 0.0 0.0 0.0 0.0 0.990115; 0.0 0.0 0.0 0.0 0.0 0.143094 0.0 0.0 0.0 0.168167; 0.0 0.0 0.0 0.0 0.0 0.0 0.705273 0.0 0.0 0.359978; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.208534 0.0 0.265397; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.83208 0.241143; 0.807595 0.594593 0.0724035 0.367498 0.990115 0.168167 0.359978 0.265397 0.241143 0.0902615]
(U,Lambda) = eig(full(A)) = ([-1.26623,0.110352,0.15533,0.23266,0.432092,0.528811,0.619159,0.714509,0.829175,1.91753],
[-0.33901 -0.179418 0.140469 0.23229 0.0592828 0.442186 -0.657918 0.0947588 -0.0305338 -0.37065; -0.339746 0.809624 -0.336069 -0.257895 -0.00957017 0.00780249 -0.0858721 0.02053 -0.00893217 -0.203965; -0.0319248 -0.0203687 0.0164928 0.0297798 -0.997665 0.0047405 -0.0320738 0.00592601 -0.00214833 -0.0313167; -0.153046 -0.0788858 0.0615023 0.10067 0.0231125 -0.896346 -0.347937 0.0464712 -0.0145585 -0.170397; -0.364038 -0.13568 0.101397 0.150821 0.0183082 -0.0261259 0.545529 -0.413638 -0.197122 -0.554495; -0.0893314 -0.464227 -0.865017 -0.153661 -0.00363507 0.00277385 -0.0293438 0.00681367 -0.00289125 -0.0609095; -0.136695 -0.0546906 0.041199 0.0623359 0.0082317 -0.0129789 0.347252 0.902399 -0.0342703 -0.190847; -0.134724 -0.24432 0.313965 -0.900268 -0.00741603 0.00527206 -0.0536897 0.0121439 -0.005044 -0.0998065; -0.0860357 -0.0301994 0.0224272 0.032924 0.00376611 -0.00505894 0.0940804 -0.047486 0.979064 -0.142781; 0.748639 0.090385 -0.0629403 -0.0818404 -0.00624691 0.00636226 -0.0830695 0.0231521 -0.0117956 -0.642694])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:344 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:342 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:334 [inlined]
 in macro expansion at ./multidimensional.jl:292 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:285
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
