>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (444.97265625 MB free)
Uptime: 6455.0 sec
Load Avg:  0.91748046875  1.44091796875  1.6220703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     268482 s       6306 s      33478 s     284511 s         12 s
#2  3499 MHz     130687 s         89 s      28635 s     471685 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.227926 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0672047; 0.0 0.478026 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0647023; 0.0 0.0 0.382806 0.0 0.0 0.0 0.0 0.0 0.0 0.718961; 0.0 0.0 0.0 0.658368 0.0 0.0 0.0 0.0 0.0 0.851737; 0.0 0.0 0.0 0.0 0.552014 0.0 0.0 0.0 0.0 0.986924; 0.0 0.0 0.0 0.0 0.0 0.871588 0.0 0.0 0.0 0.014084; 0.0 0.0 0.0 0.0 0.0 0.0 0.36446 0.0 0.0 0.397484; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.284612 0.0 0.915041; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.927739 0.0710066; 0.0672047 0.0647023 0.718961 0.851737 0.986924 0.014084 0.397484 0.915041 0.0710066 0.0222048]
(U,Lambda) = eig(full(A)) = ([-1.56824,0.228113,0.326303,0.368915,0.453581,0.478654,0.620192,0.871564,0.927013,2.06365],
[-0.0279797 -0.998824 -0.0244681 0.00458711 -0.0178507 0.00256376 -0.0063514 -0.000176635 0.000981518 -0.0241243; -0.0236454 0.000716844 0.0152742 -0.00570652 0.158646 0.986406 -0.0168723 -0.000278132 0.00147135 -0.0268895; -0.275567 0.0128686 0.45575 -0.498079 -0.608865 0.0717466 -0.112279 -0.00248845 0.0134887 -0.281865; -0.286056 0.00548118 0.0918697 -0.0283171 0.249289 -0.0453316 0.827096 -0.00675842 0.0323711 -0.399397; -0.348085 0.0084366 0.156611 -0.0518706 0.600961 -0.128678 -0.536646 -0.00522472 0.0268709 -0.430229; -0.00431676 6.06025e-5 0.000925112 -0.000269627 0.0020195 -0.000342836 0.00207691 0.999952 0.00259448 -0.00778558; -0.153796 0.00807176 0.373106 0.858701 -0.267325 0.0332934 -0.0576216 -0.00132599 0.00721417 -0.154149; -0.369309 0.044843 -0.786119 0.104453 -0.324587 0.0451049 -0.101087 -0.00263728 0.0145433 -0.338936; -0.0212739 0.000281014 0.00422863 -0.00122277 0.00897585 -0.00151234 0.00855926 0.00213834 -0.998835 -0.0411924; 0.747807 -0.00276883 -0.0358171 0.00962327 -0.0599377 0.00956488 -0.0370723 -0.00169168 0.0102101 -0.658966])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
