>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (475.44921875 MB free)
Uptime: 5701.0 sec
Load Avg:  0.98681640625  1.451171875  1.63720703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     272037 s        110 s      35566 s     197781 s          5 s
#2  3499 MHz     115103 s         40 s      26750 s     415838 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.184513 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.231328; 0.0 0.902128 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.342168; 0.0 0.0 0.430691 0.0 0.0 0.0 0.0 0.0 0.0 0.327459; 0.0 0.0 0.0 0.340605 0.0 0.0 0.0 0.0 0.0 0.678965; 0.0 0.0 0.0 0.0 0.0761752 0.0 0.0 0.0 0.0 0.564109; 0.0 0.0 0.0 0.0 0.0 0.82016 0.0 0.0 0.0 0.1841; 0.0 0.0 0.0 0.0 0.0 0.0 0.465607 0.0 0.0 0.127533; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.772236 0.0 0.341898; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0753739 0.691096; 0.231328 0.342168 0.327459 0.678965 0.564109 0.1841 0.127533 0.341898 0.691096 0.613709]
(U,Lambda) = eig(full(A)) = ([-0.887241,0.0758544,0.173643,0.245226,0.416957,0.463725,0.713532,0.811588,0.871415,1.7965],
[-0.140147 0.000937209 0.902663 0.384637 0.0385937 0.0120473 0.0629453 0.0156377 -0.0271763 0.10503; -0.124163 0.000182301 0.0199231 -0.0525821 -0.0273496 -0.0113491 -0.261163 -0.160199 0.899039 0.280006; -0.16133 0.000406259 0.0540359 -0.178236 -0.924673 0.144142 0.166656 0.0364428 -0.0599579 0.175474; -0.35905 0.00112898 0.172492 -0.718612 0.34485 0.0801891 0.262077 0.0611089 -0.10322 0.341321; -0.38019 0.77394 -0.245494 0.336858 0.0641937 0.0211657 0.127405 0.0325158 -0.0572429 0.239993; -0.0700115 0.000108887 0.0120785 -0.0323247 -0.0177066 -0.0075105 -0.248534 -0.910334 -0.289852 0.138006; -0.0612101 0.000144048 0.0185281 -0.058418 -0.10166 -0.985329 0.0740469 0.0156254 -0.0253605 0.0701332; -0.133776 0.000216135 0.0242273 -0.0654905 -0.0373194 -0.0161147 -0.838371 0.368292 -0.278184 0.244304; -0.466162 -0.633256 -0.298305 0.410741 0.0784599 0.0258768 0.155889 0.0397921 -0.0700583 0.293881; 0.649309 -0.000440224 -0.0424169 0.100948 0.0387799 0.0145411 0.143948 0.0423899 -0.0806969 0.73189])
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:352 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:342 [inlined]
 in macro expansion at ./multidimensional.jl:300 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:293
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
