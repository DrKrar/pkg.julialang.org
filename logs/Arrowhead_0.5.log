>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (471.35546875 MB free)
Uptime: 5312.0 sec
Load Avg:  1.01220703125  1.4853515625  1.72021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     263500 s        451 s      34768 s     180025 s         12 s
#2  3503 MHz     125914 s       6453 s      26134 s     356082 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.672042 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.645747; 0.0 0.960869 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.603948; 0.0 0.0 0.606549 0.0 0.0 0.0 0.0 0.0 0.0 0.996186; 0.0 0.0 0.0 0.925091 0.0 0.0 0.0 0.0 0.0 0.708588; 0.0 0.0 0.0 0.0 0.506773 0.0 0.0 0.0 0.0 0.147079; 0.0 0.0 0.0 0.0 0.0 0.447277 0.0 0.0 0.0 0.0793355; 0.0 0.0 0.0 0.0 0.0 0.0 0.609507 0.0 0.0 0.550156; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.230268 0.0 0.754145; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.121126 0.0434335; 0.645747 0.603948 0.996186 0.708588 0.147079 0.0793355 0.550156 0.754145 0.0434335 0.446872]
(U,Lambda) = eig(full(A)) = ([-1.25766,0.121326,0.312185,0.447939,0.508165,0.608806,0.655451,0.83815,0.947759,2.34425],
[-0.240824 -0.00538487 0.17346 -0.0239838 0.0370392 -0.011336 0.851497 -0.337306 -0.0419422 -0.263114; -0.195912 -0.00330367 0.0899978 -0.00980042 0.0125401 -0.00190432 0.0432614 0.427009 0.82496 -0.297461; -0.384568 -0.00942843 0.327131 -0.0522773 0.0951773 0.489898 -0.445669 -0.373209 -0.0522843 -0.390605; -0.233623 -0.0040486 0.111755 -0.0123606 0.0159754 -0.002487 0.0574917 0.707163 -0.559803 -0.340201; -0.0599892 -0.00175237 0.0730637 -0.0208078 -0.992806 0.00160018 -0.0216422 -0.0385106 -0.00597281 -0.0545383; -0.0334878 -0.00111778 0.0567681 0.997148 -0.0122475 0.000545224 -0.00833752 -0.017611 -0.00283877 -0.0284956; -0.212046 -0.00517542 0.178865 -0.0283422 0.0510286 -0.871695 -0.261972 -0.208776 -0.0291271 -0.216084; -0.364754 -0.0317908 -0.889903 0.0288374 -0.0255085 0.00221159 -0.0388038 -0.107643 -0.018823 -0.243067; -0.0226702 0.999396 -0.0219747 0.00110619 -0.00105484 9.88666e-5 -0.00177834 -0.00525585 -0.000940944 -0.0133117; 0.719658 0.00459241 -0.0966642 0.00832345 -0.00939974 0.00111009 -0.0218774 -0.0867663 -0.0179082 -0.681353])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
