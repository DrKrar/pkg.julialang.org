>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (611.9453125 MB free)
Uptime: 5511.0 sec
Load Avg:  1.05908203125  1.083984375  1.05615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     258152 s        100 s      26197 s     241508 s          4 s
#2  3500 MHz      79305 s         49 s      25275 s     433057 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.1
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0458083 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.784649; 0.0 0.312266 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.915336; 0.0 0.0 0.335728 0.0 0.0 0.0 0.0 0.0 0.0 0.84403; 0.0 0.0 0.0 0.728665 0.0 0.0 0.0 0.0 0.0 0.386559; 0.0 0.0 0.0 0.0 0.963407 0.0 0.0 0.0 0.0 0.170432; 0.0 0.0 0.0 0.0 0.0 0.0159356 0.0 0.0 0.0 0.576514; 0.0 0.0 0.0 0.0 0.0 0.0 0.000161577 0.0 0.0 0.569979; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.821433 0.0 0.220619; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.356835 0.788476; 0.784649 0.915336 0.84403 0.386559 0.170432 0.576514 0.569979 0.220619 0.788476 0.289765]
(U,Lambda) = eig(full(A)) = ([-1.65432,0.00600339,0.0274607,0.139748,0.323619,0.349033,0.706508,0.814624,0.957805,2.19952],
[-0.323167 -0.170932 0.617779 0.641391 -0.0258492 0.0212189 0.0655814 -0.0310043 -0.0280723 0.257184; -0.325912 -0.0259162 0.0464271 -0.407423 -0.737849 0.20414 0.128211 -0.0553523 -0.046265 0.342379; -0.29698 -0.0221968 0.0395521 -0.330709 0.637946 0.520171 0.125705 -0.0535409 -0.0442699 0.319681; -0.113587 -0.00463836 0.0079636 -0.0504034 0.00873439 -0.00834959 -0.963439 -0.136614 -0.0550439 0.185525; -0.0455891 -0.00154362 0.00263051 -0.0158892 0.00243802 -0.00227474 -0.0366354 0.034799 0.992785 0.0973307; -0.241691 -0.503324 -0.722612 0.357555 -0.0171485 0.0141922 0.046101 -0.0219281 -0.0199717 0.186379; -0.241229 0.846049 -0.301613 0.313554 -0.0161273 0.0133969 0.0445606 -0.0212597 -0.0194201 0.182945; -0.0623977 -0.00234607 0.00401399 -0.0248518 0.00405599 -0.00382952 -0.106008 0.984195 -0.0527853 0.113011; -0.274521 -0.0194883 0.034581 -0.278903 0.217253 -0.82871 0.124519 -0.0523229 -0.0428086 0.302061; 0.700218 0.00867129 -0.0144457 0.0767889 -0.0091521 0.00819996 0.0552217 -0.0303786 -0.0326284 0.705922])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:350 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:348 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:340 [inlined]
 in macro expansion at ./multidimensional.jl:298 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:291
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
