>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (872.41015625 MB free)
Uptime: 3609.0 sec
Load Avg:  0.9501953125  0.943359375  0.88818359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     131713 s         66 s      25651 s     161392 s          5 s
#2  3499 MHz      61242 s         82 s      19439 s     261945 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.00185848 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0209512; 0.0 0.787425 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.954623; 0.0 0.0 0.101468 0.0 0.0 0.0 0.0 0.0 0.0 0.458758; 0.0 0.0 0.0 0.0712065 0.0 0.0 0.0 0.0 0.0 0.925536; 0.0 0.0 0.0 0.0 0.317867 0.0 0.0 0.0 0.0 0.546442; 0.0 0.0 0.0 0.0 0.0 0.709891 0.0 0.0 0.0 0.394456; 0.0 0.0 0.0 0.0 0.0 0.0 0.999534 0.0 0.0 0.158606; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.493379 0.0 0.293154; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.953774 0.412153; 0.0209512 0.954623 0.458758 0.925536 0.546442 0.394456 0.158606 0.293154 0.412153 0.768351]
(U,Lambda) = eig(full(A)) = ([-1.0856,0.00188523,0.0951192,0.246842,0.447267,0.549895,0.722746,0.933364,0.997104,2.29613],
[-0.0126202 0.999832 -0.00273852 -0.00840339 0.00532792 -0.00486951 0.000849687 -0.00104513 0.000318264 -0.00664076; -0.333854 -0.00155151 0.0168089 0.173521 -0.317876 0.511917 -0.431505 -0.303954 0.0688316 -0.460131; -0.25315 -0.00588155 0.880839 -0.310084 0.150268 -0.13031 0.0215882 -0.0256249 0.00774394 -0.152009; -0.524085 -0.0170459 -0.471815 -0.517802 0.278768 -0.246278 0.0415308 -0.0498831 0.0151126 -0.302505; -0.255042 -0.00220788 0.0299046 0.755992 0.478319 -0.299978 0.0394581 -0.0412539 0.0121628 -0.20087; -0.143908 -0.000711302 0.00782151 0.0837055 -0.170126 0.314033 0.897108 -0.0820202 0.0207637 -0.180836; -0.0498259 -0.000202971 0.00213776 0.0207055 -0.0325296 0.0449307 -0.016753 0.11138 -0.986614 -0.0889548; -0.121616 -0.000761501 0.00897296 0.116841 -0.720083 -0.660712 0.0373666 -0.0309603 0.00879859 -0.118254; -0.132382 -0.000552795 0.00585121 0.0572879 -0.092168 0.129985 -0.052157 0.938357 0.143808 -0.223277; 0.65504 0.00127671 -0.0121901 -0.0982613 0.113268 -0.127376 0.029236 -0.0464672 0.0151185 -0.7272])
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:343 [inlined]
 in macro expansion at ./cartesian.jl:64 [inlined]
 in macro expansion at ./multidimensional.jl:341 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:333 [inlined]
 in macro expansion at ./multidimensional.jl:291 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:284
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl, in expression starting on line 218
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
