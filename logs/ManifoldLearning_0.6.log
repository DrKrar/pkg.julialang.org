>>> 'Pkg.add("ManifoldLearning")' log
INFO: Cloning cache of ManifoldLearning from https://github.com/wildart/ManifoldLearning.jl.git
INFO: Cloning cache of MultivariateStats from https://github.com/JuliaStats/MultivariateStats.jl.git
INFO: Installing ManifoldLearning v0.1.0
INFO: Installing MultivariateStats v0.3.1
INFO: Installing StatsBase v0.11.1
INFO: Package database updated

>>> 'Pkg.test("ManifoldLearning")' log
Julia Version 0.6.0-dev.1836
Commit 1539061 (2017-01-01 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (634.08984375 MB free)
Uptime: 1034.0 sec
Load Avg:  1.06494140625  0.89501953125  0.49658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz      33412 s        116 s       5247 s      55132 s          1 s
#2  3498 MHz       8887 s         41 s       2703 s      89377 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ManifoldLearning              0.1.0
3 additional packages:
 - Compat                        0.10.0
 - MultivariateStats             0.3.1
 - StatsBase                     0.11.1
INFO: Testing ManifoldLearning
Running tests:
 * utils.jl
WARNING: Method definition dump(IO, ManifoldLearning.Isomap) in module ManifoldLearning at /home/vagrant/.julia/v0.6/ManifoldLearning/src/isomap.jl:29 overwritten at /home/vagrant/.julia/v0.6/ManifoldLearning/src/lem.jl:32.
 * isomap.jl
WARNING: cos{T <: Number}(x::AbstractArray{T}) is deprecated, use cos.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] cos(::Array{Float64,2}) at ./deprecated.jl:50
 [3] swiss_roll(::Int64, ::Float64) at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:149
 [4] swiss_roll() at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:147
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] macro expansion; at /home/vagrant/.julia/v0.6/ManifoldLearning/test/runtests.jl:13 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:298
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ManifoldLearning/test/isomap.jl, in expression starting on line 7
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::Array{Float64,2}) at ./deprecated.jl:50
 [3] swiss_roll(::Int64, ::Float64) at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:149
 [4] swiss_roll() at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:147
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] macro expansion; at /home/vagrant/.julia/v0.6/ManifoldLearning/test/runtests.jl:13 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:298
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ManifoldLearning/test/isomap.jl, in expression starting on line 7
WARNING: round{T <: Real}(x::AbstractArray{T}) is deprecated, use round.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Array{Float64,2}) at ./deprecated.jl:50
 [3] swiss_roll(::Int64, ::Float64) at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:150
 [4] swiss_roll() at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:147
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] macro expansion; at /home/vagrant/.julia/v0.6/ManifoldLearning/test/runtests.jl:13 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:298
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ManifoldLearning/test/isomap.jl, in expression starting on line 7
WARNING: round{T <: Real}(x::AbstractArray{T}) is deprecated, use round.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Array{Float64,2}) at ./deprecated.jl:50
 [3] swiss_roll(::Int64, ::Float64) at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:150
 [4] swiss_roll() at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:147
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] macro expansion; at /home/vagrant/.julia/v0.6/ManifoldLearning/test/runtests.jl:13 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:298
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ManifoldLearning/test/isomap.jl, in expression starting on line 7
ERROR: LoadError: LoadError: UndefVarError: int not defined
Stacktrace:
 [1] swiss_roll(::Int64, ::Float64) at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:150
 [2] swiss_roll() at /home/vagrant/.julia/v0.6/ManifoldLearning/src/utils.jl:147
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion; at /home/vagrant/.julia/v0.6/ManifoldLearning/test/runtests.jl:13 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ManifoldLearning/test/isomap.jl, in expression starting on line 7
while loading /home/vagrant/.julia/v0.6/ManifoldLearning/test/runtests.jl, in expression starting on line 11
==========================[ ERROR: ManifoldLearning ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ManifoldLearning/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ManifoldLearning had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
