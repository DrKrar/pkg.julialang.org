>>> 'Pkg.add("CollisionDetection")' log
INFO: Cloning cache of CollisionDetection from https://github.com/krcools/CollisionDetection.jl.git
INFO: Installing CollisionDetection v0.0.1
INFO: Package database updated

>>> 'Pkg.test("CollisionDetection")' log
Julia Version 0.6.0-pre.alpha.146
Commit c399558 (2017-03-15 15:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1083.796875 MB free)
Uptime: 11769.0 sec
Load Avg:  1.1689453125  1.59033203125  1.283203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     549133 s       4189 s      54630 s     453963 s         16 s
#2  3499 MHz     212762 s       2832 s      28335 s     901961 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CollisionDetection            0.0.1
 - JSON                          0.8.3
1 additional packages:
 - Compat                        0.20.0
INFO: Computing test dependencies for CollisionDetection...
INFO: Installing BinDeps v0.4.7
INFO: Installing Blosc v0.2.0
INFO: Installing FileIO v0.3.0
INFO: Installing HDF5 v0.7.3
INFO: Installing JLD v0.6.9
INFO: Installing LegacyStrings v0.2.0
INFO: Installing SHA v0.3.2
INFO: Installing StaticArrays v0.3.0
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building HDF5
INFO: Testing CollisionDetection
Adding 175 contributions at level: 0
Adding 6 contributions at level: 1
Adding 4 contributions at level: 1
Adding 3 contributions at level: 1
Adding 3 contributions at level: 1
Adding 2 contributions at level: 1
Adding 3 contributions at level: 1
Adding 1 contributions at level: 1
Adding 3 contributions at level: 1
Testing allways true iterator
Testing allways false iterator
Testing query for box in sector [7,0]
sz = 181
Testing allways true iterator [2D]
Testing allways false iterator [2D]
Testing query for box in sector [7,0], [2D]
sz = 34449
ERROR: LoadError: LoadError: MethodError: First argument to `convert` must be a Type, got V
Stacktrace:
 [1] setindex!(::Dict{Int64,Type}, ::Type, ::Int64) at ./dict.jl:420
 [2] setindex!(::Dict{Int64,Type}, ::Type{T} where T, ::UInt64) at ./dict.jl:416
 [3] jldatatype(::JLD.JldFile, ::HDF5.HDF5Datatype) at /home/vagrant/.julia/v0.6/JLD/src/jld_types.jl:754
 [4] read_array(::JLD.JldDataset, ::HDF5.HDF5Datatype, ::Int32, ::Int32, ::Tuple{Int64}) at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:424
 [5] read_array(::JLD.JldDataset, ::HDF5.HDF5Datatype, ::Int32, ::Int32) at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:421
 [6] read(::JLD.JldDataset) at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:387
 [7] read(::JLD.JldFile, ::String) at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:361
 [8] collect(::Base.Generator{Array{String,1},JLD.##38#40{JLD.JldFile}}) at ./array.jl:418
 [9] (::JLD.##37#39)(::JLD.JldFile) at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:1253
 [10] #jldopen#11(::Array{Any,1}, ::Function, ::JLD.##37#39, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:260
 [11] load(::FileIO.File{FileIO.DataFormat{:JLD}}) at /home/vagrant/.julia/v0.6/JLD/src/JLD.jl:1252
 [12] #load#13(::Array{Any,1}, ::Function, ::String) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:45
 [13] load(::String) at /home/vagrant/.julia/v0.6/FileIO/src/loadsave.jl:45
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:539
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:305
 [19] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/CollisionDetection/test/test_searcheq.jl, in expression starting on line 7
while loading /home/vagrant/.julia/v0.6/CollisionDetection/test/runtests.jl, in expression starting on line 9
=========================[ ERROR: CollisionDetection ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/CollisionDetection/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.4.7
INFO: Removing Blosc v0.2.0
INFO: Removing FileIO v0.3.0
INFO: Removing HDF5 v0.7.3
INFO: Removing JLD v0.6.9
INFO: Removing LegacyStrings v0.2.0
INFO: Removing SHA v0.3.2
INFO: Removing StaticArrays v0.3.0
INFO: Removing URIParser v0.1.8
ERROR: CollisionDetection had test errors

>>> End of log
