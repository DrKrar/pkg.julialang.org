>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from git://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.4.6
INFO: Installing RecipesBase v0.0.6
INFO: Installing ValueHistories v0.0.6
INFO: Package database updated

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (581.02734375 MB free)
Uptime: 32505.0 sec
Load Avg:  0.9677734375  1.01171875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1576780 s       7137 s     155027 s    1194874 s        106 s
#2  3500 MHz    1042337 s        460 s     141163 s    1949304 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - ValueHistories                0.0.6
3 additional packages:
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - RecipesBase                   0.0.6
INFO: Computing test dependencies for ValueHistories...
INFO: Installing BaseTestNext v0.2.2
INFO: Testing ValueHistories
100 elements {Int64,Float64}
VectorUnivalueHistory
  * types: Int64, Float64
  * length: 100
VectorUnivalueHistory
  * types: UInt8, ASCIIString
  * length: 100
100 elements {Int64,Float64}
QueueUnivalueHistory
    types: Int64, Float64
    length: 100
QueueUnivalueHistory
    types: UInt8, ASCIIString
    length: 100
Test Summary:               | Pass  Total
[->] tst_stat_uv_history.jl | 1028   1028
DynMultivalueHistory{ValueHistories.VectorUnivalueHistory{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
DynMultivalueHistory{ValueHistories.VectorUnivalueHistory{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
Test Summary:              | Pass  Total
[->] tst_dyn_mv_history.jl |  526    526
   --> Baseline: 100 loops that accumulates a Float64
  0.002496 seconds (2.01 k allocations: 103.258 KB)
  0.000003 seconds (5 allocations: 176 bytes)
   --> VectorUnivalueHistory: 100 loops tracking accumulator as Float64
  0.002895 seconds (2.18 k allocations: 113.015 KB)
  0.000007 seconds (13 allocations: 4.391 KB)
   --> VectorUnivalueHistory: Converting result into arrays
  0.000022 seconds (3 allocations: 96 bytes)
  0.000015 seconds (3 allocations: 96 bytes)
   --> QueueUnivalueHistory: 100 loops tracking accumulator as Float64
  0.004190 seconds (2.12 k allocations: 106.655 KB)
  0.000004 seconds (1 allocation: 16 bytes)
   --> QueueUnivalueHistory: Converting result into arrays
  0.000169 seconds (908 allocations: 25.344 KB)
  0.000142 seconds (908 allocations: 25.344 KB)
   --> DynMultivalueHistory: 100 loops tracking accumulator as Float64 and String
  0.037918 seconds (59.07 k allocations: 2.357 MB)
  0.000132 seconds (1.23 k allocations: 51.172 KB)
   --> DynMultivalueHistory: Converting result into arrays
  0.009506 seconds (3.66 k allocations: 156.823 KB)
  0.000136 seconds (411 allocations: 14.563 KB)
Test Summary:      | 
[->] bm_history.jl | No tests
INFO: ValueHistories tests passed
INFO: Removing BaseTestNext v0.2.2

>>> End of log
