>>> 'Pkg.add("Augur")' log
INFO: Cloning cache of Augur from git://github.com/AugurProject/Augur.jl.git
INFO: Cloning cache of AutoHashEquals from git://github.com/andrewcooke/AutoHashEquals.jl.git
INFO: Cloning cache of Clustering from git://github.com/JuliaStats/Clustering.jl.git
INFO: Cloning cache of Compose from git://github.com/GiovineItalia/Compose.jl.git
INFO: Cloning cache of Conda from git://github.com/JuliaPy/Conda.jl.git
INFO: Cloning cache of Contour from git://github.com/tlycken/Contour.jl.git
INFO: Cloning cache of DSP from git://github.com/JuliaDSP/DSP.jl.git
INFO: Cloning cache of DiffBase from https://github.com/JuliaDiff/DiffBase.jl.git
INFO: Cloning cache of Distances from git://github.com/JuliaStats/Distances.jl.git
INFO: Cloning cache of Gadfly from git://github.com/GiovineItalia/Gadfly.jl.git
INFO: Cloning cache of Hexagons from git://github.com/GiovineItalia/Hexagons.jl.git
INFO: Cloning cache of KernelDensity from git://github.com/JuliaStats/KernelDensity.jl.git
INFO: Cloning cache of LaTeXStrings from git://github.com/stevengj/LaTeXStrings.jl.git
INFO: Cloning cache of LightGraphs from git://github.com/JuliaGraphs/LightGraphs.jl.git
INFO: Cloning cache of LineSearches from git://github.com/anriseth/LineSearches.jl.git
INFO: Cloning cache of Loess from git://github.com/JuliaStats/Loess.jl.git
INFO: Cloning cache of NearestNeighbors from git://github.com/KristofferC/NearestNeighbors.jl.git
INFO: Cloning cache of Optim from git://github.com/JuliaNLSolvers/Optim.jl.git
INFO: Cloning cache of ParserCombinator from git://github.com/andrewcooke/ParserCombinator.jl.git
INFO: Cloning cache of Polynomials from git://github.com/Keno/Polynomials.jl.git
INFO: Cloning cache of PositiveFactorizations from git://github.com/timholy/PositiveFactorizations.jl.git
INFO: Cloning cache of Primes from git://github.com/JuliaMath/Primes.jl.git
INFO: Cloning cache of PyCall from git://github.com/JuliaPy/PyCall.jl.git
INFO: Cloning cache of PyPlot from git://github.com/JuliaPy/PyPlot.jl.git
INFO: Cloning cache of QuantEcon from git://github.com/QuantEcon/QuantEcon.jl.git
INFO: Installing Augur v0.1.1
INFO: Installing AutoHashEquals v0.0.10
INFO: Installing AxisAlgorithms v0.1.6
INFO: Installing BinDeps v0.4.7
INFO: Installing Blosc v0.2.0
INFO: Installing Calculus v0.2.2
INFO: Installing Clustering v0.7.0
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing Compose v0.4.5
INFO: Installing Conda v0.5.1
INFO: Installing Contour v0.2.0
INFO: Installing DSP v0.1.1
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.8.5
INFO: Installing DataStructures v0.5.3
INFO: Installing Dates v0.4.4
INFO: Installing DiffBase v0.0.5
INFO: Installing Distances v0.3.2
INFO: Installing Distributions v0.11.1
INFO: Installing DualNumbers v0.3.0
INFO: Installing FileIO v0.2.2
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing ForwardDiff v0.3.4
INFO: Installing GZip v0.2.20
INFO: Installing Gadfly v0.5.3
INFO: Installing HDF5 v0.7.3
INFO: Installing Hexagons v0.0.4
INFO: Installing Hiccup v0.0.3
INFO: Installing Interpolations v0.3.8
INFO: Installing Iterators v0.3.0
INFO: Installing JLD v0.6.9
INFO: Installing Juno v0.2.7
INFO: Installing KernelDensity v0.3.2
INFO: Installing LaTeXStrings v0.2.0
INFO: Installing Lazy v0.11.5
INFO: Installing LegacyStrings v0.2.0
INFO: Installing LightGraphs v0.6.3
INFO: Installing LightXML v0.4.0
INFO: Installing LineSearches v0.1.5
INFO: Installing Loess v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Measures v0.0.3
INFO: Installing Media v0.2.5
INFO: Installing NaNMath v0.2.2
INFO: Installing NearestNeighbors v0.0.5
INFO: Installing Optim v0.7.8
INFO: Installing PDMats v0.5.6
INFO: Installing ParserCombinator v1.7.11
INFO: Installing Polynomials v0.1.3
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing Primes v0.1.2
INFO: Installing PyCall v1.11.0
INFO: Installing PyPlot v2.3.1
INFO: Installing QuantEcon v0.9.0
INFO: Installing Ratios v0.0.4
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.2
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing StatsBase v0.12.0
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Installing WoodburyMatrices v0.2.2
INFO: Building Rmath
INFO: Building Blosc
INFO: Building HDF5
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
INFO: Downloading miniconda installer ...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 27.4M  100 27.4M    0     0  46.6M      0 --:--:-- --:--:-- --:--:-- 46.6M
INFO: Installing miniconda ...
PREFIX=/home/vagrant/.julia/v0.4/Conda/deps/usr
installing: python-2.7.13-0 ...
installing: cffi-1.9.1-py27_0 ...
installing: conda-env-2.6.0-0 ...
installing: cryptography-1.7.1-py27_0 ...
installing: enum34-1.1.6-py27_0 ...
installing: idna-2.2-py27_0 ...
installing: ipaddress-1.0.18-py27_0 ...
installing: libffi-3.2.1-1 ...
installing: openssl-1.0.2k-0 ...
installing: pyasn1-0.1.9-py27_0 ...
installing: pycosat-0.6.1-py27_1 ...
installing: pycparser-2.17-py27_0 ...
installing: pyopenssl-16.2.0-py27_0 ...
installing: readline-6.2-2 ...
installing: requests-2.12.4-py27_0 ...
installing: ruamel_yaml-0.11.14-py27_1 ...
installing: setuptools-27.2.0-py27_0 ...
installing: six-1.10.0-py27_0 ...
installing: sqlite-3.13.0-0 ...
installing: tk-8.5.18-0 ...
installing: yaml-0.1.6-0 ...
installing: zlib-1.2.8-3 ...
installing: conda-4.3.11-py27_0 ...
installing: pip-9.0.1-py27_1 ...
installing: wheel-0.29.0-py27_0 ...
Python 2.7.13 :: Continuum Analytics, Inc.
creating default environment...
using -f (force) option
installation finished.
Warning: 'defaults' already in 'channels' list, moving to the top
Fetching package metadata .........
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.4/Conda/deps/usr:

The following packages will be UPDATED:

    conda: 4.3.11-py27_0 --> 4.3.14-py27_0

conda-4.3.14-p   0% |                              | ETA:  --:--:--   0.00  B/sconda-4.3.14-p   3% |#                              | ETA:  0:00:00   9.63 MB/sconda-4.3.14-p   6% |##                             | ETA:  0:00:00  10.92 MB/sconda-4.3.14-p   9% |###                            | ETA:  0:00:00  11.82 MB/sconda-4.3.14-p  13% |####                           | ETA:  0:00:00 961.52 kB/sconda-4.3.14-p  16% |#####                          | ETA:  0:00:00 603.03 kB/sconda-4.3.14-p  19% |######                         | ETA:  0:00:00 719.86 kB/sconda-4.3.14-p  23% |#######                        | ETA:  0:00:00 836.46 kB/sconda-4.3.14-p  26% |########                       | ETA:  0:00:00 951.87 kB/sconda-4.3.14-p  29% |#########                      | ETA:  0:00:00 360.97 kB/sconda-4.3.14-p  33% |##########                     | ETA:  0:00:00 400.57 kB/sconda-4.3.14-p  36% |###########                    | ETA:  0:00:00 437.28 kB/sconda-4.3.14-p  39% |############                   | ETA:  0:00:00 476.44 kB/sconda-4.3.14-p  43% |#############                  | ETA:  0:00:00 515.57 kB/sconda-4.3.14-p  46% |##############                 | ETA:  0:00:00 498.54 kB/sconda-4.3.14-p  49% |###############                | ETA:  0:00:00 533.01 kB/sconda-4.3.14-p  53% |################               | ETA:  0:00:00 567.45 kB/sconda-4.3.14-p  56% |#################              | ETA:  0:00:00 602.25 kB/sconda-4.3.14-p  59% |##################             | ETA:  0:00:00 637.14 kB/sconda-4.3.14-p  63% |###################            | ETA:  0:00:00 672.04 kB/sconda-4.3.14-p  66% |####################           | ETA:  0:00:00 707.10 kB/sconda-4.3.14-p  69% |#####################          | ETA:  0:00:00 741.82 kB/sconda-4.3.14-p  73% |######################         | ETA:  0:00:00 776.51 kB/sconda-4.3.14-p  76% |#######################        | ETA:  0:00:00 811.20 kB/sconda-4.3.14-p  79% |########################       | ETA:  0:00:00 845.84 kB/sconda-4.3.14-p  83% |#########################      | ETA:  0:00:00 879.96 kB/sconda-4.3.14-p  86% |##########################     | ETA:  0:00:00 914.44 kB/sconda-4.3.14-p  89% |###########################    | ETA:  0:00:00 948.89 kB/sconda-4.3.14-p  93% |############################   | ETA:  0:00:00 983.32 kB/sconda-4.3.14-p  96% |#############################  | ETA:  0:00:00   1.02 MB/sconda-4.3.14-p  99% |############################## | ETA:  0:00:00   1.05 MB/sconda-4.3.14-p 100% |###############################| Time: 0:00:00   1.05 MB/s
Fetching package metadata .........
Solving package specifications: .

Package plan for installation in environment /home/vagrant/.julia/v0.4/Conda/deps/usr:

The following NEW packages will be INSTALLED:

    mkl:   2017.0.1-0   
    numpy: 1.12.0-py27_0

mkl-2017.0.1-0   0% |                              | ETA:  --:--:--   0.00  B/smkl-2017.0.1-0   1% |                               | ETA:  0:00:05  24.78 MB/smkl-2017.0.1-0   2% |                               | ETA:  0:00:04  27.17 MB/smkl-2017.0.1-0   3% |                               | ETA:  0:00:04  28.46 MB/smkl-2017.0.1-0   4% |#                              | ETA:  0:00:04  28.80 MB/smkl-2017.0.1-0   5% |#                              | ETA:  0:00:04  29.25 MB/smkl-2017.0.1-0   6% |#                              | ETA:  0:00:04  29.54 MB/smkl-2017.0.1-0   7% |##                             | ETA:  0:00:04  29.59 MB/smkl-2017.0.1-0   8% |##                             | ETA:  0:00:04  29.66 MB/smkl-2017.0.1-0   9% |##                             | ETA:  0:00:04  29.69 MB/smkl-2017.0.1-0  10% |###                            | ETA:  0:00:04  29.74 MB/smkl-2017.0.1-0  11% |###                            | ETA:  0:00:04  29.63 MB/smkl-2017.0.1-0  12% |###                            | ETA:  0:00:03  29.76 MB/smkl-2017.0.1-0  13% |####                           | ETA:  0:00:03  29.85 MB/smkl-2017.0.1-0  14% |####                           | ETA:  0:00:03  29.92 MB/smkl-2017.0.1-0  15% |####                           | ETA:  0:00:03  29.91 MB/smkl-2017.0.1-0  16% |#####                          | ETA:  0:00:03  30.08 MB/smkl-2017.0.1-0  17% |#####                          | ETA:  0:00:03  30.12 MB/smkl-2017.0.1-0  18% |#####                          | ETA:  0:00:03  30.16 MB/smkl-2017.0.1-0  19% |#####                          | ETA:  0:00:03  30.24 MB/smkl-2017.0.1-0  20% |######                         | ETA:  0:00:03  30.51 MB/smkl-2017.0.1-0  21% |######                         | ETA:  0:00:03  30.59 MB/smkl-2017.0.1-0  22% |######                         | ETA:  0:00:03  30.64 MB/smkl-2017.0.1-0  23% |#######                        | ETA:  0:00:03  30.74 MB/smkl-2017.0.1-0  24% |#######                        | ETA:  0:00:03  30.80 MB/smkl-2017.0.1-0  25% |#######                        | ETA:  0:00:03  30.85 MB/smkl-2017.0.1-0  26% |########                       | ETA:  0:00:03  30.92 MB/smkl-2017.0.1-0  27% |########                       | ETA:  0:00:03  30.98 MB/smkl-2017.0.1-0  28% |########                       | ETA:  0:00:03  31.03 MB/smkl-2017.0.1-0  29% |#########                      | ETA:  0:00:03  31.01 MB/smkl-2017.0.1-0  30% |#########                      | ETA:  0:00:03  30.98 MB/smkl-2017.0.1-0  31% |#########                      | ETA:  0:00:02  31.02 MB/smkl-2017.0.1-0  32% |##########                     | ETA:  0:00:02  31.08 MB/smkl-2017.0.1-0  33% |##########                     | ETA:  0:00:02  31.12 MB/smkl-2017.0.1-0  34% |##########                     | ETA:  0:00:02  31.15 MB/smkl-2017.0.1-0  35% |##########                     | ETA:  0:00:02  31.16 MB/smkl-2017.0.1-0  36% |###########                    | ETA:  0:00:02  31.28 MB/smkl-2017.0.1-0  37% |###########                    | ETA:  0:00:02  31.11 MB/smkl-2017.0.1-0  38% |###########                    | ETA:  0:00:02  30.99 MB/smkl-2017.0.1-0  39% |############                   | ETA:  0:00:02  31.11 MB/smkl-2017.0.1-0  40% |############                   | ETA:  0:00:02  30.99 MB/smkl-2017.0.1-0  41% |############                   | ETA:  0:00:02  30.97 MB/smkl-2017.0.1-0  42% |#############                  | ETA:  0:00:02  30.96 MB/smkl-2017.0.1-0  43% |#############                  | ETA:  0:00:02  30.95 MB/smkl-2017.0.1-0  44% |#############                  | ETA:  0:00:02  30.97 MB/smkl-2017.0.1-0  45% |##############                 | ETA:  0:00:02  30.68 MB/smkl-2017.0.1-0  46% |##############                 | ETA:  0:00:02  29.55 MB/smkl-2017.0.1-0  47% |##############                 | ETA:  0:00:02  29.40 MB/smkl-2017.0.1-0  48% |###############                | ETA:  0:00:02  29.44 MB/smkl-2017.0.1-0  49% |###############                | ETA:  0:00:02  29.46 MB/smkl-2017.0.1-0  50% |###############                | ETA:  0:00:02  29.54 MB/smkl-2017.0.1-0  51% |###############                | ETA:  0:00:02  29.61 MB/smkl-2017.0.1-0  52% |################               | ETA:  0:00:02  29.62 MB/smkl-2017.0.1-0  53% |################               | ETA:  0:00:02  29.68 MB/smkl-2017.0.1-0  54% |################               | ETA:  0:00:02  29.73 MB/smkl-2017.0.1-0  55% |#################              | ETA:  0:00:02  29.78 MB/smkl-2017.0.1-0  56% |#################              | ETA:  0:00:01  29.83 MB/smkl-2017.0.1-0  57% |#################              | ETA:  0:00:01  29.87 MB/smkl-2017.0.1-0  58% |##################             | ETA:  0:00:01  29.90 MB/smkl-2017.0.1-0  59% |##################             | ETA:  0:00:01  29.96 MB/smkl-2017.0.1-0  60% |##################             | ETA:  0:00:01  30.02 MB/smkl-2017.0.1-0  61% |###################            | ETA:  0:00:01  30.02 MB/smkl-2017.0.1-0  62% |###################            | ETA:  0:00:01  30.05 MB/smkl-2017.0.1-0  63% |###################            | ETA:  0:00:01  30.08 MB/smkl-2017.0.1-0  64% |####################           | ETA:  0:00:01  30.12 MB/smkl-2017.0.1-0  65% |####################           | ETA:  0:00:01  30.13 MB/smkl-2017.0.1-0  66% |####################           | ETA:  0:00:01  30.15 MB/smkl-2017.0.1-0  67% |#####################          | ETA:  0:00:01  30.12 MB/smkl-2017.0.1-0  68% |#####################          | ETA:  0:00:01  30.10 MB/smkl-2017.0.1-0  69% |#####################          | ETA:  0:00:01  30.11 MB/smkl-2017.0.1-0  70% |#####################          | ETA:  0:00:01  30.14 MB/smkl-2017.0.1-0  71% |######################         | ETA:  0:00:01  30.16 MB/smkl-2017.0.1-0  72% |######################         | ETA:  0:00:01  30.16 MB/smkl-2017.0.1-0  73% |######################         | ETA:  0:00:01  30.16 MB/smkl-2017.0.1-0  74% |#######################        | ETA:  0:00:01  30.19 MB/smkl-2017.0.1-0  75% |#######################        | ETA:  0:00:01  30.14 MB/smkl-2017.0.1-0  76% |#######################        | ETA:  0:00:01  30.16 MB/smkl-2017.0.1-0  77% |########################       | ETA:  0:00:00  30.18 MB/smkl-2017.0.1-0  78% |########################       | ETA:  0:00:00  30.18 MB/smkl-2017.0.1-0  79% |########################       | ETA:  0:00:00  30.19 MB/smkl-2017.0.1-0  80% |#########################      | ETA:  0:00:01  22.09 MB/smkl-2017.0.1-0  81% |#########################      | ETA:  0:00:01  22.25 MB/smkl-2017.0.1-0  82% |#########################      | ETA:  0:00:01  22.41 MB/smkl-2017.0.1-0  83% |#########################      | ETA:  0:00:00  22.57 MB/smkl-2017.0.1-0  84% |##########################     | ETA:  0:00:00  22.72 MB/smkl-2017.0.1-0  85% |##########################     | ETA:  0:00:00  22.86 MB/smkl-2017.0.1-0  86% |##########################     | ETA:  0:00:00  23.01 MB/smkl-2017.0.1-0  87% |###########################    | ETA:  0:00:00  23.15 MB/smkl-2017.0.1-0  88% |###########################    | ETA:  0:00:00  23.31 MB/smkl-2017.0.1-0  89% |###########################    | ETA:  0:00:00  23.47 MB/smkl-2017.0.1-0  90% |############################   | ETA:  0:00:00  23.62 MB/smkl-2017.0.1-0  91% |############################   | ETA:  0:00:00  23.79 MB/smkl-2017.0.1-0  92% |############################   | ETA:  0:00:00  23.94 MB/smkl-2017.0.1-0  93% |#############################  | ETA:  0:00:00  24.10 MB/smkl-2017.0.1-0  94% |#############################  | ETA:  0:00:00  24.24 MB/smkl-2017.0.1-0  95% |#############################  | ETA:  0:00:00  24.40 MB/smkl-2017.0.1-0  96% |############################## | ETA:  0:00:00  24.54 MB/smkl-2017.0.1-0  97% |############################## | ETA:  0:00:00  24.69 MB/smkl-2017.0.1-0  98% |############################## | ETA:  0:00:00  24.84 MB/smkl-2017.0.1-0  99% |############################## | ETA:  0:00:00  25.00 MB/smkl-2017.0.1-0 100% |###############################| Time: 0:00:05  25.00 MB/s
numpy-1.12.0-p   0% |                              | ETA:  --:--:--   0.00  B/snumpy-1.12.0-p   0% |                               | Time: 0:00:00  28.70 MB/snumpy-1.12.0-p   0% |                               | Time: 0:00:00  32.16 MB/snumpy-1.12.0-p   0% |                               | Time: 0:00:00  33.85 MB/snumpy-1.12.0-p   0% |                               | Time: 0:00:00  35.91 MB/snumpy-1.12.0-p   1% |                               | Time: 0:00:00  36.87 MB/snumpy-1.12.0-p   1% |                               | Time: 0:00:00  36.61 MB/snumpy-1.12.0-p   1% |                               | Time: 0:00:00  37.01 MB/snumpy-1.12.0-p   1% |                               | Time: 0:00:00  38.15 MB/snumpy-1.12.0-p   2% |                               | Time: 0:00:00  38.85 MB/snumpy-1.12.0-p   2% |                               | Time: 0:00:00  39.70 MB/snumpy-1.12.0-p   2% |                               | Time: 0:00:00  40.05 MB/snumpy-1.12.0-p   2% |                               | Time: 0:00:00  40.91 MB/snumpy-1.12.0-p   3% |                               | Time: 0:00:00  41.09 MB/snumpy-1.12.0-p   3% |#                              | Time: 0:00:00  40.99 MB/snumpy-1.12.0-p   3% |#                              | Time: 0:00:00  41.90 MB/snumpy-1.12.0-p   3% |#                              | Time: 0:00:00  42.87 MB/snumpy-1.12.0-p   4% |#                              | Time: 0:00:00  43.90 MB/snumpy-1.12.0-p   4% |#                              | Time: 0:00:00  44.88 MB/snumpy-1.12.0-p   4% |#                              | Time: 0:00:00  46.61 MB/snumpy-1.12.0-p   4% |#                              | Time: 0:00:00  47.08 MB/snumpy-1.12.0-p   4% |#                              | Time: 0:00:00  47.87 MB/snumpy-1.12.0-p   5% |#                              | Time: 0:00:00  48.64 MB/snumpy-1.12.0-p   5% |#                              | Time: 0:00:00  49.32 MB/snumpy-1.12.0-p   5% |#                              | Time: 0:00:00  49.97 MB/snumpy-1.12.0-p   5% |#                              | Time: 0:00:00  50.63 MB/snumpy-1.12.0-p   6% |#                              | Time: 0:00:00  49.81 MB/snumpy-1.12.0-p   6% |#                              | Time: 0:00:00  50.34 MB/snumpy-1.12.0-p   6% |##                             | Time: 0:00:00  50.90 MB/snumpy-1.12.0-p   6% |##                             | Time: 0:00:00  51.46 MB/snumpy-1.12.0-p   7% |##                             | Time: 0:00:00  51.99 MB/snumpy-1.12.0-p   7% |##                             | Time: 0:00:00  52.48 MB/snumpy-1.12.0-p   7% |##                             | Time: 0:00:00  52.95 MB/snumpy-1.12.0-p   7% |##                             | Time: 0:00:00  53.42 MB/snumpy-1.12.0-p   8% |##                             | Time: 0:00:00  53.86 MB/snumpy-1.12.0-p   8% |##                             | Time: 0:00:00  54.25 MB/snumpy-1.12.0-p   8% |##                             | Time: 0:00:00  55.18 MB/snumpy-1.12.0-p   8% |##                             | Time: 0:00:00  55.35 MB/snumpy-1.12.0-p   9% |##                             | Time: 0:00:00  55.71 MB/snumpy-1.12.0-p   9% |##                             | Time: 0:00:00  56.05 MB/snumpy-1.12.0-p   9% |##                             | Time: 0:00:01 434.57 kB/snumpy-1.12.0-p   9% |###                            | Time: 0:00:01 445.23 kB/snumpy-1.12.0-p   9% |###                            | Time: 0:00:01 455.98 kB/snumpy-1.12.0-p  10% |###                            | Time: 0:00:01 466.74 kB/snumpy-1.12.0-p  10% |###                            | Time: 0:00:01 477.49 kB/snumpy-1.12.0-p  10% |###                            | Time: 0:00:01 481.32 kB/snumpy-1.12.0-p  10% |###                            | Time: 0:00:03 248.48 kB/snumpy-1.12.0-p  11% |###                            | Time: 0:00:03 253.75 kB/snumpy-1.12.0-p  11% |###                            | Time: 0:00:03 259.03 kB/snumpy-1.12.0-p  11% |###                            | Time: 0:00:03 264.34 kB/snumpy-1.12.0-p  11% |###                            | Time: 0:00:03 240.85 kB/snumpy-1.12.0-p  12% |###                            | Time: 0:00:03 245.61 kB/snumpy-1.12.0-p  12% |###                            | Time: 0:00:03 240.96 kB/snumpy-1.12.0-p  12% |###                            | Time: 0:00:03 245.51 kB/snumpy-1.12.0-p  12% |###                            | Time: 0:00:03 250.10 kB/snumpy-1.12.0-p  13% |####                           | Time: 0:00:03 254.67 kB/snumpy-1.12.0-p  13% |####                           | Time: 0:00:03 259.23 kB/snumpy-1.12.0-p  13% |####                           | Time: 0:00:03 263.82 kB/snumpy-1.12.0-p  13% |####                           | Time: 0:00:03 268.38 kB/snumpy-1.12.0-p  13% |####                           | Time: 0:00:03 268.26 kB/snumpy-1.12.0-p  14% |####                           | Time: 0:00:03 272.78 kB/snumpy-1.12.0-p  14% |####                           | Time: 0:00:05 195.78 kB/snumpy-1.12.0-p  14% |####                           | Time: 0:00:05 198.93 kB/snumpy-1.12.0-p  14% |####                           | Time: 0:00:05 202.10 kB/snumpy-1.12.0-p  15% |####                           | Time: 0:00:05 205.26 kB/snumpy-1.12.0-p  15% |####                           | Time: 0:00:05 206.25 kB/snumpy-1.12.0-p  15% |####                           | Time: 0:00:05 200.17 kB/snumpy-1.12.0-p  15% |####                           | Time: 0:00:05 203.15 kB/snumpy-1.12.0-p  16% |####                           | Time: 0:00:05 206.16 kB/snumpy-1.12.0-p  16% |#####                          | Time: 0:00:05 209.17 kB/snumpy-1.12.0-p  16% |#####                          | Time: 0:00:05 212.19 kB/snumpy-1.12.0-p  16% |#####                          | Time: 0:00:05 215.21 kB/snumpy-1.12.0-p  17% |#####                          | Time: 0:00:05 212.89 kB/snumpy-1.12.0-p  17% |#####                          | Time: 0:00:05 215.83 kB/snumpy-1.12.0-p  17% |#####                          | Time: 0:00:05 218.76 kB/snumpy-1.12.0-p  17% |#####                          | Time: 0:00:05 221.70 kB/snumpy-1.12.0-p  18% |#####                          | Time: 0:00:05 224.63 kB/snumpy-1.12.0-p  18% |#####                          | Time: 0:00:05 227.55 kB/snumpy-1.12.0-p  18% |#####                          | Time: 0:00:05 230.48 kB/snumpy-1.12.0-p  18% |#####                          | Time: 0:00:05 233.41 kB/snumpy-1.12.0-p  18% |#####                          | Time: 0:00:05 236.35 kB/snumpy-1.12.0-p  19% |#####                          | Time: 0:00:05 239.28 kB/snumpy-1.12.0-p  19% |######                         | Time: 0:00:05 242.21 kB/snumpy-1.12.0-p  19% |######                         | Time: 0:00:05 245.14 kB/snumpy-1.12.0-p  19% |######                         | Time: 0:00:05 248.07 kB/snumpy-1.12.0-p  20% |######                         | Time: 0:00:05 250.99 kB/snumpy-1.12.0-p  20% |######                         | Time: 0:00:05 253.92 kB/snumpy-1.12.0-p  20% |######                         | Time: 0:00:05 256.85 kB/snumpy-1.12.0-p  20% |######                         | Time: 0:00:05 259.77 kB/snumpy-1.12.0-p  21% |######                         | Time: 0:00:05 262.70 kB/snumpy-1.12.0-p  21% |######                         | Time: 0:00:05 265.63 kB/snumpy-1.12.0-p  21% |######                         | Time: 0:00:05 268.54 kB/snumpy-1.12.0-p  21% |######                         | Time: 0:00:05 271.46 kB/snumpy-1.12.0-p  22% |######                         | Time: 0:00:05 274.39 kB/snumpy-1.12.0-p  22% |######                         | Time: 0:00:05 277.31 kB/snumpy-1.12.0-p  22% |######                         | Time: 0:00:05 280.23 kB/snumpy-1.12.0-p  22% |#######                        | Time: 0:00:05 283.15 kB/snumpy-1.12.0-p  22% |#######                        | Time: 0:00:05 286.07 kB/snumpy-1.12.0-p  23% |#######                        | Time: 0:00:05 288.99 kB/snumpy-1.12.0-p  23% |#######                        | Time: 0:00:05 291.91 kB/snumpy-1.12.0-p  23% |#######                        | Time: 0:00:05 294.83 kB/snumpy-1.12.0-p  23% |#######                        | Time: 0:00:05 297.75 kB/snumpy-1.12.0-p  24% |#######                        | Time: 0:00:05 300.64 kB/snumpy-1.12.0-p  24% |#######                        | Time: 0:00:05 303.55 kB/snumpy-1.12.0-p  24% |#######                        | Time: 0:00:05 306.45 kB/snumpy-1.12.0-p  24% |#######                        | Time: 0:00:05 309.36 kB/snumpy-1.12.0-p  25% |#######                        | Time: 0:00:05 312.27 kB/snumpy-1.12.0-p  25% |#######                        | Time: 0:00:05 315.18 kB/snumpy-1.12.0-p  25% |#######                        | Time: 0:00:05 318.09 kB/snumpy-1.12.0-p  25% |########                       | Time: 0:00:05 321.00 kB/snumpy-1.12.0-p  26% |########                       | Time: 0:00:05 323.90 kB/snumpy-1.12.0-p  26% |########                       | Time: 0:00:05 326.81 kB/snumpy-1.12.0-p  26% |########                       | Time: 0:00:05 329.72 kB/snumpy-1.12.0-p  26% |########                       | Time: 0:00:05 332.63 kB/snumpy-1.12.0-p  27% |########                       | Time: 0:00:05 335.54 kB/snumpy-1.12.0-p  27% |########                       | Time: 0:00:05 338.45 kB/snumpy-1.12.0-p  27% |########                       | Time: 0:00:05 341.36 kB/snumpy-1.12.0-p  27% |########                       | Time: 0:00:05 344.26 kB/snumpy-1.12.0-p  27% |########                       | Time: 0:00:05 347.17 kB/snumpy-1.12.0-p  28% |########                       | Time: 0:00:05 350.07 kB/snumpy-1.12.0-p  28% |########                       | Time: 0:00:05 352.98 kB/snumpy-1.12.0-p  28% |########                       | Time: 0:00:05 355.88 kB/snumpy-1.12.0-p  28% |########                       | Time: 0:00:05 358.78 kB/snumpy-1.12.0-p  29% |#########                      | Time: 0:00:05 361.68 kB/snumpy-1.12.0-p  29% |#########                      | Time: 0:00:05 364.57 kB/snumpy-1.12.0-p  29% |#########                      | Time: 0:00:05 367.45 kB/snumpy-1.12.0-p  29% |#########                      | Time: 0:00:05 370.35 kB/snumpy-1.12.0-p  30% |#########                      | Time: 0:00:05 373.24 kB/snumpy-1.12.0-p  30% |#########                      | Time: 0:00:05 376.15 kB/snumpy-1.12.0-p  30% |#########                      | Time: 0:00:05 379.04 kB/snumpy-1.12.0-p  30% |#########                      | Time: 0:00:05 381.94 kB/snumpy-1.12.0-p  31% |#########                      | Time: 0:00:05 384.85 kB/snumpy-1.12.0-p  31% |#########                      | Time: 0:00:05 387.75 kB/snumpy-1.12.0-p  31% |#########                      | Time: 0:00:05 390.65 kB/snumpy-1.12.0-p  31% |#########                      | Time: 0:00:05 393.55 kB/snumpy-1.12.0-p  31% |#########                      | Time: 0:00:05 396.46 kB/snumpy-1.12.0-p  32% |#########                      | Time: 0:00:05 399.36 kB/snumpy-1.12.0-p  32% |##########                     | Time: 0:00:05 402.26 kB/snumpy-1.12.0-p  32% |##########                     | Time: 0:00:05 405.16 kB/snumpy-1.12.0-p  32% |##########                     | Time: 0:00:05 408.06 kB/snumpy-1.12.0-p  33% |##########                     | Time: 0:00:05 410.96 kB/snumpy-1.12.0-p  33% |##########                     | Time: 0:00:05 413.86 kB/snumpy-1.12.0-p  33% |##########                     | Time: 0:00:05 416.75 kB/snumpy-1.12.0-p  33% |##########                     | Time: 0:00:05 419.65 kB/snumpy-1.12.0-p  34% |##########                     | Time: 0:00:05 422.55 kB/snumpy-1.12.0-p  34% |##########                     | Time: 0:00:05 425.45 kB/snumpy-1.12.0-p  34% |##########                     | Time: 0:00:05 428.34 kB/snumpy-1.12.0-p  34% |##########                     | Time: 0:00:05 431.23 kB/snumpy-1.12.0-p  35% |##########                     | Time: 0:00:05 434.13 kB/snumpy-1.12.0-p  35% |##########                     | Time: 0:00:05 437.02 kB/snumpy-1.12.0-p  35% |###########                    | Time: 0:00:05 439.92 kB/snumpy-1.12.0-p  35% |###########                    | Time: 0:00:05 442.81 kB/snumpy-1.12.0-p  36% |###########                    | Time: 0:00:05 445.69 kB/snumpy-1.12.0-p  36% |###########                    | Time: 0:00:05 448.55 kB/snumpy-1.12.0-p  36% |###########                    | Time: 0:00:05 451.44 kB/snumpy-1.12.0-p  36% |###########                    | Time: 0:00:05 454.34 kB/snumpy-1.12.0-p  36% |###########                    | Time: 0:00:05 457.24 kB/snumpy-1.12.0-p  37% |###########                    | Time: 0:00:05 460.09 kB/snumpy-1.12.0-p  37% |###########                    | Time: 0:00:05 462.98 kB/snumpy-1.12.0-p  37% |###########                    | Time: 0:00:05 465.87 kB/snumpy-1.12.0-p  37% |###########                    | Time: 0:00:05 468.76 kB/snumpy-1.12.0-p  38% |###########                    | Time: 0:00:05 471.64 kB/snumpy-1.12.0-p  38% |###########                    | Time: 0:00:05 474.53 kB/snumpy-1.12.0-p  38% |###########                    | Time: 0:00:05 477.42 kB/snumpy-1.12.0-p  38% |############                   | Time: 0:00:05 480.30 kB/snumpy-1.12.0-p  39% |############                   | Time: 0:00:05 483.18 kB/snumpy-1.12.0-p  39% |############                   | Time: 0:00:05 486.07 kB/snumpy-1.12.0-p  39% |############                   | Time: 0:00:05 488.96 kB/snumpy-1.12.0-p  39% |############                   | Time: 0:00:05 491.85 kB/snumpy-1.12.0-p  40% |############                   | Time: 0:00:05 494.73 kB/snumpy-1.12.0-p  40% |############                   | Time: 0:00:05 497.61 kB/snumpy-1.12.0-p  40% |############                   | Time: 0:00:05 500.50 kB/snumpy-1.12.0-p  40% |############                   | Time: 0:00:05 503.38 kB/snumpy-1.12.0-p  41% |############                   | Time: 0:00:05 506.25 kB/snumpy-1.12.0-p  41% |############                   | Time: 0:00:05 509.13 kB/snumpy-1.12.0-p  41% |############                   | Time: 0:00:05 511.99 kB/snumpy-1.12.0-p  41% |############                   | Time: 0:00:05 514.86 kB/snumpy-1.12.0-p  41% |#############                  | Time: 0:00:05 517.72 kB/snumpy-1.12.0-p  42% |#############                  | Time: 0:00:05 520.59 kB/snumpy-1.12.0-p  42% |#############                  | Time: 0:00:05 523.45 kB/snumpy-1.12.0-p  42% |#############                  | Time: 0:00:05 526.31 kB/snumpy-1.12.0-p  42% |#############                  | Time: 0:00:05 529.16 kB/snumpy-1.12.0-p  43% |#############                  | Time: 0:00:05 532.03 kB/snumpy-1.12.0-p  43% |#############                  | Time: 0:00:05 534.89 kB/snumpy-1.12.0-p  43% |#############                  | Time: 0:00:05 537.75 kB/snumpy-1.12.0-p  43% |#############                  | Time: 0:00:05 540.61 kB/snumpy-1.12.0-p  44% |#############                  | Time: 0:00:05 543.47 kB/snumpy-1.12.0-p  44% |#############                  | Time: 0:00:05 546.33 kB/snumpy-1.12.0-p  44% |#############                  | Time: 0:00:05 549.19 kB/snumpy-1.12.0-p  44% |#############                  | Time: 0:00:05 552.05 kB/snumpy-1.12.0-p  45% |#############                  | Time: 0:00:05 554.91 kB/snumpy-1.12.0-p  45% |##############                 | Time: 0:00:05 557.79 kB/snumpy-1.12.0-p  45% |##############                 | Time: 0:00:05 560.65 kB/snumpy-1.12.0-p  45% |##############                 | Time: 0:00:05 563.53 kB/snumpy-1.12.0-p  45% |##############                 | Time: 0:00:05 566.38 kB/snumpy-1.12.0-p  46% |##############                 | Time: 0:00:05 569.26 kB/snumpy-1.12.0-p  46% |##############                 | Time: 0:00:05 572.13 kB/snumpy-1.12.0-p  46% |##############                 | Time: 0:00:05 575.00 kB/snumpy-1.12.0-p  46% |##############                 | Time: 0:00:05 577.87 kB/snumpy-1.12.0-p  47% |##############                 | Time: 0:00:05 580.75 kB/snumpy-1.12.0-p  47% |##############                 | Time: 0:00:05 583.54 kB/snumpy-1.12.0-p  47% |##############                 | Time: 0:00:05 586.41 kB/snumpy-1.12.0-p  47% |##############                 | Time: 0:00:05 589.27 kB/snumpy-1.12.0-p  48% |##############                 | Time: 0:00:05 592.14 kB/snumpy-1.12.0-p  48% |##############                 | Time: 0:00:05 594.98 kB/snumpy-1.12.0-p  48% |###############                | Time: 0:00:05 597.84 kB/snumpy-1.12.0-p  48% |###############                | Time: 0:00:05 600.72 kB/snumpy-1.12.0-p  49% |###############                | Time: 0:00:05 603.58 kB/snumpy-1.12.0-p  49% |###############                | Time: 0:00:05 606.43 kB/snumpy-1.12.0-p  49% |###############                | Time: 0:00:05 609.27 kB/snumpy-1.12.0-p  49% |###############                | Time: 0:00:05 612.11 kB/snumpy-1.12.0-p  50% |###############                | Time: 0:00:05 614.96 kB/snumpy-1.12.0-p  50% |###############                | Time: 0:00:05 617.83 kB/snumpy-1.12.0-p  50% |###############                | Time: 0:00:05 620.69 kB/snumpy-1.12.0-p  50% |###############                | Time: 0:00:05 623.55 kB/snumpy-1.12.0-p  50% |###############                | Time: 0:00:05 626.41 kB/snumpy-1.12.0-p  51% |###############                | Time: 0:00:05 629.27 kB/snumpy-1.12.0-p  51% |###############                | Time: 0:00:05 632.10 kB/snumpy-1.12.0-p  51% |################               | Time: 0:00:05 634.96 kB/snumpy-1.12.0-p  51% |################               | Time: 0:00:05 637.82 kB/snumpy-1.12.0-p  52% |################               | Time: 0:00:05 640.68 kB/snumpy-1.12.0-p  52% |################               | Time: 0:00:05 643.54 kB/snumpy-1.12.0-p  52% |################               | Time: 0:00:05 646.39 kB/snumpy-1.12.0-p  52% |################               | Time: 0:00:05 649.26 kB/snumpy-1.12.0-p  53% |################               | Time: 0:00:05 652.12 kB/snumpy-1.12.0-p  53% |################               | Time: 0:00:05 654.97 kB/snumpy-1.12.0-p  53% |################               | Time: 0:00:05 657.83 kB/snumpy-1.12.0-p  53% |################               | Time: 0:00:05 660.69 kB/snumpy-1.12.0-p  54% |################               | Time: 0:00:05 663.54 kB/snumpy-1.12.0-p  54% |################               | Time: 0:00:05 666.40 kB/snumpy-1.12.0-p  54% |################               | Time: 0:00:05 669.25 kB/snumpy-1.12.0-p  54% |################               | Time: 0:00:05 672.11 kB/snumpy-1.12.0-p  54% |#################              | Time: 0:00:05 674.95 kB/snumpy-1.12.0-p  55% |#################              | Time: 0:00:05 677.80 kB/snumpy-1.12.0-p  55% |#################              | Time: 0:00:05 680.65 kB/snumpy-1.12.0-p  55% |#################              | Time: 0:00:05 683.50 kB/snumpy-1.12.0-p  55% |#################              | Time: 0:00:05 686.35 kB/snumpy-1.12.0-p  56% |#################              | Time: 0:00:05 689.21 kB/snumpy-1.12.0-p  56% |#################              | Time: 0:00:05 692.07 kB/snumpy-1.12.0-p  56% |#################              | Time: 0:00:05 694.95 kB/snumpy-1.12.0-p  56% |#################              | Time: 0:00:05 697.81 kB/snumpy-1.12.0-p  57% |#################              | Time: 0:00:05 700.65 kB/snumpy-1.12.0-p  57% |#################              | Time: 0:00:05 703.46 kB/snumpy-1.12.0-p  57% |#################              | Time: 0:00:05 706.31 kB/snumpy-1.12.0-p  57% |#################              | Time: 0:00:05 709.17 kB/snumpy-1.12.0-p  58% |##################             | Time: 0:00:05 712.02 kB/snumpy-1.12.0-p  58% |##################             | Time: 0:00:05 714.86 kB/snumpy-1.12.0-p  58% |##################             | Time: 0:00:05 717.72 kB/snumpy-1.12.0-p  58% |##################             | Time: 0:00:05 720.57 kB/snumpy-1.12.0-p  59% |##################             | Time: 0:00:05 723.42 kB/snumpy-1.12.0-p  59% |##################             | Time: 0:00:05 726.26 kB/snumpy-1.12.0-p  59% |##################             | Time: 0:00:05 729.12 kB/snumpy-1.12.0-p  59% |##################             | Time: 0:00:05 731.97 kB/snumpy-1.12.0-p  59% |##################             | Time: 0:00:05 734.81 kB/snumpy-1.12.0-p  60% |##################             | Time: 0:00:05 737.65 kB/snumpy-1.12.0-p  60% |##################             | Time: 0:00:05 740.51 kB/snumpy-1.12.0-p  60% |##################             | Time: 0:00:05 743.32 kB/snumpy-1.12.0-p  60% |##################             | Time: 0:00:05 746.16 kB/snumpy-1.12.0-p  61% |##################             | Time: 0:00:05 749.02 kB/snumpy-1.12.0-p  61% |###################            | Time: 0:00:05 751.83 kB/snumpy-1.12.0-p  61% |###################            | Time: 0:00:05 754.69 kB/snumpy-1.12.0-p  61% |###################            | Time: 0:00:05 757.54 kB/snumpy-1.12.0-p  62% |###################            | Time: 0:00:05 760.38 kB/snumpy-1.12.0-p  62% |###################            | Time: 0:00:05 763.22 kB/snumpy-1.12.0-p  62% |###################            | Time: 0:00:05 766.06 kB/snumpy-1.12.0-p  62% |###################            | Time: 0:00:05 768.88 kB/snumpy-1.12.0-p  63% |###################            | Time: 0:00:05 771.72 kB/snumpy-1.12.0-p  63% |###################            | Time: 0:00:05 774.56 kB/snumpy-1.12.0-p  63% |###################            | Time: 0:00:05 777.35 kB/snumpy-1.12.0-p  63% |###################            | Time: 0:00:05 780.20 kB/snumpy-1.12.0-p  63% |###################            | Time: 0:00:05 783.04 kB/snumpy-1.12.0-p  64% |###################            | Time: 0:00:05 785.88 kB/snumpy-1.12.0-p  64% |###################            | Time: 0:00:05 788.71 kB/snumpy-1.12.0-p  64% |####################           | Time: 0:00:05 791.54 kB/snumpy-1.12.0-p  64% |####################           | Time: 0:00:05 794.38 kB/snumpy-1.12.0-p  65% |####################           | Time: 0:00:05 797.22 kB/snumpy-1.12.0-p  65% |####################           | Time: 0:00:05 800.05 kB/snumpy-1.12.0-p  65% |####################           | Time: 0:00:05 802.86 kB/snumpy-1.12.0-p  65% |####################           | Time: 0:00:05 805.70 kB/snumpy-1.12.0-p  66% |####################           | Time: 0:00:05 808.54 kB/snumpy-1.12.0-p  66% |####################           | Time: 0:00:05 811.36 kB/snumpy-1.12.0-p  66% |####################           | Time: 0:00:05 814.19 kB/snumpy-1.12.0-p  66% |####################           | Time: 0:00:05 817.04 kB/snumpy-1.12.0-p  67% |####################           | Time: 0:00:05 819.87 kB/snumpy-1.12.0-p  67% |####################           | Time: 0:00:05 822.70 kB/snumpy-1.12.0-p  67% |####################           | Time: 0:00:05 825.51 kB/snumpy-1.12.0-p  67% |#####################          | Time: 0:00:05 828.34 kB/snumpy-1.12.0-p  68% |#####################          | Time: 0:00:05 831.18 kB/snumpy-1.12.0-p  68% |#####################          | Time: 0:00:05 833.99 kB/snumpy-1.12.0-p  68% |#####################          | Time: 0:00:05 836.79 kB/snumpy-1.12.0-p  68% |#####################          | Time: 0:00:05 839.58 kB/snumpy-1.12.0-p  68% |#####################          | Time: 0:00:05 842.34 kB/snumpy-1.12.0-p  69% |#####################          | Time: 0:00:05 845.15 kB/snumpy-1.12.0-p  69% |#####################          | Time: 0:00:05 847.98 kB/snumpy-1.12.0-p  69% |#####################          | Time: 0:00:05 850.80 kB/snumpy-1.12.0-p  69% |#####################          | Time: 0:00:05 853.61 kB/snumpy-1.12.0-p  70% |#####################          | Time: 0:00:05 856.43 kB/snumpy-1.12.0-p  70% |#####################          | Time: 0:00:05 859.25 kB/snumpy-1.12.0-p  70% |#####################          | Time: 0:00:05 862.07 kB/snumpy-1.12.0-p  70% |#####################          | Time: 0:00:05 864.88 kB/snumpy-1.12.0-p  71% |######################         | Time: 0:00:05 867.71 kB/snumpy-1.12.0-p  71% |######################         | Time: 0:00:05 870.54 kB/snumpy-1.12.0-p  71% |######################         | Time: 0:00:05 873.35 kB/snumpy-1.12.0-p  71% |######################         | Time: 0:00:05 876.18 kB/snumpy-1.12.0-p  72% |######################         | Time: 0:00:05 879.00 kB/snumpy-1.12.0-p  72% |######################         | Time: 0:00:05 881.80 kB/snumpy-1.12.0-p  72% |######################         | Time: 0:00:05 884.59 kB/snumpy-1.12.0-p  72% |######################         | Time: 0:00:05 887.36 kB/snumpy-1.12.0-p  73% |######################         | Time: 0:00:05 890.19 kB/snumpy-1.12.0-p  73% |######################         | Time: 0:00:05 892.99 kB/snumpy-1.12.0-p  73% |######################         | Time: 0:00:05 895.80 kB/snumpy-1.12.0-p  73% |######################         | Time: 0:00:05 898.61 kB/snumpy-1.12.0-p  73% |######################         | Time: 0:00:05 901.42 kB/snumpy-1.12.0-p  74% |######################         | Time: 0:00:05 904.23 kB/snumpy-1.12.0-p  74% |#######################        | Time: 0:00:05 907.00 kB/snumpy-1.12.0-p  74% |#######################        | Time: 0:00:05 909.79 kB/snumpy-1.12.0-p  74% |#######################        | Time: 0:00:05 912.59 kB/snumpy-1.12.0-p  75% |#######################        | Time: 0:00:05 915.39 kB/snumpy-1.12.0-p  75% |#######################        | Time: 0:00:05 918.17 kB/snumpy-1.12.0-p  75% |#######################        | Time: 0:00:05 920.95 kB/snumpy-1.12.0-p  75% |#######################        | Time: 0:00:05 923.73 kB/snumpy-1.12.0-p  76% |#######################        | Time: 0:00:05 926.55 kB/snumpy-1.12.0-p  76% |#######################        | Time: 0:00:05 929.37 kB/snumpy-1.12.0-p  76% |#######################        | Time: 0:00:05 932.15 kB/snumpy-1.12.0-p  76% |#######################        | Time: 0:00:05 934.95 kB/snumpy-1.12.0-p  77% |#######################        | Time: 0:00:05 937.73 kB/snumpy-1.12.0-p  77% |#######################        | Time: 0:00:05 940.51 kB/snumpy-1.12.0-p  77% |########################       | Time: 0:00:05 943.31 kB/snumpy-1.12.0-p  77% |########################       | Time: 0:00:05 946.12 kB/snumpy-1.12.0-p  77% |########################       | Time: 0:00:05 948.91 kB/snumpy-1.12.0-p  78% |########################       | Time: 0:00:05 951.69 kB/snumpy-1.12.0-p  78% |########################       | Time: 0:00:05 954.47 kB/snumpy-1.12.0-p  78% |########################       | Time: 0:00:05 957.25 kB/snumpy-1.12.0-p  78% |########################       | Time: 0:00:05 960.04 kB/snumpy-1.12.0-p  79% |########################       | Time: 0:00:05 962.86 kB/snumpy-1.12.0-p  79% |########################       | Time: 0:00:05 965.62 kB/snumpy-1.12.0-p  79% |########################       | Time: 0:00:05 968.40 kB/snumpy-1.12.0-p  79% |########################       | Time: 0:00:05 971.17 kB/snumpy-1.12.0-p  80% |########################       | Time: 0:00:05 973.95 kB/snumpy-1.12.0-p  80% |########################       | Time: 0:00:05 976.71 kB/snumpy-1.12.0-p  80% |########################       | Time: 0:00:05 979.48 kB/snumpy-1.12.0-p  80% |#########################      | Time: 0:00:05 982.25 kB/snumpy-1.12.0-p  81% |#########################      | Time: 0:00:05 985.01 kB/snumpy-1.12.0-p  81% |#########################      | Time: 0:00:05 987.77 kB/snumpy-1.12.0-p  81% |#########################      | Time: 0:00:05 990.54 kB/snumpy-1.12.0-p  81% |#########################      | Time: 0:00:05 993.31 kB/snumpy-1.12.0-p  82% |#########################      | Time: 0:00:05 996.11 kB/snumpy-1.12.0-p  82% |#########################      | Time: 0:00:05 998.87 kB/snumpy-1.12.0-p  82% |#########################      | Time: 0:00:05   1.00 MB/snumpy-1.12.0-p  82% |#########################      | Time: 0:00:05   1.00 MB/snumpy-1.12.0-p  82% |#########################      | Time: 0:00:05   1.01 MB/snumpy-1.12.0-p  83% |#########################      | Time: 0:00:05   1.01 MB/snumpy-1.12.0-p  83% |#########################      | Time: 0:00:05   1.01 MB/snumpy-1.12.0-p  83% |#########################      | Time: 0:00:05   1.02 MB/snumpy-1.12.0-p  83% |##########################     | Time: 0:00:05   1.02 MB/snumpy-1.12.0-p  84% |##########################     | Time: 0:00:05   1.02 MB/snumpy-1.12.0-p  84% |##########################     | Time: 0:00:05   1.02 MB/snumpy-1.12.0-p  84% |##########################     | Time: 0:00:05   1.03 MB/snumpy-1.12.0-p  84% |##########################     | Time: 0:00:05   1.03 MB/snumpy-1.12.0-p  85% |##########################     | Time: 0:00:05   1.03 MB/snumpy-1.12.0-p  85% |##########################     | Time: 0:00:05   1.03 MB/snumpy-1.12.0-p  85% |##########################     | Time: 0:00:05   1.04 MB/snumpy-1.12.0-p  85% |##########################     | Time: 0:00:05   1.04 MB/snumpy-1.12.0-p  86% |##########################     | Time: 0:00:05   1.04 MB/snumpy-1.12.0-p  86% |##########################     | Time: 0:00:05   1.05 MB/snumpy-1.12.0-p  86% |##########################     | Time: 0:00:05   1.05 MB/snumpy-1.12.0-p  86% |##########################     | Time: 0:00:05   1.05 MB/snumpy-1.12.0-p  86% |##########################     | Time: 0:00:05   1.05 MB/snumpy-1.12.0-p  87% |###########################    | Time: 0:00:05   1.06 MB/snumpy-1.12.0-p  87% |###########################    | Time: 0:00:05   1.06 MB/snumpy-1.12.0-p  87% |###########################    | Time: 0:00:05   1.06 MB/snumpy-1.12.0-p  87% |###########################    | Time: 0:00:05   1.07 MB/snumpy-1.12.0-p  88% |###########################    | Time: 0:00:05   1.07 MB/snumpy-1.12.0-p  88% |###########################    | Time: 0:00:05   1.07 MB/snumpy-1.12.0-p  88% |###########################    | Time: 0:00:05   1.07 MB/snumpy-1.12.0-p  88% |###########################    | Time: 0:00:05   1.08 MB/snumpy-1.12.0-p  89% |###########################    | Time: 0:00:05   1.08 MB/snumpy-1.12.0-p  89% |###########################    | Time: 0:00:05   1.08 MB/snumpy-1.12.0-p  89% |###########################    | Time: 0:00:05   1.09 MB/snumpy-1.12.0-p  89% |###########################    | Time: 0:00:05   1.09 MB/snumpy-1.12.0-p  90% |###########################    | Time: 0:00:05   1.09 MB/snumpy-1.12.0-p  90% |###########################    | Time: 0:00:05   1.09 MB/snumpy-1.12.0-p  90% |############################   | Time: 0:00:05   1.10 MB/snumpy-1.12.0-p  90% |############################   | Time: 0:00:05   1.10 MB/snumpy-1.12.0-p  91% |############################   | Time: 0:00:05   1.10 MB/snumpy-1.12.0-p  91% |############################   | Time: 0:00:05   1.10 MB/snumpy-1.12.0-p  91% |############################   | Time: 0:00:05   1.11 MB/snumpy-1.12.0-p  91% |############################   | Time: 0:00:05   1.11 MB/snumpy-1.12.0-p  91% |############################   | Time: 0:00:05   1.11 MB/snumpy-1.12.0-p  92% |############################   | Time: 0:00:05   1.12 MB/snumpy-1.12.0-p  92% |############################   | Time: 0:00:05   1.12 MB/snumpy-1.12.0-p  92% |############################   | Time: 0:00:05   1.12 MB/snumpy-1.12.0-p  92% |############################   | Time: 0:00:05   1.12 MB/snumpy-1.12.0-p  93% |############################   | Time: 0:00:05   1.13 MB/snumpy-1.12.0-p  93% |############################   | Time: 0:00:05   1.13 MB/snumpy-1.12.0-p  93% |#############################  | Time: 0:00:05   1.13 MB/snumpy-1.12.0-p  93% |#############################  | Time: 0:00:05   1.14 MB/snumpy-1.12.0-p  94% |#############################  | Time: 0:00:05   1.14 MB/snumpy-1.12.0-p  94% |#############################  | Time: 0:00:05   1.14 MB/snumpy-1.12.0-p  94% |#############################  | Time: 0:00:05   1.14 MB/snumpy-1.12.0-p  94% |#############################  | Time: 0:00:05   1.15 MB/snumpy-1.12.0-p  95% |#############################  | Time: 0:00:05   1.15 MB/snumpy-1.12.0-p  95% |#############################  | Time: 0:00:05   1.15 MB/snumpy-1.12.0-p  95% |#############################  | Time: 0:00:05   1.16 MB/snumpy-1.12.0-p  95% |#############################  | Time: 0:00:05   1.16 MB/snumpy-1.12.0-p  95% |#############################  | Time: 0:00:05   1.16 MB/snumpy-1.12.0-p  96% |#############################  | Time: 0:00:05   1.16 MB/snumpy-1.12.0-p  96% |#############################  | Time: 0:00:05   1.17 MB/snumpy-1.12.0-p  96% |#############################  | Time: 0:00:05   1.17 MB/snumpy-1.12.0-p  96% |############################## | Time: 0:00:05   1.17 MB/snumpy-1.12.0-p  97% |############################## | Time: 0:00:05   1.17 MB/snumpy-1.12.0-p  97% |############################## | Time: 0:00:05   1.18 MB/snumpy-1.12.0-p  97% |############################## | Time: 0:00:05   1.18 MB/snumpy-1.12.0-p  97% |############################## | Time: 0:00:05   1.18 MB/snumpy-1.12.0-p  98% |############################## | Time: 0:00:05   1.19 MB/snumpy-1.12.0-p  98% |############################## | Time: 0:00:05   1.19 MB/snumpy-1.12.0-p  98% |############################## | Time: 0:00:05   1.19 MB/snumpy-1.12.0-p  98% |############################## | Time: 0:00:05   1.19 MB/snumpy-1.12.0-p  99% |############################## | Time: 0:00:05   1.20 MB/snumpy-1.12.0-p  99% |############################## | Time: 0:00:05   1.20 MB/snumpy-1.12.0-p  99% |############################## | Time: 0:00:05   1.20 MB/snumpy-1.12.0-p  99% |############################## | Time: 0:00:05   1.21 MB/snumpy-1.12.0-p 100% |###############################| Time: 0:00:05   1.21 MB/snumpy-1.12.0-p 100% |###############################| Time: 0:00:05   1.21 MB/s
INFO: PyCall is using /home/vagrant/.julia/v0.4/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.4/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.4/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.4/PyCall/deps/deps.jl has been updated
INFO: /home/vagrant/.julia/v0.4/PyCall/deps/PYTHON has been updated
INFO: Building LightXML
INFO: Package database updated

>>> 'Pkg.test("Augur")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (390.25 MB free)
Uptime: 6446.0 sec
Load Avg:  0.900390625  0.93994140625  0.94775390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     214826 s         56 s      25615 s     353161 s         12 s
#2  3500 MHz     167522 s         89 s      23238 s     434293 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - Augur                         0.1.1
 - JSON                          0.8.3
66 additional packages:
 - AutoHashEquals                0.0.10
 - AxisAlgorithms                0.1.6
 - BinDeps                       0.4.7
 - Blosc                         0.2.0
 - Calculus                      0.2.2
 - Clustering                    0.7.0
 - ColorTypes                    0.2.12
 - Colors                        0.6.9
 - Compat                        0.20.0
 - Compose                       0.4.5
 - Conda                         0.5.1
 - Contour                       0.2.0
 - DSP                           0.1.1
 - DataArrays                    0.3.12
 - DataFrames                    0.8.5
 - DataStructures                0.5.3
 - Dates                         0.4.4
 - DiffBase                      0.0.5
 - Distances                     0.3.2
 - Distributions                 0.11.1
 - DualNumbers                   0.3.0
 - FileIO                        0.2.2
 - FixedPointNumbers             0.2.1
 - FixedSizeArrays               0.2.5
 - ForwardDiff                   0.3.4
 - GZip                          0.2.20
 - Gadfly                        0.5.3
 - HDF5                          0.7.3
 - Hexagons                      0.0.4
 - Hiccup                        0.0.3
 - Interpolations                0.3.8
 - Iterators                     0.3.0
 - JLD                           0.6.9
 - Juno                          0.2.7
 - KernelDensity                 0.3.2
 - LaTeXStrings                  0.2.0
 - Lazy                          0.11.5
 - LegacyStrings                 0.2.0
 - LightGraphs                   0.6.3
 - LightXML                      0.4.0
 - LineSearches                  0.1.5
 - Loess                         0.1.0
 - MacroTools                    0.3.6
 - Measures                      0.0.3
 - Media                         0.2.5
 - NaNMath                       0.2.2
 - NearestNeighbors              0.0.5
 - Optim                         0.7.8
 - PDMats                        0.5.6
 - ParserCombinator              1.7.11
 - Polynomials                   0.1.3
 - PositiveFactorizations        0.0.4
 - Primes                        0.1.2
 - PyCall                        1.11.0
 - PyPlot                        2.3.1
 - QuantEcon                     0.9.0
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.2
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.1
 - StatsBase                     0.12.0
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
 - WoodburyMatrices              0.2.2
INFO: Testing Augur

WARNING: deprecated syntax "(Symbol=>String)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/Augur.jl:320.
Use "Dict{Symbol,String}(a=>b, ...)" instead.
WARNING: requiring "Dates" in module "Augur" did not define a corresponding module.
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/Augur.jl:50
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/Augur.jl:324

WARNING: deprecated syntax "(String=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:11.
Use "Dict{String,Any}(a=>b, ...)" instead.
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:2
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:2
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:2
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:32

WARNING: deprecated syntax "(Symbol=>Vector{Float64})[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:58.
Use "Dict{Symbol,Vector{Float64}}(a=>b, ...)" instead.
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:49
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:64
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:64
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:64
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:64
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:91
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:91
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:129
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:129

WARNING: deprecated syntax "(String=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/simulate.jl:171.
Use "Dict{String,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Symbol=>Array{Float64})[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/consensus.jl:97.
Use "Dict{Symbol,Array{Float64}}(a=>b, ...)" instead.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(Base.Predicate, Any) at reduce.jl:369.
To fix, define 
    all(Base.Predicate, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(Base.IdFun, Any) at reduce.jl:370.
To fix, define 
    all(Base.IdFun, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(AbstractArray, Any) at reducedim.jl:264.
To fix, define 
    all(AbstractArray, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(Base.Predicate, Any) at reduce.jl:362.
To fix, define 
    any(Base.Predicate, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(Base.IdFun, Any) at reduce.jl:363.
To fix, define 
    any(Base.IdFun, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(AbstractArray, Any) at reducedim.jl:264.
To fix, define 
    any(AbstractArray, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(Base.Predicate, Any) at reduce.jl:369.
To fix, define 
    all(Base.Predicate, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(Base.IdFun, Any) at reduce.jl:370.
To fix, define 
    all(Base.IdFun, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(DataArrays.DataArray, Any) at /home/vagrant/.julia/v0.4/DataArrays/src/reducedim.jl:320.
To fix, define 
    all(DataArrays.DataArray, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(AbstractArray, Any) at reducedim.jl:264.
To fix, define 
    all(AbstractArray, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(Base.Predicate, Any) at reduce.jl:362.
To fix, define 
    any(Base.Predicate, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(Base.IdFun, Any) at reduce.jl:363.
To fix, define 
    any(Base.IdFun, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(DataArrays.DataArray, Any) at /home/vagrant/.julia/v0.4/DataArrays/src/reducedim.jl:320.
To fix, define 
    any(DataArrays.DataArray, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(AbstractArray, Any) at reducedim.jl:264.
To fix, define 
    any(AbstractArray, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(Base.Predicate, Any) at reduce.jl:369.
To fix, define 
    all(Base.Predicate, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(Base.IdFun, Any) at reduce.jl:370.
To fix, define 
    all(Base.IdFun, Lazy.List)
before the new definition.
WARNING: New definition 
    all(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:187
is ambiguous with: 
    all(AbstractArray, Any) at reducedim.jl:264.
To fix, define 
    all(AbstractArray, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(Base.Predicate, Any) at reduce.jl:362.
To fix, define 
    any(Base.Predicate, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(Base.IdFun, Any) at reduce.jl:363.
To fix, define 
    any(Base.IdFun, Lazy.List)
before the new definition.
WARNING: New definition 
    any(Any, Lazy.List) at /home/vagrant/.julia/v0.4/Lazy/src/liblazy.jl:184
is ambiguous with: 
    any(AbstractArray, Any) at reducedim.jl:264.
To fix, define 
    any(AbstractArray, Lazy.List)
before the new definition.
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/complexity.jl:12
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/complexity.jl:12
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/complexity.jl:12
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/complexity.jl:38

WARNING: deprecated syntax "(Symbol=>Vector{Float64})[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/complexity.jl:82.
Use "Dict{Symbol,Vector{Float64}}(a=>b, ...)" instead.
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/complexity.jl:45

WARNING: deprecated syntax "(Symbol=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/makedata.jl:47.
Use "Dict{Symbol,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Symbol=>Vector{Float64})[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/makedata.jl:98.
Use "Dict{Symbol,Vector{Float64}}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Symbol=>Float64)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/metrics.jl:77.
Use "Dict{Symbol,Float64}(a=>b, ...)" instead.

WARNING: deprecated syntax "(String=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/src/files.jl:12.
Use "Dict{String,Any}(a=>b, ...)" instead.
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/files.jl:36
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/files.jl:42
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/files.jl:42
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/src/files.jl:62
Testing Augur.jl...
 * setup.jl
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/test/setup.jl:4
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/test/setup.jl:4
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/test/setup.jl:4
WARNING: Base.String is deprecated, use AbstractString instead.
  likely near /home/vagrant/.julia/v0.4/Augur/test/setup.jl:4
WARNING: int(x::AbstractFloat) is deprecated, use round(Int,x) instead.
 in depwarn at deprecated.jl:73
 in int at deprecated.jl:50
 in call at /home/vagrant/.julia/v0.4/Augur/src/Augur.jl:179
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 [inlined code] from /home/vagrant/.julia/v0.4/Augur/test/runtests.jl:17
 in anonymous at no file:0
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Augur/test/setup.jl, in expression starting on line 4

WARNING: deprecated syntax "(Symbol=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/test/setup.jl:59.
Use "Dict{Symbol,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Symbol=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/test/setup.jl:72.
Use "Dict{Symbol,Any}(a=>b, ...)" instead.
 * test_makedata.jl

WARNING: deprecated syntax "(Symbol=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/test/setup.jl:59.
Use "Dict{Symbol,Any}(a=>b, ...)" instead.

WARNING: deprecated syntax "(Symbol=>Any)[a=>b, ...]" at /home/vagrant/.julia/v0.4/Augur/test/setup.jl:72.
Use "Dict{Symbol,Any}(a=>b, ...)" instead.
   - create_reporters
ERROR: LoadError: LoadError: use `include` instead of `reload` to load source files
 in reload at loading.jl:216
 in setup at /home/vagrant/.julia/v0.4/Augur/test/setup.jl:13
 in test_create_reporters at /home/vagrant/.julia/v0.4/Augur/test/test_makedata.jl:10
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 [inlined code] from /home/vagrant/.julia/v0.4/Augur/test/runtests.jl:17
 in anonymous at no file:0
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Augur/test/test_makedata.jl, in expression starting on line 57
while loading /home/vagrant/.julia/v0.4/Augur/test/runtests.jl, in expression starting on line 14
================================[ ERROR: Augur ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Augur/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Augur had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
