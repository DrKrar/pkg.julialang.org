>>> 'Pkg.add("Distributions")' log
INFO: Installing Distributions v0.9.0
INFO: Installing PDMats v0.4.2
INFO: Installing StatsBase v0.8.3
INFO: Installing StatsFuns v0.2.2
INFO: Package database updated

>>> 'Pkg.test("Distributions")' log
Julia Version 0.5.0-dev+5456
Commit a1fbb84 (2016-07-16 21:33 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for Distributions...
INFO: Installing Calculus v0.1.15
INFO: Installing ForwardDiff v0.2.1
INFO: Installing NaNMath v0.2.1
INFO: Testing Distributions
Running tests:
WARNING: Base.CPU_CORES is deprecated.
  likely near /home/vagrant/.julia/v0.5/Distributions/test/runtests.jl:37
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/StatsBase.ji for module StatsBase.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/StatsFuns.ji for module StatsFuns.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Distributions.ji for module Distributions.
	From worker 2:	    testing Distributions.CategoricalDirectSampler
	From worker 3:	    testing Distributions.Categorical(K=2, p=[0.5,0.5])
ERROR: LoadError: On worker 2:
LoadError: error compiling #test_samples#34: could not load library "libRmath-julia"
libRmath-julia.so: cannot open shared object file: No such file or directory
 in test_samples at /home/vagrant/.julia/v0.5/Distributions/src/testutils.jl:87
 in macro expansion; at /home/vagrant/.julia/v0.5/Distributions/test/samplers.jl:32 [inlined]
 in anonymous at ./<missing>:?
 in include_string at ./loading.jl:380
 in include_from_node1 at ./loading.jl:429
 in #5 at /home/vagrant/.julia/v0.5/Distributions/test/runtests.jl:43
 in #501 at ./multi.jl:1193
 in run_work_thunk at ./multi.jl:844
 in macro expansion at ./multi.jl:1193 [inlined]
 in #500 at ./event.jl:46
while loading /home/vagrant/.julia/v0.5/Distributions/test/samplers.jl, in expression starting on line 29
 in #remotecall_fetch#486(::Array{Any,1}, ::Function, ::Function, ::Base.Worker, ::String, ::Vararg{String,N}) at ./multi.jl:904
 in remotecall_fetch(::Function, ::Base.Worker, ::String, ::Vararg{String,N}) at ./multi.jl:898
 in #remotecall_fetch#487(::Array{Any,1}, ::Function, ::Function, ::Int64, ::String, ::Vararg{String,N}) at ./multi.jl:907
 in remotecall_fetch(::Function, ::Int64, ::String, ::Vararg{Any,N}) at ./multi.jl:907
 in #remotecall_pool#563(::Array{Any,1}, ::Function, ::Function, ::Function, ::WorkerPool, ::String, ::Vararg{String,N}) at ./workerpool.jl:93
 in remotecall_pool(::Function, ::Function, ::WorkerPool, ::String, ::Vararg{String,N}) at ./workerpool.jl:91
 in #remotecall_fetch#566(::Array{Any,1}, ::Function, ::Function, ::WorkerPool, ::String, ::Vararg{String,N}) at ./workerpool.jl:124
 in remotecall_fetch(::Function, ::WorkerPool, ::String, ::Vararg{String,N}) at ./workerpool.jl:124
 in (::Base.###571#572#574{WorkerPool,##5#6})(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N}) at ./workerpool.jl:151
 in (::Base.##571#573)(::String, ::Vararg{String,N}) at ./workerpool.jl:151
 in macro expansion at ./asyncmap.jl:63 [inlined]
 in (::Base.##627#629{Base.AsyncCollector,Base.AsyncCollectorState})() at ./task.jl:309

...and 1 other exceptions.

 in sync_end() at ./task.jl:275
 in done(::Base.AsyncCollector, ::Base.AsyncCollectorState) at ./asyncmap.jl:124
 in pump_source(::Base.AsyncGenerator, ::Base.AsyncGeneratorState) at ./asyncmap.jl:185
 in next(::Base.AsyncGenerator, ::Base.AsyncGeneratorState) at ./asyncmap.jl:201
 in _collect(::UnitRange{Int64}, ::Base.AsyncGenerator, ::Base.HasEltype, ::Base.SizeUnknown) at ./array.jl:241
 in #pmap#588(::Bool, ::Int64, ::Void, ::Int64, ::Float64, ::Function, ::Function, ::WorkerPool, ::##5#6, ::Array{String,1}) at ./pmap.jl:101
 in pmap(::WorkerPool, ::Function, ::Array{String,1}) at ./pmap.jl:77
 in #pmap#598(::Array{Any,1}, ::Function, ::Function, ::Array{String,1}) at ./pmap.jl:126
 in pmap(::Function, ::Array{String,1}) at ./pmap.jl:126
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Distributions/test/runtests.jl, in expression starting on line 42
============================[ ERROR: Distributions ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Distributions/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Calculus v0.1.15
INFO: Removing ForwardDiff v0.2.1
INFO: Removing NaNMath v0.2.1
ERROR: Distributions had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:736
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
