>>> 'Pkg.add("RandomQuantum")' log
INFO: Cloning cache of RandomQuantum from https://github.com/BBN-Q/RandomQuantum.jl.git
INFO: Installing Cliffords v0.3.0
INFO: Installing Iterators v0.2.0
INFO: Installing QuantumInfo v0.0.2
INFO: Installing RandomQuantum v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of RandomQuantum
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("RandomQuantum")' log
Julia Version 0.6.0-dev.1067
Commit d66df68 (2016-10-21 02:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (641.34765625 MB free)
Uptime: 25751.0 sec
Load Avg:  0.2119140625  0.166015625  0.2333984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     649915 s       5646 s      96263 s    1702524 s         26 s
#2  3500 MHz     195816 s        156 s      40679 s    2310640 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - RandomQuantum                 0.0.1
4 additional packages:
 - Cliffords                     0.3.0
 - Compat                        0.9.3
 - Iterators                     0.2.0
 - QuantumInfo                   0.0.2
INFO: Testing RandomQuantum
WARNING: The call to compilecache failed to create a usable precompiled cache file for module Cliffords. Got:
WARNING: Module Iterators uuid did not match cache file.
WARNING: eval from module Main to QuantumInfo:    
Expr(:call, Expr(:., :Base, :include_from_node1)::Any, "/home/vagrant/.julia/v0.6/Cliffords/src/Cliffords.jl")::Any
  ** incremental compilation may be broken for this module **

WARNING: imported binding for Iterators overwritten in module Main
WARNING: The call to compilecache failed to create a usable precompiled cache file for module QuantumInfo. Got:
WARNING: Module Iterators uuid did not match cache file.
ERROR: LoadError: LoadError: Declaring __precompile__(true) is only allowed in module files being imported.
 in __precompile__(::Bool) at ./loading.jl:311
 in __precompile__() at ./loading.jl:307
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/QuantumInfo/src/QuantumInfo.jl, in expression starting on line 1
while loading /home/vagrant/.julia/v0.6/RandomQuantum/test/runtests.jl, in expression starting on line 1
============================[ ERROR: RandomQuantum ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/RandomQuantum/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: RandomQuantum had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
