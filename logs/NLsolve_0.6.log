>>> 'Pkg.add("NLsolve")' log
INFO: Cloning cache of NLsolve from https://github.com/EconForge/NLsolve.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing Distances v0.3.2
INFO: Installing ForwardDiff v0.2.5
INFO: Installing NLsolve v0.8.0
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.6.1
INFO: Installing PositiveFactorizations v0.0.3
INFO: Package database updated

>>> 'Pkg.test("NLsolve")' log
Julia Version 0.6.0-dev.1378
Commit 1e0e793 (2016-12-03 13:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (378.00390625 MB free)
Uptime: 7032.0 sec
Load Avg:  1.1181640625  1.1513671875  1.423828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     410149 s       2857 s      64910 s     150556 s         12 s
#2  3499 MHz     124391 s       3870 s      30399 s     526940 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - NLsolve                       0.8.0
7 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - Distances                     0.3.2
 - ForwardDiff                   0.2.5
 - NaNMath                       0.2.2
 - Optim                         0.6.1
 - PositiveFactorizations        0.0.3
INFO: Computing test dependencies for NLsolve...
INFO: Installing BaseTestNext v0.2.2
INFO: Testing NLsolve
Running tests:
Function                                          Dim    NFEV    NJEV   Final inf-norm     total time
--------------------------------------------------------------------------------------
Rosenbrock-trust_region                             2      30      17     0.000000e+00   1.093174e-02
Rosenbrock-trust_region-AD                          2      30      17     0.000000e+00   3.647072e-01
Rosenbrock-newton                                   2      88       7     0.000000e+00   1.107990e-04
Rosenbrock-newton-AD                                2      88       7     0.000000e+00   4.306710e-04
Powell singular-trust_region                        4      17      17     2.945101e-09   2.547171e-02
Powell singular-trust_region-AD                     4      17      17     2.945101e-09   2.006543e-01
Powell singular-newton                              4      17      16     2.945101e-09   2.573130e-04
Powell singular-newton-AD                           4      17      16     2.945101e-09   3.536720e-04
Powell badly scaled-trust_region                    2      15      14     7.051804e-12   1.997122e-02
Powell badly scaled-trust_region-AD                 2      15      14     7.051804e-12   9.640229e-02
Powell badly scaled-newton                          2     297      26     7.053247e-13   3.389570e-04
Powell badly scaled-newton-AD                       2     297      26     7.053247e-13   3.926470e-04
Wood-trust_region                                   4      19      15     1.152565e-10   3.249136e-02
Wood-trust_region-AD                                4      19      15     1.152340e-10   1.556974e-01
Wood-newton                                         4      35      13     6.772560e-11   2.085510e-04
Wood-newton-AD                                      4      35      13     6.772716e-11   2.493970e-04
Helical Valley-trust_region                         3      10       9     1.110223e-14   3.130762e-02
Helical Valley-trust_region-AD                      3      10       9     1.110223e-14   2.357490e-01
Helical Valley-newton                               3      15      10     4.861404e-16   1.188870e-04
Helical Valley-newton-AD                            3      15      10     4.861404e-16   2.619310e-04
Watson-trust_region                                 6      20      16     3.012954e-13   5.865944e-02
Watson-trust_region-AD                              6      20      16     2.916643e-13   3.240993e-01
Watson-newton                                       6      23      13     2.310993e-12   2.440470e-04
Watson-newton-AD                                    6      23      13     2.311431e-12   1.952626e-03
Watson-trust_region                                 9      17      17     1.633317e-12   2.690790e-04
Watson-trust_region-AD                              9      17      17     1.618360e-12   4.317785e-01
Watson-newton                                       9      25      14     6.565755e-14   3.438040e-04
Watson-newton-AD                                    9      25      14     5.549966e-14   2.689953e-03
Chebyquad-trust_region                              5       8       5     9.143861e-09   3.879357e-02
Chebyquad-trust_region-AD                           5       8       5     9.143861e-09   3.596006e-01
Chebyquad-newton                                    5      10       5     1.693090e-15   6.320600e-05
Chebyquad-newton-AD                                 5      10       5     1.693090e-15   1.599060e-04
Chebyquad-trust_region                              6      13       8     7.320533e-16   8.695900e-05
Chebyquad-trust_region-AD                           6      13       8     7.320533e-16   5.897553e-02
Chebyquad-newton                                    6      12       6     8.260920e-12   8.837500e-05
Chebyquad-newton-AD                                 6      12       6     8.260920e-12   2.105610e-04
Chebyquad-trust_region                              7      10       6     6.329061e-10   7.277000e-05
Chebyquad-trust_region-AD                           7      10       6     6.329061e-10   3.243737e-01
Chebyquad-newton                                    7      11       6     4.857226e-16   9.348100e-05
Chebyquad-newton-AD                                 7      11       6     4.857226e-16   1.818840e-04
Chebyquad-trust_region                              9      14       8     1.621966e-14   1.804650e-04
Chebyquad-trust_region-AD                           9      14       8     1.621966e-14   8.186004e-02
Chebyquad-newton                                    9      78       9     1.220925e-09   2.354210e-04
Chebyquad-newton-AD                                 9      78       9     1.220925e-09   5.211040e-04
Brown almost-linear-trust_region                   10       5       5     3.382331e-09   1.065725e-01
Brown almost-linear-trust_region-AD                10       5       5     3.382331e-09   4.544434e-01
Brown almost-linear-newton                         10     177      10     6.122103e-12   3.315570e-04
Brown almost-linear-newton-AD                      10     177      10     6.122103e-12   5.270220e-04
Brown almost-linear-trust_region                   30       4       4     8.883263e-09   2.797590e-04
Brown almost-linear-trust_region-AD                30       4       4     8.883263e-09   4.940851e-02
Brown almost-linear-newton                         30     323      13     2.572387e-12   5.130870e-04
Brown almost-linear-newton-AD                      30     323      13     2.569278e-12   7.525090e-04
Brown almost-linear-trust_region                   40       4       4     1.570839e-09   3.541110e-04
Brown almost-linear-trust_region-AD                40       4       4     1.570839e-09   8.017200e-04
Brown almost-linear-newton                         40     461      18     1.137985e-09   1.144804e-03
Brown almost-linear-newton-AD                      40     461      18     1.137982e-09   1.531300e-03
Discrete boundary value-trust_region               10       4       4     2.636780e-16   3.404584e-02
Discrete boundary value-trust_region-AD            10       4       4     2.636780e-16   1.455314e-01
Discrete boundary value-newton                     10       4       3     2.636780e-16   1.405230e-04
Discrete boundary value-newton-AD                  10       4       3     2.636780e-16   3.756370e-04
Discrete integral equation-trust_region             1       4       4     8.537615e-14   4.754635e-02
Discrete integral equation-trust_region-AD          1       4       4     8.537615e-14   3.749046e-01
Discrete integral equation-newton                   1       4       3     8.537615e-14   7.412500e-05
Discrete integral equation-newton-AD                1       4       3     8.537615e-14   2.743360e-04
Discrete integral equation-trust_region            10       4       4     2.747802e-15   1.640580e-04
Discrete integral equation-trust_region-AD         10       4       4     2.747802e-15   1.158665e-01
Discrete integral equation-newton                  10       4       3     2.747802e-15   1.660620e-04
Discrete integral equation-newton-AD               10       4       3     2.747802e-15   3.999600e-04
Trigonometric-trust_region                         10      14       8     1.204299e-10   3.137361e-02
Trigonometric-trust_region-AD                      10      14       8     1.204299e-10   9.916984e-02
Variably dimensioned-trust_region                  10      15      15     1.323497e-12   3.902020e-02
Variably dimensioned-trust_region-AD               10      15      15     1.323497e-12   1.347623e-01
Variably dimensioned-newton                        10      15      14     1.323497e-12   1.982910e-04
Variably dimensioned-newton-AD                     10      15      14     1.323497e-12   4.043200e-04
Broyden tridiagonal-trust_region                   10       5       5     7.548402e-10   3.048815e-02
Broyden tridiagonal-trust_region-AD                10       5       5     7.548402e-10   1.139035e-01
Broyden tridiagonal-newton                         10       5       4     7.548402e-10   7.709000e-05
Broyden tridiagonal-newton-AD                      10       5       4     7.548402e-10   1.444120e-04
Broyden banded-trust_region                        10       6       6     9.359466e-09   4.202515e-02
Broyden banded-trust_region-AD                     10       6       6     9.359466e-09   1.139553e-01
Broyden banded-newton                              10       6       5     9.359466e-09   8.495700e-05
Broyden banded-newton-AD                           10       6       5     9.359466e-09   3.997580e-04
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sqrt(::Array{Float64,1}) at ./deprecated.jl:50
 in (::NLsolve.#g!#33{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 in (::NLsolve.#fg!#1{NLsolve.#f!#32{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#33{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 in trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #mcpsolve#20(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Optim.#backtracking_linesearch!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:31
 in (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/josephy.jl:38 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/runtests.jl:27 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/NLsolve/test/josephy.jl, in expression starting on line 3
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sqrt(::Array{Float64,1}) at ./deprecated.jl:50
 in (::NLsolve.#g!#33{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 in (::NLsolve.#fg!#1{NLsolve.#f!#32{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#33{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:14
 in trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #mcpsolve#20(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Optim.#backtracking_linesearch!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:31
 in (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/josephy.jl:38 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/runtests.jl:27 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/NLsolve/test/josephy.jl, in expression starting on line 3
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sqrt(::Array{Float64,1}) at ./deprecated.jl:50
 in (::NLsolve.#g!#33{NLsolve.DifferentiableSparseMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:33
 in (::NLsolve.#fg!#15{NLsolve.#f!#32{NLsolve.DifferentiableSparseMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#33{NLsolve.DifferentiableSparseMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:112
 in trust_region_(::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #mcpsolve#20(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Optim.#backtracking_linesearch!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:31
 in (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/sparse.jl:32 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/runtests.jl:27 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/NLsolve/test/sparse.jl, in expression starting on line 4
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sqrt(::Array{Float64,1}) at ./deprecated.jl:50
 in (::NLsolve.#g!#33{NLsolve.DifferentiableSparseMultivariateFunction,Array{Float64,1},Array{Float64,1}})(::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp.jl:54
 in (::NLsolve.#fg!#15{NLsolve.#f!#32{NLsolve.DifferentiableSparseMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#g!#33{NLsolve.DifferentiableSparseMultivariateFunction,Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.6/NLsolve/src/differentiable_functions.jl:112
 in trust_region_(::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:87
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #mcpsolve#20(::Symbol, ::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Optim.#backtracking_linesearch!, ::Float64, ::Bool, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/mcp_func_defs.jl:31
 in (::NLsolve.#kw##mcpsolve)(::Array{Any,1}, ::NLsolve.#mcpsolve, ::NLsolve.DifferentiableSparseMultivariateFunction, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/sparse.jl:32 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/NLsolve/test/runtests.jl:27 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/NLsolve/test/sparse.jl, in expression starting on line 4
INFO: NLsolve tests passed
INFO: Removing BaseTestNext v0.2.2

>>> End of log
