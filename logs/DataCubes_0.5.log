>>> 'Pkg.add("DataCubes")' log
INFO: Cloning cache of DataCubes from https://github.com/c-s/DataCubes.jl.git
INFO: Installing DataArrays v0.3.9
INFO: Installing DataCubes v0.1.0
INFO: Installing DataFrames v0.8.4
INFO: Installing FileIO v0.2.0
INFO: Installing Formatting v0.2.0
INFO: Installing GZip v0.2.20
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DataCubes
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DataCubes")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1034.3828125 MB free)
Uptime: 16621.0 sec
Load Avg:  1.0126953125  1.41064453125  1.7109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1027702 s       6209 s      84046 s     366654 s          8 s
#2  3499 MHz     490822 s        477 s      49881 s    1074656 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DataCubes                     0.1.0
 - JSON                          0.8.0
9 additional packages:
 - Compat                        0.9.3
 - DataArrays                    0.3.9
 - DataFrames                    0.8.4
 - FileIO                        0.2.0
 - Formatting                    0.2.0
 - GZip                          0.2.20
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
INFO: Computing test dependencies for DataCubes...
INFO: Installing FactCheck v0.4.3
INFO: Installing RData v0.0.4
INFO: Installing RDatasets v0.2.0
INFO: Testing DataCubes

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.

WARNING: deprecated syntax "inds::Core.apply_type(Array,Int,1)".
Use "local inds::Core.apply_type(Array,Int,1)" instead.
LDict tests
  > constructor tests
  > method tests
18 facts verified.
DictArray tests
  > constructor tests
    > basic tests
    > constructing DictArrays with null elements...
  > array related method tests
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Int64} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Int64})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Int64}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{Int64},2}, ::Array{Nullable{Int64},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{Int64},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in _collect(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:320
 in mapvalues(::Function, ::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:238
 in mapvalues at /home/vagrant/.julia/v0.5/DataCubes/src/util/array_util.jl:727 [inlined]
 in transpose(::DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:305
 in (::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##31#454)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:83
 in context(::TestDataCubes.TestDictArray.##31#454, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:50
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Symbol} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Symbol})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Symbol}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{Symbol},2}, ::Array{Nullable{Symbol},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{Symbol},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:340
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{Nullable{Int64},2,Array{Nullable{Int64},2}},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:350
 in _collect(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:321
 in mapvalues(::Function, ::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:238
 in mapvalues at /home/vagrant/.julia/v0.5/DataCubes/src/util/array_util.jl:727 [inlined]
 in transpose(::DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:305
 in (::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##31#454)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:83
 in context(::TestDataCubes.TestDictArray.##31#454, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:50
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{String} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{String})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{String}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{String},2}, ::Array{Nullable{String},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{String},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:340
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{Nullable{Int64},2,Array{Nullable{Int64},2}},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:350
 in _collect(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:321
 in mapvalues(::Function, ::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:238
 in mapvalues at /home/vagrant/.julia/v0.5/DataCubes/src/util/array_util.jl:727 [inlined]
 in transpose(::DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:305
 in (::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##31#454)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:83
 in context(::TestDataCubes.TestDictArray.##31#454, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:50
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
  > additional method tests
WARNING: x::Char == y::Integer is deprecated, use UInt32(x) == y instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in ==(::Char, ::Int64) at ./deprecated.jl:50
 in findnext(::Array{Any,1}, ::Int64, ::Int64) at ./array.jl:839
 in #9 at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:54 [inlined]
 in map(::DataCubes.##9#10{Array{Any,1},Array{DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}},1}}, ::Array{Any,1}) at ./essentials.jl:124
 in create_ldict_nocheck(::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}}}, ::Array{Any,1}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:54
 in reorder(::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}}}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:271
 in reorder(::DataCubes.DictArray{Any,1,DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}},Nullable{Int64}}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:1094
 in do_fact(::TestDataCubes.TestDictArray.##317#740{TestDataCubes.TestDictArray.##316#739}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##116#539)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:190
 in context(::TestDataCubes.TestDictArray.##116#539, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:101
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
2 DictArray

a          
-----------
0.91030774 
0.78428252 
2 x 3 DictArray

a          |a          |a          
-----------+-----------+-----------
0.9987523  |0.712078   |0.14096901 
0.96018769 |0.20065816 |0.2115625  
2 x 3 x 2 DictArray

[:,:,1]
2 x 3 DictArray

    a          |a          |a          
    -----------+-----------+-----------
    0.89608337 |0.85239075 |0.9331973  
    0.58150005 |0.54522497 |0.12485518 

[:,:,2]
2 x 3 DictArray

    a          |a          |a          
    -----------+-----------+-----------
    0.49920438 |0.2487846  |0.68101456 
    0.84461187 |0.51432234 |0.24491422 
2 x 3 x 2 x 2 DictArray

[:,:,:,1]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.61876825 |0.7308962  |0.5263919  
        0.53063572 |0.12494809 |0.68880857 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.9561807  |0.41244875 |0.13938795 
        0.67194743 |0.98699494 |0.45407163 

[:,:,:,2]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.90597685 |0.4734856  |0.98413116 
        0.82631913 |0.93503913 |0.81502973 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a           
        -----------+-----------+------------
        0.30394306 |0.39945172 |0.073651439 
        0.67085504 |0.59968535 |0.34917025  
    > show tests
0 dimensional DictArray
DataCubes.LDict(:a=>1)0 DictArray

a 
2 DictArray

a          
-----------
0.12990478 
0.14637152 
2 x 3 DictArray

a           |a          |a          
------------+-----------+-----------
0.061137771 |0.60167896 |0.50459835 
0.69416565  |0.58025353 |0.39721175 
2 x 3 x 2 DictArray

[:,:,1]
2 x 3 DictArray

    a          |a          |a           
    -----------+-----------+------------
    0.23927249 |0.42380936 |0.90442367  
    0.78123944 |0.62193312 |0.061103835 

[:,:,2]
2 x 3 DictArray

    a          |a           |a          
    -----------+------------+-----------
    0.55036339 |0.090483867 |0.12764548 
    0.99418382 |0.55066048  |0.84124978 
2 x 3 x 2 x 2 DictArray

[:,:,:,1]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.61462938 |0.32213041 |0.50204709 
        0.43609266 |0.45747728 |0.18788637 

    [:,:,2]
2 x 3 DictArray

        a           |a          |a          
        ------------+-----------+-----------
        0.013432691 |0.15081871 |0.41550468 
        0.74585119  |0.87383123 |0.62691377 

[:,:,:,2]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a           |a          
        -----------+------------+-----------
        0.76934981 |0.48405369  |0.35712817 
        0.68837731 |0.036036545 |0.86065852 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.110176   |0.20133028 |0.9113231  
        0.84822693 |0.63269774 |0.35782314 
2 x 3 x 2 x 2 DictArray

[:,:,:,1]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.7892298  |0.23315227 |0.99984497 
        0.37553085 |0.76419501 |0.36322727 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a           
        -----------+-----------+------------
        0.30583323 |0.20109106 |0.55340099  
        0.21292927 |0.6610175  |0.014509684 

[:,:,:,2]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a             |a           
        -----------+--------------+------------
        0.32278239 |0.00073601596 |0.042969589 
        0.19452635 |0.32269805    |0.38199569  

    [:,:,2]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.71133595 |0.45925797 |0.86385835 
        0.7189953  |0.40231287 |0.76360211 
10 x 10 DictArray

a     ...
-----
0.2.. ...
0.4.. ...
0.9.. ...
0.5.. ...
:
10 x 10 DictArray

a     ...
-----
0.9.. ...
0.7.. ...
:
10 x 10 DictArray

a   ...
---
0.. ...
0.. ...
:
3 DictArray

a |0.020616302 
b |0.013937755 
c |X           
--+------------
a |0.54092767  
b |0.73088952  
c |X           
--+------------
a |0.2660002   
b |0.81479355  
c |X           
3 DictArray

a          b          c 
------------------------
0.48400159 0.97180364 X 
0.97406789 0.56254124 X 
0.35639529 0.73300512 X 
3 x 5 DictArray

a |0.68636791  0.88998566 0.99085275 0.36726385 0.66010938  
b |0.32426094  0.57398284 0.42663102 0.21291526 0.070263395 
c |X           X          X          X          X           
--+---------------------------------------------------------
a |0.81817364  0.57210849 0.76198569 0.56445684 0.9063737   
b |0.48828977  0.1055912  0.59684389 0.27481935 0.38958004  
c |X           X          X          X          X           
--+---------------------------------------------------------
a |0.58598616  0.55382987 0.87056586 0.59962074 0.87505168  
b |0.042377594 0.4131192  0.65141016 0.3684412  0.86031862  
c |X           X          X          X          X           
3 x 5 DictArray

a          b          c |a           b          c |a          b          .. ...
------------------------+-------------------------+----------------------
0.50095288 0.33750893 X |0.038999843 0.3077946  X |0.21833419 0.69434118 .. ...
0.66461248 0.20357152 X |0.98815391  0.66959643 X |0.25871568 0.62796133 .. ...
0.52844713 0.95627019 X |0.52151156  0.80240694 X |0.88278345 0.92023614 .. ...
3 x 5 DictArray

a    b    c |a    b    c |a    b    c |a    b    c |a    b    c 
------------+------------+------------+------------+------------
0.27 0.40 X |0.92 0.18 X |0.57 0.25 X |0.68 0.54 X |0.02 0.52 X 
0.46 0.55 X |0.60 0.21 X |0.08 0.66 X |0.50 0.77 X |0.35 0.64 X 
0.56 0.95 X |0.01 0.82 X |0.54 0.39 X |0.48 0.33 X |0.48 0.40 X 
3 x 5 DictArray

a          b          c |a           b          c |a          b          .. ...
------------------------+-------------------------+----------------------
0.24815828 0.21355252 X |0.20144833  0.47707448 X |0.90655832 0.95294488 .. ...
0.18731043 0.88368394 X |0.070144853 0.93279363 X |0.30004555 0.20397708 .. ...
0.51142588 0.93264884 X |0.94383354  0.35469624 X |0.13412226 0.50484608 .. ...
10 x 10 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.19904588</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.10527542</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.71089863</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.1297362</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">0.80851492</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.87030614</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.83624184</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.40083579</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">0.68865683</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.22002422</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.73461649</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.81163334</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.68378721</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.47916218</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.25550298</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.90758825</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.17454468</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.70601766</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>2 x 3 x 4 DictArray
<ul><li>[:,:,1]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.30023003</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.31439525</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>[:,:,2]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.66204825</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.17374685</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>[:,:,3]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.14836661</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.74459111</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>[:,:,4]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.82034927</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.081983785</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li></ul>0 dimensional DictArray3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.10963437</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.94737237</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.6488029</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.5420824</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.00</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.88</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.62378521</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.16779926</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>175 facts verified.
LabeledArray tests
  > constructor tests
  > array related method tests
  > additional method tests
    > show tests
0 dimensional LabeledArray
10 LabeledArray

 |a 
2 LabeledArray

  |a          
--+-----------
1 |0.37868366 
2 |0.87177265 
2 LabeledArray

  |a          
--+-----------
X |0.39155108 
Y |0.39558159 
2 x 3 LabeledArray

  |X          |Y          |Z   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
a |0.83321234 |0.57066771 |0.. 
b |0.11518647 |0.67231801 |0.. 
2 x 3 LabeledArray

  |X          |Y          |Z   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
1 |0.65832693 |0.87800657 |0.. 
2 |0.91673738 |0.2350547  |0.. 
2 x 3 LabeledArray

k |X          |Y          |Z   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
1 |0.67563239 |0.85444437 |0.. 
2 |0.14668775 |0.78505245 |0.. 
2 x 3 LabeledArray

  |1           |2          |.. 
--+------------+-----------+--
  |a           |a          |.. 
--+------------+-----------+--
X |0.99064872  |0.79746295 |.. 
Y |0.038001858 |0.19683038 |.. 
2 x 3 LabeledArray

  |1          |2          |3   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
1 |0.95553582 |0.52302172 |0.. 
2 |0.19005051 |0.55174814 |0.. 
2 x 3 x 2 LabeledArray

Nullable{Symbol}(:x) [:,:,1]
2 x 3 LabeledArray

      |1          |2          |.. 
    --+-----------+-----------+
      |a          |a          |.. 
    --+-----------+-----------+
    1 |0.55299148 |0.24537433 |.. 
    2 |0.56770596 |0.68535168 |.. 

Nullable{Symbol}(:y) [:,:,2]
2 x 3 LabeledArray

      |1           |2          ...
    --+------------+----------
      |a           |a          ...
    --+------------+----------
    1 |0.70007312  |0.25465536 ...
    2 |0.076297712 |0.95515165 ...
2 x 3 x 2 x 2 LabeledArray

Nullable{Int64}(1) [:,:,:,1]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.14410434 |0.136.. ...
        2 |0.98456577 |0.113.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.64953101 |0.978.. ...
        2 |0.25548202 |0.846.. ...

Nullable{Int64}(2) [:,:,:,2]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.57292571 |0.321.. ...
        2 |0.02894034 |0.493.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.55206836 |0.939.. ...
        2 |0.61236502 |0.917.. ...
2 x 3 x 2 x 2 LabeledArray

Nullable{Int64}(1) [:,:,:,1]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1            |2     ...
        --+-------------+-----
          |a            |a     ...
        --+-------------+-----
        1 |0.27490055   |0.3.. ...
        2 |0.0016978233 |0.4.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.8149134  |0.860.. ...
        2 |0.49871947 |0.911.. ...

Nullable{Int64}(2) [:,:,:,2]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.65837232 |0.293.. ...
        2 |0.65022456 |0.774.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1           |2      ...
        --+------------+------
          |a           |a      ...
        --+------------+------
        1 |0.99387829  |0.41.. ...
        2 |0.096921154 |0.29.. ...
10 x 10 LabeledArray

  |.. ...
--+--
  |.. ...
--+--
1 |.. ...
2 |.. ...
: |:
10 x 10 LabeledArray

  |.. ...
--+--
  |.. ...
--+--
1 |.. ...
: |:
10 x 10 LabeledArray

  |.. ...
--+
  |.. ...
--+
1 |.. ...
: |:
3 LabeledArray

  |  |            
--+--+------------
1 |a |0.5669364   
1 |b |0.42316999  
1 |c |X           
--+--+------------
2 |a |0.84412891  
2 |b |0.36084493  
2 |c |X           
--+--+------------
3 |a |0.32631704  
3 |b |0.097207057 
3 |c |X           
3 LabeledArray

  |  |            
--+--+------------
X |a |0.83578242  
X |b |0.43567555  
X |c |X           
--+--+------------
Y |a |0.8000188   
Y |b |0.078377751 
Y |c |X           
--+--+------------
Z |a |0.13626453  
Z |b |0.36934635  
Z |c |X           
3 LabeledArray

k |  |            
--+--+------------
X |a |0.044702165 
  |b |0.81659825  
  |c |X           
--+--+------------
Y |a |0.089831633 
  |b |0.84962342  
  |c |X           
--+--+------------
Z |a |0.67053813  
  |b |0.53044991  
  |c |X           
3 LabeledArray

  |a          b          c 
--+------------------------
1 |0.60689387 0.47201949 X 
2 |0.24324173 0.4123337  X 
3 |0.46487743 0.65822298 X 
3 x 5 LabeledArray

  |  |1           2           3          4          5          
--+--+---------------------------------------------------------
1 |a |0.12545644  0.81971574  0.18970933 0.60586763 0.76203974 
  |b |0.64486142  0.80199327  0.63599121 0.88619469 0.41216651 
  |c |X           X           X          X          X          
--+--+---------------------------------------------------------
2 |a |0.011950945 0.72588636  0.55238724 0.61562161 0.17500035 
  |b |0.212827    0.036013456 0.34003506 0.54017646 0.53245577 
  |c |X           X           X          X          X          
--+--+---------------------------------------------------------
3 |a |0.62332542  0.71567759  0.17155121 0.84852627 0.21626517 
  |b |0.27939597  0.4073089   0.14751656 0.69966685 0.64069999 
  |c |X           X           X          X          X          
3 x 5 LabeledArray

k |  |1           2          3          4            5          
--+--+----------------------------------------------------------
X |a |0.58375158  0.91077808 0.21638852 0.89911327   0.98901223 
  |b |0.094153394 0.29311363 0.32151203 0.03059931   0.37806066 
  |c |X           X          X          X            X          
--+--+----------------------------------------------------------
Y |a |0.59855117  0.31916574 0.98181305 0.64702368   0.51356447 
  |b |0.60083586  0.31794409 0.22528407 0.0064953048 0.51871905 
  |c |X           X          X          X            X          
--+--+----------------------------------------------------------
Z |a |0.23841897  0.64506976 0.43875637 0.64422617   0.9011429  
  |b |0.76925342  0.56130151 0.54655631 0.19564029   0.48305624 
  |c |X           X          X          X            X          
3 x 5 LabeledArray

  |1                        |2                        |3                  ...
--+-------------------------+-------------------------+------------------
k |a          b           c |a          b           c |a          b       ...
--+-------------------------+-------------------------+------------------
X |0.84762008 0.97505097  X |0.17026395 0.60976078  X |0.1742356  0.914.. ...
Y |0.66187071 0.21177138  X |0.76429058 0.030693328 X |0.77776208 0.388.. ...
Z |0.04033094 0.081569046 X |0.66360938 0.93032181  X |0.67107381 0.779.. ...
3 x 5 LabeledArray

  |k |X          Y          Z          U          V          
--+--+-------------------------------------------------------
1 |a |0.36784112 0.22387206 0.17203692 0.15013525 0.3533269  
  |b |0.73763521 0.35878666 0.14613638 0.23131577 0.79515296 
  |c |X          X          X          X          X          
--+--+-------------------------------------------------------
2 |a |0.33081221 0.49513278 0.25382241 0.28457109 0.33589544 
  |b |0.70709483 0.37832241 0.18185683 0.21121528 0.68453719 
  |c |X          X          X          X          X          
--+--+-------------------------------------------------------
3 |a |0.20869969 0.85256355 0.30850105 0.97323919 0.32438374 
  |b |0.67049662 0.50001538 0.68954673 0.35321557 0.45779104 
  |c |X          X          X          X          X          
3 x 5 LabeledArray

k |X                       |Y                       |Z                    ...
--+------------------------+------------------------+--------------------
  |a          b          c |a          b          c |a          b         ...
--+------------------------+------------------------+--------------------
1 |0.67484928 0.36442653 X |0.58823879 0.18805399 X |0.56950721 0.42767.. ...
2 |0.1968074  0.60925312 X |0.65124321 0.13768183 X |0.64628894 0.44422.. ...
3 |0.92068272 0.88361689 X |0.27746127 0.22486825 X |0.98030158 0.61987.. ...
3 x 5 LabeledArray

  |1                       |2                       |3                    ...
--+------------------------+------------------------+--------------------
  |a          b          c |a          b          c |a          b         ...
--+------------------------+------------------------+--------------------
1 |0.98045502 0.11189991 X |0.75768947 0.61930816 X |0.88919454 0.60463.. ...
2 |0.90263886 0.58042997 X |0.36229617 0.30864875 X |0.51482048 0.24828.. ...
3 |0.78299258 0.76273655 X |0.15823658 0.67864233 X |0.28636934 0.88759.. ...
3 x 5 LabeledArray

  |1           |2           |3           |4           |5           
--+------------+------------+------------+------------+------------
  |a    b    c |a    b    c |a    b    c |a    b    c |a    b    c 
--+------------+------------+------------+------------+------------
1 |0.99 0.57 X |0.35 0.95 X |0.78 0.53 X |0.64 0.99 X |0.31 0.49 X 
2 |0.15 0.37 X |0.26 0.05 X |0.68 0.08 X |0.63 0.88 X |0.77 0.22 X 
3 |0.42 0.08 X |0.94 0.76 X |0.78 0.53 X |0.83 0.50 X |0.20 0.98 X 
3 x 5 LabeledArray

  |1                         |2                        |3                 ...
--+--------------------------+-------------------------+-----------------
  |a           b           c |a           b          c |a          b      ...
--+--------------------------+-------------------------+-----------------
1 |0.098629271 0.039110199 X |0.082889364 0.54883657 X |0.37146287 0.80.. ...
2 |0.67776242  0.24040439  X |0.93140148  0.58824755 X |0.31934454 0.95.. ...
3 |0.81100228  0.02379583  X |0.15136762  0.85922457 X |0.92157965 0.58.. ...
10 x 10 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">2</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">3</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">1</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.34435607</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.42133854</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.44393238</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">2</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.37182252</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.26717075</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.86287159</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">2</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">3</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>2 x 3 x 4 LabeledArray
<ul><li>Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>Nullable{Int64}(3) [:,:,3]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>Nullable{Int64}(4) [:,:,4]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li></ul>0 dimensional LabeledArray3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px"></td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">1</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>190 facts verified.
NA tests
  > FloatNAArray tests
94 facts verified.
NAArrayOperators tests
  > AbstractArrayWrapper tests
  > ifelse tests
346 facts verified.
ArrayUtil tests
  > type_array tests
  > AbstractArrayWrapper tests
  > Array transformation tools tests
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Int64} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Int64})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Int64}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in (::TestDataCubes.TestArrayUtil.##107#727)(::DataCubes.LabeledArray{Nullable{Any},2,Tuple{DataCubes.DefaultAxis,DataCubes.AbstractArrayWrapper{Nullable{Symbol},1,Array{Nullable{Symbol},1}}},DataCubes.AbstractArrayWrapper{Nullable{Any},2,Array{Nullable{Any},2}}}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
 in (::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestArrayUtil.##18#638)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:98
 in context(::TestDataCubes.TestArrayUtil.##18#638, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestArrayUtil.##1#621)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:20
 in facts(::TestDataCubes.TestArrayUtil.##1#621, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl, in expression starting on line 8
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Symbol} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Symbol})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Symbol}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in (::TestDataCubes.TestArrayUtil.##107#727)(::DataCubes.LabeledArray{Nullable{Any},2,Tuple{DataCubes.DefaultAxis,DataCubes.AbstractArrayWrapper{Nullable{Symbol},1,Array{Nullable{Symbol},1}}},DataCubes.AbstractArrayWrapper{Nullable{Any},2,Array{Nullable{Any},2}}}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
 in (::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestArrayUtil.##18#638)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:98
 in context(::TestDataCubes.TestArrayUtil.##18#638, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestArrayUtil.##1#621)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:20
 in facts(::TestDataCubes.TestArrayUtil.##1#621, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl, in expression starting on line 8
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Char} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Char})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Char}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in (::TestDataCubes.TestArrayUtil.##107#727)(::DataCubes.LabeledArray{Nullable{Any},2,Tuple{DataCubes.DefaultAxis,DataCubes.AbstractArrayWrapper{Nullable{Symbol},1,Array{Nullable{Symbol},1}}},DataCubes.AbstractArrayWrapper{Nullable{Any},2,Array{Nullable{Any},2}}}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
 in (::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestArrayUtil.##18#638)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:98
 in context(::TestDataCubes.TestArrayUtil.##18#638, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestArrayUtil.##1#621)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:20
 in facts(::TestDataCubes.TestArrayUtil.##1#621, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl, in expression starting on line 8
  > Misc functions tests
  > darr/larr tests
  > enumeration array tests
  > extract/discard tests
271 facts verified.
DataFrameInterface tests
  > RDatasets readability tests
14 facts verified.
Join tests
  > larr version tests
  > darr version tests
34 facts verified.
Select tests
  > @select tests
    > aggregate tests
    > condition tests
    > by tests
  > selct tests
    > aggregate tests
    > condition tests
    > by tests
  > @update tests
    > aggregate tests
    > condition tests
  > update tests
    > aggregate tests
    > condition tests
  > conversion tests
  > @select misc tests
  > selct misc tests
  > misc @update misc tests
  > misc tests
171 facts verified.
Sort tests
2036 facts verified.
Ungroup tests
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{AbstractArray{T,1}} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{AbstractArray{T,1}})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{AbstractArray{T,1}}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{AbstractArray{T,1}},2}, ::Array{Nullable{AbstractArray{T,1}},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{AbstractArray{T,1}},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in (::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestUngroup.##1#44)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl:13
 in facts(::TestDataCubes.TestUngroup.##1#44, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{String} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{String})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{String}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in #8 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260 [inlined]
 in (::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestUngroup.##1#44)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl:13
 in facts(::TestDataCubes.TestUngroup.##1#44, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Array{Int64,1}} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Array{Int64,1}})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Array{Int64,1}}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{Array{Int64,1}},2}, ::Array{Nullable{Array{Int64,1}},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{Array{Int64,1}},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in (::TestDataCubes.TestUngroup.##21#64{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}},TestDataCubes.TestUngroup.##20#63{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestUngroup.##21#64{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}},TestDataCubes.TestUngroup.##20#63{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestUngroup.##1#44)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl:21
 in facts(::TestDataCubes.TestUngroup.##1#44, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl, in expression starting on line 7
  > simple combining multiple table tests
19 facts verified.
Set Operations tests
  > unique test
  > union test
  > intersect test
  > setdiff test
75 facts verified.
ArrayHelperFunctions tests
  > nullable array tests
  > darr tests
  > larr tests
  > reverse tests
  > nafill tests
  > describe tests
316 facts verified.
EnumerationArray tests
  > enumerations in labeled array tests
81 facts verified.
INFO: DataCubes tests passed
INFO: Removing FactCheck v0.4.3
INFO: Removing RData v0.0.4
INFO: Removing RDatasets v0.2.0

>>> End of log
