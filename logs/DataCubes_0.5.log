>>> 'Pkg.add("DataCubes")' log
INFO: Cloning cache of DataCubes from https://github.com/c-s/DataCubes.jl.git
INFO: Installing DataArrays v0.3.10
INFO: Installing DataCubes v0.1.0
INFO: Installing DataFrames v0.8.4
INFO: Installing FileIO v0.2.0
INFO: Installing Formatting v0.2.0
INFO: Installing GZip v0.2.20
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Package database updated

>>> 'Pkg.test("DataCubes")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1032.515625 MB free)
Uptime: 17055.0 sec
Load Avg:  1.01513671875  1.39892578125  1.6982421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1070385 s       1974 s      86768 s     346448 s         10 s
#2  3499 MHz     456463 s       3781 s      50714 s    1143583 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DataCubes                     0.1.0
 - JSON                          0.8.0
9 additional packages:
 - Compat                        0.9.3
 - DataArrays                    0.3.10
 - DataFrames                    0.8.4
 - FileIO                        0.2.0
 - Formatting                    0.2.0
 - GZip                          0.2.20
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
INFO: Computing test dependencies for DataCubes...
INFO: Installing FactCheck v0.4.3
INFO: Installing RData v0.0.4
INFO: Installing RDatasets v0.2.0
INFO: Testing DataCubes

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.

WARNING: deprecated syntax "inds::Core.apply_type(Array,Int,1)".
Use "local inds::Core.apply_type(Array,Int,1)" instead.
LDict tests
  > constructor tests
  > method tests
18 facts verified.
DictArray tests
  > constructor tests
    > basic tests
    > constructing DictArrays with null elements...
  > array related method tests
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Int64} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Int64})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Int64}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{Int64},2}, ::Array{Nullable{Int64},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{Int64},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in _collect(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:320
 in mapvalues(::Function, ::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:238
 in mapvalues at /home/vagrant/.julia/v0.5/DataCubes/src/util/array_util.jl:727 [inlined]
 in transpose(::DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:305
 in (::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##31#454)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:83
 in context(::TestDataCubes.TestDictArray.##31#454, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:50
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Symbol} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Symbol})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Symbol}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{Symbol},2}, ::Array{Nullable{Symbol},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{Symbol},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:340
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{Nullable{Int64},2,Array{Nullable{Int64},2}},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:350
 in _collect(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:321
 in mapvalues(::Function, ::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:238
 in mapvalues at /home/vagrant/.julia/v0.5/DataCubes/src/util/array_util.jl:727 [inlined]
 in transpose(::DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:305
 in (::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##31#454)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:83
 in context(::TestDataCubes.TestDictArray.##31#454, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:50
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{String} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{String})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{String}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{String},2}, ::Array{Nullable{String},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{String},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in next at ./generator.jl:26 [inlined]
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:340
 in collect_to!(::Array{DataCubes.AbstractArrayWrapper{Nullable{Int64},2,Array{Nullable{Int64},2}},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Int64, ::Int64) at ./array.jl:350
 in _collect(::Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1}, ::Base.Generator{Array{DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},1},Base.#transpose}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:321
 in mapvalues(::Function, ::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:238
 in mapvalues at /home/vagrant/.julia/v0.5/DataCubes/src/util/array_util.jl:727 [inlined]
 in transpose(::DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:305
 in (::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestDictArray.##68#491{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}},TestDataCubes.TestDictArray.##67#490{DataCubes.DictArray{Any,2,DataCubes.AbstractArrayWrapper{T,2,A<:AbstractArray},Nullable{Any}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##31#454)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:83
 in context(::TestDataCubes.TestDictArray.##31#454, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:50
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
  > additional method tests
WARNING: x::Char == y::Integer is deprecated, use UInt32(x) == y instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in ==(::Char, ::Int64) at ./deprecated.jl:50
 in findnext(::Array{Any,1}, ::Int64, ::Int64) at ./array.jl:839
 in #9 at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:54 [inlined]
 in map(::DataCubes.##9#10{Array{Any,1},Array{DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}},1}}, ::Array{Any,1}) at ./essentials.jl:124
 in create_ldict_nocheck(::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}}}, ::Array{Any,1}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:54
 in reorder(::DataCubes.LDict{Any,DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}}}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/ldict.jl:271
 in reorder(::DataCubes.DictArray{Any,1,DataCubes.AbstractArrayWrapper{Nullable{Int64},1,Array{Nullable{Int64},1}},Nullable{Int64}}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/DataCubes/src/datatypes/dict_array.jl:1094
 in do_fact(::TestDataCubes.TestDictArray.##317#740{TestDataCubes.TestDictArray.##316#739}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestDictArray.##116#539)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:190
 in context(::TestDataCubes.TestDictArray.##116#539, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestDictArray.##1#424)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl:101
 in facts(::TestDataCubes.TestDictArray.##1#424, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_dict_array.jl, in expression starting on line 7
2 DictArray

a          
-----------
0.79168354 
0.15983014 
2 x 3 DictArray

a          |a          |a          
-----------+-----------+-----------
0.28615808 |0.29630895 |0.13072651 
0.69751182 |0.96195934 |0.57972749 
2 x 3 x 2 DictArray

[:,:,1]
2 x 3 DictArray

    a          |a          |a          
    -----------+-----------+-----------
    0.19157495 |0.49163653 |0.56236937 
    0.72401158 |0.87284947 |0.63217293 

[:,:,2]
2 x 3 DictArray

    a           |a          |a          
    ------------+-----------+-----------
    0.25075227  |0.63921853 |0.47394298 
    0.052569516 |0.44631121 |0.21999062 
2 x 3 x 2 x 2 DictArray

[:,:,:,1]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a           
        -----------+-----------+------------
        0.24356128 |0.81684079 |0.41589067  
        0.70721261 |0.67127326 |0.041171439 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.47776273 |0.54929016 |0.45266635 
        0.45398112 |0.22822581 |0.77816028 

[:,:,:,2]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a           |a          |a          
        ------------+-----------+-----------
        0.25516002  |0.22286756 |0.13349441 
        0.082027544 |0.16447909 |0.97056836 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.83243376 |0.36816478 |0.13897982 
        0.53454629 |0.93884985 |0.64425038 
    > show tests
0 dimensional DictArray
DataCubes.LDict(:a=>1)0 DictArray

a 
2 DictArray

a          
-----------
0.86755855 
0.11158156 
2 x 3 DictArray

a          |a          |a          
-----------+-----------+-----------
0.24798356 |0.17156985 |0.37504305 
0.574553   |0.85959288 |0.38541165 
2 x 3 x 2 DictArray

[:,:,1]
2 x 3 DictArray

    a          |a          |a          
    -----------+-----------+-----------
    0.31088185 |0.02866962 |0.05718895 
    0.82065736 |0.22343134 |0.85474639 

[:,:,2]
2 x 3 DictArray

    a          |a          |a           
    -----------+-----------+------------
    0.14146893 |0.55740712 |0.4377792   
    0.45576822 |0.51150149 |0.022967937 
2 x 3 x 2 x 2 DictArray

[:,:,:,1]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.83214668 |0.97290234 |0.67034388 
        0.689062   |0.59387707 |0.17855761 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.48855681 |0.29623426 |0.31925003 
        0.52846098 |0.11415458 |0.50885943 

[:,:,:,2]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.45274904 |0.78236226 |0.94039231 
        0.99826349 |0.34291846 |0.47199557 

    [:,:,2]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.83357299 |0.41942686 |0.99303635 
        0.53235169 |0.9949318  |0.24194915 
2 x 3 x 2 x 2 DictArray

[:,:,:,1]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a           
        -----------+-----------+------------
        0.20217179 |0.32719875 |0.025352124 
        0.51210736 |0.96271467 |0.36273545  

    [:,:,2]
2 x 3 DictArray

        a           |a           |a          
        ------------+------------+-----------
        0.053716402 |0.075668662 |0.59877738 
        0.044331145 |0.98721668  |0.91785212 

[:,:,:,2]
2 x 3 x 2 DictArray

    [:,:,1]
2 x 3 DictArray

        a          |a          |a          
        -----------+-----------+-----------
        0.55865596 |0.56375753 |0.31738568 
        0.25966979 |0.49261801 |0.0583127  

    [:,:,2]
2 x 3 DictArray

        a           |a           |a           
        ------------+------------+------------
        0.48292376  |0.089106419 |0.30137708  
        0.082270399 |0.84316252  |0.023171487 
10 x 10 DictArray

a     ...
-----
0.9.. ...
0.0.. ...
0.5.. ...
0.2.. ...
:
10 x 10 DictArray

a     ...
-----
0.2.. ...
0.5.. ...
:
10 x 10 DictArray

a   ...
---
0.. ...
0.. ...
:
3 DictArray

a |0.65210032  
b |0.24668544  
c |X           
--+------------
a |0.091272646 
b |0.89678049  
c |X           
--+------------
a |0.22168193  
b |0.62336527  
c |X           
3 DictArray

a          b          c 
------------------------
0.60486008 0.89077179 X 
0.55877374 0.25652994 X 
0.85821209 0.92572389 X 
3 x 5 DictArray

a |0.013808493 0.97097325 0.56701319  0.8781178   0.54218546  
b |0.78816794  0.82925349 0.069855737 0.65633288  0.22826155  
c |X           X          X           X           X           
--+-----------------------------------------------------------
a |0.88506518  0.56928191 0.21839967  0.016889028 0.044945879 
b |0.78076605  0.47192208 0.60906355  0.45164016  0.12353648  
c |X           X          X           X           X           
--+-----------------------------------------------------------
a |0.10271299  0.57064399 0.61246452  0.76923261  0.62023565  
b |0.96375406  0.24839403 0.49581867  0.61850535  0.93272812  
c |X           X          X           X           X           
3 x 5 DictArray

a          b          c |a          b          c |a          b          c ...
------------------------+------------------------+-----------------------
0.94484783 0.80592676 X |0.88618097 0.68537256 X |0.91485199 0.72018102 X ...
0.47419601 0.70212823 X |0.7505316  0.89187822 X |0.90774627 0.7362538  X ...
0.72821623 0.24899131 X |0.38013089 0.50392152 X |0.84704386 0.7609038  X ...
3 x 5 DictArray

a    b    c |a    b    c |a    b    c |a    b    c |a    b    c 
------------+------------+------------+------------+------------
0.51 0.11 X |0.85 0.45 X |0.38 0.69 X |0.43 0.91 X |0.37 0.59 X 
0.82 0.89 X |0.55 0.19 X |0.35 0.59 X |0.25 0.11 X |0.52 0.94 X 
0.84 0.67 X |0.79 0.63 X |0.48 0.58 X |0.72 0.68 X |0.82 0.97 X 
3 x 5 DictArray

a          b          c |a          b          c |a           b          .. ...
------------------------+------------------------+-----------------------
0.69693997 0.26844316 X |0.79780657 0.89591944 X |0.018276668 0.21012355 .. ...
0.4797689  0.44156544 X |0.17428524 0.62223416 X |0.48365941  0.97600721 .. ...
0.48986041 0.95089116 X |0.70851927 0.78966232 X |0.9136807   0.37561743 .. ...
10 x 10 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.64540456</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.90378404</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.2044439</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.16480007</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">0.69977425</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.46852848</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.59689487</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.84894383</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">0.67008734</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.71587522</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.95838178</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.27650485</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.67400105</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.45707173</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.32133488</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.56336677</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.84327064</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.87976194</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>2 x 3 x 4 DictArray
<ul><li>[:,:,1]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.45493836</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.13523159</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>[:,:,2]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.22292855</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.43534</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>[:,:,3]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.24887469</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.28678745</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>[:,:,4]
2 x 3 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.69241361</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.34804423</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li></ul>0 dimensional DictArray3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.087569172</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.82636834</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.060573001</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.31624992</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.81</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.96</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 DictArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">a</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">b</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.7085637</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">0.1086307</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>175 facts verified.
LabeledArray tests
  > constructor tests
  > array related method tests
  > additional method tests
    > show tests
0 dimensional LabeledArray
10 LabeledArray

 |a 
2 LabeledArray

  |a          
--+-----------
1 |0.99226227 
2 |0.75055972 
2 LabeledArray

  |a          
--+-----------
X |0.36733524 
Y |0.97629776 
2 x 3 LabeledArray

  |X          |Y          |Z   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
a |0.70600763 |0.39275643 |0.. 
b |0.93889007 |0.71013846 |0.. 
2 x 3 LabeledArray

  |X           |Y         |Z   
--+------------+----------+---
  |a           |a         |a   
--+------------+----------+---
1 |0.082425951 |0.9720873 |0.. 
2 |0.93242337  |0.8262183 |0.. 
2 x 3 LabeledArray

k |X          |Y          |Z   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
1 |0.39259548 |0.53546497 |0.. 
2 |0.95720244 |0.90861504 |0.. 
2 x 3 LabeledArray

  |1          |2          |3   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
X |0.58250908 |0.50304935 |0.. 
Y |0.80384489 |0.73069817 |0.. 
2 x 3 LabeledArray

  |1          |2          |3   
--+-----------+-----------+---
  |a          |a          |a   
--+-----------+-----------+---
1 |0.15199316 |0.2794864  |0.. 
2 |0.96632926 |0.40412409 |0.. 
2 x 3 x 2 LabeledArray

Nullable{Symbol}(:x) [:,:,1]
2 x 3 LabeledArray

      |1          |2          |.. 
    --+-----------+-----------+
      |a          |a          |.. 
    --+-----------+-----------+
    1 |0.11327448 |0.59081217 |.. 
    2 |0.78741281 |0.96706605 |.. 

Nullable{Symbol}(:y) [:,:,2]
2 x 3 LabeledArray

      |1          |2          |.. 
    --+-----------+-----------+
      |a          |a          |.. 
    --+-----------+-----------+
    1 |0.38357704 |0.20495154 |.. 
    2 |0.42070235 |0.18483899 |.. 
2 x 3 x 2 x 2 LabeledArray

Nullable{Int64}(1) [:,:,:,1]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1           |2      ...
        --+------------+------
          |a           |a      ...
        --+------------+------
        1 |0.51446195  |0.44.. ...
        2 |0.047521509 |0.22.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.72232192 |0.379.. ...
        2 |0.42244467 |0.014.. ...

Nullable{Int64}(2) [:,:,:,2]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.99256238 |0.679.. ...
        2 |0.43186612 |0.336.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.84789721 |0.460.. ...
        2 |0.41675692 |0.381.. ...
2 x 3 x 2 x 2 LabeledArray

Nullable{Int64}(1) [:,:,:,1]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1           |2      ...
        --+------------+------
          |a           |a      ...
        --+------------+------
        1 |0.29475841  |0.06.. ...
        2 |0.095718893 |0.07.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.45730318 |0.629.. ...
        2 |0.11806486 |0.470.. ...

Nullable{Int64}(2) [:,:,:,2]
2 x 3 x 2 LabeledArray

    Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.55361051 |0.372.. ...
        2 |0.67613746 |0.890.. ...

    Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray

          |1          |2       ...
        --+-----------+-------
          |a          |a       ...
        --+-----------+-------
        1 |0.15019268 |0.721.. ...
        2 |0.45995654 |0.831.. ...
10 x 10 LabeledArray

  |.. ...
--+--
  |.. ...
--+--
1 |.. ...
2 |.. ...
: |:
10 x 10 LabeledArray

  |.. ...
--+--
  |.. ...
--+--
1 |.. ...
: |:
10 x 10 LabeledArray

  |.. ...
--+
  |.. ...
--+
1 |.. ...
: |:
3 LabeledArray

  |  |           
--+--+-----------
1 |a |0.43837972 
1 |b |0.20330381 
1 |c |X          
--+--+-----------
2 |a |0.91599184 
2 |b |0.18059014 
2 |c |X          
--+--+-----------
3 |a |0.33749995 
3 |b |0.51776037 
3 |c |X          
3 LabeledArray

  |  |            
--+--+------------
X |a |0.73418835  
X |b |0.5510603   
X |c |X           
--+--+------------
Y |a |0.70442577  
Y |b |0.10703392  
Y |c |X           
--+--+------------
Z |a |0.56795988  
Z |b |0.083499886 
Z |c |X           
3 LabeledArray

k |  |           
--+--+-----------
X |a |0.54266834 
  |b |0.55823349 
  |c |X          
--+--+-----------
Y |a |0.92790036 
  |b |0.78582323 
  |c |X          
--+--+-----------
Z |a |0.98538618 
  |b |0.5501876  
  |c |X          
3 LabeledArray

  |a          b          c 
--+------------------------
1 |0.12109352 0.71015575 X 
2 |0.30367229 0.17017459 X 
3 |0.35618394 0.83313196 X 
3 x 5 LabeledArray

  |  |1           2          3           4           5          
--+--+----------------------------------------------------------
1 |a |0.80569512  0.51543973 0.52437059  0.64142352  0.12044894 
  |b |0.4996135   0.56457737 0.46900017  0.56563251  0.4006282  
  |c |X           X          X           X           X          
--+--+----------------------------------------------------------
2 |a |0.19901935  0.82168515 0.059693644 0.091754706 0.54641148 
  |b |0.086584724 0.15223473 0.34778818  0.21374748  0.92420003 
  |c |X           X          X           X           X          
--+--+----------------------------------------------------------
3 |a |0.84407393  0.46332448 0.34257577  0.73284904  0.35286103 
  |b |0.65226037  0.61490049 0.53734996  0.27022909  0.69001894 
  |c |X           X          X           X           X          
3 x 5 LabeledArray

k |  |1           2           3           4           5           
--+--+------------------------------------------------------------
X |a |0.57513798  0.39700339  0.018507104 0.053364194 0.15070255  
  |b |0.94933934  0.82511234  0.35767373  0.71850254  0.32945186  
  |c |X           X           X           X           X           
--+--+------------------------------------------------------------
Y |a |0.056439775 0.35302071  0.63659053  0.34690566  0.4043574   
  |b |0.77349718  0.71511377  0.2799865   0.57957341  0.71102991  
  |c |X           X           X           X           X           
--+--+------------------------------------------------------------
Z |a |0.68034987  0.041415678 0.1097497   0.20286252  0.8310788   
  |b |0.43956826  0.62992511  0.75504889  0.090971852 0.050356898 
  |c |X           X           X           X           X           
3 x 5 LabeledArray

  |1                       |2                       |3                    ...
--+------------------------+------------------------+--------------------
k |a          b          c |a          b          c |a           b        ...
--+------------------------+------------------------+--------------------
X |0.62278342 0.44305296 X |0.66487229 0.211389   X |0.086688454 0.4429.. ...
Y |0.78912678 0.23707515 X |0.29600303 0.18950279 X |0.69338921  0.9475.. ...
Z |0.31863835 0.48517064 X |0.4354915  0.59846601 X |0.91538002  0.8554.. ...
3 x 5 LabeledArray

  |k |X          Y          Z          U          V          
--+--+-------------------------------------------------------
1 |a |0.10344729 0.895131   0.4896221  0.80372592 0.37636724 
  |b |0.38130559 0.84659347 0.17604295 0.59721363 0.17235939 
  |c |X          X          X          X          X          
--+--+-------------------------------------------------------
2 |a |0.68144983 0.42440008 0.7215112  0.40654067 0.98932008 
  |b |0.43558886 0.93863728 0.98615803 0.60242194 0.22026563 
  |c |X          X          X          X          X          
--+--+-------------------------------------------------------
3 |a |0.98592059 0.66261145 0.60529828 0.69000775 0.84848133 
  |b |0.98992263 0.36139209 0.52123348 0.93663696 0.81475188 
  |c |X          X          X          X          X          
3 x 5 LabeledArray

k |X                       |Y                        |Z                   ...
--+------------------------+-------------------------+-------------------
  |a          b          c |a           b          c |a           b       ...
--+------------------------+-------------------------+-------------------
1 |0.72187823 0.35859399 X |0.060440493 0.2695488  X |0.96266284  0.348.. ...
2 |0.76674031 0.38798465 X |0.84404469  0.54333047 X |0.031677414 0.806.. ...
3 |0.92226063 0.92838429 X |0.12928996  0.72048079 X |0.1880481   0.858.. ...
3 x 5 LabeledArray

  |1                       |2                        |3                   ...
--+------------------------+-------------------------+-------------------
  |a          b          c |a          b           c |a          b        ...
--+------------------------+-------------------------+-------------------
1 |0.25400697 0.77994699 X |0.33616686 0.010881405 X |0.73939562 0.4641.. ...
2 |0.48477169 0.6922529  X |0.2687723  0.94692608  X |0.49280306 0.4207.. ...
3 |0.40831283 0.87548647 X |0.9563265  0.82628197  X |0.28522469 0.9339.. ...
3 x 5 LabeledArray

  |1           |2           |3           |4           |5           
--+------------+------------+------------+------------+------------
  |a    b    c |a    b    c |a    b    c |a    b    c |a    b    c 
--+------------+------------+------------+------------+------------
1 |0.70 0.16 X |0.40 0.23 X |0.38 0.93 X |0.49 0.12 X |0.19 0.07 X 
2 |0.01 0.07 X |0.48 0.89 X |0.69 0.99 X |0.20 0.83 X |0.55 0.42 X 
3 |0.12 0.69 X |0.75 0.51 X |0.80 0.06 X |0.82 0.53 X |0.65 0.92 X 
3 x 5 LabeledArray

  |1                         |2                       |3                  ...
--+--------------------------+------------------------+------------------
  |a            b          c |a          b          c |a          b       ...
--+--------------------------+------------------------+------------------
1 |0.24654956   0.29921674 X |0.80526382 0.64652417 X |0.83406234 0.030.. ...
2 |0.0024227612 0.39936298 X |0.79117005 0.83923111 X |0.74106651 0.757.. ...
3 |0.54222143   0.93034679 X |0.56581838 0.84190672 X |0.95422005 0.521.. ...
10 x 10 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">2</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">3</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">1</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.10235557</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.92627555</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">0.67221694</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px">2</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.80668385</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.64152631</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">0.68932387</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">2</td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">3</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>10 x 10 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>2 x 3 x 4 LabeledArray
<ul><li>Nullable{Int64}(1) [:,:,1]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>Nullable{Int64}(2) [:,:,2]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>Nullable{Int64}(3) [:,:,3]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li><li>Nullable{Int64}(4) [:,:,4]
2 x 3 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table></li></ul>0 dimensional LabeledArray3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px"></td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px">1</td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>3 x 5 LabeledArray
<table border="0" style="border:none; width:100%; border-collapse:collapse"><tr style="border:0"><td style="border:1px solid #ccc;border-width:0px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:0px 0px 0px 1px">1</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #ccc;border-width:1px 0px 0px 0px"></td><td style="border:1px solid #ccc;border-width:1px 0px 0px 1px">a</td><td style="border:1px solid #000; border-width:0 0 0 0">...</td></tr><tr style="border:0"><td style="border:1px solid #000; border-width:0 0 0 0">:</td><td style="border:1px solid #000; border-width:0 0 0 0">:</td></tr></table>190 facts verified.
NA tests
  > FloatNAArray tests
94 facts verified.
NAArrayOperators tests
  > AbstractArrayWrapper tests
  > ifelse tests
346 facts verified.
ArrayUtil tests
  > type_array tests
  > AbstractArrayWrapper tests
  > Array transformation tools tests
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Int64} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Int64})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Int64}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in (::TestDataCubes.TestArrayUtil.##107#727)(::DataCubes.LabeledArray{Nullable{Any},2,Tuple{DataCubes.DefaultAxis,DataCubes.AbstractArrayWrapper{Nullable{Symbol},1,Array{Nullable{Symbol},1}}},DataCubes.AbstractArrayWrapper{Nullable{Any},2,Array{Nullable{Any},2}}}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
 in (::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestArrayUtil.##18#638)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:98
 in context(::TestDataCubes.TestArrayUtil.##18#638, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestArrayUtil.##1#621)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:20
 in facts(::TestDataCubes.TestArrayUtil.##1#621, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl, in expression starting on line 8
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Symbol} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Symbol})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Symbol}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in (::TestDataCubes.TestArrayUtil.##107#727)(::DataCubes.LabeledArray{Nullable{Any},2,Tuple{DataCubes.DefaultAxis,DataCubes.AbstractArrayWrapper{Nullable{Symbol},1,Array{Nullable{Symbol},1}}},DataCubes.AbstractArrayWrapper{Nullable{Any},2,Array{Nullable{Any},2}}}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
 in (::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestArrayUtil.##18#638)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:98
 in context(::TestDataCubes.TestArrayUtil.##18#638, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestArrayUtil.##1#621)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:20
 in facts(::TestDataCubes.TestArrayUtil.##1#621, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl, in expression starting on line 8
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Char} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Char})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Char}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in (::TestDataCubes.TestArrayUtil.##107#727)(::DataCubes.LabeledArray{Nullable{Any},2,Tuple{DataCubes.DefaultAxis,DataCubes.AbstractArrayWrapper{Nullable{Symbol},1,Array{Nullable{Symbol},1}}},DataCubes.AbstractArrayWrapper{Nullable{Any},2,Array{Nullable{Any},2}}}) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260
 in (::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestArrayUtil.##108#728{TestDataCubes.TestArrayUtil.##107#727}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestArrayUtil.##18#638)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:98
 in context(::TestDataCubes.TestArrayUtil.##18#638, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::TestDataCubes.TestArrayUtil.##1#621)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl:20
 in facts(::TestDataCubes.TestArrayUtil.##1#621, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_array_util.jl, in expression starting on line 8
  > Misc functions tests
  > darr/larr tests
  > enumeration array tests
  > extract/discard tests
271 facts verified.
DataFrameInterface tests
  > RDatasets readability tests
14 facts verified.
Join tests
  > larr version tests
  > darr version tests
34 facts verified.
Select tests
  > @select tests
    > aggregate tests
    > condition tests
    > by tests
  > selct tests
    > aggregate tests
    > condition tests
    > by tests
  > @update tests
    > aggregate tests
    > condition tests
  > update tests
    > aggregate tests
    > condition tests
  > conversion tests
  > @select misc tests
  > selct misc tests
  > misc @update misc tests
  > misc tests
171 facts verified.
Sort tests
2036 facts verified.
Ungroup tests
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{AbstractArray{T,1}} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{AbstractArray{T,1}})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{AbstractArray{T,1}}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{AbstractArray{T,1}},2}, ::Array{Nullable{AbstractArray{T,1}},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{AbstractArray{T,1}},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in (::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestUngroup.##1#44)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl:13
 in facts(::TestDataCubes.TestUngroup.##1#44, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{String} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{String})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{String}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable,2}, ::Array{Nullable,2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable,2}) at ./arraymath.jl:407
 in transpose(::DataCubes.AbstractArrayWrapper{Nullable,2,Array{Nullable,2}}) at ./<missing>:0
 in #8 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:260 [inlined]
 in (::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestUngroup.##9#52{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}},TestDataCubes.TestUngroup.##8#51{DataCubes.AbstractArrayWrapper{Nullable{AbstractArray{T,1}},2,Array{Nullable{AbstractArray{T,1}},2}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestUngroup.##1#44)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl:13
 in facts(::TestDataCubes.TestUngroup.##1#44, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl, in expression starting on line 7
WARNING: the no-op `transpose` fallback is deprecated, and no more specific `transpose` method for Nullable{Array{Int64,1}} exists. Consider `permutedims(x, [2, 1])` or writing a specific `transpose(x::Nullable{Array{Int64,1}})` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::Nullable{Array{Int64,1}}) at ./deprecated.jl:770
 in transpose_f!(::Base.#transpose, ::Array{Nullable{Array{Int64,1}},2}, ::Array{Nullable{Array{Int64,1}},2}) at ./arraymath.jl:369
 in transpose(::Array{Nullable{Array{Int64,1}},2}) at ./arraymath.jl:407
 in transpose at ./<missing>:0 [inlined]
 in (::TestDataCubes.TestUngroup.##21#64{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}},TestDataCubes.TestUngroup.##20#63{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}}}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
 in do_fact(::TestDataCubes.TestUngroup.##21#64{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}},TestDataCubes.TestUngroup.##20#63{DataCubes.AbstractArrayWrapper{Nullable{Array{Int64,1}},2,Array{Nullable{Array{Int64,1}},2}}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::TestDataCubes.TestUngroup.##1#44)() at /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl:21
 in facts(::TestDataCubes.TestUngroup.##1#44, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/DataCubes/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DataCubes/test/test_ungroup.jl, in expression starting on line 7
  > simple combining multiple table tests
19 facts verified.
Set Operations tests
  > unique test
  > union test
  > intersect test
  > setdiff test
75 facts verified.
ArrayHelperFunctions tests
  > nullable array tests
  > darr tests
  > larr tests
  > reverse tests
  > nafill tests
  > describe tests
316 facts verified.
EnumerationArray tests
  > enumerations in labeled array tests
81 facts verified.
INFO: DataCubes tests passed
INFO: Removing FactCheck v0.4.3
INFO: Removing RData v0.0.4
INFO: Removing RDatasets v0.2.0

>>> End of log
