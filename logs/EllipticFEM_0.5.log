>>> 'Pkg.add("EllipticFEM")' log
INFO: Cloning cache of EllipticFEM from https://github.com/gerhardtulzer/EllipticFEM.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ColorTypes v0.3.0
INFO: Installing Colors v0.7.0
INFO: Installing Conda v0.4.0
INFO: Installing EllipticFEM v0.0.1
INFO: Installing FixedPointNumbers v0.3.0
INFO: Installing LaTeXStrings v0.2.0
INFO: Installing MacroTools v0.3.4
INFO: Installing PyCall v1.9.0
INFO: Installing PyPlot v2.3.0
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.7
INFO: Building Conda
INFO: Building PyCall
INFO: No system-wide Python was found; got the following error:
could not spawn `'' -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('VERSION'))"`: no such file or directory (ENOENT)
using the Python distribution in the Conda package
Fetching package metadata ...........
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.11.3          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of EllipticFEM
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EllipticFEM")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (763.91796875 MB free)
Uptime: 28271.0 sec
Load Avg:  1.00927734375  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1629597 s       5246 s     141526 s     654520 s        180 s
#2  3500 MHz     617867 s       2072 s      87890 s    1985928 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - EllipticFEM                   0.0.1
 - JSON                          0.8.2
13 additional packages:
 - BinDeps                       0.4.5
 - ColorTypes                    0.3.0
 - Colors                        0.7.0
 - Compat                        0.14.0
 - Conda                         0.4.0
 - FixedPointNumbers             0.3.0
 - LaTeXStrings                  0.2.0
 - MacroTools                    0.3.4
 - PyCall                        1.9.0
 - PyPlot                        2.3.0
 - Reexport                      0.0.3
 - SHA                           0.3.0
 - URIParser                     0.1.7
INFO: Testing EllipticFEM
WARNING: No working GUI backend found for matplotlib
ERROR: LoadError: DimensionMismatch("tried to assign 4268×4268 array to 1×4268 destination")
 in throw_setindex_mismatch(::Array{Float64,2}, ::Tuple{Int64,Int64}) at ./operators.jl:421
 in setindex_shape_check(::Array{Float64,2}, ::Int64, ::Int64) at ./operators.jl:478
 in macro expansion at ./multidimensional.jl:425 [inlined]
 in _unsafe_batchsetindex!(::Array{Float64,2}, ::Array{Float64,2}, ::Int64, ::Colon) at ./multidimensional.jl:421
 in assemble(::EllipticFEM.Mesh, ::Float64, ::Function, ::Array{Any,2}) at /home/vagrant/.julia/v0.5/EllipticFEM/src/EllipticFEM.jl:115
 in solve(::String, ::Float64, ::Function, ::Array{Any,2}) at /home/vagrant/.julia/v0.5/EllipticFEM/src/EllipticFEM.jl:219
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/EllipticFEM/test/runtests.jl, in expression starting on line 10
=============================[ ERROR: EllipticFEM ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/EllipticFEM/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: EllipticFEM had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
