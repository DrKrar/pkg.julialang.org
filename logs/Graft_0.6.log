>>> 'Pkg.add("Graft")' log
INFO: Cloning cache of Graft from https://github.com/pranavtbhat/Graft.jl.git
INFO: Installing DataArrays v0.3.8
INFO: Installing DataFrames v0.8.4
INFO: Installing FileIO v0.2.0
INFO: Installing GZip v0.2.20
INFO: Installing Graft v0.0.2
INFO: Installing ProgressMeter v0.3.3
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.0
INFO: Package database updated

>>> 'Pkg.test("Graft")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1669.7578125 MB free)
Uptime: 30584.0 sec
Load Avg:  1.01611328125  1.0146484375  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1755706 s         57 s     183730 s     827759 s         69 s
#2  3504 MHz     747224 s       8200 s     106712 s    2094803 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Graft                         0.0.2
 - JSON                          0.8.0
9 additional packages:
 - Compat                        0.9.2
 - DataArrays                    0.3.8
 - DataFrames                    0.8.4
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - ProgressMeter                 0.3.3
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.0
INFO: Testing Graft
Test Summary: | Pass  Total
  Type Aliases |    5      5
Test Summary:              | Pass  Total
  SparseMatrixCSC Generation |    6      6
Test Summary:            | Pass  Total
  SparseMatrixCSC Indexing |   12     12
Test Summary:             | Pass  Total
  SparseMatrixCSC Adjacency |    8      8
Test Summary:            | Pass  Total
  SparseMatrixCSC Mutation |    8      8
Test Summary:            | Pass  Total
  SparseMatrixCSC Subgraph |   11     11
Test Summary:         | Pass  Total
  EdgeIter Construction |   46     46
Test Summary: | Pass  Total
  Label Module |  115    115
Test Summary: | Pass  Total
  Graph Test  |   45     45
Test Summary:    | Pass  Total
  Graph Generation |   18     18
Test Summary:  | Pass  Total
  Combinatorial  |   17     17
Test Summary:    | Pass  Total
  Vertex DataFrame |   19     19
Test Summary:  | Pass  Total
  Edge DataFrame |   20     20
Test Summary:      | Pass  Total
  Mutation Addvertex |   13     13
Test Summary:    | Pass  Total
  Mutation Addedge |    4      4
Test Summary:     | Pass  Total
  Mutation Rmvertex |    7      7
Test Summary:   | Pass  Total
  Mutation Rmedge |    8      8
Vertex 1
p1 => 1
p2 => 1
p3 => 1
p4 => 1
Edge 1 => 2
p1 => 1
p2 => 1
p3 => 1
p4 => 1
Test Summary: | Pass  Total
  Display     |    4      4
Test Summary: | Pass  Total
  GraphIO     |   10     10
Test Summary: | Pass  Total
  Subgraph    |   35     35
Test Summary: | Pass  Total
  Algorithms  |   22     22
Test Summary: | Pass  Total
  Export      |    3      3
Test Summary: | Pass  Total
  Graph Merging |    1      1
Eachvertex: Error During Test
  Test threw an exception of type MethodError
  Expression: @query(g |> eachvertex(v.p2 + v.p3)) == arr .+ arr
  MethodError: no method matching broadcast_shape(::DataArrays.DataArray{Int64,1}, ::DataArrays.DataArray{Int64,1})
   in .+(::DataArrays.DataArray{Int64,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:299
   in exec(::Dict{Any,Any}, ::Graft.VectorOperation) at /home/vagrant/.julia/v0.6/Graft/src/query/exec.jl:146
   in macro expansion; at /home/vagrant/.julia/v0.6/Graft/test/query.jl:25 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:268
   in _start() at ./client.jl:332
Eachvertex: Error During Test
  Test threw an exception of type MethodError
  Expression: @query(g |> eachvertex((v.p1 + v.p2) / (v.p3 * v.p4))) == (arr .+ arr) ./ (arr .* arr)
  MethodError: no method matching broadcast_shape(::DataArrays.DataArray{Int64,1}, ::DataArrays.DataArray{Int64,1})
   in .+(::DataArrays.DataArray{Int64,1}, ::DataArrays.DataArray{Int64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:299
   in exec(::Dict{Any,Any}, ::Graft.VectorOperation) at /home/vagrant/.julia/v0.6/Graft/src/query/exec.jl:146
   in _collect(::Array{Graft.VectorNode,1}, ::Base.Generator{Array{Graft.VectorNode,1},Graft.##54#55{Dict{Any,Any}}}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:358
   in exec(::Dict{Any,Any}, ::Graft.VectorOperation) at /home/vagrant/.julia/v0.6/Graft/src/query/exec.jl:143
   in macro expansion; at /home/vagrant/.julia/v0.6/Graft/test/query.jl:28 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:268
   in _start() at ./client.jl:332
Test Summary: | Pass  Error  Total
  Eachvertex  |    8      2     10
ERROR: LoadError: LoadError: Some tests did not pass: 8 passed, 0 failed, 2 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:495
 in macro expansion; at ./test.jl:679 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Graft/test/query.jl, in expression starting on line 7
while loading /home/vagrant/.julia/v0.6/Graft/test/runtests.jl, in expression starting on line 41
================================[ ERROR: Graft ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Graft/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Graft had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
