>>> 'Pkg.add("CovarianceMatrices")' log
INFO: Cloning cache of CovarianceMatrices from https://github.com/gragusa/CovarianceMatrices.jl.git
INFO: Cloning cache of GLM from https://github.com/JuliaStats/GLM.jl.git
INFO: Installing CovarianceMatrices v0.1.0
INFO: Installing DataArrays v0.3.5
INFO: Installing DataFrames v0.7.4
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing GLM v0.5.3
INFO: Installing GZip v0.2.19
INFO: Installing PDMats v0.4.2
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.3
INFO: Installing StatsFuns v0.2.2
INFO: Package database updated

>>> 'Pkg.test("CovarianceMatrices")' log
Julia Version 0.5.0-dev+5260
Commit f8d67f7* (2016-07-10 01:41 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing CovarianceMatrices
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/PDMats.ji for module PDMats.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Distributions.ji for module Distributions.
  2.376617 seconds (1.33 M allocations: 51.783 MB, 9.63% gc time)
  0.062948 seconds (23.77 k allocations: 1.057 MB, 9.09% gc time)
  0.053008 seconds (25.84 k allocations: 1.132 MB)
  0.054635 seconds (29.07 k allocations: 1.312 MB)
  1.129711 seconds (415.82 k allocations: 18.213 MB)
  0.014353 seconds (6.24 k allocations: 726.631 KB)
  0.021375 seconds (6.25 k allocations: 727.473 KB, 39.08% gc time)
  0.015695 seconds (7.03 k allocations: 801.515 KB)
ERROR: LoadError: MethodError: no method matching Array{T,N}(::Type{Int64}, ::Tuple{Base.OneTo{Int64}})
Closest candidates are:
  Array{T,N}{T,N}(::Type{T}, !Matched::Tuple{Vararg{Int64,N}})
  Array{T,N}{T}(::Type{T}, !Matched::Int64)
  Array{T,N}{T}(::Type{T}, !Matched::Int64, !Matched::Int64)
  ...
 in _getindex(::DataArrays.DataArray{Int64,1}, ::Tuple{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/DataArrays/src/indexing.jl:153
 in getindex(::DataArrays.DataArray{Int64,1}, ::BitArray{1}) at /home/vagrant/.julia/v0.5/DataArrays/src/indexing.jl:164
 in getindex(::DataFrames.DataFrame, ::BitArray{1}, ::Colon) at /home/vagrant/.julia/v0.5/DataFrames/src/dataframe/dataframe.jl:281
 in DataFrames.ModelFrame(::DataFrames.Terms, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.5/DataFrames/src/statsmodels/formula.jl:240
 in #fit#59(::Array{Any,1}, ::Function, ::Type{GLM.GeneralizedLinearModel}, ::DataFrames.Formula, ::DataFrames.DataFrame, ::Distributions.Normal{Float64}, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.5/DataFrames/src/statsmodels/statsmodel.jl:52
 in fit(::Type{GLM.GeneralizedLinearModel}, ::DataFrames.Formula, ::DataFrames.DataFrame, ::Distributions.Normal{Float64}, ::GLM.IdentityLink) at /home/vagrant/.julia/v0.5/DataFrames/src/statsmodels/statsmodel.jl:52
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CovarianceMatrices/test/runtests.jl, in expression starting on line 32
=========================[ ERROR: CovarianceMatrices ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/CovarianceMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CovarianceMatrices had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
