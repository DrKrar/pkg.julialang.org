>>> 'Pkg.add("CovarianceMatrices")' log
INFO: Cloning cache of CovarianceMatrices from https://github.com/gragusa/CovarianceMatrices.jl.git
INFO: Cloning cache of GLM from https://github.com/JuliaStats/GLM.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing CovarianceMatrices v0.1.0
INFO: Installing DataArrays v0.3.5
INFO: Installing DataFrames v0.7.4
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing GLM v0.5.3
INFO: Installing GZip v0.2.19
INFO: Installing PDMats v0.4.2
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CovarianceMatrices
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CovarianceMatrices")' log
Julia Version 0.5.0-dev+5179
Commit fa5af23* (2016-07-06 00:27 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing CovarianceMatrices
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/PDMats.ji for module PDMats.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Distributions.ji for module Distributions.
  2.851761 seconds (1.23 M allocations: 47.594 MB, 8.89% gc time)
  0.065359 seconds (23.22 k allocations: 1.028 MB)
  0.069545 seconds (25.52 k allocations: 1.117 MB)
  0.075992 seconds (28.80 k allocations: 1.297 MB)
  1.962351 seconds (1.88 M allocations: 71.168 MB, 1.79% gc time)
  0.013962 seconds (5.68 k allocations: 705.928 KB)
  0.016010 seconds (5.69 k allocations: 706.770 KB)
  0.019826 seconds (6.46 k allocations: 779.968 KB)
WARNING: sub is deprecated, use view instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sub(::Array{Float64,1}, ::UnitRange{Int64}) at ./deprecated.jl:30
 in getqii(::CovarianceMatrices.CRHC2{Array{Int64,1}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{UnitRange{Int64},1}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:155
 in _adjresid! at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:0 [inlined]
 in adjresid! at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:0 [inlined]
 in meat(::GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:196
 in vcov(::GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:204
 in stderr(::DataFrames.DataFrameRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Float64}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:108
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CovarianceMatrices/test/runtests.jl, in expression starting on line 226
WARNING: sub is deprecated, use view instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sub(::Array{Float64,2}, ::UnitRange{Int64}, ::Colon) at ./deprecated.jl:30
 in getqii(::CovarianceMatrices.CRHC2{Array{Int64,1}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{UnitRange{Int64},1}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:156
 in _adjresid! at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:0 [inlined]
 in adjresid! at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:0 [inlined]
 in meat(::GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:196
 in vcov(::GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:204
 in stderr(::DataFrames.DataFrameRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Float64}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:108
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CovarianceMatrices/test/runtests.jl, in expression starting on line 226
ERROR: LoadError: ArgumentError: matrix is not symmetric/Hermitian. This error can be avoided by calling chol(Hermitian(A)) which will ignore either the upper or lower triangle of the matrix.
 in chol(::Array{Float64,2}) at ./linalg/cholesky.jl:156
 in getqii(::CovarianceMatrices.CRHC2{Array{Int64,1}}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{UnitRange{Int64},1}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:158
 in _adjresid! at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:0 [inlined]
 in adjresid! at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:0 [inlined]
 in meat(::GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:196
 in vcov(::GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:204
 in stderr(::DataFrames.DataFrameRegressionModel{GLM.GeneralizedLinearModel{GLM.GlmResp{Array{Float64,1},Distributions.Normal{Float64},GLM.IdentityLink},GLM.DensePredChol{Float64,Base.LinAlg.Cholesky{Float64,Array{Float64,2}}}},Float64}, ::CovarianceMatrices.CRHC2{Array{Int64,1}}) at /home/vagrant/.julia/v0.5/CovarianceMatrices/src/HC.jl:108
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/CovarianceMatrices/test/runtests.jl, in expression starting on line 226
=========================[ ERROR: CovarianceMatrices ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/CovarianceMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: CovarianceMatrices had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
