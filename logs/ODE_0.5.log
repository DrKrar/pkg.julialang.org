>>> 'Pkg.add("ODE")' log
INFO: Installing ODE v0.2.1
INFO: Installing Polynomials v0.0.5
INFO: Package database updated

>>> 'Pkg.test("ODE")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1063.5390625 MB free)
Uptime: 8804.0 sec
Load Avg:  1.11474609375  1.01953125  1.0693359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3513 MHz     469436 s         65 s      55693 s     241335 s         18 s
#2  3513 MHz     132746 s       6134 s      25742 s     690816 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - ODE                           0.2.1
2 additional packages:
 - Compat                        0.8.6
 - Polynomials                   0.0.5
INFO: Testing ODE
using ODE.ode1
using ODE.ode2_midpoint
using ODE.ode2_heun
using ODE.ode4
using ODE.ode4ms
using ODE.ode5ms
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in Polynomials.Poly{Float64}(::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:71
 in poly(::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:100
 in poly(::Array{Int64,2}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:102
 in ode_ms(::##1#6, ::Float64, ::Array{Float64,1}, ::Int64) at /home/vagrant/.julia/v0.5/ODE/src/ODE.jl:166
 in ode5ms(::Function, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/ODE/src/ODE.jl:190
 in macro expansion; at /home/vagrant/.julia/v0.5/ODE/test/runtests.jl:34 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ODE/test/runtests.jl, in expression starting on line 29
using ODE.ode23
using ODE.ode45_dp
using ODE.ode45_fe
using ODE.ode78
using ODE.ode4s_s
using ODE.ode4s_kr
using ODE.ode23s
ROBER test case
Testing interface for scalar-like state... ok.
All looks OK
INFO: ODE tests passed

>>> End of log
