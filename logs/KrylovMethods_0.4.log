>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1494.71875 MB free)
Uptime: 37557.0 sec
Load Avg:  1.05419921875  1.017578125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1846720 s       2376 s     171228 s    1343740 s        137 s
#2  3499 MHz    1161232 s       4169 s     160020 s    2282680 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.4
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.97e-02
  2	7.47e-02
  3	3.09e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 7.47e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 4.13e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.32e-02
  2	1.80e-02
  3	5.26e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.80e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 4.94e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.23e-01
cg iterated maxIter (=1) times but reached only residual norm 2.23e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 5.87e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.25e-14
  2	7.87e-26
blockCG achieved desired tolerance at iteration 2. Residual norm is 7.87e-26.
=== blockcg ===
iter	max(relres)
  1	8.41e-16
blockCG iterated maxIter (=1) times but reached only residual norm 8.41e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.10e-01
  2	2.34e-01
  3	1.54e-01
  4	1.17e-01
  5	8.70e-02
  6	5.37e-02
  7	3.18e-02
  8	2.23e-02
  9	1.24e-02
 10	5.91e-03
 11	2.62e-03
 12	1.10e-03
 13	4.11e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.11e-04.
=== blockcg ===
iter	max(relres)
  1	4.10e-01
  2	2.34e-01
  3	1.54e-01
  4	1.17e-01
  5	8.70e-02
  6	5.37e-02
  7	3.18e-02
  8	2.23e-02
  9	1.24e-02
 10	5.91e-03
 11	2.62e-03
 12	1.10e-03
 13	4.11e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.11e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.55e+01	4.86e-01	9.84e+00
  2	1.36e+00	5.65e-01	9.81e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.36e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.84e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.7e-02 3.1e-02 	 3.1e-02
  2	9.6e-03 3.0e-03 9.9e-04 	 9.9e-04
  3	2.9e-04 1.0e-04 2.9e-05 	 2.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.48e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.5162708642382671]
Givens rotation for v=[-0.5624705681235962,0.0]
Givens rotation for v=[0.548736328791479,-0.2088155668961625]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 27. Residual norm is 9.68e-03.
ssor achieved desired tolerance at iteration 40. Residual norm is 9.78e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.57e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.45e-02
  3	3.97e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.97e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.09e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.64e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.67e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.95e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.84e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.84e-01	4.34e-01	5.24e+00		1.21e+00
2	1.23e-02	1.55e-02	6.83e+00		1.58e+00
3	2.56e-03	8.27e-03	6.83e+00		1.58e+00
4	9.62e-06	6.14e-07	6.83e+00		1.58e+00
5	1.19e-08	1.76e-10	6.83e+00		1.70e+00
6	8.15e-19	6.59e-28	6.83e+00		1.70e+00
minres converged at iteration 6. |A r_k|=6.59e-28 and |r_k|=8.15e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.59e-02	1.35e-01	6.55e+00		1.00e+00
2	3.55e-03	4.51e-03	6.55e+00		1.48e+00
3	5.37e-05	1.61e-05	6.84e+00		1.55e+00
4	8.25e-07	1.67e-07	6.84e+00		1.55e+00
5	1.08e-09	1.67e-11	6.84e+00		1.70e+00
6	2.42e-19	6.46e-28	6.84e+00		1.71e+00
minres converged at iteration 6. |A r_k|=6.46e-28 and |r_k|=2.42e-19.
test stop by condlim
The estimated condition number (=3.09e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=3.97e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
