>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (870.01171875 MB free)
Uptime: 35123.0 sec
Load Avg:  1.02392578125  0.9833984375  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1610134 s       3884 s     169702 s    1256997 s        179 s
#2  3499 MHz    1072178 s       3104 s     143233 s    2065586 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.74e-02
  2	1.44e-02
  3	1.30e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.44e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.85e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.98e-02
  2	5.22e-01
  3	5.05e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.22e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 8.89e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.01e-01
cg iterated maxIter (=1) times but reached only residual norm 1.01e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.65e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.10e-15
  2	3.78e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 3.78e-29.
=== blockcg ===
iter	max(relres)
  1	3.51e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.51e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.47e-01
  3	2.05e-01
  4	1.74e-01
  5	1.24e-01
  6	7.33e-02
  7	3.82e-02
  8	1.87e-02
  9	8.79e-03
 10	4.12e-03
 11	1.68e-03
 12	6.56e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.56e-04.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.47e-01
  3	2.05e-01
  4	1.74e-01
  5	1.24e-01
  6	7.33e-02
  7	3.82e-02
  8	1.87e-02
  9	8.79e-03
 10	4.12e-03
 11	1.68e-03
 12	6.56e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.56e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.33e+01	4.02e-01	1.00e+01
  2	3.18e+00	5.94e-01	9.97e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.18e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  8.42e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 9.1e-02 2.7e-02 	 2.7e-02
  2	7.9e-03 2.4e-03 7.8e-04 	 7.8e-04
  3	2.2e-04 6.7e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.22e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-2.057992937455265]
Givens rotation for v=[1.7992560982242312,0.0]
Givens rotation for v=[-0.3682075956303045,-0.8372944916649611]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 35. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 52. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.99e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.31e-02
  3	3.84e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.84e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.10e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.32e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.33e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.56e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.20e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.20e-01	1.67e+00	6.21e+00		1.14e+00
2	6.55e-02	3.20e-01	9.54e+00		1.76e+00
3	1.42e-02	5.59e-02	9.54e+00		1.76e+00
4	2.95e-03	1.01e-02	9.54e+00		1.76e+00
5	1.21e-04	9.12e-05	9.54e+00		1.76e+00
6	2.44e-06	6.29e-07	9.54e+00		2.26e+00
7	2.34e-17	2.82e-27	9.54e+00		2.28e+00
minres converged at iteration 7. |A r_k|=2.82e-27 and |r_k|=2.34e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.18e-01	1.09e+00	8.39e+00		1.01e+00
2	1.56e-02	3.17e-02	8.39e+00		1.53e+00
3	3.66e-03	1.66e-02	8.39e+00		1.53e+00
4	4.33e-04	8.04e-04	8.39e+00		1.57e+00
5	3.17e-05	4.22e-05	8.39e+00		1.57e+00
6	6.56e-07	1.74e-07	8.39e+00		1.97e+00
7	9.57e-18	1.77e-27	8.39e+00		2.00e+00
minres converged at iteration 7. |A r_k|=1.77e-27 and |r_k|=9.57e-18.
test stop by condlim
The estimated condition number (=2.53e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=2.53e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
