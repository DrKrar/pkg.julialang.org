>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1513.8359375 MB free)
Uptime: 35380.0 sec
Load Avg:  1.06201171875  1.10888671875  1.07861328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1756543 s       2320 s     141236 s    1280606 s        120 s
#2  3500 MHz    1036147 s       4337 s     125532 s    2222733 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.31e-02
  2	8.53e-03
  3	6.03e-02
bicgstb iterated maxIter (=3) times but reached only residual norm 8.53e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 5.65e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.95e-02
  2	4.19e-02
  3	3.36e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.19e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.42e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.58e-01
cg iterated maxIter (=1) times but reached only residual norm 2.58e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.78e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.34e-15
  2	4.17e-31
blockCG achieved desired tolerance at iteration 2. Residual norm is 4.17e-31.
=== blockcg ===
iter	max(relres)
  1	6.39e-16
blockCG iterated maxIter (=1) times but reached only residual norm 6.39e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.92e-01
  2	2.26e-01
  3	1.57e-01
  4	1.08e-01
  5	7.28e-02
  6	4.69e-02
  7	3.03e-02
  8	1.82e-02
  9	9.39e-03
 10	4.39e-03
 11	1.82e-03
 12	7.13e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.13e-04.
=== blockcg ===
iter	max(relres)
  1	3.92e-01
  2	2.26e-01
  3	1.57e-01
  4	1.08e-01
  5	7.28e-02
  6	4.69e-02
  7	3.03e-02
  8	1.82e-02
  9	9.39e-03
 10	4.39e-03
 11	1.82e-03
 12	7.13e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.13e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.34e+01	9.42e-01	8.88e+00
  2	1.13e+00	1.01e+00	8.84e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.13e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.71e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 9.0e-02 2.5e-02 	 2.5e-02
  2	7.0e-03 2.1e-03 5.9e-04 	 5.9e-04
  3	1.7e-04 4.9e-05 1.5e-05 	 1.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.04e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.0056926056557611]
Givens rotation for v=[-0.8551897763546142,0.0]
Givens rotation for v=[1.1835319462704428,-1.8445621235842773]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.75e-03.
ssor achieved desired tolerance at iteration 54. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 6.70e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.43e-02
  3	3.97e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.97e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.66e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.90e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.53e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.82e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.36e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.36e-01	4.42e-01	6.90e+00		1.42e+00
2	1.63e-02	4.65e-02	6.90e+00		1.42e+00
3	6.59e-03	9.00e-02	7.04e+00		1.45e+00
4	2.98e-04	4.31e-04	9.46e+00		1.95e+00
5	5.55e-06	2.21e-06	9.46e+00		2.18e+00
6	1.06e-07	4.06e-08	9.46e+00		2.32e+00
7	8.09e-19	1.30e-28	9.46e+00		2.32e+00
minres converged at iteration 7. |A r_k|=1.30e-28 and |r_k|=8.09e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.45e-02	1.06e-01	4.95e+00		1.01e+00
2	8.39e-03	8.04e-02	6.09e+00		1.24e+00
3	4.78e-04	1.10e-03	1.02e+01		2.09e+00
4	2.31e-05	2.45e-05	1.02e+01		2.29e+00
5	8.93e-07	7.69e-07	1.02e+01		2.29e+00
6	1.30e-08	3.82e-09	1.02e+01		2.49e+00
7	1.70e-17	4.71e-25	1.02e+01		2.49e+00
minres converged at iteration 7. |A r_k|=4.71e-25 and |r_k|=1.70e-17.
test stop by condlim
The estimated condition number (=2.69e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=4.53e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
