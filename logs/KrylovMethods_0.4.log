>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1490.62109375 MB free)
Uptime: 37093.0 sec
Load Avg:  0.71240234375  0.703125  0.892578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1822150 s       5828 s     169864 s    1294795 s        199 s
#2  3499 MHz    1127525 s        392 s     155641 s    2253756 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.4
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.01e-01
  2	8.94e-03
  3	1.45e-02
bicgstb iterated maxIter (=3) times but reached only residual norm 8.94e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.33e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.03e-02
  2	2.37e-02
  3	5.13e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.37e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 1.19e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.13e-01
cg iterated maxIter (=1) times but reached only residual norm 2.13e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.57e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	8.78e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 8.78e-16.
=== blockcg ===
iter	max(relres)
  1	6.38e-16
blockCG iterated maxIter (=1) times but reached only residual norm 6.38e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.74e-01
  3	2.19e-01
  4	1.74e-01
  5	1.24e-01
  6	8.07e-02
  7	4.55e-02
  8	2.48e-02
  9	1.23e-02
 10	5.29e-03
 11	2.18e-03
 12	8.46e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.46e-04.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.74e-01
  3	2.19e-01
  4	1.74e-01
  5	1.24e-01
  6	8.07e-02
  7	4.55e-02
  8	2.48e-02
  9	1.23e-02
 10	5.29e-03
 11	2.18e-03
 12	8.46e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.46e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.11e+01	3.66e-01	1.01e+01
  2	1.08e+00	4.53e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.08e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.01e-13.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 8.1e-02 2.3e-02 	 2.3e-02
  2	6.7e-03 2.1e-03 6.2e-04 	 6.2e-04
  3	2.1e-04 7.7e-05 2.2e-05 	 2.2e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.90e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,2.3341877444867776]
Givens rotation for v=[-1.2882370226542883,0.0]
Givens rotation for v=[-0.3828959478155088,-1.0218080372117566]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 51. Residual norm is 9.94e-03.
ssor achieved desired tolerance at iteration 76. Residual norm is 9.98e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.50e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.37e-02
  3	3.90e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.90e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.17e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.41e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.13e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.10e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.25e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.25e-01	1.41e-01	4.74e+00		1.12e+00
2	1.56e-02	2.35e-02	5.79e+00		1.37e+00
3	2.67e-03	6.35e-03	6.67e+00		1.58e+00
4	7.43e-05	2.32e-05	6.67e+00		1.58e+00
5	6.35e-08	4.87e-10	6.67e+00		1.60e+00
6	1.22e-18	2.01e-28	6.67e+00		1.66e+00
minres converged at iteration 6. |A r_k|=2.01e-28 and |r_k|=1.22e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.18e-02	4.64e-02	5.66e+00		1.00e+00
2	5.40e-03	1.54e-02	5.78e+00		1.06e+00
3	3.53e-04	2.72e-04	6.33e+00		1.16e+00
4	1.94e-06	1.09e-07	6.33e+00		1.33e+00
5	3.50e-09	5.64e-11	6.33e+00		1.53e+00
6	1.76e-19	7.63e-29	6.33e+00		1.57e+00
minres converged at iteration 6. |A r_k|=7.63e-29 and |r_k|=1.76e-19.
test stop by condlim
The estimated condition number (=2.03e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=4.65e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
