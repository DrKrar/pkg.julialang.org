>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1481.44140625 MB free)
Uptime: 36705.0 sec
Load Avg:  1.1015625  1.03955078125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1816441 s       5543 s     164880 s    1294489 s        108 s
#2  3500 MHz    1164105 s       1764 s     149927 s    2225954 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.46e-02
  2	8.87e-03
  3	7.93e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.87e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 2.03e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.26e-02
  2	1.31e-02
  3	1.96e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.31e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 6.59e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.55e-01
cg iterated maxIter (=1) times but reached only residual norm 2.55e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.33e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.78e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.78e-16.
=== blockcg ===
iter	max(relres)
  1	1.41e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.41e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.96e-01
  2	2.41e-01
  3	1.69e-01
  4	1.36e-01
  5	9.96e-02
  6	6.67e-02
  7	3.91e-02
  8	2.31e-02
  9	1.09e-02
 10	5.06e-03
 11	2.34e-03
 12	9.44e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.44e-04.
=== blockcg ===
iter	max(relres)
  1	3.96e-01
  2	2.41e-01
  3	1.69e-01
  4	1.36e-01
  5	9.96e-02
  6	6.67e-02
  7	3.91e-02
  8	2.31e-02
  9	1.09e-02
 10	5.06e-03
 11	2.34e-03
 12	9.44e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.44e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.69e+01	5.03e-01	9.22e+00
  2	4.78e+00	6.57e-01	9.14e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.78e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.30e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 7.9e-02 2.7e-02 	 2.7e-02
  2	8.1e-03 2.6e-03 6.8e-04 	 6.8e-04
  3	2.2e-04 6.4e-05 1.9e-05 	 1.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.99e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.3933465949012775]
Givens rotation for v=[2.3682619388336916,0.0]
Givens rotation for v=[-0.8036909647066787,0.1573287232319145]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 32. Residual norm is 9.66e-03.
ssor achieved desired tolerance at iteration 47. Residual norm is 9.89e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.66e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.40e-02
  3	3.95e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.95e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.39e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.62e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.02e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.64e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 5.44e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.44e-01	5.17e+00	7.38e+00		1.06e+00
2	8.98e-02	2.84e-01	1.37e+01		1.98e+00
3	1.41e-02	3.23e-02	1.37e+01		2.33e+00
4	2.58e-03	8.40e-03	1.37e+01		2.33e+00
5	2.35e-04	3.55e-04	1.37e+01		2.33e+00
6	4.98e-06	1.24e-06	1.37e+01		2.94e+00
7	4.43e-08	5.03e-09	1.37e+01		2.94e+00
8	6.60e-16	1.12e-22	1.37e+01		3.04e+00
minres converged at iteration 8. |A r_k|=1.12e-22 and |r_k|=6.60e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.02e-01	3.83e+00	9.12e+00		1.01e+00
2	2.78e-02	3.63e-02	1.25e+01		1.85e+00
3	2.70e-03	3.64e-03	1.25e+01		2.27e+00
4	3.23e-04	6.01e-04	1.25e+01		2.27e+00
5	9.00e-05	4.29e-04	1.25e+01		2.27e+00
6	1.93e-06	5.75e-07	1.25e+01		2.27e+00
7	2.01e-08	2.69e-09	1.25e+01		2.47e+00
8	1.90e-15	2.04e-21	1.25e+01		2.78e+00
minres converged at iteration 8. |A r_k|=2.04e-21 and |r_k|=1.90e-15.
test stop by condlim
The estimated condition number (=2.50e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=4.65e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	gmres iterated maxIter (=350) times without achieving the desired tolerance.
 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
