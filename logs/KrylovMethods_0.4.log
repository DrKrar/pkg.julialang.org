>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1518.8515625 MB free)
Uptime: 36066.0 sec
Load Avg:  0.97216796875  1.0029296875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1779640 s       5600 s     161470 s    1285099 s        130 s
#2  3500 MHz    1106739 s         84 s     148720 s    2191550 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.95e-02
  2	7.74e-03
  3	9.80e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.74e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.54e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.03e-01
  2	2.88e-02
  3	2.39e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.88e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 8.50e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	4.35e-02
cg iterated maxIter (=1) times but reached only residual norm 4.35e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.98e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.22e-15
  2	3.09e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 3.09e-29.
=== blockcg ===
iter	max(relres)
  1	1.51e-16
blockCG iterated maxIter (=1) times but reached only residual norm 1.51e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.52e-01
  3	1.93e-01
  4	1.43e-01
  5	1.10e-01
  6	7.58e-02
  7	4.70e-02
  8	2.75e-02
  9	1.38e-02
 10	6.65e-03
 11	3.40e-03
 12	1.52e-03
 13	6.32e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.32e-04.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.52e-01
  3	1.93e-01
  4	1.43e-01
  5	1.10e-01
  6	7.58e-02
  7	4.70e-02
  8	2.75e-02
  9	1.38e-02
 10	6.65e-03
 11	3.40e-03
 12	1.52e-03
 13	6.32e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.32e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.36e+01	6.21e-01	9.84e+00
  2	1.19e+00	7.74e-01	9.78e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.19e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.21e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.0e-02 3.1e-02 	 3.1e-02
  2	9.8e-03 3.4e-03 1.1e-03 	 1.1e-03
  3	3.6e-04 1.2e-04 4.3e-05 	 4.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.84e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.1249943332505662]
Givens rotation for v=[0.35763311780461454,0.0]
Givens rotation for v=[-0.7212855488188368,1.221871210358979]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.75e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 9.86e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.74e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.25e-02
  3	3.80e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.80e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.27e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.50e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.17e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.56e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 8.53e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	8.53e-02	8.22e-02	4.94e+00		1.21e+00
2	2.76e-03	1.36e-03	5.61e+00		1.37e+00
3	8.26e-05	3.31e-05	5.61e+00		1.37e+00
4	9.31e-06	1.28e-05	5.61e+00		1.37e+00
5	6.12e-08	5.20e-09	5.61e+00		1.37e+00
6	5.75e-11	5.99e-13	5.61e+00		1.40e+00
7	9.24e-15	1.64e-17	5.61e+00		1.40e+00
minres converged at iteration 7. |A r_k|=1.64e-17 and |r_k|=9.24e-15.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.78e-03	1.08e-02	5.55e+00		1.00e+00
2	4.64e-04	3.18e-04	5.55e+00		1.32e+00
3	1.10e-05	3.43e-06	5.55e+00		1.32e+00
4	2.61e-07	8.73e-08	5.55e+00		1.32e+00
5	1.27e-09	6.84e-11	5.55e+00		1.37e+00
6	1.46e-12	1.86e-14	5.55e+00		1.38e+00
7	2.21e-16	3.72e-19	5.55e+00		1.39e+00
minres converged at iteration 7. |A r_k|=3.72e-19 and |r_k|=2.21e-16.
test stop by condlim
The estimated condition number (=2.67e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.04e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
