>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1469.90234375 MB free)
Uptime: 34743.0 sec
Load Avg:  1.072265625  0.990234375  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1704106 s       4897 s     155530 s    1229100 s        162 s
#2  3500 MHz    1046276 s        123 s     138778 s    2147271 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.90e-02
  2	8.05e-03
  3	4.94e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.05e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 9.45e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.70e-02
  2	4.63e-02
  3	2.44e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.63e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 1.56e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.97e-02
cg iterated maxIter (=1) times but reached only residual norm 1.97e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.26e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.41e-15
  2	7.14e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 7.14e-29.
=== blockcg ===
iter	max(relres)
  1	2.53e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.53e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.97e-01
  2	2.23e-01
  3	1.68e-01
  4	1.27e-01
  5	9.53e-02
  6	5.81e-02
  7	3.21e-02
  8	1.56e-02
  9	7.80e-03
 10	3.30e-03
 11	1.41e-03
 12	6.40e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.40e-04.
=== blockcg ===
iter	max(relres)
  1	3.97e-01
  2	2.23e-01
  3	1.68e-01
  4	1.27e-01
  5	9.53e-02
  6	5.81e-02
  7	3.21e-02
  8	1.56e-02
  9	7.80e-03
 10	3.30e-03
 11	1.41e-03
 12	6.40e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.40e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.03e+01	6.74e-01	9.39e+00
  2	1.70e+01	1.13e+00	9.19e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.70e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.45e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.1e-02 2.5e-02 	 2.5e-02
  2	7.3e-03 2.1e-03 6.5e-04 	 6.5e-04
  3	2.2e-04 6.5e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.67e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.48405261894878515]
Givens rotation for v=[-1.1436069733386818,0.0]
Givens rotation for v=[-0.6736208695304241,1.5503700392112825]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 27. Residual norm is 9.76e-03.
ssor achieved desired tolerance at iteration 40. Residual norm is 9.86e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.61e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.45e-02
  3	4.00e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.00e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.82e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.29e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.93e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.25e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.52e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.52e-01	2.17e+00	6.21e+00		1.19e+00
2	7.56e-02	3.77e-01	8.81e+00		1.68e+00
3	7.78e-04	1.91e-04	8.81e+00		1.68e+00
4	8.01e-05	1.46e-04	8.81e+00		1.68e+00
5	7.62e-12	1.00e-17	8.81e+00		2.11e+00
6	5.15e-17	4.64e-21	8.81e+00		2.20e+00
minres converged at iteration 6. |A r_k|=4.64e-21 and |r_k|=5.15e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.41e-01	1.39e+00	7.52e+00		1.01e+00
2	2.06e-02	5.20e-02	7.98e+00		1.42e+00
3	8.86e-05	8.58e-06	7.98e+00		1.42e+00
4	4.19e-06	2.68e-06	7.98e+00		1.97e+00
5	2.17e-12	2.04e-17	7.98e+00		1.97e+00
6	2.87e-17	5.10e-21	7.98e+00		1.99e+00
minres converged at iteration 6. |A r_k|=5.10e-21 and |r_k|=2.87e-17.
test stop by condlim
The estimated condition number (=2.08e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.82e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
