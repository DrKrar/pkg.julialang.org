>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1485.67578125 MB free)
Uptime: 32342.0 sec
Load Avg:  1.08740234375  1.0048828125  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1585967 s       6228 s     154092 s    1133940 s         51 s
#2  3500 MHz     922964 s       1388 s     148729 s    2039254 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.97e-02
  2	6.78e-03
  3	1.63e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 6.78e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 2.21e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.31e-02
  2	1.41e-02
  3	1.45e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.41e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 3.29e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.62e-02
cg iterated maxIter (=1) times but reached only residual norm 1.62e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.70e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.75e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.75e-16.
=== blockcg ===
iter	max(relres)
  1	2.98e-15
blockCG iterated maxIter (=1) times but reached only residual norm 2.98e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.13e-01
  2	2.49e-01
  3	1.83e-01
  4	1.32e-01
  5	8.89e-02
  6	5.11e-02
  7	2.60e-02
  8	1.39e-02
  9	6.75e-03
 10	3.03e-03
 11	1.39e-03
 12	6.00e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.00e-04.
=== blockcg ===
iter	max(relres)
  1	4.13e-01
  2	2.49e-01
  3	1.83e-01
  4	1.32e-01
  5	8.89e-02
  6	5.11e-02
  7	2.60e-02
  8	1.39e-02
  9	6.75e-03
 10	3.03e-03
 11	1.39e-03
 12	6.00e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.00e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	5.53e+01	3.98e-01	9.02e+00
  2	6.69e+00	7.70e-01	8.85e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  6.69e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  9.92e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.1e-01 3.6e-02 	 3.6e-02
  2	1.3e-02 4.6e-03 1.6e-03 	 1.6e-03
  3	4.9e-04 1.6e-04 5.7e-05 	 5.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.47e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.2870169852153592]
Givens rotation for v=[-0.4998994689669026,0.0]
Givens rotation for v=[0.17635272478758812,-0.26226646268207676]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 43. Residual norm is 9.86e-03.
ssor achieved desired tolerance at iteration 64. Residual norm is 9.91e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.86e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.39e-02
  3	3.89e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.89e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 8.89e-03.
ssor achieved desired tolerance at iteration 21. Residual norm is 9.94e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.94e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.51e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.24e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.24e-01	1.95e+00	6.49e+00		1.16e+00
2	4.73e-02	1.51e-01	8.17e+00		1.47e+00
3	2.62e-03	2.23e-03	8.17e+00		1.75e+00
4	1.39e-04	1.25e-04	8.17e+00		1.75e+00
5	2.02e-06	4.30e-07	8.17e+00		1.86e+00
6	2.93e-17	6.51e-27	8.17e+00		1.86e+00
minres converged at iteration 6. |A r_k|=6.51e-27 and |r_k|=2.93e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.13e-01	9.15e-01	7.04e+00		1.01e+00
2	9.38e-03	1.30e-02	7.06e+00		1.32e+00
3	3.32e-04	1.84e-04	7.06e+00		1.49e+00
4	3.16e-05	4.95e-05	7.06e+00		1.49e+00
5	4.41e-07	9.45e-08	7.06e+00		1.52e+00
6	2.12e-17	1.56e-26	7.06e+00		1.53e+00
minres converged at iteration 6. |A r_k|=1.56e-26 and |r_k|=2.12e-17.
test stop by condlim
The estimated condition number (=2.03e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=1.20e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
