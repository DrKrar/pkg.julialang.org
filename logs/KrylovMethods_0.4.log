>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1604.13671875 MB free)
Uptime: 46219.0 sec
Load Avg:  0.96728515625  1.0048828125  0.9677734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2236687 s       1231 s     177742 s    1743120 s        161 s
#2  3500 MHz    1507073 s       5434 s     156687 s    2770255 s          7 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.20.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.06e-02
  2	5.26e-02
  3	1.21e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 5.26e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.76e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.14e-02
  2	2.37e-02
  3	2.06e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.37e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.21e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.05e-01
cg iterated maxIter (=1) times but reached only residual norm 1.05e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.14e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.55e-15
  2	5.03e-31
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.03e-31.
=== blockcg ===
iter	max(relres)
  1	5.25e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.25e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.02e-01
  2	2.48e-01
  3	1.71e-01
  4	1.28e-01
  5	1.11e-01
  6	7.56e-02
  7	4.12e-02
  8	2.20e-02
  9	1.21e-02
 10	5.66e-03
 11	2.43e-03
 12	1.10e-03
 13	4.63e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.63e-04.
=== blockcg ===
iter	max(relres)
  1	4.02e-01
  2	2.48e-01
  3	1.71e-01
  4	1.28e-01
  5	1.11e-01
  6	7.56e-02
  7	4.12e-02
  8	2.20e-02
  9	1.21e-02
 10	5.66e-03
 11	2.43e-03
 12	1.10e-03
 13	4.63e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.63e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.13e+01	6.48e-01	9.25e+00
  2	3.27e+00	7.75e-01	9.17e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.27e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.14e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 9.6e-02 2.9e-02 	 2.9e-02
  2	9.5e-03 3.1e-03 9.8e-04 	 9.8e-04
  3	3.0e-04 9.6e-05 2.8e-05 	 2.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.44e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.8299002371398715]
Givens rotation for v=[0.799554107286094,0.0]
Givens rotation for v=[1.1924805455051348,-0.9639883803691252]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 1.00e-02.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.82e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.32e-02
  3	3.86e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.86e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.38e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.61e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.27e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.99e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.25e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.25e-01	1.79e+00	5.97e+00		1.24e+00
2	3.49e-02	1.03e-01	9.35e+00		1.95e+00
3	6.04e-03	2.09e-02	9.35e+00		1.95e+00
4	1.86e-04	1.13e-04	9.35e+00		1.95e+00
5	7.53e-07	4.50e-08	9.35e+00		2.25e+00
6	4.10e-09	3.26e-10	9.35e+00		2.27e+00
7	1.81e-17	1.13e-24	9.35e+00		2.33e+00
minres converged at iteration 7. |A r_k|=1.13e-24 and |r_k|=1.81e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.10e-01	1.08e+00	8.30e+00		1.01e+00
2	7.60e-03	8.48e-03	8.30e+00		1.72e+00
3	4.67e-04	6.71e-04	8.30e+00		1.72e+00
4	3.09e-05	3.39e-05	8.30e+00		1.77e+00
5	1.42e-07	9.97e-09	8.30e+00		1.94e+00
6	8.61e-10	7.60e-11	8.30e+00		2.02e+00
7	3.25e-17	1.74e-23	8.30e+00		2.07e+00
minres converged at iteration 7. |A r_k|=1.74e-23 and |r_k|=3.25e-17.
test stop by condlim
The estimated condition number (=2.78e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 19.
test stop by beta
minres stopped because beta (=4.46e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
