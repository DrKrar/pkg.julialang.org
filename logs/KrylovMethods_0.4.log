>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1497.453125 MB free)
Uptime: 35297.0 sec
Load Avg:  0.86962890625  0.9345703125  0.95947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1757865 s       2245 s     172864 s    1219108 s        145 s
#2  3499 MHz    1070202 s       4887 s     159546 s    2134464 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.07e-02
  2	1.17e-02
  3	1.00e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.17e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.39e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.96e-02
  2	2.77e-02
  3	7.21e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.77e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 1.67e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.46e-01
cg iterated maxIter (=1) times but reached only residual norm 1.46e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.34e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.65e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 1.65e-16.
=== blockcg ===
iter	max(relres)
  1	2.72e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.72e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.22e-01
  2	2.60e-01
  3	1.96e-01
  4	1.50e-01
  5	1.04e-01
  6	6.94e-02
  7	3.78e-02
  8	1.73e-02
  9	8.64e-03
 10	4.07e-03
 11	1.91e-03
 12	8.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.89e-04.
=== blockcg ===
iter	max(relres)
  1	4.22e-01
  2	2.60e-01
  3	1.96e-01
  4	1.50e-01
  5	1.04e-01
  6	6.94e-02
  7	3.78e-02
  8	1.73e-02
  9	8.64e-03
 10	4.07e-03
 11	1.91e-03
 12	8.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.89e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.71e+01	5.52e-01	9.25e+00
  2	1.70e+00	6.33e-01	9.21e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.70e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.74e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 9.9e-02 3.6e-02 	 3.6e-02
  2	1.1e-02 3.8e-03 1.3e-03 	 1.3e-03
  3	4.2e-04 1.4e-04 4.3e-05 	 4.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.04e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.2346562097812777]
Givens rotation for v=[-0.9364663993451284,0.0]
Givens rotation for v=[-0.5189314936565543,-1.3970003030663267]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 58. Residual norm is 9.98e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.97e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.40e-02
  3	3.92e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.92e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.13e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.36e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.93e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.13e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 4.16e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.16e-01	2.55e+00	6.67e+00		1.07e+00
2	6.07e-02	1.48e-01	1.01e+01		1.61e+00
3	3.50e-03	2.31e-03	1.01e+01		2.06e+00
4	1.03e-04	3.12e-05	1.01e+01		2.30e+00
5	2.85e-07	7.70e-09	1.01e+01		2.43e+00
6	5.86e-10	1.15e-11	1.01e+01		2.49e+00
7	4.32e-16	3.03e-21	1.01e+01		2.50e+00
minres converged at iteration 7. |A r_k|=3.03e-21 and |r_k|=4.32e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.80e-01	1.43e+00	7.83e+00		1.01e+00
2	1.69e-02	2.04e-02	8.97e+00		1.48e+00
3	1.25e-03	1.07e-03	8.97e+00		1.81e+00
4	4.08e-05	1.39e-05	8.97e+00		2.02e+00
5	1.17e-07	3.27e-09	8.97e+00		2.16e+00
6	2.42e-10	4.79e-12	8.97e+00		2.22e+00
7	1.28e-16	6.39e-22	8.97e+00		2.23e+00
minres converged at iteration 7. |A r_k|=6.39e-22 and |r_k|=1.28e-16.
test stop by condlim
The estimated condition number (=2.22e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=7.97e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
