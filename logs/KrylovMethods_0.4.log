>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1492.1796875 MB free)
Uptime: 36837.0 sec
Load Avg:  1.1064453125  1.11865234375  1.0595703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1814584 s       5737 s     159903 s    1309024 s        160 s
#2  3501 MHz    1064403 s         45 s     151535 s    2304328 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.14e-02
  2	7.45e-03
  3	9.59e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.45e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.06e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.89e-02
  2	1.80e-02
  3	4.91e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.80e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 8.85e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.52e-01
cg iterated maxIter (=1) times but reached only residual norm 2.52e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.45e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.72e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.72e-16.
=== blockcg ===
iter	max(relres)
  1	2.16e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.16e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.98e-01
  2	2.25e-01
  3	1.69e-01
  4	1.39e-01
  5	1.01e-01
  6	6.96e-02
  7	4.10e-02
  8	2.36e-02
  9	1.22e-02
 10	6.22e-03
 11	3.13e-03
 12	1.40e-03
 13	5.95e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.95e-04.
=== blockcg ===
iter	max(relres)
  1	3.98e-01
  2	2.25e-01
  3	1.69e-01
  4	1.39e-01
  5	1.01e-01
  6	6.96e-02
  7	4.10e-02
  8	2.36e-02
  9	1.22e-02
 10	6.22e-03
 11	3.13e-03
 12	1.40e-03
 13	5.95e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.95e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.60e+01	5.52e-01	9.33e+00
  2	3.26e+00	6.20e-01	9.30e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.26e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  7.32e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.5e-01 1.1e-01 3.1e-02 	 3.1e-02
  2	9.8e-03 3.4e-03 1.2e-03 	 1.2e-03
  3	3.8e-04 1.1e-04 3.6e-05 	 3.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.68e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.048916995641501954]
Givens rotation for v=[-0.4174032296271233,0.0]
Givens rotation for v=[0.4479674458397062,0.7163294190379761]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 32. Residual norm is 9.99e-03.
ssor achieved desired tolerance at iteration 48. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.73e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.34e-02
  3	3.87e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.87e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.04e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.27e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.94e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.01e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.38e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.38e-01	2.95e+00	7.88e+00		1.13e+00
2	5.84e-02	2.06e-01	7.88e+00		1.34e+00
3	1.19e-03	4.41e-04	7.88e+00		1.57e+00
4	3.10e-04	1.98e-03	7.88e+00		1.57e+00
5	1.34e-05	1.53e-05	8.28e+00		1.65e+00
6	1.34e-06	3.20e-06	8.28e+00		1.65e+00
7	3.66e-20	1.50e-32	8.28e+00		2.02e+00
minres converged at iteration 7. |A r_k|=1.50e-32 and |r_k|=3.66e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.26e-01	1.01e+00	5.99e+00		1.02e+00
2	1.75e-02	5.43e-02	8.18e+00		1.40e+00
3	3.23e-04	1.17e-04	8.18e+00		1.52e+00
4	8.14e-05	4.80e-04	8.18e+00		1.52e+00
5	2.14e-06	1.54e-06	8.49e+00		1.58e+00
6	5.16e-07	2.45e-06	8.49e+00		1.60e+00
7	2.88e-20	2.86e-32	8.49e+00		1.71e+00
minres converged at iteration 7. |A r_k|=2.86e-32 and |r_k|=2.88e-20.
test stop by condlim
The estimated condition number (=2.07e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=2.09e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
