>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1483.5546875 MB free)
Uptime: 37087.0 sec
Load Avg:  1.0029296875  1.02880859375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1880163 s       3578 s     164376 s    1266814 s        156 s
#2  3501 MHz    1141849 s       3088 s     147256 s    2275149 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.4
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.39e-02
  2	2.21e-02
  3	9.53e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 2.21e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 6.39e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.05e-01
  2	2.28e-02
  3	8.66e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.28e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.88e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.70e-02
cg iterated maxIter (=1) times but reached only residual norm 1.70e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.80e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.81e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.81e-16.
=== blockcg ===
iter	max(relres)
  1	4.49e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.49e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.94e-01
  2	2.37e-01
  3	1.88e-01
  4	1.59e-01
  5	1.17e-01
  6	7.87e-02
  7	4.75e-02
  8	2.54e-02
  9	1.24e-02
 10	5.69e-03
 11	2.80e-03
 12	1.18e-03
 13	4.74e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.74e-04.
=== blockcg ===
iter	max(relres)
  1	3.94e-01
  2	2.37e-01
  3	1.88e-01
  4	1.59e-01
  5	1.17e-01
  6	7.87e-02
  7	4.75e-02
  8	2.54e-02
  9	1.24e-02
 10	5.69e-03
 11	2.80e-03
 12	1.18e-03
 13	4.74e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.74e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.00e+01	4.76e-01	9.07e+00
  2	2.49e+00	6.07e-01	9.02e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.49e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.66e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.0e-01 3.3e-02 	 3.3e-02
  2	9.6e-03 2.7e-03 6.6e-04 	 6.6e-04
  3	2.2e-04 6.4e-05 1.8e-05 	 1.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.63e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.5248189362365102]
Givens rotation for v=[0.6754442046733107,0.0]
Givens rotation for v=[1.7183316735072762,-0.8524639224560108]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 35. Residual norm is 9.70e-03.
ssor achieved desired tolerance at iteration 51. Residual norm is 9.98e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.39e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.60e-02
  3	4.10e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.10e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.02e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.60e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.47e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.06e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.79e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.79e-01	2.61e-01	4.78e+00		1.08e+00
2	2.15e-02	2.88e-02	6.43e+00		1.46e+00
3	9.67e-04	4.11e-04	6.43e+00		1.46e+00
4	5.63e-05	3.21e-05	6.43e+00		1.46e+00
5	9.38e-07	1.18e-07	6.43e+00		1.57e+00
6	3.73e-11	1.13e-14	6.43e+00		1.57e+00
7	1.75e-19	6.13e-27	6.43e+00		1.60e+00
minres converged at iteration 7. |A r_k|=6.13e-27 and |r_k|=1.75e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.82e-02	9.25e-02	6.15e+00		1.00e+00
2	2.85e-03	1.77e-03	6.15e+00		1.34e+00
3	1.57e-04	8.11e-05	6.15e+00		1.34e+00
4	5.56e-06	1.88e-06	6.15e+00		1.34e+00
5	7.24e-08	7.06e-09	6.15e+00		1.52e+00
6	3.86e-12	1.58e-15	6.15e+00		1.52e+00
7	9.56e-20	1.76e-26	6.15e+00		1.53e+00
minres converged at iteration 7. |A r_k|=1.76e-26 and |r_k|=9.56e-20.
test stop by condlim
The estimated condition number (=3.21e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.87e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
