>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (941.796875 MB free)
Uptime: 32152.0 sec
Load Avg:  1.00537109375  1.03662109375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1528012 s       3101 s     151656 s    1125860 s         70 s
#2  3500 MHz     956881 s       2388 s     139962 s    1965876 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.1
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.14e-02
  2	8.48e-03
  3	8.00e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 8.48e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.33e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.04e-02
  2	1.82e-02
  3	6.42e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.82e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 2.30e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.81e-01
cg iterated maxIter (=1) times but reached only residual norm 1.81e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.14e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.32e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.32e-16.
=== blockcg ===
iter	max(relres)
  1	3.42e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.42e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.27e-01
  3	1.69e-01
  4	1.28e-01
  5	1.18e-01
  6	8.64e-02
  7	4.51e-02
  8	2.26e-02
  9	1.12e-02
 10	6.10e-03
 11	3.21e-03
 12	1.50e-03
 13	7.00e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 7.00e-04.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.27e-01
  3	1.69e-01
  4	1.28e-01
  5	1.18e-01
  6	8.64e-02
  7	4.51e-02
  8	2.26e-02
  9	1.12e-02
 10	6.10e-03
 11	3.21e-03
 12	1.50e-03
 13	7.00e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 7.00e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.92e+00	6.62e-01	1.04e+01
  2	5.40e-01	6.93e-01	1.04e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.40e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.45e-14.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.3e-02 2.4e-02 	 2.4e-02
  2	8.3e-03 2.7e-03 7.4e-04 	 7.4e-04
  3	2.1e-04 6.3e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.28e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.4371278146728509]
Givens rotation for v=[1.3871947427499394,0.0]
Givens rotation for v=[-1.1177439464507934,-0.3100556789305464]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.81e-03.
ssor achieved desired tolerance at iteration 56. Residual norm is 9.95e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.23e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.38e-02
  3	3.87e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.87e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.23e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.45e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.36e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.04e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 7.87e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.87e-02	9.34e-02	5.55e+00		1.29e+00
2	7.43e-03	1.12e-02	5.55e+00		1.29e+00
3	2.03e-04	1.02e-04	5.55e+00		1.29e+00
4	1.24e-05	1.21e-05	5.55e+00		1.29e+00
5	4.18e-07	2.19e-07	5.55e+00		1.29e+00
6	5.43e-20	1.02e-31	5.55e+00		1.36e+00
minres converged at iteration 6. |A r_k|=1.02e-31 and |r_k|=5.43e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.63e-03	1.89e-02	4.56e+00		1.00e+00
2	9.75e-04	1.68e-03	5.00e+00		1.10e+00
3	1.60e-05	4.29e-06	5.00e+00		1.10e+00
4	5.69e-07	3.35e-07	5.00e+00		1.10e+00
5	8.00e-09	1.61e-09	5.00e+00		1.23e+00
6	5.81e-21	6.30e-32	5.00e+00		1.23e+00
minres converged at iteration 6. |A r_k|=6.30e-32 and |r_k|=5.81e-21.
test stop by condlim
The estimated condition number (=2.29e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 13.
test stop by beta
minres stopped because beta (=2.67e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
