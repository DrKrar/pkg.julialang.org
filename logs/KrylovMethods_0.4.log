>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (933.95703125 MB free)
Uptime: 31811.0 sec
Load Avg:  1.01318359375  0.96533203125  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1459836 s        120 s     161349 s    1176929 s         87 s
#2  3500 MHz     967236 s       5958 s     138914 s    1909199 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.8.8
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.04e-01
  2	2.16e-02
  3	1.27e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.16e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 3.90e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	7.92e-02
  2	1.74e-02
  3	4.04e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.74e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 8.50e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.95e-01
cg iterated maxIter (=1) times but reached only residual norm 1.95e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 5.29e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.32e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.32e-16.
=== blockcg ===
iter	max(relres)
  1	5.84e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.84e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.97e-01
  2	2.41e-01
  3	1.66e-01
  4	1.10e-01
  5	7.46e-02
  6	5.86e-02
  7	3.48e-02
  8	1.90e-02
  9	9.65e-03
 10	4.22e-03
 11	1.91e-03
 12	7.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.89e-04.
=== blockcg ===
iter	max(relres)
  1	3.97e-01
  2	2.41e-01
  3	1.66e-01
  4	1.10e-01
  5	7.46e-02
  6	5.86e-02
  7	3.48e-02
  8	1.90e-02
  9	9.65e-03
 10	4.22e-03
 11	1.91e-03
 12	7.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.89e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.08e+01	6.97e-01	9.27e+00
  2	1.81e+00	7.72e-01	9.23e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.81e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.10e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 8.8e-02 2.5e-02 	 2.5e-02
  2	8.4e-03 2.6e-03 7.6e-04 	 7.6e-04
  3	2.4e-04 7.6e-05 2.6e-05 	 2.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.44e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.3552669504728643]
Givens rotation for v=[-1.3672311053060218,0.0]
Givens rotation for v=[-1.017370461586164,2.2938952446057836]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 24. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 36. Residual norm is 9.91e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.66e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.56e-02
  3	4.08e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.08e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.07e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.64e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.19e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.53e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.14e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.14e-01	1.89e+00	7.52e+00		1.07e+00
2	1.38e-01	1.07e+00	8.08e+00		1.19e+00
3	9.88e-03	1.51e-02	1.15e+01		1.69e+00
4	2.24e-03	1.04e-02	1.15e+01		1.69e+00
5	1.37e-04	1.11e-04	1.15e+01		2.32e+00
6	8.32e-06	6.23e-06	1.15e+01		2.54e+00
7	2.77e-08	1.09e-09	1.15e+01		2.66e+00
8	1.47e-10	8.56e-12	1.15e+01		2.87e+00
9	7.31e-17	4.02e-22	1.15e+01		2.87e+00
minres converged at iteration 9. |A r_k|=4.02e-22 and |r_k|=7.31e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.60e-01	1.50e+00	6.80e+00		1.01e+00
2	2.45e-02	6.89e-02	1.16e+01		1.72e+00
3	2.26e-03	4.51e-03	1.16e+01		1.72e+00
4	5.88e-04	2.20e-03	1.16e+01		2.19e+00
5	5.26e-05	8.42e-05	1.16e+01		2.19e+00
6	3.40e-06	2.73e-06	1.16e+01		2.54e+00
7	1.26e-08	5.62e-10	1.16e+01		2.64e+00
8	6.63e-11	3.80e-12	1.16e+01		2.89e+00
9	6.47e-16	7.00e-20	1.16e+01		2.89e+00
minres converged at iteration 9. |A r_k|=7.00e-20 and |r_k|=6.47e-16.
test stop by condlim
The estimated condition number (=2.00e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=4.55e-11) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
