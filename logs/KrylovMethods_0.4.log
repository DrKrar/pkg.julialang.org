>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (944.7890625 MB free)
Uptime: 31785.0 sec
Load Avg:  1.0498046875  1.00830078125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1489785 s       4163 s     148228 s    1134611 s         94 s
#2  3500 MHz     867418 s       1849 s     136477 s    1941320 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.1
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.04e-01
  2	5.75e-02
  3	9.56e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 5.75e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.49e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.39e-02
  2	3.17e-02
  3	3.18e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.17e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 5.09e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	6.15e-02
cg iterated maxIter (=1) times but reached only residual norm 6.15e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.89e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	9.95e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 9.95e-16.
=== blockcg ===
iter	max(relres)
  1	5.23e-15
blockCG iterated maxIter (=1) times but reached only residual norm 5.23e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.56e-01
  3	2.00e-01
  4	1.61e-01
  5	1.20e-01
  6	7.73e-02
  7	4.82e-02
  8	2.98e-02
  9	1.57e-02
 10	7.12e-03
 11	3.06e-03
 12	1.26e-03
 13	5.32e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.32e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.56e-01
  3	2.00e-01
  4	1.61e-01
  5	1.20e-01
  6	7.73e-02
  7	4.82e-02
  8	2.98e-02
  9	1.57e-02
 10	7.12e-03
 11	3.06e-03
 12	1.26e-03
 13	5.32e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 5.32e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	5.01e+00	5.44e-01	9.65e+00
  2	1.06e+00	5.65e-01	9.64e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.06e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.34e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 8.9e-02 2.7e-02 	 2.7e-02
  2	7.6e-03 2.3e-03 6.7e-04 	 6.7e-04
  3	1.8e-04 6.0e-05 1.8e-05 	 1.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.07e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.4988945565787999]
Givens rotation for v=[0.13526581499715568,0.0]
Givens rotation for v=[0.4741236880130433,0.2810433804682682]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.86e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.83e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.74e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.50e-02
  3	4.06e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.06e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.23e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.80e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.04e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.58e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.74e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.74e-01	1.07e+00	5.63e+00		1.18e+00
2	3.60e-02	9.83e-02	7.98e+00		1.67e+00
3	2.59e-03	2.90e-03	7.98e+00		1.67e+00
4	2.75e-05	3.79e-06	7.98e+00		1.84e+00
5	8.89e-07	3.68e-07	7.98e+00		1.87e+00
6	7.61e-17	8.03e-26	7.98e+00		1.94e+00
minres converged at iteration 6. |A r_k|=8.03e-26 and |r_k|=7.61e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	8.21e-02	5.32e-01	7.26e+00		1.01e+00
2	3.42e-03	1.95e-03	7.26e+00		1.52e+00
3	3.40e-04	5.09e-04	7.26e+00		1.52e+00
4	3.90e-06	6.01e-07	7.26e+00		1.61e+00
5	1.44e-07	6.71e-08	7.26e+00		1.72e+00
6	3.68e-18	1.18e-27	7.26e+00		1.74e+00
minres converged at iteration 6. |A r_k|=1.18e-27 and |r_k|=3.68e-18.
test stop by condlim
The estimated condition number (=2.30e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 11.
test stop by beta
minres stopped because beta (=6.73e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	gmres iterated maxIter (=350) times without achieving the desired tolerance.
 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
