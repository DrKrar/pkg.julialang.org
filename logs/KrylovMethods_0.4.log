>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1497.703125 MB free)
Uptime: 38399.0 sec
Load Avg:  0.99951171875  1.0390625  1.04248046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1910084 s       4448 s     156616 s    1370284 s        131 s
#2  3499 MHz    1202563 s       2110 s     140152 s    2318799 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.10.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.11e-01
  2	1.26e-01
  3	1.34e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.26e-01 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.70e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.00e-02
  2	1.61e-02
  3	1.71e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.61e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.50e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.60e-02
cg iterated maxIter (=1) times but reached only residual norm 1.60e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.09e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.59e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.59e-16.
=== blockcg ===
iter	max(relres)
  1	1.59e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.59e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.15e-01
  2	2.59e-01
  3	1.99e-01
  4	1.41e-01
  5	8.97e-02
  6	5.49e-02
  7	3.34e-02
  8	2.06e-02
  9	1.15e-02
 10	5.38e-03
 11	2.33e-03
 12	9.11e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.11e-04.
=== blockcg ===
iter	max(relres)
  1	4.15e-01
  2	2.59e-01
  3	1.99e-01
  4	1.41e-01
  5	8.97e-02
  6	5.49e-02
  7	3.34e-02
  8	2.06e-02
  9	1.15e-02
 10	5.38e-03
 11	2.33e-03
 12	9.11e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.11e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.47e+01	5.77e-01	1.11e+01
  2	1.14e+00	6.32e-01	1.11e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.14e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.67e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.0e-01 2.6e-02 	 2.6e-02
  2	8.0e-03 2.6e-03 7.4e-04 	 7.4e-04
  3	2.0e-04 6.2e-05 1.9e-05 	 1.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.77e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.5628502225537898]
Givens rotation for v=[1.9218877547949658,0.0]
Givens rotation for v=[0.520643940298497,-0.041838053597773844]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.98e-03.
ssor achieved desired tolerance at iteration 56. Residual norm is 9.87e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.95e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.41e-01
  2	6.23e-02
  3	3.79e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.79e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 14. Residual norm is 9.89e-03.
ssor achieved desired tolerance at iteration 21. Residual norm is 9.74e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.11e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.74e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.85e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.85e-01	2.89e-01	5.04e+00		1.07e+00
2	4.07e-02	9.39e-02	6.34e+00		1.35e+00
3	4.48e-03	5.51e-03	7.00e+00		1.48e+00
4	3.42e-04	2.12e-04	7.00e+00		1.53e+00
5	2.47e-05	1.74e-05	7.00e+00		1.53e+00
6	4.52e-11	6.16e-16	7.00e+00		1.67e+00
7	3.93e-18	2.44e-24	7.00e+00		1.75e+00
minres converged at iteration 7. |A r_k|=2.44e-24 and |r_k|=3.93e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.22e-02	1.58e-01	6.02e+00		1.00e+00
2	9.35e-03	1.63e-02	6.62e+00		1.17e+00
3	4.56e-04	2.11e-04	6.62e+00		1.22e+00
4	5.51e-05	5.60e-05	6.62e+00		1.40e+00
5	3.25e-06	1.75e-06	6.62e+00		1.40e+00
6	7.50e-12	1.30e-16	6.62e+00		1.57e+00
7	1.78e-18	3.03e-24	6.62e+00		1.65e+00
minres converged at iteration 7. |A r_k|=3.03e-24 and |r_k|=1.78e-18.
test stop by condlim
The estimated condition number (=2.76e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=2.10e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	gmres iterated maxIter (=350) times without achieving the desired tolerance.
 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
