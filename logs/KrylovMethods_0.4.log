>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (905.78515625 MB free)
Uptime: 33431.0 sec
Load Avg:  1.14599609375  1.025390625  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1496082 s       3339 s     154356 s    1288541 s         86 s
#2  3500 MHz     979366 s       3734 s     136656 s    2042894 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.05e-01
  2	1.11e-02
  3	2.96e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.11e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 1.37e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.77e-02
  2	2.33e-02
  3	9.46e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.33e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 3.98e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.57e-01
cg iterated maxIter (=1) times but reached only residual norm 2.57e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 6.70e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.04e-15
  2	7.53e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 7.53e-30.
=== blockcg ===
iter	max(relres)
  1	3.91e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.91e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.16e-01
  2	2.22e-01
  3	1.54e-01
  4	1.16e-01
  5	1.00e-01
  6	7.45e-02
  7	4.18e-02
  8	2.23e-02
  9	1.14e-02
 10	5.23e-03
 11	2.16e-03
 12	8.35e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.35e-04.
=== blockcg ===
iter	max(relres)
  1	4.16e-01
  2	2.22e-01
  3	1.54e-01
  4	1.16e-01
  5	1.00e-01
  6	7.45e-02
  7	4.18e-02
  8	2.23e-02
  9	1.14e-02
 10	5.23e-03
 11	2.16e-03
 12	8.35e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.35e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.83e+01	6.73e-01	1.01e+01
  2	1.23e+00	8.52e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.23e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.80e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 1.0e-01 3.0e-02 	 3.0e-02
  2	9.3e-03 2.8e-03 9.5e-04 	 9.5e-04
  3	3.2e-04 1.1e-04 3.3e-05 	 3.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.85e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.9031007630939241]
Givens rotation for v=[-2.040590778063015,0.0]
Givens rotation for v=[0.45456916163572575,0.24323843357101524]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 44. Residual norm is 9.81e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.89e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.56e-02
  3	4.09e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.09e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.15e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.99e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.98e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.86e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.16e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.16e-01	2.61e-01	6.43e+00		1.22e+00
2	1.72e-02	5.40e-02	6.43e+00		1.22e+00
3	2.10e-03	4.38e-03	6.43e+00		1.38e+00
4	2.10e-04	3.87e-04	6.43e+00		1.38e+00
5	1.45e-05	2.10e-05	6.43e+00		1.38e+00
6	1.24e-06	2.34e-06	6.43e+00		1.38e+00
7	1.55e-08	3.17e-09	6.43e+00		1.45e+00
8	7.53e-22	8.79e-34	6.52e+00		1.47e+00
minres converged at iteration 8. |A r_k|=8.79e-34 and |r_k|=7.53e-22.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.16e-02	8.63e-02	5.81e+00		1.00e+00
2	2.39e-03	4.67e-03	5.81e+00		1.19e+00
3	2.29e-04	3.80e-04	5.81e+00		1.23e+00
4	1.46e-05	2.02e-05	5.96e+00		1.27e+00
5	1.41e-06	2.98e-06	5.99e+00		1.27e+00
6	1.25e-07	1.91e-07	5.99e+00		1.27e+00
7	3.56e-09	1.88e-09	5.99e+00		1.27e+00
8	2.34e-22	3.70e-34	6.51e+00		1.39e+00
minres converged at iteration 8. |A r_k|=3.70e-34 and |r_k|=2.34e-22.
test stop by condlim
The estimated condition number (=2.42e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=3.35e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
