>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (929.41796875 MB free)
Uptime: 32005.0 sec
Load Avg:  0.91943359375  0.9599609375  0.99853515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1476804 s       6542 s     164922 s    1150705 s        106 s
#2  3500 MHz     947271 s         48 s     148456 s    1935969 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.92e-02
  2	2.56e-02
  3	1.14e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.56e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.86e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.89e-02
  2	1.59e-02
  3	1.33e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.59e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.60e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.51e-01
cg iterated maxIter (=1) times but reached only residual norm 2.51e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.95e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.42e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 1.42e-16.
=== blockcg ===
iter	max(relres)
  1	1.48e-16
blockCG iterated maxIter (=1) times but reached only residual norm 1.48e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.33e-01
  3	1.58e-01
  4	1.17e-01
  5	1.08e-01
  6	8.41e-02
  7	5.08e-02
  8	2.74e-02
  9	1.34e-02
 10	6.41e-03
 11	2.87e-03
 12	1.23e-03
 13	4.62e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.62e-04.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.33e-01
  3	1.58e-01
  4	1.17e-01
  5	1.08e-01
  6	8.41e-02
  7	5.08e-02
  8	2.74e-02
  9	1.34e-02
 10	6.41e-03
 11	2.87e-03
 12	1.23e-03
 13	4.62e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.62e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.34e+01	5.67e-01	1.03e+01
  2	1.72e+00	6.21e-01	1.03e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.72e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.03e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 7.8e-02 2.3e-02 	 2.3e-02
  2	5.9e-03 1.7e-03 4.8e-04 	 4.8e-04
  3	1.6e-04 4.4e-05 1.4e-05 	 1.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.69e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.496179922876022]
Givens rotation for v=[-0.8809170885719209,0.0]
Givens rotation for v=[0.14575116935375657,0.24920718675952855]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.85e-03.
ssor achieved desired tolerance at iteration 58. Residual norm is 9.92e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.89e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.39e-02
  3	3.95e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.95e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.09e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.64e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.00e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.54e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.72e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.72e-01	1.60e+00	6.62e+00		1.31e+00
2	1.39e-02	1.69e-02	6.62e+00		1.31e+00
3	4.47e-03	3.52e-02	6.62e+00		1.31e+00
4	3.85e-04	9.47e-04	8.24e+00		1.64e+00
5	1.27e-05	1.55e-05	8.71e+00		1.73e+00
6	1.31e-08	2.34e-10	8.71e+00		2.16e+00
7	1.02e-19	1.36e-29	8.71e+00		2.18e+00
minres converged at iteration 7. |A r_k|=1.36e-29 and |r_k|=1.02e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.51e-02	5.13e-01	5.88e+00		1.02e+00
2	4.90e-03	6.65e-03	5.93e+00		1.17e+00
3	9.41e-04	6.56e-03	8.51e+00		1.69e+00
4	2.15e-04	1.08e-03	8.51e+00		1.69e+00
5	2.93e-06	1.30e-06	8.51e+00		1.69e+00
6	3.09e-09	5.63e-11	8.51e+00		2.11e+00
7	1.75e-19	1.70e-28	8.51e+00		2.13e+00
minres converged at iteration 7. |A r_k|=1.70e-28 and |r_k|=1.75e-19.
test stop by condlim
The estimated condition number (=2.02e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 13.
test stop by beta
minres stopped because beta (=2.67e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
