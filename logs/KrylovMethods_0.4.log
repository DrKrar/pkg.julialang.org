>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (936.99609375 MB free)
Uptime: 32143.0 sec
Load Avg:  0.83349609375  0.92919921875  0.97021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1454916 s        287 s     155722 s    1225720 s         75 s
#2  3500 MHz    1000306 s       7120 s     135817 s    1907912 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.50e-02
  2	8.94e-03
  3	1.13e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.94e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.11e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.79e-02
  2	1.75e-02
  3	2.11e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.75e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.80e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.56e-01
cg iterated maxIter (=1) times but reached only residual norm 2.56e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 6.74e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.62e-15
  2	5.02e-31
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.02e-31.
=== blockcg ===
iter	max(relres)
  1	1.41e-14
blockCG iterated maxIter (=1) times but reached only residual norm 1.41e-14 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.41e-01
  3	1.74e-01
  4	1.41e-01
  5	1.01e-01
  6	6.52e-02
  7	3.99e-02
  8	2.06e-02
  9	9.48e-03
 10	4.15e-03
 11	1.79e-03
 12	7.98e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.98e-04.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.41e-01
  3	1.74e-01
  4	1.41e-01
  5	1.01e-01
  6	6.52e-02
  7	3.99e-02
  8	2.06e-02
  9	9.48e-03
 10	4.15e-03
 11	1.79e-03
 12	7.98e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.98e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.15e+01	7.06e-01	1.08e+01
  2	2.87e+00	7.56e-01	1.08e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.87e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.58e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.9e-02 2.9e-02 	 2.9e-02
  2	7.5e-03 2.5e-03 8.3e-04 	 8.3e-04
  3	2.6e-04 8.6e-05 2.7e-05 	 2.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.01e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.8179671211156239]
Givens rotation for v=[-0.4022232967157504,0.0]
Givens rotation for v=[0.6768925751212503,1.082270839064204]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.85e-03.
ssor achieved desired tolerance at iteration 55. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.67e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.47e-02
  3	3.99e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.99e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.96e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.46e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.14e-02.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.47e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.95e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.95e-01	7.90e-01	6.45e+00		1.42e+00
2	4.41e-02	3.15e-01	7.37e+00		1.62e+00
3	9.87e-03	6.99e-02	7.82e+00		1.72e+00
4	1.24e-03	3.85e-03	7.82e+00		1.72e+00
5	2.09e-04	8.89e-04	7.82e+00		1.72e+00
6	1.95e-05	4.21e-05	7.82e+00		1.72e+00
7	1.39e-08	2.30e-10	7.82e+00		1.72e+00
8	4.19e-12	2.31e-14	7.82e+00		1.95e+00
9	1.12e-18	5.78e-24	7.82e+00		1.95e+00
minres converged at iteration 9. |A r_k|=5.78e-24 and |r_k|=1.12e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.70e-02	5.34e-01	7.07e+00		1.01e+00
2	1.62e-02	1.22e-01	7.22e+00		1.19e+00
3	1.37e-03	3.13e-03	7.22e+00		1.19e+00
4	2.10e-04	8.52e-04	7.22e+00		1.24e+00
5	2.60e-05	7.43e-05	7.22e+00		1.42e+00
6	1.20e-06	1.25e-06	7.22e+00		1.46e+00
7	1.92e-09	6.75e-11	7.22e+00		1.50e+00
8	3.60e-13	1.23e-15	7.22e+00		1.80e+00
minres converged at iteration 8. |A r_k|=1.23e-15 and |r_k|=3.60e-13.
test stop by condlim
The estimated condition number (=3.20e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.40e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
