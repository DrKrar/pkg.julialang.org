>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1511.2578125 MB free)
Uptime: 36200.0 sec
Load Avg:  1.0029296875  1.0  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1856377 s       3794 s     165138 s    1196215 s         98 s
#2  3500 MHz    1039796 s       2086 s     153934 s    2264444 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.20e-02
  2	6.56e-03
  3	6.60e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 6.56e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.45e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.56e-02
  2	2.18e-02
  3	3.51e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.18e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.76e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.53e-01
cg iterated maxIter (=1) times but reached only residual norm 2.53e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.16e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.23e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 7.23e-16.
=== blockcg ===
iter	max(relres)
  1	3.19e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.19e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.84e-01
  2	2.12e-01
  3	1.59e-01
  4	1.17e-01
  5	7.29e-02
  6	4.49e-02
  7	2.84e-02
  8	1.92e-02
  9	1.22e-02
 10	6.92e-03
 11	3.53e-03
 12	1.70e-03
 13	7.43e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 7.43e-04.
=== blockcg ===
iter	max(relres)
  1	3.84e-01
  2	2.12e-01
  3	1.59e-01
  4	1.17e-01
  5	7.29e-02
  6	4.49e-02
  7	2.84e-02
  8	1.92e-02
  9	1.22e-02
 10	6.92e-03
 11	3.53e-03
 12	1.70e-03
 13	7.43e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 7.43e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.29e+00	3.57e-01	8.18e+00
  2	5.64e-01	4.00e-01	8.17e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.64e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.60e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.2e-02 2.2e-02 	 2.2e-02
  2	7.2e-03 2.2e-03 6.7e-04 	 6.7e-04
  3	1.8e-04 5.8e-05 1.9e-05 	 1.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.00e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.8326856822769256]
Givens rotation for v=[-0.2617117271915969,0.0]
Givens rotation for v=[-1.2268764543621895,-0.6475785965540777]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 31. Residual norm is 9.70e-03.
ssor achieved desired tolerance at iteration 46. Residual norm is 9.79e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.02e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.32e-02
  3	3.88e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.88e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.68e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.92e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.95e-03.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.96e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.32e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.32e-01	3.26e-01	6.10e+00		1.43e+00
2	2.92e-02	2.00e-01	7.34e+00		1.72e+00
3	2.00e-03	3.52e-03	7.34e+00		1.72e+00
4	5.73e-04	3.77e-03	7.34e+00		1.72e+00
5	4.92e-05	1.12e-04	7.34e+00		1.72e+00
6	4.57e-06	8.83e-06	7.34e+00		1.72e+00
7	2.22e-07	2.14e-07	7.34e+00		1.72e+00
8	2.33e-09	5.85e-10	7.34e+00		1.72e+00
9	1.64e-19	2.19e-28	7.34e+00		1.72e+00
minres converged at iteration 9. |A r_k|=2.19e-28 and |r_k|=1.64e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.37e-02	2.68e-01	7.20e+00		1.00e+00
2	5.34e-03	1.99e-02	7.20e+00		1.30e+00
3	7.33e-04	2.09e-03	7.20e+00		1.49e+00
4	5.13e-05	1.17e-04	7.74e+00		1.60e+00
5	6.13e-06	1.47e-05	7.74e+00		1.68e+00
6	2.45e-07	1.96e-07	7.74e+00		1.68e+00
7	1.42e-08	1.95e-08	7.74e+00		1.68e+00
8	2.04e-11	5.60e-13	7.74e+00		1.75e+00
9	8.32e-20	6.44e-27	7.74e+00		1.78e+00
minres converged at iteration 9. |A r_k|=6.44e-27 and |r_k|=8.32e-20.
test stop by condlim
The estimated condition number (=2.05e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=7.68e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
