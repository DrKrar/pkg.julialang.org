>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (927.98046875 MB free)
Uptime: 33598.0 sec
Load Avg:  0.9619140625  0.96240234375  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1585510 s       1884 s     156270 s    1191214 s         62 s
#2  3498 MHz     994125 s       5016 s     143951 s    2047896 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.8.8
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.47e-02
  2	9.75e-03
  3	1.23e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.75e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.69e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.44e-02
  2	2.49e-02
  3	2.87e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.49e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 6.31e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.21e-01
cg iterated maxIter (=1) times but reached only residual norm 2.21e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.56e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	6.27e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 6.27e-16.
=== blockcg ===
iter	max(relres)
  1	6.96e-16
blockCG iterated maxIter (=1) times but reached only residual norm 6.96e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.45e-01
  3	1.70e-01
  4	1.27e-01
  5	9.46e-02
  6	5.92e-02
  7	3.51e-02
  8	1.70e-02
  9	7.72e-03
 10	3.43e-03
 11	1.36e-03
 12	5.01e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.01e-04.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.45e-01
  3	1.70e-01
  4	1.27e-01
  5	9.46e-02
  6	5.92e-02
  7	3.51e-02
  8	1.70e-02
  9	7.72e-03
 10	3.43e-03
 11	1.36e-03
 12	5.01e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 5.01e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.53e+01	5.85e-01	9.10e+00
  2	3.71e+00	6.77e-01	9.04e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.71e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.16e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.1e-01 3.0e-02 	 3.0e-02
  2	9.6e-03 3.3e-03 8.3e-04 	 8.3e-04
  3	2.3e-04 6.7e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.98e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.06825210629628828]
Givens rotation for v=[0.3253133168822219,0.0]
Givens rotation for v=[0.2373416175005083,-1.3926212636826591]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 25. Residual norm is 9.88e-03.
ssor achieved desired tolerance at iteration 37. Residual norm is 1.00e-02.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 52. Residual norm is 9.12e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.28e-02
  3	3.85e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.85e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.23e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.46e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.33e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.05e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.21e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.21e-01	1.48e+00	5.79e+00		1.15e+00
2	9.06e-02	5.36e-01	8.77e+00		1.74e+00
3	1.70e-02	8.83e-02	1.13e+01		2.24e+00
4	7.80e-04	5.88e-04	1.13e+01		2.24e+00
5	1.64e-04	5.13e-04	1.13e+01		2.24e+00
6	2.18e-06	4.10e-07	1.13e+01		2.24e+00
7	9.58e-09	4.93e-10	1.13e+01		2.76e+00
8	2.33e-16	6.69e-23	1.13e+01		2.76e+00
minres converged at iteration 8. |A r_k|=6.69e-23 and |r_k|=2.33e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.31e-01	1.18e+00	7.72e+00		1.01e+00
2	4.92e-02	3.54e-01	9.79e+00		1.34e+00
3	1.05e-03	4.32e-04	9.79e+00		1.34e+00
4	1.65e-04	4.16e-04	9.79e+00		1.76e+00
5	2.25e-05	4.21e-05	9.79e+00		2.03e+00
6	5.03e-07	1.71e-07	9.79e+00		2.03e+00
7	2.17e-09	1.10e-10	9.79e+00		2.39e+00
8	5.99e-17	1.95e-23	9.79e+00		2.39e+00
minres converged at iteration 8. |A r_k|=1.95e-23 and |r_k|=5.99e-17.
test stop by condlim
The estimated condition number (=2.36e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=4.69e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
