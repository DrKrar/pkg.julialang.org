>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1505.20703125 MB free)
Uptime: 36114.0 sec
Load Avg:  0.91796875  0.97216796875  0.92529296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1745816 s       6083 s     152508 s    1319200 s        148 s
#2  3500 MHz    1114267 s         68 s     142406 s    2192493 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.06e-01
  2	2.58e-02
  3	8.83e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 2.58e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.16e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.53e-02
  2	1.12e-02
  3	2.55e-01
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.12e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.15e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.42e-01
cg iterated maxIter (=1) times but reached only residual norm 2.42e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.33e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.40e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.40e-16.
=== blockcg ===
iter	max(relres)
  1	2.23e-15
blockCG iterated maxIter (=1) times but reached only residual norm 2.23e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.28e-01
  3	1.61e-01
  4	1.13e-01
  5	7.16e-02
  6	4.59e-02
  7	2.80e-02
  8	1.61e-02
  9	8.22e-03
 10	3.92e-03
 11	1.88e-03
 12	7.99e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.99e-04.
=== blockcg ===
iter	max(relres)
  1	4.04e-01
  2	2.28e-01
  3	1.61e-01
  4	1.13e-01
  5	7.16e-02
  6	4.59e-02
  7	2.80e-02
  8	1.61e-02
  9	8.22e-03
 10	3.92e-03
 11	1.88e-03
 12	7.99e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.99e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.58e+01	4.64e-01	1.06e+01
  2	7.16e+00	7.19e-01	1.05e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  7.16e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.03e-06.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.1e-01 3.8e-02 	 3.8e-02
  2	1.3e-02 4.4e-03 1.3e-03 	 1.3e-03
  3	4.8e-04 1.5e-04 5.0e-05 	 5.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.75e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.7682441402479685]
Givens rotation for v=[0.9159853715489134,0.0]
Givens rotation for v=[0.649557776764003,-0.8126110439523339]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 30. Residual norm is 9.96e-03.
ssor achieved desired tolerance at iteration 45. Residual norm is 9.94e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 7.10e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.31e-02
  3	3.86e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.86e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.45e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.68e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.43e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.25e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 4.39e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.39e-02	1.97e-02	4.84e+00		1.16e+00
2	5.26e-03	7.09e-03	4.84e+00		1.16e+00
3	3.26e-04	2.64e-04	5.52e+00		1.32e+00
4	1.02e-06	3.21e-08	5.52e+00		1.33e+00
5	3.12e-09	9.38e-11	5.52e+00		1.38e+00
6	2.27e-19	1.75e-28	5.52e+00		1.38e+00
minres converged at iteration 6. |A r_k|=1.75e-28 and |r_k|=2.27e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.60e-03	8.02e-03	4.60e+00		1.00e+00
2	5.39e-04	6.62e-04	5.40e+00		1.17e+00
3	5.53e-06	5.95e-07	5.40e+00		1.25e+00
4	3.92e-08	2.79e-09	5.40e+00		1.31e+00
5	1.12e-10	3.17e-12	5.40e+00		1.34e+00
6	7.64e-21	5.49e-30	5.40e+00		1.34e+00
minres converged at iteration 6. |A r_k|=5.49e-30 and |r_k|=7.64e-21.
test stop by condlim
The estimated condition number (=2.05e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.55e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
