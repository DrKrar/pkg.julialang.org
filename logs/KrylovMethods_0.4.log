>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1487.25390625 MB free)
Uptime: 31931.0 sec
Load Avg:  1.0302734375  1.02490234375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1566026 s        122 s     142919 s    1143009 s         36 s
#2  3499 MHz     938634 s         46 s     136160 s    1995063 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.07e-01
  2	1.12e-02
  3	4.57e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.12e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.74e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.86e-02
  2	3.61e-02
  3	8.31e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.61e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.75e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	4.03e-02
cg iterated maxIter (=1) times but reached only residual norm 4.03e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.99e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.96e-15
  2	1.71e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.71e-30.
=== blockcg ===
iter	max(relres)
  1	3.32e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.32e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.97e-01
  2	2.28e-01
  3	1.40e-01
  4	9.50e-02
  5	6.85e-02
  6	4.64e-02
  7	3.15e-02
  8	1.76e-02
  9	8.09e-03
 10	3.67e-03
 11	1.61e-03
 12	6.65e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.65e-04.
=== blockcg ===
iter	max(relres)
  1	3.97e-01
  2	2.28e-01
  3	1.40e-01
  4	9.50e-02
  5	6.85e-02
  6	4.64e-02
  7	3.15e-02
  8	1.76e-02
  9	8.09e-03
 10	3.67e-03
 11	1.61e-03
 12	6.65e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.65e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.63e+01	4.48e-01	1.02e+01
  2	8.41e-01	6.35e-01	1.02e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  8.41e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  4.94e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 1.1e-01 3.4e-02 	 3.4e-02
  2	1.0e-02 3.4e-03 1.1e-03 	 1.1e-03
  3	3.9e-04 1.3e-04 3.5e-05 	 3.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.95e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.6421966083793574]
Givens rotation for v=[1.7112047965633281,0.0]
Givens rotation for v=[-0.626763127754048,-0.4373178156290763]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 56. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 84. Residual norm is 9.94e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.88e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.29e-02
  3	3.81e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.81e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 14. Residual norm is 9.92e-03.
ssor achieved desired tolerance at iteration 21. Residual norm is 9.78e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.16e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.70e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.19e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.19e-01	1.43e+00	5.73e+00		1.15e+00
2	6.18e-02	2.57e-01	9.11e+00		1.83e+00
3	4.64e-03	5.33e-03	9.11e+00		1.83e+00
4	7.81e-04	2.17e-03	9.11e+00		1.83e+00
5	3.39e-05	2.45e-05	9.11e+00		1.83e+00
6	8.39e-08	2.43e-09	9.11e+00		2.19e+00
7	4.30e-18	2.50e-27	9.11e+00		2.27e+00
minres converged at iteration 7. |A r_k|=2.50e-27 and |r_k|=4.30e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.16e-01	9.50e-01	8.06e+00		1.01e+00
2	6.14e-03	4.27e-03	8.06e+00		1.61e+00
3	7.92e-04	1.75e-03	8.06e+00		1.61e+00
4	7.62e-05	1.27e-04	8.06e+00		1.61e+00
5	6.56e-06	7.84e-06	8.06e+00		1.63e+00
6	1.99e-08	7.33e-10	8.06e+00		1.86e+00
7	5.68e-18	1.83e-26	8.06e+00		2.01e+00
minres converged at iteration 7. |A r_k|=1.83e-26 and |r_k|=5.68e-18.
test stop by condlim
The estimated condition number (=2.19e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 9.
test stop by beta
minres stopped because beta (=4.09e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
