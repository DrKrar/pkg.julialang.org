>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1466.96875 MB free)
Uptime: 46362.0 sec
Load Avg:  0.98193359375  0.96533203125  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3511 MHz    2231243 s       6597 s     177893 s    1725812 s        275 s
#2  3511 MHz    1465214 s        434 s     158330 s    2765680 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.20.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.17e-01
  2	9.60e-03
  3	1.39e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.60e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 1.53e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.76e-02
  2	2.80e-02
  3	2.06e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.80e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.06e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.48e-01
cg iterated maxIter (=1) times but reached only residual norm 2.48e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.79e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.67e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.67e-16.
=== blockcg ===
iter	max(relres)
  1	4.97e-13
blockCG iterated maxIter (=1) times but reached only residual norm 4.97e-13 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.64e-01
  3	1.97e-01
  4	1.36e-01
  5	8.80e-02
  6	5.80e-02
  7	3.18e-02
  8	1.70e-02
  9	9.52e-03
 10	4.62e-03
 11	2.04e-03
 12	9.12e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.12e-04.
=== blockcg ===
iter	max(relres)
  1	4.06e-01
  2	2.64e-01
  3	1.97e-01
  4	1.36e-01
  5	8.80e-02
  6	5.80e-02
  7	3.18e-02
  8	1.70e-02
  9	9.52e-03
 10	4.62e-03
 11	2.04e-03
 12	9.12e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.12e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	9.12e+00	5.70e-01	9.75e+00
  2	9.33e-01	6.08e-01	9.73e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  9.33e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.05e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.6e-01 7.3e-02 2.0e-02 	 2.0e-02
  2	6.2e-03 2.0e-03 5.6e-04 	 5.6e-04
  3	1.7e-04 5.5e-05 1.7e-05 	 1.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.51e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.41342520809146094]
Givens rotation for v=[-1.2317089281239932,0.0]
Givens rotation for v=[1.5461118783086139,-0.8067291428702865]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.74e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.01e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.52e-02
  3	4.03e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.03e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 8.98e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.54e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.38e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.67e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.96e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.96e-01	2.46e+00	5.99e+00		1.16e+00
2	1.10e-02	7.11e-03	1.01e+01		1.96e+00
3	5.85e-05	3.94e-06	1.01e+01		2.43e+00
4	2.21e-07	1.04e-08	1.01e+01		2.47e+00
5	3.70e-16	7.83e-24	1.01e+01		2.47e+00
minres converged at iteration 5. |A r_k|=7.83e-24 and |r_k|=3.70e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.57e-01	1.58e+00	8.40e+00		1.01e+00
2	2.83e-03	7.31e-04	8.40e+00		1.63e+00
3	1.58e-05	1.12e-06	8.40e+00		2.01e+00
4	5.75e-08	2.62e-09	8.40e+00		2.04e+00
5	5.15e-17	5.83e-25	8.40e+00		2.04e+00
minres converged at iteration 5. |A r_k|=5.83e-25 and |r_k|=5.15e-17.
test stop by condlim
The estimated condition number (=2.17e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=8.51e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
