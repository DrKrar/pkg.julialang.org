>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1487.73828125 MB free)
Uptime: 49267.0 sec
Load Avg:  0.98046875  0.9970703125  1.03125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2446926 s        110 s     198304 s    1748486 s        368 s
#2  3500 MHz    1588944 s       6367 s     171798 s    2908995 s         11 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.18.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.64e-02
  2	1.33e-02
  3	3.03e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.33e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 4.87e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.56e-02
  2	1.85e-01
  3	4.75e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.85e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 5.05e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.43e-01
cg iterated maxIter (=1) times but reached only residual norm 1.43e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.25e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.35e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.35e-16.
=== blockcg ===
iter	max(relres)
  1	1.66e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.66e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.14e-01
  2	2.36e-01
  3	1.60e-01
  4	1.26e-01
  5	1.00e-01
  6	7.21e-02
  7	4.18e-02
  8	2.20e-02
  9	1.07e-02
 10	4.67e-03
 11	2.15e-03
 12	8.87e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.87e-04.
=== blockcg ===
iter	max(relres)
  1	4.14e-01
  2	2.36e-01
  3	1.60e-01
  4	1.26e-01
  5	1.00e-01
  6	7.21e-02
  7	4.18e-02
  8	2.20e-02
  9	1.07e-02
 10	4.67e-03
 11	2.15e-03
 12	8.87e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.87e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.04e+01	6.56e-01	9.30e+00
  2	2.71e+00	7.50e-01	9.24e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.71e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.65e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.6e-02 3.1e-02 	 3.1e-02
  2	9.8e-03 2.9e-03 9.3e-04 	 9.3e-04
  3	3.0e-04 9.5e-05 3.0e-05 	 3.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.54e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.9861284015493507]
Givens rotation for v=[-0.11293903648941213,0.0]
Givens rotation for v=[0.23878955673161117,-0.6665360347479773]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.97e-03.
ssor achieved desired tolerance at iteration 57. Residual norm is 9.96e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.93e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.59e-02
  3	4.14e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.14e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.67e-03.
ssor achieved desired tolerance at iteration 25. Residual norm is 9.86e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.30e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.07e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.24e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.24e-01	7.69e-01	5.83e+00		1.18e+00
2	1.57e-02	1.82e-02	5.94e+00		1.21e+00
3	6.56e-04	3.88e-04	5.94e+00		1.30e+00
4	6.87e-05	1.07e-04	5.94e+00		1.30e+00
5	2.89e-06	1.78e-06	5.94e+00		1.30e+00
6	2.81e-08	3.58e-09	5.94e+00		1.41e+00
7	3.17e-12	4.48e-15	5.94e+00		1.48e+00
8	2.42e-19	2.29e-25	5.94e+00		1.49e+00
minres converged at iteration 8. |A r_k|=2.29e-25 and |r_k|=2.42e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.23e-02	2.07e-01	5.49e+00		1.01e+00
2	1.56e-03	6.90e-04	5.49e+00		1.13e+00
3	7.08e-05	4.49e-05	5.49e+00		1.22e+00
4	5.90e-06	6.89e-06	5.49e+00		1.22e+00
5	4.50e-07	5.27e-07	5.49e+00		1.22e+00
6	5.73e-09	9.87e-10	5.49e+00		1.26e+00
7	6.62e-13	9.58e-16	5.49e+00		1.36e+00
minres converged at iteration 7. |A r_k|=9.58e-16 and |r_k|=6.62e-13.
test stop by condlim
The estimated condition number (=2.09e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=3.21e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
