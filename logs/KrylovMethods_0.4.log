>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1504.42578125 MB free)
Uptime: 36603.0 sec
Load Avg:  1.01416015625  0.97705078125  0.958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1789012 s       4270 s     153474 s    1337033 s        144 s
#2  3499 MHz    1211979 s       3074 s     133648 s    2167157 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.88e-02
  2	1.08e-02
  3	2.71e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.08e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 9.13e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.04e-01
  2	4.63e-01
  3	3.33e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.63e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 5.44e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.24e-02
cg iterated maxIter (=1) times but reached only residual norm 2.24e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.27e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.00e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.00e-16.
=== blockcg ===
iter	max(relres)
  1	8.86e-16
blockCG iterated maxIter (=1) times but reached only residual norm 8.86e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.15e-01
  2	2.36e-01
  3	1.63e-01
  4	1.07e-01
  5	9.04e-02
  6	6.17e-02
  7	4.10e-02
  8	2.57e-02
  9	1.52e-02
 10	7.35e-03
 11	3.17e-03
 12	1.41e-03
 13	6.40e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.40e-04.
=== blockcg ===
iter	max(relres)
  1	4.15e-01
  2	2.36e-01
  3	1.63e-01
  4	1.07e-01
  5	9.04e-02
  6	6.17e-02
  7	4.10e-02
  8	2.57e-02
  9	1.52e-02
 10	7.35e-03
 11	3.17e-03
 12	1.41e-03
 13	6.40e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.40e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.56e+01	6.22e-01	9.81e+00
  2	5.08e+00	7.22e-01	9.75e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.08e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.86e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 8.9e-02 2.7e-02 	 2.7e-02
  2	8.0e-03 2.4e-03 6.6e-04 	 6.6e-04
  3	2.0e-04 5.8e-05 1.7e-05 	 1.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.84e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.5872542168030848]
Givens rotation for v=[-1.2994481219300615,0.0]
Givens rotation for v=[0.21229969907836102,0.01315237256328717]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 26. Residual norm is 9.85e-03.
ssor achieved desired tolerance at iteration 39. Residual norm is 9.82e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.83e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.49e-02
  3	4.02e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.02e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 1.00e-02.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.48e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.17e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.08e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.58e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.58e-01	4.53e-01	6.05e+00		1.37e+00
2	4.94e-02	4.46e-01	7.27e+00		1.65e+00
3	3.23e-03	5.74e-03	8.31e+00		1.88e+00
4	8.25e-05	3.73e-05	8.31e+00		1.94e+00
5	2.07e-06	9.33e-07	8.31e+00		1.94e+00
6	3.37e-08	9.56e-09	8.31e+00		1.97e+00
7	3.94e-10	7.73e-11	8.31e+00		2.06e+00
8	1.80e-13	1.44e-15	8.31e+00		2.06e+00
minres converged at iteration 8. |A r_k|=1.44e-15 and |r_k|=1.80e-13.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.42e-02	5.44e-01	7.07e+00		1.00e+00
2	9.89e-03	4.51e-02	8.09e+00		1.26e+00
3	1.72e-04	5.77e-05	8.09e+00		1.70e+00
4	2.48e-06	6.22e-07	8.09e+00		1.93e+00
5	4.25e-08	1.26e-08	8.09e+00		1.93e+00
6	1.89e-09	1.44e-09	8.09e+00		1.95e+00
7	1.82e-11	3.11e-12	8.09e+00		1.95e+00
8	1.83e-14	3.26e-16	8.09e+00		1.95e+00
minres converged at iteration 8. |A r_k|=3.26e-16 and |r_k|=1.83e-14.
test stop by condlim
The estimated condition number (=2.11e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.47e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
