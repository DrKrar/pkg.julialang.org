>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1521.0625 MB free)
Uptime: 31656.0 sec
Load Avg:  1.28662109375  1.064453125  1.05615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1589998 s       1717 s     142062 s    1083217 s         57 s
#2  3499 MHz     948612 s       4905 s     128278 s    1973387 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.02e-01
  2	5.67e-02
  3	3.23e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 5.67e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 9.00e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.77e-02
  2	1.82e-02
  3	3.57e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.82e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 8.59e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.68e-01
cg iterated maxIter (=1) times but reached only residual norm 1.68e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 25. Residual norm is 4.46e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.74e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.74e-16.
=== blockcg ===
iter	max(relres)
  1	6.05e-16
blockCG iterated maxIter (=1) times but reached only residual norm 6.05e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.02e-01
  2	2.33e-01
  3	1.83e-01
  4	1.44e-01
  5	1.04e-01
  6	7.24e-02
  7	4.03e-02
  8	1.98e-02
  9	9.74e-03
 10	4.44e-03
 11	1.79e-03
 12	7.17e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.17e-04.
=== blockcg ===
iter	max(relres)
  1	4.02e-01
  2	2.33e-01
  3	1.83e-01
  4	1.44e-01
  5	1.04e-01
  6	7.24e-02
  7	4.03e-02
  8	1.98e-02
  9	9.74e-03
 10	4.44e-03
 11	1.79e-03
 12	7.17e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.17e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	8.12e+00	2.94e-01	9.97e+00
  2	1.36e+00	3.87e-01	9.95e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.36e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.90e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.7e-02 2.6e-02 	 2.6e-02
  2	7.8e-03 2.3e-03 7.2e-04 	 7.2e-04
  3	2.5e-04 7.1e-05 2.2e-05 	 2.2e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.11e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.560733274729756]
Givens rotation for v=[-1.982046855179851,0.0]
Givens rotation for v=[1.6301073783827236,-0.9599414258271675]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 26. Residual norm is 9.68e-03.
ssor achieved desired tolerance at iteration 38. Residual norm is 9.94e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 7.43e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.41e-02
  3	3.97e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.97e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 8.94e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.51e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.88e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.78e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 6.48e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.48e-02	4.69e-02	4.98e+00		1.18e+00
2	3.64e-03	2.40e-03	4.98e+00		1.18e+00
3	3.08e-05	3.13e-06	4.98e+00		1.18e+00
4	9.23e-20	3.23e-33	4.98e+00		1.18e+00
minres converged at iteration 4. |A r_k|=3.23e-33 and |r_k|=9.23e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.55e-03	5.58e-03	4.45e+00		1.00e+00
2	2.10e-04	9.16e-05	4.45e+00		1.02e+00
3	1.28e-06	9.13e-08	4.45e+00		1.02e+00
4	2.56e-21	5.93e-35	4.45e+00		1.02e+00
minres converged at iteration 4. |A r_k|=5.93e-35 and |r_k|=2.56e-21.
test stop by condlim
The estimated condition number (=2.25e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=9.56e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
