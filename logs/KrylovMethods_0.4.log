>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (925.47265625 MB free)
Uptime: 32268.0 sec
Load Avg:  0.9296875  0.9541015625  0.9501953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1522722 s       4422 s     151118 s    1131904 s         81 s
#2  3499 MHz     852906 s       2311 s     134861 s    2068477 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.47e-02
  2	1.01e-02
  3	1.82e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.01e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.60e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.47e-02
  2	1.85e-02
  3	2.23e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.85e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.40e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.00e-01
cg iterated maxIter (=1) times but reached only residual norm 1.00e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.90e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.07e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.07e-16.
=== blockcg ===
iter	max(relres)
  1	1.76e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.76e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.69e-01
  3	1.95e-01
  4	1.53e-01
  5	1.16e-01
  6	6.82e-02
  7	3.81e-02
  8	2.03e-02
  9	1.01e-02
 10	4.98e-03
 11	2.28e-03
 12	9.69e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.69e-04.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.69e-01
  3	1.95e-01
  4	1.53e-01
  5	1.16e-01
  6	6.82e-02
  7	3.81e-02
  8	2.03e-02
  9	1.01e-02
 10	4.98e-03
 11	2.28e-03
 12	9.69e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.69e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.27e+01	4.11e-01	9.29e+00
  2	1.33e+00	4.80e-01	9.25e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.33e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.34e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.0e-01 3.0e-02 	 3.0e-02
  2	9.1e-03 3.0e-03 8.6e-04 	 8.6e-04
  3	2.6e-04 9.0e-05 3.1e-05 	 3.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.78e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.0444871421240689]
Givens rotation for v=[-0.4221855196626197,0.0]
Givens rotation for v=[-1.1042567289575373,0.20199451862027964]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 36. Residual norm is 9.86e-03.
ssor achieved desired tolerance at iteration 54. Residual norm is 9.84e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.65e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.56e-02
  3	4.09e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.09e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.26e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.83e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.38e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.75e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.34e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.34e-01	1.82e-01	4.90e+00		1.14e+00
2	8.58e-03	6.71e-03	5.46e+00		1.27e+00
3	2.85e-04	1.02e-04	5.46e+00		1.27e+00
4	6.17e-06	1.43e-06	5.46e+00		1.27e+00
5	3.82e-07	2.44e-07	5.46e+00		1.27e+00
6	3.72e-10	3.54e-12	5.46e+00		1.30e+00
7	4.43e-13	4.92e-15	5.46e+00		1.36e+00
minres converged at iteration 7. |A r_k|=4.92e-15 and |r_k|=4.43e-13.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.99e-02	3.66e-02	5.31e+00		1.00e+00
2	5.82e-04	1.71e-04	5.31e+00		1.22e+00
3	1.13e-05	2.42e-06	5.31e+00		1.22e+00
4	3.83e-07	1.37e-07	5.31e+00		1.22e+00
5	2.04e-08	1.07e-08	5.31e+00		1.26e+00
6	2.96e-11	4.33e-13	5.31e+00		1.26e+00
7	3.50e-14	3.88e-16	5.31e+00		1.33e+00
minres converged at iteration 7. |A r_k|=3.88e-16 and |r_k|=3.50e-14.
test stop by condlim
The estimated condition number (=3.54e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=8.28e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
