>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1470.16796875 MB free)
Uptime: 42705.0 sec
Load Avg:  1.0068359375  1.0146484375  1.00048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3484 MHz    2107276 s       6811 s     182203 s    1504148 s        106 s
#2  3484 MHz    1317773 s       1747 s     159158 s    2640562 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.2
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.14.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.18e-02
  2	7.08e-03
  3	6.12e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.08e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 6.35e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.40e-02
  2	4.46e-02
  3	3.63e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.46e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 8.84e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.70e-01
cg iterated maxIter (=1) times but reached only residual norm 1.70e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.75e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.83e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.83e-16.
=== blockcg ===
iter	max(relres)
  1	7.53e-13
blockCG iterated maxIter (=1) times but reached only residual norm 7.53e-13 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.36e-01
  3	1.56e-01
  4	1.11e-01
  5	8.24e-02
  6	5.63e-02
  7	3.63e-02
  8	1.89e-02
  9	9.69e-03
 10	4.66e-03
 11	2.01e-03
 12	8.80e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.80e-04.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.36e-01
  3	1.56e-01
  4	1.11e-01
  5	8.24e-02
  6	5.63e-02
  7	3.63e-02
  8	1.89e-02
  9	9.69e-03
 10	4.66e-03
 11	2.01e-03
 12	8.80e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.80e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.55e+01	6.10e-01	9.61e+00
  2	9.17e+00	7.68e-01	9.54e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  9.17e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.52e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 1.1e-01 3.8e-02 	 3.8e-02
  2	1.4e-02 4.8e-03 1.5e-03 	 1.5e-03
  3	4.6e-04 1.6e-04 5.2e-05 	 5.2e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.07e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.0992079216928825]
Givens rotation for v=[-1.0427568490323136,0.0]
Givens rotation for v=[-1.353183292988727,-0.00888131372840695]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 26. Residual norm is 9.79e-03.
ssor achieved desired tolerance at iteration 39. Residual norm is 9.76e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 52. Residual norm is 7.56e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.47e-02
  3	3.98e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.98e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.77e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.27e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.60e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.81e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 4.98e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.98e-01	7.79e+00	9.45e+00		1.08e+00
2	1.05e-01	4.86e-01	1.14e+01		1.62e+00
3	6.30e-03	7.53e-03	1.14e+01		2.00e+00
4	1.42e-03	7.05e-03	1.14e+01		2.00e+00
5	5.00e-04	4.90e-03	1.14e+01		2.00e+00
6	5.40e-05	1.30e-04	1.14e+01		2.00e+00
7	1.01e-05	3.72e-05	1.14e+01		2.06e+00
8	1.23e-16	2.82e-26	1.14e+01		2.12e+00
minres converged at iteration 8. |A r_k|=2.82e-26 and |r_k|=1.23e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.61e-01	3.41e+00	7.21e+00		1.03e+00
2	4.45e-02	1.92e-01	1.24e+01		1.78e+00
3	2.68e-03	3.43e-03	1.24e+01		2.07e+00
4	5.10e-04	1.91e-03	1.24e+01		2.26e+00
5	1.17e-04	5.44e-04	1.24e+01		2.26e+00
6	2.48e-05	1.75e-04	1.24e+01		2.26e+00
7	4.45e-06	1.53e-05	1.24e+01		2.27e+00
8	1.33e-16	8.24e-26	1.24e+01		2.27e+00
minres converged at iteration 8. |A r_k|=8.24e-26 and |r_k|=1.33e-16.
test stop by condlim
The estimated condition number (=2.84e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=4.33e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
