>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.0
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (929.01171875 MB free)
Uptime: 32365.0 sec
Load Avg:  1.021484375  0.9892578125  0.95849609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1448306 s       1836 s     163272 s    1218399 s         72 s
#2  3500 MHz     947301 s       5641 s     145945 s    1964562 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - KrylovMethods                 0.2.0
1 additional packages:
 - Compat                        0.8.6
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.19
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	2.61e-02
  3	1.01e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.61e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 3.55e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.99e-02
  2	1.31e-01
  3	3.34e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.31e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.89e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	6.76e-03
cg iterated maxIter (=1) times but reached only residual norm 6.76e-03 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.10e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.55e-15
  2	1.48e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.48e-30.
=== blockcg ===
iter	max(relres)
  1	7.49e-16
blockCG iterated maxIter (=1) times but reached only residual norm 7.49e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.62e-01
  3	2.14e-01
  4	1.43e-01
  5	9.51e-02
  6	6.00e-02
  7	3.92e-02
  8	2.53e-02
  9	1.41e-02
 10	6.75e-03
 11	3.14e-03
 12	1.48e-03
 13	6.10e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.10e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.62e-01
  3	2.14e-01
  4	1.43e-01
  5	9.51e-02
  6	6.00e-02
  7	3.92e-02
  8	2.53e-02
  9	1.41e-02
 10	6.75e-03
 11	3.14e-03
 12	1.48e-03
 13	6.10e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.10e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.41e+01	8.99e-01	1.12e+01
  2	2.22e+00	9.68e-01	1.12e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.22e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.46e-08.
=== CGLS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 1.1e-01 3.4e-02 	 3.4e-02
  2	1.1e-02 3.4e-03 1.1e-03 	 1.1e-03
  3	3.6e-04 1.1e-04 4.0e-05 	 4.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.80e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.5044569420498688]
Givens rotation for v=[-0.8774959488024959,0.0]
Givens rotation for v=[0.6134334380614197,0.9359697668900061]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 32. Residual norm is 9.72e-03.
ssor achieved desired tolerance at iteration 47. Residual norm is 9.90e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.08e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.48e-02
  3	3.99e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.99e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.45e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.69e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.83e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.23e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.56e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.56e-01	2.02e+00	6.34e+00		1.11e+00
2	6.56e-02	2.14e-01	8.25e+00		1.45e+00
3	1.84e-02	1.63e-01	1.19e+01		2.10e+00
4	6.02e-03	3.84e-02	1.19e+01		2.10e+00
5	1.51e-03	6.57e-03	1.19e+01		2.10e+00
6	4.40e-05	2.30e-05	1.19e+01		2.10e+00
7	9.19e-07	2.24e-07	1.19e+01		2.86e+00
8	1.18e-08	1.85e-09	1.19e+01		2.86e+00
9	1.26e-17	1.50e-25	1.19e+01		2.98e+00
minres converged at iteration 9. |A r_k|=1.50e-25 and |r_k|=1.26e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.39e-01	1.03e+00	6.84e+00		1.01e+00
2	4.95e-02	3.16e-01	8.97e+00		1.33e+00
3	6.30e-03	2.25e-02	1.26e+01		1.86e+00
4	2.09e-03	1.48e-02	1.26e+01		1.86e+00
5	2.23e-04	3.40e-04	1.26e+01		2.33e+00
6	1.38e-05	1.56e-05	1.26e+01		2.33e+00
7	2.59e-07	5.73e-08	1.26e+01		2.99e+00
8	4.02e-09	7.60e-10	1.26e+01		2.99e+00
9	3.01e-17	2.53e-24	1.26e+01		3.13e+00
minres converged at iteration 9. |A r_k|=2.53e-24 and |r_k|=3.01e-17.
test stop by condlim
The estimated condition number (=2.06e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=2.58e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.19
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
