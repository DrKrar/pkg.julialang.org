>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1489.046875 MB free)
Uptime: 36974.0 sec
Load Avg:  1.0224609375  1.0146484375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1826025 s       6082 s     162938 s    1309313 s        168 s
#2  3499 MHz    1155280 s         57 s     143425 s    2231496 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.4
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.86e-02
  2	1.05e-02
  3	6.93e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.05e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.93e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.98e-02
  2	2.53e-02
  3	5.91e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.53e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 5.74e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.11e-01
cg iterated maxIter (=1) times but reached only residual norm 1.11e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.12e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.07e-14
  2	2.10e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 2.10e-29.
=== blockcg ===
iter	max(relres)
  1	4.72e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.72e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.53e-01
  3	1.57e-01
  4	1.20e-01
  5	9.12e-02
  6	6.66e-02
  7	4.14e-02
  8	2.42e-02
  9	1.15e-02
 10	5.11e-03
 11	2.58e-03
 12	1.07e-03
 13	4.39e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.39e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.53e-01
  3	1.57e-01
  4	1.20e-01
  5	9.12e-02
  6	6.66e-02
  7	4.14e-02
  8	2.42e-02
  9	1.15e-02
 10	5.11e-03
 11	2.58e-03
 12	1.07e-03
 13	4.39e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.39e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	5.03e+01	7.31e-01	1.04e+01
  2	1.22e+01	1.03e+00	1.02e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.22e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  8.09e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 7.0e-02 2.1e-02 	 2.1e-02
  2	5.7e-03 1.8e-03 5.2e-04 	 5.2e-04
  3	1.8e-04 5.4e-05 1.8e-05 	 1.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.97e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.09895335087677135]
Givens rotation for v=[0.9368234410718362,0.0]
Givens rotation for v=[2.114836494546842,0.6460777891396076]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.96e-03.
ssor achieved desired tolerance at iteration 57. Residual norm is 9.95e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 8.09e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.49e-02
  3	4.02e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.02e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.26e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.82e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.48e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.91e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.60e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.60e-01	4.08e-01	5.73e+00		1.26e+00
2	3.20e-02	1.40e-01	6.61e+00		1.46e+00
3	4.94e-03	1.44e-02	6.61e+00		1.46e+00
4	2.36e-04	1.95e-04	6.61e+00		1.46e+00
5	3.09e-05	8.48e-05	6.61e+00		1.46e+00
6	6.00e-08	1.96e-09	6.61e+00		1.46e+00
7	1.49e-09	5.82e-10	6.61e+00		1.48e+00
8	2.09e-19	4.11e-28	6.61e+00		1.64e+00
minres converged at iteration 8. |A r_k|=4.11e-28 and |r_k|=2.09e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.04e-02	2.27e-01	6.40e+00		1.00e+00
2	6.48e-03	1.78e-02	6.40e+00		1.26e+00
3	2.45e-04	1.74e-04	6.40e+00		1.26e+00
4	3.84e-05	1.22e-04	6.40e+00		1.26e+00
5	2.72e-07	3.31e-08	6.40e+00		1.29e+00
6	2.19e-09	2.83e-10	6.40e+00		1.39e+00
7	1.24e-10	1.02e-10	6.40e+00		1.53e+00
8	9.42e-20	1.08e-27	6.40e+00		1.53e+00
minres converged at iteration 8. |A r_k|=1.08e-27 and |r_k|=9.42e-20.
test stop by condlim
The estimated condition number (=2.58e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=3.32e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
