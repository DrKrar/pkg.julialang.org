>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (932.8671875 MB free)
Uptime: 32645.0 sec
Load Avg:  0.9931640625  0.984375  0.955078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1471046 s       4387 s     159842 s    1233978 s         81 s
#2  3500 MHz    1033911 s       2376 s     145108 s    1900233 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - KrylovMethods                 0.2.0
1 additional packages:
 - Compat                        0.8.7
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.07e-01
  2	1.43e-02
  3	4.95e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.43e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7.5. Residual norm is 9.23e-08.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.16e-02
  2	5.77e-02
  3	4.93e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.77e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 2.09e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	8.92e-02
cg iterated maxIter (=1) times but reached only residual norm 8.92e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.86e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.59e-14
  2	1.03e-28
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.03e-28.
=== blockcg ===
iter	max(relres)
  1	1.13e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.13e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.15e-01
  2	2.42e-01
  3	1.64e-01
  4	1.25e-01
  5	8.35e-02
  6	6.61e-02
  7	4.61e-02
  8	2.77e-02
  9	1.42e-02
 10	6.92e-03
 11	3.21e-03
 12	1.31e-03
 13	4.92e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.92e-04.
=== blockcg ===
iter	max(relres)
  1	4.15e-01
  2	2.42e-01
  3	1.64e-01
  4	1.25e-01
  5	8.35e-02
  6	6.61e-02
  7	4.61e-02
  8	2.77e-02
  9	1.42e-02
 10	6.92e-03
 11	3.21e-03
 12	1.31e-03
 13	4.92e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.92e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.81e+01	6.53e-01	9.79e+00
  2	1.91e+01	8.36e-01	9.71e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.91e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.25e-05.
=== CGLS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 8.7e-02 2.8e-02 	 2.8e-02
  2	9.2e-03 3.0e-03 8.7e-04 	 8.7e-04
  3	2.2e-04 7.1e-05 1.9e-05 	 1.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.02e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.9148262486769192]
Givens rotation for v=[1.7562873124021432,0.0]
Givens rotation for v=[-1.660239519265908,0.8277084247384062]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 30. Residual norm is 9.99e-03.
ssor achieved desired tolerance at iteration 45. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.32e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.49e-02
  3	4.00e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.00e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.69e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.93e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.27e-04.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.30e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.00e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.00e-01	8.70e-01	5.39e+00		1.07e+00
2	4.96e-02	9.68e-02	7.40e+00		1.47e+00
3	1.94e-03	1.18e-03	8.55e+00		1.70e+00
4	1.75e-04	1.39e-04	8.55e+00		1.87e+00
5	1.12e-05	6.31e-06	8.55e+00		1.87e+00
6	9.24e-08	6.28e-09	8.55e+00		1.99e+00
7	2.37e-11	4.72e-14	8.55e+00		2.11e+00
8	2.16e-17	1.51e-22	8.55e+00		2.14e+00
minres converged at iteration 8. |A r_k|=1.51e-22 and |r_k|=2.16e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.01e-01	4.19e-01	6.48e+00		1.00e+00
2	2.22e-02	5.09e-02	7.17e+00		1.25e+00
3	3.07e-04	5.71e-05	7.77e+00		1.35e+00
4	1.56e-05	6.47e-06	7.77e+00		1.84e+00
5	1.25e-06	8.46e-07	7.77e+00		1.84e+00
6	2.14e-08	3.40e-09	7.77e+00		1.84e+00
7	5.73e-12	1.19e-14	7.77e+00		1.92e+00
8	4.67e-18	2.92e-23	7.77e+00		1.94e+00
minres converged at iteration 8. |A r_k|=2.92e-23 and |r_k|=4.67e-18.
test stop by condlim
The estimated condition number (=2.84e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=2.38e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
