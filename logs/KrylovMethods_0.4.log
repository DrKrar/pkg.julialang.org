>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (914.38671875 MB free)
Uptime: 32705.0 sec
Load Avg:  1.056640625  1.0068359375  1.013671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    1473683 s       2455 s     154152 s    1223743 s         88 s
#2  3503 MHz     939917 s       4737 s     142107 s    1998806 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - KrylovMethods                 0.2.0
1 additional packages:
 - Compat                        0.8.6
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.19
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	1.16e-02
  3	4.45e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.16e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 1.33e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.20e-02
  2	1.82e-02
  3	1.48e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.82e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.37e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	7.29e-02
cg iterated maxIter (=1) times but reached only residual norm 7.29e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 25. Residual norm is 4.92e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	9.13e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 9.13e-16.
=== blockcg ===
iter	max(relres)
  1	5.76e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.76e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.87e-01
  2	2.18e-01
  3	1.61e-01
  4	1.27e-01
  5	1.05e-01
  6	7.23e-02
  7	3.86e-02
  8	1.98e-02
  9	9.45e-03
 10	4.24e-03
 11	1.78e-03
 12	7.68e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.68e-04.
=== blockcg ===
iter	max(relres)
  1	3.87e-01
  2	2.18e-01
  3	1.61e-01
  4	1.27e-01
  5	1.05e-01
  6	7.23e-02
  7	3.86e-02
  8	1.98e-02
  9	9.45e-03
 10	4.24e-03
 11	1.78e-03
 12	7.68e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.68e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	8.59e+00	5.35e-01	1.03e+01
  2	7.64e-01	5.88e-01	1.03e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  7.64e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.27e-08.
=== CGLS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.8e-02 3.8e-02 	 3.8e-02
  2	1.4e-02 4.7e-03 1.6e-03 	 1.6e-03
  3	5.6e-04 2.2e-04 7.5e-05 	 7.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.52e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.1120670601918736]
Givens rotation for v=[1.0817751014487633,0.0]
Givens rotation for v=[-0.2840727265764762,0.024994296016592484]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 31. Residual norm is 9.86e-03.
ssor achieved desired tolerance at iteration 46. Residual norm is 9.95e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.58e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.53e-02
  3	4.05e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.05e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.00e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.58e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.04e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.91e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.52e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.52e-01	1.15e+00	6.14e+00		1.25e+00
2	1.06e-02	9.02e-03	6.27e+00		1.28e+00
3	1.25e-03	2.69e-03	6.27e+00		1.28e+00
4	1.59e-05	3.64e-06	6.27e+00		1.28e+00
5	4.81e-08	2.24e-09	6.27e+00		1.50e+00
6	6.61e-10	1.47e-10	6.27e+00		1.50e+00
7	1.61e-18	5.89e-26	6.27e+00		1.55e+00
minres converged at iteration 7. |A r_k|=5.89e-26 and |r_k|=1.61e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.42e-02	3.41e-01	5.72e+00		1.01e+00
2	1.26e-03	4.35e-04	5.72e+00		1.17e+00
3	1.40e-04	2.73e-04	5.72e+00		1.20e+00
4	2.74e-06	1.00e-06	5.72e+00		1.20e+00
5	6.39e-09	2.31e-10	5.72e+00		1.36e+00
6	1.31e-10	4.34e-11	5.72e+00		1.36e+00
7	4.65e-19	2.48e-26	5.72e+00		1.41e+00
minres converged at iteration 7. |A r_k|=2.48e-26 and |r_k|=4.65e-19.
test stop by condlim
The estimated condition number (=3.40e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.88e-11) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.19
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
