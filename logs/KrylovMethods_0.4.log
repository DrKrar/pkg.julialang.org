>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1464.6328125 MB free)
Uptime: 34217.0 sec
Load Avg:  0.96875  0.978515625  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1672438 s       2026 s     156877 s    1227184 s        110 s
#2  3499 MHz     979722 s       4625 s     144592 s    2172946 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.14e-01
  2	1.39e-02
  3	1.48e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.39e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 4.54e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.01e-01
  2	4.32e-02
  3	2.05e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.32e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 7.48e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.09e-01
cg iterated maxIter (=1) times but reached only residual norm 2.09e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.64e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.07e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 7.07e-16.
=== blockcg ===
iter	max(relres)
  1	2.85e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.85e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.41e-01
  3	1.75e-01
  4	1.15e-01
  5	8.50e-02
  6	6.82e-02
  7	4.16e-02
  8	2.16e-02
  9	1.05e-02
 10	4.76e-03
 11	2.08e-03
 12	8.72e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.72e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.41e-01
  3	1.75e-01
  4	1.15e-01
  5	8.50e-02
  6	6.82e-02
  7	4.16e-02
  8	2.16e-02
  9	1.05e-02
 10	4.76e-03
 11	2.08e-03
 12	8.72e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.72e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.11e+01	7.22e-01	1.01e+01
  2	2.93e+00	7.85e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.93e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.62e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.6e-01 9.0e-02 2.7e-02 	 2.7e-02
  2	8.1e-03 2.6e-03 7.9e-04 	 7.9e-04
  3	2.2e-04 6.9e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.89e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.8556915488956346]
Givens rotation for v=[-1.0204627354850262,0.0]
Givens rotation for v=[0.23000037906756438,-1.3641125047341967]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.89e-03.
ssor achieved desired tolerance at iteration 55. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.53e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.56e-02
  3	4.10e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.10e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.01e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.60e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.93e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.16e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.64e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.64e-01	3.51e-01	5.32e+00		1.21e+00
2	2.03e-02	5.26e-02	7.41e+00		1.68e+00
3	4.02e-03	1.31e-02	7.41e+00		1.68e+00
4	2.75e-04	3.00e-04	7.41e+00		1.68e+00
5	1.77e-05	1.61e-05	7.41e+00		1.68e+00
6	9.46e-07	6.65e-07	7.41e+00		1.68e+00
7	5.35e-09	3.75e-10	7.41e+00		1.77e+00
8	6.35e-19	1.01e-27	7.41e+00		1.77e+00
minres converged at iteration 8. |A r_k|=1.01e-27 and |r_k|=6.35e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.32e-02	1.44e-01	7.17e+00		1.00e+00
2	5.73e-03	1.38e-02	7.17e+00		1.49e+00
3	2.85e-04	2.56e-04	7.17e+00		1.49e+00
4	1.94e-05	1.91e-05	7.17e+00		1.49e+00
5	9.69e-07	6.26e-07	7.17e+00		1.64e+00
6	3.51e-08	1.60e-08	7.17e+00		1.70e+00
7	6.37e-11	1.52e-12	7.17e+00		1.70e+00
8	3.06e-19	1.98e-26	7.17e+00		1.70e+00
minres converged at iteration 8. |A r_k|=1.98e-26 and |r_k|=3.06e-19.
test stop by condlim
The estimated condition number (=2.72e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=5.55e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
