>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1467.15234375 MB free)
Uptime: 45615.0 sec
Load Avg:  1.0029296875  1.01171875  0.96533203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2189062 s       4470 s     177090 s    1709580 s        188 s
#2  3499 MHz    1523677 s       3560 s     150994 s    2686528 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.21.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.50e-02
  2	6.80e-03
  3	2.11e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 6.80e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 5.98e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.86e-02
  2	3.13e+00
  3	3.22e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.13e+00 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.62e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	5.34e-02
cg iterated maxIter (=1) times but reached only residual norm 5.34e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.13e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.11e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.11e-16.
=== blockcg ===
iter	max(relres)
  1	3.56e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.56e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.96e-01
  2	2.23e-01
  3	1.68e-01
  4	1.40e-01
  5	1.01e-01
  6	5.95e-02
  7	3.17e-02
  8	1.61e-02
  9	7.82e-03
 10	3.77e-03
 11	1.76e-03
 12	7.37e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.37e-04.
=== blockcg ===
iter	max(relres)
  1	3.96e-01
  2	2.23e-01
  3	1.68e-01
  4	1.40e-01
  5	1.01e-01
  6	5.95e-02
  7	3.17e-02
  8	1.61e-02
  9	7.82e-03
 10	3.77e-03
 11	1.76e-03
 12	7.37e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.37e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.53e+01	5.26e-01	1.02e+01
  2	1.14e+00	6.23e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.14e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.10e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.3e-01 9.4e-02 2.8e-02 	 2.8e-02
  2	9.6e-03 3.5e-03 1.1e-03 	 1.1e-03
  3	3.7e-04 1.2e-04 2.9e-05 	 2.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.95e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,2.00766185981132]
Givens rotation for v=[0.525817479024024,0.0]
Givens rotation for v=[0.3608629644433839,1.2929471934307926]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 33. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 49. Residual norm is 9.98e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.60e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.42e-02
  3	4.00e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.00e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.42e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.35e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.06e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.83e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.83e-01	2.70e+00	6.80e+00		1.12e+00
2	8.79e-02	5.04e-01	1.09e+01		1.79e+00
3	2.97e-02	2.72e-01	1.09e+01		1.79e+00
4	9.45e-04	4.35e-04	1.09e+01		2.14e+00
5	3.60e-05	1.91e-05	1.09e+01		2.36e+00
6	3.98e-07	5.51e-08	1.09e+01		2.62e+00
7	2.77e-09	2.37e-10	1.09e+01		2.68e+00
8	4.03e-16	7.16e-22	1.09e+01		2.69e+00
minres converged at iteration 8. |A r_k|=7.16e-22 and |r_k|=4.03e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.65e-01	1.92e+00	9.02e+00		1.01e+00
2	4.52e-02	2.26e-01	9.97e+00		1.48e+00
3	9.86e-03	5.59e-02	9.97e+00		1.48e+00
4	2.83e-04	1.14e-04	9.97e+00		2.09e+00
5	1.32e-05	8.57e-06	9.97e+00		2.16e+00
6	1.52e-07	2.21e-08	9.97e+00		2.38e+00
7	1.07e-09	9.24e-11	9.97e+00		2.45e+00
8	5.38e-17	3.30e-23	9.97e+00		2.46e+00
minres converged at iteration 8. |A r_k|=3.30e-23 and |r_k|=5.38e-17.
test stop by condlim
The estimated condition number (=2.62e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=9.00e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
