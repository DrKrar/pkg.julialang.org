>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1490.5859375 MB free)
Uptime: 37133.0 sec
Load Avg:  1.0068359375  1.0126953125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1807150 s      11228 s     171226 s    1342173 s         93 s
#2  3504 MHz    1197334 s       3348 s     155265 s    2215015 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.00e-02
  2	1.59e-02
  3	1.21e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.59e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.93e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.97e-02
  2	7.69e-02
  3	4.35e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 7.69e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 3.38e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	7.07e-02
cg iterated maxIter (=1) times but reached only residual norm 7.07e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.61e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.35e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.35e-16.
=== blockcg ===
iter	max(relres)
  1	5.92e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.92e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.10e-01
  2	2.36e-01
  3	1.65e-01
  4	1.11e-01
  5	8.65e-02
  6	7.02e-02
  7	4.60e-02
  8	2.63e-02
  9	1.43e-02
 10	7.46e-03
 11	3.76e-03
 12	1.65e-03
 13	6.29e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.29e-04.
=== blockcg ===
iter	max(relres)
  1	4.10e-01
  2	2.36e-01
  3	1.65e-01
  4	1.11e-01
  5	8.65e-02
  6	7.02e-02
  7	4.60e-02
  8	2.63e-02
  9	1.43e-02
 10	7.46e-03
 11	3.76e-03
 12	1.65e-03
 13	6.29e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.29e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.33e+01	6.35e-01	9.81e+00
  2	2.96e+00	8.26e-01	9.74e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.96e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.14e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 8.8e-02 2.3e-02 	 2.3e-02
  2	6.8e-03 2.1e-03 6.6e-04 	 6.6e-04
  3	2.0e-04 6.0e-05 1.5e-05 	 1.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.75e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.5436238676808443]
Givens rotation for v=[-1.061135826712851,0.0]
Givens rotation for v=[-1.7663400124948598,-0.014798066448631209]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 31. Residual norm is 9.64e-03.
ssor achieved desired tolerance at iteration 46. Residual norm is 9.74e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.95e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.46e-02
  3	4.00e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.00e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.75e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 1.00e-02.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 8.52e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.95e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.27e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.27e-01	6.23e-01	5.38e+00		1.14e+00
2	1.91e-02	2.32e-02	6.30e+00		1.33e+00
3	3.59e-03	1.07e-02	6.35e+00		1.34e+00
4	2.34e-04	1.97e-04	6.35e+00		1.34e+00
5	3.84e-05	7.57e-05	6.35e+00		1.35e+00
6	2.16e-06	1.63e-06	6.35e+00		1.35e+00
7	3.12e-09	5.03e-11	6.35e+00		1.45e+00
8	1.77e-20	1.07e-30	6.35e+00		1.53e+00
minres converged at iteration 8. |A r_k|=1.07e-30 and |r_k|=1.77e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.48e-02	1.95e-01	5.83e+00		1.00e+00
2	6.48e-03	9.29e-03	5.83e+00		1.19e+00
3	3.07e-04	2.49e-04	6.90e+00		1.41e+00
4	3.90e-05	5.57e-05	6.90e+00		1.56e+00
5	4.04e-06	5.85e-06	6.90e+00		1.56e+00
6	1.75e-07	8.87e-08	6.90e+00		1.56e+00
7	4.54e-10	1.35e-11	6.90e+00		1.56e+00
8	6.42e-20	9.62e-29	6.90e+00		1.66e+00
minres converged at iteration 8. |A r_k|=9.62e-29 and |r_k|=6.42e-20.
test stop by condlim
The estimated condition number (=2.28e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=2.09e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
