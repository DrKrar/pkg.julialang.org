>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1506.21484375 MB free)
Uptime: 35858.0 sec
Load Avg:  0.93017578125  0.95458984375  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1807433 s      11520 s     163212 s    1215129 s        132 s
#2  3499 MHz    1081601 s       3718 s     146012 s    2221389 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.19e-02
  2	1.02e-02
  3	2.38e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.02e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 4.54e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.71e-02
  2	2.36e-02
  3	1.07e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.36e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 9.93e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.36e-01
cg iterated maxIter (=1) times but reached only residual norm 1.36e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.36e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.91e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.91e-16.
=== blockcg ===
iter	max(relres)
  1	6.60e-16
blockCG iterated maxIter (=1) times but reached only residual norm 6.60e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.24e-01
  3	1.43e-01
  4	1.07e-01
  5	7.21e-02
  6	4.94e-02
  7	2.99e-02
  8	1.55e-02
  9	7.37e-03
 10	3.39e-03
 11	1.60e-03
 12	6.82e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.82e-04.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.24e-01
  3	1.43e-01
  4	1.07e-01
  5	7.21e-02
  6	4.94e-02
  7	2.99e-02
  8	1.55e-02
  9	7.37e-03
 10	3.39e-03
 11	1.60e-03
 12	6.82e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.82e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.03e+01	6.15e-01	9.53e+00
  2	3.22e+00	7.31e-01	9.49e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.22e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  8.21e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.6e-02 2.8e-02 	 2.8e-02
  2	8.2e-03 2.7e-03 9.0e-04 	 9.0e-04
  3	2.9e-04 8.6e-05 2.7e-05 	 2.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.15e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.8467105747353947]
Givens rotation for v=[0.25941284038226986,0.0]
Givens rotation for v=[0.5974819721720971,-1.1339060835161425]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 32. Residual norm is 9.92e-03.
ssor achieved desired tolerance at iteration 48. Residual norm is 9.90e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.65e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.32e-02
  3	3.88e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.88e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.47e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.71e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.73e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 7.37e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.60e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.60e-01	2.69e-01	4.91e+00		1.16e+00
2	1.24e-02	1.52e-02	6.71e+00		1.58e+00
3	2.00e-04	4.30e-05	6.71e+00		1.58e+00
4	2.22e-06	2.48e-07	6.71e+00		1.64e+00
5	4.15e-08	1.03e-08	6.71e+00		1.64e+00
6	1.07e-18	2.75e-28	6.71e+00		1.67e+00
minres converged at iteration 6. |A r_k|=2.75e-28 and |r_k|=1.07e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.84e-02	8.05e-02	6.49e+00		1.00e+00
2	2.90e-03	3.20e-03	6.49e+00		1.45e+00
3	9.99e-06	4.38e-07	6.49e+00		1.45e+00
4	5.40e-07	2.98e-07	6.49e+00		1.57e+00
5	2.77e-09	1.85e-10	6.49e+00		1.57e+00
6	3.90e-19	5.44e-28	6.49e+00		1.62e+00
minres converged at iteration 6. |A r_k|=5.44e-28 and |r_k|=3.90e-19.
test stop by condlim
The estimated condition number (=2.08e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=6.93e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
