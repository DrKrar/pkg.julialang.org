>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1492.8515625 MB free)
Uptime: 35454.0 sec
Load Avg:  1.05712890625  1.0380859375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1770096 s       6197 s     153403 s    1221632 s        112 s
#2  3500 MHz    1067866 s       1376 s     139905 s    2186844 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.12e-02
  2	2.03e-02
  3	7.49e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 2.03e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 7.80e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.59e-02
  2	4.05e-02
  3	4.18e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.05e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.28e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.57e-01
cg iterated maxIter (=1) times but reached only residual norm 1.57e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.26e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.38e-15
  2	2.22e-31
blockCG achieved desired tolerance at iteration 2. Residual norm is 2.22e-31.
=== blockcg ===
iter	max(relres)
  1	1.91e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.91e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.50e-01
  3	1.91e-01
  4	1.58e-01
  5	1.15e-01
  6	6.84e-02
  7	3.61e-02
  8	1.85e-02
  9	8.78e-03
 10	3.94e-03
 11	1.79e-03
 12	7.73e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.73e-04.
=== blockcg ===
iter	max(relres)
  1	4.05e-01
  2	2.50e-01
  3	1.91e-01
  4	1.58e-01
  5	1.15e-01
  6	6.84e-02
  7	3.61e-02
  8	1.85e-02
  9	8.78e-03
 10	3.94e-03
 11	1.79e-03
 12	7.73e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.73e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.22e+01	6.36e-01	9.94e+00
  2	2.87e+00	7.40e-01	9.89e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.87e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.08e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.0e-01 3.0e-02 	 3.0e-02
  2	9.5e-03 2.7e-03 7.9e-04 	 7.9e-04
  3	2.2e-04 7.1e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.11e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.14703094680681458]
Givens rotation for v=[-0.1733911658847166,0.0]
Givens rotation for v=[1.47733864486591,-0.47964662715557643]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.92e-03.
ssor achieved desired tolerance at iteration 44. Residual norm is 9.80e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.46e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.46e-01
  2	6.77e-02
  3	4.32e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.32e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.49e-03.
ssor achieved desired tolerance at iteration 25. Residual norm is 9.68e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.15e-03.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.98e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 7.76e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.76e-02	5.65e-02	4.70e+00		1.14e+00
2	9.61e-03	1.50e-02	5.56e+00		1.35e+00
3	5.77e-04	4.02e-04	5.56e+00		1.35e+00
4	1.07e-05	2.27e-06	5.56e+00		1.35e+00
5	2.51e-07	5.44e-08	5.56e+00		1.38e+00
6	6.00e-10	1.53e-11	5.56e+00		1.38e+00
7	4.25e-20	2.75e-29	5.56e+00		1.39e+00
minres converged at iteration 7. |A r_k|=2.75e-29 and |r_k|=4.25e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.13e-02	2.07e-02	5.51e+00		1.00e+00
2	1.23e-03	1.47e-03	5.51e+00		1.14e+00
3	9.48e-05	7.68e-05	5.51e+00		1.19e+00
4	3.59e-07	1.46e-08	5.51e+00		1.19e+00
5	2.63e-08	1.87e-08	5.51e+00		1.30e+00
6	1.70e-11	1.10e-13	5.51e+00		1.30e+00
7	7.69e-21	3.19e-29	5.51e+00		1.38e+00
minres converged at iteration 7. |A r_k|=3.19e-29 and |r_k|=7.69e-21.
test stop by condlim
The estimated condition number (=2.02e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=9.56e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
