>>> 'Pkg.add("KrylovMethods")' log
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (933.765625 MB free)
Uptime: 66715.0 sec
Load Avg:  1.0029296875  1.01171875  1.01708984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    2343292 s        310 s     267624 s    3285228 s        204 s
#2  3496 MHz    1393620 s       5649 s     245476 s    4633003 s          7 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.07e-01
  2	1.02e-02
  3	4.28e-02
bicgstb iterated maxIter (=3) times but reached only residual norm 1.02e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.95e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.23e-02
  2	3.48e-02
  3	7.95e-04
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.48e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.05e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	7.10e-02
cg iterated maxIter (=1) times but reached only residual norm 7.10e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.15e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	6.74e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 6.74e-16.
=== blockcg ===
iter	max(relres)
  1	8.05e-16
blockCG iterated maxIter (=1) times but reached only residual norm 8.05e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.98e-01
  2	2.37e-01
  3	1.80e-01
  4	1.51e-01
  5	1.21e-01
  6	8.28e-02
  7	4.63e-02
  8	2.76e-02
  9	1.50e-02
 10	7.83e-03
 11	3.67e-03
 12	1.59e-03
 13	6.99e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.99e-04.
=== blockcg ===
iter	max(relres)
  1	3.98e-01
  2	2.37e-01
  3	1.80e-01
  4	1.51e-01
  5	1.21e-01
  6	8.28e-02
  7	4.63e-02
  8	2.76e-02
  9	1.50e-02
 10	7.83e-03
 11	3.67e-03
 12	1.59e-03
 13	6.99e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.99e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	5.13e+01	7.17e-01	9.10e+00
  2	5.23e+00	9.24e-01	8.98e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.23e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.36e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 8.3e-02 2.1e-02 	 2.1e-02
  2	6.2e-03 1.9e-03 5.6e-04 	 5.6e-04
  3	1.4e-04 4.3e-05 1.4e-05 	 1.4e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.13e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.5379904440378995]
Givens rotation for v=[-1.339581669186184,0.0]
Givens rotation for v=[-0.7454422679495536,0.45618974316456157]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.73e-03.
ssor achieved desired tolerance at iteration 57. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.34e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.46e-02
  3	3.97e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.97e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.93e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.42e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.63e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.04e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.69e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.69e-01	3.66e-01	5.83e+00		1.10e+00
2	3.60e-02	1.02e-01	5.94e+00		1.12e+00
3	2.27e-03	1.70e-03	5.94e+00		1.17e+00
4	1.96e-04	2.04e-04	5.94e+00		1.18e+00
5	2.49e-05	4.19e-05	5.94e+00		1.18e+00
6	1.80e-06	1.67e-06	5.94e+00		1.18e+00
7	2.42e-09	3.22e-11	5.94e+00		1.44e+00
8	6.13e-20	1.49e-29	5.94e+00		1.48e+00
minres converged at iteration 8. |A r_k|=1.49e-29 and |r_k|=6.13e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.52e-02	1.63e-01	5.66e+00		1.00e+00
2	2.42e-03	1.51e-03	5.89e+00		1.16e+00
3	1.98e-04	1.91e-04	5.89e+00		1.19e+00
4	2.54e-05	4.34e-05	5.89e+00		1.19e+00
5	1.87e-06	1.74e-06	5.89e+00		1.19e+00
6	1.61e-07	1.41e-07	5.89e+00		1.38e+00
7	6.22e-10	3.02e-11	5.89e+00		1.38e+00
8	1.73e-21	4.64e-32	5.89e+00		1.47e+00
minres converged at iteration 8. |A r_k|=4.64e-32 and |r_k|=1.73e-21.
test stop by condlim
The estimated condition number (=2.92e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.61e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
