>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1484.3984375 MB free)
Uptime: 36349.0 sec
Load Avg:  0.89453125  0.91796875  0.94921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1787036 s       2694 s     159366 s    1300952 s        164 s
#2  3499 MHz    1153434 s       3830 s     145780 s    2193496 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	1.91e-02
  3	1.10e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.91e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 4.78e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.87e-02
  2	1.94e-02
  3	1.46e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.94e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.04e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.57e-01
cg iterated maxIter (=1) times but reached only residual norm 1.57e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.17e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.35e-14
  2	5.84e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.84e-29.
=== blockcg ===
iter	max(relres)
  1	1.36e-13
blockCG iterated maxIter (=1) times but reached only residual norm 1.36e-13 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.88e-01
  2	2.24e-01
  3	1.53e-01
  4	1.00e-01
  5	6.50e-02
  6	4.79e-02
  7	3.07e-02
  8	1.96e-02
  9	1.07e-02
 10	5.01e-03
 11	2.00e-03
 12	8.07e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.07e-04.
=== blockcg ===
iter	max(relres)
  1	3.88e-01
  2	2.24e-01
  3	1.53e-01
  4	1.00e-01
  5	6.50e-02
  6	4.79e-02
  7	3.07e-02
  8	1.96e-02
  9	1.07e-02
 10	5.01e-03
 11	2.00e-03
 12	8.07e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.07e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.06e+01	6.37e-01	9.35e+00
  2	4.95e+00	7.82e-01	9.27e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.95e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  6.56e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 9.7e-02 3.0e-02 	 3.0e-02
  2	7.3e-03 2.3e-03 7.3e-04 	 7.3e-04
  3	2.6e-04 7.6e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 6.74e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.02604230409600456]
Givens rotation for v=[-0.5609199621682632,0.0]
Givens rotation for v=[-1.311840706400862,0.25168913841100116]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 34. Residual norm is 9.80e-03.
ssor achieved desired tolerance at iteration 50. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.45e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.56e-02
  3	4.11e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.11e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.76e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.64e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.45e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.57e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.81e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.81e-01	5.15e-01	5.71e+00		1.25e+00
2	1.60e-02	2.59e-02	5.71e+00		1.25e+00
3	9.05e-04	1.03e-03	5.98e+00		1.31e+00
4	1.02e-05	1.62e-06	5.98e+00		1.45e+00
5	2.92e-07	1.22e-07	5.98e+00		1.45e+00
6	9.18e-20	4.05e-31	5.98e+00		1.46e+00
minres converged at iteration 6. |A r_k|=4.05e-31 and |r_k|=9.18e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.64e-02	1.35e-01	5.44e+00		1.01e+00
2	3.93e-03	6.87e-03	5.44e+00		1.13e+00
3	1.07e-04	5.59e-05	5.74e+00		1.19e+00
4	8.50e-07	9.49e-08	5.74e+00		1.40e+00
5	3.06e-08	1.58e-08	5.74e+00		1.40e+00
6	1.22e-19	7.00e-30	5.74e+00		1.40e+00
minres converged at iteration 6. |A r_k|=7.00e-30 and |r_k|=1.22e-19.
test stop by condlim
The estimated condition number (=2.30e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=8.05e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
