>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (936.62109375 MB free)
Uptime: 36226.0 sec
Load Avg:  0.923828125  0.90576171875  0.9052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1533964 s       6485 s     155348 s    1449149 s        197 s
#2  3500 MHz    1006422 s       2238 s     139916 s    2226791 s         12 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.8.8
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.29e-02
  2	3.41e-02
  3	6.37e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 3.41e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 2.21e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.56e-02
  2	7.59e-02
  3	3.88e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 7.59e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.17e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.19e-01
cg iterated maxIter (=1) times but reached only residual norm 1.19e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.12e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.58e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 7.58e-16.
=== blockcg ===
iter	max(relres)
  1	4.61e-16
blockCG iterated maxIter (=1) times but reached only residual norm 4.61e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.32e-01
  3	1.74e-01
  4	1.35e-01
  5	9.30e-02
  6	6.63e-02
  7	3.85e-02
  8	1.94e-02
  9	9.34e-03
 10	4.79e-03
 11	2.16e-03
 12	7.85e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.85e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.32e-01
  3	1.74e-01
  4	1.35e-01
  5	9.30e-02
  6	6.63e-02
  7	3.85e-02
  8	1.94e-02
  9	9.34e-03
 10	4.79e-03
 11	2.16e-03
 12	7.85e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.85e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.19e+01	6.83e-01	1.01e+01
  2	2.11e+00	7.97e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.11e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.62e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.1e-02 2.6e-02 	 2.6e-02
  2	8.6e-03 2.6e-03 7.3e-04 	 7.3e-04
  3	2.3e-04 6.7e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.55e-07.
=== Testing gmres for complex matrix === 
ERROR: LoadError: LoadError: test failed: 1.0089838358514273e-6 < 1.0e-6
 in expression: norm(A * x3[1] - rhs) / norm(rhs) < tol
 in error at ./error.jl:21
 in default_handler at test.jl:28
 in do_test at test.jl:53
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/KrylovMethods/test/testGMRES.jl, in expression starting on line 54
while loading /home/vagrant/.julia/v0.4/KrylovMethods/test/runtests.jl, in expression starting on line 7
============================[ ERROR: KrylovMethods ]============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/KrylovMethods/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6
ERROR: KrylovMethods had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
