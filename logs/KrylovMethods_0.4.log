>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1504.921875 MB free)
Uptime: 36898.0 sec
Load Avg:  1.10009765625  1.0595703125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1851694 s       3540 s     180166 s    1243380 s        214 s
#2  3499 MHz    1109401 s       4118 s     164785 s    2241009 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.4
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.34e-02
  2	7.84e-03
  3	8.35e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.84e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 4.84e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.01e-02
  2	7.50e-02
  3	7.12e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 7.50e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 2.46e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.87e-01
cg iterated maxIter (=1) times but reached only residual norm 1.87e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.21e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	1.43e-14
  2	1.20e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 1.20e-29.
=== blockcg ===
iter	max(relres)
  1	6.19e-16
blockCG iterated maxIter (=1) times but reached only residual norm 6.19e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.25e-01
  2	2.36e-01
  3	1.60e-01
  4	1.35e-01
  5	1.09e-01
  6	7.18e-02
  7	4.76e-02
  8	2.50e-02
  9	1.18e-02
 10	4.86e-03
 11	2.12e-03
 12	9.20e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.20e-04.
=== blockcg ===
iter	max(relres)
  1	4.25e-01
  2	2.36e-01
  3	1.60e-01
  4	1.35e-01
  5	1.09e-01
  6	7.18e-02
  7	4.76e-02
  8	2.50e-02
  9	1.18e-02
 10	4.86e-03
 11	2.12e-03
 12	9.20e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.20e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.08e+01	6.26e-01	8.69e+00
  2	5.30e-01	7.02e-01	8.65e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  5.30e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.19e-11.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 7.9e-02 2.5e-02 	 2.5e-02
  2	8.8e-03 3.0e-03 9.6e-04 	 9.6e-04
  3	2.9e-04 9.6e-05 3.1e-05 	 3.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.24e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.36755497724865716]
Givens rotation for v=[-1.3729943734085996,0.0]
Givens rotation for v=[-0.22407220983732895,1.5000230558722005]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 35. Residual norm is 9.78e-03.
ssor achieved desired tolerance at iteration 52. Residual norm is 9.86e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.23e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.42e-02
  3	3.96e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.96e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.82e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.32e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.28e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.01e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.26e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.26e-01	9.22e-01	7.79e+00		1.05e+00
2	4.10e-02	9.35e-02	7.79e+00		1.48e+00
3	6.77e-03	1.46e-02	7.79e+00		1.48e+00
4	6.36e-04	8.75e-04	7.79e+00		1.48e+00
5	1.75e-04	7.81e-04	7.79e+00		1.48e+00
6	2.53e-05	5.07e-05	7.79e+00		1.48e+00
7	1.97e-06	1.79e-06	7.79e+00		1.62e+00
8	4.62e-10	1.23e-12	7.79e+00		1.67e+00
9	1.88e-13	7.65e-16	7.79e+00		1.91e+00
minres converged at iteration 9. |A r_k|=7.65e-16 and |r_k|=1.88e-13.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	6.42e-02	2.35e-01	5.29e+00		1.01e+00
2	1.15e-02	3.19e-02	7.46e+00		1.42e+00
3	1.00e-03	1.14e-03	7.46e+00		1.42e+00
4	1.77e-04	4.78e-04	7.46e+00		1.42e+00
5	4.11e-05	1.28e-04	7.46e+00		1.42e+00
6	8.62e-06	2.90e-05	7.46e+00		1.42e+00
7	7.45e-07	8.17e-07	7.46e+00		1.42e+00
8	2.13e-10	7.11e-13	7.46e+00		1.56e+00
9	8.90e-14	3.71e-16	7.46e+00		1.83e+00
minres converged at iteration 9. |A r_k|=3.71e-16 and |r_k|=8.90e-14.
test stop by condlim
The estimated condition number (=2.13e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 12.
test stop by beta
minres stopped because beta (=6.69e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
