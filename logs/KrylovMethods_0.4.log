>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1451.64453125 MB free)
Uptime: 44769.0 sec
Load Avg:  0.93994140625  0.91064453125  0.93896484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2190308 s       7712 s     175517 s    1631703 s        160 s
#2  3500 MHz    1464548 s        308 s     157126 s    2659079 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.19.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.73e-02
  2	9.12e-03
  3	3.22e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.12e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.60e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.01e-01
  2	1.87e-02
  3	2.47e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.87e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 8.76e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.53e-01
cg iterated maxIter (=1) times but reached only residual norm 1.53e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.28e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	8.81e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 8.81e-16.
=== blockcg ===
iter	max(relres)
  1	5.55e-15
blockCG iterated maxIter (=1) times but reached only residual norm 5.55e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.48e-01
  3	1.78e-01
  4	1.29e-01
  5	9.99e-02
  6	7.04e-02
  7	3.72e-02
  8	1.87e-02
  9	9.09e-03
 10	4.21e-03
 11	1.87e-03
 12	8.90e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.90e-04.
=== blockcg ===
iter	max(relres)
  1	4.03e-01
  2	2.48e-01
  3	1.78e-01
  4	1.29e-01
  5	9.99e-02
  6	7.04e-02
  7	3.72e-02
  8	1.87e-02
  9	9.09e-03
 10	4.21e-03
 11	1.87e-03
 12	8.90e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.90e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	6.01e+01	9.01e-01	9.56e+00
  2	2.96e+00	1.11e+00	9.41e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.96e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.80e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 1.0e-01 3.0e-02 	 3.0e-02
  2	9.0e-03 2.6e-03 6.9e-04 	 6.9e-04
  3	2.1e-04 7.3e-05 2.2e-05 	 2.2e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.06e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.7237610910916266]
Givens rotation for v=[-0.5694558871584793,0.0]
Givens rotation for v=[-0.589512034189875,2.0571043700676577]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 32. Residual norm is 9.71e-03.
ssor achieved desired tolerance at iteration 47. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 7.90e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.50e-02
  3	4.02e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.02e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.48e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.36e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.87e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.02e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.69e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.69e-01	4.11e-01	5.67e+00		1.18e+00
2	3.86e-03	1.22e-03	5.67e+00		1.21e+00
3	2.53e-04	2.81e-04	5.67e+00		1.21e+00
4	9.29e-06	4.34e-06	5.67e+00		1.33e+00
5	7.83e-09	8.55e-11	5.67e+00		1.33e+00
6	1.16e-13	2.06e-17	5.67e+00		1.42e+00
minres converged at iteration 6. |A r_k|=2.06e-17 and |r_k|=1.16e-13.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.88e-02	6.88e-02	4.72e+00		1.01e+00
2	6.49e-04	2.09e-04	5.10e+00		1.09e+00
3	3.65e-05	3.46e-05	5.66e+00		1.21e+00
4	9.68e-07	3.22e-07	5.66e+00		1.35e+00
5	1.41e-09	2.69e-11	5.66e+00		1.35e+00
6	2.10e-14	3.76e-18	5.66e+00		1.41e+00
minres converged at iteration 6. |A r_k|=3.76e-18 and |r_k|=2.10e-14.
test stop by condlim
The estimated condition number (=3.11e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=3.83e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
