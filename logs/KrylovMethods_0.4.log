>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (942.54296875 MB free)
Uptime: 32437.0 sec
Load Avg:  0.94091796875  0.9306640625  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1510223 s       5388 s     165765 s    1158427 s         96 s
#2  3500 MHz     919925 s        630 s     146369 s    1993874 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.57e-02
  2	4.16e-02
  3	8.14e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 4.16e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.69e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.28e-02
  2	1.59e-02
  3	1.57e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.59e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 7.47e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	5.49e-02
cg iterated maxIter (=1) times but reached only residual norm 5.49e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.03e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.52e-15
  2	2.83e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 2.83e-30.
=== blockcg ===
iter	max(relres)
  1	1.68e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.68e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.38e-01
  3	1.70e-01
  4	1.26e-01
  5	1.01e-01
  6	8.10e-02
  7	5.62e-02
  8	3.15e-02
  9	1.44e-02
 10	5.90e-03
 11	2.47e-03
 12	1.06e-03
 13	4.65e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.65e-04.
=== blockcg ===
iter	max(relres)
  1	4.00e-01
  2	2.38e-01
  3	1.70e-01
  4	1.26e-01
  5	1.01e-01
  6	8.10e-02
  7	5.62e-02
  8	3.15e-02
  9	1.44e-02
 10	5.90e-03
 11	2.47e-03
 12	1.06e-03
 13	4.65e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.65e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	7.23e+01	6.88e-01	9.73e+00
  2	1.71e+01	9.85e-01	9.54e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.71e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.12e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.7e-02 2.7e-02 	 2.7e-02
  2	7.9e-03 2.3e-03 7.3e-04 	 7.3e-04
  3	2.5e-04 6.5e-05 1.8e-05 	 1.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.31e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.5896332358009347]
Givens rotation for v=[0.07518003214252962,0.0]
Givens rotation for v=[-0.12039979139958282,2.1919067079699515]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 44. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 66. Residual norm is 9.89e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.40e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.47e-02
  3	3.94e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.94e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.27e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.49e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.55e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 7.72e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.36e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.36e-01	6.51e-01	5.66e+00		1.09e+00
2	6.07e-02	2.37e-01	7.56e+00		1.45e+00
3	6.42e-03	7.76e-03	7.56e+00		1.45e+00
4	6.16e-04	9.59e-04	7.56e+00		1.45e+00
5	1.33e-04	4.67e-04	7.56e+00		1.45e+00
6	1.16e-06	1.04e-07	7.56e+00		1.62e+00
7	2.76e-09	7.41e-11	7.56e+00		1.62e+00
8	8.05e-11	2.16e-11	7.56e+00		1.84e+00
9	3.12e-19	1.12e-26	7.56e+00		1.84e+00
minres converged at iteration 9. |A r_k|=1.12e-26 and |r_k|=3.12e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	8.01e-02	4.24e-01	6.98e+00		1.00e+00
2	6.50e-03	5.67e-03	6.98e+00		1.37e+00
3	6.35e-04	1.02e-03	7.42e+00		1.46e+00
4	1.43e-04	5.14e-04	7.42e+00		1.46e+00
5	1.25e-05	1.18e-05	7.42e+00		1.51e+00
6	6.90e-08	4.37e-09	7.42e+00		1.51e+00
7	6.43e-10	6.76e-11	7.42e+00		1.51e+00
8	1.82e-11	4.71e-12	7.42e+00		1.82e+00
9	2.05e-19	2.15e-26	7.42e+00		1.82e+00
minres converged at iteration 9. |A r_k|=2.15e-26 and |r_k|=2.05e-19.
test stop by condlim
The estimated condition number (=2.78e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 10.
test stop by beta
minres stopped because beta (=6.37e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
