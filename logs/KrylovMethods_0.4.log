>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1509.65234375 MB free)
Uptime: 40072.0 sec
Load Avg:  0.95654296875  0.96484375  0.9794921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3490 MHz    1997763 s       6003 s     169442 s    1414577 s        164 s
#2  3490 MHz    1255618 s        935 s     150345 s    2432868 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.02e-01
  2	4.24e-02
  3	9.15e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 4.24e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 4.77e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.56e-02
  2	7.76e-02
  3	3.24e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 7.76e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 1.61e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.36e-01
cg iterated maxIter (=1) times but reached only residual norm 1.36e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.26e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	8.78e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 8.78e-16.
=== blockcg ===
iter	max(relres)
  1	1.34e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.34e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.93e-01
  2	2.37e-01
  3	1.69e-01
  4	1.37e-01
  5	8.69e-02
  6	5.71e-02
  7	3.76e-02
  8	2.43e-02
  9	1.39e-02
 10	6.68e-03
 11	2.81e-03
 12	1.07e-03
 13	4.35e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.35e-04.
=== blockcg ===
iter	max(relres)
  1	3.93e-01
  2	2.37e-01
  3	1.69e-01
  4	1.37e-01
  5	8.69e-02
  6	5.71e-02
  7	3.76e-02
  8	2.43e-02
  9	1.39e-02
 10	6.68e-03
 11	2.81e-03
 12	1.07e-03
 13	4.35e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.35e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.24e+01	7.83e-01	9.80e+00
  2	1.89e+00	8.82e-01	9.76e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.89e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.96e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.7e-02 2.8e-02 	 2.8e-02
  2	8.1e-03 2.2e-03 6.4e-04 	 6.4e-04
  3	1.9e-04 5.5e-05 1.8e-05 	 1.8e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.76e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.9664738678358221]
Givens rotation for v=[-0.40702579478905576,0.0]
Givens rotation for v=[0.22740045223597333,-1.9364617190999234]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.67e-03.
ssor achieved desired tolerance at iteration 41. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 8.24e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.40e-02
  3	3.96e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.96e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.38e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.61e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.34e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.68e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.89e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.89e-01	4.06e-01	5.19e+00		1.14e+00
2	1.07e-02	8.46e-03	6.03e+00		1.33e+00
3	2.31e-03	7.49e-03	6.03e+00		1.33e+00
4	3.31e-05	5.47e-06	6.03e+00		1.33e+00
5	4.76e-07	7.22e-08	6.03e+00		1.43e+00
6	2.64e-11	1.49e-14	6.03e+00		1.49e+00
7	3.83e-19	5.57e-26	6.03e+00		1.50e+00
minres converged at iteration 7. |A r_k|=5.57e-26 and |r_k|=3.83e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.71e-02	1.04e-01	5.72e+00		1.00e+00
2	3.88e-03	4.66e-03	5.72e+00		1.23e+00
3	2.70e-04	3.07e-04	6.65e+00		1.43e+00
4	3.01e-06	3.51e-07	6.65e+00		1.59e+00
5	5.94e-08	1.23e-08	6.65e+00		1.59e+00
6	3.51e-12	2.11e-15	6.65e+00		1.64e+00
7	1.06e-19	3.23e-26	6.65e+00		1.66e+00
minres converged at iteration 7. |A r_k|=3.23e-26 and |r_k|=1.06e-19.
test stop by condlim
The estimated condition number (=2.73e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=3.29e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
