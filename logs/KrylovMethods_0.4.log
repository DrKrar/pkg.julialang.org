>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (902.875 MB free)
Uptime: 35111.0 sec
Load Avg:  1.025390625  0.99853515625  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1604948 s         81 s     160160 s    1290789 s        176 s
#2  3500 MHz    1009418 s       6762 s     139926 s    2151234 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	9.26e-03
  3	6.36e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.26e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.27e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.04e-01
  2	2.92e-02
  3	1.12e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.92e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 8.06e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.33e-02
cg iterated maxIter (=1) times but reached only residual norm 1.33e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.77e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.13e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 2.13e-16.
=== blockcg ===
iter	max(relres)
  1	8.80e-15
blockCG iterated maxIter (=1) times but reached only residual norm 8.80e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.94e-01
  2	2.29e-01
  3	1.79e-01
  4	1.37e-01
  5	1.01e-01
  6	6.64e-02
  7	3.73e-02
  8	1.88e-02
  9	9.04e-03
 10	4.37e-03
 11	1.97e-03
 12	8.59e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.59e-04.
=== blockcg ===
iter	max(relres)
  1	3.94e-01
  2	2.29e-01
  3	1.79e-01
  4	1.37e-01
  5	1.01e-01
  6	6.64e-02
  7	3.73e-02
  8	1.88e-02
  9	9.04e-03
 10	4.37e-03
 11	1.97e-03
 12	8.59e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.59e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.04e+01	6.74e-01	8.61e+00
  2	3.90e+00	8.28e-01	8.51e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.90e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.08e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 8.2e-02 2.5e-02 	 2.5e-02
  2	8.1e-03 2.6e-03 8.0e-04 	 8.0e-04
  3	2.4e-04 6.7e-05 2.1e-05 	 2.1e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.70e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-1.179136832507134]
Givens rotation for v=[-0.4854150411591958,0.0]
Givens rotation for v=[-0.6017533810525,1.4879732179604284]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 30. Residual norm is 9.75e-03.
ssor achieved desired tolerance at iteration 44. Residual norm is 9.95e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 52. Residual norm is 9.94e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.66e-02
  3	4.18e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.18e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.70e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.56e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.21e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.06e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.30e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.30e-01	3.34e-01	6.29e+00		1.41e+00
2	2.51e-02	1.14e-01	6.29e+00		1.41e+00
3	1.86e-03	3.41e-03	6.29e+00		1.41e+00
4	4.99e-05	2.81e-05	6.29e+00		1.41e+00
5	1.01e-06	3.86e-07	6.29e+00		1.48e+00
6	2.71e-09	1.51e-10	6.29e+00		1.48e+00
7	6.82e-19	3.05e-27	6.29e+00		1.57e+00
minres converged at iteration 7. |A r_k|=3.05e-27 and |r_k|=6.82e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.99e-02	1.64e-01	5.42e+00		1.01e+00
2	3.90e-03	1.16e-02	5.86e+00		1.11e+00
3	7.41e-05	3.06e-05	5.86e+00		1.18e+00
4	3.11e-06	2.64e-06	5.86e+00		1.29e+00
5	3.98e-08	9.69e-09	5.86e+00		1.36e+00
6	3.01e-10	4.73e-11	5.86e+00		1.36e+00
7	1.93e-19	2.18e-27	5.86e+00		1.46e+00
minres converged at iteration 7. |A r_k|=2.18e-27 and |r_k|=1.93e-19.
test stop by condlim
The estimated condition number (=2.38e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=8.18e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
