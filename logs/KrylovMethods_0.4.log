>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1501.453125 MB free)
Uptime: 36598.0 sec
Load Avg:  1.0341796875  1.01611328125  1.0087890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1811745 s       1088 s     157446 s    1297845 s        110 s
#2  3499 MHz    1163317 s       5046 s     138969 s    2198737 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.11e-02
  2	8.66e-03
  3	4.45e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.66e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 9.76e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.50e-02
  2	2.25e-02
  3	4.45e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.25e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7.5. Residual norm is 3.35e-08.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.15e-01
cg iterated maxIter (=1) times but reached only residual norm 1.15e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.39e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.72e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 4.72e-16.
=== blockcg ===
iter	max(relres)
  1	3.11e-16
blockCG iterated maxIter (=1) times but reached only residual norm 3.11e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.44e-01
  3	1.85e-01
  4	1.40e-01
  5	1.04e-01
  6	7.30e-02
  7	4.34e-02
  8	2.30e-02
  9	1.17e-02
 10	5.78e-03
 11	2.37e-03
 12	9.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.89e-04.
=== blockcg ===
iter	max(relres)
  1	4.11e-01
  2	2.44e-01
  3	1.85e-01
  4	1.40e-01
  5	1.04e-01
  6	7.30e-02
  7	4.34e-02
  8	2.30e-02
  9	1.17e-02
 10	5.78e-03
 11	2.37e-03
 12	9.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.89e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	8.68e+00	5.19e-01	1.01e+01
  2	7.54e-01	5.58e-01	1.01e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  7.54e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  9.99e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.0e-01 3.1e-02 	 3.1e-02
  2	1.0e-02 3.2e-03 9.9e-04 	 9.9e-04
  3	3.3e-04 1.1e-04 3.7e-05 	 3.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.90e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.4407408912760569]
Givens rotation for v=[1.7419529023283213,0.0]
Givens rotation for v=[0.917975545684267,0.5666962615976598]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 44. Residual norm is 9.80e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 6.66e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.50e-02
  3	4.04e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.04e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.92e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.39e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.13e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.25e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.93e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.93e-01	4.20e-01	5.18e+00		1.14e+00
2	9.71e-03	6.40e-03	5.76e+00		1.27e+00
3	8.67e-04	1.35e-03	7.09e+00		1.56e+00
4	1.34e-04	3.19e-04	7.09e+00		1.56e+00
5	1.95e-06	3.04e-07	7.09e+00		1.60e+00
6	3.55e-20	6.49e-33	7.09e+00		1.74e+00
minres converged at iteration 6. |A r_k|=6.49e-33 and |r_k|=3.55e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.85e-02	1.03e-01	5.44e+00		1.00e+00
2	4.86e-03	7.02e-03	5.44e+00		1.15e+00
3	3.00e-04	3.20e-04	7.20e+00		1.52e+00
4	1.49e-05	1.17e-05	7.20e+00		1.52e+00
5	2.37e-07	3.84e-08	7.20e+00		1.73e+00
6	1.57e-20	1.04e-32	7.20e+00		1.76e+00
minres converged at iteration 6. |A r_k|=1.04e-32 and |r_k|=1.57e-20.
test stop by condlim
The estimated condition number (=2.41e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=4.10e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
