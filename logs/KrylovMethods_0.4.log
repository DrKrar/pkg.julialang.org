>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1516.265625 MB free)
Uptime: 35058.0 sec
Load Avg:  0.8818359375  0.998046875  0.97265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1744870 s       4478 s     165436 s    1200333 s        149 s
#2  3500 MHz    1034353 s       3182 s     146551 s    2182581 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.38e-02
  2	9.98e-03
  3	1.55e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 9.98e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 2.45e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.81e-02
  2	9.58e-03
  3	1.32e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 9.58e-03 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.63e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.49e-01
cg iterated maxIter (=1) times but reached only residual norm 2.49e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.24e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	6.32e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 6.32e-16.
=== blockcg ===
iter	max(relres)
  1	8.41e-15
blockCG iterated maxIter (=1) times but reached only residual norm 8.41e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.16e-01
  2	2.44e-01
  3	1.94e-01
  4	1.49e-01
  5	1.14e-01
  6	8.89e-02
  7	5.91e-02
  8	3.40e-02
  9	1.68e-02
 10	8.74e-03
 11	4.24e-03
 12	1.70e-03
 13	6.72e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.72e-04.
=== blockcg ===
iter	max(relres)
  1	4.16e-01
  2	2.44e-01
  3	1.94e-01
  4	1.49e-01
  5	1.14e-01
  6	8.89e-02
  7	5.91e-02
  8	3.40e-02
  9	1.68e-02
 10	8.74e-03
 11	4.24e-03
 12	1.70e-03
 13	6.72e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 6.72e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.17e+01	4.68e-01	9.82e+00
  2	4.69e+00	6.03e-01	9.78e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.69e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.69e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.2e-01 8.6e-02 3.0e-02 	 3.0e-02
  2	9.4e-03 2.3e-03 6.6e-04 	 6.6e-04
  3	1.8e-04 4.4e-05 1.3e-05 	 1.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.21e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.5227753747693971]
Givens rotation for v=[-0.35277742060230804,0.0]
Givens rotation for v=[-0.9128809955303869,-0.5513169039692964]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 36. Residual norm is 9.72e-03.
ssor achieved desired tolerance at iteration 53. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.42e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.39e-02
  3	3.86e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.86e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 14. Residual norm is 9.87e-03.
ssor achieved desired tolerance at iteration 21. Residual norm is 9.70e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 4.34e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.81e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.06e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.06e-01	1.83e+00	8.89e+00		1.03e+00
2	3.50e-02	4.09e-02	8.89e+00		1.89e+00
3	8.75e-03	3.70e-02	8.89e+00		1.89e+00
4	3.55e-04	2.70e-04	9.45e+00		2.00e+00
5	1.15e-04	5.72e-04	9.45e+00		2.00e+00
6	1.19e-05	1.74e-05	9.45e+00		2.00e+00
7	1.45e-06	3.54e-06	9.45e+00		2.00e+00
8	6.71e-09	4.75e-10	9.45e+00		2.00e+00
9	1.88e-20	4.81e-31	9.45e+00		2.36e+00
minres converged at iteration 9. |A r_k|=4.81e-31 and |r_k|=1.88e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.88e-02	3.43e-01	4.76e+00		1.01e+00
2	9.88e-03	1.79e-02	9.51e+00		2.02e+00
3	1.67e-03	4.27e-03	9.51e+00		2.02e+00
4	1.34e-04	2.34e-04	1.00e+01		2.12e+00
5	1.36e-05	1.50e-05	1.00e+01		2.12e+00
6	1.58e-06	3.88e-06	1.00e+01		2.12e+00
7	1.07e-07	1.11e-07	1.00e+01		2.12e+00
8	3.74e-09	2.60e-09	1.00e+01		2.12e+00
9	2.51e-21	1.54e-32	1.00e+01		2.50e+00
minres converged at iteration 9. |A r_k|=1.54e-32 and |r_k|=2.51e-21.
test stop by condlim
The estimated condition number (=2.89e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 19.
test stop by beta
minres stopped because beta (=1.28e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
