>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1458.359375 MB free)
Uptime: 46498.0 sec
Load Avg:  1.0166015625  1.0146484375  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2266130 s       2787 s     181107 s    1707856 s        198 s
#2  3500 MHz    1463278 s       4326 s     162073 s    2819404 s         12 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.21.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.75e-02
  2	7.41e-03
  3	1.47e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 7.41e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 8.81e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.36e-02
  2	3.09e-02
  3	7.44e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.09e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 6.94e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.07e-01
cg iterated maxIter (=1) times but reached only residual norm 2.07e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.09e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	3.32e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 3.32e-16.
=== blockcg ===
iter	max(relres)
  1	1.35e-16
blockCG iterated maxIter (=1) times but reached only residual norm 1.35e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.60e-01
  3	1.76e-01
  4	1.09e-01
  5	8.63e-02
  6	6.31e-02
  7	4.19e-02
  8	2.49e-02
  9	1.18e-02
 10	5.20e-03
 11	2.27e-03
 12	1.01e-03
 13	4.20e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.20e-04.
=== blockcg ===
iter	max(relres)
  1	4.24e-01
  2	2.60e-01
  3	1.76e-01
  4	1.09e-01
  5	8.63e-02
  6	6.31e-02
  7	4.19e-02
  8	2.49e-02
  9	1.18e-02
 10	5.20e-03
 11	2.27e-03
 12	1.01e-03
 13	4.20e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.20e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	5.99e+01	6.81e-01	9.32e+00
  2	1.68e+01	1.20e+00	9.06e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.68e+01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.48e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.9e-01 8.3e-02 2.2e-02 	 2.2e-02
  2	7.2e-03 1.7e-03 5.5e-04 	 5.5e-04
  3	1.8e-04 6.0e-05 1.5e-05 	 1.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.66e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.3363370814674627]
Givens rotation for v=[1.829174465024579,0.0]
Givens rotation for v=[-0.6349154518632679,-0.22169474189015112]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.95e-03.
ssor achieved desired tolerance at iteration 44. Residual norm is 9.80e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.13e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.48e-02
  3	3.99e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.99e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.73e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.97e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 6.28e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.83e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.46e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.46e-01	2.14e-01	4.90e+00		1.14e+00
2	1.74e-02	2.89e-02	6.19e+00		1.44e+00
3	1.71e-03	1.97e-03	6.19e+00		1.44e+00
4	1.94e-05	2.43e-06	6.19e+00		1.44e+00
5	1.96e-07	1.91e-08	6.19e+00		1.49e+00
6	9.27e-11	4.15e-13	6.19e+00		1.53e+00
7	9.81e-19	9.69e-26	6.19e+00		1.55e+00
minres converged at iteration 7. |A r_k|=9.69e-26 and |r_k|=9.81e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.73e-02	7.15e-02	6.01e+00		1.00e+00
2	2.86e-03	3.16e-03	6.01e+00		1.31e+00
3	3.56e-05	5.24e-06	6.01e+00		1.31e+00
4	9.05e-07	2.35e-07	6.01e+00		1.37e+00
5	1.30e-08	1.82e-09	6.01e+00		1.44e+00
6	7.48e-12	4.09e-14	6.01e+00		1.48e+00
7	1.30e-20	2.11e-28	6.01e+00		1.50e+00
minres converged at iteration 7. |A r_k|=2.11e-28 and |r_k|=1.30e-20.
test stop by condlim
The estimated condition number (=2.22e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=5.12e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
