>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1486.046875 MB free)
Uptime: 32503.0 sec
Load Avg:  1.04150390625  0.99560546875  0.98291015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1574816 s       7063 s     143752 s    1178594 s         39 s
#2  3498 MHz     942461 s        644 s     135025 s    2063109 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.09e-02
  2	3.61e-02
  3	1.21e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 3.61e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 6.90e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.79e-02
  2	1.60e-02
  3	1.82e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.60e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 7.99e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.49e-01
cg iterated maxIter (=1) times but reached only residual norm 2.49e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.67e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.49e-15
  2	6.64e-31
blockCG achieved desired tolerance at iteration 2. Residual norm is 6.64e-31.
=== blockcg ===
iter	max(relres)
  1	2.66e-15
blockCG iterated maxIter (=1) times but reached only residual norm 2.66e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.49e-01
  3	1.97e-01
  4	1.40e-01
  5	9.77e-02
  6	6.82e-02
  7	4.49e-02
  8	2.76e-02
  9	1.22e-02
 10	5.78e-03
 11	2.67e-03
 12	1.08e-03
 13	4.48e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.48e-04.
=== blockcg ===
iter	max(relres)
  1	4.08e-01
  2	2.49e-01
  3	1.97e-01
  4	1.40e-01
  5	9.77e-02
  6	6.82e-02
  7	4.49e-02
  8	2.76e-02
  9	1.22e-02
 10	5.78e-03
 11	2.67e-03
 12	1.08e-03
 13	4.48e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.48e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.46e+01	4.65e-01	9.24e+00
  2	2.34e+00	5.79e-01	9.20e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.34e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  5.47e-12.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 9.8e-02 2.7e-02 	 2.7e-02
  2	7.4e-03 2.7e-03 8.1e-04 	 8.1e-04
  3	2.3e-04 7.7e-05 2.6e-05 	 2.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.30e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.0164034958357882]
Givens rotation for v=[0.6368495853010543,0.0]
Givens rotation for v=[0.21498387703885635,-0.44198606341272717]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.85e-03.
ssor achieved desired tolerance at iteration 56. Residual norm is 1.00e-02.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.88e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.36e-02
  3	3.85e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.85e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 8.89e-03.
ssor achieved desired tolerance at iteration 21. Residual norm is 9.89e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.62e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.36e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.79e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.79e-01	6.15e-01	5.24e+00		1.05e+00
2	8.05e-02	3.04e-01	9.44e+00		1.89e+00
3	1.18e-02	1.56e-02	9.44e+00		1.89e+00
4	2.03e-04	2.94e-05	9.44e+00		1.89e+00
5	2.36e-06	2.21e-07	9.44e+00		1.89e+00
6	1.33e-07	4.81e-08	9.44e+00		2.32e+00
7	5.75e-17	1.97e-25	9.44e+00		2.32e+00
minres converged at iteration 7. |A r_k|=1.97e-25 and |r_k|=5.75e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.08e-01	5.65e-01	8.61e+00		1.00e+00
2	1.62e-02	1.88e-02	8.61e+00		1.62e+00
3	5.73e-04	1.91e-04	8.61e+00		1.62e+00
4	4.58e-06	2.89e-07	8.61e+00		1.72e+00
5	4.75e-07	3.75e-07	8.61e+00		1.79e+00
6	2.67e-09	1.00e-10	8.61e+00		2.03e+00
7	3.60e-17	3.91e-24	8.61e+00		2.03e+00
minres converged at iteration 7. |A r_k|=3.91e-24 and |r_k|=3.60e-17.
test stop by condlim
The estimated condition number (=2.33e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 9.
test stop by beta
minres stopped because beta (=8.48e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
