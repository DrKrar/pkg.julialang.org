>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1484.0078125 MB free)
Uptime: 35930.0 sec
Load Avg:  0.85791015625  0.921875  0.96484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1810642 s       2764 s     149914 s    1252234 s         99 s
#2  3499 MHz    1116232 s       4709 s     129868 s    2218961 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.00e-01
  2	7.77e-03
  3	8.44e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 7.77e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 7.34e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.84e-02
  2	4.14e-02
  3	4.74e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 4.14e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 7.03e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	8.93e-03
cg iterated maxIter (=1) times but reached only residual norm 8.93e-03 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.80e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	2.59e-15
  2	4.15e-29
blockCG achieved desired tolerance at iteration 2. Residual norm is 4.15e-29.
=== blockcg ===
iter	max(relres)
  1	8.16e-15
blockCG iterated maxIter (=1) times but reached only residual norm 8.16e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.16e-01
  2	2.42e-01
  3	1.86e-01
  4	1.37e-01
  5	1.03e-01
  6	6.32e-02
  7	3.60e-02
  8	2.03e-02
  9	9.73e-03
 10	4.12e-03
 11	1.82e-03
 12	7.61e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.61e-04.
=== blockcg ===
iter	max(relres)
  1	4.16e-01
  2	2.42e-01
  3	1.86e-01
  4	1.37e-01
  5	1.03e-01
  6	6.32e-02
  7	3.60e-02
  8	2.03e-02
  9	9.73e-03
 10	4.12e-03
 11	1.82e-03
 12	7.61e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.61e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.46e+01	6.17e-01	9.33e+00
  2	2.83e+00	6.91e-01	9.28e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.83e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.17e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.3e-02 2.5e-02 	 2.5e-02
  2	7.5e-03 2.7e-03 8.3e-04 	 8.3e-04
  3	2.4e-04 7.5e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.25e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.5645818453731035]
Givens rotation for v=[-0.2680694278077668,0.0]
Givens rotation for v=[0.5423681768865691,-0.07959297650312615]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 37. Residual norm is 9.91e-03.
ssor achieved desired tolerance at iteration 55. Residual norm is 1.00e-02.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.23e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.50e-02
  3	4.05e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.05e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.28e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.85e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 7.60e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.51e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.30e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.30e-01	6.15e-01	5.24e+00		1.14e+00
2	2.46e-02	4.34e-02	7.16e+00		1.57e+00
3	2.19e-03	2.71e-03	7.16e+00		1.57e+00
4	2.99e-04	5.17e-04	7.16e+00		1.57e+00
5	1.61e-05	1.04e-05	7.16e+00		1.57e+00
6	3.68e-08	9.14e-10	7.16e+00		1.68e+00
7	2.30e-18	1.47e-27	7.16e+00		1.78e+00
minres converged at iteration 7. |A r_k|=1.47e-27 and |r_k|=2.30e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	5.77e-02	2.46e-01	6.68e+00		1.00e+00
2	4.39e-03	3.86e-03	6.68e+00		1.42e+00
3	3.01e-04	2.95e-04	6.68e+00		1.42e+00
4	3.78e-05	5.94e-05	6.68e+00		1.42e+00
5	1.33e-06	5.37e-07	6.68e+00		1.48e+00
6	5.35e-09	2.37e-10	6.68e+00		1.54e+00
7	1.70e-19	5.51e-29	6.68e+00		1.66e+00
minres converged at iteration 7. |A r_k|=5.51e-29 and |r_k|=1.70e-19.
test stop by condlim
The estimated condition number (=2.28e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.33e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
