>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1520.80078125 MB free)
Uptime: 35933.0 sec
Load Avg:  0.9580078125  1.03271484375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1817263 s         64 s     153073 s    1238933 s        128 s
#2  3504 MHz    1089930 s       5376 s     138914 s    2210926 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.91e-02
  2	8.59e-03
  3	1.01e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 8.59e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.04e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.12e-02
  2	1.21e-02
  3	1.82e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.21e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 3.14e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.76e-01
cg iterated maxIter (=1) times but reached only residual norm 1.76e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.84e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.84e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.84e-16.
=== blockcg ===
iter	max(relres)
  1	5.72e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.72e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.29e-01
  2	2.89e-01
  3	2.33e-01
  4	1.72e-01
  5	1.14e-01
  6	8.37e-02
  7	5.45e-02
  8	2.81e-02
  9	1.27e-02
 10	5.33e-03
 11	2.22e-03
 12	9.25e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.25e-04.
=== blockcg ===
iter	max(relres)
  1	4.29e-01
  2	2.89e-01
  3	2.33e-01
  4	1.72e-01
  5	1.14e-01
  6	8.37e-02
  7	5.45e-02
  8	2.81e-02
  9	1.27e-02
 10	5.33e-03
 11	2.22e-03
 12	9.25e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.25e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.85e+01	5.02e-01	1.03e+01
  2	3.73e+00	6.58e-01	1.03e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  3.73e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.66e-07.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 8.9e-02 3.1e-02 	 3.1e-02
  2	1.0e-02 3.1e-03 7.5e-04 	 7.5e-04
  3	2.1e-04 6.1e-05 1.7e-05 	 1.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.06e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.31934665082976105]
Givens rotation for v=[0.226255488237571,0.0]
Givens rotation for v=[-0.5419082901844244,-1.1577412905536413]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.67e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.99e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.06e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.43e-02
  3	3.97e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.97e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 8.98e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.54e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.61e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.93e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.96e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.96e-01	3.23e-01	4.89e+00		1.08e+00
2	1.82e-02	1.78e-02	6.11e+00		1.35e+00
3	2.37e-03	3.54e-03	6.26e+00		1.39e+00
4	4.93e-04	1.25e-03	6.82e+00		1.51e+00
5	6.78e-06	7.90e-07	6.82e+00		1.51e+00
6	7.29e-20	7.81e-33	6.82e+00		1.51e+00
minres converged at iteration 6. |A r_k|=7.81e-33 and |r_k|=7.29e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	4.21e-02	9.74e-02	5.77e+00		1.00e+00
2	5.93e-03	7.33e-03	5.77e+00		1.20e+00
3	8.80e-04	1.59e-03	6.79e+00		1.41e+00
4	5.26e-05	3.71e-05	6.79e+00		1.41e+00
5	1.07e-06	1.70e-07	6.79e+00		1.62e+00
6	5.51e-20	2.82e-32	6.79e+00		1.62e+00
minres converged at iteration 6. |A r_k|=2.82e-32 and |r_k|=5.51e-20.
test stop by condlim
The estimated condition number (=3.66e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=6.73e-14) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
