>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1490.359375 MB free)
Uptime: 36927.0 sec
Load Avg:  1.07763671875  1.03076171875  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1840794 s       3870 s     150454 s    1300871 s        105 s
#2  3499 MHz    1135155 s       2481 s     136378 s    2269665 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.83e-02
  2	1.05e-02
  3	1.15e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.05e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 6.38e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.85e-02
  2	8.42e-02
  3	1.95e-02
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 8.42e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 7.35e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.97e-01
cg iterated maxIter (=1) times but reached only residual norm 1.97e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.75e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	7.92e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 7.92e-16.
=== blockcg ===
iter	max(relres)
  1	4.32e-15
blockCG iterated maxIter (=1) times but reached only residual norm 4.32e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.44e-01
  3	1.75e-01
  4	1.25e-01
  5	1.00e-01
  6	6.46e-02
  7	3.59e-02
  8	1.77e-02
  9	9.10e-03
 10	4.09e-03
 11	1.90e-03
 12	9.08e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.08e-04.
=== blockcg ===
iter	max(relres)
  1	4.07e-01
  2	2.44e-01
  3	1.75e-01
  4	1.25e-01
  5	1.00e-01
  6	6.46e-02
  7	3.59e-02
  8	1.77e-02
  9	9.10e-03
 10	4.09e-03
 11	1.90e-03
 12	9.08e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 9.08e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	1.49e+01	7.22e-01	8.71e+00
  2	8.29e-01	8.06e-01	8.66e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  8.29e-01.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  9.68e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.4e-01 9.5e-02 2.9e-02 	 2.9e-02
  2	9.6e-03 3.2e-03 9.3e-04 	 9.3e-04
  3	2.6e-04 6.8e-05 1.9e-05 	 1.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.37e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.955663459487318]
Givens rotation for v=[1.2232976662235988,0.0]
Givens rotation for v=[-0.2756734457131259,-0.11774735873129974]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 35. Residual norm is 9.99e-03.
ssor achieved desired tolerance at iteration 53. Residual norm is 9.90e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 7.33e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.37e-02
  3	3.93e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.93e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.77e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.25e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.56e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.27e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 3.09e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.09e-01	1.36e+00	6.16e+00		1.10e+00
2	1.07e-02	4.93e-03	6.59e+00		1.20e+00
3	2.50e-04	6.53e-05	6.59e+00		1.50e+00
4	5.92e-07	1.47e-08	6.59e+00		1.59e+00
5	4.76e-17	3.91e-26	6.59e+00		1.64e+00
minres converged at iteration 5. |A r_k|=3.91e-26 and |r_k|=4.76e-17.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.57e-02	4.16e-01	5.57e+00		1.01e+00
2	2.75e-03	1.07e-03	6.67e+00		1.21e+00
3	7.47e-05	2.26e-05	6.67e+00		1.52e+00
4	1.89e-07	5.03e-09	6.67e+00		1.61e+00
5	1.16e-17	7.28e-27	6.67e+00		1.66e+00
minres converged at iteration 5. |A r_k|=7.28e-27 and |r_k|=1.16e-17.
test stop by condlim
The estimated condition number (=2.88e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=4.04e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
