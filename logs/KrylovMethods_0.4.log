>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1468.02734375 MB free)
Uptime: 46910.0 sec
Load Avg:  1.01953125  0.98095703125  0.9794921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2289770 s       1822 s     178847 s    1720896 s        256 s
#2  3499 MHz    1536696 s       4599 s     156890 s    2766079 s          9 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.21.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.02e-01
  2	1.38e-02
  3	3.75e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.38e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 3.08e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.56e-02
  2	1.68e-02
  3	1.72e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.68e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.56e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.52e-01
cg iterated maxIter (=1) times but reached only residual norm 2.52e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.09e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	6.30e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 6.30e-16.
=== blockcg ===
iter	max(relres)
  1	5.25e-16
blockCG iterated maxIter (=1) times but reached only residual norm 5.25e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.37e-01
  3	1.63e-01
  4	1.24e-01
  5	9.10e-02
  6	6.45e-02
  7	3.74e-02
  8	2.08e-02
  9	1.14e-02
 10	5.28e-03
 11	2.06e-03
 12	8.96e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.96e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.37e-01
  3	1.63e-01
  4	1.24e-01
  5	9.10e-02
  6	6.45e-02
  7	3.74e-02
  8	2.08e-02
  9	1.14e-02
 10	5.28e-03
 11	2.06e-03
 12	8.96e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.96e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.16e+01	8.03e-01	9.94e+00
  2	4.99e+00	9.75e-01	9.84e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.99e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.40e-14.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.4e-02 2.6e-02 	 2.6e-02
  2	7.9e-03 2.2e-03 6.9e-04 	 6.9e-04
  3	2.4e-04 7.5e-05 2.3e-05 	 2.3e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.89e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.0398107253078883]
Givens rotation for v=[1.398340390561403,0.0]
Givens rotation for v=[0.12265697356051913,1.9572968139352207]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 39. Residual norm is 9.96e-03.
ssor achieved desired tolerance at iteration 59. Residual norm is 9.88e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.69e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.43e-01
  2	6.45e-02
  3	3.99e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.99e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.73e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.97e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 3.65e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.73e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 1.59e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.59e-01	2.36e-01	5.06e+00		1.09e+00
2	2.03e-02	2.63e-02	5.34e+00		1.15e+00
3	1.30e-03	8.79e-04	5.49e+00		1.18e+00
4	4.97e-05	2.14e-05	5.63e+00		1.21e+00
5	2.81e-09	1.29e-12	5.63e+00		1.39e+00
6	8.41e-12	2.03e-13	5.63e+00		1.41e+00
7	3.40e-20	1.12e-27	5.63e+00		1.41e+00
minres converged at iteration 7. |A r_k|=1.12e-27 and |r_k|=3.40e-20.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.21e-02	6.65e-02	5.11e+00		1.00e+00
2	2.53e-03	1.91e-03	5.29e+00		1.09e+00
3	1.65e-04	1.19e-04	5.53e+00		1.13e+00
4	6.97e-06	3.05e-06	5.53e+00		1.13e+00
5	4.19e-10	2.06e-13	5.53e+00		1.36e+00
6	1.20e-12	2.77e-14	5.53e+00		1.38e+00
7	1.01e-20	6.90e-28	5.53e+00		1.38e+00
minres converged at iteration 7. |A r_k|=6.90e-28 and |r_k|=1.01e-20.
test stop by condlim
The estimated condition number (=3.22e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=1.70e-12) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
