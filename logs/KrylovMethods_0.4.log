>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (919.75 MB free)
Uptime: 33920.0 sec
Load Avg:  0.91455078125  0.896484375  0.912109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1589179 s        111 s     149820 s    1230414 s         50 s
#2  3499 MHz    1002325 s       6710 s     128822 s    2082664 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.8.8
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.1.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.26e-02
  2	1.53e-02
  3	1.99e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 1.53e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6.5. Residual norm is 5.89e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	1.05e-01
  2	3.23e-02
  3	3.14e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 3.23e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 5.40e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	1.99e-01
cg iterated maxIter (=1) times but reached only residual norm 1.99e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 7.61e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	4.21e-15
  2	3.02e-28
blockCG achieved desired tolerance at iteration 2. Residual norm is 3.02e-28.
=== blockcg ===
iter	max(relres)
  1	2.50e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.50e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.90e-01
  2	2.34e-01
  3	2.00e-01
  4	1.73e-01
  5	1.33e-01
  6	7.49e-02
  7	3.71e-02
  8	1.97e-02
  9	9.84e-03
 10	4.41e-03
 11	1.85e-03
 12	7.39e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.39e-04.
=== blockcg ===
iter	max(relres)
  1	3.90e-01
  2	2.34e-01
  3	2.00e-01
  4	1.73e-01
  5	1.33e-01
  6	7.49e-02
  7	3.71e-02
  8	1.97e-02
  9	9.84e-03
 10	4.41e-03
 11	1.85e-03
 12	7.39e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 7.39e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	4.25e+01	5.65e-01	9.25e+00
  2	9.39e+00	7.06e-01	9.17e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  9.39e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  3.52e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.1e-01 1.1e-01 2.9e-02 	 2.9e-02
  2	8.2e-03 2.6e-03 8.1e-04 	 8.1e-04
  3	2.5e-04 6.9e-05 2.0e-05 	 2.0e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 4.89e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.3882889756954777]
Givens rotation for v=[-0.4155429966325145,0.0]
Givens rotation for v=[-0.13121264650420944,-0.7338267182570616]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 29. Residual norm is 9.81e-03.
ssor achieved desired tolerance at iteration 43. Residual norm is 9.93e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 7.54e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.29e-02
  3	3.83e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.83e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.26e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.49e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.92e+00.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.33e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.34e-02 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.34e-02	8.84e-03	5.68e+00		1.40e+00
2	7.91e-03	6.58e-02	6.21e+00		1.53e+00
3	3.98e-05	4.17e-06	6.97e+00		1.72e+00
4	3.05e-18	3.75e-30	6.97e+00		1.73e+00
minres converged at iteration 4. |A r_k|=3.75e-30 and |r_k|=3.05e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.92e-03	6.61e-02	6.21e+00		1.00e+00
2	1.76e-04	8.08e-05	6.96e+00		1.26e+00
3	2.33e-07	5.00e-09	6.96e+00		1.72e+00
4	5.09e-19	1.78e-29	6.96e+00		1.73e+00
minres converged at iteration 4. |A r_k|=1.78e-29 and |r_k|=5.09e-19.
test stop by condlim
The estimated condition number (=2.65e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=2.23e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.1.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
