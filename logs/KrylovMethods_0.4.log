>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1475.31640625 MB free)
Uptime: 48974.0 sec
Load Avg:  0.9970703125  0.986328125  1.02978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    2402899 s       7632 s     196208 s    1757305 s        328 s
#2  3503 MHz    1560672 s         91 s     172354 s    2891703 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.18.0
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.03e-01
  2	1.30e-02
  3	8.58e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 1.30e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.44e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.11e-02
  2	1.59e-02
  3	6.84e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.59e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 1.96e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.35e-01
cg iterated maxIter (=1) times but reached only residual norm 2.35e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 22. Residual norm is 9.01e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.11e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.11e-16.
=== blockcg ===
iter	max(relres)
  1	3.54e-15
blockCG iterated maxIter (=1) times but reached only residual norm 3.54e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.02e-01
  2	2.23e-01
  3	1.49e-01
  4	1.10e-01
  5	8.85e-02
  6	5.62e-02
  7	3.19e-02
  8	1.61e-02
  9	7.83e-03
 10	3.48e-03
 11	1.55e-03
 12	6.29e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.29e-04.
=== blockcg ===
iter	max(relres)
  1	4.02e-01
  2	2.23e-01
  3	1.49e-01
  4	1.10e-01
  5	8.85e-02
  6	5.62e-02
  7	3.19e-02
  8	1.61e-02
  9	7.83e-03
 10	3.48e-03
 11	1.55e-03
 12	6.29e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 6.29e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.12e+01	5.52e-01	8.45e+00
  2	2.98e+00	7.14e-01	8.37e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  2.98e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.09e-09.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.7e-01 8.9e-02 2.8e-02 	 2.8e-02
  2	9.4e-03 3.1e-03 9.3e-04 	 9.3e-04
  3	2.6e-04 7.2e-05 2.5e-05 	 2.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 5.88e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,3.1861048282772]
Givens rotation for v=[-0.05097884379048446,0.0]
Givens rotation for v=[0.7051709325804673,0.21291410493988952]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 38. Residual norm is 9.77e-03.
ssor achieved desired tolerance at iteration 56. Residual norm is 9.92e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.88e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.43e-02
  3	3.94e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.94e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.49e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.73e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 9.50e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.41e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.86e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.86e-01	2.32e+00	7.57e+00		1.34e+00
2	4.90e-02	2.55e-01	7.57e+00		1.34e+00
3	1.09e-02	8.82e-02	7.64e+00		1.36e+00
4	2.18e-03	1.09e-02	7.64e+00		1.50e+00
5	1.04e-04	1.69e-04	7.64e+00		1.50e+00
6	1.66e-07	6.08e-09	7.64e+00		1.68e+00
7	9.38e-19	1.07e-28	7.64e+00		1.91e+00
minres converged at iteration 7. |A r_k|=1.07e-28 and |r_k|=9.38e-19.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.32e-02	9.59e-01	6.41e+00		1.03e+00
2	1.57e-02	7.50e-02	7.29e+00		1.22e+00
3	3.06e-03	2.13e-02	7.47e+00		1.25e+00
4	5.21e-04	2.19e-03	7.47e+00		1.50e+00
5	2.39e-05	3.69e-05	7.47e+00		1.50e+00
6	5.32e-08	2.72e-09	7.47e+00		1.64e+00
7	2.89e-19	3.16e-29	7.47e+00		1.87e+00
minres converged at iteration 7. |A r_k|=3.16e-29 and |r_k|=2.89e-19.
test stop by condlim
The estimated condition number (=3.51e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=3.48e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
