>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from git://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1515.08984375 MB free)
Uptime: 35897.0 sec
Load Avg:  0.94580078125  0.95654296875  1.0
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1760209 s       1365 s     162878 s    1288493 s        160 s
#2  3500 MHz    1144896 s       7534 s     143951 s    2143381 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from git://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from git://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	7.36e-02
  2	6.11e-03
  3	9.44e-04
bicgstb iterated maxIter (=3) times but reached only residual norm 6.11e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.49e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	9.26e-02
  2	2.64e-01
  3	7.13e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.64e-01 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6. Residual norm is 9.50e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
WARNING: could not import Base.issymmetric into LinearOperators
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	7.55e-02
cg iterated maxIter (=1) times but reached only residual norm 7.55e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.81e-06.
=== CG : All tests passed. ====
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	5.94e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 5.94e-16.
=== blockcg ===
iter	max(relres)
  1	1.02e-15
blockCG iterated maxIter (=1) times but reached only residual norm 1.02e-15 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.21e-01
  3	1.55e-01
  4	1.13e-01
  5	8.48e-02
  6	6.17e-02
  7	4.34e-02
  8	2.83e-02
  9	1.41e-02
 10	6.38e-03
 11	2.85e-03
 12	1.17e-03
 13	4.76e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.76e-04.
=== blockcg ===
iter	max(relres)
  1	3.91e-01
  2	2.21e-01
  3	1.55e-01
  4	1.13e-01
  5	8.48e-02
  6	6.17e-02
  7	4.34e-02
  8	2.83e-02
  9	1.41e-02
 10	6.38e-03
 11	2.85e-03
 12	1.17e-03
 13	4.76e-04
blockCG achieved desired tolerance at iteration 13. Residual norm is 4.76e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	3.14e+01	7.91e-01	9.79e+00
  2	1.39e+00	9.26e-01	9.71e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.39e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.75e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 9.2e-02 2.8e-02 	 2.8e-02
  2	9.5e-03 3.0e-03 9.5e-04 	 9.5e-04
  3	2.9e-04 9.0e-05 2.6e-05 	 2.6e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 7.43e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,-0.9518465122571904]
Givens rotation for v=[-0.9265078160681197,0.0]
Givens rotation for v=[-1.2498981673424787,-0.39048941068508275]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 31. Residual norm is 9.86e-03.
ssor achieved desired tolerance at iteration 46. Residual norm is 9.95e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.14e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.44e-01
  2	6.41e-02
  3	3.94e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.94e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.48e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.72e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.58e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.79e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.40e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.40e-01	9.46e-01	5.81e+00		1.28e+00
2	4.80e-02	3.19e-01	1.00e+01		2.21e+00
3	5.23e-03	1.04e-02	1.00e+01		2.21e+00
4	8.82e-05	2.62e-05	1.00e+01		2.21e+00
5	1.35e-06	3.15e-07	1.00e+01		2.38e+00
6	9.99e-08	1.10e-07	1.00e+01		2.44e+00
7	1.32e-16	3.22e-24	1.00e+01		2.44e+00
minres converged at iteration 7. |A r_k|=3.22e-24 and |r_k|=1.32e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.32e-02	7.63e-01	9.46e+00		1.00e+00
2	6.98e-03	1.07e-02	9.46e+00		2.02e+00
3	1.86e-04	9.54e-05	9.46e+00		2.02e+00
4	7.38e-06	4.73e-06	9.46e+00		2.12e+00
5	1.82e-07	7.02e-08	9.46e+00		2.20e+00
6	1.20e-08	1.17e-08	9.46e+00		2.30e+00
7	3.10e-17	1.49e-24	9.46e+00		2.30e+00
minres converged at iteration 7. |A r_k|=1.49e-24 and |r_k|=3.10e-17.
test stop by condlim
The estimated condition number (=3.87e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=7.48e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	gmres iterated maxIter (=300) times without achieving the desired tolerance.
 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
