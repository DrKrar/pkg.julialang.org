>>> 'Pkg.add("Lens")' log
INFO: Cloning cache of Lens from https://github.com/zenna/Lens.jl.git
INFO: Installing Docile v0.5.23
INFO: Installing Lens v0.0.3
INFO: Package database updated

>>> 'Pkg.test("Lens")' log
Julia Version 0.5.0-dev+4637
Commit 6dfa7be* (2016-06-10 01:27 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Lens
Running tests:
 * capture.jl

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Uncaught exception trickled down to capture:
MethodError(Lens.getindex,((:x,10),2))
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in lens(::Symbol, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/Lens/src/listener.jl:45
 in #capture#5(::Bool, ::Function, ::#f, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:81
 in capture(::Function, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:61
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/Lens/test/runtests.jl:8 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Lens/test/capture.jl, in expression starting on line 14
ERROR: LoadError: LoadError: MethodError: no method matching getindex(::Tuple{Int64}, ::Int64)
you may have intended to import Base.getindex
 in lens(::Symbol, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.5/Lens/src/listener.jl:45
 in #capture#5(::Bool, ::Function, ::#f, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:81
 in capture(::Function, ::Array{Tuple{Symbol,Array{Symbol,1}},1}) at /home/vagrant/.julia/v0.5/Lens/src/capture.jl:61
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/Lens/test/runtests.jl:8 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Lens/test/capture.jl, in expression starting on line 14
while loading /home/vagrant/.julia/v0.5/Lens/test/runtests.jl, in expression starting on line 5
================================[ ERROR: Lens ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Lens/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Lens had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
