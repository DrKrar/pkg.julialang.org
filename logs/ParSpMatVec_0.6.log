>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.764
Commit de0833f (2016-09-25 00:11 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (840.48046875 MB free)
Uptime: 11843.0 sec
Load Avg:  0.9921875  0.990234375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     565756 s       7437 s      87946 s     391546 s         32 s
#2  3499 MHz     232077 s        781 s      44681 s     853928 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2618	 ParSpMatVec=0.0205	 speedup=12.7994
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2618	 ParSpMatVec=0.0080	 speedup=32.8469
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2618	 ParSpMatVec=0.0144	 speedup=18.1937
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2618	 ParSpMatVec=0.0103	 speedup=25.4520
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2618	 ParSpMatVec=0.0084	 speedup=31.0143
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1224	 ParSpMatVec=0.0318	 speedup=3.8508
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1224	 ParSpMatVec=0.0126	 speedup=9.7111
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1224	 ParSpMatVec=0.0142	 speedup=8.6398
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1224	 ParSpMatVec=0.0151	 speedup=8.1329
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1224	 ParSpMatVec=0.0159	 speedup=7.7173

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0416	 ParSpMatVec=0.0210	 speedup=1.9840
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0416	 ParSpMatVec=0.0134	 speedup=3.1137
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0416	 ParSpMatVec=0.0158	 speedup=2.6365
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0416	 ParSpMatVec=0.0164	 speedup=2.5363
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0416	 ParSpMatVec=0.0205	 speedup=2.0317

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0699	 ParSpMatVec=0.0558	 speedup=1.2520
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0699	 ParSpMatVec=0.0024	 speedup=28.6264
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0699	 ParSpMatVec=0.0019	 speedup=37.4976
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0699	 ParSpMatVec=0.0016	 speedup=43.7887
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0699	 ParSpMatVec=0.0016	 speedup=42.6181

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0099	 ParSpMatVec=0.0569	 speedup=0.1737
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0099	 ParSpMatVec=0.0041	 speedup=2.4352
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0099	 ParSpMatVec=0.0021	 speedup=4.6020
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0099	 ParSpMatVec=0.0030	 speedup=3.2990
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0099	 ParSpMatVec=0.0026	 speedup=3.8491

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0629	 ParSpMatVec=0.0652	 speedup=0.9653
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0629	 ParSpMatVec=0.0036	 speedup=17.7181
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0629	 ParSpMatVec=0.0017	 speedup=37.8217
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0629	 ParSpMatVec=0.0021	 speedup=29.7587
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0629	 ParSpMatVec=0.0026	 speedup=23.8647

INFO: ParSpMatVec tests passed

>>> End of log
