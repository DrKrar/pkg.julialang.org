>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (847.12890625 MB free)
Uptime: 11705.0 sec
Load Avg:  0.8671875  0.978515625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     593527 s       7424 s      70861 s     386115 s         26 s
#2  3499 MHz     228402 s        312 s      37016 s     875952 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1836	 ParSpMatVec=0.0232	 speedup=7.9294
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1836	 ParSpMatVec=0.0090	 speedup=20.3712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1836	 ParSpMatVec=0.0333	 speedup=5.5112
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1836	 ParSpMatVec=0.0094	 speedup=19.5869
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1836	 ParSpMatVec=0.0101	 speedup=18.2686
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1878	 ParSpMatVec=0.0539	 speedup=3.4878
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1878	 ParSpMatVec=0.0141	 speedup=13.3292
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1878	 ParSpMatVec=0.0153	 speedup=12.2790
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1878	 ParSpMatVec=0.0146	 speedup=12.8834
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1878	 ParSpMatVec=0.0134	 speedup=13.9780

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0431	 ParSpMatVec=0.0269	 speedup=1.5986
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0431	 ParSpMatVec=0.0133	 speedup=3.2347
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0431	 ParSpMatVec=0.0143	 speedup=3.0057
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0431	 ParSpMatVec=0.0136	 speedup=3.1650
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0431	 ParSpMatVec=0.0145	 speedup=2.9671

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0754	 ParSpMatVec=0.0487	 speedup=1.5471
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0754	 ParSpMatVec=0.0022	 speedup=34.0284
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0754	 ParSpMatVec=0.0276	 speedup=2.7317
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0754	 ParSpMatVec=0.0026	 speedup=28.5572
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0754	 ParSpMatVec=0.0031	 speedup=24.2337

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0080	 ParSpMatVec=0.0364	 speedup=0.2193
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0080	 ParSpMatVec=0.0029	 speedup=2.7600
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0080	 ParSpMatVec=0.0030	 speedup=2.6242
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0080	 ParSpMatVec=0.0034	 speedup=2.3484
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0080	 ParSpMatVec=0.0026	 speedup=3.0195

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0488	 ParSpMatVec=0.0634	 speedup=0.7707
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0488	 ParSpMatVec=0.0042	 speedup=11.7552
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0488	 ParSpMatVec=0.0028	 speedup=17.6171
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0488	 ParSpMatVec=0.0027	 speedup=18.1933
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0488	 ParSpMatVec=0.0026	 speedup=18.9906

INFO: ParSpMatVec tests passed

>>> End of log
