>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:491
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1283
Commit 581a034 (2016-11-19 20:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (829.28515625 MB free)
Uptime: 12506.0 sec
Load Avg:  0.9970703125  1.04931640625  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     704723 s      10944 s      71666 s     317136 s         27 s
#2  3504 MHz     187367 s       7022 s      45286 s     969189 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2752	 ParSpMatVec=0.0168	 speedup=16.3386
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2752	 ParSpMatVec=0.0103	 speedup=26.7647
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2752	 ParSpMatVec=0.0119	 speedup=23.0997
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2752	 ParSpMatVec=0.0116	 speedup=23.6708
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2752	 ParSpMatVec=0.0097	 speedup=28.2490
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1391	 ParSpMatVec=0.0343	 speedup=4.0540
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1391	 ParSpMatVec=0.0136	 speedup=10.1983
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1391	 ParSpMatVec=0.0131	 speedup=10.5930
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1391	 ParSpMatVec=0.0132	 speedup=10.5288
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1391	 ParSpMatVec=0.0123	 speedup=11.3093

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0608	 ParSpMatVec=0.0300	 speedup=2.0309
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0608	 ParSpMatVec=0.0136	 speedup=4.4645
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0608	 ParSpMatVec=0.0134	 speedup=4.5261
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0608	 ParSpMatVec=0.0124	 speedup=4.9077
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0608	 ParSpMatVec=0.0130	 speedup=4.6904

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0663	 ParSpMatVec=0.0545	 speedup=1.2175
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0663	 ParSpMatVec=0.0031	 speedup=21.5730
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0663	 ParSpMatVec=0.0022	 speedup=30.2576
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0663	 ParSpMatVec=0.0016	 speedup=41.5778
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0663	 ParSpMatVec=0.0018	 speedup=36.3646

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0566	 speedup=0.1561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0034	 speedup=2.5886
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0021	 speedup=4.1717
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0031	 speedup=2.8637
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0019	 speedup=4.5978

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0794	 ParSpMatVec=0.0620	 speedup=1.2808
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0794	 ParSpMatVec=0.0032	 speedup=24.6267
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0794	 ParSpMatVec=0.0021	 speedup=36.9715
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0794	 ParSpMatVec=0.0026	 speedup=30.3062
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0794	 ParSpMatVec=0.0023	 speedup=34.4715

INFO: ParSpMatVec tests passed

>>> End of log
