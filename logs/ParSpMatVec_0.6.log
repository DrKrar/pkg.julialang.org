>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (827.6875 MB free)
Uptime: 11017.0 sec
Load Avg:  1.0458984375  1.06640625  1.0068359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     589672 s       6856 s      75919 s     315734 s         22 s
#2  3503 MHz     211380 s        480 s      39519 s     822446 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1689	 ParSpMatVec=0.0239	 speedup=7.0592
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1689	 ParSpMatVec=0.0098	 speedup=17.1997
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1689	 ParSpMatVec=0.0129	 speedup=13.1254
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1689	 ParSpMatVec=0.0141	 speedup=11.9792
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1689	 ParSpMatVec=0.0118	 speedup=14.2925
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1758	 ParSpMatVec=0.0341	 speedup=5.1507
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1758	 ParSpMatVec=0.0124	 speedup=14.1719
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1758	 ParSpMatVec=0.0144	 speedup=12.1804
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1758	 ParSpMatVec=0.0141	 speedup=12.4939
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1758	 ParSpMatVec=0.0184	 speedup=9.5717

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0568	 ParSpMatVec=0.0299	 speedup=1.8966
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0568	 ParSpMatVec=0.0126	 speedup=4.4981
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0568	 ParSpMatVec=0.0174	 speedup=3.2694
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0568	 ParSpMatVec=0.0131	 speedup=4.3503
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0568	 ParSpMatVec=0.0140	 speedup=4.0642

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0717	 ParSpMatVec=0.0542	 speedup=1.3230
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0717	 ParSpMatVec=0.0032	 speedup=22.6959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0717	 ParSpMatVec=0.0030	 speedup=23.5898
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0717	 ParSpMatVec=0.0014	 speedup=52.7946
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0717	 ParSpMatVec=0.0014	 speedup=52.7019

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0080	 ParSpMatVec=0.0387	 speedup=0.2065
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0080	 ParSpMatVec=0.0026	 speedup=3.0196
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0080	 ParSpMatVec=0.0020	 speedup=3.9306
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0080	 ParSpMatVec=0.0028	 speedup=2.8977
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0080	 ParSpMatVec=0.0032	 speedup=2.4625

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0513	 ParSpMatVec=0.0421	 speedup=1.2189
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0513	 ParSpMatVec=0.0037	 speedup=13.9906
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0513	 ParSpMatVec=0.0039	 speedup=13.1912
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0513	 ParSpMatVec=0.0061	 speedup=8.4722
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0513	 ParSpMatVec=0.0035	 speedup=14.4526

INFO: ParSpMatVec tests passed

>>> End of log
