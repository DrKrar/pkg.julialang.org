>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (845.90625 MB free)
Uptime: 11790.0 sec
Load Avg:  0.98681640625  1.00634765625  0.96337890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz     530478 s       6461 s      60348 s     472054 s         19 s
#2  3508 MHz     196095 s         96 s      30672 s     922770 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2546	 ParSpMatVec=0.0267	 speedup=9.5352
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2546	 ParSpMatVec=0.0088	 speedup=29.0287
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2546	 ParSpMatVec=0.0131	 speedup=19.4330
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2546	 ParSpMatVec=0.0121	 speedup=21.0481
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2546	 ParSpMatVec=0.0087	 speedup=29.3583
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1363	 ParSpMatVec=0.0498	 speedup=2.7362
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1363	 ParSpMatVec=0.0144	 speedup=9.4783
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1363	 ParSpMatVec=0.0153	 speedup=8.9003
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1363	 ParSpMatVec=0.0130	 speedup=10.4958
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1363	 ParSpMatVec=0.0122	 speedup=11.1923

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0508	 ParSpMatVec=0.0284	 speedup=1.7850
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0508	 ParSpMatVec=0.0131	 speedup=3.8794
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0508	 ParSpMatVec=0.0158	 speedup=3.2104
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0508	 ParSpMatVec=0.0124	 speedup=4.0985
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0508	 ParSpMatVec=0.0132	 speedup=3.8534

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0637	 ParSpMatVec=0.0524	 speedup=1.2142
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0637	 ParSpMatVec=0.0025	 speedup=25.6183
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0637	 ParSpMatVec=0.0023	 speedup=27.7551
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0637	 ParSpMatVec=0.0019	 speedup=34.0134
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0637	 ParSpMatVec=0.0017	 speedup=37.6694

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0084	 ParSpMatVec=0.0618	 speedup=0.1356
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0084	 ParSpMatVec=0.0036	 speedup=2.3458
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0084	 ParSpMatVec=0.0024	 speedup=3.4681
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0084	 ParSpMatVec=0.0026	 speedup=3.2299
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0084	 ParSpMatVec=0.0026	 speedup=3.2746

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0764	 ParSpMatVec=0.0637	 speedup=1.1993
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0764	 ParSpMatVec=0.0040	 speedup=19.0708
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0764	 ParSpMatVec=0.0020	 speedup=38.0129
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0764	 ParSpMatVec=0.0025	 speedup=30.6516
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0764	 ParSpMatVec=0.0034	 speedup=22.2551

INFO: ParSpMatVec tests passed

>>> End of log
