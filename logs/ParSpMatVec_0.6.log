>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1557
Commit 1f8006d (2016-12-13 22:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (810.01171875 MB free)
Uptime: 9784.0 sec
Load Avg:  0.9052734375  1.02978515625  1.03955078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3509 MHz     575409 s        322 s      98124 s     202513 s         18 s
#2  3509 MHz     167827 s       6196 s      40744 s     736261 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2435	 ParSpMatVec=0.0248	 speedup=9.8213
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2435	 ParSpMatVec=0.0084	 speedup=29.1078
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2435	 ParSpMatVec=0.0108	 speedup=22.4571
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2435	 ParSpMatVec=0.0147	 speedup=16.5553
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2435	 ParSpMatVec=0.0093	 speedup=26.1081
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1891	 ParSpMatVec=0.0466	 speedup=4.0545
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1891	 ParSpMatVec=0.0134	 speedup=14.0864
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1891	 ParSpMatVec=0.0153	 speedup=12.3879
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1891	 ParSpMatVec=0.0133	 speedup=14.1998
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1891	 ParSpMatVec=0.0139	 speedup=13.6193

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0653	 ParSpMatVec=0.0312	 speedup=2.0943
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0653	 ParSpMatVec=0.0121	 speedup=5.3876
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0653	 ParSpMatVec=0.0149	 speedup=4.3800
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0653	 ParSpMatVec=0.0126	 speedup=5.1779
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0653	 ParSpMatVec=0.0134	 speedup=4.8840

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0672	 ParSpMatVec=0.0513	 speedup=1.3086
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0672	 ParSpMatVec=0.0027	 speedup=24.7090
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0672	 ParSpMatVec=0.0025	 speedup=26.3506
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0672	 ParSpMatVec=0.0035	 speedup=19.3947
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0672	 ParSpMatVec=0.0029	 speedup=23.4441

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0599	 speedup=0.1431
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0036	 speedup=2.3955
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0016	 speedup=5.3810
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0022	 speedup=3.9846
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0034	 speedup=2.5421

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0765	 ParSpMatVec=0.0555	 speedup=1.3789
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0765	 ParSpMatVec=0.0035	 speedup=21.7046
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0765	 ParSpMatVec=0.0022	 speedup=35.2564
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0765	 ParSpMatVec=0.0042	 speedup=18.0682
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0765	 ParSpMatVec=0.0026	 speedup=29.2087

INFO: ParSpMatVec tests passed

>>> End of log
