>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1241
Commit 80770e9 (2016-11-14 21:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (823.80078125 MB free)
Uptime: 12177.0 sec
Load Avg:  1.06591796875  1.04541015625  0.990234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     650683 s       6559 s      87400 s     338407 s         32 s
#2  3500 MHz     240957 s       2043 s      49266 s     890437 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1986	 ParSpMatVec=0.0171	 speedup=11.5869
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1986	 ParSpMatVec=0.0085	 speedup=23.3179
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1986	 ParSpMatVec=0.0118	 speedup=16.8560
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1986	 ParSpMatVec=0.0154	 speedup=12.8636
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1986	 ParSpMatVec=0.0079	 speedup=24.9901
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1631	 ParSpMatVec=0.0481	 speedup=3.3879
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1631	 ParSpMatVec=0.0138	 speedup=11.8210
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1631	 ParSpMatVec=0.0150	 speedup=10.8683
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1631	 ParSpMatVec=0.0151	 speedup=10.8035
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1631	 ParSpMatVec=0.0135	 speedup=12.0516

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0398	 ParSpMatVec=0.0191	 speedup=2.0877
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0398	 ParSpMatVec=0.0138	 speedup=2.8811
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0398	 ParSpMatVec=0.0141	 speedup=2.8289
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0398	 ParSpMatVec=0.0127	 speedup=3.1425
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0398	 ParSpMatVec=0.0141	 speedup=2.8294

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0681	 ParSpMatVec=0.0505	 speedup=1.3477
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0681	 ParSpMatVec=0.0022	 speedup=31.2082
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0681	 ParSpMatVec=0.0017	 speedup=39.6659
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0681	 ParSpMatVec=0.0016	 speedup=41.3202
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0681	 ParSpMatVec=0.0022	 speedup=31.0808

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0426	 speedup=0.1529
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0033	 speedup=1.9677
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0024	 speedup=2.7019
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0031	 speedup=2.0902
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0019	 speedup=3.3785

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0649	 ParSpMatVec=0.0564	 speedup=1.1502
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0649	 ParSpMatVec=0.0042	 speedup=15.5010
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0649	 ParSpMatVec=0.0014	 speedup=45.0557
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0649	 ParSpMatVec=0.0018	 speedup=35.8473
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0649	 ParSpMatVec=0.0021	 speedup=30.6995

INFO: ParSpMatVec tests passed

>>> End of log
