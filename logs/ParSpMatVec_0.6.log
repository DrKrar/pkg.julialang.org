>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @unix_only(::ANY) at ./deprecated.jl:470
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::SubString{String}) at ./sysimg.jl:14
 [5] evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 [6] cd(::##2#4, ::String) at ./file.jl:69
 [7] (::##1#3)(::IOStream) at ./none:13
 [8] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1843
Commit c38a5a3 (2017-01-01 14:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (889.9296875 MB free)
Uptime: 12344.0 sec
Load Avg:  0.92919921875  0.859375  0.66357421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     601636 s        113 s      77332 s     431510 s         17 s
#2  3499 MHz     169811 s         46 s      33549 s    1003535 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.10.0
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.4830	 ParSpMatVec=0.0271	 speedup=17.8222
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.4830	 ParSpMatVec=0.0109	 speedup=44.4474
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.4830	 ParSpMatVec=0.0115	 speedup=42.0321
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.4830	 ParSpMatVec=0.0088	 speedup=55.1706
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.4830	 ParSpMatVec=0.0092	 speedup=52.7468
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3566	 ParSpMatVec=0.0512	 speedup=6.9615
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3566	 ParSpMatVec=0.0123	 speedup=29.0312
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3566	 ParSpMatVec=0.0078	 speedup=45.5641
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3566	 ParSpMatVec=0.0095	 speedup=37.7090
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3566	 ParSpMatVec=0.0099	 speedup=35.8754

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0607	 ParSpMatVec=0.0195	 speedup=3.1045
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0607	 ParSpMatVec=0.0133	 speedup=4.5585
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0607	 ParSpMatVec=0.0083	 speedup=7.2870
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0607	 ParSpMatVec=0.0094	 speedup=6.4260
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0607	 ParSpMatVec=0.0109	 speedup=5.5787

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0565	 ParSpMatVec=0.0386	 speedup=1.4620
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0565	 ParSpMatVec=0.0015	 speedup=38.5424
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0565	 ParSpMatVec=0.0015	 speedup=36.6111
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0565	 ParSpMatVec=0.0017	 speedup=33.3080
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0565	 ParSpMatVec=0.0020	 speedup=28.6978

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0059	 ParSpMatVec=0.0495	 speedup=0.1191
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0059	 ParSpMatVec=0.0028	 speedup=2.1350
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0059	 ParSpMatVec=0.0021	 speedup=2.7482
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0059	 ParSpMatVec=0.0019	 speedup=3.1289
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0059	 ParSpMatVec=0.0025	 speedup=2.3804

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0786	 ParSpMatVec=0.0807	 speedup=0.9735
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0786	 ParSpMatVec=0.0040	 speedup=19.8157
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0786	 ParSpMatVec=0.0034	 speedup=22.9908
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0786	 ParSpMatVec=0.0025	 speedup=31.0226
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0786	 ParSpMatVec=0.0022	 speedup=35.8345

INFO: ParSpMatVec tests passed

>>> End of log
