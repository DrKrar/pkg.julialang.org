>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:491
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1268
Commit 01ef3c3 (2016-11-17 17:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (820.734375 MB free)
Uptime: 12584.0 sec
Load Avg:  0.9375  0.95703125  0.951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     683548 s       2015 s      93041 s     336100 s         41 s
#2  3500 MHz     225280 s       4576 s      51528 s     929622 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2581	 ParSpMatVec=0.0210	 speedup=12.2977
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2581	 ParSpMatVec=0.0106	 speedup=24.4444
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2581	 ParSpMatVec=0.0090	 speedup=28.5450
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2581	 ParSpMatVec=0.0071	 speedup=36.3379
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2581	 ParSpMatVec=0.0079	 speedup=32.7927
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2262	 ParSpMatVec=0.0438	 speedup=5.1696
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2262	 ParSpMatVec=0.0141	 speedup=16.0313
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2262	 ParSpMatVec=0.0089	 speedup=25.3291
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2262	 ParSpMatVec=0.0096	 speedup=23.4726
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2262	 ParSpMatVec=0.0103	 speedup=21.9458

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0561	 ParSpMatVec=0.0341	 speedup=1.6470
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0561	 ParSpMatVec=0.0133	 speedup=4.2231
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0561	 ParSpMatVec=0.0084	 speedup=6.7057
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0561	 ParSpMatVec=0.0106	 speedup=5.3078
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0561	 ParSpMatVec=0.0116	 speedup=4.8282

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0684	 ParSpMatVec=0.0617	 speedup=1.1091
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0684	 ParSpMatVec=0.0013	 speedup=50.7357
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0684	 ParSpMatVec=0.0042	 speedup=16.1229
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0684	 ParSpMatVec=0.0025	 speedup=27.1238
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0684	 ParSpMatVec=0.0025	 speedup=27.7477

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0426	 speedup=0.1862
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0042	 speedup=1.9045
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0025	 speedup=3.1456
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0066	 speedup=1.1946
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0015	 speedup=5.1860

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0757	 ParSpMatVec=0.0590	 speedup=1.2841
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0757	 ParSpMatVec=0.0042	 speedup=18.1319
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0757	 ParSpMatVec=0.0025	 speedup=29.9959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0757	 ParSpMatVec=0.0039	 speedup=19.4384
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0757	 ParSpMatVec=0.0039	 speedup=19.4392

INFO: ParSpMatVec tests passed

>>> End of log
