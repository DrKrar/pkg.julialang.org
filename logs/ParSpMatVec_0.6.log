>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.739
Commit 361161b (2016-09-22 21:53 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (842.48828125 MB free)
Uptime: 11550.0 sec
Load Avg:  1.01123046875  1.0185546875  0.978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     585696 s        407 s      90890 s     334754 s         44 s
#2  3499 MHz     197053 s       6682 s      47478 s     859297 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2781	 ParSpMatVec=0.0286	 speedup=9.7056
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2781	 ParSpMatVec=0.0086	 speedup=32.2170
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2781	 ParSpMatVec=0.0118	 speedup=23.5422
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2781	 ParSpMatVec=0.0083	 speedup=33.6518
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2781	 ParSpMatVec=0.0081	 speedup=34.4920
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2005	 ParSpMatVec=0.0590	 speedup=3.3965
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2005	 ParSpMatVec=0.0127	 speedup=15.7474
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2005	 ParSpMatVec=0.0155	 speedup=12.9506
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2005	 ParSpMatVec=0.0147	 speedup=13.6106
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2005	 ParSpMatVec=0.0140	 speedup=14.2745

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0737	 ParSpMatVec=0.0294	 speedup=2.5088
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0737	 ParSpMatVec=0.0140	 speedup=5.2572
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0737	 ParSpMatVec=0.0152	 speedup=4.8485
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0737	 ParSpMatVec=0.0130	 speedup=5.6567
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0737	 ParSpMatVec=0.0127	 speedup=5.8058

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0613	 ParSpMatVec=0.0383	 speedup=1.6008
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0613	 ParSpMatVec=0.0026	 speedup=23.3182
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0613	 ParSpMatVec=0.0431	 speedup=1.4197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0613	 ParSpMatVec=0.0021	 speedup=28.5991
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0613	 ParSpMatVec=0.0018	 speedup=33.9654

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0067	 ParSpMatVec=0.0632	 speedup=0.1062
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0067	 ParSpMatVec=0.0039	 speedup=1.7400
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0067	 ParSpMatVec=0.0031	 speedup=2.1664
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0067	 ParSpMatVec=0.0027	 speedup=2.5158
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0067	 ParSpMatVec=0.0026	 speedup=2.5526

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0646	 ParSpMatVec=0.0463	 speedup=1.3973
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0646	 ParSpMatVec=0.0040	 speedup=16.2025
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0646	 ParSpMatVec=0.0019	 speedup=33.5330
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0646	 ParSpMatVec=0.0027	 speedup=24.1085
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0646	 ParSpMatVec=0.0023	 speedup=27.5480

INFO: ParSpMatVec tests passed

>>> End of log
