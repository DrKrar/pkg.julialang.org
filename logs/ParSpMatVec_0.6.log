>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1527
Commit 4dcada1 (2016-12-08 19:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (824.9296875 MB free)
Uptime: 9014.0 sec
Load Avg:  1.09912109375  1.068359375  1.0537109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     544730 s        126 s      75196 s     177989 s         18 s
#2  3500 MHz     151889 s       6041 s      33608 s     688141 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2865	 ParSpMatVec=0.0323	 speedup=8.8803
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2865	 ParSpMatVec=0.0098	 speedup=29.1329
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2865	 ParSpMatVec=0.0121	 speedup=23.7570
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2865	 ParSpMatVec=0.0093	 speedup=30.8164
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2865	 ParSpMatVec=0.0098	 speedup=29.1503
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2282	 ParSpMatVec=0.0339	 speedup=6.7355
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2282	 ParSpMatVec=0.0127	 speedup=17.9498
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2282	 ParSpMatVec=0.0147	 speedup=15.5302
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2282	 ParSpMatVec=0.0125	 speedup=18.2001
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2282	 ParSpMatVec=0.0122	 speedup=18.7117

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0659	 ParSpMatVec=0.0298	 speedup=2.2109
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0659	 ParSpMatVec=0.0126	 speedup=5.2299
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0659	 ParSpMatVec=0.0116	 speedup=5.6590
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0659	 ParSpMatVec=0.0106	 speedup=6.2096
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0659	 ParSpMatVec=0.0107	 speedup=6.1547

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0440	 ParSpMatVec=0.0327	 speedup=1.3456
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0440	 ParSpMatVec=0.0019	 speedup=22.7994
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0440	 ParSpMatVec=0.0025	 speedup=17.8105
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0440	 ParSpMatVec=0.0018	 speedup=25.1355
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0440	 ParSpMatVec=0.0017	 speedup=25.4149

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0057	 ParSpMatVec=0.0350	 speedup=0.1628
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0057	 ParSpMatVec=0.0036	 speedup=1.6059
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0057	 ParSpMatVec=0.0032	 speedup=1.8077
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0057	 ParSpMatVec=0.0030	 speedup=1.9001
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0057	 ParSpMatVec=0.0026	 speedup=2.1771

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0427	 ParSpMatVec=0.0372	 speedup=1.1457
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0427	 ParSpMatVec=0.0038	 speedup=11.2485
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0427	 ParSpMatVec=0.0023	 speedup=18.7219
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0427	 ParSpMatVec=0.0025	 speedup=17.1109
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0427	 ParSpMatVec=0.0026	 speedup=16.3160

INFO: ParSpMatVec tests passed

>>> End of log
