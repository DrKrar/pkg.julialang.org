>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1031
Commit 90a3740 (2016-10-19 02:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (811.88671875 MB free)
Uptime: 17168.0 sec
Load Avg:  0.97265625  0.59912109375  0.40771484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     448766 s       3503 s      52578 s    1124068 s          8 s
#2  3496 MHz     149701 s       2287 s      25486 s    1523339 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1674	 ParSpMatVec=0.0158	 speedup=10.5612
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1674	 ParSpMatVec=0.0083	 speedup=20.1204
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1674	 ParSpMatVec=0.0111	 speedup=15.1377
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1674	 ParSpMatVec=0.0109	 speedup=15.4231
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1674	 ParSpMatVec=0.0090	 speedup=18.6890
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1217	 ParSpMatVec=0.0288	 speedup=4.2252
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1217	 ParSpMatVec=0.0127	 speedup=9.5494
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1217	 ParSpMatVec=0.0117	 speedup=10.4187
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1217	 ParSpMatVec=0.0129	 speedup=9.4442
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1217	 ParSpMatVec=0.0111	 speedup=10.9736

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0352	 ParSpMatVec=0.0186	 speedup=1.8908
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0352	 ParSpMatVec=0.0123	 speedup=2.8574
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0352	 ParSpMatVec=0.0112	 speedup=3.1292
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0352	 ParSpMatVec=0.0103	 speedup=3.4224
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0352	 ParSpMatVec=0.0111	 speedup=3.1614

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0530	 ParSpMatVec=0.0310	 speedup=1.7062
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0530	 ParSpMatVec=0.0014	 speedup=36.6440
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0530	 ParSpMatVec=0.0016	 speedup=33.0982
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0530	 ParSpMatVec=0.0012	 speedup=43.8505
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0530	 ParSpMatVec=0.0014	 speedup=38.6423

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0067	 ParSpMatVec=0.0574	 speedup=0.1163
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0067	 ParSpMatVec=0.0035	 speedup=1.9084
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0067	 ParSpMatVec=0.0032	 speedup=2.0689
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0067	 ParSpMatVec=0.0024	 speedup=2.8370
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0067	 ParSpMatVec=0.0025	 speedup=2.6902

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0674	 ParSpMatVec=0.0550	 speedup=1.2261
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0674	 ParSpMatVec=0.0032	 speedup=20.8409
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0674	 ParSpMatVec=0.0019	 speedup=35.6110
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0674	 ParSpMatVec=0.0024	 speedup=28.5702
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0674	 ParSpMatVec=0.0028	 speedup=24.2168

INFO: ParSpMatVec tests passed

>>> End of log
