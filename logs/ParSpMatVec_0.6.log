>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (842.171875 MB free)
Uptime: 10573.0 sec
Load Avg:  1.146484375  1.04443359375  1.013671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     553653 s       8862 s      65538 s     323535 s         17 s
#2  3499 MHz     220971 s        100 s      35975 s     769580 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2816	 ParSpMatVec=0.0274	 speedup=10.2770
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2816	 ParSpMatVec=0.0086	 speedup=32.8875
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2816	 ParSpMatVec=0.0134	 speedup=21.0066
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2816	 ParSpMatVec=0.0053	 speedup=53.4288
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2816	 ParSpMatVec=0.0071	 speedup=39.6353
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2182	 ParSpMatVec=0.0525	 speedup=4.1604
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2182	 ParSpMatVec=0.0160	 speedup=13.6377
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2182	 ParSpMatVec=0.0093	 speedup=23.3834
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2182	 ParSpMatVec=0.0112	 speedup=19.4102
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2182	 ParSpMatVec=0.0121	 speedup=18.0268

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0534	 ParSpMatVec=0.0288	 speedup=1.8556
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0534	 ParSpMatVec=0.0137	 speedup=3.9051
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0534	 ParSpMatVec=0.0100	 speedup=5.3532
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0534	 ParSpMatVec=0.0108	 speedup=4.9554
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0534	 ParSpMatVec=0.0160	 speedup=3.3376

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0584	 ParSpMatVec=0.0444	 speedup=1.3148
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0584	 ParSpMatVec=0.0044	 speedup=13.2448
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0584	 ParSpMatVec=0.0019	 speedup=31.4108
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0584	 ParSpMatVec=0.0020	 speedup=29.8754
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0584	 ParSpMatVec=0.0019	 speedup=31.1852

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0131	 ParSpMatVec=0.0388	 speedup=0.3361
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0131	 ParSpMatVec=0.0037	 speedup=3.5494
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0131	 ParSpMatVec=0.0027	 speedup=4.9228
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0131	 ParSpMatVec=0.0103	 speedup=1.2657
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0131	 ParSpMatVec=0.0050	 speedup=2.6106

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0790	 ParSpMatVec=0.0666	 speedup=1.1867
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0790	 ParSpMatVec=0.0040	 speedup=19.8280
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0790	 ParSpMatVec=0.0021	 speedup=36.7539
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0790	 ParSpMatVec=0.0021	 speedup=37.0423
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0790	 ParSpMatVec=0.0021	 speedup=37.9864

INFO: ParSpMatVec tests passed

>>> End of log
