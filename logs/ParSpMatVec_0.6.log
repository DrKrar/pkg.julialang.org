>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:495
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1307
Commit 03c2464 (2016-11-24 20:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (832.66796875 MB free)
Uptime: 12123.0 sec
Load Avg:  1.064453125  1.029296875  0.982421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz     656176 s       1036 s      76929 s     347604 s         23 s
#2  3506 MHz     193679 s       5907 s      35906 s     950465 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2992	 ParSpMatVec=0.0268	 speedup=11.1655
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2992	 ParSpMatVec=0.0098	 speedup=30.6428
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2992	 ParSpMatVec=0.0144	 speedup=20.8122
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2992	 ParSpMatVec=0.0091	 speedup=32.7779
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2992	 ParSpMatVec=0.0111	 speedup=26.9733
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2153	 ParSpMatVec=0.0461	 speedup=4.6661
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2153	 ParSpMatVec=0.0134	 speedup=16.1039
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2153	 ParSpMatVec=0.0142	 speedup=15.1838
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2153	 ParSpMatVec=0.0133	 speedup=16.1873
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2153	 ParSpMatVec=0.0125	 speedup=17.1824

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0661	 ParSpMatVec=0.0303	 speedup=2.1808
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0661	 ParSpMatVec=0.0155	 speedup=4.2713
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0661	 ParSpMatVec=0.0150	 speedup=4.3984
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0661	 ParSpMatVec=0.0128	 speedup=5.1498
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0661	 ParSpMatVec=0.0104	 speedup=6.3567

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0647	 ParSpMatVec=0.0402	 speedup=1.6097
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0647	 ParSpMatVec=0.0029	 speedup=22.2420
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0647	 ParSpMatVec=0.0039	 speedup=16.7654
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0647	 ParSpMatVec=0.0027	 speedup=23.7127
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0647	 ParSpMatVec=0.0020	 speedup=32.8020

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0087	 ParSpMatVec=0.0372	 speedup=0.2349
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0087	 ParSpMatVec=0.0045	 speedup=1.9344
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0087	 ParSpMatVec=0.0021	 speedup=4.2354
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0087	 ParSpMatVec=0.0031	 speedup=2.8202
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0087	 ParSpMatVec=0.0024	 speedup=3.6334

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0688	 ParSpMatVec=0.0381	 speedup=1.8042
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0688	 ParSpMatVec=0.0048	 speedup=14.1867
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0688	 ParSpMatVec=0.0021	 speedup=32.7261
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0688	 ParSpMatVec=0.0018	 speedup=37.8820
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0688	 ParSpMatVec=0.0019	 speedup=35.7219

INFO: ParSpMatVec tests passed

>>> End of log
