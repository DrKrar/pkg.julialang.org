>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1544
Commit 579cfcb (2016-12-11 05:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (816.66796875 MB free)
Uptime: 9663.0 sec
Load Avg:  0.970703125  1.052734375  1.044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz     560018 s        931 s      82049 s     228554 s         20 s
#2  3492 MHz     184678 s       6724 s      36058 s     715978 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2364	 ParSpMatVec=0.0173	 speedup=13.6350
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2364	 ParSpMatVec=0.0099	 speedup=23.9396
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2364	 ParSpMatVec=0.0127	 speedup=18.6347
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2364	 ParSpMatVec=0.0089	 speedup=26.4762
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2364	 ParSpMatVec=0.0079	 speedup=29.8792
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2213	 ParSpMatVec=0.0444	 speedup=4.9799
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2213	 ParSpMatVec=0.0124	 speedup=17.8472
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2213	 ParSpMatVec=0.0145	 speedup=15.2483
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2213	 ParSpMatVec=0.0148	 speedup=14.9538
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2213	 ParSpMatVec=0.0128	 speedup=17.3476

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0527	 ParSpMatVec=0.0288	 speedup=1.8280
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0527	 ParSpMatVec=0.0124	 speedup=4.2347
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0527	 ParSpMatVec=0.0147	 speedup=3.5811
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0527	 ParSpMatVec=0.0137	 speedup=3.8570
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0527	 ParSpMatVec=0.0130	 speedup=4.0611

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0696	 ParSpMatVec=0.0550	 speedup=1.2663
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0696	 ParSpMatVec=0.0038	 speedup=18.4594
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0696	 ParSpMatVec=0.0021	 speedup=32.7755
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0696	 ParSpMatVec=0.0017	 speedup=41.9992
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0696	 ParSpMatVec=0.0016	 speedup=44.2048

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0654	 speedup=0.1233
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0049	 speedup=1.6348
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0020	 speedup=4.0186
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0035	 speedup=2.3183
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0015	 speedup=5.4464

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0755	 ParSpMatVec=0.0633	 speedup=1.1915
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0755	 ParSpMatVec=0.0027	 speedup=28.2469
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0755	 ParSpMatVec=0.0014	 speedup=52.8058
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0755	 ParSpMatVec=0.0018	 speedup=41.3676
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0755	 ParSpMatVec=0.0015	 speedup=49.6046

INFO: ParSpMatVec tests passed

>>> End of log
