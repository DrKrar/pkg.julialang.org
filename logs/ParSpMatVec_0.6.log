>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (842.71875 MB free)
Uptime: 11319.0 sec
Load Avg:  0.97412109375  1.02197265625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     602423 s       7434 s      66373 s     344817 s         20 s
#2  3504 MHz     224319 s         93 s      36070 s     844678 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1695	 ParSpMatVec=0.0243	 speedup=6.9786
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1695	 ParSpMatVec=0.0092	 speedup=18.4082
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1695	 ParSpMatVec=0.0107	 speedup=15.8303
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1695	 ParSpMatVec=0.0089	 speedup=18.9537
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1695	 ParSpMatVec=0.0082	 speedup=20.6979
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1223	 ParSpMatVec=0.0341	 speedup=3.5888
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1223	 ParSpMatVec=0.0136	 speedup=8.9701
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1223	 ParSpMatVec=0.0149	 speedup=8.2099
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1223	 ParSpMatVec=0.0125	 speedup=9.7869
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1223	 ParSpMatVec=0.0131	 speedup=9.3114

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0355	 ParSpMatVec=0.0319	 speedup=1.1114
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0355	 ParSpMatVec=0.0126	 speedup=2.8193
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0355	 ParSpMatVec=0.0148	 speedup=2.3951
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0355	 ParSpMatVec=0.0120	 speedup=2.9488
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0355	 ParSpMatVec=0.0127	 speedup=2.8002

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0726	 ParSpMatVec=0.0538	 speedup=1.3507
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0726	 ParSpMatVec=0.0028	 speedup=26.0778
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0726	 ParSpMatVec=0.0019	 speedup=38.9091
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0726	 ParSpMatVec=0.0021	 speedup=35.0971
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0726	 ParSpMatVec=0.0015	 speedup=48.5890

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0090	 ParSpMatVec=0.0555	 speedup=0.1615
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0090	 ParSpMatVec=0.0037	 speedup=2.4306
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0090	 ParSpMatVec=0.0023	 speedup=3.9064
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0090	 ParSpMatVec=0.0038	 speedup=2.3647
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0090	 ParSpMatVec=0.0020	 speedup=4.4887

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0822	 ParSpMatVec=0.0436	 speedup=1.8852
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0822	 ParSpMatVec=0.0036	 speedup=22.7243
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0822	 ParSpMatVec=0.0021	 speedup=38.5733
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0822	 ParSpMatVec=0.0043	 speedup=19.3133
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0822	 ParSpMatVec=0.0020	 speedup=40.1839

INFO: ParSpMatVec tests passed

>>> End of log
