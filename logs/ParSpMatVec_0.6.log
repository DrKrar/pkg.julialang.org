>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (849.57421875 MB free)
Uptime: 10657.0 sec
Load Avg:  0.8994140625  0.96435546875  0.953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     558898 s       3133 s      57806 s     337603 s         22 s
#2  3507 MHz     174703 s       4528 s      29326 s     831968 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2541	 ParSpMatVec=0.0166	 speedup=15.3250
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2541	 ParSpMatVec=0.0092	 speedup=27.5076
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2541	 ParSpMatVec=0.0129	 speedup=19.7332
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2541	 ParSpMatVec=0.0113	 speedup=22.5293
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2541	 ParSpMatVec=0.0084	 speedup=30.0712
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2177	 ParSpMatVec=0.0329	 speedup=6.6187
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2177	 ParSpMatVec=0.0114	 speedup=19.0222
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2177	 ParSpMatVec=0.0140	 speedup=15.5568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2177	 ParSpMatVec=0.0130	 speedup=16.7961
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2177	 ParSpMatVec=0.0128	 speedup=16.9477

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0555	 ParSpMatVec=0.0299	 speedup=1.8563
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0555	 ParSpMatVec=0.0126	 speedup=4.4107
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0555	 ParSpMatVec=0.0151	 speedup=3.6870
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0555	 ParSpMatVec=0.0148	 speedup=3.7548
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0555	 ParSpMatVec=0.0130	 speedup=4.2746

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0643	 ParSpMatVec=0.0520	 speedup=1.2356
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0643	 ParSpMatVec=0.0029	 speedup=22.3046
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0643	 ParSpMatVec=0.0019	 speedup=33.3537
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0643	 ParSpMatVec=0.0015	 speedup=43.4169
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0643	 ParSpMatVec=0.0023	 speedup=28.3412

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0078	 ParSpMatVec=0.0617	 speedup=0.1271
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0078	 ParSpMatVec=0.0042	 speedup=1.8561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0078	 ParSpMatVec=0.0023	 speedup=3.4656
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0078	 ParSpMatVec=0.0040	 speedup=1.9446
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0078	 ParSpMatVec=0.0027	 speedup=2.8658

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0804	 ParSpMatVec=0.0397	 speedup=2.0260
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0804	 ParSpMatVec=0.0039	 speedup=20.4787
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0804	 ParSpMatVec=0.0030	 speedup=26.9809
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0804	 ParSpMatVec=0.0038	 speedup=21.0998
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0804	 ParSpMatVec=0.0030	 speedup=26.6356

INFO: ParSpMatVec tests passed

>>> End of log
