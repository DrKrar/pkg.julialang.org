>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1185
Commit ca2046e (2016-11-04 08:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (810.77734375 MB free)
Uptime: 11902.0 sec
Load Avg:  0.99560546875  0.9697265625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     655211 s       2360 s      71773 s     332651 s         23 s
#2  3500 MHz     221346 s       4986 s      38435 s     897991 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1716	 ParSpMatVec=0.0175	 speedup=9.8055
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1716	 ParSpMatVec=0.0086	 speedup=20.0392
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1716	 ParSpMatVec=0.0111	 speedup=15.5070
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1716	 ParSpMatVec=0.0084	 speedup=20.3977
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1716	 ParSpMatVec=0.0076	 speedup=22.5127
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1414	 ParSpMatVec=0.0366	 speedup=3.8595
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1414	 ParSpMatVec=0.0142	 speedup=9.9648
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1414	 ParSpMatVec=0.0122	 speedup=11.5664
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1414	 ParSpMatVec=0.0124	 speedup=11.3681
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1414	 ParSpMatVec=0.0123	 speedup=11.4520

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0594	 ParSpMatVec=0.0314	 speedup=1.8944
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0594	 ParSpMatVec=0.0132	 speedup=4.5121
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0594	 ParSpMatVec=0.0179	 speedup=3.3119
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0594	 ParSpMatVec=0.0130	 speedup=4.5706
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0594	 ParSpMatVec=0.0130	 speedup=4.5813

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0731	 ParSpMatVec=0.0464	 speedup=1.5742
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0731	 ParSpMatVec=0.0032	 speedup=22.5613
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0731	 ParSpMatVec=0.0018	 speedup=41.0440
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0731	 ParSpMatVec=0.0013	 speedup=57.1229
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0731	 ParSpMatVec=0.0020	 speedup=36.6316

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0073	 ParSpMatVec=0.0618	 speedup=0.1187
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0073	 ParSpMatVec=0.0040	 speedup=1.8116
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0073	 ParSpMatVec=0.0023	 speedup=3.1953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0073	 ParSpMatVec=0.0022	 speedup=3.3095
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0073	 ParSpMatVec=0.0029	 speedup=2.4871

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0478	 ParSpMatVec=0.0388	 speedup=1.2315
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0478	 ParSpMatVec=0.0042	 speedup=11.4276
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0478	 ParSpMatVec=0.0023	 speedup=20.4051
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0478	 ParSpMatVec=0.0027	 speedup=17.7361
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0478	 ParSpMatVec=0.0026	 speedup=18.4896

INFO: ParSpMatVec tests passed

>>> End of log
