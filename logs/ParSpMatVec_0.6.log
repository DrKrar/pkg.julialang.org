>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:491
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1295
Commit 2a4b68a (2016-11-22 18:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (824.625 MB free)
Uptime: 11854.0 sec
Load Avg:  1.0517578125  1.0166015625  0.974609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     647374 s       4745 s      72772 s     343546 s         24 s
#2  3500 MHz     208142 s       1731 s      35145 s     915213 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1741	 ParSpMatVec=0.0162	 speedup=10.7556
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1741	 ParSpMatVec=0.0070	 speedup=24.9391
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1741	 ParSpMatVec=0.0135	 speedup=12.8495
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1741	 ParSpMatVec=0.0076	 speedup=22.9339
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1741	 ParSpMatVec=0.0132	 speedup=13.1633
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2147	 ParSpMatVec=0.0490	 speedup=4.3781
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2147	 ParSpMatVec=0.0134	 speedup=15.9943
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2147	 ParSpMatVec=0.0140	 speedup=15.3170
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2147	 ParSpMatVec=0.0125	 speedup=17.2067
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2147	 ParSpMatVec=0.0132	 speedup=16.2203

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0411	 ParSpMatVec=0.0182	 speedup=2.2636
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0411	 ParSpMatVec=0.0127	 speedup=3.2280
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0411	 ParSpMatVec=0.0140	 speedup=2.9297
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0411	 ParSpMatVec=0.0126	 speedup=3.2628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0411	 ParSpMatVec=0.0137	 speedup=3.0041

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0565	 ParSpMatVec=0.0322	 speedup=1.7525
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0565	 ParSpMatVec=0.0017	 speedup=32.4252
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0565	 ParSpMatVec=0.0022	 speedup=25.4781
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0565	 ParSpMatVec=0.0017	 speedup=33.2026
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0565	 ParSpMatVec=0.0018	 speedup=32.1115

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0054	 ParSpMatVec=0.0499	 speedup=0.1080
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0054	 ParSpMatVec=0.0036	 speedup=1.5076
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0054	 ParSpMatVec=0.0019	 speedup=2.8351
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0054	 ParSpMatVec=0.0035	 speedup=1.5206
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0054	 ParSpMatVec=0.0026	 speedup=2.0856

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0790	 ParSpMatVec=0.0692	 speedup=1.1412
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0790	 ParSpMatVec=0.0046	 speedup=17.2953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0790	 ParSpMatVec=0.0025	 speedup=31.6169
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0790	 ParSpMatVec=0.0030	 speedup=26.1035
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0790	 ParSpMatVec=0.0023	 speedup=34.3001

INFO: ParSpMatVec tests passed

>>> End of log
