>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1662
Commit f27c6f3 (2016-12-23 02:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (822.75390625 MB free)
Uptime: 9869.0 sec
Load Avg:  0.9970703125  0.9853515625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     583767 s        118 s      64304 s     234397 s         14 s
#2  3499 MHz     191623 s         42 s      34560 s     738470 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=45.6589	 ParSpMatVec=0.0242	 speedup=1883.1493
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=45.6589	 ParSpMatVec=0.0099	 speedup=4634.0816
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=45.6589	 ParSpMatVec=0.0122	 speedup=3731.2915
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=45.6589	 ParSpMatVec=0.0107	 speedup=4286.7336
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=45.6589	 ParSpMatVec=0.0094	 speedup=4848.7496
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=54.3270	 ParSpMatVec=0.0291	 speedup=1864.3599
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=54.3270	 ParSpMatVec=0.0123	 speedup=4416.4628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=54.3270	 ParSpMatVec=0.0148	 speedup=3681.3370
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=54.3270	 ParSpMatVec=0.0135	 speedup=4031.4696
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=54.3270	 ParSpMatVec=0.0144	 speedup=3775.5535

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=59.7069	 ParSpMatVec=0.0310	 speedup=1923.1363
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=59.7069	 ParSpMatVec=0.0124	 speedup=4809.3498
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=59.7069	 ParSpMatVec=0.0144	 speedup=4144.6007
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=59.7069	 ParSpMatVec=0.0127	 speedup=4708.1227
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=59.7069	 ParSpMatVec=0.0131	 speedup=4572.5979

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=43.1995	 ParSpMatVec=0.0344	 speedup=1254.0423
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=43.1995	 ParSpMatVec=0.0018	 speedup=24329.4298
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=43.1995	 ParSpMatVec=0.0022	 speedup=19278.2793
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=43.1995	 ParSpMatVec=0.0015	 speedup=28676.3651
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=43.1995	 ParSpMatVec=0.0016	 speedup=27675.0510

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=49.5962	 ParSpMatVec=0.0551	 speedup=899.5293
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=49.5962	 ParSpMatVec=0.0037	 speedup=13327.2980
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=49.5962	 ParSpMatVec=0.0024	 speedup=21093.7145
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=49.5962	 ParSpMatVec=0.0030	 speedup=16396.1272
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=49.5962	 ParSpMatVec=0.0025	 speedup=19633.7131

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=59.5889	 ParSpMatVec=0.0440	 speedup=1354.8953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=59.5889	 ParSpMatVec=0.0034	 speedup=17774.0725
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=59.5889	 ParSpMatVec=0.0031	 speedup=19360.4835
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=59.5889	 ParSpMatVec=0.0030	 speedup=20018.7518
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=59.5889	 ParSpMatVec=0.0024	 speedup=24644.7892

INFO: ParSpMatVec tests passed

>>> End of log
