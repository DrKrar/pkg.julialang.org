>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @unix_only(::ANY) at ./deprecated.jl:470
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::SubString{String}) at ./sysimg.jl:14
 [5] evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 [6] cd(::##2#4, ::String) at ./file.jl:69
 [7] (::##1#3)(::IOStream) at ./none:13
 [8] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1847
Commit 8f9036a (2017-01-02 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (885.86328125 MB free)
Uptime: 14263.0 sec
Load Avg:  1.05419921875  0.88720703125  0.57421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz     550423 s       1249 s      61210 s     703554 s          8 s
#2  3492 MHz     150244 s       5059 s      28150 s    1222482 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.10.0
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3026	 ParSpMatVec=0.0176	 speedup=17.2158
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3026	 ParSpMatVec=0.0101	 speedup=29.9227
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3026	 ParSpMatVec=0.0150	 speedup=20.2315
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3026	 ParSpMatVec=0.0085	 speedup=35.4980
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3026	 ParSpMatVec=0.0095	 speedup=31.7020
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3793	 ParSpMatVec=0.0546	 speedup=6.9446
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3793	 ParSpMatVec=0.0131	 speedup=28.9201
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3793	 ParSpMatVec=0.0109	 speedup=34.8833
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3793	 ParSpMatVec=0.0099	 speedup=38.4215
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3793	 ParSpMatVec=0.0101	 speedup=37.4307

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0747	 ParSpMatVec=0.0220	 speedup=3.3946
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0747	 ParSpMatVec=0.0129	 speedup=5.8005
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0747	 ParSpMatVec=0.0193	 speedup=3.8731
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0747	 ParSpMatVec=0.0132	 speedup=5.6456
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0747	 ParSpMatVec=0.0134	 speedup=5.5826

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0692	 ParSpMatVec=0.0387	 speedup=1.7905
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0692	 ParSpMatVec=0.0015	 speedup=45.9898
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0692	 ParSpMatVec=0.0016	 speedup=42.0029
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0692	 ParSpMatVec=0.0013	 speedup=55.2175
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0692	 ParSpMatVec=0.0009	 speedup=76.2066

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0061	 ParSpMatVec=0.0472	 speedup=0.1302
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0061	 ParSpMatVec=0.0032	 speedup=1.9248
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0061	 ParSpMatVec=0.0023	 speedup=2.6621
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0061	 ParSpMatVec=0.0017	 speedup=3.5664
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0061	 ParSpMatVec=0.0023	 speedup=2.7102

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0526	 ParSpMatVec=0.0848	 speedup=0.6206
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0526	 ParSpMatVec=0.0034	 speedup=15.6133
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0526	 ParSpMatVec=0.0023	 speedup=22.8074
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0526	 ParSpMatVec=0.0033	 speedup=15.7050
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0526	 ParSpMatVec=0.0026	 speedup=20.5092

INFO: ParSpMatVec tests passed

>>> End of log
