>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1235
Commit 271b31d (2016-11-13 22:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (837.6484375 MB free)
Uptime: 11762.0 sec
Load Avg:  1.00537109375  1.0146484375  0.9775390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz     645122 s       4578 s      84406 s     312039 s         17 s
#2  3492 MHz     192550 s        357 s      39826 s     915371 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2942	 ParSpMatVec=0.0159	 speedup=18.4872
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2942	 ParSpMatVec=0.0092	 speedup=32.0443
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2942	 ParSpMatVec=0.0121	 speedup=24.3179
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2942	 ParSpMatVec=0.0128	 speedup=23.0491
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2942	 ParSpMatVec=0.0094	 speedup=31.1346
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1666	 ParSpMatVec=0.0295	 speedup=5.6512
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1666	 ParSpMatVec=0.0108	 speedup=15.3888
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1666	 ParSpMatVec=0.0159	 speedup=10.4670
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1666	 ParSpMatVec=0.0127	 speedup=13.0889
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1666	 ParSpMatVec=0.0163	 speedup=10.2014

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0604	 ParSpMatVec=0.0295	 speedup=2.0444
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0604	 ParSpMatVec=0.0130	 speedup=4.6571
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0604	 ParSpMatVec=0.0127	 speedup=4.7349
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0604	 ParSpMatVec=0.0124	 speedup=4.8653
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0604	 ParSpMatVec=0.0110	 speedup=5.4800

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0678	 ParSpMatVec=0.0522	 speedup=1.2993
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0678	 ParSpMatVec=0.0021	 speedup=31.9085
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0678	 ParSpMatVec=0.0028	 speedup=24.6141
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0678	 ParSpMatVec=0.0020	 speedup=34.4053
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0678	 ParSpMatVec=0.0023	 speedup=29.2203

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0066	 ParSpMatVec=0.0585	 speedup=0.1136
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0066	 ParSpMatVec=0.0048	 speedup=1.3721
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0066	 ParSpMatVec=0.0021	 speedup=3.2103
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0066	 ParSpMatVec=0.0049	 speedup=1.3626
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0066	 ParSpMatVec=0.0030	 speedup=2.1999

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0743	 ParSpMatVec=0.0603	 speedup=1.2323
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0743	 ParSpMatVec=0.0044	 speedup=16.8063
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0743	 ParSpMatVec=0.0023	 speedup=31.7598
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0743	 ParSpMatVec=0.0058	 speedup=12.7110
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0743	 ParSpMatVec=0.0039	 speedup=18.9059

INFO: ParSpMatVec tests passed

>>> End of log
