>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1138
Commit 72725a1 (2016-10-27 21:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (810.38671875 MB free)
Uptime: 11809.0 sec
Load Avg:  1.00927734375  1.017578125  0.97314453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     632603 s        324 s      80351 s     346591 s         29 s
#2  3499 MHz     250310 s       5493 s      40936 s     853634 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3069	 ParSpMatVec=0.0198	 speedup=15.4899
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3069	 ParSpMatVec=0.0115	 speedup=26.7493
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3069	 ParSpMatVec=0.0120	 speedup=25.5263
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3069	 ParSpMatVec=0.0150	 speedup=20.5051
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3069	 ParSpMatVec=0.0085	 speedup=36.0401
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2548	 ParSpMatVec=0.0548	 speedup=4.6512
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2548	 ParSpMatVec=0.0146	 speedup=17.4984
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2548	 ParSpMatVec=0.0152	 speedup=16.7867
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2548	 ParSpMatVec=0.0139	 speedup=18.2771
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2548	 ParSpMatVec=0.0132	 speedup=19.3285

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0481	 ParSpMatVec=0.0295	 speedup=1.6287
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0481	 ParSpMatVec=0.0141	 speedup=3.4010
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0481	 ParSpMatVec=0.0157	 speedup=3.0622
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0481	 ParSpMatVec=0.0133	 speedup=3.6048
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0481	 ParSpMatVec=0.0143	 speedup=3.3674

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0767	 ParSpMatVec=0.0609	 speedup=1.2587
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0767	 ParSpMatVec=0.0031	 speedup=24.4058
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0767	 ParSpMatVec=0.0026	 speedup=29.7113
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0767	 ParSpMatVec=0.0030	 speedup=25.7819
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0767	 ParSpMatVec=0.0025	 speedup=31.0879

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0084	 ParSpMatVec=0.0744	 speedup=0.1133
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0084	 ParSpMatVec=0.0037	 speedup=2.2688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0084	 ParSpMatVec=0.0085	 speedup=0.9911
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0084	 ParSpMatVec=0.0030	 speedup=2.8298
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0084	 ParSpMatVec=0.0065	 speedup=1.3036

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0680	 ParSpMatVec=0.0729	 speedup=0.9330
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0680	 ParSpMatVec=0.0064	 speedup=10.5522
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0680	 ParSpMatVec=0.0075	 speedup=9.0842
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0680	 ParSpMatVec=0.0325	 speedup=2.0910
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0680	 ParSpMatVec=0.0020	 speedup=33.2570

INFO: ParSpMatVec tests passed

>>> End of log
