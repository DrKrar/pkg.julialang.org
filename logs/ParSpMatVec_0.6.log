>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:270
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1701
Commit d8a5718 (2016-12-26 06:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (891.2734375 MB free)
Uptime: 10707.0 sec
Load Avg:  1.1611328125  1.0576171875  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     599633 s         24 s      81196 s     274441 s         13 s
#2  3500 MHz     184955 s        150 s      37542 s     823679 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=40.9715	 ParSpMatVec=0.0173	 speedup=2373.8299
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=40.9715	 ParSpMatVec=0.0095	 speedup=4334.5269
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=40.9715	 ParSpMatVec=0.0090	 speedup=4544.6115
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=40.9715	 ParSpMatVec=0.0101	 speedup=4066.4314
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=40.9715	 ParSpMatVec=0.0119	 speedup=3453.6254
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=55.0602	 ParSpMatVec=0.0523	 speedup=1052.0498
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=55.0602	 ParSpMatVec=0.0126	 speedup=4377.8698
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=55.0602	 ParSpMatVec=0.0155	 speedup=3551.2778
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=55.0602	 ParSpMatVec=0.0146	 speedup=3779.4903
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=55.0602	 ParSpMatVec=0.0190	 speedup=2901.7834

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=58.0515	 ParSpMatVec=0.0315	 speedup=1841.3288
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=58.0515	 ParSpMatVec=0.0138	 speedup=4192.0475
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=58.0515	 ParSpMatVec=0.0158	 speedup=3675.8054
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=58.0515	 ParSpMatVec=0.0136	 speedup=4276.0218
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=58.0515	 ParSpMatVec=0.0134	 speedup=4346.2811

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=45.9712	 ParSpMatVec=0.0359	 speedup=1280.2261
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=45.9712	 ParSpMatVec=0.0014	 speedup=32478.3150
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=45.9712	 ParSpMatVec=0.0010	 speedup=44949.6211
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=45.9712	 ParSpMatVec=0.0013	 speedup=34086.8291
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=45.9712	 ParSpMatVec=0.0022	 speedup=21377.0188

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=53.9859	 ParSpMatVec=0.0597	 speedup=905.0422
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=53.9859	 ParSpMatVec=0.0037	 speedup=14586.0404
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=53.9859	 ParSpMatVec=0.0036	 speedup=15020.1773
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=53.9859	 ParSpMatVec=0.0070	 speedup=7690.8586
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=53.9859	 ParSpMatVec=0.0054	 speedup=10008.6119

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=53.5681	 ParSpMatVec=0.0355	 speedup=1510.2953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=53.5681	 ParSpMatVec=0.0036	 speedup=14887.7028
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=53.5681	 ParSpMatVec=0.0014	 speedup=38077.9503
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=53.5681	 ParSpMatVec=0.0022	 speedup=24287.0382
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=53.5681	 ParSpMatVec=0.0022	 speedup=23859.6868

INFO: ParSpMatVec tests passed

>>> End of log
