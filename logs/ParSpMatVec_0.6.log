>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (844.61328125 MB free)
Uptime: 11427.0 sec
Load Avg:  1.044921875  1.11279296875  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     599252 s       6547 s      69527 s     345478 s         33 s
#2  3499 MHz     195911 s       1979 s      37333 s     880092 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2756	 ParSpMatVec=0.0271	 speedup=10.1598
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2756	 ParSpMatVec=0.0084	 speedup=32.9958
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2756	 ParSpMatVec=0.0158	 speedup=17.4550
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2756	 ParSpMatVec=0.0140	 speedup=19.7094
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2756	 ParSpMatVec=0.0089	 speedup=31.1364
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2067	 ParSpMatVec=0.0518	 speedup=3.9870
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2067	 ParSpMatVec=0.0127	 speedup=16.2656
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2067	 ParSpMatVec=0.0181	 speedup=11.4460
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2067	 ParSpMatVec=0.0124	 speedup=16.7001
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2067	 ParSpMatVec=0.0139	 speedup=14.8967

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0369	 ParSpMatVec=0.0209	 speedup=1.7615
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0369	 ParSpMatVec=0.0127	 speedup=2.9086
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0369	 ParSpMatVec=0.0143	 speedup=2.5773
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0369	 ParSpMatVec=0.0147	 speedup=2.5167
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0369	 ParSpMatVec=0.0131	 speedup=2.8174

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0699	 ParSpMatVec=0.0569	 speedup=1.2298
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0699	 ParSpMatVec=0.0029	 speedup=24.3315
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0699	 ParSpMatVec=0.0022	 speedup=32.4239
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0699	 ParSpMatVec=0.0019	 speedup=36.9119
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0699	 ParSpMatVec=0.0020	 speedup=35.1697

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0108	 ParSpMatVec=0.0486	 speedup=0.2229
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0108	 ParSpMatVec=0.0039	 speedup=2.7666
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0108	 ParSpMatVec=0.0022	 speedup=4.8339
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0108	 ParSpMatVec=0.0026	 speedup=4.2259
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0108	 ParSpMatVec=0.0028	 speedup=3.9005

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0833	 ParSpMatVec=0.0635	 speedup=1.3115
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0833	 ParSpMatVec=0.0040	 speedup=20.9148
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0833	 ParSpMatVec=0.0026	 speedup=32.4381
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0833	 ParSpMatVec=0.0026	 speedup=31.7078
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0833	 ParSpMatVec=0.0028	 speedup=29.4003

INFO: ParSpMatVec tests passed

>>> End of log
