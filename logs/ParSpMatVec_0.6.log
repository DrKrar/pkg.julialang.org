>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1211
Commit 1ac30c3 (2016-11-08 21:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (821.16015625 MB free)
Uptime: 11941.0 sec
Load Avg:  0.95849609375  0.998046875  1.01123046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     665994 s       5976 s      78749 s     309088 s         20 s
#2  3500 MHz     210058 s       1190 s      38163 s     915201 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3786	 ParSpMatVec=0.0283	 speedup=13.3888
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3786	 ParSpMatVec=0.0101	 speedup=37.4643
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3786	 ParSpMatVec=0.0128	 speedup=29.5228
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3786	 ParSpMatVec=0.0096	 speedup=39.3125
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3786	 ParSpMatVec=0.0107	 speedup=35.3120
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2912	 ParSpMatVec=0.0599	 speedup=4.8640
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2912	 ParSpMatVec=0.0169	 speedup=17.2536
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2912	 ParSpMatVec=0.0151	 speedup=19.3485
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2912	 ParSpMatVec=0.0149	 speedup=19.5410
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2912	 ParSpMatVec=0.0189	 speedup=15.4183

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0545	 ParSpMatVec=0.0255	 speedup=2.1335
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0545	 ParSpMatVec=0.0170	 speedup=3.2068
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0545	 ParSpMatVec=0.0165	 speedup=3.3067
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0545	 ParSpMatVec=0.0149	 speedup=3.6472
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0545	 ParSpMatVec=0.0141	 speedup=3.8707

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0645	 ParSpMatVec=0.0570	 speedup=1.1309
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0645	 ParSpMatVec=0.0026	 speedup=24.6018
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0645	 ParSpMatVec=0.0029	 speedup=21.8961
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0645	 ParSpMatVec=0.0016	 speedup=39.9041
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0645	 ParSpMatVec=0.0016	 speedup=40.9359

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0085	 ParSpMatVec=0.0473	 speedup=0.1803
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0085	 ParSpMatVec=0.0043	 speedup=1.9758
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0085	 ParSpMatVec=0.0179	 speedup=0.4759
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0085	 ParSpMatVec=0.0035	 speedup=2.4425
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0085	 ParSpMatVec=0.0046	 speedup=1.8337

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0762	 ParSpMatVec=0.0685	 speedup=1.1126
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0762	 ParSpMatVec=0.0041	 speedup=18.7729
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0762	 ParSpMatVec=0.0025	 speedup=30.6109
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0762	 ParSpMatVec=0.0047	 speedup=16.0649
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0762	 ParSpMatVec=0.0023	 speedup=32.9325

INFO: ParSpMatVec tests passed

>>> End of log
