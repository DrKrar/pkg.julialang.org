>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.993
Commit d6d3069 (2016-10-16 23:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (819.59765625 MB free)
Uptime: 16769.0 sec
Load Avg:  0.99658203125  0.63623046875  0.42626953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     446766 s       4402 s      73193 s    1076270 s          9 s
#2  3500 MHz     162784 s        367 s      27373 s    1462012 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2208	 ParSpMatVec=0.0157	 speedup=14.0202
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2208	 ParSpMatVec=0.0087	 speedup=25.2837
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2208	 ParSpMatVec=0.0131	 speedup=16.9110
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2208	 ParSpMatVec=0.0087	 speedup=25.4775
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2208	 ParSpMatVec=0.0082	 speedup=27.0055
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1382	 ParSpMatVec=0.0426	 speedup=3.2476
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1382	 ParSpMatVec=0.0135	 speedup=10.2657
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1382	 ParSpMatVec=0.0150	 speedup=9.2025
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1382	 ParSpMatVec=0.0138	 speedup=9.9908
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1382	 ParSpMatVec=0.0154	 speedup=9.0025

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0641	 ParSpMatVec=0.0324	 speedup=1.9779
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0641	 ParSpMatVec=0.0135	 speedup=4.7544
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0641	 ParSpMatVec=0.0145	 speedup=4.4075
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0641	 ParSpMatVec=0.0134	 speedup=4.7710
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0641	 ParSpMatVec=0.0127	 speedup=5.0524

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0556	 ParSpMatVec=0.0524	 speedup=1.0610
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0556	 ParSpMatVec=0.0029	 speedup=19.4118
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0556	 ParSpMatVec=0.0028	 speedup=19.8861
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0556	 ParSpMatVec=0.0019	 speedup=29.5473
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0556	 ParSpMatVec=0.0014	 speedup=39.1022

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0073	 ParSpMatVec=0.0518	 speedup=0.1407
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0073	 ParSpMatVec=0.0043	 speedup=1.6995
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0073	 ParSpMatVec=0.0024	 speedup=3.0140
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0073	 ParSpMatVec=0.0025	 speedup=2.8693
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0073	 ParSpMatVec=0.0026	 speedup=2.7704

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0678	 ParSpMatVec=0.0662	 speedup=1.0241
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0678	 ParSpMatVec=0.0051	 speedup=13.2156
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0678	 ParSpMatVec=0.0056	 speedup=12.0698
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0678	 ParSpMatVec=0.0027	 speedup=25.2533
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0678	 ParSpMatVec=0.0030	 speedup=22.8522

INFO: ParSpMatVec tests passed

>>> End of log
