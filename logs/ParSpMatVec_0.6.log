>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (843.296875 MB free)
Uptime: 10780.0 sec
Load Avg:  1.00341796875  1.0380859375  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     535423 s         46 s      78386 s     326402 s         16 s
#2  3500 MHz     168797 s        142 s      31201 s     841798 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2586	 ParSpMatVec=0.0181	 speedup=14.2841
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2586	 ParSpMatVec=0.0093	 speedup=27.8038
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2586	 ParSpMatVec=0.0116	 speedup=22.2631
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2586	 ParSpMatVec=0.0089	 speedup=29.0822
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2586	 ParSpMatVec=0.0102	 speedup=25.4407
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1259	 ParSpMatVec=0.0411	 speedup=3.0619
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1259	 ParSpMatVec=0.0118	 speedup=10.6856
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1259	 ParSpMatVec=0.0126	 speedup=10.0151
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1259	 ParSpMatVec=0.0151	 speedup=8.3447
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1259	 ParSpMatVec=0.0129	 speedup=9.7250

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0382	 ParSpMatVec=0.0304	 speedup=1.2545
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0382	 ParSpMatVec=0.0125	 speedup=3.0596
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0382	 ParSpMatVec=0.0160	 speedup=2.3814
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0382	 ParSpMatVec=0.0137	 speedup=2.7961
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0382	 ParSpMatVec=0.0144	 speedup=2.6528

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0698	 ParSpMatVec=0.0345	 speedup=2.0239
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0698	 ParSpMatVec=0.0026	 speedup=27.2411
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0698	 ParSpMatVec=0.0024	 speedup=29.0080
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0698	 ParSpMatVec=0.0013	 speedup=55.0986
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0698	 ParSpMatVec=0.0019	 speedup=36.8209

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0613	 speedup=0.1326
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0031	 speedup=2.6586
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0039	 speedup=2.0842
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0022	 speedup=3.7271
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0026	 speedup=3.1196

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0782	 ParSpMatVec=0.0379	 speedup=2.0643
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0782	 ParSpMatVec=0.0033	 speedup=23.7758
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0782	 ParSpMatVec=0.0028	 speedup=28.2198
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0782	 ParSpMatVec=0.0021	 speedup=38.0867
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0782	 ParSpMatVec=0.0024	 speedup=32.8573

INFO: ParSpMatVec tests passed

>>> End of log
