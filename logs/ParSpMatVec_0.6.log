>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:541
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:563 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.718
Commit 9f50a2c (2016-09-20 15:35 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (832.9921875 MB free)
Uptime: 10565.0 sec
Load Avg:  1.01416015625  1.0439453125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3510 MHz     605203 s         56 s      62826 s     274150 s         21 s
#2  3510 MHz     207891 s        102 s      35349 s     787129 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2220	 ParSpMatVec=0.0249	 speedup=8.9227
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2220	 ParSpMatVec=0.0095	 speedup=23.3684
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2220	 ParSpMatVec=0.0109	 speedup=20.3140
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2220	 ParSpMatVec=0.0074	 speedup=30.0445
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2220	 ParSpMatVec=0.0068	 speedup=32.6517
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1636	 ParSpMatVec=0.0325	 speedup=5.0271
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1636	 ParSpMatVec=0.0124	 speedup=13.1755
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1636	 ParSpMatVec=0.0161	 speedup=10.1696
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1636	 ParSpMatVec=0.0151	 speedup=10.8537
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1636	 ParSpMatVec=0.0142	 speedup=11.5047

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0649	 ParSpMatVec=0.0326	 speedup=1.9885
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0649	 ParSpMatVec=0.0128	 speedup=5.0596
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0649	 ParSpMatVec=0.0137	 speedup=4.7460
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0649	 ParSpMatVec=0.0104	 speedup=6.2667
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0649	 ParSpMatVec=0.0111	 speedup=5.8237

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0690	 ParSpMatVec=0.0549	 speedup=1.2571
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0690	 ParSpMatVec=0.0029	 speedup=23.5350
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0690	 ParSpMatVec=0.0020	 speedup=34.0036
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0690	 ParSpMatVec=0.0018	 speedup=39.2784
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0690	 ParSpMatVec=0.0012	 speedup=58.0483

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0090	 ParSpMatVec=0.0618	 speedup=0.1457
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0090	 ParSpMatVec=0.0050	 speedup=1.8139
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0090	 ParSpMatVec=0.0022	 speedup=4.0139
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0090	 ParSpMatVec=0.0040	 speedup=2.2465
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0090	 ParSpMatVec=0.0044	 speedup=2.0663

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0768	 ParSpMatVec=0.0710	 speedup=1.0823
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0768	 ParSpMatVec=0.0043	 speedup=17.6883
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0768	 ParSpMatVec=0.0022	 speedup=34.8467
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0768	 ParSpMatVec=0.0045	 speedup=17.1960
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0768	 ParSpMatVec=0.0030	 speedup=26.0161

INFO: ParSpMatVec tests passed

>>> End of log
