>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1653
Commit 66ab171 (2016-12-22 07:36 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (821.3828125 MB free)
Uptime: 10147.0 sec
Load Avg:  0.9970703125  0.998046875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     566095 s        108 s      77807 s     266748 s         27 s
#2  3496 MHz     196842 s         37 s      38583 s     754547 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=43.1072	 ParSpMatVec=0.0171	 speedup=2516.2821
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=43.1072	 ParSpMatVec=0.0090	 speedup=4784.1231
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=43.1072	 ParSpMatVec=0.0121	 speedup=3558.8194
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=43.1072	 ParSpMatVec=0.0103	 speedup=4166.8954
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=43.1072	 ParSpMatVec=0.0096	 speedup=4484.3709
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=61.4455	 ParSpMatVec=0.0471	 speedup=1303.6345
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=61.4455	 ParSpMatVec=0.0147	 speedup=4182.2154
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=61.4455	 ParSpMatVec=0.0142	 speedup=4317.6647
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=61.4455	 ParSpMatVec=0.0132	 speedup=4650.7120
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=61.4455	 ParSpMatVec=0.0130	 speedup=4709.2851

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=56.5734	 ParSpMatVec=0.0262	 speedup=2161.3252
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=56.5734	 ParSpMatVec=0.0119	 speedup=4760.9884
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=56.5734	 ParSpMatVec=0.0079	 speedup=7189.5585
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=56.5734	 ParSpMatVec=0.0090	 speedup=6311.2230
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=56.5734	 ParSpMatVec=0.0113	 speedup=5025.8276

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=47.1510	 ParSpMatVec=0.0538	 speedup=876.2614
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=47.1510	 ParSpMatVec=0.0026	 speedup=17982.2295
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=47.1510	 ParSpMatVec=0.0026	 speedup=18020.6544
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=47.1510	 ParSpMatVec=0.0018	 speedup=26460.3115
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=47.1510	 ParSpMatVec=0.0028	 speedup=16976.5599

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=59.1742	 ParSpMatVec=0.0658	 speedup=899.2696
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=59.1742	 ParSpMatVec=0.0036	 speedup=16255.9588
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=59.1742	 ParSpMatVec=0.0026	 speedup=22334.4585
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=59.1742	 ParSpMatVec=0.0039	 speedup=15071.9502
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=59.1742	 ParSpMatVec=0.0029	 speedup=20073.0032

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=61.3760	 ParSpMatVec=0.0700	 speedup=876.5614
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=61.3760	 ParSpMatVec=0.0037	 speedup=16677.3110
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=61.3760	 ParSpMatVec=0.0028	 speedup=21735.5530
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=61.3760	 ParSpMatVec=0.0054	 speedup=11454.3783
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=61.3760	 ParSpMatVec=0.0059	 speedup=10416.9383

INFO: ParSpMatVec tests passed

>>> End of log
