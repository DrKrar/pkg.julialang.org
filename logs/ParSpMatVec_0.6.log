>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.754
Commit ac25c58 (2016-09-23 23:59 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (840.7109375 MB free)
Uptime: 11363.0 sec
Load Avg:  0.9130859375  0.96923828125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3514 MHz     572304 s       4224 s      74146 s     346074 s         22 s
#2  3514 MHz     214325 s       2614 s      37445 s     842710 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1952	 ParSpMatVec=0.0188	 speedup=10.3706
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1952	 ParSpMatVec=0.0091	 speedup=21.5667
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1952	 ParSpMatVec=0.0121	 speedup=16.2009
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1952	 ParSpMatVec=0.0117	 speedup=16.7324
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1952	 ParSpMatVec=0.0096	 speedup=20.3604
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1959	 ParSpMatVec=0.0524	 speedup=3.7409
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1959	 ParSpMatVec=0.0121	 speedup=16.1723
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1959	 ParSpMatVec=0.0144	 speedup=13.5839
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1959	 ParSpMatVec=0.0126	 speedup=15.5865
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1959	 ParSpMatVec=0.0119	 speedup=16.4787

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0533	 ParSpMatVec=0.0271	 speedup=1.9712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0533	 ParSpMatVec=0.0132	 speedup=4.0381
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0533	 ParSpMatVec=0.0146	 speedup=3.6458
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0533	 ParSpMatVec=0.0120	 speedup=4.4623
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0533	 ParSpMatVec=0.0156	 speedup=3.4293

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0680	 ParSpMatVec=0.0489	 speedup=1.3912
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0680	 ParSpMatVec=0.0023	 speedup=30.2241
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0680	 ParSpMatVec=0.0025	 speedup=27.3596
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0680	 ParSpMatVec=0.0025	 speedup=27.6973
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0680	 ParSpMatVec=0.0026	 speedup=26.2733

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0605	 speedup=0.1299
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0042	 speedup=1.8609
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0022	 speedup=3.5425
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0027	 speedup=2.8962
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0025	 speedup=3.1450

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0868	 ParSpMatVec=0.0380	 speedup=2.2845
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0868	 ParSpMatVec=0.0041	 speedup=20.9093
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0868	 ParSpMatVec=0.0016	 speedup=55.0209
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0868	 ParSpMatVec=0.0022	 speedup=40.1561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0868	 ParSpMatVec=0.0023	 speedup=37.0939

INFO: ParSpMatVec tests passed

>>> End of log
