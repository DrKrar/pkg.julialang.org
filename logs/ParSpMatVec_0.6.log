>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (849.19140625 MB free)
Uptime: 10749.0 sec
Load Avg:  0.96044921875  0.97509765625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz     571133 s         55 s      61686 s     325353 s         17 s
#2  3505 MHz     144686 s         99 s      28982 s     879580 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2779	 ParSpMatVec=0.0256	 speedup=10.8544
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2779	 ParSpMatVec=0.0092	 speedup=30.0648
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2779	 ParSpMatVec=0.0171	 speedup=16.2984
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2779	 ParSpMatVec=0.0124	 speedup=22.3416
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2779	 ParSpMatVec=0.0123	 speedup=22.6583
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1970	 ParSpMatVec=0.0646	 speedup=3.0499
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1970	 ParSpMatVec=0.0142	 speedup=13.9227
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1970	 ParSpMatVec=0.0168	 speedup=11.7529
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1970	 ParSpMatVec=0.0162	 speedup=12.1588
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1970	 ParSpMatVec=0.0149	 speedup=13.2477

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0419	 ParSpMatVec=0.0245	 speedup=1.7135
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0419	 ParSpMatVec=0.0139	 speedup=3.0105
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0419	 ParSpMatVec=0.0165	 speedup=2.5412
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0419	 ParSpMatVec=0.0162	 speedup=2.5964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0419	 ParSpMatVec=0.0161	 speedup=2.6066

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0945	 ParSpMatVec=0.0601	 speedup=1.5735
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0945	 ParSpMatVec=0.0025	 speedup=37.0859
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0945	 ParSpMatVec=0.0029	 speedup=32.0601
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0945	 ParSpMatVec=0.0017	 speedup=56.0759
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0945	 ParSpMatVec=0.0019	 speedup=48.7007

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0637	 speedup=0.1385
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0046	 speedup=1.9244
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0041	 speedup=2.1343
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0023	 speedup=3.7590
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0027	 speedup=3.3091

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0799	 ParSpMatVec=0.0738	 speedup=1.0831
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0799	 ParSpMatVec=0.0036	 speedup=22.3050
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0799	 ParSpMatVec=0.0037	 speedup=21.8761
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0799	 ParSpMatVec=0.0030	 speedup=26.8773
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0799	 ParSpMatVec=0.0027	 speedup=29.5084

INFO: ParSpMatVec tests passed

>>> End of log
