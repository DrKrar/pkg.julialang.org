>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:491
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1297
Commit 416f5f2 (2016-11-23 13:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (841.671875 MB free)
Uptime: 11617.0 sec
Load Avg:  1.0244140625  1.07666015625  1.02685546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     635183 s       4713 s      82060 s     314270 s         24 s
#2  3499 MHz     218221 s       1744 s      37915 s     876936 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2999	 ParSpMatVec=0.0245	 speedup=12.2385
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2999	 ParSpMatVec=0.0086	 speedup=34.9187
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2999	 ParSpMatVec=0.0126	 speedup=23.8717
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2999	 ParSpMatVec=0.0110	 speedup=27.3084
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2999	 ParSpMatVec=0.0086	 speedup=34.7240
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2672	 ParSpMatVec=0.0557	 speedup=4.7983
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2672	 ParSpMatVec=0.0126	 speedup=21.1304
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2672	 ParSpMatVec=0.0150	 speedup=17.8481
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2672	 ParSpMatVec=0.0133	 speedup=20.0388
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2672	 ParSpMatVec=0.0118	 speedup=22.6250

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1451	 ParSpMatVec=0.0286	 speedup=5.0828
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1451	 ParSpMatVec=0.0125	 speedup=11.6516
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1451	 ParSpMatVec=0.0153	 speedup=9.4838
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1451	 ParSpMatVec=0.0141	 speedup=10.2853
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1451	 ParSpMatVec=0.0132	 speedup=11.0128

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0520	 ParSpMatVec=0.0543	 speedup=0.9571
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0520	 ParSpMatVec=0.0021	 speedup=25.0444
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0520	 ParSpMatVec=0.0045	 speedup=11.6488
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0520	 ParSpMatVec=0.0148	 speedup=3.5078
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0520	 ParSpMatVec=0.0023	 speedup=22.3585

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0605	 speedup=0.1428
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0040	 speedup=2.1636
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0019	 speedup=4.5082
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0030	 speedup=2.8869
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0024	 speedup=3.5977

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1001	 ParSpMatVec=0.0394	 speedup=2.5373
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1001	 ParSpMatVec=0.0041	 speedup=24.3766
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1001	 ParSpMatVec=0.0020	 speedup=48.9232
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1001	 ParSpMatVec=0.0041	 speedup=24.1585
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1001	 ParSpMatVec=0.0030	 speedup=33.5558

INFO: ParSpMatVec tests passed

>>> End of log
