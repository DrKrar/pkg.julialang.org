>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (548.171875 MB free)
Uptime: 10479.0 sec
Load Avg:  1.07275390625  1.080078125  1.08837890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     654375 s       5900 s      69740 s     257062 s         16 s
#2  3499 MHz     124361 s        186 s      32614 s     855033 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2818	 ParSpMatVec=0.0234	 speedup=12.0460
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2818	 ParSpMatVec=0.0083	 speedup=33.9502
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2818	 ParSpMatVec=0.0115	 speedup=24.5695
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2818	 ParSpMatVec=0.0089	 speedup=31.6615
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2818	 ParSpMatVec=0.0101	 speedup=27.8002
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2333	 ParSpMatVec=0.0445	 speedup=5.2407
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2333	 ParSpMatVec=0.0125	 speedup=18.6975
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2333	 ParSpMatVec=0.0077	 speedup=30.4363
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2333	 ParSpMatVec=0.0102	 speedup=22.8443
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2333	 ParSpMatVec=0.0107	 speedup=21.8330

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0573	 ParSpMatVec=0.0296	 speedup=1.9336
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0573	 ParSpMatVec=0.0137	 speedup=4.1824
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0573	 ParSpMatVec=0.0079	 speedup=7.2857
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0573	 ParSpMatVec=0.0087	 speedup=6.5715
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0573	 ParSpMatVec=0.0106	 speedup=5.4263

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0518	 ParSpMatVec=0.0584	 speedup=0.8871
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0518	 ParSpMatVec=0.0030	 speedup=17.2925
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0518	 ParSpMatVec=0.0017	 speedup=30.1309
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0518	 ParSpMatVec=0.0040	 speedup=13.0613
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0518	 ParSpMatVec=0.0019	 speedup=27.5974

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0101	 ParSpMatVec=0.0728	 speedup=0.1390
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0101	 ParSpMatVec=0.0042	 speedup=2.4133
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0101	 ParSpMatVec=0.0039	 speedup=2.5779
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0101	 ParSpMatVec=0.0024	 speedup=4.1676
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0101	 ParSpMatVec=0.0062	 speedup=1.6211

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0867	 ParSpMatVec=0.0644	 speedup=1.3471
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0867	 ParSpMatVec=0.0026	 speedup=33.6520
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0867	 ParSpMatVec=0.0020	 speedup=42.6920
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0867	 ParSpMatVec=0.0032	 speedup=26.9235
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0867	 ParSpMatVec=0.0012	 speedup=73.2687

INFO: ParSpMatVec tests passed

>>> End of log
