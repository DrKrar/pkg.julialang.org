>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (847.6171875 MB free)
Uptime: 11314.0 sec
Load Avg:  1.037109375  1.08642578125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     579342 s       4413 s      66095 s     365538 s         24 s
#2  3507 MHz     240191 s       3857 s      37507 s     822969 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2266	 ParSpMatVec=0.0298	 speedup=7.6132
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2266	 ParSpMatVec=0.0171	 speedup=13.2300
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2266	 ParSpMatVec=0.0122	 speedup=18.5710
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2266	 ParSpMatVec=0.0098	 speedup=23.2074
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2266	 ParSpMatVec=0.0086	 speedup=26.2124
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1240	 ParSpMatVec=0.0347	 speedup=3.5715
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1240	 ParSpMatVec=0.0138	 speedup=8.9893
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1240	 ParSpMatVec=0.0136	 speedup=9.0992
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1240	 ParSpMatVec=0.0160	 speedup=7.7638
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1240	 ParSpMatVec=0.0136	 speedup=9.1235

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0387	 ParSpMatVec=0.0280	 speedup=1.3793
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0387	 ParSpMatVec=0.0166	 speedup=2.3277
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0387	 ParSpMatVec=0.0147	 speedup=2.6339
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0387	 ParSpMatVec=0.0132	 speedup=2.9270
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0387	 ParSpMatVec=0.0149	 speedup=2.6041

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0677	 ParSpMatVec=0.0546	 speedup=1.2400
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0677	 ParSpMatVec=0.0028	 speedup=23.9661
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0677	 ParSpMatVec=0.0019	 speedup=35.7647
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0677	 ParSpMatVec=0.0010	 speedup=64.5265
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0677	 ParSpMatVec=0.0017	 speedup=39.9139

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0089	 ParSpMatVec=0.0622	 speedup=0.1426
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0089	 ParSpMatVec=0.0028	 speedup=3.1432
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0089	 ParSpMatVec=0.0021	 speedup=4.1860
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0089	 ParSpMatVec=0.0042	 speedup=2.0949
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0089	 ParSpMatVec=0.0028	 speedup=3.2078

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0820	 ParSpMatVec=0.0631	 speedup=1.3011
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0820	 ParSpMatVec=0.0038	 speedup=21.4558
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0820	 ParSpMatVec=0.0036	 speedup=22.9453
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0820	 ParSpMatVec=0.0022	 speedup=37.9212
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0820	 ParSpMatVec=0.0023	 speedup=35.8005

INFO: ParSpMatVec tests passed

>>> End of log
