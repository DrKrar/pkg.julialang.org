>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (849.1171875 MB free)
Uptime: 11304.0 sec
Load Avg:  1.04052734375  1.00732421875  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     615934 s        410 s      92971 s     309111 s         24 s
#2  3500 MHz     217284 s       4954 s      42313 s     837979 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2050	 ParSpMatVec=0.0244	 speedup=8.4148
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2050	 ParSpMatVec=0.0096	 speedup=21.4334
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2050	 ParSpMatVec=0.0121	 speedup=16.9150
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2050	 ParSpMatVec=0.0102	 speedup=20.0544
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2050	 ParSpMatVec=0.0115	 speedup=17.8058
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2005	 ParSpMatVec=0.0508	 speedup=3.9434
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2005	 ParSpMatVec=0.0137	 speedup=14.5964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2005	 ParSpMatVec=0.0150	 speedup=13.3868
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2005	 ParSpMatVec=0.0138	 speedup=14.4868
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2005	 ParSpMatVec=0.0139	 speedup=14.4069

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0500	 ParSpMatVec=0.0194	 speedup=2.5797
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0500	 ParSpMatVec=0.0142	 speedup=3.5282
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0500	 ParSpMatVec=0.0131	 speedup=3.8116
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0500	 ParSpMatVec=0.0125	 speedup=3.9969
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0500	 ParSpMatVec=0.0137	 speedup=3.6533

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0939	 ParSpMatVec=0.0526	 speedup=1.7839
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0939	 ParSpMatVec=0.0025	 speedup=36.9462
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0939	 ParSpMatVec=0.0022	 speedup=42.1315
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0939	 ParSpMatVec=0.0016	 speedup=58.7462
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0939	 ParSpMatVec=0.0038	 speedup=24.9915

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0087	 ParSpMatVec=0.0640	 speedup=0.1360
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0087	 ParSpMatVec=0.0040	 speedup=2.1939
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0087	 ParSpMatVec=0.0021	 speedup=4.1166
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0087	 ParSpMatVec=0.0026	 speedup=3.3048
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0087	 ParSpMatVec=0.0026	 speedup=3.3143

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0720	 ParSpMatVec=0.0642	 speedup=1.1216
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0720	 ParSpMatVec=0.0041	 speedup=17.6096
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0720	 ParSpMatVec=0.0023	 speedup=31.0281
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0720	 ParSpMatVec=0.0028	 speedup=26.0122
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0720	 ParSpMatVec=0.0024	 speedup=29.4620

INFO: ParSpMatVec tests passed

>>> End of log
