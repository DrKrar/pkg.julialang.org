>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1067
Commit d66df68 (2016-10-21 02:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (825.76171875 MB free)
Uptime: 17160.0 sec
Load Avg:  1.09033203125  0.67041015625  0.4404296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     457290 s       5645 s      69775 s    1096663 s          8 s
#2  3500 MHz     147045 s        156 s      28061 s    1524612 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1961	 ParSpMatVec=0.0247	 speedup=7.9366
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1961	 ParSpMatVec=0.0104	 speedup=18.7971
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1961	 ParSpMatVec=0.0158	 speedup=12.4459
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1961	 ParSpMatVec=0.0133	 speedup=14.7039
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1961	 ParSpMatVec=0.0085	 speedup=23.0882
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1800	 ParSpMatVec=0.0492	 speedup=3.6576
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1800	 ParSpMatVec=0.0097	 speedup=18.5177
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1800	 ParSpMatVec=0.0114	 speedup=15.7634
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1800	 ParSpMatVec=0.0086	 speedup=20.9887
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1800	 ParSpMatVec=0.0096	 speedup=18.7578

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0509	 ParSpMatVec=0.0296	 speedup=1.7181
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0509	 ParSpMatVec=0.0118	 speedup=4.3199
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0509	 ParSpMatVec=0.0147	 speedup=3.4535
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0509	 ParSpMatVec=0.0124	 speedup=4.1057
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0509	 ParSpMatVec=0.0126	 speedup=4.0526

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0681	 ParSpMatVec=0.0449	 speedup=1.5168
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0681	 ParSpMatVec=0.0023	 speedup=30.1232
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0681	 ParSpMatVec=0.0023	 speedup=29.6379
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0681	 ParSpMatVec=0.0018	 speedup=37.0501
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0681	 ParSpMatVec=0.0017	 speedup=39.0022

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0056	 ParSpMatVec=0.0539	 speedup=0.1038
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0056	 ParSpMatVec=0.0035	 speedup=1.5767
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0056	 ParSpMatVec=0.0024	 speedup=2.2885
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0056	 ParSpMatVec=0.0040	 speedup=1.3824
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0056	 ParSpMatVec=0.0019	 speedup=2.8851

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0699	 ParSpMatVec=0.0615	 speedup=1.1373
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0699	 ParSpMatVec=0.0039	 speedup=17.9795
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0699	 ParSpMatVec=0.0021	 speedup=32.6334
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0699	 ParSpMatVec=0.0030	 speedup=23.5923
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0699	 ParSpMatVec=0.0018	 speedup=38.6997

INFO: ParSpMatVec tests passed

>>> End of log
