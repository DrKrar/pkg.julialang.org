>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1532
Commit ae1b30b (2016-12-09 18:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (827.578125 MB free)
Uptime: 9245.0 sec
Load Avg:  1.0927734375  1.09033203125  1.0615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3511 MHz     521405 s       6679 s      61970 s     237912 s         17 s
#2  3511 MHz     188068 s         25 s      33298 s     676532 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2292	 ParSpMatVec=0.0217	 speedup=10.5448
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2292	 ParSpMatVec=0.0091	 speedup=25.2184
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2292	 ParSpMatVec=0.0114	 speedup=20.1082
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2292	 ParSpMatVec=0.0105	 speedup=21.8568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2292	 ParSpMatVec=0.0106	 speedup=21.5271
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2198	 ParSpMatVec=0.0313	 speedup=7.0228
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2198	 ParSpMatVec=0.0107	 speedup=20.6010
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2198	 ParSpMatVec=0.0171	 speedup=12.8755
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2198	 ParSpMatVec=0.0172	 speedup=12.7489
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2198	 ParSpMatVec=0.0136	 speedup=16.1420

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0404	 ParSpMatVec=0.0183	 speedup=2.2051
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0404	 ParSpMatVec=0.0122	 speedup=3.3145
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0404	 ParSpMatVec=0.0139	 speedup=2.9093
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0404	 ParSpMatVec=0.0142	 speedup=2.8384
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0404	 ParSpMatVec=0.0123	 speedup=3.2812

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0633	 ParSpMatVec=0.0615	 speedup=1.0298
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0633	 ParSpMatVec=0.0021	 speedup=29.8532
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0633	 ParSpMatVec=0.0027	 speedup=23.5448
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0633	 ParSpMatVec=0.0018	 speedup=34.2949
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0633	 ParSpMatVec=0.0018	 speedup=34.7047

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0592	 speedup=0.1098
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0042	 speedup=1.5302
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0024	 speedup=2.6797
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0024	 speedup=2.7401
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0024	 speedup=2.6725

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0543	 ParSpMatVec=0.0373	 speedup=1.4564
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0543	 ParSpMatVec=0.0031	 speedup=17.2241
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0543	 ParSpMatVec=0.0019	 speedup=28.1270
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0543	 ParSpMatVec=0.0021	 speedup=26.3359
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0543	 ParSpMatVec=0.0032	 speedup=16.7500

INFO: ParSpMatVec tests passed

>>> End of log
