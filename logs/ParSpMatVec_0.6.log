>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:491
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1262
Commit 9f999b7 (2016-11-16 21:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (836.30078125 MB free)
Uptime: 11734.0 sec
Load Avg:  0.98828125  1.001953125  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3494 MHz     639601 s        123 s      79523 s     315657 s         46 s
#2  3494 MHz     229688 s       6346 s      46902 s     851967 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2960	 ParSpMatVec=0.0273	 speedup=10.8627
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2960	 ParSpMatVec=0.0097	 speedup=30.4422
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2960	 ParSpMatVec=0.0134	 speedup=22.1497
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2960	 ParSpMatVec=0.0132	 speedup=22.4972
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2960	 ParSpMatVec=0.0097	 speedup=30.5661
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2246	 ParSpMatVec=0.0500	 speedup=4.4946
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2246	 ParSpMatVec=0.0138	 speedup=16.2274
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2246	 ParSpMatVec=0.0158	 speedup=14.2052
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2246	 ParSpMatVec=0.0133	 speedup=16.9283
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2246	 ParSpMatVec=0.0138	 speedup=16.2486

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0651	 ParSpMatVec=0.0288	 speedup=2.2628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0651	 ParSpMatVec=0.0126	 speedup=5.1801
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0651	 ParSpMatVec=0.0145	 speedup=4.4831
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0651	 ParSpMatVec=0.0133	 speedup=4.8785
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0651	 ParSpMatVec=0.0138	 speedup=4.7009

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0664	 ParSpMatVec=0.0557	 speedup=1.1925
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0664	 ParSpMatVec=0.0026	 speedup=25.5632
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0664	 ParSpMatVec=0.0032	 speedup=20.9794
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0664	 ParSpMatVec=0.0020	 speedup=32.5074
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0664	 ParSpMatVec=0.0023	 speedup=28.8190

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0070	 ParSpMatVec=0.0652	 speedup=0.1081
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0070	 ParSpMatVec=0.0041	 speedup=1.7052
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0070	 ParSpMatVec=0.0021	 speedup=3.3390
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0070	 ParSpMatVec=0.0034	 speedup=2.0898
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0070	 ParSpMatVec=0.0027	 speedup=2.5988

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0715	 ParSpMatVec=0.0624	 speedup=1.1459
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0715	 ParSpMatVec=0.0035	 speedup=20.4157
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0715	 ParSpMatVec=0.0021	 speedup=34.8487
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0715	 ParSpMatVec=0.0022	 speedup=33.0440
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0715	 ParSpMatVec=0.0027	 speedup=26.9417

INFO: ParSpMatVec tests passed

>>> End of log
