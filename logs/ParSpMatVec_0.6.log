>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1378
Commit 1e0e793 (2016-12-03 13:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (818.30078125 MB free)
Uptime: 10434.0 sec
Load Avg:  1.0498046875  1.0517578125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     611491 s       2857 s      93616 s     223085 s         17 s
#2  3499 MHz     181696 s       3870 s      42131 s     786882 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2842	 ParSpMatVec=0.0159	 speedup=17.8984
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2842	 ParSpMatVec=0.0095	 speedup=30.0706
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2842	 ParSpMatVec=0.0115	 speedup=24.6531
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2842	 ParSpMatVec=0.0103	 speedup=27.5694
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2842	 ParSpMatVec=0.0087	 speedup=32.5223
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2058	 ParSpMatVec=0.0430	 speedup=4.7833
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2058	 ParSpMatVec=0.0137	 speedup=15.0207
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2058	 ParSpMatVec=0.0173	 speedup=11.8658
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2058	 ParSpMatVec=0.0143	 speedup=14.4086
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2058	 ParSpMatVec=0.0129	 speedup=15.9966

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0660	 ParSpMatVec=0.0307	 speedup=2.1535
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0660	 ParSpMatVec=0.0132	 speedup=4.9939
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0660	 ParSpMatVec=0.0148	 speedup=4.4708
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0660	 ParSpMatVec=0.0132	 speedup=5.0105
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0660	 ParSpMatVec=0.0152	 speedup=4.3522

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0722	 ParSpMatVec=0.0448	 speedup=1.6116
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0722	 ParSpMatVec=0.0051	 speedup=14.1707
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0722	 ParSpMatVec=0.0022	 speedup=32.6831
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0722	 ParSpMatVec=0.0018	 speedup=40.6728
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0722	 ParSpMatVec=0.0021	 speedup=33.6152

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0067	 ParSpMatVec=0.0347	 speedup=0.1926
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0067	 ParSpMatVec=0.0066	 speedup=1.0189
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0067	 ParSpMatVec=0.0022	 speedup=3.1036
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0067	 ParSpMatVec=0.0039	 speedup=1.7026
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0067	 ParSpMatVec=0.0025	 speedup=2.6365

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0730	 ParSpMatVec=0.0618	 speedup=1.1811
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0730	 ParSpMatVec=0.0040	 speedup=18.4718
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0730	 ParSpMatVec=0.0021	 speedup=35.0989
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0730	 ParSpMatVec=0.0026	 speedup=28.5663
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0730	 ParSpMatVec=0.0035	 speedup=20.6051

INFO: ParSpMatVec tests passed

>>> End of log
