>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1591
Commit 56c009e (2016-12-17 00:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (828.078125 MB free)
Uptime: 10191.0 sec
Load Avg:  0.98583984375  1.0751953125  1.04150390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     570696 s       5931 s      81385 s     253069 s         36 s
#2  3499 MHz     210526 s        893 s      41961 s     732889 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2047	 ParSpMatVec=0.0275	 speedup=7.4463
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2047	 ParSpMatVec=0.0081	 speedup=25.2486
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2047	 ParSpMatVec=0.0119	 speedup=17.1941
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2047	 ParSpMatVec=0.0086	 speedup=23.9142
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2047	 ParSpMatVec=0.0095	 speedup=21.5591
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1964	 ParSpMatVec=0.0466	 speedup=4.2155
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1964	 ParSpMatVec=0.0130	 speedup=15.1180
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1964	 ParSpMatVec=0.0150	 speedup=13.1255
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1964	 ParSpMatVec=0.0118	 speedup=16.6069
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1964	 ParSpMatVec=0.0133	 speedup=14.7349

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0575	 ParSpMatVec=0.0297	 speedup=1.9351
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0575	 ParSpMatVec=0.0126	 speedup=4.5732
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0575	 ParSpMatVec=0.0147	 speedup=3.9057
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0575	 ParSpMatVec=0.0132	 speedup=4.3470
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0575	 ParSpMatVec=0.0130	 speedup=4.4325

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0713	 ParSpMatVec=0.0511	 speedup=1.3949
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0713	 ParSpMatVec=0.0017	 speedup=40.7718
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0713	 ParSpMatVec=0.0018	 speedup=39.5361
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0713	 ParSpMatVec=0.0017	 speedup=41.8420
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0713	 ParSpMatVec=0.0015	 speedup=47.7604

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0064	 ParSpMatVec=0.0458	 speedup=0.1396
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0064	 ParSpMatVec=0.0045	 speedup=1.4283
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0064	 ParSpMatVec=0.0022	 speedup=2.9335
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0064	 ParSpMatVec=0.0029	 speedup=2.2003
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0064	 ParSpMatVec=0.0026	 speedup=2.4438

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0762	 ParSpMatVec=0.0677	 speedup=1.1252
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0762	 ParSpMatVec=0.0041	 speedup=18.6750
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0762	 ParSpMatVec=0.0025	 speedup=30.5034
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0762	 ParSpMatVec=0.0029	 speedup=26.6889
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0762	 ParSpMatVec=0.0028	 speedup=27.5069

INFO: ParSpMatVec tests passed

>>> End of log
