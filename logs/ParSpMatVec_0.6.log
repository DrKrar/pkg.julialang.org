>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1378
Commit 1e0e793 (2016-12-03 13:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (816.8359375 MB free)
Uptime: 11180.0 sec
Load Avg:  0.9326171875  0.9833984375  0.966796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     606215 s       5783 s      83229 s     307874 s         27 s
#2  3495 MHz     186634 s       8357 s      37617 s     858836 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3089	 ParSpMatVec=0.0251	 speedup=12.3156
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3089	 ParSpMatVec=0.0082	 speedup=37.7452
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3089	 ParSpMatVec=0.0121	 speedup=25.6221
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3089	 ParSpMatVec=0.0088	 speedup=35.1523
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3089	 ParSpMatVec=0.0088	 speedup=34.9730
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2451	 ParSpMatVec=0.0536	 speedup=4.5753
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2451	 ParSpMatVec=0.0127	 speedup=19.2358
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2451	 ParSpMatVec=0.0200	 speedup=12.2657
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2451	 ParSpMatVec=0.0145	 speedup=16.9042
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2451	 ParSpMatVec=0.0120	 speedup=20.4402

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0551	 ParSpMatVec=0.0238	 speedup=2.3157
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0551	 ParSpMatVec=0.0117	 speedup=4.7087
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0551	 ParSpMatVec=0.0137	 speedup=4.0309
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0551	 ParSpMatVec=0.0108	 speedup=5.0823
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0551	 ParSpMatVec=0.0124	 speedup=4.4609

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0520	 ParSpMatVec=0.0385	 speedup=1.3523
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0520	 ParSpMatVec=0.0027	 speedup=19.3708
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0520	 ParSpMatVec=0.0027	 speedup=19.3216
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0520	 ParSpMatVec=0.0025	 speedup=20.6457
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0520	 ParSpMatVec=0.0029	 speedup=17.9846

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0059	 ParSpMatVec=0.0569	 speedup=0.1036
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0059	 ParSpMatVec=0.0061	 speedup=0.9657
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0059	 ParSpMatVec=0.0019	 speedup=3.1296
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0059	 ParSpMatVec=0.0237	 speedup=0.2482
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0059	 ParSpMatVec=0.0026	 speedup=2.2716

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0482	 ParSpMatVec=0.0681	 speedup=0.7077
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0482	 ParSpMatVec=0.0038	 speedup=12.5591
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0482	 ParSpMatVec=0.0020	 speedup=23.9495
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0482	 ParSpMatVec=0.0017	 speedup=28.8966
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0482	 ParSpMatVec=0.0018	 speedup=26.6260

INFO: ParSpMatVec tests passed

>>> End of log
