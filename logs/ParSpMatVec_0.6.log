>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:495
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1320
Commit 8dd8ea9 (2016-11-26 22:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (833.11328125 MB free)
Uptime: 11766.0 sec
Load Avg:  1.025390625  1.05419921875  1.0009765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     639565 s       3372 s      78890 s     338904 s         15 s
#2  3500 MHz     217510 s       5120 s      35234 s     892196 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2751	 ParSpMatVec=0.0263	 speedup=10.4539
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2751	 ParSpMatVec=0.0085	 speedup=32.4340
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2751	 ParSpMatVec=0.0115	 speedup=23.9032
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2751	 ParSpMatVec=0.0099	 speedup=27.8989
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2751	 ParSpMatVec=0.0105	 speedup=26.1337
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2095	 ParSpMatVec=0.0446	 speedup=4.6959
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2095	 ParSpMatVec=0.0127	 speedup=16.5011
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2095	 ParSpMatVec=0.0137	 speedup=15.2364
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2095	 ParSpMatVec=0.0120	 speedup=17.4610
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2095	 ParSpMatVec=0.0124	 speedup=16.9217

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0412	 ParSpMatVec=0.0170	 speedup=2.4274
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0412	 ParSpMatVec=0.0128	 speedup=3.2052
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0412	 ParSpMatVec=0.0147	 speedup=2.7942
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0412	 ParSpMatVec=0.0098	 speedup=4.2113
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0412	 ParSpMatVec=0.0082	 speedup=5.0311

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0536	 ParSpMatVec=0.0538	 speedup=0.9966
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0536	 ParSpMatVec=0.0023	 speedup=23.0410
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0536	 ParSpMatVec=0.0020	 speedup=26.8058
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0536	 ParSpMatVec=0.0018	 speedup=29.1725
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0536	 ParSpMatVec=0.0079	 speedup=6.7648

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0083	 ParSpMatVec=0.0537	 speedup=0.1550
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0083	 ParSpMatVec=0.0034	 speedup=2.4732
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0083	 ParSpMatVec=0.0031	 speedup=2.6476
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0083	 ParSpMatVec=0.0027	 speedup=3.0883
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0083	 ParSpMatVec=0.0028	 speedup=2.9377

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0726	 ParSpMatVec=0.0698	 speedup=1.0399
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0726	 ParSpMatVec=0.0052	 speedup=14.0129
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0726	 ParSpMatVec=0.0019	 speedup=37.3037
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0726	 ParSpMatVec=0.0031	 speedup=23.2429
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0726	 ParSpMatVec=0.0030	 speedup=24.1113

INFO: ParSpMatVec tests passed

>>> End of log
