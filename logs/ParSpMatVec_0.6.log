>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (845.28515625 MB free)
Uptime: 11374.0 sec
Load Avg:  0.9921875  1.041015625  1.04345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     612869 s       6831 s      75087 s     325444 s         20 s
#2  3500 MHz     212613 s         91 s      38771 s     856865 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3331	 ParSpMatVec=0.0284	 speedup=11.7228
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3331	 ParSpMatVec=0.0082	 speedup=40.7881
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3331	 ParSpMatVec=0.0121	 speedup=27.4630
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3331	 ParSpMatVec=0.0124	 speedup=26.9006
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3331	 ParSpMatVec=0.0078	 speedup=42.6752
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1170	 ParSpMatVec=0.0320	 speedup=3.6598
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1170	 ParSpMatVec=0.0114	 speedup=10.2850
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1170	 ParSpMatVec=0.0152	 speedup=7.7202
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1170	 ParSpMatVec=0.0125	 speedup=9.3310
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1170	 ParSpMatVec=0.0100	 speedup=11.6753

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0419	 ParSpMatVec=0.0202	 speedup=2.0758
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0419	 ParSpMatVec=0.0112	 speedup=3.7278
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0419	 ParSpMatVec=0.0108	 speedup=3.8811
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0419	 ParSpMatVec=0.0121	 speedup=3.4642
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0419	 ParSpMatVec=0.0120	 speedup=3.5042

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0653	 ParSpMatVec=0.0539	 speedup=1.2114
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0653	 ParSpMatVec=0.0026	 speedup=25.1053
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0653	 ParSpMatVec=0.0052	 speedup=12.5449
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0653	 ParSpMatVec=0.0014	 speedup=45.4902
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0653	 ParSpMatVec=0.0019	 speedup=34.3512

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0429	 speedup=0.2060
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0043	 speedup=2.0701
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0016	 speedup=5.4184
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0033	 speedup=2.6526
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0027	 speedup=3.2427

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0777	 ParSpMatVec=0.0631	 speedup=1.2297
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0777	 ParSpMatVec=0.0034	 speedup=22.6645
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0777	 ParSpMatVec=0.0020	 speedup=39.0472
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0777	 ParSpMatVec=0.0020	 speedup=39.6412
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0777	 ParSpMatVec=0.0095	 speedup=8.1370

INFO: ParSpMatVec tests passed

>>> End of log
