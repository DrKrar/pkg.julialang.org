>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.1565
Commit 0408aa2 (2016-12-15 03:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (820.71875 MB free)
Uptime: 9991.0 sec
Load Avg:  0.9228515625  0.9794921875  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     582111 s        300 s      83163 s     230808 s         13 s
#2  3499 MHz     186156 s       5763 s      38044 s     743101 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2225	 ParSpMatVec=0.0187	 speedup=11.8819
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2225	 ParSpMatVec=0.0084	 speedup=26.5668
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2225	 ParSpMatVec=0.0084	 speedup=26.4130
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2225	 ParSpMatVec=0.0105	 speedup=21.2311
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2225	 ParSpMatVec=0.0107	 speedup=20.7826
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1914	 ParSpMatVec=0.0301	 speedup=6.3596
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1914	 ParSpMatVec=0.0105	 speedup=18.3034
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1914	 ParSpMatVec=0.0121	 speedup=15.8495
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1914	 ParSpMatVec=0.0118	 speedup=16.1559
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1914	 ParSpMatVec=0.0123	 speedup=15.5793

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0370	 ParSpMatVec=0.0173	 speedup=2.1424
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0370	 ParSpMatVec=0.0120	 speedup=3.0844
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0370	 ParSpMatVec=0.0135	 speedup=2.7493
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0370	 ParSpMatVec=0.0123	 speedup=3.0174
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0370	 ParSpMatVec=0.0130	 speedup=2.8562

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0528	 ParSpMatVec=0.0476	 speedup=1.1096
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0528	 ParSpMatVec=0.0029	 speedup=18.4161
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0528	 ParSpMatVec=0.0020	 speedup=26.2707
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0528	 ParSpMatVec=0.0016	 speedup=33.7243
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0528	 ParSpMatVec=0.0091	 speedup=5.7994

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0071	 ParSpMatVec=0.0478	 speedup=0.1483
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0071	 ParSpMatVec=0.0030	 speedup=2.3688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0071	 ParSpMatVec=0.0025	 speedup=2.8771
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0071	 ParSpMatVec=0.0024	 speedup=2.9581
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0071	 ParSpMatVec=0.0028	 speedup=2.5371

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0622	 ParSpMatVec=0.0442	 speedup=1.4070
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0622	 ParSpMatVec=0.0027	 speedup=23.2152
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0622	 ParSpMatVec=0.0021	 speedup=30.1514
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0622	 ParSpMatVec=0.0031	 speedup=19.7646
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0622	 ParSpMatVec=0.0020	 speedup=30.4423

INFO: ParSpMatVec tests passed

>>> End of log
