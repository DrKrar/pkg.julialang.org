>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.6/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.6/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::ANY) at ./deprecated.jl:490
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.6.0-dev.994
Commit 1ea0de1 (2016-10-17 12:32 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (819.765625 MB free)
Uptime: 16558.0 sec
Load Avg:  0.90185546875  0.56005859375  0.396484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     469337 s         74 s      71211 s    1028231 s          7 s
#2  3499 MHz     111166 s         77 s      26658 s    1502171 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1600	 ParSpMatVec=0.0165	 speedup=9.7007
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1600	 ParSpMatVec=0.0093	 speedup=17.2576
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1600	 ParSpMatVec=0.0101	 speedup=15.9057
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1600	 ParSpMatVec=0.0096	 speedup=16.6975
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1600	 ParSpMatVec=0.0074	 speedup=21.4845
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1812	 ParSpMatVec=0.0446	 speedup=4.0603
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1812	 ParSpMatVec=0.0116	 speedup=15.6573
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1812	 ParSpMatVec=0.0128	 speedup=14.1365
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1812	 ParSpMatVec=0.0099	 speedup=18.3776
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1812	 ParSpMatVec=0.0130	 speedup=13.9040

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0391	 ParSpMatVec=0.0192	 speedup=2.0421
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0391	 ParSpMatVec=0.0106	 speedup=3.6945
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0391	 ParSpMatVec=0.0119	 speedup=3.2819
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0391	 ParSpMatVec=0.0106	 speedup=3.7065
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0391	 ParSpMatVec=0.0128	 speedup=3.0612

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0688	 ParSpMatVec=0.0518	 speedup=1.3275
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0688	 ParSpMatVec=0.0021	 speedup=33.1083
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0688	 ParSpMatVec=0.0028	 speedup=24.4750
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0688	 ParSpMatVec=0.0018	 speedup=38.9676
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0688	 ParSpMatVec=0.0016	 speedup=41.7478

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0058	 ParSpMatVec=0.0404	 speedup=0.1438
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0058	 ParSpMatVec=0.0042	 speedup=1.3851
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0058	 ParSpMatVec=0.0017	 speedup=3.3214
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0058	 ParSpMatVec=0.0022	 speedup=2.6729
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0058	 ParSpMatVec=0.0019	 speedup=3.0165

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0435	 ParSpMatVec=0.0363	 speedup=1.2010
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0435	 ParSpMatVec=0.0032	 speedup=13.6411
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0435	 ParSpMatVec=0.0017	 speedup=25.0913
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0435	 ParSpMatVec=0.0029	 speedup=15.0365
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0435	 ParSpMatVec=0.0026	 speedup=16.8299

INFO: ParSpMatVec tests passed

>>> End of log
