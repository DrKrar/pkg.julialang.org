>>> 'Pkg.add("CoordinateTransformations")' log
INFO: Cloning cache of CoordinateTransformations from https://github.com/FugroRoames/CoordinateTransformations.jl.git
INFO: Cloning cache of Quaternions from https://github.com/JuliaGeometry/Quaternions.jl.git
INFO: Cloning cache of Rotations from https://github.com/FugroRoames/Rotations.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing CoordinateTransformations v0.1.0
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedSizeArrays v0.2.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Quaternions v0.1.1
INFO: Installing Rotations v0.2.0
INFO: Package database updated

>>> 'Pkg.test("CoordinateTransformations")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (767.85546875 MB free)
Uptime: 11634.0 sec
Load Avg:  2.669921875  1.74267578125  1.23974609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     566692 s         66 s      67922 s     366494 s         17 s
#2  3499 MHz     182182 s         82 s      36176 s     904617 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - CoordinateTransformations     0.1.0
 - JSON                          0.6.0
7 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.8.6
 - DualNumbers                   0.2.2
 - FixedSizeArrays               0.2.2
 - NaNMath                       0.2.1
 - Quaternions                   0.1.1
 - Rotations                     0.2.0
INFO: Computing test dependencies for CoordinateTransformations...
INFO: Installing BaseTestNext v0.2.1
INFO: Installing ForwardDiff v0.2.2
INFO: Testing CoordinateTransformations
WARNING: Method definition transform_deriv(CoordinateTransformations.AbstractTransformation, Any) in module CoordinateTransformations at /home/vagrant/.julia/v0.5/CoordinateTransformations/src/core.jl:140 overwritten at /home/vagrant/.julia/v0.5/CoordinateTransformations/src/core.jl:157.
WARNING: replacing docs for 'CoordinateTransformations.transform_deriv :: Tuple{CoordinateTransformations.AbstractTransformation,Any}' in module 'CoordinateTransformations'.
WARNING: could not import ForwardDiff.GradientNumber into Main
ERROR: LoadError: UndefVarError: GradientNumber not defined
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CoordinateTransformations/test/runtests.jl, in expression starting on line 5
======================[ ERROR: CoordinateTransformations ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/CoordinateTransformations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.1
INFO: Removing ForwardDiff v0.2.2
ERROR: CoordinateTransformations had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
