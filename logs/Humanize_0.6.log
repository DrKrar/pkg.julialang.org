>>> 'Pkg.add("Humanize")' log
INFO: Installing Humanize v0.4.0
INFO: Package database updated

>>> 'Pkg.test("Humanize")' log
Julia Version 0.6.0-dev.1768
Commit d7b6ac3 (2016-12-29 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (386.34375 MB free)
Uptime: 33461.0 sec
Load Avg:  0.9970703125  1.13134765625  1.408203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1724968 s        553 s     223084 s    1040220 s         70 s
#2  3499 MHz     621283 s       5923 s     130386 s    2484748 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Humanize                      0.4.0
 - JSON                          0.8.0
5 additional packages:
 - Compat                        0.10.0
 - CompilerTools                 0.2.1
 - DataStructures                0.4.6
 - DocOpt                        0.2.0
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
INFO: Testing Humanize
test_datasize
  dec
Error During Test
  Test threw an exception of type MethodError
  Expression: datasize(size,style=style,format="%.3f") == (results[style])[i]
  MethodError: no method matching (::Humanize.##4#5)(::Float64, ::String)
  The applicable method may be too new: running in world age 20486, while current world is 20487.
  Closest candidates are:
    #4(::Any, ::Any) at /home/vagrant/.julia/v0.6/Humanize/src/Humanize.jl:32 (method too new to be called from this world context.)
  Stacktrace:
   [1] #datasize#1(::Symbol, ::String, ::Function, ::Float64) at /home/vagrant/.julia/v0.6/Humanize/src/Humanize.jl:39
   [2] (::Humanize.#kw##datasize)(::Array{Any,1}, ::Humanize.#datasize, ::Float64) at ./<missing>:0
   [3] test_datasize() at /home/vagrant/.julia/v0.6/Humanize/test/runtests.jl:15
   [4] include_from_node1(::String) at ./loading.jl:532
   [5] include(::String) at ./sysimg.jl:14
   [6] process_options(::Base.JLOptions) at ./client.jl:298
   [7] _start() at ./client.jl:363
ERROR: LoadError: There was an error during testing
Stacktrace:
 [1] record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:401
 [2] do_test(::Base.Test.Threw, ::Expr) at ./test.jl:284
 [3] test_datasize() at /home/vagrant/.julia/v0.6/Humanize/test/runtests.jl:15
 [4] include_from_node1(::String) at ./loading.jl:532
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:298
 [7] _start() at ./client.jl:363
while loading /home/vagrant/.julia/v0.6/Humanize/test/runtests.jl, in expression starting on line 99
==============================[ ERROR: Humanize ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Humanize/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Humanize had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:363

>>> End of log
