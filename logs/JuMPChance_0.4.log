>>> 'Pkg.add("JuMPChance")' log
INFO: Cloning cache of JuMPChance from git://github.com/mlubin/JuMPChance.jl.git
INFO: Installing ArrayViews v0.6.3
INFO: Installing BinDeps v0.3.15
INFO: Installing Calculus v0.1.10
INFO: Installing DataStructures v0.3.12
INFO: Installing Dates v0.4.4
INFO: Installing Docile v0.5.16
INFO: Installing DualNumbers v0.1.3
INFO: Installing ECOS v0.5.0
INFO: Installing HttpCommon v0.1.1
INFO: Installing JuMP v0.9.3
INFO: Installing JuMPChance v0.2.0
INFO: Installing MathProgBase v0.3.16
INFO: Installing NaNMath v0.1.0
INFO: Installing ReverseDiffSparse v0.2.10
INFO: Installing SHA v0.1.1
INFO: Installing URIParser v0.0.6
INFO: Building ECOS
INFO: Package database updated

>>> 'Pkg.test("JuMPChance")' log
Julia Version 0.4.0-pre+7097
Commit c4b089f (2015-08-29 13:17 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for JuMPChance...
INFO: Installing Distributions v0.8.4
INFO: Installing GLPK v0.2.16
INFO: Installing GLPKMathProgInterface v0.1.13
INFO: Installing PDMats v0.3.5
INFO: Installing StatsBase v0.7.1
INFO: Installing StatsFuns v0.1.2
INFO: Building GLPK
INFO: Testing JuMPChance
WARNING: module JuMP should explicitly import - from Base
WARNING: module JuMP should explicitly import + from Base
WARNING: module JuMP should explicitly import * from Base
WARNING: module JuMP should explicitly import / from Base
WARNING: module JuMP should explicitly import ^ from Base
WARNING: module JuMP should explicitly import <= from Base
WARNING: module JuMP should explicitly import == from Base
WARNING: module JuMP should explicitly import >= from Base
WARNING: module JuMPChance should explicitly import + from Base
WARNING: module JuMPChance should explicitly import - from Base
WARNING: module JuMPChance should explicitly import / from Base
WARNING: module JuMPChance should explicitly import * from Base
WARNING: module JuMPChance should explicitly import <= from Base
WARNING: module JuMPChance should explicitly import >= from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: module JuMP should explicitly import setindex! from Base

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.4/GLPKMathProgInterface/src/GLPKInterfaceMIP.jl:398.
Use "Dict(a=>b, ...)" instead.
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: The meaning of with_probability has flipped! Constraints should be satisfied with given probability or greater. For backwards compatibility, this constraint will be interpreted in the old sense.
WARNING: beginswith is deprecated, use startswith instead.
 in depwarn at ./deprecated.jl:73
 in beginswith at deprecated.jl:30
 in anonymous at test.jl:92
 in do_test at test.jl:50
 in anonymous at no file:165
 in include at ./boot.jl:259
 in include_from_node1 at ./loading.jl:271
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/JuMPChance/test/runtests.jl, in expression starting on line 7
WARNING: module JuMP should explicitly import setindex! from Base
WARNING: float64(x) is deprecated, use Float64(x) instead.
 in depwarn at ./deprecated.jl:73
 in float64 at deprecated.jl:50
 in call at /home/vagrant/.julia/v0.4/JuMPChance/src/distributions.jl:11
 in __solvehook#32__ at /home/vagrant/.julia/v0.4/JuMP/src/macros.jl:63
 in solve at /home/vagrant/.julia/v0.4/JuMP/src/solvers.jl:8
 in anonymous at no file:203
 in include at ./boot.jl:259
 in include_from_node1 at ./loading.jl:271
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/JuMPChance/test/runtests.jl, in expression starting on line 194
WARNING: float64(x) is deprecated, use Float64(x) instead.
 in depwarn at ./deprecated.jl:73
 in float64 at deprecated.jl:50
 in call at /home/vagrant/.julia/v0.4/JuMPChance/src/distributions.jl:11
 in __solvehook#32__ at /home/vagrant/.julia/v0.4/JuMP/src/macros.jl:63
 in solve at /home/vagrant/.julia/v0.4/JuMP/src/solvers.jl:8
 in anonymous at no file:203
 in include at ./boot.jl:259
 in include_from_node1 at ./loading.jl:271
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/JuMPChance/test/runtests.jl, in expression starting on line 194
WARNING: float64(x) is deprecated, use Float64(x) instead.
 in depwarn at ./deprecated.jl:73
 in float64 at deprecated.jl:50
 in call at /home/vagrant/.julia/v0.4/JuMPChance/src/distributions.jl:11
 in addcuts at /home/vagrant/.julia/v0.4/JuMPChance/src/solve.jl:194
 in solvecc_cuts at /home/vagrant/.julia/v0.4/JuMPChance/src/solve.jl:257
 in __solvehook#32__ at /home/vagrant/.julia/v0.4/JuMP/src/macros.jl:113
 in solve at /home/vagrant/.julia/v0.4/JuMP/src/solvers.jl:8
 in anonymous at no file:203
 in include at ./boot.jl:259
 in include_from_node1 at ./loading.jl:271
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/JuMPChance/test/runtests.jl, in expression starting on line 194
WARNING: float64(x) is deprecated, use Float64(x) instead.
 in depwarn at ./deprecated.jl:73
 in float64 at deprecated.jl:50
 in call at /home/vagrant/.julia/v0.4/JuMPChance/src/distributions.jl:11
 in addcuts at /home/vagrant/.julia/v0.4/JuMPChance/src/solve.jl:194
 in solvecc_cuts at /home/vagrant/.julia/v0.4/JuMPChance/src/solve.jl:257
 in __solvehook#32__ at /home/vagrant/.julia/v0.4/JuMP/src/macros.jl:113
 in solve at /home/vagrant/.julia/v0.4/JuMP/src/solvers.jl:8
 in anonymous at no file:203
 in include at ./boot.jl:259
 in include_from_node1 at ./loading.jl:271
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/JuMPChance/test/runtests.jl, in expression starting on line 194
WARNING: Solver does not appear to support adding constraints to an existing model. Hot-start is disabled.
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
WARNING: The comparison operator >= has been deprecated for constructing chance constraints. Use the form @addConstraint instead.
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 1 objective linearization violations
Iteration 1: 0 constraint violations, 1 objective linearization violations
Iteration 2: 0 constraint violations, 1 objective linearization violations
Iteration 3: 0 constraint violations, 1 objective linearization violations
Iteration 4: 0 constraint violations, 1 objective linearization violations
Iteration 5: 0 constraint violations, 1 objective linearization violations
Iteration 6: 0 constraint violations, 1 objective linearization violations
Iteration 7: 0 constraint violations, 1 objective linearization violations
Iteration 8: 0 constraint violations, 1 objective linearization violations
Iteration 9: 0 constraint violations, 1 objective linearization violations
Iteration 10: 0 constraint violations, 1 objective linearization violations
Done after 11 iterations
Done after 0 iterations
Iteration 0: 1 constraint violations, 1 objective linearization violations
Iteration 1: 0 constraint violations, 1 objective linearization violations
Iteration 2: 0 constraint violations, 1 objective linearization violations
Iteration 3: 0 constraint violations, 1 objective linearization violations
Iteration 4: 0 constraint violations, 1 objective linearization violations
Iteration 5: 0 constraint violations, 1 objective linearization violations
Iteration 6: 0 constraint violations, 1 objective linearization violations
Iteration 7: 0 constraint violations, 1 objective linearization violations
Iteration 8: 0 constraint violations, 1 objective linearization violations
Iteration 9: 0 constraint violations, 1 objective linearization violations
Iteration 10: 0 constraint violations, 1 objective linearization violations
Done after 11 iterations
Done after 0 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Done after 1 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
Iteration 1: 1 constraint violations, 0 objective linearization violations
Done after 2 iterations
Iteration 0: 1 constraint violations, 0 objective linearization violations
WARNING: Solver does not appear to support providing initial feasible solutions.
Done after 1 iterations
Done after 0 iterations
Done after 0 iterations
Done after 0 iterations
Done after 0 iterations
ERROR: LoadError: assertion failed: |getObjectiveValue(m) - (uval + 1) - 2 * (lval + 1)| <= 1.7763568394002505e-11
  getObjectiveValue(m) = 9.25203953914308
  (uval + 1) - 2 * (lval + 1) = 9.252039447213075
  difference = 9.193000494178705e-8 > 1.7763568394002505e-11
 in error at error.jl:22
 in test_approx_eq at test.jl:140
 in test_approx_eq at test.jl:150
 in anonymous at /home/vagrant/.julia/v0.4/JuMP/src/macros.jl:554
 in include at ./boot.jl:259
 in include_from_node1 at ./loading.jl:271
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/JuMPChance/test/runtests.jl, in expression starting on line 522
=============================[ ERROR: JuMPChance ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/JuMPChance/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Distributions v0.8.4
INFO: Removing GLPK v0.2.16
INFO: Removing GLPKMathProgInterface v0.1.13
INFO: Removing PDMats v0.3.5
INFO: Removing StatsBase v0.7.1
INFO: Removing StatsFuns v0.1.2
ERROR: JuMPChance had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:753
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:284
 in _start at ./client.jl:411

>>> End of log
