>>> 'Pkg.add("MAT")' log
INFO: Cloning cache of MAT from https://github.com/simonster/MAT.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.2.0
INFO: Installing BufferedStreams v0.3.0
INFO: Installing HDF5 v0.7.3
INFO: Installing Libz v0.2.4
INFO: Installing MAT v0.3.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building HDF5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Tuple{BinDeps.DependencyProvider,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:50
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:236
 [14] process_options(::Base.JLOptions) at ./client.jl:281
 [15] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 6
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Tuple{BinDeps.DependencyHelper,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:50
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:236
 [14] process_options(::Base.JLOptions) at ./client.jl:281
 [15] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 6
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] macro expansion at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:12
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:236
 [12] process_options(::Base.JLOptions) at ./client.jl:281
 [13] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of MAT
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MAT")' log
Julia Version 0.6.0-dev.2635
Commit dc2459d (2017-02-13 07:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (865.12109375 MB free)
Uptime: 1504.0 sec
Load Avg:  1.017578125  0.9619140625  0.638671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz      56368 s         96 s       6495 s      69620 s          1 s
#2  3499 MHz      15464 s         37 s       3845 s     127634 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - MAT                           0.3.1
8 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.2.0
 - BufferedStreams               0.3.0
 - Compat                        0.18.0
 - HDF5                          0.7.3
 - Libz                          0.2.4
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing MAT
WARNING: complex(A::AbstractArray, B::AbstractArray) is deprecated, use complex.(A, B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] complex(::Array{Float64,2}, ::Array{Float64,2}) at ./deprecated.jl:50
 [3] read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:327
 [4] read(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:389
 [5] check(::String, ::Dict{String,Array{Complex{Float64},2}}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:9
 [6] macro expansion at /home/vagrant/.julia/v0.6/MAT/test/read.jl:78 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:300
 [13] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
WARNING: complex(A::AbstractArray, B::AbstractArray) is deprecated, use complex.(A, B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] complex(::Array{Float64,2}, ::Array{Float64,2}) at ./deprecated.jl:50
 [3] read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:327
 [4] read(::MAT.MAT_v5.Matlabv5File) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:345
 [5] matread(::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT.jl:116
 [6] check(::String, ::Dict{String,Array{Complex{Float64},2}}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:28
 [7] macro expansion at /home/vagrant/.julia/v0.6/MAT/test/read.jl:78 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:300
 [14] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] #4 at ./<missing>:0 [inlined]
 [4] next at ./generator.jl:25 [inlined]
 [5] collect(::Base.Generator{Array{Base.AbstractIOBuffer{Array{UInt8,1}},1},MAT.MAT_v5.##4#6}) at ./array.jl:395
 [6] read_string(::IOStream, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:282
 [7] read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:322
 [8] read(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:389
 [9] check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:9
 [10] macro expansion at /home/vagrant/.julia/v0.6/MAT/test/read.jl:87 [inlined]
 [11] anonymous at ./<missing>:?
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:539
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:300
 [17] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] read_string(::IOStream, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:280
 [4] read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:322
 [5] read(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:389
 [6] check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:9
 [7] macro expansion at /home/vagrant/.julia/v0.6/MAT/test/read.jl:87 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:300
 [14] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Any}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] read_cell(::IOStream, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:148
 [4] read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:316
 [5] read(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:389
 [6] check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:9
 [7] macro expansion at /home/vagrant/.julia/v0.6/MAT/test/read.jl:87 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:300
 [14] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
WARNING: Array{T}(::Type{T}, m::Int, n::Int) is deprecated, use Array{T}(m, n) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Any}, ::Int64, ::Int64) at ./deprecated.jl:50
 [3] read_cell(::IOStream, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:148
 [4] read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:316
 [5] read(::MAT.MAT_v5.Matlabv5File) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:345
 [6] matread(::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT.jl:116
 [7] check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:28
 [8] macro expansion at /home/vagrant/.julia/v0.6/MAT/test/read.jl:87 [inlined]
 [9] anonymous at ./<missing>:?
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:300
 [15] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
ERROR: LoadError: LoadError: BoundsError: attempt to access 1Ã—4 Array{Any,2} at index [5]
Stacktrace:
 [1] copy!(::Array{Any,2}, ::Base.Generator{Base.Iterators.Prod2{UnitRange{Int64},Tuple{Float64,Float64,String,Array{Any,2}}},##1#3}) at ./abstractarray.jl:518
 [2] _collect(::Type{Any}, ::Base.Generator{Base.Iterators.Prod2{UnitRange{Int64},Tuple{Float64,Float64,String,Array{Any,2}}},##1#3}, ::Base.HasShape) at ./array.jl:327
 [3] macro expansion at /home/vagrant/.julia/v0.6/MAT/test/read.jl:99 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:300
 [10] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
while loading /home/vagrant/.julia/v0.6/MAT/test/runtests.jl, in expression starting on line 1
=================================[ ERROR: MAT ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MAT/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: MAT had test errors

>>> End of log
