>>> 'Pkg.add("MAT")' log
INFO: Cloning cache of MAT from https://github.com/simonster/MAT.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing BufferedStreams v0.2.0
INFO: Installing HDF5 v0.7.0
INFO: Installing Libz v0.2.0
INFO: Installing MAT v0.3.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Blosc
INFO: Building HDF5
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated

>>> 'Pkg.test("MAT")' log
Julia Version 0.6.0-dev.1591
Commit 56c009e (2016-12-17 00:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (733.08984375 MB free)
Uptime: 1172.0 sec
Load Avg:  0.9833984375  1.03662109375  0.8125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz      47425 s         96 s       8034 s      51612 s          1 s
#2  3499 MHz      10854 s         47 s       3186 s     101117 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - MAT                           0.3.1
8 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - BufferedStreams               0.2.0
 - Compat                        0.9.5
 - HDF5                          0.7.0
 - Libz                          0.2.0
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing MAT
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in #2 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect(::Base.Generator{Array{Base.AbstractIOBuffer{Array{UInt8,1}},1},MAT.MAT_v5.##2#4}) at ./array.jl:366
 in read_string(::IOStream, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:282
 in read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:322
 in read(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:389
 in check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:9
 in macro expansion; at /home/vagrant/.julia/v0.6/MAT/test/read.jl:87 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in #2 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{String,1}, ::Base.Generator{Array{Base.AbstractIOBuffer{Array{UInt8,1}},1},MAT.MAT_v5.##2#4}, ::Int64, ::Int64) at ./array.jl:399
 in collect(::Base.Generator{Array{Base.AbstractIOBuffer{Array{UInt8,1}},1},MAT.MAT_v5.##2#4}) at ./array.jl:367
 in read_string(::IOStream, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:282
 in read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:322
 in read(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:389
 in check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:9
 in macro expansion; at /home/vagrant/.julia/v0.6/MAT/test/read.jl:87 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in read_string(::IOStream, ::Bool, ::Array{Int32,1}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:280
 in read_matrix(::IOStream, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:322
 in read(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:389
 in check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:9
 in macro expansion; at /home/vagrant/.julia/v0.6/MAT/test/read.jl:87 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
Error During Test
  Test threw an exception of type UndefVarError
  Expression: exists(matfile,k)
  UndefVarError: source not defined
   in macro expansion at /home/vagrant/.julia/v0.6/Libz/src/state.jl:36 [inlined]
   in readbytes!(::Libz.Source{:inflate,BufferedStreams.BufferedInputStream{IOStream}}, ::Array{UInt8,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/Libz/src/source.jl:131
   in fillbuffer!(::BufferedStreams.BufferedInputStream{Libz.Source{:inflate,BufferedStreams.BufferedInputStream{IOStream}}}) at /home/vagrant/.julia/v0.6/BufferedStreams/src/bufferedinputstream.jl:76
   in ensurebuffered! at /home/vagrant/.julia/v0.6/BufferedStreams/src/bufferedinputstream.jl:353 [inlined]
   in read at /home/vagrant/.julia/v0.6/BufferedStreams/src/bufferedinputstream.jl:169 [inlined]
   in read_bswap(::BufferedStreams.BufferedInputStream{Libz.Source{:inflate,BufferedStreams.BufferedInputStream{IOStream}}}, ::Bool, ::Type{UInt32}) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:80
   in read_header(::BufferedStreams.BufferedInputStream{Libz.Source{:inflate,BufferedStreams.BufferedInputStream{IOStream}}}, ::Bool) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:98
   in getvarnames(::MAT.MAT_v5.Matlabv5File) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:360
   in exists(::MAT.MAT_v5.Matlabv5File, ::String) at /home/vagrant/.julia/v0.6/MAT/src/MAT_v5.jl:377
   in check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:8
   in macro expansion; at /home/vagrant/.julia/v0.6/MAT/test/read.jl:65 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:292
   in _start() at ./client.jl:356
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:400
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:283
 in check(::String, ::Dict{String,Any}) at /home/vagrant/.julia/v0.6/MAT/test/read.jl:8
 in macro expansion; at /home/vagrant/.julia/v0.6/MAT/test/read.jl:65 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/MAT/test/read.jl, in expression starting on line 49
while loading /home/vagrant/.julia/v0.6/MAT/test/runtests.jl, in expression starting on line 1
=================================[ ERROR: MAT ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MAT/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: MAT had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356

>>> End of log
