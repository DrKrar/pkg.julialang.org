>>> 'Pkg.add("Brim")' log
INFO: Cloning cache of Brim from https://github.com/PoisotLab/Brim.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Brim v1.2.2
INFO: Installing Cairo v0.2.35
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing DataArrays v0.3.10
INFO: Installing DataFrames v0.8.5
INFO: Installing FileIO v0.2.0
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing GZip v0.2.20
INFO: Installing Graphics v0.1.3
INFO: Installing Hiccup v0.0.3
INFO: Installing Juno v0.2.5
INFO: Installing Lazy v0.11.4
INFO: Installing MacroTools v0.3.2
INFO: Installing Media v0.2.4
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.0
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Installing URIParser v0.1.6
INFO: Building Cairo
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Cairo/deps/build.jl, in expression starting on line 154
INFO: Package database updated

>>> 'Pkg.test("Brim")' log
Julia Version 0.6.0-dev.1307
Commit 03c2464 (2016-11-24 20:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (934.734375 MB free)
Uptime: 7037.0 sec
Load Avg:  0.9970703125  0.9853515625  0.99853515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     392002 s        176 s      43285 s     194139 s         12 s
#2  3499 MHz     125762 s       6418 s      24660 s     529124 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Brim                          1.2.2
 - JSON                          0.8.0
21 additional packages:
 - BinDeps                       0.4.5
 - Cairo                         0.2.35
 - ColorTypes                    0.2.12
 - Colors                        0.6.9
 - Compat                        0.9.4
 - DataArrays                    0.3.10
 - DataFrames                    0.8.5
 - FileIO                        0.2.0
 - FixedPointNumbers             0.2.1
 - GZip                          0.2.20
 - Graphics                      0.1.3
 - Hiccup                        0.0.3
 - Juno                          0.2.5
 - Lazy                          0.11.4
 - MacroTools                    0.3.2
 - Media                         0.2.4
 - Reexport                      0.0.3
 - SHA                           0.3.0
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - URIParser                     0.1.6
INFO: Testing Brim
Error During Test
  Test threw an exception of type MethodError
  Expression: ((eye(Int64,50) |> partition_random) |> recursive_brim!) |> Q >= 0.9
  MethodError: Cannot `convert` an object of type Array{Int64,2} to an object of type UnitRange{Int64}
  This may have arisen from a call to the constructor UnitRange{Int64}(...),
  since type constructors fall back to convert methods.
   in copy!(::Array{UnitRange{Int64},2}, ::Base.Generator{Base.Iterators.Prod2{Base.OneTo{Int64},Array{UnitRange{Int64},1}},Base.##213#214}) at ./abstractarray.jl:478
   in _collect(::Type{UnitRange{Int64}}, ::Base.Generator{Base.Iterators.Prod2{Base.OneTo{Int64},Array{UnitRange{Int64},1}},Base.##213#214}, ::Base.HasShape) at ./array.jl:298
   in ctranspose(::Array{UnitRange{Int64},1}) at ./arraymath.jl:490
   in no_empty_modules!(::Brim.Modular) at /home/vagrant/.julia/v0.6/Brim/src/./common.jl:7
   in partition_random(::Array{Int64,2}) at /home/vagrant/.julia/v0.6/Brim/src/./partition_random.jl:21
   in |>(::Array{Int64,2}, ::Brim.#partition_random) at ./operators.jl:703
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/Brim/test/runtests.jl:17 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
[1m[31mFAILED[0m	recursive_brim.jl
LoadError: There was an error during testing
 in macro expansion; at /home/vagrant/.julia/v0.6/Brim/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Brim/test/recursive_brim.jl, in expression starting on line 5
[1m[31mFAILED[0m	no_empty_modules.jl
LoadError: MethodError: Cannot `convert` an object of type Array{Int64,2} to an object of type UnitRange{Int64}
This may have arisen from a call to the constructor UnitRange{Int64}(...),
since type constructors fall back to convert methods.
 in macro expansion; at /home/vagrant/.julia/v0.6/Brim/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Brim/test/no_empty_modules.jl, in expression starting on line 9
[1m[31mFAILED[0m	reorder_by_module.jl
LoadError: MethodError: Cannot `convert` an object of type Array{Int64,2} to an object of type UnitRange{Int64}
This may have arisen from a call to the constructor UnitRange{Int64}(...),
since type constructors fall back to convert methods.
 in macro expansion; at /home/vagrant/.julia/v0.6/Brim/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Brim/test/reorder_by_module.jl, in expression starting on line 11
[1m[31mFAILED[0m	network_roles.jl
LoadError: ArgumentError: invalid index: Array{UnitRange{Int64},1}[UnitRange{Int64}[4:7]]
 in macro expansion; at /home/vagrant/.julia/v0.6/Brim/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Brim/test/network_roles.jl, in expression starting on line 8
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Int64,2}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/Brim/test/runtests.jl:17 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Brim/test/partition_single.jl, in expression starting on line 11
[1m[32mPASSED[0m	partition_single.jl
[1m[31mFAILED[0m	partition_lp.jl
LoadError: MethodError: Cannot `convert` an object of type Array{Int64,2} to an object of type UnitRange{Int64}
This may have arisen from a call to the constructor UnitRange{Int64}(...),
since type constructors fall back to convert methods.
 in macro expansion; at /home/vagrant/.julia/v0.6/Brim/test/runtests.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Brim/test/partition_lp.jl, in expression starting on line 8
[1m[32mPASSED[0m	permutations.jl
[1m[32mPASSED[0m	Qr.jl
ERROR: LoadError: "Tests failed"
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Brim/test/runtests.jl, in expression starting on line 28
================================[ ERROR: Brim ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Brim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Brim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
