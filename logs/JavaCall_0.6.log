>>> 'Pkg.add("JavaCall")' log
INFO: Installing JavaCall v0.4.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JavaCall
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JavaCall")' log
Julia Version 0.6.0-dev.1262
Commit 9f999b7 (2016-11-16 21:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1989.66015625 MB free)
Uptime: 36334.0 sec
Load Avg:  1.03369140625  1.05712890625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    2179024 s       5659 s     191800 s     810142 s        135 s
#2  3499 MHz     841012 s       4585 s     121055 s    2522364 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - JavaCall                      0.4.2
1 additional packages:
 - Compat                        0.9.4
INFO: Testing JavaCall
Loaded /usr/lib/jvm/java-7-oracle/jre/lib/amd64/server/libjvm.so
Julia Version 0.6.0-dev.1262
Commit 9f999b7 (2016-11-16 21:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::DataType, ::Vararg{Any,N}) at ./deprecated.jl:30
 in signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:291
 in method_signature(::Type{T}, ::Type{T}, ::Vararg{Type{T},N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:281
 in jcall(::Type{JavaCall.JavaObject{:Test}}, ::String, ::Type{T}, ::Tuple{DataType}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:128
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 19
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in method_signature(::Type{T}, ::Type{T}, ::Vararg{Type{T},N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:285
 in jcall(::Type{JavaCall.JavaObject{:Test}}, ::String, ::Type{T}, ::Tuple{DataType}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:128
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 19
In Java, recd: 10
In Java, recd: 10
In Java, recd: 10
In Java, recd: 2147483647
In Java, recd: 9223372036854775807
In Java, recd: Hello Java
In Java, recd: 10.02
In Java, recd: 10.02
In Java, recd: 1.7976931348623157E308
In Java, recd: 3.4028235E38
In Java, recd: null
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in method_signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:285
 in jcall(::JavaCall.JavaObject{Symbol("java.net.URL")}, ::String, ::Type{T}, ::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:136
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 43
[GC 12284K->11915K(46080K), 0.0047520 secs]
[GC 24194K->24042K(46080K), 0.0038910 secs]
[Full GC 24042K->24000K(65024K), 0.0099570 secs]
[GC 36286K->36268K(65024K), 0.0029500 secs]
[GC 48553K->39239K(76288K), 0.0019780 secs]
[Full GC 39239K->5251K(65536K), 0.0058410 secs]
[GC 28802K->28759K(65536K), 0.0053000 secs]
[Full GC 28759K->28755K(102400K), 0.0059590 secs]
[GC 52297K->37036K(125440K), 0.0031070 secs]
[GC 72354K->72291K(129024K), 0.0091970 secs]
[Full GC 72291K->43766K(157696K), 0.0171810 secs]
[GC 79076K->78818K(175104K), 0.0083440 secs]
[GC 127952K->77457K(179200K), 0.0046790 secs]
[GC 126607K->82754K(191488K), 0.0069830 secs]
[GC 142140K->98326K(195072K), 0.0097720 secs]
[GC 157712K->79940K(211968K), 0.0059570 secs]
[GC 155710K->91023K(214528K), 0.0055600 secs]
[GC 166781K->79216K(227328K), 0.0033310 secs]
[GC 171887K->107220K(231424K), 0.0071360 secs]
[GC 199878K->74330K(250880K), 0.0019030 secs]
[GC 183370K->74916K(253440K), 0.0016820 secs]
[GC 183963K->96320K(263680K), 0.0092420 secs]
[GC 215599K->107122K(264704K), 0.0084420 secs]
[GC 226418K->74271K(276992K), 0.0009730 secs]
[GC 204306K->116603K(279552K), 0.0112930 secs]
[GC 246645K->94424K(298496K), 0.0100100 secs]
[GC 238791K->86605K(299520K), 0.0039100 secs]
[GC 230974K->99506K(311296K), 0.0091600 secs]
[GC 258221K->105969K(311296K), 0.0111090 secs]
Exception in thread "main" java.lang.NoSuchMethodError: sinx
Exception in thread "main" java.lang.NoSuchMethodError: sinx
INFO: JavaCall tests passed

>>> End of log
