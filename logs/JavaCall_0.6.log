>>> 'Pkg.add("JavaCall")' log
INFO: Installing JavaCall v0.4.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JavaCall
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JavaCall")' log
Julia Version 0.6.0-dev.1565
Commit 0408aa2 (2016-12-15 03:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1977.3984375 MB free)
Uptime: 30685.0 sec
Load Avg:  1.12353515625  1.04296875  1.05126953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1768887 s       5550 s     220994 s     732225 s         65 s
#2  3500 MHz     538586 s         82 s     109977 s    2340746 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - JavaCall                      0.4.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing JavaCall
Loaded /usr/lib/jvm/java-7-oracle/jre/lib/amd64/server/libjvm.so
Julia Version 0.6.0-dev.1565
Commit 0408aa2 (2016-12-15 03:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::DataType, ::Vararg{Any,N}) at ./deprecated.jl:30
 in signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:291
 in method_signature(::Type{T}, ::Type{T}, ::Vararg{Type{T},N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:281
 in jcall(::Type{JavaCall.JavaObject{:Test}}, ::String, ::Type{T}, ::Tuple{DataType}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:128
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 19
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in method_signature(::Type{T}, ::Type{T}, ::Vararg{Type{T},N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:285
 in jcall(::Type{JavaCall.JavaObject{:Test}}, ::String, ::Type{T}, ::Tuple{DataType}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:128
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 19
In Java, recd: 10
In Java, recd: 10
In Java, recd: 10
In Java, recd: 2147483647
In Java, recd: 9223372036854775807
In Java, recd: Hello Java
In Java, recd: 10.02
In Java, recd: 10.02
In Java, recd: 1.7976931348623157E308
In Java, recd: 3.4028235E38
In Java, recd: null
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in method_signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:285
 in jcall(::JavaCall.JavaObject{Symbol("java.net.URL")}, ::String, ::Type{T}, ::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:136
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 43
[GC 12284K->11911K(46080K), 0.0061050 secs]
[GC 24189K->24034K(46080K), 0.0055830 secs]
[Full GC 24034K->24000K(65536K), 0.0153610 secs]
[GC 36286K->36268K(65536K), 0.0038860 secs]
[GC 48553K->38848K(76288K), 0.0023610 secs]
[Full GC 38848K->4860K(65536K), 0.0090860 secs]
[GC 27881K->27840K(66048K), 0.0053620 secs]
[Full GC 27840K->27835K(102912K), 0.0074240 secs]
[GC 51372K->35197K(126976K), 0.0033020 secs]
[GC 70517K->70453K(129024K), 0.0166990 secs]
[Full GC 70453K->42846K(157696K), 0.0164910 secs]
[GC 78162K->76980K(177664K), 0.0098450 secs]
[GC 128687K->78160K(181760K), 0.0061130 secs]
[GC 129872K->86089K(196096K), 0.0084200 secs]
[GC 149047K->63324K(200704K), 0.0021060 secs]
[GC 126300K->61135K(211968K), 0.0024730 secs]
[GC 138447K->94572K(214016K), 0.0095200 secs]
[GC 171884K->88676K(236032K), 0.0079990 secs]
[GC 182372K->73801K(238080K), 0.0028210 secs]
[GC 167497K->79469K(248320K), 0.0043910 secs]
[GC 190573K->81502K(251904K), 0.0060900 secs]
[GC 192606K->104815K(258560K), 0.0105150 secs]
[GC 223087K->77163K(264192K), 0.0021570 secs]
[GC 195435K->87015K(272384K), 0.0078170 secs]
[GC 217575K->86174K(273920K), 0.0083800 secs]
[GC 216734K->108353K(280576K), 0.0140590 secs]
[GC 247617K->97277K(285696K), 0.0082450 secs]
[GC 236541K->104463K(297984K), 0.0076970 secs]
[GC 255503K->102645K(300544K), 0.0089930 secs]
Exception in thread "main" java.lang.NoSuchMethodError: sinx
Exception in thread "main" java.lang.NoSuchMethodError: sinx
INFO: JavaCall tests passed

>>> End of log
