>>> 'Pkg.add("JavaCall")' log
INFO: Installing JavaCall v0.4.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JavaCall
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JavaCall")' log
Julia Version 0.6.0-dev.1583
Commit 2d8f5bf (2016-12-16 01:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1981.67578125 MB free)
Uptime: 32028.0 sec
Load Avg:  1.1025390625  1.0302734375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1765936 s       3089 s     248750 s     850862 s         92 s
#2  3500 MHz     629527 s       3516 s     130869 s    2321797 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - JavaCall                      0.4.2
1 additional packages:
 - Compat                        0.9.5
INFO: Testing JavaCall
Loaded /usr/lib/jvm/java-7-oracle/jre/lib/amd64/server/libjvm.so
Julia Version 0.6.0-dev.1583
Commit 2d8f5bf (2016-12-16 01:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::DataType, ::Vararg{Any,N}) at ./deprecated.jl:30
 in signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:291
 in method_signature(::Type{T}, ::Type{T}, ::Vararg{Type{T},N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:281
 in jcall(::Type{JavaCall.JavaObject{:Test}}, ::String, ::Type{T}, ::Tuple{DataType}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:128
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 19
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in method_signature(::Type{T}, ::Type{T}, ::Vararg{Type{T},N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:285
 in jcall(::Type{JavaCall.JavaObject{:Test}}, ::String, ::Type{T}, ::Tuple{DataType}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:128
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 19
In Java, recd: 10
In Java, recd: 10
In Java, recd: 10
In Java, recd: 2147483647
In Java, recd: 9223372036854775807
In Java, recd: Hello Java
In Java, recd: 10.02
In Java, recd: 10.02
In Java, recd: 1.7976931348623157E308
In Java, recd: 3.4028235E38
In Java, recd: null
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in method_signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:285
 in jcall(::JavaCall.JavaObject{Symbol("java.net.URL")}, ::String, ::Type{T}, ::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:136
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/JavaCall/test/runtests.jl, in expression starting on line 43
[GC 12284K->11914K(46080K), 0.0058760 secs]
[GC 24193K->24062K(46080K), 0.0061580 secs]
[Full GC 24062K->24000K(65024K), 0.0134180 secs]
[GC 36286K->36268K(65024K), 0.0046850 secs]
[GC 48553K->39004K(76288K), 0.0031900 secs]
[Full GC 39004K->5036K(65536K), 0.0073930 secs]
[GC 28586K->28544K(65536K), 0.0071640 secs]
[Full GC 28544K->28540K(101888K), 0.0065450 secs]
[GC 52082K->36606K(125952K), 0.0037300 secs]
[GC 72440K->28650K(129024K), 0.0009690 secs]
[GC 64475K->64394K(141824K), 0.0096950 secs]
[GC 113025K->67118K(145408K), 0.0058280 secs]
[GC 115740K->71888K(157696K), 0.0078080 secs]
[GC 129229K->85759K(161792K), 0.0087700 secs]
[Full GC 85759K->38149K(179200K), 0.0160810 secs]
[GC 95478K->45843K(195584K), 0.0032430 secs]
[GC 117522K->52861K(197120K), 0.0043670 secs]
[GC 124521K->80669K(207360K), 0.0130480 secs]
[GC 163091K->66016K(212480K), 0.0072520 secs]
[GC 148441K->60816K(222720K), 0.0041480 secs]
[GC 160138K->51727K(226304K), 0.0028800 secs]
[GC 151049K->63396K(231936K), 0.0033480 secs]
[GC 172951K->64530K(235008K), 0.0058780 secs]
[GC 174082K->86396K(240128K), 0.0104430 secs]
[GC 202100K->56164K(245248K), 0.0011990 secs]
[GC 171875K->84226K(252416K), 0.0133130 secs]
[GC 207092K->98613K(256000K), 0.0086200 secs]
[GC 221476K->72837K(269312K), 0.0041850 secs]
[GC 207993K->76551K(272896K), 0.0060170 secs]
[GC 211704K->59487K(279552K), 0.0040180 secs]
Exception in thread "main" java.lang.NoSuchMethodError: sinx
Exception in thread "main" java.lang.NoSuchMethodError: sinx
INFO: JavaCall tests passed

>>> End of log
