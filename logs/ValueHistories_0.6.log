>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.4.6
INFO: Installing RecipesBase v0.1.0
INFO: Installing ValueHistories v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ValueHistories
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.6.0-dev.1701
Commit d8a5718 (2016-12-26 06:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (721.75 MB free)
Uptime: 31803.0 sec
Load Avg:  1.2060546875  1.10888671875  1.0732421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1752426 s         28 s     204837 s     856751 s        123 s
#2  3500 MHz     516434 s        156 s      97136 s    2466172 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ValueHistories                0.1.0
3 additional packages:
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - RecipesBase                   0.1.0
INFO: Testing ValueHistories
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::DataStructures.DequeBlock{Tuple{Int64,Float64}}, ::Vararg{DataStructures.DequeBlock{Tuple{Int64,Float64}},N}) at ./deprecated.jl:30
 in next(::DataStructures.DequeIterator{Tuple{Int64,Float64}}, ::Tuple{DataStructures.DequeBlock{Tuple{Int64,Float64}},Int64}) at /home/vagrant/.julia/v0.6/DataStructures/src/deque.jl:124
 in next(::DataStructures.Deque{Tuple{Int64,Float64}}, ::Tuple{DataStructures.DequeBlock{Tuple{Int64,Float64}},Int64}) at /home/vagrant/.julia/v0.6/DataStructures/src/deque.jl:164
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/tst_history.jl:36 [inlined]
 in macro expansion; at ./test.jl:714 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/tst_history.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:714 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/runtests.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/ValueHistories/test/tst_history.jl, in expression starting on line 1
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::DataStructures.DequeBlock{Tuple{Int64,Float64}}, ::Vararg{DataStructures.DequeBlock{Tuple{Int64,Float64}},N}) at ./deprecated.jl:30
 in next(::DataStructures.DequeIterator{Tuple{Int64,Float64}}, ::Tuple{DataStructures.DequeBlock{Tuple{Int64,Float64}},Int64}) at /home/vagrant/.julia/v0.6/DataStructures/src/deque.jl:124
 in get(::ValueHistories.QHistory{Int64,Float64}) at /home/vagrant/.julia/v0.6/ValueHistories/src/qhistory.jl:49
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/tst_history.jl:41 [inlined]
 in macro expansion; at ./test.jl:714 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/tst_history.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:714 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/ValueHistories/test/runtests.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/ValueHistories/test/tst_history.jl, in expression starting on line 1
QHistory
    types: UInt8, String
    length: 100
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
   --> Baseline: 100 loops that accumulates a Float64
  0.007609 seconds (1.64 k allocations: 82.756 KB)
  0.000008 seconds (5 allocations: 176 bytes)
   --> History: 100 loops tracking accumulator as Float64
  0.017805 seconds (1.65 k allocations: 85.437 KB)
  0.000186 seconds (13 allocations: 4.391 KB)
   --> History: Converting result into arrays
  0.000027 seconds (3 allocations: 96 bytes)
  0.000012 seconds (3 allocations: 96 bytes)
   --> QHistory: 100 loops tracking accumulator as Float64
  0.009379 seconds (1.66 k allocations: 82.624 KB)
  0.000007 seconds (1 allocation: 16 bytes)
   --> QHistory: Converting result into arrays
  0.000896 seconds (1.18 k allocations: 40.984 KB)
  0.000716 seconds (1.18 k allocations: 40.984 KB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
  0.011419 seconds (2.49 k allocations: 125.154 KB)
  0.000125 seconds (633 allocations: 32.703 KB)
   --> MVHistory: Converting result into arrays
  0.013083 seconds (2.73 k allocations: 129.687 KB)
  0.000294 seconds (418 allocations: 14.953 KB)
INFO: ValueHistories tests passed

>>> End of log
