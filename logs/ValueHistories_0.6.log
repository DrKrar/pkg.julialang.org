>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.4.6
INFO: Installing RecipesBase v0.1.0
INFO: Installing ValueHistories v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ValueHistories
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.6.0-dev.993
Commit d6d3069 (2016-10-16 23:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (486.96484375 MB free)
Uptime: 44960.0 sec
Load Avg:  1.0458984375  0.72705078125  0.4150390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     997892 s       4402 s     155114 s    3158980 s         39 s
#2  3500 MHz     253658 s        370 s      56580 s    4138724 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ValueHistories                0.1.0
3 additional packages:
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - RecipesBase                   0.1.0
INFO: Testing ValueHistories
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
QHistory
    types: UInt8, String
    length: 100
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
   --> Baseline: 100 loops that accumulates a Float64
  0.003093 seconds (1.53 k allocations: 75.553 KB)
  0.000003 seconds (5 allocations: 176 bytes)
   --> History: 100 loops tracking accumulator as Float64
  0.005497 seconds (1.53 k allocations: 77.905 KB)
  0.000037 seconds (13 allocations: 4.391 KB)
   --> History: Converting result into arrays
  0.000139 seconds (3 allocations: 96 bytes)
  0.000034 seconds (3 allocations: 96 bytes)
   --> QHistory: 100 loops tracking accumulator as Float64
  0.005490 seconds (1.54 k allocations: 75.030 KB)
  0.000006 seconds (1 allocation: 16 bytes)
   --> QHistory: Converting result into arrays
  0.000340 seconds (1.11 k allocations: 30.016 KB)
  0.000345 seconds (1.11 k allocations: 30.016 KB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
  0.007256 seconds (2.35 k allocations: 115.982 KB)
  0.000064 seconds (633 allocations: 32.703 KB)
   --> MVHistory: Converting result into arrays
  0.006694 seconds (2.66 k allocations: 124.702 KB)
  0.000220 seconds (417 allocations: 14.938 KB)
INFO: ValueHistories tests passed

>>> End of log
