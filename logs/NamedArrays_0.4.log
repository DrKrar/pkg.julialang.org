>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (845.890625 MB free)
Uptime: 7037.0 sec
Load Avg:  1.07568359375  0.9658203125  1.033203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     319056 s       8674 s      31182 s     274182 s         14 s
#2  3500 MHz     207666 s       4888 s      28701 s     434676 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.31269572303174153	.4223204841573527	.0990273590934807	.47356862005490785
two	.5536837048090237	.804368878979357	.38299940527457044	.35754004944574436
a	95
b	57
c	21
d	32
e	12
f	70
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.694508   0.793735    0.32888
b           │  0.604587   0.461161  0.0165923 0.6945076539611401 0.6945076539611401
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.694508   0.793735    0.32888
b     │  0.604587   0.461161  0.0165923
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.694508   0.793735    0.32888
b           │  0.604587   0.461161  0.0165923
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.694508   0.793735    0.32888
b     │  0.604587   0.461161  0.0165923
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.658792  0.519003  0.650033  0.609485
er              │ 0.439513  0.826044  0.440185  0.741434
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140220541383776
0-element Named Array{Any,1}

[0.2984102217949185 0.8104777871793691 0.6256989456085338 0.9416713087442774
 0.391180369614748 0.29763829952298426 0.8137803168777078 0.3019280697297202]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.29841  0.810478  0.625699  0.941671
two   │  0.39118  0.297638   0.81378  0.3019282x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.29841  0.810478  0.625699  0.941671
two   │  0.39118  0.297638   0.81378  0.3019282x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     0.19963      1.55779  …    0.0104939     -0.11168
2     │    0.445127     0.502157  …     0.435404     -1.770031000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.173892    0.771322
2     │  -0.346637    0.965219
3     │    2.28493    0.791179
4     │ 0.00178893    0.389898
5     │  -0.497031   -0.195638
6     │  -0.471904    0.381675
7     │     0.2555     2.80747
8     │   -0.28227   -0.147195
9     │   0.863069    0.659172
⋮                ⋮           ⋮
992   │     1.8205    0.752945
993   │ -0.0396574    -1.30863
994   │    3.06959     2.90796
995   │  -0.722332    0.893508
996   │   0.153355    -2.01429
997   │   -1.66742     1.70083
998   │   -2.05832    -1.12649
999   │   0.949829    0.497586
1000  │   0.571482     -0.06851000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.227471
2    │  -0.617104
3    │ -0.0686981
4    │  -0.813315
5    │    1.29157
6    │  -0.602561
7    │   0.311242
8    │  -0.583359
9    │    0.94698
⋮               ⋮
992  │   0.109486
993  │  -0.418622
994  │   -1.62342
995  │    1.21196
996  │   -1.64121
997  │    1.02497
998  │    1.00147
999  │  -0.246629
1000 │    1.069482x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.213941  0.292892
1           │ 0.896377  0.451687

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.607411  0.652433
1           │ 0.653223  0.326274
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.415523
2  │ 0.160329
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.371947  0.750831
2     │ 0.368004  0.833087
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.305864  0.929944
2     │  0.40898  0.296729

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.94824  0.713538
2     │ 0.741296   0.21655
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.799963  0.342108
2     │ 0.526679  0.443304

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0823492   0.790891
2     │  0.216253   0.606924

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.817129  0.458739
2     │ 0.120155  0.330446

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.670852  0.862207
2     │ 0.452396  0.197038
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.396333  0.921667
2     │ 0.792705  0.420437

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.181659  0.0205418
2     │ 0.0820669   0.141045

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.230223  0.695303
2     │ 0.131238  0.374185
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.981411  0.954336

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.383328  0.852366
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.842274
2     │ 0.113471

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.953573
2     │ 0.635392
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.964289  0.00880316
2     │   0.286633    0.370119
1000×1000 Named sparse matrix with 115 Float64 nonzero entries:
	[10923390679270416228,  4913249781191789579]  =  0.4073838301357722
	[4462405504440477154 , 10361072080411987344]  =  0.21657919703664552
	[13975069277216705747, 17676219393380616284]  =  0.09392487058831667
	[11421859071148106276,  4981387750669837953]  =  0.44501458602419697
	[11080872162023102847, 18168544338330653462]  =  0.7825260192673709
	[15353358267758329479,  8725235013359650451]  =  0.03024621716230058
	[14464695094339742775,  4329451781928897369]  =  0.2827075275826312
	[5477100648039519996 , 17609421066205025733]  =  0.535573699168769
	                                              ⋮
	[18332040070485059392, 11993454575275700781]  =  0.022353012171983933
	[11355399569336610079,  1523061068178304284]  =  0.5979703509291372
	[14024883472771630530,  9223427034658990711]  =  0.04385735263033097
	[4805073549399112256 ,  9223427034658990711]  =  0.12748840072170853
	[12989059827452924244,  5122894113285174381]  =  0.24094907320132575
	[6330913940894778354 ,  4047135350800189603]  =  0.06674529358122538
	[7356293762799192678 , 15240003619098155971]  =  0.10755011113816804
	[15578960726498056365, 15240003619098155971]  =  0.055991136309463174
	[15465980046630820984,  2588469222286953884]  =  0.3255534483933116Timing named index: 0.001155553, array index: 0.00077549, named key: 0.131688628
Timing sum large sparse array: 0.010049204, named: 0.01980401
done!
INFO: NamedArrays tests passed

>>> End of log
