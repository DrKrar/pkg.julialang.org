>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (843.45703125 MB free)
Uptime: 7401.0 sec
Load Avg:  1.07958984375  0.986328125  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     324698 s       6509 s      32152 s     298146 s         18 s
#2  3499 MHz     224362 s        422 s      29505 s     460425 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.34569914651970146	.7432144776725749	.058909546178481875	.19832091417757125
two	.6655124130375707	.18281646203179225	.8623816187283657	.5855565582539497
a	52
b	93
c	81
d	86
e	93
f	7
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.983191   0.433283  0.0477291
b           │  0.544677   0.807967   0.602694 0.9831910570622562 0.9831910570622562
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.983191   0.433283  0.0477291
b     │  0.544677   0.807967   0.602694
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.983191   0.433283  0.0477291
b           │  0.544677   0.807967   0.602694
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.983191   0.433283  0.0477291
b     │  0.544677   0.807967   0.602694
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.423354  0.455544  0.209773  0.472687
er              │ 0.869708  0.657492  0.329702   0.94641
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139953476028256
0-element Named Array{Any,1}

[0.9830114493523003 0.30847399573473955 0.5790905287517321 0.8186892040438709
 0.7411517956923686 0.36164676279868146 0.48053732220268297 0.7614066263038484]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.983011  0.308474  0.579091  0.818689
two   │ 0.741152  0.361647  0.480537  0.7614072x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.983011  0.308474  0.579091  0.818689
two   │ 0.741152  0.361647  0.480537  0.7614072x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.81459      0.658894  …     -0.582438       1.27939
2     │     -1.01353      0.774209  …     -0.295594     -0.5086231000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.644865     1.33808
2     │  -0.113053  -0.0933904
3     │  -0.798583  -0.0524397
4     │  -0.671008     1.72646
5     │   -1.11267    -1.50953
6     │    0.84286    -0.44916
7     │   -1.84396     2.40619
8     │  -0.519381    0.481702
9     │    1.35722    0.685756
⋮                ⋮           ⋮
992   │    0.69737   -0.420845
993   │  -0.731924    0.487631
994   │   0.664206     2.53213
995   │   -1.29695   -0.875452
996   │  -0.416651    0.026924
997   │   0.274145  -0.0995952
998   │   -1.52624    0.580451
999   │   0.802606     0.13611
1000  │  -0.077258   -0.2299761000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   -0.8716
2    │ -0.545109
3    │  -1.55098
4    │   0.87124
5    │ -0.519727
6    │   1.42817
7    │ -0.531966
8    │ -0.215719
9    │  -1.80175
⋮              ⋮
992  │ -0.944146
993  │ 0.0257839
994  │  0.881149
995  │ -0.963432
996  │  0.418697
997  │  -1.71229
998  │  0.121269
999  │  -0.27787
1000 │  0.4653572x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0825997   0.230545
1           │  0.735913   0.857936

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.823066  0.583553
1           │ 0.673534  0.240143
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.697677
2  │ 0.727336
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.48085   0.768868
2     │ 0.0302491   0.448253
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.292462  0.422361
2     │   0.6749   0.77386

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.433267  0.606003
2     │ 0.229748  0.434406
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.78353  0.757029
2     │ 0.481205  0.617563

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.27374  0.655516
2     │ 0.484563  0.804129

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0503958   0.355319
2     │  0.838672    0.90613

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.218384   0.592104
2     │ 0.0584556  0.0120253
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.265518  0.460272
2     │ 0.464777   0.59201

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.68459  0.166694
2     │  0.53841  0.238203

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.873517  0.134693
2     │ 0.160963  0.501869
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.865808  0.0312661

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.627392  0.745625
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.873517
2     │ 0.924246

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.792103
2     │ 0.709156
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.657169  0.859855
2     │ 0.875467  0.342919
1000×1000 Named sparse matrix with 101 Float64 nonzero entries:
	[15507769097532104225, 16544335554558850098]  =  0.4297543343654775
	[8215529161129330866 , 17822619313291261357]  =  0.04988961982680706
	[10361072080411987344,  8069307267129313135]  =  0.30456338439857156
	[11681839584861684795, 10601912832305821454]  =  0.503869632038707
	[3753583410179171704 ,  8629498292780771804]  =  0.9238550438542321
	[11791379751769019020, 12295598998729798629]  =  0.2963849146234361
	[2876475700534992100 ,   273396578563598247]  =  0.8346919389905569
	[7957587899775749890 ,  7425701996526302553]  =  0.8562127395030306
	                                              ⋮
	[8720304024814141479 ,  2107242561845671563]  =  0.2532896279963541
	[18301367769706361526, 12554874066387155728]  =  0.7110137879824758
	[5337699408644063394 ,   372001016642560619]  =  0.953406436669717
	[2713027948549010671 , 11470862121108514714]  =  0.04578499637103861
	[5078555050773131864 , 12624682912995533025]  =  0.7893734696572923
	[11202982330472117227, 12624682912995533025]  =  0.2561187774819289
	[17925559038321074944,  3279378535085980212]  =  0.22791330271592258
	[6738482027934271349 ,  7957587899775749890]  =  0.001962824342490288
	[4509385789584299296 ,  3010300210541878305]  =  0.2994778977288328Timing named index: 0.000845667, array index: 0.000693783, named key: 0.133233919
Timing sum large sparse array: 0.010500576, named: 0.027992089
done!
INFO: NamedArrays tests passed

>>> End of log
