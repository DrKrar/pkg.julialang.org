>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (853.10546875 MB free)
Uptime: 7256.0 sec
Load Avg:  1.0029296875  0.98876953125  1.02294921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     328571 s       2684 s      30148 s     294344 s         13 s
#2  3500 MHz     211000 s       3911 s      26616 s     456903 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6701227749152987	.18384510109507568	.5874724713966637	.20323461873781445
two	.7018222419827893	.5597705922862204	.6330690237132257	.2407507410168277
a	69
b	58
c	87
d	55
e	80
f	20
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.958171   0.827039   0.412062
b           │  0.438078   0.263057  0.0393219 0.958170949735786 0.958170949735786
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.958171   0.827039   0.412062
b     │  0.438078   0.263057  0.0393219
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.958171   0.827039   0.412062
b           │  0.438078   0.263057  0.0393219
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.958171   0.827039   0.412062
b     │  0.438078   0.263057  0.0393219
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.636169    0.85587  0.0989601   0.433408
er              │   0.81654   0.963632    0.60961   0.380819
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139777297171792
0-element Named Array{Any,1}

[0.0363921195687793 0.8957016494964147 0.015591406968791466 0.1692487060187684
 0.35824235868793286 0.7471492310138759 0.6952736098430803 0.5041252080013623]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0363921   0.895702  0.0155914   0.169249
two   │  0.358242   0.747149   0.695274   0.5041252x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0363921   0.895702  0.0155914   0.169249
two   │  0.358242   0.747149   0.695274   0.5041252x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.774389      0.864894  …      0.177509     -0.754451
2     │      1.01293     -0.718844  …       1.78222       1.041581000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.33455   -0.495683
2     │    1.46858   -0.676041
3     │  0.0404213   -0.439778
4     │   -2.04976   -0.562904
5     │    -1.6683     0.89202
6     │   0.247378  -0.0214324
7     │   0.498313     0.93411
8     │  0.0480581    0.683875
9     │   0.399029      1.8127
⋮                ⋮           ⋮
992   │  -0.897075     1.04713
993   │  -0.677151    -1.01744
994   │   0.141978   -0.631711
995   │  -0.163041  -0.0925017
996   │   -0.95357   -0.582152
997   │   -1.51528   -0.594523
998   │   -1.49535    -1.18923
999   │  -0.762585   -0.132278
1000  │    1.16336   -0.1547031000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.274489
2    │   0.912645
3    │   -1.82681
4    │ -0.0168545
5    │   0.072509
6    │   0.563627
7    │  -0.750574
8    │    1.79512
9    │   -1.39426
⋮               ⋮
992  │  -0.864959
993  │    1.08597
994  │  -0.421588
995  │   -1.67095
996  │ -0.0179491
997  │   0.332129
998  │    1.21469
999  │  -0.707417
1000 │   0.4246992x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.563821  0.735909
1           │ 0.121763  0.377093

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.870192   0.806002
1           │ 0.0810225   0.652466
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.803176
2  │ 0.385702
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.999351  0.753094
2     │ 0.265596  0.665853
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.149472  0.903932
2     │ 0.189955  0.747229

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.250353  0.947783
2     │ 0.593808  0.275847
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.442166  0.115146
2     │ 0.965789  0.274866

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.298345   0.19897
2     │ 0.713331  0.013458

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.977517  0.248501
2     │ 0.759616  0.941337

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.586212   0.151098
2     │  0.330785  0.0216752
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.820732  0.265137
2     │  0.99905  0.942929

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.666839  0.892838
2     │ 0.229647  0.179641

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.613856   0.765615
2     │  0.871893  0.0986008
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.298804    0.8477

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.498575  0.991894
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.426306
2     │ 0.141158

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.847891
2     │ 0.0915421
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.106537  0.731465
2     │ 0.365619  0.815112
1000×1000 Named sparse matrix with 90 Float64 nonzero entries:
	[8340722336334766600 ,  8699333159457747740]  =  0.22282197623667077
	[12275651637820548197,  8058121953372963805]  =  0.1290025820153482
	[2539844710871411659 , 14033074738777421392]  =  0.24987705896847312
	[16840404209865735426, 14033074738777421392]  =  0.3711012167932213
	[550917644622608724  ,  4247719799217886270]  =  0.847547801929698
	[493461921061351564  , 11496001657944805140]  =  0.4150814195250785
	[8689110468086252001 ,  5723128691850249417]  =  0.4477876169257642
	[3945256368785098242 , 11907679469289587679]  =  0.38149796281065806
	                                              ⋮
	[6541875071455544977 , 10361974346531339474]  =  0.8375388618620954
	[3654557576772801522 ,  2520040687452014961]  =  0.07483911871039872
	[8809575672816075910 , 18148906667482527649]  =  0.9926431734531616
	[16203939900270689774,  5597731276780160114]  =  0.8647984156147808
	[11022261278769353274, 11314283927973801071]  =  0.3310573840203652
	[8586548853081112102 ,  1861743268047760089]  =  0.3663371957515664
	[5362270516586366302 , 11527542315164007414]  =  0.14148841162364145
	[281356413667926651  ,  3010300210541878305]  =  0.2613529399346666
	[1082045492561856594 , 13950575499123628905]  =  0.6907908624823709Timing named index: 0.000729494, array index: 0.000834929, named key: 0.131429949
Timing sum large sparse array: 0.010916435, named: 0.023330324
done!
INFO: NamedArrays tests passed

>>> End of log
