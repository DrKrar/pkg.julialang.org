>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (866.875 MB free)
Uptime: 7977.0 sec
Load Avg:  0.9482421875  0.95947265625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     353794 s       7502 s      31856 s     319043 s         34 s
#2  3502 MHz     226574 s       8838 s      27936 s     505908 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.1975007789655372	.9001696232003196	.02620894426165221	.4217086445776259
two	.36266708612120757	.4952159875338944	.9841145718193909	.7849400511906213
a	23
b	86
c	38
d	81
e	66
f	55
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.17493  0.854478  0.112305
b           │ 0.270069  0.557272   0.29227 0.17493046740981133 0.17493046740981133
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.17493  0.854478  0.112305
b     │ 0.270069  0.557272   0.29227
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.17493  0.854478  0.112305
b           │ 0.270069  0.557272   0.29227
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.17493  0.854478  0.112305
b     │ 0.270069  0.557272   0.29227
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.758213   0.973444   0.562508   0.243164
er              │ 0.0135256   0.279432   0.192695   0.681331
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140686692612000
0-element Named Array{Any,1}

[0.4804630864505963 0.9083201504072234 0.4413860272253298 0.3642614961839441
 0.18563796136180644 0.4647757214426036 0.1410071110844393 0.32846553120224886]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.480463   0.90832  0.441386  0.364261
two   │ 0.185638  0.464776  0.141007  0.3284662x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.480463   0.90832  0.441386  0.364261
two   │ 0.185638  0.464776  0.141007  0.3284662x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.61415   -0.0235845  …     0.309168    -0.407351
2     │     1.80473      0.47915  …    0.0484808    -0.2417421000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.30598     1.69847
2     │   0.936888     1.72111
3     │   -1.74206    0.969798
4     │   0.328977   -0.821296
5     │    0.26992     1.58261
6     │  -0.873198    -0.55475
7     │   0.709552   -0.173918
8     │    1.87399   0.0261093
9     │  0.0577627  -0.0514691
⋮                ⋮           ⋮
992   │  -0.764455   -0.135128
993   │    1.88258   -0.676711
994   │   0.842769     -1.8267
995   │   0.507625   -0.518531
996   │   0.727471    0.336014
997   │   0.502518   -0.838535
998   │   -1.38968     1.73568
999   │  -0.405888    -1.40101
1000  │  -0.129854     2.013161000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.888636
2    │ -0.238224
3    │   0.17142
4    │ -0.162093
5    │   1.59229
6    │ -0.193568
7    │ -0.596303
8    │ 0.0544529
9    │   1.28724
⋮              ⋮
992  │  0.128703
993  │  0.777775
994  │ -0.643019
995  │ -0.121995
996  │ -0.587226
997  │  -1.32022
998  │  0.594399
999  │    1.6692
1000 │   1.022572x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.903967  0.868142
1           │ 0.776259  0.248775

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.575318  0.0763194
1           │  0.957611   0.905338
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.863989
2  │ 0.550827
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.404186  0.963753
2     │  0.92534  0.613889
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.850703   0.77043
2     │  0.51997  0.445422

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.526645   0.849945
2     │ 0.0495721  0.0993542
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.148659   0.599628
2     │ 0.0751286   0.619124

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.649388   0.326257
2     │ 0.0675133   0.381411

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.758481    0.93465
2     │ 0.0125613   0.829931

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.529928  0.295907
2     │  0.51775  0.813051
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0579367   0.964767
2     │  0.238016   0.427701

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.707895  0.174525
2     │ 0.374885  0.589967

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0839208   0.920896
2     │   0.52989   0.871523
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.735333  0.393568

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.877248  0.0919215
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.812893
2     │  0.53826

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.374036
2     │ 0.377624
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.233595  0.132834
2     │ 0.479174  0.869169
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[884566183635389889  ,  5647414292592918739]  =  0.05489746847123045
	[12376285854513575894, 12809965746239821631]  =  0.9254872619818717
	[14770838543801714634, 12809965746239821631]  =  0.09662985191291185
	[5452972151941397067 , 11080872162023102847]  =  0.038942034613235865
	[4976045735032000325 ,  9283096199793891681]  =  0.07483089597738779
	[15530322316573698116, 11496001657944805140]  =  0.6617415877229762
	[5237071378972726705 ,   273396578563598247]  =  0.8386643298813075
	[11488343865249833965,  8097707444526576530]  =  0.1613292816749925
	                                              ⋮
	[4934447259055380578 ,  6468689935112619700]  =  0.7014503464842445
	[3654557576772801522 , 12554874066387155728]  =  0.35522620805404426
	[1473175892488538621 , 11551291857879764225]  =  0.1362442554447587
	[11565746237708632912,  5597731276780160114]  =  0.25148931782636375
	[7356293762799192678 , 17737936919457265947]  =  0.04487806303451447
	[7010853231609596680 ,  7989582431359101293]  =  0.617601406984958
	[4185627129864616190 ,  1523061068178304284]  =  0.3045357071839687
	[14835807873575694564,  1523061068178304284]  =  0.9137862290205496
	[4623749630185680030 ,   427459847123490633]  =  0.23636749121580536Timing named index: 0.000615832, array index: 0.000432508, named key: 0.07477489
Timing sum large sparse array: 0.005507627, named: 0.011174574
done!
INFO: NamedArrays tests passed

>>> End of log
