>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (525.35546875 MB free)
Uptime: 8017.0 sec
Load Avg:  1.154296875  1.14208984375  1.07958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     371717 s         44 s      33814 s     321176 s         17 s
#2  3499 MHz     234324 s       6127 s      30226 s     507774 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6075971185195048	.4577599000443191	.4998841129172502	.24185809305268502
two	.8016261773749411	.7304726461954825	.0772685505103814	.5270542451737126
a	24
b	83
c	32
d	96
e	92
f	45
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.197981   0.953268   0.915345
b           │ 0.0746895   0.470972   0.859891 0.1979807236913922 0.1979807236913922
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.197981   0.953268   0.915345
b     │ 0.0746895   0.470972   0.859891
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.197981   0.953268   0.915345
b           │ 0.0746895   0.470972   0.859891
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.197981   0.953268   0.915345
b     │ 0.0746895   0.470972   0.859891
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.146822   0.92871  0.802202  0.195575
er              │ 0.771804  0.785926  0.364116  0.743605
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140325930060240
0-element Named Array{Any,1}

[0.01917685516304024 0.46100547096241984 0.37866642392429295 0.4625455169460926
 0.7286076234196814 0.4936653753673461 0.24068923330858438 0.6975118608731117]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0191769   0.461005   0.378666   0.462546
two   │  0.728608   0.493665   0.240689   0.6975122x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0191769   0.461005   0.378666   0.462546
two   │  0.728608   0.493665   0.240689   0.6975122x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.467932    -0.615221  …      0.86003     -1.01763
2     │     1.69128      1.17091  …     -1.33995     0.4125581000x2 Named Array{Float64,2}
A ╲ B │            1             2
──────┼───────────────────────────
1     │    -0.331479      0.435785
2     │    -0.754167      0.764941
3     │      1.16178      0.872343
4     │     -1.41914     -0.976458
5     │    -0.329808     -0.653187
6     │     -1.20025      0.763199
7     │     0.119087     -0.369686
8     │    -0.523493      0.375881
9     │      1.05453      0.625628
⋮                  ⋮             ⋮
992   │     0.981113      0.064148
993   │    -0.443103      -2.24643
994   │    0.0527849      0.476214
995   │      0.55629      -1.03525
996   │      1.59218       2.88154
997   │     0.450538  -0.000963798
998   │     0.902013     -0.378883
999   │    -0.836569      0.465022
1000  │    0.0776222      0.4673731000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.642327
2    │   2.12062
3    │ -0.356977
4    │ -0.453029
5    │ -0.103723
6    │  0.256577
7    │    2.0901
8    │   2.14995
9    │  0.418184
⋮              ⋮
992  │ 0.0792854
993  │ -0.554274
994  │   1.34635
995  │ -0.395737
996  │ -0.398505
997  │ -0.358271
998  │  0.962574
999  │   1.32046
1000 │   0.988862x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0850725   0.253068
1           │  0.704376   0.539278

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.622691  0.702865
1           │ 0.559605  0.341426
2-element Named Array{Float64,1}
A  │ 
───┼───────────
1  │ 0.00853709
2  │   0.541104
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.141273  0.263907
2     │ 0.163597  0.467616
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.539792  0.988604
2     │ 0.339245   0.25831

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.692202  0.151912
2     │ 0.479365  0.890471
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.823651  0.0657818
2     │  0.847097  0.0406368

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.346769  0.679099
2     │ 0.845984  0.239192

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.562102  0.730461
2     │ 0.280709  0.983277

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.231032  0.264876
2     │ 0.451431  0.815445
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.556815  0.545588
2     │ 0.536759  0.808833

[:, :, C=2, D=1, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.263975    0.451495
2     │   0.829981  0.00202201

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.203631  0.187867
2     │ 0.380127  0.237971
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.984507  0.361444

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.175874   0.31369
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.348472
2     │ 0.349296

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.360769
2     │ 0.959335
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.464952  0.00370024
2     │   0.937838    0.465527
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[16583690740438463922,   397394769374478572]  =  0.8131644881526634
	[14324755336029521502, 13789993170142104254]  =  0.7261151164554596
	[1703847331300677320 , 14066869468942639955]  =  0.32405503560771787
	[8048960545880889629 ,  2849690884155085581]  =  0.9845432047519513
	[16202651256804923129, 17211410618634043162]  =  0.6125335961817091
	[13872873498766619962, 12876006501778729182]  =  0.07243943929352126
	[8803535867071971780 ,  2001767177420584454]  =  0.1827599408216971
	[875267146556840949  , 15987302811816728974]  =  0.9859839701565347
	                                              ⋮
	[3654557576772801522 ,  7528617485284887424]  =  0.3302677920745114
	[3029636859866978704 , 16996133433751471822]  =  0.5494068565173298
	[898568979075944978  , 16267926292325351807]  =  0.17772616522262719
	[5756544042870584356 , 11033897610157224162]  =  0.21370988955614356
	[8499646773720035521 , 18148906667482527649]  =  0.39955296924954764
	[10725201418295586676, 15857670694969494589]  =  0.6608286784667872
	[8809575672816075910 ,  7989582431359101293]  =  0.5625268594969635
	[18320751966872690453,  1861743268047760089]  =  0.5782251858178593
	[14264755834865868473,  2758171916068192631]  =  0.12157969404280711Timing named index: 0.000618565, array index: 0.000314122, named key: 0.071989486
Timing sum large sparse array: 0.006808056, named: 0.013512245
done!
INFO: NamedArrays tests passed

>>> End of log
