>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (877.24609375 MB free)
Uptime: 7357.0 sec
Load Avg:  1.00927734375  0.98681640625  1.03076171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     316930 s        102 s      26652 s     321267 s         20 s
#2  3499 MHz     199438 s         40 s      24107 s     488102 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.141995  0.0797748   0.541216
b           │   0.87237   0.029953   0.427371 0.1419948084428082 0.1419948084428082
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.141995  0.0797748   0.541216
b     │   0.87237   0.029953   0.427371
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.141995  0.0797748   0.541216
b           │   0.87237   0.029953   0.427371
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.141995  0.0797748   0.541216
b     │   0.87237   0.029953   0.427371
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.547646   0.194568  0.0181328   0.473308
two   │  0.613961   0.636762   0.673919   0.638674
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.965622  0.0401185
1           │  0.458787   0.266779

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.783353  0.758212
1           │ 0.824755  0.791814
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.468734
2 │  0.45226
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.15213  0.666136
2     │ 0.848786  0.601082
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.659613   0.751954
2     │ 0.0110477   0.615657

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0643827   0.223984
2     │  0.334972   0.909688
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.54061  0.462255
2     │  0.98964  0.628669

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.102556  0.487131
2     │ 0.186294  0.551855

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.264876  0.946077
2     │ 0.571414  0.612024

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.434893  0.692898
2     │ 0.338603  0.268921
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.383239   0.941162
2     │ 0.0921659   0.662964

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.974304   0.119167
2     │  0.890483  0.0268431

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.176158  0.477474
2     │  0.57881  0.052711

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.610146   0.795701
2     │ 0.0813857   0.922398

[:, :, C=1, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0108312   0.740443
2     │  0.349753   0.917512

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.336541   0.647024
2     │  0.573396  0.0155159

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.274045  0.407978
2     │ 0.713977  0.188542

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.135945   0.38251
2     │  0.89438  0.155057
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.701636   0.16329

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0325003   0.207948
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.464707
2     │ 0.376279

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.253238
2     │ 0.368892
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.42175    0.298295
2     │ 0.00575236    0.949124
done!
Timing named index: 0.000618747, array index: 0.000440584, named key: 0.072595158
Timing sum large sparse array: 0.007610285, named: 0.017749669
INFO: NamedArrays tests passed

>>> End of log
