>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (870.51171875 MB free)
Uptime: 8117.0 sec
Load Avg:  0.888671875  0.90966796875  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     341819 s         68 s      32633 s     361993 s         18 s
#2  3501 MHz     224525 s         83 s      28994 s     535221 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7427438209353554	.2832086670283729	.8710917009126549	.2748204650346624
two	.5657348453607025	.7920473307703848	.37153358321774554	.4185040911159432
a	49
b	56
c	4
d	54
e	66
f	97
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0546942   0.415045   0.511066
b           │  0.659134     0.8179  0.0477301 0.05469420173474404 0.05469420173474404
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0546942   0.415045   0.511066
b     │  0.659134     0.8179  0.0477301
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0546942   0.415045   0.511066
b           │  0.659134     0.8179  0.0477301
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0546942   0.415045   0.511066
b     │  0.659134     0.8179  0.0477301
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.331473   0.666717   0.934561   0.829366
er              │  0.112598   0.339693  0.0869098   0.446991
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139629429182512
0-element Named Array{Any,1}

[0.6153871335486387 0.3235775947483568 0.8947488478733139 0.4745647400053441
 0.09935070858405237 0.48227951712862116 0.06546892535697824 0.8609437558557929]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.615387   0.323578   0.894749   0.474565
two   │ 0.0993507    0.48228  0.0654689   0.8609442x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.615387   0.323578   0.894749   0.474565
two   │ 0.0993507    0.48228  0.0654689   0.8609442x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.24612     0.851442  …      1.21271     -1.50505
2     │     2.66211    -0.903526  …     0.631581    -0.2073631000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.17898     1.79403
2     │  -0.124693    0.583496
3     │   -1.02846  -0.0431828
4     │  -0.221552   -0.855958
5     │    2.78318   -0.736544
6     │  -0.300569    -1.06889
7     │   -1.39094   -0.977233
8     │  0.0895425   -0.778254
9     │   0.845263   -0.581459
⋮                ⋮           ⋮
992   │  -0.324106   -0.655585
993   │   -1.12829   0.0023113
994   │  -0.779177   -0.135906
995   │   -1.87645    -0.53158
996   │   0.157853   -0.121643
997   │   0.737904   -0.930581
998   │  -0.207761   -0.562273
999   │   0.260588    0.529027
1000  │     1.3856   -0.2288641000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   3.25246
2    │ -0.932212
3    │   1.59448
4    │ -0.476259
5    │   0.48799
6    │   1.60698
7    │ -0.919369
8    │ -0.595821
9    │  0.319671
⋮              ⋮
992  │   1.57123
993  │  0.187678
994  │   2.83923
995  │ -0.155092
996  │ -0.897399
997  │ -0.798846
998  │  -0.85226
999  │ 0.0926709
1000 │   1.860652x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.598863   0.938707
1           │ 0.0589318    0.31348

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.790536   0.78772
1           │ 0.852674  0.820922
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.668116
2  │  0.91807
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.486548   0.629144
2     │  0.711726  0.0491371
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00303967    0.482355
2     │    0.24278    0.575896

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.674872   0.821366
2     │   0.78691  0.0739968
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.191668  0.480515
2     │ 0.712497  0.168246

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.890063  0.470991
2     │ 0.330842  0.986147

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.415527   0.095955
2     │ 0.0256856   0.987891

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.439925   0.114999
2     │  0.615033  0.0422406
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.732963   0.846185
2     │  0.311411  0.0358308

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.881343  0.793877
2     │ 0.640963  0.836191

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.947716   0.40635
2     │ 0.303924  0.932895
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.842613  0.113567

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.266574  0.271492
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.979263
2     │ 0.270838

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.890781
2     │ 0.891862
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.453895    0.15902
2     │ 0.0157813   0.134915
1000×1000 Named sparse matrix with 108 Float64 nonzero entries:
	[9036640481818790821 ,  4247719799217886270]  =  0.46535102528475036
	[12261828542413417071, 17676219393380616284]  =  0.4879697197184749
	[3994484471421493834 , 12295598998729798629]  =  0.1085783744251958
	[10361072080411987344,  7199089960335318010]  =  0.549730401063643
	[14033074738777421392,  1166092285267503990]  =  0.5089832688651079
	[13544680138434484894,  4976045735032000325]  =  0.9235426248240997
	[14835807873575694564, 10596751188013898940]  =  0.6476245354716244
	[12000240359954909472,  2886272574986834222]  =  0.6889592045497066
	                                              ⋮
	[1834107590195416916 , 18148906667482527649]  =  0.23015964767281827
	[7135901794575572161 , 15857670694969494589]  =  0.5340755712539416
	[3805326236553509133 , 15857670694969494589]  =  0.9009844238513158
	[8568476733645628391 , 17718833055079784125]  =  0.899984589704089
	[14110845009009629080,   372001016642560619]  =  0.24692395383063648
	[11624303196129780378, 11470862121108514714]  =  0.3079796136066375
	[13242236420998722172, 13970367575607681105]  =  0.05070544863842774
	[2117445326293199079 , 12020782256748308824]  =  0.671359202803435
	[5777672114274436489 , 13950575499123628905]  =  0.9818211082469808Timing named index: 0.000615991, array index: 0.000430826, named key: 0.072637864
Timing sum large sparse array: 0.006909711, named: 0.016755162
done!
INFO: NamedArrays tests passed

>>> End of log
