>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (876.80859375 MB free)
Uptime: 6940.0 sec
Load Avg:  1.0185546875  0.99365234375  1.0390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     329786 s         62 s      29150 s     261883 s         11 s
#2  3499 MHz     194318 s         76 s      25095 s     454386 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.549671  0.0896502   0.291321
b           │  0.903677   0.443043   0.888735 0.5496711401386754 0.5496711401386754
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.549671  0.0896502   0.291321
b     │  0.903677   0.443043   0.888735
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.549671  0.0896502   0.291321
b           │  0.903677   0.443043   0.888735
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.549671  0.0896502   0.291321
b     │  0.903677   0.443043   0.888735
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.463219  0.178726  0.798001  0.504468
two   │ 0.486979  0.875837  0.636623  0.808077
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.302007  0.962582
1           │ 0.731875  0.176535

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.948365  0.875358
1           │ 0.687058  0.471323
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.811714
2 │ 0.886364
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.828164  0.496648
2     │ 0.511669  0.119701
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.540184  0.165153
2     │ 0.448846  0.566816

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.78103  0.381343
2     │ 0.645705  0.148167
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.747038   0.807319
2     │  0.617522  0.0443453

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.493072  0.907293
2     │ 0.462371  0.290541

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.677556  0.667722
2     │ 0.691914  0.779989

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.296757  0.219646
2     │ 0.130469  0.230645
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.781682  0.845819
2     │ 0.542056  0.271753

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │    0.686  0.703035
2     │ 0.714678  0.465603

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.086085  0.768956
2     │ 0.970979  0.227929

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.740625   0.694912
2     │ 0.0146309    0.43663

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.618751  0.199074
2     │ 0.504087   0.18275

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.825423  0.364142
2     │ 0.113982  0.100162

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0123091   0.224222
2     │  0.758769   0.864085

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.875311  0.394306
2     │ 0.325936  0.474019
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.689328  0.939494

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.674423  0.730781
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.676287
2     │ 0.243288

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.316991
2     │ 0.813833
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.457943  0.346397
2     │ 0.678156  0.985088
done!
Timing named index: 0.000599748, array index: 0.000409569, named key: 0.130885921
Timing sum large sparse array: 0.007479667, named: 0.015639733
INFO: NamedArrays tests passed

>>> End of log
