>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (792.328125 MB free)
Uptime: 9110.0 sec
Load Avg:  1.044921875  1.005859375  1.0478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     381112 s       6118 s      33340 s     406235 s         12 s
#2  3500 MHz     252766 s        456 s      30520 s     599047 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.11403811532417807	.23978576141261154	.41252830213241487	.1161829278830242
two	.25089189094813524	.7085992045965821	.5769090563708292	.13495844673342328
a	70
b	8
c	100
d	46
e	76
f	88
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.303442  0.221325  0.410508
b           │ 0.926565  0.836309  0.118697 0.3034419238161914 0.3034419238161914
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.303442  0.221325  0.410508
b     │ 0.926565  0.836309  0.118697
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.303442  0.221325  0.410508
b           │ 0.926565  0.836309  0.118697
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.303442  0.221325  0.410508
b     │ 0.926565  0.836309  0.118697
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.717571   0.366956  0.0874901    0.93645
er              │  0.370618   0.137303    0.74805   0.422235
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139901085162736
0-element Named Array{Any,1}

[0.687481590407961 0.38151033171864124 0.8519295893478245 0.4715661904094335
 0.9635000525234345 0.5953117738339126 0.9967430924660605 0.09483936228768242]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.687482    0.38151    0.85193   0.471566
two   │    0.9635   0.595312   0.996743  0.09483942x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.687482    0.38151    0.85193   0.471566
two   │    0.9635   0.595312   0.996743  0.09483942x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.06399      -1.21381  …      0.152087       1.69015
2     │      1.08566      -1.36683  …      -1.41316      0.4770041000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │     1.44951      1.63973
2     │   -0.781338     -0.99957
3     │   -0.624651     -1.07798
4     │     1.15377     0.191775
5     │    0.150611     -1.00494
6     │   -0.451907     -3.23852
7     │    0.652902     0.138526
8     │    -1.36864      1.08279
9     │   -0.878596      1.08468
⋮                 ⋮            ⋮
992   │    -1.65343    -0.224904
993   │  -0.0640292     0.534981
994   │    -0.64159     0.295242
995   │     0.18986      0.14538
996   │ -0.00795037     -0.76817
997   │     0.93036     0.469938
998   │     1.56543     -1.31593
999   │    0.443056    -0.491277
1000  │   -0.580292     -2.400551000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.198747
2    │   1.37741
3    │  -2.09885
4    │   1.37641
5    │ -0.156745
6    │  0.330578
7    │  -1.01368
8    │    -1.474
9    │  0.865048
⋮              ⋮
992  │ 0.0289246
993  │ -0.187176
994  │  -0.79318
995  │   1.59828
996  │ -0.733703
997  │  0.396142
998  │  0.312707
999  │ -0.178532
1000 │ -0.1672372x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.398739  0.693585
1           │ 0.868568  0.242821

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.245342  0.565498
1           │ 0.148835  0.337009
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.109274
2  │ 0.117087
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.829269  0.272612
2     │ 0.662863  0.281674
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0429278   0.647203
2     │ 0.0640462   0.315332

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.246598  0.871245
2     │ 0.293974  0.165151
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.406442  0.158267
2     │ 0.228591  0.205185

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0693894   0.318263
2     │  0.609865   0.627575

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.377774   0.84568
2     │  0.55088  0.429149

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.378937  0.0112639
2     │  0.633511   0.959027
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.507962   0.67699
2     │  0.10509  0.125991

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.517983   0.392457
2     │  0.796341  0.0871498

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.842788  0.485084
2     │  0.74929   0.61254
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.388236     0.971

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.832804  0.137365
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.757056
2     │ 0.774702

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.722159
2     │ 0.103402
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.972754  0.211156
2     │ 0.340611  0.965629
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[3279378535085980212 , 13789993170142104254]  =  0.6683571232933951
	[3726791872555742705 , 15422846019410515149]  =  0.27949309809729717
	[4398365516710837200 ,   592365234179887848]  =  0.9984637838227763
	[8161571390594682873 ,  9920432272297441209]  =  0.27344305103602373
	[1177457170591155921 ,  8069307267129313135]  =  0.7877511140581424
	[13494041442472679795,  5062864901616737721]  =  0.976854765838409
	[15905894300834924909,  4394159825732135742]  =  0.21608870948258807
	[3988919785315502792 ,  4981387750669837953]  =  0.3926580004648348
	                                              ⋮
	[18332040070485059392, 17401827539426951865]  =  0.7092597221072399
	[5733908175048446366 , 11033897610157224162]  =  0.32883139892715896
	[5777672114274436489 ,  8471876845144429043]  =  0.7677869773803148
	[15396075083334870119,  2117445326293199079]  =  0.30797633320228623
	[17925559038321074944,  4788923618671962983]  =  0.526537798088929
	[14690927514111304489, 11551291857879764225]  =  0.8081380828674041
	[7356293762799192678 , 17718833055079784125]  =  0.11559976390185689
	[5726055407873363885 , 16069635275006911712]  =  0.06569401326709912
	[1406197640930237395 ,  1203336841330469213]  =  0.16348035104875258Timing named index: 0.001134316, array index: 0.000505752, named key: 0.072696998
Timing sum large sparse array: 0.004948873, named: 0.011288063
done!
INFO: NamedArrays tests passed

>>> End of log
