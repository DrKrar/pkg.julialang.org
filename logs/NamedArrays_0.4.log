>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (864.3359375 MB free)
Uptime: 6988.0 sec
Load Avg:  1.05224609375  1.03759765625  1.05029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     310486 s         50 s      28728 s     267853 s         14 s
#2  3499 MHz     191106 s         83 s      23441 s     449902 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.926183   0.387893   0.503594
b           │  0.536641  0.0450561   0.265889 0.9261828095932869 0.9261828095932869
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.926183   0.387893   0.503594
b     │  0.536641  0.0450561   0.265889
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.926183   0.387893   0.503594
b           │  0.536641  0.0450561   0.265889
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.926183   0.387893   0.503594
b     │  0.536641  0.0450561   0.265889
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.398663  0.637882  0.826323  0.454444
two   │ 0.437452  0.993364  0.703866  0.136885
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.323439  0.492186
1           │ 0.945015  0.511498

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.750442  0.0786224
1           │  0.199874   0.516681
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.649511
2 │  0.98831
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.629684  0.341308
2     │ 0.965186  0.801104
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603298    0.6112
2     │ 0.143981  0.448785

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.497462  0.263733
2     │     0.91  0.543271
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.28753   0.587435
2     │  0.269236  0.0359783

[:, :, C=2, D=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │   0.0327111     0.736809
2     │    0.247558  0.000762163

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.451528  0.422353
2     │ 0.188951  0.722761

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0219211   0.667304
2     │  0.575196   0.719937
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603922  0.743924
2     │ 0.798155  0.621604

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.50861   0.107993
2     │  0.285403  0.0923701

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0358757   0.719806
2     │  0.321105   0.104782

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.935035   0.892153
2     │  0.386125  0.0775485

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.463222  0.504705
2     │ 0.392893  0.418966

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.119679  0.0748004
2     │  0.541855    0.91075

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.378601  0.439252
2     │ 0.514285  0.355484

[:, :, C=2, D=2, E=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.417407    0.986966
2     │ 0.00169743    0.432783
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.887143  0.218162

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.764349  0.105943
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.029177
2     │  0.44443

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.726442
2     │  0.24258
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.690269  0.0873898
2     │  0.351953  0.0713122
done!
Timing named index: 0.000826253, array index: 0.000924621, named key: 0.131340362
Timing sum large sparse array: 0.014132574, named: 0.027832724
INFO: NamedArrays tests passed

>>> End of log
