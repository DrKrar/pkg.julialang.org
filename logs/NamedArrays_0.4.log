>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (824.24609375 MB free)
Uptime: 8809.0 sec
Load Avg:  1.00927734375  0.92919921875  0.96142578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     385577 s       2440 s      31026 s     381128 s         19 s
#2  3499 MHz     233528 s       4257 s      26745 s     591982 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.0626923358086433	.5803532017516442	.8528250337132142	.8808096633986271
two	.8709574517740464	.05848816889945674	.6471005192066426	.22450305854459507
a	96
b	9
c	86
d	22
e	25
f	54
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.825989  0.302601  0.179533
b           │ 0.481089  0.592087  0.186029 0.8259890382340216 0.8259890382340216
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.825989  0.302601  0.179533
b     │ 0.481089  0.592087  0.186029
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.825989  0.302601  0.179533
b           │ 0.481089  0.592087  0.186029
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.825989  0.302601  0.179533
b     │ 0.481089  0.592087  0.186029
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.995975  0.271822  0.054745  0.156631
er              │ 0.383593  0.732305  0.556343   0.78623
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140213405752112
0-element Named Array{Any,1}

[0.45864943677589554 0.7102835298413099 0.5188017388935582 0.8047412030615786
 0.40142083496490444 0.2872979250868748 0.6660580795454061 0.8897553293974383]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.458649  0.710284  0.518802  0.804741
two   │ 0.401421  0.287298  0.666058  0.8897552x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.458649  0.710284  0.518802  0.804741
two   │ 0.401421  0.287298  0.666058  0.8897552x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.340324     0.555223  …      -1.7982     -1.58943
2     │   -0.179689    -0.421179  …    -0.378192    -0.5794861000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    -0.58756     0.207513
2     │     -1.3826    0.0851863
3     │   -0.987998    -0.119602
4     │   -0.481015      0.76301
5     │   -0.249334     0.473517
6     │ -0.00807936    -0.155321
7     │   -0.459449    -0.560271
8     │    -1.14067      0.29776
9     │     1.49176     0.890566
⋮                 ⋮            ⋮
992   │   -0.744326    -0.519039
993   │   -0.631579    -0.524849
994   │    0.557722     -1.71807
995   │     -1.0608    -0.501565
996   │     1.26955     0.444919
997   │   -0.104007     0.199121
998   │   -0.665491    -0.281586
999   │   -0.230833      1.31785
1000  │   0.0890844     -1.478241000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.321614
2    │  -0.570984
3    │    1.38398
4    │  -0.709055
5    │  0.0830217
6    │   -1.81849
7    │    1.15119
8    │ -0.0745816
9    │   0.320505
⋮               ⋮
992  │  -0.694895
993  │   0.354923
994  │   0.355608
995  │    2.39748
996  │  -0.579263
997  │     -0.872
998  │   0.411839
999  │   0.109298
1000 │  -0.4777332x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │  0.0408041  0.00175176
1           │  0.0763027    0.487104

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.617428  0.0304587
1           │ 0.0160109   0.681226
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0351113
2  │  0.999438
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.941148  0.551875
2     │ 0.671628  0.959838
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.380018  0.439892
2     │ 0.987393  0.563434

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.177848  0.886668
2     │ 0.709648  0.905459
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.795581  0.171978
2     │ 0.730376  0.526732

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.511641   0.897055
2     │ 0.0329067   0.277175

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.177965  0.747775
2     │ 0.101522  0.339469

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0177251   0.727505
2     │  0.523219   0.392501
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.68994  0.563519
2     │ 0.897505  0.414397

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0950372   0.594245
2     │  0.747027  0.0777385

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.311983  0.881743
2     │ 0.476749  0.313763
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.50164  0.732711

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.260627  0.792928
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │       1
──────┼────────
1     │ 0.67195
2     │ 0.73877

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.787681
2     │ 0.676254
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.639028  0.543611
2     │ 0.919591  0.968644
1000×1000 Named sparse matrix with 115 Float64 nonzero entries:
	[187013141495975231  , 14304565767364922256]  =  0.4930786518287207
	[10338346681654797567,  1703847331300677320]  =  0.3349200757106401
	[9060976978009627663 ,  6134978669850253296]  =  0.21707940501903944
	[13455851195697423687, 16462243977607957471]  =  0.08056677192611894
	[3988919785315502792 ,  2849690884155085581]  =  0.5591594313039518
	[4494612503536197367 ,  2230070772219402886]  =  0.9065688882168443
	[15408733635197285348,  7199089960335318010]  =  0.9203748220440835
	[1646478019369420967 ,  4329451781928897369]  =  0.5716616083682866
	                                              ⋮
	[9060976978009627663 ,  4214085865611670439]  =  0.977716749948045
	[8848098725795227459 ,  6738482027934271349]  =  0.6971085009515301
	[4394159825732135742 , 10663619072362037589]  =  0.07808930702225192
	[6133723350622533458 ,  1523061068178304284]  =  0.30238321805911617
	[15444197186593984072,  1203336841330469213]  =  0.897702029794025
	[12174600735091283114, 11470862121108514714]  =  0.12276253819163463
	[10725201418295586676,  3733926995351842633]  =  0.761880868554327
	[12876006501778729182, 14599810768241287016]  =  0.11000049017499713
	[3468941480894322836 , 13690505415342562739]  =  0.4431257302788352Timing named index: 0.000612329, array index: 0.000423544, named key: 0.108142373
Timing sum large sparse array: 0.006526198, named: 0.013576394
done!
INFO: NamedArrays tests passed

>>> End of log
