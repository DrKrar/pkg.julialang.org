>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (866.30859375 MB free)
Uptime: 6925.0 sec
Load Avg:  1.15380859375  1.01806640625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     330028 s       5526 s      27085 s     258549 s         14 s
#2  3500 MHz     208183 s       1990 s      23604 s     436631 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.4635563703294969	.6911847946488727	.5538744542923977	.8100612318337055
two	.7740771386456102	.5448141700438864	.5425881791878908	.18138370482183297
a	71
b	64
c	9
d	37
e	25
f	82
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.760792    0.674805     0.78825
b           │   0.718946    0.385364  0.00423193 0.76079198881954 0.76079198881954
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.760792    0.674805     0.78825
b     │   0.718946    0.385364  0.00423193
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.760792    0.674805     0.78825
b           │   0.718946    0.385364  0.00423193
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.760792    0.674805     0.78825
b     │   0.718946    0.385364  0.00423193
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.729226    0.787702    0.363218  0.00425641
er              │  0.0734571    0.998567    0.103443    0.149915
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139963092265312
0-element Named Array{Any,1}

[0.7114949417099146 0.8173134912318785 0.017201485193328425 0.6507556346209542
 0.5958970135782846 0.09678096589981444 0.7433542730295859 0.7674074939819928]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.711495   0.817313  0.0172015   0.650756
two   │  0.595897   0.096781   0.743354   0.7674072x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.711495   0.817313  0.0172015   0.650756
two   │  0.595897   0.096781   0.743354   0.7674072x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.209518     0.811621  …     -1.08656    -0.133686
2     │    0.152354    -0.275218  …     0.494842     -1.022231000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.25561     0.99711
2     │   -3.45154   -0.533346
3     │   0.559906    -1.89196
4     │  0.0669733   -0.429272
5     │   -1.16835     1.75835
6     │   0.184257    -2.11145
7     │    1.13048    0.544419
8     │   0.414285     1.91142
9     │   -1.82321   -0.817607
⋮                ⋮           ⋮
992   │  -0.454276     1.77971
993   │   -1.12755    -1.51484
994   │   -1.04832  -0.0229049
995   │    1.19381   -0.461462
996   │    1.90154   -0.139099
997   │    0.60739     -1.0935
998   │  0.0539669    -1.48302
999   │     1.0074    0.210724
1000  │  -0.257819     -1.03991000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │     1.98959
2    │   -0.367641
3    │   -0.886945
4    │    0.532515
5    │  -0.0845521
6    │   -0.926274
7    │ -0.00181917
8    │     1.55346
9    │   -0.132313
⋮                ⋮
992  │   -0.370544
993  │    0.671653
994  │    -1.98414
995  │    0.313517
996  │    0.375649
997  │     1.69365
998  │    0.785225
999  │    0.660597
1000 │    -1.607232x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.861103   0.639351
1           │   0.37594  0.0169776

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.983139   0.34164
1           │ 0.208618  0.152965
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.220201
2  │ 0.628807
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.156917   0.40854
2     │ 0.667461  0.577027
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.268214  0.302796
2     │ 0.317446  0.178276

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.616386  0.983767
2     │ 0.824458  0.635112
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.982316  0.656139
2     │ 0.839445  0.669249

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0292707   0.691431
2     │  0.987534   0.527282

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.569488   0.510878
2     │  0.578152  0.0801008

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.413666  0.876876
2     │ 0.586872  0.735044
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.308184  0.0516734
2     │  0.262367   0.953643

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.552351  0.268348
2     │ 0.964904  0.360821

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.802867  0.227514
2     │ 0.731198  0.132276
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0810879    0.91102

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.371912  0.444437
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.386891
2     │ 0.680706

[:, :, C=2] =
A ╲ B │          1
──────┼───────────
1     │   0.839187
2     │ 0.00919884
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.563545  0.428616
2     │ 0.284539    0.1697
1000×1000 Named sparse matrix with 115 Float64 nonzero entries:
	[12459420750016908814,  6526988131186142725]  =  0.8276773500143213
	[16946861163327142185,  9690422262975321697]  =  0.9069083361444863
	[15857670694969494589,  6564272639106249010]  =  0.22745443091437556
	[16784990760345090389, 15422846019410515149]  =  0.00714079367260867
	[7425701996526302553 ,   592365234179887848]  =  0.07114294945716093
	[7135901794575572161 ,  4247719799217886270]  =  0.10915928175900724
	[13073955458708776909, 10106592262940987645]  =  0.01117790935322871
	[7713060533429820211 , 11496001657944805140]  =  0.5153535194395062
	                                              ⋮
	[1406197640930237395 ,  2344064818992981444]  =  0.7842611617654154
	[16112569381171233070, 16243515418520287792]  =  0.2995786594121703
	[1017373194429467360 ,     1348625733340586]  =  0.5592639006139231
	[8586548853081112102 ,  4182991028086505933]  =  0.15603651702032062
	[6332455606016291123 ,  4214085865611670439]  =  0.509952845656725
	[5312631360709731698 ,  5597731276780160114]  =  0.03518905810713591
	[10369386120472232477,  8779884342238752210]  =  0.17054441485764582
	[17718833055079784125, 15240003619098155971]  =  0.4556036033143003
	[4913249781191789579 ,  3733926995351842633]  =  0.8139562027311817Timing named index: 0.000893296, array index: 0.000733118, named key: 0.129439755
Timing sum large sparse array: 0.012024674, named: 0.027801835
done!
INFO: NamedArrays tests passed

>>> End of log
