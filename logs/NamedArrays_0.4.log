>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (879.28125 MB free)
Uptime: 6889.0 sec
Load Avg:  1.2158203125  1.0185546875  1.02294921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     318522 s         95 s      26708 s     276569 s         15 s
#2  3499 MHz     204108 s         54 s      23194 s     440746 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7966526057505383	.04890042259279492	.4063012420554708	.22632707990061296
two	.892633054237544	.9605053591424328	.9089775612892312	.9625634205585265
a	53
b	67
c	48
d	38
e	41
f	77
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.226397   0.234226   0.708153
b           │  0.658754   0.956253  0.0816287 0.2263973301800184 0.2263973301800184
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.226397   0.234226   0.708153
b     │  0.658754   0.956253  0.0816287
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.226397   0.234226   0.708153
b           │  0.658754   0.956253  0.0816287
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.226397   0.234226   0.708153
b     │  0.658754   0.956253  0.0816287
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.353823  0.904737  0.500413  0.505728
er              │ 0.856768  0.203921  0.505725  0.358634
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139886813045360
0-element Named Array{Any,1}

[0.4634233148347846 0.4646166523233657 0.8662963358507099 0.4648884388689196
 0.6555298370219909 0.04248666630383746 0.464197308720522 0.49576325938002297]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.463423   0.464617   0.866296   0.464888
two   │   0.65553  0.0424867   0.464197   0.4957632x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.463423   0.464617   0.866296   0.464888
two   │   0.65553  0.0424867   0.464197   0.4957632x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.388691     -1.06281  …  -0.00339506     0.109624
2     │   -0.712209    -0.471443  …      1.53682      1.731021000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.17552   -0.937489
2     │   -1.19975   -0.326065
3     │   -1.43422    0.808901
4     │   0.791694     1.52129
5     │   0.772797     1.97351
6     │    2.11743    0.608254
7     │    2.12367    -2.25343
8     │ -0.0746718    0.810821
9     │    1.78701    -1.18525
⋮                ⋮           ⋮
992   │  -0.143708    -1.60922
993   │  -0.486269   -0.674853
994   │  -0.398686     1.04569
995   │   -1.36537   -0.397496
996   │  -0.296239   -0.396207
997   │  -0.519467    0.796263
998   │   0.454646    0.855904
999   │  -0.582486    0.663757
1000  │   0.132888      1.38441000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.422049
2    │   2.28798
3    │  0.231402
4    │  0.713198
5    │     1.088
6    │   -1.6444
7    │  0.471628
8    │  0.307154
9    │  0.380517
⋮              ⋮
992  │  -1.21389
993  │   1.24611
994  │ -0.720891
995  │   1.01327
996  │  0.131579
997  │  0.387315
998  │ -0.548674
999  │ -0.609683
1000 │   0.902382x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.142049    0.859285
1           │   0.115752  0.00864514

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.36329  0.467225
1           │ 0.256775  0.182806
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.703384
2  │ 0.638797
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.513458  0.638694
2     │ 0.545668  0.337371
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.426552  0.174433
2     │ 0.333374  0.602143

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.772345  0.419885
2     │ 0.952656  0.335618
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.927552   0.169866
2     │ 0.0168572   0.806263

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.687598   0.97594
2     │ 0.805407  0.560037

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.632583  0.881694
2     │ 0.236474  0.944959

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0410724    0.57221
2     │  0.989139   0.941352
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0660558   0.491261
2     │  0.217619   0.947479

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0205341   0.736039
2     │  0.728856   0.632966

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.151093   0.52321
2     │ 0.557402  0.752094
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.663692  0.648346

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.958492  0.630162
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0769736
2     │ 0.0780431

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.825621
2     │  0.73655
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.456926  0.169821
2     │ 0.918326  0.641922
1000×1000 Named sparse matrix with 113 Float64 nonzero entries:
	[4047135350800189603 , 13888991764943741743]  =  0.6636019414941101
	[898568979075944978  ,  9283096199793891681]  =  0.12953966989485033
	[1443935710653492582 , 18443816037252674910]  =  0.5349217333700493
	[12419957900638875901,  8725235013359650451]  =  0.7093974075938114
	[9666738521404155677 , 11907679469289587679]  =  0.006088992679370797
	[16069635275006911712, 11907679469289587679]  =  0.09903706656541722
	[18365636711081267169,   906960604709401733]  =  0.8952971948146009
	[919672847296486462  , 15493082059768908559]  =  0.03015960846284549
	                                              ⋮
	[849947749456312673  , 17718833055079784125]  =  0.8307488687080082
	[9160113052237000060 , 16836080019131185762]  =  0.5016373670444187
	[8171630255572214773 , 10663619072362037589]  =  0.5393290254014969
	[1309242526546184706 ,  7989582431359101293]  =  0.7022496424416222
	[12901330087571726961,  7989582431359101293]  =  0.06915546058388444
	[7199089960335318010 ,  8779884342238752210]  =  0.3464827486744344
	[6947860236989419941 ,  1861743268047760089]  =  0.505106121534036
	[15078133678202242611,  3279378535085980212]  =  0.9207008027765755
	[14951403058635497631,  7519919299137062942]  =  0.09661283105792906Timing named index: 0.000752637, array index: 0.000599295, named key: 0.073794236
Timing sum large sparse array: 0.007053832, named: 0.018319323
done!
INFO: NamedArrays tests passed

>>> End of log
