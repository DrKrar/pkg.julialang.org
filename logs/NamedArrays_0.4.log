>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (809.46484375 MB free)
Uptime: 6246.0 sec
Load Avg:  1.19287109375  1.00634765625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     279644 s         57 s      27978 s     237502 s         14 s
#2  3499 MHz     175331 s         90 s      23756 s     398803 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.270247  0.676783  0.882312
b           │ 0.551321  0.754562   0.64723 0.2702473084474575 0.2702473084474575
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.270247  0.676783  0.882312
b     │ 0.551321  0.754562   0.64723
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.270247  0.676783  0.882312
b           │ 0.551321  0.754562   0.64723
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.270247  0.676783  0.882312
b     │ 0.551321  0.754562   0.64723
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.742115  0.727976  0.523084  0.742245
two   │ 0.861384  0.241395  0.922596   0.42934
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.209526  0.326094
1           │ 0.853953  0.791085

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.287604   0.42217
1           │ 0.888924  0.451149
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.520831
2 │ 0.961596
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.806368  0.406063
2     │ 0.110688  0.948085
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.587515  0.0958979
2     │  0.635442   0.799922

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.546425  0.335584
2     │ 0.895965  0.894436
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0264487   0.774358
2     │  0.114666   0.281685

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0187436   0.895617
2     │  0.182183   0.475493

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.95081  0.149022
2     │ 0.957619  0.802538

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.597151  0.955636
2     │ 0.112767  0.312847
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.825513  0.959454
2     │ 0.977593  0.340828

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.215102  0.735046
2     │ 0.956895  0.445943

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.600033  0.706333
2     │ 0.202213  0.234235

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.651763  0.356878
2     │ 0.374104  0.600346

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.18022  0.108907
2     │ 0.170669  0.302073

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.148073  0.903503
2     │ 0.412162   0.43002

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.237804  0.704292
2     │ 0.802181  0.647137

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.844088  0.624524
2     │ 0.833903   0.22867
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.987014  0.360035

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.255292  0.758911
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.410511
2     │ 0.0930942

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.997091
2     │ 0.603712
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0735173   0.589457
2     │  0.479085   0.167561
done!
Timing named index: 0.000617819, array index: 0.000110176, named key: 0.070019395
Timing sum large sparse array: 0.007503183, named: 0.020270279
INFO: NamedArrays tests passed

>>> End of log
