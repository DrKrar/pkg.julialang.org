>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (805.97265625 MB free)
Uptime: 8662.0 sec
Load Avg:  0.97265625  0.95947265625  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     386564 s       1653 s      31270 s     356914 s         21 s
#2  3499 MHz     215796 s       4815 s      27550 s     584628 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.17915836361390602	.9440583487074707	.206652479358731	.9452566403126794
two	.30486104360071575	.5207430184021375	.7688901329892432	.8815110155083403
a	80
b	65
c	71
d	28
e	64
f	53
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.929732   0.55446   0.79704
b           │ 0.831907  0.284128  0.956706 0.9297324293897158 0.9297324293897158
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.929732   0.55446   0.79704
b     │ 0.831907  0.284128  0.956706
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.929732   0.55446   0.79704
b           │ 0.831907  0.284128  0.956706
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.929732   0.55446   0.79704
b     │ 0.831907  0.284128  0.956706
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.803193  0.903312  0.596546  0.580567
er              │ 0.263103  0.804093  0.871896  0.671965
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140441655764576
0-element Named Array{Any,1}

[0.7359973867684453 0.4166579582587595 0.9704495848631591 0.36955920477443227
 0.01569306135651405 0.5271756506619278 0.6489506121185422 0.817593834110528]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.735997   0.416658    0.97045   0.369559
two   │ 0.0156931   0.527176   0.648951   0.8175942x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.735997   0.416658    0.97045   0.369559
two   │ 0.0156931   0.527176   0.648951   0.8175942x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.753183     0.0414209  …      -0.81624      0.374772
2     │      1.35319        0.7843  …      0.385397       1.489091000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.386719    0.431984
2     │   0.300672  -0.0158445
3     │   0.314379    -1.55401
4     │  -0.766991   -0.866702
5     │   -1.07559   -0.220748
6     │   0.475283    0.367806
7     │  0.0306306   -0.109552
8     │  -0.497041    -1.24742
9     │ -0.0739323    -3.05077
⋮                ⋮           ⋮
992   │    1.14655     1.10664
993   │    2.20893    -1.52314
994   │   0.172614    -1.85409
995   │    2.21508   -0.433052
996   │   0.324387   -0.673355
997   │  -0.385597   -0.123126
998   │    0.20165   -0.143078
999   │   -0.81534   -0.587215
1000  │  -0.069207    -1.098981000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.734897
2    │  0.285467
3    │  0.369351
4    │    2.6912
5    │  -2.68867
6    │ 0.0250595
7    │   1.71275
8    │  -1.32507
9    │  -1.19398
⋮              ⋮
992  │ -0.620307
993  │ -0.904679
994  │  0.326319
995  │  -1.03775
996  │ -0.719624
997  │ -0.803529
998  │  -1.29596
999  │ -0.974591
1000 │  0.2793172x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0620428   0.724994
1           │  0.925085   0.618119

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.487503  0.0216589
1           │  0.623247   0.352202
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.592751
2  │ 0.665709
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.837225  0.0576945
2     │  0.917513   0.384496
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0344086   0.296108
2     │ 0.0401068   0.866378

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.962633  0.532837
2     │ 0.957735  0.432905
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.271629  0.116798
2     │ 0.949508  0.953235

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.56023   0.941737
2     │  0.844232  0.0769142

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.251011    0.73642
2     │ 0.0410689   0.292864

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.954875  0.357567
2     │ 0.879006  0.164015
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.21079  0.982594
2     │ 0.784168  0.218392

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.221971   0.41721
2     │ 0.347494   0.84717

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.923931   0.267549
2     │  0.916233  0.0216803
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.127083  0.883386

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.595987  0.605735
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │   0.83675
2     │ 0.0542614

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.508827
2     │ 0.319917
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0587688   0.155983
2     │  0.595441   0.839483
1000×1000 Named sparse matrix with 85 Float64 nonzero entries:
	[3328880625782563796 ,  5647414292592918739]  =  0.3605700888389489
	[11177662065610013630, 12809965746239821631]  =  0.9333500055788115
	[7799201424495593660 ,  9920432272297441209]  =  0.30301722705352985
	[3982709381579875351 , 10106592262940987645]  =  0.4407773441556695
	[1359987701312007394 ,  8725235013359650451]  =  0.4516170158416464
	[16583690740438463922,  7425701996526302553]  =  0.9462312066218415
	[6565262192402102057 ,  1166092285267503990]  =  0.24560490531160317
	[2194332839417359044 ,  6065204439534692180]  =  0.19542300653986766
	                                              ⋮
	[4174785917342603289 ,  2107242561845671563]  =  0.8332224377482982
	[2436126165640975798 ,  1566360107212290167]  =  0.4812058729763118
	[16462243977607957471, 10725201418295586676]  =  0.4564924722424264
	[15537134230127387587,  6468689935112619700]  =  0.5996722089110078
	[2230070772219402886 ,  2117445326293199079]  =  0.3535796033133658
	[8720304024814141479 ,  2520040687452014961]  =  0.5005107330528809
	[6828122599267262902 , 16031689834122954645]  =  0.3609082093439919
	[4565099145871195153 ,  1842419535934980543]  =  0.026013236612601798
	[14138153537439249859,  7519919299137062942]  =  0.2522870822327363Timing named index: 0.00071356, array index: 0.000481874, named key: 0.070858965
Timing sum large sparse array: 0.006229405, named: 0.012930045
done!
INFO: NamedArrays tests passed

>>> End of log
