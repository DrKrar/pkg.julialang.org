>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (882.33203125 MB free)
Uptime: 6310.0 sec
Load Avg:  0.88916015625  0.93115234375  1.0
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     299744 s         54 s      27484 s     232306 s          1 s
#2  3500 MHz     176113 s         96 s      24030 s     412808 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.131779  0.151536  0.932417
b           │ 0.167814  0.958681   0.46077 0.13177930083063183 0.13177930083063183
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.131779  0.151536  0.932417
b     │ 0.167814  0.958681   0.46077
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.131779  0.151536  0.932417
b           │ 0.167814  0.958681   0.46077
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.131779  0.151536  0.932417
b     │ 0.167814  0.958681   0.46077
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.682421   0.645731   0.962639   0.307515
two   │ 0.0117793   0.754218   0.667268   0.726864
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.368319  0.602248
1           │  0.71048  0.798089

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.64092  0.479868
1           │ 0.450016  0.445823
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.724309
2 │ 0.447383
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.812944   0.987948
2     │  0.106959  0.0126656
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.222903  0.818596
2     │  0.59659  0.540475

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.321054  0.500661
2     │ 0.446022  0.225457
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.957346  0.497032
2     │ 0.363078  0.123583

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.737367  0.731114
2     │ 0.887098  0.253133

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.951619    0.321511
2     │ 0.00466499    0.365529

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.256917  0.953627
2     │ 0.380304  0.206036
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0965882   0.248747
2     │  0.122222   0.399698

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │    0.4419   0.375942
2     │ 0.0373253   0.685451

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.300819  0.0704398
2     │  0.373995   0.157349

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.791543   0.494824
2     │  0.593875  0.0958259

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.478827  0.851695
2     │ 0.617202  0.207929

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.666135  0.737153
2     │ 0.894104  0.337118

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.783868  0.718381
2     │ 0.945398  0.841264

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.700329  0.974009
2     │  0.42587  0.763464
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.308434  0.604194

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.128705  0.897318
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0742014
2     │  0.322559

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0121298
2     │  0.282279
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.145666  0.092342
2     │  0.78164  0.812975
done!
Timing named index: 0.000951335, array index: 6.7162e-5, named key: 0.133229978
Timing sum large sparse array: 0.012499615, named: 0.027657944
INFO: NamedArrays tests passed

>>> End of log
