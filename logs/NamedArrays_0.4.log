>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (404.82421875 MB free)
Uptime: 8902.0 sec
Load Avg:  1.63525390625  1.38232421875  1.17041015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     382072 s       5766 s      30003 s     387921 s         15 s
#2  3496 MHz     255939 s       2016 s      25625 s     579421 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.12414719573374722	.4251973085459553	.729095453967858	.5769873040349056
two	.4547629231683903	.18303722745661055	.49842487188088747	.9815324840215647
a	14
b	82
c	27
d	27
e	33
f	58
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.860512  0.610166  0.143386
b           │ 0.308011   0.15762  0.887542 0.8605121169537715 0.8605121169537715
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.860512  0.610166  0.143386
b     │ 0.308011   0.15762  0.887542
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.860512  0.610166  0.143386
b           │ 0.308011   0.15762  0.887542
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.860512  0.610166  0.143386
b     │ 0.308011   0.15762  0.887542
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.525066  0.434775  0.174383  0.879902
er              │ 0.603905  0.451388  0.366102  0.898688
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.08542976363345756 0.20678499298303143 0.6855408240501255 0.5991320573636667
 0.9637155971218296 0.612438914784978 0.6412148889618137 0.030402394167262425]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0854298   0.206785   0.685541   0.599132
two   │  0.963716   0.612439   0.641215  0.03040242x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0854298   0.206785   0.685541   0.599132
two   │  0.963716   0.612439   0.641215  0.03040242x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.57007     -2.13924  …     0.350636    -0.634657
2     │   -0.159598      -1.0124  …      2.31273     0.6374311000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.508879   -0.187444
2     │  -0.662129   0.0969944
3     │   0.708337   -0.183877
4     │   -1.22566     1.01464
5     │  -0.578768     1.95679
6     │  -0.980849   -0.326348
7     │  -0.590633   -0.387718
8     │  -0.929287    0.529246
9     │ -0.0783625     1.05554
⋮                ⋮           ⋮
992   │  -0.515748  0.00985779
993   │   -1.18209    0.929762
994   │     1.1675   0.0375579
995   │  -0.383284   -0.878748
996   │   -0.74822    0.220101
997   │   0.232078     1.66502
998   │  -0.180485   -0.213362
999   │   0.618385    0.119124
1000  │ -0.0480545     1.002551000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.860168
2    │  0.216001
3    │ -0.750588
4    │  -1.55942
5    │  -1.38898
6    │ -0.334949
7    │   1.47633
8    │  0.576027
9    │  0.658141
⋮              ⋮
992  │  0.932552
993  │  -1.70477
994  │  0.295373
995  │  0.116428
996  │   -1.2635
997  │  0.323235
998  │  -1.61126
999  │  0.174796
1000 │  -0.137712x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.438241   0.999967
1           │ 0.0453335   0.225024

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.351985  0.167653
1           │ 0.310005  0.450493
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.189787
2  │ 0.232653
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.304141   0.50847
2     │ 0.508979  0.559091
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.792055  0.739445
2     │ 0.691995  0.139116

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.773668   0.20976
2     │  0.83134  0.359272
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.87616  0.609232
2     │ 0.182677  0.758714

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.953559  0.661558
2     │ 0.771114  0.609863

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.211528  0.419339
2     │ 0.506319  0.964983

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0422416   0.928244
2     │  0.999326   0.664405
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.122836  0.696064
2     │ 0.170749   0.18322

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.758732  0.783583
2     │ 0.160092  0.452477

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.146385  0.287366
2     │ 0.485637  0.485079
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.381693  0.572893

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.806811  0.584133
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1
──────┼───────────
1     │ 0.00852425
2     │  0.0117705

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.627169
2     │ 0.502302
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0729238   0.836165
2     │    0.6441  0.0830427
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[17940364629750305480,  9690422262975321697]  =  0.0607012562678273
	[16996133433751471822, 14304565767364922256]  =  0.9904891676632752
	[15589056775630200950,  8058121953372963805]  =  0.009772495006110438
	[6738482027934271349 , 16462243977607957471]  =  0.3582075513826932
	[13897873635935988725, 17822619313291261357]  =  0.9169305586544843
	[13413762311091243877,  2230070772219402886]  =  0.19077729755126094
	[15093605664292761005, 11496001657944805140]  =  0.23115957802937626
	[2764549293755475861 ,  3039451196773527828]  =  0.49785008688913246
	                                              ⋮
	[7580984277293214809 ,  8425210698882380606]  =  0.4894995330609253
	[427459847123490633  ,  1341783406603060396]  =  0.2752606153610817
	[3674440393316115114 , 17173839162019621584]  =  0.8635459240653034
	[11088256593380071097, 14340416566338039723]  =  0.41696526529787614
	[15559590888388931697, 17329041886349039120]  =  0.8052487943659716
	[9266536657670673180 , 11641483179283066996]  =  0.6869173566976408
	[17900418222753209643,  7989582431359101293]  =  0.1515220500646739
	[5941255457965612473 ,  4047135350800189603]  =  0.8080818590605201
	[849947749456312673  , 16202651256804923129]  =  0.8101796990001451Timing named index: 0.000850543, array index: 0.000462249, named key: 0.128061691
Timing sum large sparse array: 0.006530224, named: 0.013033272
done!
INFO: NamedArrays tests passed

>>> End of log
