>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (808.76953125 MB free)
Uptime: 8362.0 sec
Load Avg:  1.00048828125  1.0146484375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     374534 s       9703 s      31921 s     331360 s         12 s
#2  3500 MHz     233901 s       4947 s      27282 s     542866 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.353531109463024	.780617748369322	.30605950321290587	.8409788612616946
two	.9840891179246727	.4689678489229203	.5321542239226087	.6208987321145172
a	22
b	7
c	51
d	69
e	43
f	72
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.12008   0.620973   0.193607
b           │ 0.0727126   0.870201  0.0223514 0.12008045243241794 0.12008045243241794
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.12008   0.620973   0.193607
b     │ 0.0727126   0.870201  0.0223514
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.12008   0.620973   0.193607
b           │ 0.0727126   0.870201  0.0223514
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.12008   0.620973   0.193607
b     │ 0.0727126   0.870201  0.0223514
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │    0.31397  0.00779476    0.669557    0.785207
er              │   0.673806    0.151155    0.424853    0.753764
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139851775884304
0-element Named Array{Any,1}

[0.7080832750455426 0.08796299043319844 0.23714818786910907 0.7077892922408331
 0.06856698320463228 0.1881567630198444 0.9685996330679154 0.9092291582565737]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.708083  0.087963  0.237148  0.707789
two   │ 0.068567  0.188157    0.9686  0.9092292x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.708083  0.087963  0.237148  0.707789
two   │ 0.068567  0.188157    0.9686  0.9092292x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.119477    -0.736267  …     0.898863       1.5662
2     │    -1.09854     0.780149  …      0.97392     0.1538061000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.835974    -1.2814
2     │   0.41228   0.935459
3     │ -0.453484  -0.339278
4     │ -0.582006  -0.187106
5     │   -1.0926   0.081951
6     │ -0.373148   -1.04453
7     │ -0.886565   0.338184
8     │  0.364421   -1.03195
9     │   1.18558    1.67145
⋮               ⋮          ⋮
992   │ -0.437344    2.38134
993   │  0.728641    1.62619
994   │  0.596806   -1.07303
995   │  -1.42422   0.580056
996   │  0.352408  -0.231296
997   │  0.544338    -1.1828
998   │  0.546769   -0.11287
999   │   2.15378   0.479249
1000  │  0.302766    0.710281000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -0.64334
2    │   0.671186
3    │ 0.00696202
4    │  -0.551623
5    │   -0.58958
6    │   0.233958
7    │    1.99127
8    │    2.34733
9    │  -0.813594
⋮               ⋮
992  │   -0.48968
993  │  -0.478044
994  │    1.39255
995  │    1.24832
996  │    1.01437
997  │   0.596018
998  │    1.27254
999  │    1.36515
1000 │  -0.8733852x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.914248  0.989154
1           │   0.1317  0.443501

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.85168  0.475282
1           │ 0.564672  0.747363
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0432085
2  │  0.803485
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.591541  0.131954
2     │ 0.647393  0.121222
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0247137    0.23949
2     │  0.157808   0.768628

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.956913  0.406365
2     │ 0.728005  0.387503
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.845441  0.471506
2     │  0.92534   0.43843

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.459585  0.749384
2     │ 0.118428  0.594326

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.884231  0.284891
2     │ 0.993422    0.4044

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.9015   0.73856
2     │ 0.842514  0.955023
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.87374   0.233098
2     │  0.704852  0.0767666

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.502914   0.281072
2     │  0.369371  0.0727183

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0942446   0.135833
2     │  0.189979   0.679053
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0931142   0.485418

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.460594  0.843514
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.926433
2     │  0.59075

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.197239
2     │ 0.700381
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.856339   0.70687
2     │  0.80877  0.477439
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[4722070531727235685 ,  6526988131186142725]  =  0.661015670846421
	[17436498189161857304,  9690422262975321697]  =  0.023652438406879694
	[1603870711594358861 , 13789993170142104254]  =  0.23809881284404377
	[4106283031091570395 ,  1703847331300677320]  =  0.0752932544917444
	[4223746066729127812 ,  8058121953372963805]  =  0.027321153278208943
	[273396578563598247  ,   592365234179887848]  =  0.13598716651630016
	[2597121609202981640 , 11496001657944805140]  =  0.01961544720334696
	[7407209677347974000 , 11496001657944805140]  =  0.6349371047930399
	                                              ⋮
	[8305934159106380255 , 15717097331822026300]  =  0.4507524099603937
	[15362413774630394309, 14774945750507892610]  =  0.044260886412154976
	[18443816037252674910, 16655780295490676025]  =  0.11533996255900325
	[1082833487325258643 , 11641483179283066996]  =  0.51232286547785
	[12621324006550133948,  9815398096560962926]  =  0.37368841927544794
	[17287069299322624247,  7608520278977511969]  =  0.69619110870182
	[1628675476083889103 ,  8090338657268802519]  =  0.611355203199456
	[5481191165173026183 , 11470862121108514714]  =  0.48189135466513267
	[5062864901616737721 ,  4047135350800189603]  =  0.528700965967015Timing named index: 0.000734005, array index: 0.000526496, named key: 0.086009057
Timing sum large sparse array: 0.007166429, named: 0.014884859
done!
INFO: NamedArrays tests passed

>>> End of log
