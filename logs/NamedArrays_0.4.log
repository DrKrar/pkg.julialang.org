>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (881.9140625 MB free)
Uptime: 7527.0 sec
Load Avg:  1.04296875  1.0615234375  1.06787109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     320155 s         39 s      27282 s     326155 s         15 s
#2  3500 MHz     184950 s        127 s      24621 s     511672 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.423187  0.073186  0.341343
b           │ 0.270267  0.371613  0.762886 0.42318694882838104 0.42318694882838104
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.423187  0.073186  0.341343
b     │ 0.270267  0.371613  0.762886
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.423187  0.073186  0.341343
b           │ 0.270267  0.371613  0.762886
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.423187  0.073186  0.341343
b     │ 0.270267  0.371613  0.762886
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.827459  0.741368  0.685446  0.896041
two   │ 0.137865  0.778321  0.132421  0.085212
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.277488  0.706502
1           │ 0.669221  0.618594

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.910136  0.0244041
1           │  0.774131   0.746164
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.477043
2 │ 0.452952
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.790818  0.349542
2     │ 0.546387  0.482401
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.182445   0.44805
2     │ 0.167739  0.147168

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.276888   0.678319
2     │  0.243031  0.0240008
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0978065   0.110996
2     │  0.156167   0.648985

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.520416  0.237078
2     │ 0.731093  0.526698

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.583082  0.260193
2     │ 0.625453  0.936608

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.712242   0.254751
2     │ 0.0889758   0.886989
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0810363  0.0969568
2     │  0.550776   0.791719

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.940308  0.664402
2     │  0.52146  0.275716

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.89502  0.456113
2     │ 0.807696  0.250884

[:, :, C=2, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.760602    0.436209
2     │   0.176892  0.00597184

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.707484  0.782034
2     │ 0.638268  0.946051

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.488363  0.341071
2     │ 0.150361  0.592722

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.719265  0.641679
2     │ 0.362596  0.343923

[:, :, C=2, D=2, E=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00241677   0.0128115
2     │   0.539123    0.992899
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.190271  0.851319

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.816044  0.240097
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.713869
2     │ 0.904693

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0099797
2     │ 0.0105739
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.466153  0.559267
2     │ 0.389216  0.265394
done!
Timing named index: 0.000876717, array index: 0.000989083, named key: 0.088542004
Timing sum large sparse array: 0.007181151, named: 0.019293415
INFO: NamedArrays tests passed

>>> End of log
