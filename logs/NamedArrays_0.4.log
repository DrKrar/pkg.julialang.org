>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (803.99609375 MB free)
Uptime: 6248.0 sec
Load Avg:  0.93408203125  0.9697265625  1.05859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     279242 s       2895 s      25608 s     253165 s          3 s
#2  3501 MHz     188286 s       2755 s      23072 s     390828 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6263782785298215	.40671017195911596	.9046666342648964	.6990271899537726
two	.137812498844053	.4499504875892415	.740255776951753	.720402816511011
a	81
b	50
c	27
d	88
e	51
f	59
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.012716  0.619346  0.582315
b           │ 0.573576  0.317756   0.88748 0.012715977162253589 0.012715977162253589
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.012716  0.619346  0.582315
b     │ 0.573576  0.317756   0.88748
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.012716  0.619346  0.582315
b           │ 0.573576  0.317756   0.88748
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.012716  0.619346  0.582315
b     │ 0.573576  0.317756   0.88748
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.609905   0.549393   0.233493   0.869977
er              │  0.261147   0.117281  0.0223457   0.907777
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139837865870288
0-element Named Array{Any,1}

[0.45562611691795807 0.04459557069081077 0.6538649166670765 0.2325585074095069
 0.08007940847736572 0.25022764433340483 0.9282095091365257 0.6805368691819387]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.455626  0.0445956   0.653865   0.232559
two   │ 0.0800794   0.250228    0.92821   0.6805372x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.455626  0.0445956   0.653865   0.232559
two   │ 0.0800794   0.250228    0.92821   0.6805372x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.19064      0.255795  …      0.914175       1.40339
2     │     -1.26909      0.338166  …     -0.506167     -0.6888461000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.714987  -0.857728
2     │   1.45082  -0.204501
3     │   1.00858   0.338939
4     │  -1.20802   -1.24066
5     │   1.09679   0.844265
6     │   3.00694   0.913014
7     │  -0.24308   -1.28083
8     │   1.86706   0.497757
9     │  0.629585  -0.618868
⋮               ⋮          ⋮
992   │   1.19028  -0.466397
993   │ -0.196015    1.43782
994   │  -0.33863   0.108034
995   │ -0.564468  -0.371464
996   │   2.05449   -0.85265
997   │  0.335914   -1.03511
998   │  -1.32148  0.0958221
999   │ -0.396173   0.826333
1000  │   1.29198    1.858441000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.981349
2    │  -0.329512
3    │   0.939369
4    │  -0.170858
5    │   0.049953
6    │     0.5572
7    │   -0.82562
8    │   -1.43567
9    │   0.492744
⋮               ⋮
992  │   -1.29096
993  │   0.352659
994  │ -0.0342449
995  │    1.24802
996  │    1.44381
997  │  -0.940003
998  │    1.15479
999  │  -0.776262
1000 │   -1.213012x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │  0.0418719    0.737162
1           │   0.343366  0.00933964

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.703602  0.00697389
1           │   0.767014    0.128593
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.576218
2  │ 0.0526073
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.779492  0.186935
2     │ 0.788564  0.323455
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.96913  0.267408
2     │ 0.908875  0.588239

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.473469  0.909662
2     │ 0.223467  0.517231
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.592772  0.907393
2     │ 0.384185  0.809758

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.172152  0.142044
2     │  0.16395   0.18829

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.835268  0.799894
2     │ 0.344493  0.333684

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.969276  0.273711
2     │  0.58216  0.525474
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.189229  0.542773
2     │ 0.497744  0.615403

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.884802   0.44532
2     │ 0.519809  0.925568

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0422778   0.432476
2     │  0.678782   0.658291
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.167051  0.969709

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.765933  0.158547
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.740745
2     │  0.40015

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.155869
2     │ 0.223895
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.722049   0.343614
2     │  0.764299  0.0423512
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[11197161442816233100,  6526988131186142725]  =  0.8245215085591815
	[14680060904445900148,  5312631360709731698]  =  0.9636760340726946
	[149971711461182784  , 16544335554558850098]  =  0.47045414993701784
	[8097707444526576530 , 10106592262940987645]  =  0.4937877930266188
	[2520040687452014961 , 10361072080411987344]  =  0.4064208984439981
	[16752464052319560607,  4786699431706339713]  =  0.47860223780038624
	[13897873635935988725,  5062864901616737721]  =  0.114173013181877
	[14770838543801714634, 17678211741433686062]  =  0.8731096282573441
	                                              ⋮
	[15353358267758329479,  4285843451033309381]  =  0.43057688223579604
	[10195714700097307537, 11641483179283066996]  =  0.2537757084469279
	[18180706245899323906,  6332455606016291123]  =  0.47575551621661316
	[4682100877033407764 ,  4182991028086505933]  =  0.2780804518299995
	[15507769097532104225,  2520040687452014961]  =  0.10817255309766316
	[1406197640930237395 ,  1861743268047760089]  =  0.6808669586401319
	[6681257941163664566 , 16840404209865735426]  =  0.6120243596845982
	[15532353619459032979,  3010300210541878305]  =  0.37285834618316227
	[4106283031091570395 , 13690505415342562739]  =  0.8846279592275776Timing named index: 0.000720976, array index: 0.000671639, named key: 0.137189792
Timing sum large sparse array: 0.010816865, named: 0.033483292
done!
INFO: NamedArrays tests passed

>>> End of log
