>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (871.27734375 MB free)
Uptime: 6964.0 sec
Load Avg:  0.8681640625  0.93212890625  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     328860 s        121 s      29725 s     269224 s          9 s
#2  3499 MHz     198752 s       6142 s      24835 s     449772 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.36237641551475663	.35998230625123173	.9179115158970488	.08415298997828091
two	.7599192433682738	.34589416480010904	.8438537231599237	.15666225053856464
a	85
b	61
c	81
d	28
e	7
f	83
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.154006    0.93733   0.373981
b           │ 0.0592534   0.479519   0.866187 0.15400646097532134 0.15400646097532134
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.154006    0.93733   0.373981
b     │ 0.0592534   0.479519   0.866187
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.154006    0.93733   0.373981
b           │ 0.0592534   0.479519   0.866187
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.154006    0.93733   0.373981
b     │ 0.0592534   0.479519   0.866187
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │  0.0677683    0.179667    0.197329    0.729134
er              │   0.631666    0.138021  0.00595945    0.916036
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140433732038992
0-element Named Array{Any,1}

[0.14879131299976645 0.1737062756611556 0.22253113779361744 0.7911100054714184
 0.031145747747091113 0.3551127974942634 0.5478526080651582 0.5937818182304648]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.148791   0.173706   0.222531    0.79111
two   │ 0.0311457   0.355113   0.547853   0.5937822x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.148791   0.173706   0.222531    0.79111
two   │ 0.0311457   0.355113   0.547853   0.5937822x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │  -0.0178362     0.653135  …    -0.219165    -0.914053
2     │    0.626877    -0.324345  …     0.873128    -0.9183911000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.11222     1.21998
2     │   -0.21168     -0.3523
3     │  -0.428956    0.404422
4     │    1.60437   0.0648973
5     │   0.665332    -1.30643
6     │   -2.08037  -0.0278224
7     │  -0.642262   -0.595019
8     │   -1.46501    -1.27742
9     │    1.26296    0.398174
⋮                ⋮           ⋮
992   │    1.74927    -1.61435
993   │  -0.244401    -2.32523
994   │   -1.08146   -0.128081
995   │  -0.587926   -0.318238
996   │  -0.161327   -0.557951
997   │   -1.30477    0.419938
998   │  -0.504297  -0.0904745
999   │  -0.397741    -1.07045
1000  │  0.0442098     0.583441000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.352653
2    │ -0.923196
3    │   1.44136
4    │ 0.0340095
5    │ -0.160418
6    │ -0.815765
7    │  -1.01169
8    │  0.220902
9    │  -1.54291
⋮              ⋮
992  │ -0.685182
993  │  0.438077
994  │ 0.0421852
995  │  0.741967
996  │   1.50864
997  │ -0.410939
998  │    1.0569
999  │  -1.27671
1000 │  -3.127332x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.822082  0.242677
1           │ 0.271465  0.356697

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.184502   0.185804
1           │ 0.0300036   0.122736
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.767188
2  │ 0.950428
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.302846  0.949181
2     │ 0.561315  0.877881
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.206284   0.67502
2     │ 0.170571  0.108077

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │    0.8527   0.894728
2     │  0.408268  0.0317872
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.674513   0.75633
2     │ 0.185526  0.590752

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.868143  0.174408
2     │ 0.529021  0.998234

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.735742  0.612453
2     │ 0.479404  0.422537

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.623046  0.225292
2     │ 0.995717  0.914469
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.913446  0.838254
2     │  0.44748  0.965702

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.409645  0.365617
2     │ 0.349431  0.574834

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.422807  0.243292
2     │ 0.883117  0.682567
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.846132  0.553829

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.644124  0.860672
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.249594
2     │ 0.642711

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.877921
2     │  0.27676
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.949309  0.482123
2     │ 0.807876  0.497314
1000×1000 Named sparse matrix with 110 Float64 nonzero entries:
	[16083059188908835467,  3929618674436644774]  =  0.6385339687286293
	[5853903685320491388 , 13789993170142104254]  =  0.6798620753972542
	[213295357340211673  ,  5312631360709731698]  =  0.2685896797943894
	[6345398762637942383 ,  5312631360709731698]  =  0.222372895237964
	[4553087567028739273 ,  6564272639106249010]  =  0.5582866496453498
	[5089169802387190808 , 14343632987770563929]  =  0.7256797447360908
	[9754155460475440262 , 16462243977607957471]  =  0.4443304325182216
	[312622336801724658  ,  6806539949965918083]  =  0.07317062825133536
	                                              ⋮
	[8069307267129313135 ,  4285843451033309381]  =  0.15871612299030913
	[2758171916068192631 , 12901330087571726961]  =  0.007906043122434703
	[18168544338330653462,     1348625733340586]  =  0.06446976316773867
	[8827948915134371496 ,  4182991028086505933]  =  0.32054762614071275
	[16752464052319560607, 15857670694969494589]  =  0.6994089074699708
	[447754687212557937  , 12169815624147734794]  =  0.16736542795379106
	[12275651637820548197, 16069635275006911712]  =  0.488781980977226
	[8499646773720035521 ,  3733926995351842633]  =  0.5450321013241217
	[13413762311091243877,  6565262192402102057]  =  0.41020374821788486Timing named index: 0.00075374, array index: 0.000984448, named key: 0.13412514
Timing sum large sparse array: 0.012212796, named: 0.027666864
done!
INFO: NamedArrays tests passed

>>> End of log
