>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (869.94140625 MB free)
Uptime: 7275.0 sec
Load Avg:  1.0048828125  0.9560546875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     292377 s         52 s      28042 s     322230 s         14 s
#2  3499 MHz     169563 s         87 s      23559 s     495870 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.782237  0.0341689   0.399036
b           │  0.454256   0.418098   0.478015 0.7822367422922871 0.7822367422922871
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.782237  0.0341689   0.399036
b     │  0.454256   0.418098   0.478015
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.782237  0.0341689   0.399036
b           │  0.454256   0.418098   0.478015
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.782237  0.0341689   0.399036
b     │  0.454256   0.418098   0.478015
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0817013   0.265051   0.565803   0.109534
two   │   0.88146   0.177581   0.602958   0.959856
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.275095   0.36046
1           │ 0.679165  0.223302

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.614122   0.23613
1           │ 0.377469  0.280852
2-element Named Array{Float64,1}
A │ 
──┼──────────
1 │  0.465594
2 │ 0.0295765
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0346321   0.293391
2     │  0.643743  0.0954326
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.264714  0.769371
2     │ 0.874586  0.672524

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.548224  0.781977
2     │ 0.187605  0.613673
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0470049   0.770039
2     │ 0.0797434  0.0470992

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.772517  0.617642
2     │ 0.577632  0.224705

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.46395  0.588648
2     │  0.48371  0.366388

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.528711   0.22708
2     │ 0.769581  0.421415
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.954401  0.918696
2     │ 0.599064  0.576471

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.42284   0.18421
2     │ 0.678486  0.954868

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.525468  0.749504
2     │ 0.399614  0.949199

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.539524  0.195116
2     │ 0.165376  0.789023

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.260723  0.564591
2     │ 0.831841  0.496361

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.941939  0.575087
2     │ 0.933954  0.751269

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.937825   0.89314
2     │ 0.953789  0.602301

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.973811   0.21427
2     │ 0.278964  0.765216
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.869013   0.90369

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.227392  0.676925
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.291806
2     │ 0.213873

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.897048
2     │ 0.268293
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.670387   0.100143
2     │   0.46799  0.0347924
done!
Timing named index: 0.00071441, array index: 0.000465079, named key: 0.071908311
Timing sum large sparse array: 0.007969872, named: 0.01575842
INFO: NamedArrays tests passed

>>> End of log
