>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (840.6171875 MB free)
Uptime: 7102.0 sec
Load Avg:  1.0341796875  0.99365234375  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     335331 s       5493 s      31519 s     263124 s         23 s
#2  3500 MHz     196565 s       2735 s      28794 s     452944 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.44265186283064994	.7521550472130776	.3538385104148476	.491817105793918
two	.6713604803916002	.7529955717975825	.39257300435799647	.7176442717513454
a	98
b	88
c	34
d	4
e	30
f	29
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.359018   0.570159   0.200757
b           │  0.179421   0.172463  0.0943373 0.3590184383164292 0.3590184383164292
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.359018   0.570159   0.200757
b     │  0.179421   0.172463  0.0943373
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.359018   0.570159   0.200757
b           │  0.179421   0.172463  0.0943373
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.359018   0.570159   0.200757
b     │  0.179421   0.172463  0.0943373
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.385732   0.37859  0.994949  0.726246
er              │ 0.342159  0.570072  0.829524  0.767924
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140337372942960
0-element Named Array{Any,1}

[0.8373448706618984 0.9595411019227322 0.2226581878108087 0.7271819859815332
 0.2069591370550854 0.234105007734152 0.3282725571580052 0.468042785143826]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.837345  0.959541  0.222658  0.727182
two   │ 0.206959  0.234105  0.328273  0.4680432x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.837345  0.959541  0.222658  0.727182
two   │ 0.206959  0.234105  0.328273  0.4680432x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.790291     -0.289914  …      -1.93976       1.43023
2     │      1.02574       1.37254  …   -0.00661492     -0.5560591000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.14679     -1.1459
2     │    1.05074     0.19635
3     │   0.591222    0.770491
4     │ -0.0838104    0.397993
5     │   -0.59633     1.59539
6     │  0.0937553    0.020828
7     │   0.500088   -0.581671
8     │ -0.0243584    0.899852
9     │ -0.0016031    0.323035
⋮                ⋮           ⋮
992   │    1.27457     0.88978
993   │   -1.02372    0.228452
994   │   0.528106     2.77557
995   │  -0.244421    -2.09267
996   │   0.574961   -0.232921
997   │   0.296136   -0.300725
998   │  -0.476127    -1.36899
999   │    1.11069    -1.19608
1000  │    1.63421   0.03317081000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.147539
2    │     -1.65
3    │ -0.289017
4    │  0.809071
5    │ -0.589891
6    │   0.56536
7    │   1.31633
8    │  0.562872
9    │ 0.0447445
⋮              ⋮
992  │ -0.757032
993  │ -0.567875
994  │ -0.154225
995  │  -1.20465
996  │ -0.405741
997  │ -0.290796
998  │ -0.213899
999  │    1.3799
1000 │  -2.194862x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.727058  0.864572
1           │ 0.871242  0.179133

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │   0.95775   0.302448
1           │  0.416562  0.0947256
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.458168
2  │  0.87052
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.669955  0.719036
2     │ 0.269366  0.489632
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.224874  0.0327355
2     │  0.774899   0.857009

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.54019  0.598574
2     │ 0.259416  0.900225
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.639686  0.466542
2     │  0.58751  0.878251

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.156427  0.927446
2     │ 0.308462  0.830429

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.989622   0.546183
2     │  0.786238  0.0504145

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.421442  0.247141
2     │  0.66485  0.515758
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0144318   0.528999
2     │  0.670011   0.713687

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.343267  0.959031
2     │ 0.637792  0.857284

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.350287  0.412728
2     │ 0.643929  0.578325
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.696343  0.121604

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.892317   0.73598
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.459108
2     │ 0.241654

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.726359
2     │ 0.0408696
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.590513   0.320453
2     │ 0.0950087   0.152722
1000×1000 Named sparse matrix with 115 Float64 nonzero entries:
	[16767129087052189931,   144428425607543167]  =  0.527972501392544
	[8510717240885107729 ,  6526988131186142725]  =  0.8194720669283106
	[13569143494824923098,  9690422262975321697]  =  0.7394164466453752
	[1811302532022619362 ,  5647414292592918739]  =  0.9519883779222773
	[13093611746678628780,   592365234179887848]  =  0.3586710873537087
	[1094738720364955812 , 14066869468942639955]  =  0.8202960717795447
	[9526148563984720196 ,  8069307267129313135]  =  0.8580967644412822
	[17183594994741436276, 12295598998729798629]  =  0.6017024926163232
	                                              ⋮
	[5078555050773131864 ,  2520040687452014961]  =  0.08493241738833657
	[14475185020288943568,  2520040687452014961]  =  0.8979159742695761
	[18053734596154680288, 11551291857879764225]  =  0.616059299968658
	[10647878191897777347, 11993454575275700781]  =  0.1972653180849313
	[3945256368785098242 , 11470862121108514714]  =  0.31873286076576357
	[911145219565420452  , 11470862121108514714]  =  0.07582132194920721
	[16221828541365357577, 11314283927973801071]  =  0.026826950055259813
	[10213422356137903131, 11527542315164007414]  =  0.4484464892020108
	[13290028645952656732, 16202651256804923129]  =  0.6071090810949626Timing named index: 0.000707493, array index: 0.000467347, named key: 0.07087234
Timing sum large sparse array: 0.007092009, named: 0.016506196
done!
INFO: NamedArrays tests passed

>>> End of log
