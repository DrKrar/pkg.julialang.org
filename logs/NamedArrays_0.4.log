>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (810.4765625 MB free)
Uptime: 8943.0 sec
Load Avg:  0.96142578125  0.931640625  0.9970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     402778 s         71 s      32450 s     375112 s         13 s
#2  3499 MHz     250442 s       6234 s      27833 s     584874 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.9331060971247283	.792230899673418	.11460480271908957	.4651123551345382
two	.7912286695342186	.3416665489214046	.6431657602005918	.6116506746764809
a	57
b	73
c	61
d	79
e	56
f	96
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.176559    0.244823    0.238413
b           │   0.075348      0.7082  0.00280898 0.17655939073413363 0.17655939073413363
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.176559    0.244823    0.238413
b     │   0.075348      0.7082  0.00280898
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.176559    0.244823    0.238413
b           │   0.075348      0.7082  0.00280898
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.176559    0.244823    0.238413
b     │   0.075348      0.7082  0.00280898
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0838429   0.718052   0.608293   0.545268
er              │  0.923263   0.894288   0.687989   0.187675
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140136058470576
0-element Named Array{Any,1}

[0.7027433832200012 0.9337902576702539 0.5267020835484453 0.8669764074301012
 0.09810842594724645 0.42801087134619453 0.9444308025801484 0.7954150954169912]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.702743    0.93379   0.526702   0.866976
two   │ 0.0981084   0.428011   0.944431   0.7954152x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.702743    0.93379   0.526702   0.866976
two   │ 0.0981084   0.428011   0.944431   0.7954152x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.998246   0.00922403  …     0.810708       1.3652
2     │   -0.352499      -0.1599  …    -0.819648      1.025341000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.09174   -0.431434
2     │  -0.656781   -0.326331
3     │   -1.39808    0.378588
4     │    1.02298   0.0818915
5     │    1.14284     1.35113
6     │  0.0452027     1.28728
7     │   -2.01388  -0.0727133
8     │    1.06696   0.0683104
9     │   0.235009      -1.085
⋮                ⋮           ⋮
992   │  -0.806402    0.844106
993   │     2.2333   -0.104643
994   │   -1.20045   -0.812934
995   │  -0.340891    0.969346
996   │   0.304083     1.17247
997   │   -1.05291    0.573088
998   │   0.598393   -0.357878
999   │    1.31521    0.400791
1000  │   0.368472   -0.1040651000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.609373
2    │ -0.567516
3    │  -1.09432
4    │ -0.924718
5    │  -0.10184
6    │ -0.758706
7    │  -1.62506
8    │   2.15223
9    │   1.70401
⋮              ⋮
992  │  -1.41892
993  │  -0.96531
994  │ -0.969903
995  │ -0.895514
996  │ -0.678075
997  │  0.807946
998  │ -0.327997
999  │ -0.111432
1000 │  -0.907732x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.704735  0.923289
1           │ 0.464451  0.324458

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │   0.56602  0.0196897
1           │ 0.0411982   0.857965
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.40245
2  │ 0.892021
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.819914  0.606345
2     │ 0.270547  0.577214
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.16953   0.927668
2     │ 0.0649066    0.69939

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.11653  0.681738
2     │ 0.276494  0.392591
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.12135   0.777617
2     │ 0.0198832   0.497876

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.73939  0.882616
2     │ 0.252245  0.257679

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.397921  0.930716
2     │ 0.950664  0.194678

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.442156    0.1219
2     │ 0.187254  0.623337
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.378098  0.332764
2     │  0.63203  0.121282

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.269882   0.465773
2     │ 0.0865304  0.0267117

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.339355   0.114134
2     │  0.846721  0.0366491
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.211558  0.265025

[:, :, C=2] =
A ╲ B │       1        2
──────┼─────────────────
1     │ 0.67352  0.94425
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.913674
2     │ 0.0695572

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.625595
2     │ 0.736573
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.574092   0.822697
2     │ 0.0203982  0.0951622
1000×1000 Named sparse matrix with 102 Float64 nonzero entries:
	[16320645429046908531, 12419957900638875901]  =  0.5655133771080485
	[1646478019369420967 , 17095493447719212504]  =  0.06329719016882374
	[5643811413442923432 ,  2230070772219402886]  =  0.014563087211189485
	[17925559038321074944,  5839463014734961202]  =  0.4805205634085177
	[4500327340515608799 ,  4302721723742542942]  =  0.16950445253374036
	[5688850749322968570 , 13769040811181486455]  =  0.47290809479955653
	[370154515922583624  , 17448184880248178237]  =  0.20745480641985248
	[8538437388973856756 , 18053734596154680288]  =  0.29047976289559285
	                                              ⋮
	[6947860236989419941 , 12459420750016908814]  =  0.14666200577455046
	[17095493447719212504,  7630593249633640373]  =  0.2196610605291236
	[3753583410179171704 , 11641483179283066996]  =  0.12964321583264837
	[10859735383852441251,  8090338657268802519]  =  0.7220441165358589
	[3228790081375138106 ,  8779884342238752210]  =  0.785423761307374
	[14276971493366205365,  1842419535934980543]  =  0.6828789720233608
	[5629102263838832842 , 11527542315164007414]  =  0.330872134020328
	[12281884974520114934,  4047135350800189603]  =  0.2394796369375991
	[14280380654045797140,  3279378535085980212]  =  0.06088661076132307Timing named index: 0.000617942, array index: 0.000432174, named key: 0.076444886
Timing sum large sparse array: 0.007049689, named: 0.014781791
done!
INFO: NamedArrays tests passed

>>> End of log
