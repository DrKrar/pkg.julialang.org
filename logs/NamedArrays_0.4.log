>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (815.3046875 MB free)
Uptime: 8025.0 sec
Load Avg:  1.09130859375  1.0146484375  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     365379 s       6346 s      28390 s     314827 s         21 s
#2  3500 MHz     223878 s        348 s      24356 s     526118 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.18.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.6612197683192584	.575471038386284	.7581716127001665	.7252534435051299
two	.9248017763829217	.21323725493600598	.46874988682460095	.88176468428689
a	63
b	71
c	40
d	10
e	51
f	18
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.238087  0.243155  0.934174
b           │ 0.866752  0.955293  0.856088 0.23808674029525334 0.23808674029525334
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.238087  0.243155  0.934174
b     │ 0.866752  0.955293  0.856088
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.238087  0.243155  0.934174
b           │ 0.866752  0.955293  0.856088
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.238087  0.243155  0.934174
b     │ 0.866752  0.955293  0.856088
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0181584    0.60961   0.327139    0.23298
er              │  0.918604  0.0976922   0.160432   0.617967
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139864514484576
0-element Named Array{Any,1}

[0.4422976487736636 0.8840089987747024 0.9754439324640998 0.4147450308101204
 0.47163912092784166 0.8362068637965188 0.28940982225942014 0.25331745160824326]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.442298  0.884009  0.975444  0.414745
two   │ 0.471639  0.836207   0.28941  0.2533172x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.442298  0.884009  0.975444  0.414745
two   │ 0.471639  0.836207   0.28941  0.2533172x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.767997     -1.58203  …     0.865546     -1.22478
2     │    -1.16767      1.63464  …     -1.63999    -0.2849871000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -0.30489   -1.11259
2     │  -1.15708  -0.500195
3     │ 0.0538951  -0.551977
4     │ -0.597421   0.103162
5     │  0.442543   0.307653
6     │  0.977572    1.21956
7     │  0.277394   0.595131
8     │  0.665159    1.03124
9     │ -0.391607    0.87595
⋮               ⋮          ⋮
992   │ 0.0760831  -0.761344
993   │  0.779629  -0.841329
994   │ -0.356088  -0.122232
995   │ -0.376034    0.96881
996   │  0.377531  -0.466973
997   │  0.209836    1.22992
998   │ -0.434029    2.09291
999   │ -0.894679  -0.298834
1000  │  -1.39071   0.0210931000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   1.63643
2    │  0.367542
3    │  0.805427
4    │ -0.711147
5    │ -0.747466
6    │ -0.766076
7    │   1.05499
8    │ -0.297399
9    │ -0.337937
⋮              ⋮
992  │  -1.71543
993  │ 0.0555789
994  │   0.38618
995  │  0.746837
996  │  0.820691
997  │ -0.807513
998  │ -0.754701
999  │ 0.0652297
1000 │   0.743942x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.450401  0.159466
1           │ 0.300717  0.826866

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.840674  0.625514
1           │ 0.500105  0.551328
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.902144
2  │ 0.824537
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.41229  0.800184
2     │ 0.137002    0.1657
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0439197   0.962957
2     │  0.678004   0.268911

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.053019  0.216254
2     │  0.17043  0.345153
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.707545   0.331687
2     │  0.165268  0.0765628

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.785174  0.334137
2     │ 0.919565  0.337845

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.758166  0.283008
2     │ 0.423142   0.68081

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.541856   0.296181
2     │ 0.0738467   0.632771
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.136015  0.525957
2     │ 0.978856  0.232944

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.652926  0.521052
2     │  0.59632  0.332318

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.476032  0.300902
2     │ 0.598942  0.887357
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.997511  0.465048

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.454021  0.923383
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.681246
2     │ 0.225675

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.510339
2     │ 0.269006
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.835922   0.167139
2     │ 0.0140874   0.212202
1000×1000 Named sparse matrix with 110 Float64 nonzero entries:
	[6046649976662626325 ,   144428425607543167]  =  0.6430862025523996
	[12295598998729798629, 13888991764943741743]  =  0.8943552871634153
	[16112569381171233070,  4247719799217886270]  =  0.7934981295561496
	[175416465984822993  , 11496001657944805140]  =  0.2992203264847797
	[3029872332119767940 , 10601912832305821454]  =  0.4978050720671239
	[11902824463030858325,  4394159825732135742]  =  0.12490079790090913
	[7667973957612014549 ,  7425701996526302553]  =  0.07295446073416478
	[7580984277293214809 ,  8720304024814141479]  =  0.7669989998904003
	                                              ⋮
	[2202644137930953607 ,  5983786778458205040]  =  0.7491855366778646
	[7736497953838160897 ,  4182991028086505933]  =  0.11646996846618829
	[10086110697249909874, 15436097664388839821]  =  0.5942182922608934
	[4227256904035335927 ,  9526342322394325946]  =  0.5555416394242461
	[9036640481818790821 , 12169815624147734794]  =  0.7736645602722807
	[5490184849613505398 , 10024080200852233627]  =  0.971021401431706
	[15589056775630200950, 16031689834122954645]  =  0.8637433229761673
	[7010853231609596680 ,  3279378535085980212]  =  0.9809518015989287
	[14319986367878219703, 13690505415342562739]  =  0.8552017365853564Timing named index: 0.000613222, array index: 0.000424767, named key: 0.071491935
Timing sum large sparse array: 0.005957847, named: 0.012388706
done!
INFO: NamedArrays tests passed

>>> End of log
