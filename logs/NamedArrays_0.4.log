>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (526.19921875 MB free)
Uptime: 8275.0 sec
Load Avg:  1.1123046875  1.13427734375  1.08642578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     366074 s       5939 s      32008 s     342127 s         12 s
#2  3500 MHz     245870 s        319 s      28458 s     528104 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.998924383097276	.09398756699046151	.8992439303081969	.7300984207027068
two	.6157933660333343	.7252567944609121	.025153989918496045	.15475213573197677
a	18
b	27
c	38
d	62
e	55
f	56
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0312912   0.133854   0.564613
b           │  0.814609  0.0376933   0.684609 0.03129122248454208 0.03129122248454208
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0312912   0.133854   0.564613
b     │  0.814609  0.0376933   0.684609
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0312912   0.133854   0.564613
b           │  0.814609  0.0376933   0.684609
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0312912   0.133854   0.564613
b     │  0.814609  0.0376933   0.684609
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.87145  0.274491  0.535546  0.630701
er              │ 0.722759  0.508959  0.618693  0.822487
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140088045611728
0-element Named Array{Any,1}

[0.3200020306908016 0.54227731217498 0.5116202431067185 0.20288907940957057
 0.16004557495393312 0.48044536128465376 0.7604785782881593 0.9557640290715761]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.320002  0.542277   0.51162  0.202889
two   │ 0.160046  0.480445  0.760479  0.9557642x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.320002  0.542277   0.51162  0.202889
two   │ 0.160046  0.480445  0.760479  0.9557642x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.290896     0.889191  …    -0.127637     -1.31296
2     │    -1.65839    -0.581002  …    0.0243305     -0.585881000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.658864   -0.562123
2     │   0.834302   -0.195769
3     │   0.486577      1.1598
4     │  -0.469036      0.3654
5     │   -0.70797   -0.141979
6     │    2.19013   -0.364516
7     │ -0.0943024   -0.926054
8     │ -0.0548248   -0.400282
9     │    1.47902  -0.0728213
⋮                ⋮           ⋮
992   │   0.844365   0.0600638
993   │  -0.416839    -1.11522
994   │  -0.454391    0.884372
995   │   0.259815   -0.876572
996   │    1.69915    0.534139
997   │   0.752557  -0.0410989
998   │   -1.68978   -0.344303
999   │  -0.347977     1.88207
1000  │  -0.095654    0.8596461000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │   -0.885094
2    │   -0.543917
3    │     1.92233
4    │ -0.00928219
5    │    0.673796
6    │     -1.3781
7    │    0.235397
8    │    -1.64344
9    │    0.801132
⋮                ⋮
992  │    -1.45354
993  │   0.0270333
994  │    0.541935
995  │    0.954469
996  │   0.0193885
997  │   -0.853215
998  │    0.595293
999  │     1.22329
1000 │   0.07182222x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0297034   0.382675
1           │  0.845375   0.246589

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.265608  0.301008
1           │ 0.512753  0.341346
2-element Named Array{Float64,1}
A  │ 
───┼────────
1  │ 0.60692
2  │ 0.95942
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.29586   0.309289
2     │ 0.0913743   0.818347
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.454472  0.566289
2     │ 0.838362  0.545408

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.393004   0.45755
2     │ 0.412845  0.659735
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0105684   0.162535
2     │  0.598595   0.270479

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.373713  0.801377
2     │ 0.709387  0.329467

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.53448  0.143236
2     │ 0.258029  0.531302

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.536638  0.316505
2     │ 0.144441  0.861095
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.91345   0.651798
2     │ 0.0314838   0.135977

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.155227  0.994474
2     │  0.21472  0.788128

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0261435   0.439511
2     │  0.241804   0.446798
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.552516  0.219908

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.779357  0.221537
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.211445
2     │ 0.509967

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.426118
2     │ 0.837004
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0697967   0.517857
2     │  0.312805   0.914386
1000×1000 Named sparse matrix with 87 Float64 nonzero entries:
	[10369386120472232477,  5312631360709731698]  =  0.03958759288416713
	[12195123354423713188, 15422846019410515149]  =  0.8774422269112692
	[12532053171191892965, 11080872162023102847]  =  0.7025528899706586
	[16784990760345090389, 10106592262940987645]  =  0.9505926680294399
	[8237952535892822805 , 18168544338330653462]  =  0.3062932504780842
	[1017373194429467360 ,  1166092285267503990]  =  0.014906702526263915
	[16992521057894414253,  3753583410179171704]  =  0.2719658858697831
	[16408863325498676967,  4565099145871195153]  =  0.3095485633052555
	                                              ⋮
	[5579376550761991812 ,   370154515922583624]  =  0.8605413640012793
	[2764549293755475861 ,  6673174246040850652]  =  0.8543659242077806
	[9754155460475440262 , 13710539999002292266]  =  0.9625813626840092
	[14278035825230678864,  3014575823142358933]  =  0.8916032913196346
	[9570402177660099711 ,  3014575823142358933]  =  0.5472592382993466
	[15537134230127387587,  2520040687452014961]  =  0.726004690276463
	[1831003761424276165 , 12169815624147734794]  =  0.5949876236799496
	[17467549359930456931,  1861743268047760089]  =  0.6974985581212572
	[4127473732802427797 ,  1842419535934980543]  =  0.6297012098349879Timing named index: 0.000127431, array index: 0.000664718, named key: 0.130775338
Timing sum large sparse array: 0.011445709, named: 0.030856898
done!
INFO: NamedArrays tests passed

>>> End of log
