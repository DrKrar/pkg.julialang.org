>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (795.08203125 MB free)
Uptime: 9923.0 sec
Load Avg:  1.0869140625  1.10546875  1.087890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     421794 s       2006 s      45323 s     379560 s        167 s
#2  3500 MHz     299426 s       4871 s      41590 s     546998 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.2
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.14.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.47000446381140115	.08537739003472344	.46747552904982603	.9058524280803721
two	.7047759561216191	.8333032214641536	.426910087119204	.6172122682789303
a	98
b	84
c	39
d	84
e	94
f	69
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.660446  0.0478249   0.832172
b           │  0.131059   0.389326   0.870069 0.6604462631047896 0.6604462631047896
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.660446  0.0478249   0.832172
b     │  0.131059   0.389326   0.870069
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.660446  0.0478249   0.832172
b           │  0.131059   0.389326   0.870069
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.660446  0.0478249   0.832172
b     │  0.131059   0.389326   0.870069
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0650307   0.319674   0.302248   0.459894
er              │  0.139849   0.959666   0.783599   0.368609
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140542314864744
0-element Named Array{Any,1}

[0.5545999909120178 0.08493893886592008 0.5435621904405854 0.7234277224657708
 0.5835811468885026 0.4925898908320614 0.9934364032765957 0.7832019771621723]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │    0.5546  0.0849389   0.543562   0.723428
two   │  0.583581    0.49259   0.993436   0.7832022x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │    0.5546  0.0849389   0.543562   0.723428
two   │  0.583581    0.49259   0.993436   0.7832022x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.645099       -1.1145  …      0.285506     -0.199589
2     │    -0.145442       1.25272  …        1.2859      0.1526911000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0126988   -0.275811
2     │   0.252274    0.420992
3     │    1.88405     1.52357
4     │   0.705368    -0.76747
5     │   0.302825   0.0863786
6     │    1.06527    0.649394
7     │   0.249305   0.0805457
8     │  -0.247788   -0.126838
9     │   0.588715   -0.583703
⋮                ⋮           ⋮
992   │  -0.265779     1.10305
993   │   0.998317    -0.95648
994   │  -0.696749   -0.321324
995   │    -1.5173     -1.1822
996   │   -0.46622     1.15964
997   │ -0.0426892    -0.16818
998   │  -0.950432    0.554294
999   │   0.615372     0.61655
1000  │  -0.116715    -1.058061000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    0.58191
2    │    0.50213
3    │  0.0458289
4    │    1.50189
5    │   -0.41496
6    │   0.237701
7    │  -0.642069
8    │   -1.31015
9    │    0.30567
⋮               ⋮
992  │   0.563823
993  │    1.45984
994  │    -1.4889
995  │    2.23743
996  │    1.07873
997  │    1.50837
998  │  -0.917942
999  │  -0.119562
1000 │ 0.008797772x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.289785  0.304993
1           │ 0.865219   0.71013

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0426857   0.584991
1           │   0.92896   0.530441
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.837045
2  │ 0.829502
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.159656  0.403525
2     │ 0.858767  0.609363
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.818781  0.783126
2     │ 0.278293   0.77096

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.512094  0.556238
2     │ 0.646157   0.28021
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.827612   0.263389
2     │ 0.0957217   0.311613

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.808242  0.204149
2     │ 0.296556  0.572922

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00142126    0.666415
2     │   0.702607    0.252397

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.44858    0.2883
2     │ 0.468911  0.641969
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.388038  0.490715
2     │ 0.563373  0.537994

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.593933   0.971233
2     │  0.541199  0.0584311

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.911372  0.357637
2     │ 0.877581  0.245893
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.873842  0.419503

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.448742  0.0646489
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.436049
2     │  0.33613

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │   0.2159
2     │ 0.834723
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.740085  0.801398
2     │  0.22561  0.634238
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[12532053171191892965,  6526988131186142725]  =  0.8665737490314707
	[1082045492561856594 ,  3929618674436644774]  =  0.2695455913587421
	[6602473287944383244 ,  9920432272297441209]  =  0.9272904357351328
	[281356413667926651  ,  8725235013359650451]  =  0.5121498884740412
	[8779884342238752210 , 16246598853062742192]  =  0.2645409460204933
	[16202651256804923129, 10596751188013898940]  =  0.6730817520194075
	[3672445739059134796 , 13342932250377702532]  =  0.8807938411814002
	[17466052388280872253, 10684064542878956755]  =  0.3760553802748554
	                                              ⋮
	[15537134230127387587,  4682100877033407764]  =  0.048668280765590044
	[16909640532418341430,  4682100877033407764]  =  0.3628386410999487
	[550917644622608724  , 10924666096879366607]  =  0.6176082547861488
	[15589056775630200950,  2117445326293199079]  =  0.3858486412689215
	[15090471957562756503,  9526342322394325946]  =  0.3958984431204291
	[3215182586804062522 , 11470862121108514714]  =  0.8732555992585034
	[8827948915134371496 , 16840404209865735426]  =  0.7929248678143037
	[11902824463030858325,  3733926995351842633]  =  0.9072712959546747
	[7841950699682704949 ,  2588469222286953884]  =  0.9387174251453063Timing named index: 0.000710452, array index: 0.000673127, named key: 0.138917438
Timing sum large sparse array: 0.011500659, named: 0.026563021
done!
INFO: NamedArrays tests passed

>>> End of log
