>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (871.16796875 MB free)
Uptime: 7020.0 sec
Load Avg:  1.01318359375  0.98779296875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     313747 s         50 s      27630 s     290540 s         12 s
#2  3495 MHz     196938 s         96 s      24430 s     458845 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0771405    0.62841   0.215431
b           │  0.196032    0.98729  0.0776244 0.07714047724751616 0.07714047724751616
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0771405    0.62841   0.215431
b     │  0.196032    0.98729  0.0776244
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0771405    0.62841   0.215431
b           │  0.196032    0.98729  0.0776244
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0771405    0.62841   0.215431
b     │  0.196032    0.98729  0.0776244
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.318818  0.730707  0.615185  0.506332
two   │  0.89848  0.612851  0.632018  0.490719
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.908086  0.736167
1           │ 0.734554    0.3394

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.934559   0.41331
1           │ 0.231296  0.817354
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.662517
2 │ 0.662615
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.426136  0.688546
2     │ 0.376562  0.217989
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.924108  0.0643082
2     │  0.763549   0.175143

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.145523  0.795868
2     │ 0.202098  0.944494
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.426828  0.624797
2     │ 0.337263  0.840974

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00777529    0.455301
2     │   0.172411    0.817927

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.391426  0.753715
2     │ 0.989135  0.147805

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.215338   0.75157
2     │ 0.588723  0.865787
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.76712  0.0350342
2     │  0.677844   0.523177

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.440716  0.871961
2     │ 0.607899  0.607083

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.125684   0.938402
2     │ 0.0112823   0.328249

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.635309  0.544381
2     │ 0.220056  0.229961

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.44165  0.734034
2     │ 0.641656  0.883215

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.747528  0.759972
2     │ 0.688039  0.225593

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.155283  0.203474
2     │ 0.312158  0.839706

[:, :, C=2, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.615831   0.196079
2     │ 0.0906822   0.879608
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.696888  0.292804

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.876871  0.394854
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.792525
2     │ 0.985728

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.805926
2     │ 0.145944
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.824441  0.994967
2     │ 0.585531  0.941852
done!
Timing named index: 0.000895536, array index: 0.000775029, named key: 0.132652706
Timing sum large sparse array: 0.013586228, named: 0.026794553
INFO: NamedArrays tests passed

>>> End of log
