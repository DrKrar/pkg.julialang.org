>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (872.44140625 MB free)
Uptime: 6915.0 sec
Load Avg:  1.20458984375  1.046875  1.0537109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     325180 s         50 s      30464 s     267158 s         13 s
#2  3499 MHz     195092 s         91 s      27116 s     444799 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	19262375490436412e-21	.648789816991783	.9476071257640051	.5528671130512159
two	.09480634526988063	.7266375256488367	.1742645218693255	.6893910150560238
a	99
b	27
c	63
d	66
e	41
f	80
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.529039  0.511358  0.453814
b           │ 0.888371  0.790972  0.607332 0.5290386744725939 0.5290386744725939
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.529039  0.511358  0.453814
b     │ 0.888371  0.790972  0.607332
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.529039  0.511358  0.453814
b           │ 0.888371  0.790972  0.607332
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.529039  0.511358  0.453814
b     │ 0.888371  0.790972  0.607332
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.309345   0.45181  0.336077  0.706216
er              │ 0.513266  0.238294  0.695789  0.459996
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139912251544704
0-element Named Array{Any,1}

[0.30250206244472366 0.9223243431652997 0.991524066016612 0.9241259717667847
 0.6307765528948786 0.4238656879774567 0.14858516158632362 0.8755692019811194]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.302502  0.922324  0.991524  0.924126
two   │ 0.630777  0.423866  0.148585  0.8755692x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.302502  0.922324  0.991524  0.924126
two   │ 0.630777  0.423866  0.148585  0.8755692x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.60257      1.15307  …      1.13617     0.626337
2     │    -0.93133     -1.15306  …     0.137671      2.228941000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.76494  -0.0333623
2     │  -0.705416     1.01712
3     │    1.91951    0.204352
4     │  -0.142422   -0.883164
5     │  -0.122066    -0.14341
6     │    1.02196     1.40416
7     │   0.619961   -0.211036
8     │   0.742966  -0.0629787
9     │   0.613328    0.694738
⋮                ⋮           ⋮
992   │    1.02314    0.713791
993   │   -0.64155    0.186655
994   │  -0.483508   -0.141124
995   │    2.73994     1.69021
996   │   -2.99582    0.561947
997   │  -0.541255  -0.0208784
998   │   -1.62475    0.506306
999   │   -0.84835    -1.76346
1000  │  -0.189875   -0.4593471000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.435439
2    │   0.551083
3    │      1.323
4    │    1.46885
5    │   -1.35663
6    │  -0.627348
7    │   0.608471
8    │   0.363183
9    │    1.19522
⋮               ⋮
992  │ -0.0705538
993  │   0.148252
994  │   0.432972
995  │ -0.0630634
996  │   -1.37458
997  │   0.605911
998  │    2.08457
999  │  -0.350436
1000 │   0.2891522x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.372314  0.163162
1           │ 0.572521  0.597774

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.819806  0.0272513
1           │  0.081775   0.728345
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0609428
2  │  0.641131
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.955911  0.903516
2     │  0.14736   0.59611
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.348287  0.521556
2     │ 0.292003  0.499878

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.135598  0.370441
2     │ 0.509705  0.118387
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.625432  0.382136
2     │  0.75452  0.589498

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.72427   0.989008
2     │ 0.0402902   0.335448

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.428421   0.98332
2     │ 0.530281  0.638233

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.444017  0.901208
2     │  0.21445  0.600329
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.438016  0.894874
2     │ 0.722661  0.191921

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.498396  0.941563
2     │ 0.466105  0.607633

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.741154  0.826504
2     │ 0.324035    0.6372
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.769252  0.879377

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.927997  0.911636
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.400182
2     │ 0.258074

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.487657
2     │ 0.549603
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.769728  0.269624
2     │ 0.124101  0.901873
1000×1000 Named sparse matrix with 82 Float64 nonzero entries:
	[665597800756090850  ,  6526988131186142725]  =  0.35794571198795055
	[6681257941163664566 ,   397394769374478572]  =  0.503624163656579
	[12989059827452924244,   113574861176001527]  =  0.27298211519617777
	[15673988649286256572,  9283096199793891681]  =  0.9811531562554154
	[18332040070485059392, 10106592262940987645]  =  0.7443702196296336
	[970153514192176690  ,  8265524791738013937]  =  0.3277993601556328
	[6345398762637942383 ,  1166092285267503990]  =  0.5661988452975639
	[12357008997902541361, 11907679469289587679]  =  0.5578855196063761
	                                              ⋮
	[1082045492561856594 ,  8586548853081112102]  =  0.846265837993238
	[7842570643883840414 ,     1348625733340586]  =  0.3393876942556018
	[3672445739059134796 , 11993454575275700781]  =  0.2982726851674462
	[1021084771360465309 , 10663619072362037589]  =  0.003540544364046161
	[4898605355838645106 , 10655964431342481635]  =  0.756274743697805
	[15465980046630820984, 16031689834122954645]  =  0.6314898973561844
	[175416465984822993  , 11527542315164007414]  =  0.025387814311601087
	[12532053171191892965,  4047135350800189603]  =  0.48342481126353576
	[8471876845144429043 ,  3010300210541878305]  =  0.6323138935370762Timing named index: 0.000914924, array index: 0.000810446, named key: 0.137054956
Timing sum large sparse array: 0.007253813, named: 0.016276637
done!
INFO: NamedArrays tests passed

>>> End of log
