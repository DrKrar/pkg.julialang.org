>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (801.421875 MB free)
Uptime: 8690.0 sec
Load Avg:  0.935546875  0.97021484375  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     380545 s       2090 s      30360 s     368942 s         14 s
#2  3500 MHz     231746 s       4673 s      25978 s     580011 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.2
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.4918717370700094	.4886493128239229	.5329941656081809	.053716919993516354
two	.03308757239648297	.9305610833266844	.2922378129950949	.7673318595729854
a	32
b	10
c	94
d	81
e	56
f	40
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0179352   0.864185   0.232663
b           │  0.123337   0.698663   0.968682 0.01793518756514345 0.01793518756514345
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0179352   0.864185   0.232663
b     │  0.123337   0.698663   0.968682
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0179352   0.864185   0.232663
b           │  0.123337   0.698663   0.968682
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0179352   0.864185   0.232663
b     │  0.123337   0.698663   0.968682
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.442442  0.621831  0.389372  0.456016
er              │ 0.542594  0.447514  0.926292  0.380629
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139675454750992
0-element Named Array{Any,1}

[0.989088635622213 0.587530502269592 0.11388978956294826 0.799566664089195
 0.7412917271310908 0.0823564809779136 0.9715080477833333 0.9978542789847189]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.989089   0.587531    0.11389   0.799567
two   │  0.741292  0.0823565   0.971508   0.9978542x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.989089   0.587531    0.11389   0.799567
two   │  0.741292  0.0823565   0.971508   0.9978542x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │      1.14857      0.571637  …       1.90449      0.073528
2     │     0.134827       1.00037  …     -0.098759       1.641151000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.318507   -1.02991
2     │  0.345984    1.56533
3     │ -0.622181  0.0750304
4     │  0.863644    0.70429
5     │  0.758733   -0.28654
6     │   1.14339  -0.725373
7     │  -0.23546  0.0747742
8     │ -0.138165   0.255371
9     │   1.07663  -0.821974
⋮               ⋮          ⋮
992   │  0.910391   0.616411
993   │ -0.207242  -0.263876
994   │  0.221423    1.61914
995   │   0.63496    1.72692
996   │  0.807227   -1.31968
997   │  -1.36105  -0.152271
998   │ -0.934279  -0.538465
999   │   -1.7877  -0.101569
1000  │  0.805446  -0.4354421000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.921752
2    │  -0.869227
3    │   -1.23557
4    │  -0.562801
5    │  -0.607155
6    │  -0.288628
7    │  -0.749287
8    │    1.07687
9    │   -3.10915
⋮               ⋮
992  │  -0.359044
993  │   -1.70529
994  │    1.03704
995  │    1.67814
996  │ -0.0333955
997  │  -0.597245
998  │   -1.93104
999  │  -0.925348
1000 │   0.4175422x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.534975  0.573261
1           │ 0.647838  0.397435

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.356274   0.15907
1           │ 0.125578  0.496013
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.792109
2  │ 0.145381
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.429082   3.654e-6
2     │ 0.0445655   0.357605
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0962197   0.509952
2     │  0.397715    0.21373

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.663791  0.00496071
2     │   0.829511     0.48761
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.197452  0.616856
2     │  0.13112  0.621345

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.769424   0.684953
2     │ 0.0540933   0.318313

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.792474   0.742197
2     │  0.801667  0.0670425

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.905429  0.491578
2     │ 0.322649  0.240199
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.919041  0.377264
2     │ 0.381431  0.706276

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.426661  0.351896
2     │ 0.441981  0.853931

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.293144  0.973207
2     │ 0.800888  0.291236
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.588689  0.450329

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0826408   0.300064
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.287173
2     │ 0.526509

[:, :, C=2] =
A ╲ B │          1
──────┼───────────
1     │   0.316417
2     │ 0.00922041
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.318161   0.682274
2     │  0.685522  0.0112603
1000×1000 Named sparse matrix with 103 Float64 nonzero entries:
	[14296059709790261690,  5004131969199419793]  =  0.17936732169606695
	[16031689834122954645,  5647414292592918739]  =  0.11690441273895114
	[14881898804895637463,  1703847331300677320]  =  0.6490700733527146
	[10647878191897777347, 14343632987770563929]  =  0.6331655496650697
	[9366363589601885315 , 16544335554558850098]  =  0.46962775208583185
	[9763015172052692524 ,  2230070772219402886]  =  0.26789789168787426
	[2057797465169484997 ,  4394159825732135742]  =  0.8307309997469263
	[11902824463030858325, 10596751188013898940]  =  0.3521485508055837
	                                              ⋮
	[2362724562918981188 , 11641483179283066996]  =  0.49924644344746194
	[584064394420725980  ,  7608520278977511969]  =  0.3699923816594448
	[4500327340515608799 ,  4788923618671962983]  =  0.5904069998692594
	[1082833487325258643 ,  6738482027934271349]  =  0.9839696431127909
	[1017812379485287515 , 17718833055079784125]  =  0.11123083692305147
	[6413456663738881847 , 10024080200852233627]  =  0.6326584654104026
	[2725232909516991235 , 14057278280866812536]  =  0.6063175466339079
	[1030988749247038162 , 16836080019131185762]  =  0.41111890195203804
	[5887916164234050841 , 14599810768241287016]  =  0.9523235775222418Timing named index: 0.000857607, array index: 0.000687421, named key: 0.124615928
Timing sum large sparse array: 0.007336316, named: 0.013560739
done!
INFO: NamedArrays tests passed

>>> End of log
