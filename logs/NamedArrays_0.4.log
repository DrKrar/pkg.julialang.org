>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (802.4296875 MB free)
Uptime: 8989.0 sec
Load Avg:  0.9580078125  0.939453125  1.00341796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     382502 s       1388 s      33543 s     395601 s         15 s
#2  3500 MHz     234866 s       5997 s      29039 s     604976 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.730885583056085	.8360614913376809	.1561442720232622	.11103856422126657
two	.3143052111417828	.34342033949955564	.16500950656656643	.04352380751495888
a	98
b	53
c	79
d	59
e	43
f	80
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.985583  0.584364  0.293402
b           │ 0.314796  0.753621  0.594456 0.9855826582530227 0.9855826582530227
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.985583  0.584364  0.293402
b     │ 0.314796  0.753621  0.594456
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.985583  0.584364  0.293402
b           │ 0.314796  0.753621  0.594456
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.985583  0.584364  0.293402
b     │ 0.314796  0.753621  0.594456
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.889342    0.903228    0.393304  0.00260621
er              │   0.640789    0.915816   0.0750139    0.192958
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140148081310544
0-element Named Array{Any,1}

[0.03877317063988439 0.8865327154763949 0.1959699115966489 0.24612889129298154
 0.46483340386931804 0.05751750650360221 0.05070419981341168 0.1866304186083132]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0387732   0.886533    0.19597   0.246129
two   │  0.464833  0.0575175  0.0507042    0.186632x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0387732   0.886533    0.19597   0.246129
two   │  0.464833  0.0575175  0.0507042    0.186632x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.168941      0.38972  …     0.825726     0.989209
2     │    -1.19731     -1.05545  …     -1.24972    -0.9307011000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.39378  -0.0571942
2     │    0.95236    -1.30698
3     │   0.361066   -0.231882
4     │    -1.1332    0.169838
5     │    1.04723    0.747777
6     │   0.355865    -1.26812
7     │   0.612096    0.243278
8     │  -0.882003   -0.676785
9     │  -0.578586    -1.03836
⋮                ⋮           ⋮
992   │   0.108247   -0.107413
993   │   -1.43019    0.527252
994   │   0.293762    0.768831
995   │  -0.696104    -3.40812
996   │   0.710692   -0.420125
997   │   0.180674   -0.441587
998   │ -0.0721331   -0.950237
999   │ -0.0391752    0.493238
1000  │  -0.630926    -2.542161000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.315533
2    │  0.821864
3    │ -0.707254
4    │  0.523741
5    │ -0.882637
6    │   1.81236
7    │   1.51327
8    │  0.504525
9    │ -0.803327
⋮              ⋮
992  │   0.88307
993  │  -1.60865
994  │   1.01889
995  │ -0.708518
996  │  0.661837
997  │ -0.111273
998  │ -0.893319
999  │  0.250661
1000 │   1.972542x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.020263  0.804946
1           │ 0.993372  0.842589

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.069174  0.992817
1           │ 0.986213  0.793095
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.284777
2  │ 0.302389
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.803811  0.913559
2     │ 0.467127  0.164345
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.193221  0.860938
2     │ 0.839977  0.960652

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.947477  0.384387
2     │ 0.970583  0.556938
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.94578  0.488569
2     │ 0.204057  0.163183

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.482477  0.799886
2     │ 0.625632  0.465438

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.696392  0.991786
2     │  0.28467  0.723994

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.357278  0.652518
2     │ 0.325053  0.484805
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.667059  0.892877
2     │ 0.730731  0.238304

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.987336  0.447774
2     │ 0.764027  0.150468

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.898988  0.178762
2     │ 0.855636  0.909198
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.933569  0.489607

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.582351  0.596211
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.057546
2     │ 0.669477

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.496001
2     │ 0.074087
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.458496  0.193003
2     │ 0.726566  0.358573
1000×1000 Named sparse matrix with 109 Float64 nonzero entries:
	[592365234179887848  ,  9690422262975321697]  =  0.4583368427666523
	[9151636479057027417 ,  6564272639106249010]  =  0.7218852698004936
	[14024883472771630530, 16462243977607957471]  =  0.3189153569786358
	[1566360107212290167 , 11080872162023102847]  =  0.025121890846175665
	[4099991848953537601 ,  4247719799217886270]  =  0.9509657137574252
	[7369566324703660862 , 18443816037252674910]  =  0.7996942788822277
	[6333909840472075512 , 10601912832305821454]  =  0.7697437847068274
	[2050037547392292084 ,  4786699431706339713]  =  0.041012507385247865
	                                              ⋮
	[213295357340211673  , 12680114143357042360]  =  0.32361069275654497
	[5597731276780160114 ,  1566360107212290167]  =  0.07825109464985869
	[15220802300650204788, 14027562189529080231]  =  0.3000081415871467
	[13450619636401767365,  1526691723863411160]  =  0.7964314164908204
	[140805053905483200  ,  5597731276780160114]  =  0.6248158257422676
	[10260179183825814155, 16836080019131185762]  =  0.9311326287374058
	[9861459413671678323 ,  1523061068178304284]  =  0.3192486248925983
	[18381296046359118750, 16840404209865735426]  =  0.25285166715475293
	[9396421306174063237 ,  3733926995351842633]  =  0.8326768984843571Timing named index: 0.001352896, array index: 0.000928096, named key: 0.136761781
Timing sum large sparse array: 0.005974418, named: 0.013688218
done!
INFO: NamedArrays tests passed

>>> End of log
