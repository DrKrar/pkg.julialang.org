>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (794.39453125 MB free)
Uptime: 8940.0 sec
Load Avg:  1.0302734375  0.9453125  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     402680 s       5977 s      32986 s     359809 s         32 s
#2  3499 MHz     245538 s        442 s      29629 s     584911 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.2
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.14.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.6827945682920762	.08122965390407733	.6053334451175596	.6064048107692375
two	.5825409870062823	.38492721125639306	.793841166334597	.41127726977465184
a	45
b	56
c	90
d	7
e	26
f	81
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.593605   0.10043  0.638937
b           │ 0.568648  0.415993  0.848844 0.5936050039025518 0.5936050039025518
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.593605   0.10043  0.638937
b     │ 0.568648  0.415993  0.848844
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.593605   0.10043  0.638937
b           │ 0.568648  0.415993  0.848844
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.593605   0.10043  0.638937
b     │ 0.568648  0.415993  0.848844
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.313119   0.277462   0.540207  0.0378885
er              │  0.504678   0.841454   0.813784   0.551162
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139689519957664
0-element Named Array{Any,1}

[0.8849944176313915 0.384714467360165 0.13675612555261374 0.21242603658550818
 0.411329778633982 0.010358319256779325 0.1311529046740494 0.377464922726082]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.884994   0.384714   0.136756   0.212426
two   │   0.41133  0.0103583   0.131153   0.3774652x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.884994   0.384714   0.136756   0.212426
two   │   0.41133  0.0103583   0.131153   0.3774652x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.874751     -0.094104  …      0.401332      -1.05203
2     │     0.019678     -0.968972  …      0.535044      0.7790771000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0863232    0.993268
2     │   -1.54647    0.431443
3     │   -0.39931     1.32756
4     │   -1.64675   -0.751618
5     │   -1.93723     1.82104
6     │  -0.995666   -0.165758
7     │    -1.6017     -1.0086
8     │   -1.16745     1.22522
9     │ -0.0429835     1.11126
⋮                ⋮           ⋮
992   │   0.660442     0.66491
993   │  -0.119388     1.42362
994   │  -0.670817    -1.39203
995   │   0.186876     -2.3234
996   │  -0.955951   -0.492889
997   │  0.0430028   -0.398214
998   │   -0.84937     1.45325
999   │  -0.353166     1.11405
1000  │    1.04692     1.420881000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -1.21693
2    │     1.2568
3    │  -0.111245
4    │   0.271108
5    │ -0.0790936
6    │    1.52933
7    │  -0.523012
8    │  -0.400523
9    │  -0.666469
⋮               ⋮
992  │  -0.662144
993  │     0.3162
994  │   0.182218
995  │  -0.368936
996  │  -0.354057
997  │   0.852943
998  │   0.873491
999  │  0.0210964
1000 │   0.6494972x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.878928  0.915579
1           │ 0.192793  0.350416

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.124502  0.0758463
1           │  0.523616   0.202938
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.529808
2  │ 0.0887657
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.235541   0.677669
2     │  0.792291  0.0169015
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.959609    0.71608
2     │  0.559693  0.0824836

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.573484    0.491365
2     │ 0.00160232    0.469004
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.921774  0.049206
2     │  0.81934   0.03805

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0873446   0.522996
2     │  0.509508   0.487301

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.699398  0.839414
2     │ 0.700867  0.323221

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.737426  0.274552
2     │ 0.116827  0.979583
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.953419  0.801954
2     │ 0.632561  0.635662

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.904775   0.124054
2     │  0.465398  0.0543203

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.737336  0.779608
2     │ 0.231161  0.206504
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.898508  0.797993

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.977354  0.408205
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.101118
2     │  0.35226

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.428654
2     │  0.62807
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.475313  0.642011
2     │ 0.187685  0.298753
1000×1000 Named sparse matrix with 108 Float64 nonzero entries:
	[16501174925917855829,  3929618674436644774]  =  0.0903896754207838
	[5643811413442923432 ,  5004131969199419793]  =  0.9308017705252274
	[14071609933964289859,  5004131969199419793]  =  0.14718381002607517
	[10260179183825814155, 13888991764943741743]  =  0.025900115312419425
	[8237952535892822805 , 16462243977607957471]  =  0.15374897130125653
	[16428336034292508128,  5927176887743683346]  =  0.7754106520512869
	[8215529161129330866 ,  2230070772219402886]  =  0.9752888546013931
	[13544680138434484894,  4394159825732135742]  =  0.6110488069773836
	                                              ⋮
	[12376285854513575894,  2520040687452014961]  =  0.4872226998868585
	[13998600730537104788,  4788923618671962983]  =  0.9596182407305462
	[4420061231740490028 , 15857670694969494589]  =  0.002223613056836271
	[12989059827452924244,  5597731276780160114]  =  0.40329439861162286
	[14774945750507892610, 14057278280866812536]  =  0.535705119077891
	[8037924722734667669 ,  1203336841330469213]  =  0.7094695876816988
	[8007573817878288530 , 16202651256804923129]  =  0.4507624984763816
	[4207351995360724518 ,  7957587899775749890]  =  0.2912978707800167
	[58636073693946575   ,  6565262192402102057]  =  0.7240091166845839Timing named index: 0.000712309, array index: 0.000331056, named key: 0.138938474
Timing sum large sparse array: 0.011474344, named: 0.03192657
done!
INFO: NamedArrays tests passed

>>> End of log
