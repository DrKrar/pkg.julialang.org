>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.5
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (782.98046875 MB free)
Uptime: 7692.0 sec
Load Avg:  1.05810546875  1.060546875  1.09228515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     296573 s         71 s      31450 s     353391 s         16 s
#2  3499 MHz     186182 s         69 s      27986 s     524188 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.8.8
 - DataStructures                0.4.5
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.219595   0.65046  0.838935
b           │ 0.870749  0.797169   0.12879 0.21959460032789546 0.21959460032789546
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.219595   0.65046  0.838935
b     │ 0.870749  0.797169   0.12879
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.219595   0.65046  0.838935
b           │ 0.870749  0.797169   0.12879
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.219595   0.65046  0.838935
b     │ 0.870749  0.797169   0.12879
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │   0.4689   0.29157  0.958294  0.883357
two   │ 0.945586  0.511388  0.876922  0.431919
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.252187  0.605801
1           │ 0.290023  0.764967

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.370422  0.651885
1           │    0.162  0.947534
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.837485
2 │ 0.996422
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.13816  0.363809
2     │ 0.595746  0.606217
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.403302    0.1714
2     │ 0.862462  0.626649

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.692141  0.645893
2     │ 0.376095  0.244946
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.587168  0.178621
2     │ 0.489345  0.100305

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.117368  0.125023
2     │ 0.356506  0.784305

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.702945   0.70663
2     │ 0.782986   0.44931

[:, :, C=2, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.304591   0.0999913
2     │   0.219055  0.00713083
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.544544  0.248466
2     │ 0.429565  0.952577

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.239957  0.159504
2     │ 0.783031  0.754233

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.74143   0.570908
2     │  0.915804  0.0525801

[:, :, C=2, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00303725   0.0406939
2     │   0.837399    0.714225

[:, :, C=1, D=1, E=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00280069    0.797538
2     │   0.627566    0.778609

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.871004  0.558638
2     │ 0.201922  0.105911

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.584133  0.0271879
2     │  0.838116   0.954094

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.440826  0.868888
2     │  0.22747  0.890548
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0391173   0.851727

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.304917  0.313404
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.875986
2     │ 0.999823

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.398457
2     │ 0.728677
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.484716  0.846351
2     │  0.31016  0.489003
done!
Timing named index: 0.000725916, array index: 0.000481596, named key: 0.072092067
Timing sum large sparse array: 0.020361803, named: 0.023187771
INFO: NamedArrays tests passed

>>> End of log
