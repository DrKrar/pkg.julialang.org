>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (845.97265625 MB free)
Uptime: 7092.0 sec
Load Avg:  0.97802734375  0.974609375  1.0654296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     329202 s       5033 s      31586 s     269991 s         14 s
#2  3500 MHz     212169 s       1505 s      28888 s     445214 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.9496478329564566	.35474912983725093	.14816872231704314	.2535554056098315
two	.874087886870135	.37213230150392107	.28636292130552876	.759711556084975
a	80
b	30
c	90
d	22
e	58
f	97
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.394086  0.0625105   0.137144
b           │   0.54756   0.183876   0.555425 0.3940860109587374 0.3940860109587374
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.394086  0.0625105   0.137144
b     │   0.54756   0.183876   0.555425
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.394086  0.0625105   0.137144
b           │   0.54756   0.183876   0.555425
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.394086  0.0625105   0.137144
b     │   0.54756   0.183876   0.555425
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │   0.11341  0.0471312    0.96047    0.52697
er              │  0.310682     0.5718   0.431032   0.214751
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140635347785936
0-element Named Array{Any,1}

[0.21016930089746721 0.12774878008799395 0.8151513196846336 0.530903691043425
 0.7310253859169171 0.6460347968851525 0.9426496728624116 0.43607628382494545]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.210169  0.127749  0.815151  0.530904
two   │ 0.731025  0.646035   0.94265  0.4360762x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.210169  0.127749  0.815151  0.530904
two   │ 0.731025  0.646035   0.94265  0.4360762x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.623136     0.505447  …     0.898238    -0.368354
2     │    0.657464     -1.35313  …    -0.521681    -0.0733381000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.73707    0.988179
2     │   0.669224     1.67648
3     │  -0.444707   -0.277237
4     │ -0.0131956    0.300147
5     │ -0.0293052   -0.791839
6     │   0.191814   -0.197033
7     │     0.4334   -0.638186
8     │   0.558361    -1.54343
9     │  -0.568051    0.867499
⋮                ⋮           ⋮
992   │   -1.32832   -0.662218
993   │   0.470751   -0.920563
994   │   0.353307     1.73701
995   │  -0.121505    0.405879
996   │  -0.361516    0.431915
997   │    0.62531   -0.873492
998   │    1.39264   -0.637206
999   │   0.994127    0.832416
1000  │    1.56788    -1.374861000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │    -1.14189
2    │    -1.46827
3    │    -1.30575
4    │    0.273449
5    │     1.96471
6    │ -0.00930384
7    │  -0.0150264
8    │    0.721085
9    │    0.588988
⋮                ⋮
992  │    0.914174
993  │    0.855437
994  │    0.619538
995  │   -0.249497
996  │    -2.05012
997  │    0.179012
998  │  -0.0654651
999  │    -1.01485
1000 │   -0.6397162x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.337891  0.690289
1           │ 0.379225  0.952359

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0500548   0.931056
1           │  0.580684    0.64603
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.817104
2  │ 0.139163
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.549833  0.430522
2     │ 0.317117  0.221555
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.422236  0.515673
2     │ 0.577585  0.356171

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.579965  0.700638
2     │ 0.504723  0.939141
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.531388   0.816703
2     │  0.509068  0.0146258

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.482491  0.480421
2     │ 0.818864  0.134675

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.783306  0.258098
2     │ 0.654251  0.222233

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.771017  0.873129
2     │ 0.501748  0.853815
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.881871  0.491656
2     │ 0.990659  0.926418

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.912781  0.917397
2     │ 0.897362  0.504659

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.500338   0.39129
2     │    0.859   0.96173
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.471226  0.0110218

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.53739  0.522654
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.472579
2     │ 0.141015

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.695961
2     │ 0.818518
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.910513  0.540423
2     │ 0.479404  0.389987
1000×1000 Named sparse matrix with 103 Float64 nonzero entries:
	[15532353619459032979, 12419957900638875901]  =  0.43679783741341516
	[5376462565789896363 , 15422846019410515149]  =  0.7083360448368348
	[11641483179283066996,  5927176887743683346]  =  0.15426123969907835
	[11993454575275700781, 14066869468942639955]  =  0.3683104825874888
	[3029636859866978704 ,  9920432272297441209]  =  0.19626899219657878
	[2436126165640975798 ,  9920432272297441209]  =  0.24299448738080187
	[15935843203573098002,  9283096199793891681]  =  0.6151417722581121
	[6216214939212987967 , 11496001657944805140]  =  0.05195599963524855
	                                              ⋮
	[1389137670392774052 ,  1566360107212290167]  =  0.987594406954694
	[4515533440070525328 , 14169799449801373117]  =  0.11519735146238141
	[8265524791738013937 ,  4285843451033309381]  =  0.6844002893995824
	[14580339014010232292,  4788923618671962983]  =  0.045866822590634015
	[11170828617377134633, 15436097664388839821]  =  0.683478409660204
	[10924666096879366607, 17718833055079784125]  =  0.7273341783135714
	[437360754480709846  ,  9223427034658990711]  =  0.2459471781017033
	[2588469222286953884 ,  3010300210541878305]  =  0.47601788680737833
	[6081783302736743377 ,  2588469222286953884]  =  0.17614136172860184Timing named index: 0.0011175, array index: 0.000964695, named key: 0.127978711
Timing sum large sparse array: 0.007658671, named: 0.016793244
done!
INFO: NamedArrays tests passed

>>> End of log
