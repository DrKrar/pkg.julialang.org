>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (874.84765625 MB free)
Uptime: 7589.0 sec
Load Avg:  0.87890625  0.947265625  1.01513671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     355884 s       6384 s      28362 s     294949 s         14 s
#2  3499 MHz     222794 s         89 s      24084 s     489846 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.4410224541307468	.20844764550213069	.9079453188387419	.20375528695165146
two	.2685027402943423	.4894410490531498	.14169026573201204	.25133002834195217
a	92
b	95
c	83
d	91
e	64
f	76
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0399125   0.631007   0.073625
b           │  0.532339   0.537493   0.510224 0.03991254291911628 0.03991254291911628
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0399125   0.631007   0.073625
b     │  0.532339   0.537493   0.510224
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0399125   0.631007   0.073625
b           │  0.532339   0.537493   0.510224
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0399125   0.631007   0.073625
b     │  0.532339   0.537493   0.510224
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.216313  0.875925  0.359811  0.796412
er              │ 0.201909  0.280119  0.200007  0.836831
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140380753586464
0-element Named Array{Any,1}

[0.44065203180303825 0.8540740547995487 0.827743147468252 0.39500372347483603
 0.5397567384530233 0.33278584132333333 0.3758889120942672 0.6237510061517915]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.440652  0.854074  0.827743  0.395004
two   │ 0.539757  0.332786  0.375889  0.6237512x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.440652  0.854074  0.827743  0.395004
two   │ 0.539757  0.332786  0.375889  0.6237512x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.800356     0.0615068  …     -0.857683       1.55702
2     │      1.36704     0.0548576  …     -0.806982      0.0278421000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.918898    0.110368
2     │   0.527128    0.535601
3     │  -0.976591   -0.229509
4     │  -0.404712      1.7098
5     │   0.883401     -1.5662
6     │  -0.577643    0.116525
7     │ -0.0342601   -0.476733
8     │   0.166363     1.14839
9     │    1.45553   -0.577443
⋮                ⋮           ⋮
992   │  0.0344291   -0.285258
993   │    -1.2394     -1.0643
994   │   -0.38524    0.629924
995   │   -2.18149    0.431547
996   │    2.12974    0.649814
997   │  -0.556143     0.88947
998   │   0.256889   -0.390067
999   │   -1.48588    0.721595
1000  │   -0.66016   -0.9075311000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.628599
2    │  0.764264
3    │  -2.00696
4    │  0.280968
5    │  0.577152
6    │ -0.578781
7    │ -0.976539
8    │ -0.584207
9    │  0.451715
⋮              ⋮
992  │ -0.686945
993  │ -0.453756
994  │  0.773896
995  │  0.190047
996  │ -0.417662
997  │  -1.45525
998  │    0.4787
999  │     2.156
1000 │ -0.5982152x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.830139  0.393622
1           │ 0.616855  0.918405

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.671111  0.598703
1           │ 0.776152  0.459952
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.143997
2  │ 0.239784
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.492579  0.995113
2     │ 0.329512  0.326394
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.884943  0.829849
2     │ 0.875159  0.857472

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.430886  0.693198
2     │ 0.268565  0.455146
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.287134  0.745622
2     │ 0.392831  0.449047

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.439293  0.675191
2     │  0.42631  0.140482

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.614582  0.318878
2     │ 0.901995  0.251581

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.134316  0.0673368
2     │  0.697077   0.201668
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.687883  0.530509
2     │ 0.487356   0.78472

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.962986  0.684412
2     │ 0.523586  0.506407

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.971012  0.799529
2     │ 0.812167  0.770414
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.763671  0.759843

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603087   0.26282
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.319033
2     │  0.57157

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.542117
2     │ 0.879071
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.120819  0.821827
2     │ 0.756641  0.600522
1000×1000 Named sparse matrix with 89 Float64 nonzero entries:
	[2265917884294506251 ,  8699333159457747740]  =  0.8026891252878146
	[17742935406460696265,  5647414292592918739]  =  0.7586270144777858
	[15042065790022137782, 13789993170142104254]  =  0.5168682800108422
	[9187579804086460617 , 12419957900638875901]  =  0.8104022604605345
	[11202982330472117227, 10596751188013898940]  =  0.8909977086071152
	[4490952960035913511 ,  4302721723742542942]  =  0.300184654415117
	[1628675476083889103 , 12532053171191892965]  =  0.8691018773028931
	[7010853231609596680 , 18053734596154680288]  =  0.18660367191866212
	                                              ⋮
	[14382878888079666374,  2318046236442875673]  =  0.394172759460788
	[3039451196773527828 ,  2520040687452014961]  =  0.14050092691625782
	[14135817040960565167, 11993454575275700781]  =  0.5953345895445601
	[6703675861229591273 ,  8779884342238752210]  =  0.462795099926981
	[144428425607543167  , 11314283927973801071]  =  0.4909734015269578
	[18012118909807029393, 11314283927973801071]  =  0.526622587040378
	[11565746237708632912, 13950575499123628905]  =  0.37804511460530943
	[4346281677867421151 ,   427459847123490633]  =  0.023343198779119723
	[15607310917841701902,  7519919299137062942]  =  0.06765823129634208Timing named index: 0.000615132, array index: 0.000435469, named key: 0.072969108
Timing sum large sparse array: 0.007332564, named: 0.016449017
done!
INFO: NamedArrays tests passed

>>> End of log
