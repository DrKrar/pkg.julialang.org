>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (862.73828125 MB free)
Uptime: 7843.0 sec
Load Avg:  1.02294921875  1.0322265625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     359409 s         89 s      31383 s     316567 s         22 s
#2  3499 MHz     238491 s       6553 s      27686 s     483115 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6990268148203509	.2232340142142304	.2782834536844785	.4969681368603125
two	.20161583102716096	.49797257275722817	.0006072204750091625	.73984767645019
a	13
b	21
c	45
d	6
e	99
f	51
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.899992  0.514438  0.705127
b           │ 0.304709  0.784653  0.351958 0.8999922874543032 0.8999922874543032
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.899992  0.514438  0.705127
b     │ 0.304709  0.784653  0.351958
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.899992  0.514438  0.705127
b           │ 0.304709  0.784653  0.351958
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.899992  0.514438  0.705127
b     │ 0.304709  0.784653  0.351958
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.41171  0.783819  0.579638  0.690988
er              │ 0.749749  0.512702  0.612802  0.774538
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140526803891432
0-element Named Array{Any,1}

[0.08218684992651681 0.4911104860269173 0.1047243971323395 0.24513498286590218
 0.7914335897275944 0.09583342661081096 0.8757161247644756 0.3987245133022317]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0821868    0.49111   0.104724   0.245135
two   │  0.791434  0.0958334   0.875716   0.3987252x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0821868    0.49111   0.104724   0.245135
two   │  0.791434  0.0958334   0.875716   0.3987252x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.477107      0.774225  …      0.764105     0.0367876
2     │     0.529457        1.4925  …      -1.27689     -0.6104511000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.654339   -0.397766
2     │   -1.91004    0.343911
3     │ 0.00673859      1.5499
4     │   0.155254   -0.814307
5     │    0.76635    -0.22802
6     │    0.77036   -0.628254
7     │   0.670864    0.261329
8     │  -0.829814   0.0172178
9     │  -0.384606    0.134119
⋮                ⋮           ⋮
992   │  0.0190001     -0.8571
993   │   -1.24721    -1.79524
994   │   -1.17996   -0.719281
995   │  -0.706902  -0.0617716
996   │    0.27994  0.00530759
997   │ -0.0363526    0.525097
998   │    0.22285     0.37992
999   │   -1.64384    0.926434
1000  │    3.15652    -1.066721000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -0.98631
2    │   0.570102
3    │  -0.938613
4    │ -0.0342993
5    │    1.06819
6    │   -1.68505
7    │  -0.873784
8    │   -0.79276
9    │  -0.720806
⋮               ⋮
992  │  -0.116157
993  │    1.57773
994  │    1.14438
995  │    -1.4014
996  │   -1.94575
997  │   -1.02097
998  │  -0.888952
999  │   -1.51003
1000 │   -2.341362x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.299095  0.406894
1           │ 0.347519  0.836384

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.633942  0.945143
1           │ 0.873781  0.154833
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.487215
2  │ 0.503119
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.872866  0.667031
2     │ 0.617139   0.84602
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.11435  0.813013
2     │ 0.502053  0.713375

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.167366  0.823447
2     │ 0.110738  0.591553
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.600967  0.739706
2     │ 0.800093  0.201259

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.972243   0.74483
2     │ 0.880011  0.986198

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.623823  0.0602828
2     │  0.143981   0.149382

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.190703  0.288681
2     │ 0.866591  0.227933
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0698554   0.661198
2     │  0.295385  0.0776887

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.142945  0.108995
2     │ 0.876635  0.529723

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.135025  0.414118
2     │ 0.854939  0.355991
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.793005  0.120425

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.984249  0.751366
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.293687
2     │ 0.171928

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.259819
2     │  0.73537
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.52615    0.8219
2     │ 0.986352  0.266371
1000×1000 Named sparse matrix with 120 Float64 nonzero entries:
	[9896174471843564741 ,  4400785119912308702]  =  0.5558865155977046
	[9199495910664250546 , 14304565767364922256]  =  0.19907508931876894
	[444710347873990685  ,  5647414292592918739]  =  0.11332625873228963
	[6703675861229591273 , 13789993170142104254]  =  0.4937863074159756
	[6564272639106249010 , 12419957900638875901]  =  0.4663094320655248
	[971859988095984883  , 17095493447719212504]  =  0.5023169256396014
	[8568476733645628391 ,  8058121953372963805]  =  0.5022605307271033
	[4515533440070525328 ,  4786699431706339713]  =  0.4231738565230292
	                                              ⋮
	[330671966510912082  , 16655780295490676025]  =  0.5877710823735085
	[898568979075944978  ,  4214085865611670439]  =  0.7445661580267813
	[7083487105814040007 ,  9526342322394325946]  =  0.8367660522730083
	[9920432272297441209 , 11711005111088208244]  =  0.10040997476876767
	[3338620543423332411 , 12169815624147734794]  =  0.3266011399372173
	[14626872821461025492, 11470862121108514714]  =  0.8004049650559246
	[3029636859866978704 ,  3279378535085980212]  =  0.14280964073976388
	[16147086907566520640, 13950575499123628905]  =  0.4788509461954693
	[140805053905483200  , 14599810768241287016]  =  0.2520204850998098Timing named index: 0.000733605, array index: 0.000753683, named key: 0.130914612
Timing sum large sparse array: 0.01461659, named: 0.013622762
done!
INFO: NamedArrays tests passed

>>> End of log
