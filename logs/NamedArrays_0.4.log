>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (873.16796875 MB free)
Uptime: 6976.0 sec
Load Avg:  0.84375  0.90234375  0.9873046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     316108 s         56 s      26803 s     287818 s         15 s
#2  3499 MHz     204607 s         92 s      23024 s     449762 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.587883832646781	.9473395271100387	.4611217260263927	.04514532333681154
two	.13069658075397395	.8315911852236206	.827889311153339	.45575939058149206
a	49
b	69
c	27
d	58
e	5
f	49
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0777164   0.215979   0.314886
b           │  0.734598   0.978823   0.143199 0.07771639770369454 0.07771639770369454
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0777164   0.215979   0.314886
b     │  0.734598   0.978823   0.143199
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0777164   0.215979   0.314886
b           │  0.734598   0.978823   0.143199
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0777164   0.215979   0.314886
b     │  0.734598   0.978823   0.143199
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.262529  0.103333  0.582056  0.949401
er              │   0.1423  0.850593  0.443003  0.396043
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140077538038576
0-element Named Array{Any,1}

[0.32382266846418895 0.25822082276464076 0.898057213823167 0.6330780548491342
 0.21641327358454343 0.8900940911323703 0.6391180174945426 0.690351135694266]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.323823  0.258221  0.898057  0.633078
two   │ 0.216413  0.890094  0.639118  0.6903512x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.323823  0.258221  0.898057  0.633078
two   │ 0.216413  0.890094  0.639118  0.6903512x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │  -0.0394998     0.485141  …      1.22102    -0.537593
2     │   -0.141314     0.685309  …      1.03306       2.04131000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.827619     1.44784
2     │ -0.0508803     1.01852
3     │    1.62484    0.259581
4     │  -0.447098     1.27087
5     │   0.054972  -0.0147263
6     │   -1.53328    0.814419
7     │  -0.380322    -1.30593
8     │   -1.22069    0.530187
9     │    1.00335     1.14782
⋮                ⋮           ⋮
992   │    1.76887   -0.669497
993   │    1.63128   -0.436041
994   │  -0.010832   -0.613632
995   │   0.452978   -0.365725
996   │   -0.95362      1.4058
997   │   0.984284   -0.807646
998   │   -1.50825    -0.86606
999   │    1.39625      2.5066
1000  │  -0.983376     1.073491000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.288047
2    │  -1.03799
3    │ -0.109317
4    │ -0.491424
5    │  0.549578
6    │   1.50485
7    │ -0.157399
8    │  -1.70339
9    │ -0.686526
⋮              ⋮
992  │   1.82955
993  │  0.930087
994  │  -2.10965
995  │ -0.689196
996  │  -0.12478
997  │   1.55559
998  │  -1.24257
999  │  0.303588
1000 │   2.273762x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.697691   0.226926
1           │ 0.0343774   0.176369

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.584446  0.943815
1           │ 0.284035  0.335717
2-element Named Array{Float64,1}
A  │ 
───┼───────────
1  │ 0.00310095
2  │    0.87839
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.923429  0.176845
2     │ 0.835326  0.893957
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.93999  0.344505
2     │ 0.165751  0.749979

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0105918    0.84367
2     │  0.563271   0.828787
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.181503  0.853004
2     │ 0.252813  0.426526

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.700844  0.261867
2     │ 0.499893  0.418333

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.909884  0.441142
2     │ 0.168699  0.278587

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.801492  0.382767
2     │ 0.517596  0.609535
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0875738   0.131565
2     │  0.671402   0.860001

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.250883  0.308754
2     │  0.19104  0.555552

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.788517  0.398119
2     │ 0.527426  0.722777
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0699587   0.829269

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.810659  0.194809
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.247537
2     │ 0.0109349

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.393867
2     │ 0.592505
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.93081  0.280454
2     │ 0.245298  0.816047
1000×1000 Named sparse matrix with 98 Float64 nonzero entries:
	[18443722453013281811,  6526988131186142725]  =  0.5312751396782418
	[4515533440070525328 ,  9920432272297441209]  =  0.8820070315393747
	[16149616971335246819,  7199089960335318010]  =  0.7538767841571243
	[9896174471843564741 ,  3039451196773527828]  =  0.2733954050201075
	[18320751966872690453, 16408863325498676967]  =  0.9678261626971205
	[5839463014734961202 , 10596751188013898940]  =  0.8990772594169696
	[9896174471843564741 , 17609421066205025733]  =  0.014689153810340194
	[1203336841330469213 , 15493082059768908559]  =  0.554564667420697
	                                              ⋮
	[7388874443385012746 , 13710539999002292266]  =  0.30545910774801577
	[13068922020419317632, 10924666096879366607]  =  0.07406563458902493
	[11259093931184787670, 18148906667482527649]  =  0.21980464130372912
	[16909640532418341430,  4214085865611670439]  =  0.7668887534588444
	[9440739376838893158 ,  8090338657268802519]  =  0.3364269850684587
	[8090338657268802519 , 12169815624147734794]  =  0.22781656776569892
	[12320581818220641024,  7989582431359101293]  =  0.21599391644332844
	[13867334145892551164, 16840404209865735426]  =  0.25030862476411997
	[13824790180967006716, 15240003619098155971]  =  0.04500904627681268Timing named index: 0.00073901, array index: 0.000771856, named key: 0.129947735
Timing sum large sparse array: 0.012088167, named: 0.025376684
done!
INFO: NamedArrays tests passed

>>> End of log
