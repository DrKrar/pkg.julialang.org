>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (875.40625 MB free)
Uptime: 7012.0 sec
Load Avg:  0.8271484375  0.8720703125  0.97509765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     317685 s         97 s      27894 s     286466 s         15 s
#2  3499 MHz     201338 s         40 s      24394 s     454518 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5816532464249489	.3550328716499296	.1251638567687552	.21840734916532334
two	.006327901254425727	.8115990134741191	.45461139738682155	.5410441305908629
a	32
b	91
c	74
d	7
e	72
f	33
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.275924  0.523103  0.977748
b           │ 0.488559  0.734977  0.149495 0.2759240761100339 0.2759240761100339
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.275924  0.523103  0.977748
b     │ 0.488559  0.734977  0.149495
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.275924  0.523103  0.977748
b           │ 0.488559  0.734977  0.149495
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.275924  0.523103  0.977748
b     │ 0.488559  0.734977  0.149495
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.539333   0.90502  0.216102  0.501321
er              │ 0.941115  0.542514  0.220909  0.675521
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140669484594912
0-element Named Array{Any,1}

[0.07868218100350077 0.3942012534702568 0.8980178137792825 0.4519275510808065
 0.5007798648532047 0.7803578123361534 0.6365194004492902 0.05274089740050081]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0786822   0.394201   0.898018   0.451928
two   │   0.50078   0.780358   0.636519  0.05274092x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0786822   0.394201   0.898018   0.451928
two   │   0.50078   0.780358   0.636519  0.05274092x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.14004      0.422154  …      -1.19854      0.782018
2     │   -0.0777317      0.703703  …       1.78773     -0.2238081000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.366087   -0.161558
2     │   0.147547     0.63426
3     │    0.45519   -0.515428
4     │    2.28743   -0.320908
5     │ -0.0182772    0.355349
6     │   -0.79862    0.673921
7     │    1.71572     1.78026
8     │   0.700704    0.595899
9     │    1.01207    -1.29177
⋮                ⋮           ⋮
992   │    1.83595   -0.395919
993   │     1.1396   -0.792516
994   │  -0.383604    -1.00181
995   │  -0.024099   -0.603544
996   │  -0.617967     1.13304
997   │   0.679864    -2.40468
998   │    1.31015   -0.615917
999   │    2.31595   -0.720421
1000  │   0.516725   -0.5849411000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.441754
2    │   -1.50384
3    │  -0.231869
4    │    0.34884
5    │ -0.0506683
6    │   -1.14288
7    │     1.2313
8    │    1.21896
9    │   -0.39518
⋮               ⋮
992  │   0.197863
993  │  -0.963389
994  │  -0.104833
995  │      1.967
996  │  0.0485613
997  │    2.28064
998  │ -0.0294939
999  │  0.0651484
1000 │  -0.4434652x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.341901  0.471956
1           │ 0.814226  0.966034

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.817483  0.377387
1           │ 0.701578  0.909705
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.731648
2  │  0.25257
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │   0.2963  0.788716
2     │ 0.106655  0.625012
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.933754  0.807076
2     │ 0.059868   0.80549

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0664485   0.929529
2     │ 0.0432074   0.157872
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.938286  0.112175
2     │ 0.740765  0.214237

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0399485   0.509346
2     │  0.788942   0.918699

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.541449  0.621243
2     │  0.63002  0.768625

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0645589   0.544435
2     │  0.154104    0.52655
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.264264  0.286802
2     │ 0.451528  0.413829

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.47226  0.368671
2     │ 0.756922  0.607969

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.939972  0.694593
2     │ 0.700994  0.480907
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.535451  0.315493

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.180347  0.904945
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.238097
2     │ 0.751365

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0372791
2     │  0.222346
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.942622   0.50808
2     │   0.1032  0.942594
1000×1000 Named sparse matrix with 98 Float64 nonzero entries:
	[14066869468942639955, 17095493447719212504]  =  0.5718597900255089
	[10504931430957650557,  5927176887743683346]  =  0.34141045145089843
	[11660797228701312840,  9283096199793891681]  =  0.9234768782782623
	[12819963352506822510,  8725235013359650451]  =  0.3080291004734901
	[6413456663738881847 , 16246598853062742192]  =  0.4500532218993747
	[770286245341647776  ,  8097707444526576530]  =  0.8661260395737389
	[5723128691850249417 ,  6065204439534692180]  =  0.11776927243803503
	[11496001657944805140, 15263238418481705881]  =  0.29692026114687264
	                                              ⋮
	[9036634046110542021 , 13710539999002292266]  =  0.6476174286351901
	[15791483600865970897, 13710539999002292266]  =  0.7353605068259914
	[3098092458876750059 , 14774945750507892610]  =  0.9519295190047052
	[5004131969199419793 ,  6332455606016291123]  =  0.7649138182570678
	[14278035825230678864, 15436097664388839821]  =  0.11042945302305984
	[7841950699682704949 , 11551291857879764225]  =  0.8269659841000294
	[4981387750669837953 ,  9526342322394325946]  =  0.9972796178478613
	[5452972151941397067 , 15240003619098155971]  =  0.3086460100710331
	[4194711704772932182 , 13690505415342562739]  =  0.37823103203230146Timing named index: 0.000836977, array index: 0.000683261, named key: 0.142620887
Timing sum large sparse array: 0.007771221, named: 0.016007707
done!
INFO: NamedArrays tests passed

>>> End of log
