>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (865.1875 MB free)
Uptime: 7070.0 sec
Load Avg:  1.05859375  1.00830078125  1.041015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     300017 s         48 s      29461 s     310018 s         12 s
#2  3499 MHz     198071 s         92 s      26976 s     459713 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.512458  0.493484    0.6924
b           │ 0.588359  0.823928  0.567911 0.5124575619659915 0.5124575619659915
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.512458  0.493484    0.6924
b     │ 0.588359  0.823928  0.567911
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.512458  0.493484    0.6924
b           │ 0.588359  0.823928  0.567911
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.512458  0.493484    0.6924
b     │ 0.588359  0.823928  0.567911
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.011278  0.00793817    0.771492    0.241033
two   │   0.988497   0.0504796    0.459821    0.829235
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.984877  0.454954
1           │ 0.995243  0.752445

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.197258   0.199357
1           │  0.180483  0.0949416
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.604838
2 │ 0.207355
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.395355  0.191074
2     │ 0.733096  0.291878
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.833248  0.941952
2     │ 0.976547  0.235813

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0885549   0.296373
2     │  0.775854   0.521458
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.212304  0.154621
2     │ 0.388968  0.369916

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.971314  0.0732385
2     │  0.294404   0.916621

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00829809    0.425106
2     │   0.165597    0.141808

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.730229  0.0186999
2     │ 0.0995583   0.674228
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.784931   0.75588
2     │ 0.580105  0.185524

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.876003  0.244489
2     │ 0.105988  0.291219

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.426952   0.909219
2     │  0.183372  0.0685865

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.15789  0.702059
2     │ 0.104351  0.709729

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.516895  0.920317
2     │  0.41442  0.946945

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.436977  0.267179
2     │ 0.842733  0.740081

[:, :, C=1, D=2, E=2] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │ 0.000330375     0.125432
2     │    0.491032     0.513533

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.908036  0.714742
2     │ 0.563279  0.161274
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.208101  0.0960933

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.847007  0.332667
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.812245
2     │ 0.181427

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.597999
2     │ 0.775599
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.482581   0.25371
2     │ 0.522145  0.405452
done!
Timing named index: 0.000749794, array index: 0.000574742, named key: 0.07074724
Timing sum large sparse array: 0.008078769, named: 0.016564692
INFO: NamedArrays tests passed

>>> End of log
