>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (861.30078125 MB free)
Uptime: 6779.0 sec
Load Avg:  1.0224609375  0.9833984375  1.04833984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     316079 s       5823 s      28575 s     260808 s         13 s
#2  3499 MHz     202718 s        848 s      24092 s     426535 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.9764325257101003	.4754982612060703	.7923675356491693	.38522447841283247
two	.42960840404622735	.8353069342390691	.6825880586284527	.5436215604678845
a	16
b	40
c	94
d	98
e	32
f	10
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.498448   0.686406   0.315181
b           │  0.654998   0.363308  0.0952489 0.4984484751528431 0.4984484751528431
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.498448   0.686406   0.315181
b     │  0.654998   0.363308  0.0952489
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.498448   0.686406   0.315181
b           │  0.654998   0.363308  0.0952489
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.498448   0.686406   0.315181
b     │  0.654998   0.363308  0.0952489
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.51948  0.752676  0.470857  0.905142
er              │ 0.807099  0.887134  0.502907  0.562669
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140656003911152
0-element Named Array{Any,1}

[0.05535235395760463 0.6718886651324052 0.4325486682634587 0.02794135844490664
 0.007932472782880451 0.9703682643070295 0.5007841125113917 0.7200761030613045]
2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │  0.0553524    0.671889    0.432549   0.0279414
two   │ 0.00793247    0.970368    0.500784    0.7200762x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │  0.0553524    0.671889    0.432549   0.0279414
two   │ 0.00793247    0.970368    0.500784    0.7200762x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.753491     -0.36853  …     -1.03444     0.864722
2     │   -0.519724     -0.54518  …    -0.489777     0.1620731000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.416615    0.874305
2     │   -1.43115    0.894156
3     │   0.316445   -0.262414
4     │   0.726805    -1.01857
5     │   -1.18078   -0.266776
6     │   -1.53004     2.12986
7     │   -1.04247     1.22188
8     │   0.274237   -0.451736
9     │ -0.0872453   -0.504247
⋮                ⋮           ⋮
992   │     0.9669    0.223171
993   │   -0.16529   -0.461749
994   │  -0.759513   -0.367099
995   │  -0.922598    0.894214
996   │   0.607127    0.133144
997   │  0.0777068     1.55775
998   │   -2.16812   -0.221007
999   │    -1.0304    0.924313
1000  │   0.944651     1.040771000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.413106
2    │   -1.61954
3    │  -0.338005
4    │    -1.4111
5    │  -0.567161
6    │   0.726651
7    │   0.385892
8    │  -0.811218
9    │    2.00238
⋮               ⋮
992  │    1.31816
993  │ -0.0425396
994  │  -0.930012
995  │   -1.88499
996  │  -0.169822
997  │    1.69345
998  │ -0.0194751
999  │   -1.68505
1000 │   0.2664452x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.489131  0.390398
1           │ 0.110975  0.439431

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.424831  0.917728
1           │ 0.606258  0.383307
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.299886
2  │ 0.705399
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.326999  0.691867
2     │ 0.660641  0.931024
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.39876  0.829286
2     │ 0.920235  0.555266

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.898562  0.136131
2     │ 0.463607  0.937238
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.765059  0.175468
2     │ 0.816485  0.355854

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.173515  0.448352
2     │ 0.212542  0.374378

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.227342  0.784723
2     │ 0.718273  0.727414

[:, :, C=2, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.834277    0.774829
2     │   0.951551  0.00722836
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.36778  0.430644
2     │ 0.356861  0.755552

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.11126  0.325412
2     │ 0.468305  0.506316

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.512847   0.745133
2     │ 0.0488867   0.047121
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.143582  0.824998

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.181618  0.580242
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.918959
2     │ 0.159271

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.273388
2     │  0.41896
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0353353    0.10511
2     │  0.782626   0.742113
1000×1000 Named sparse matrix with 92 Float64 nonzero entries:
	[12843503472939723182, 13789993170142104254]  =  0.7472781793337631
	[7083487105814040007 ,  1703847331300677320]  =  0.6887256302712734
	[16930337021800722690, 11080872162023102847]  =  0.1678670983056938
	[7401919267257527897 ,  6806539949965918083]  =  0.345430424870073
	[12809965746239821631,  8265524791738013937]  =  0.31026947676621264
	[4494612503536197367 , 13342932250377702532]  =  0.7063978854116795
	[13427473630495641040, 16390501590956164603]  =  0.6227688334839676
	[11355399569336610079, 14757494119953341947]  =  0.15537191328339128
	                                              ⋮
	[6216214939212987967 ,  4285843451033309381]  =  0.8788085707795226
	[14319986367878219703, 17329041886349039120]  =  0.5073035609972567
	[8428585625424605984 ,  2520040687452014961]  =  0.23897503070706017
	[8969053341726467224 , 16069635275006911712]  =  0.21445640604397842
	[3988919785315502792 ,  9223427034658990711]  =  0.6176189422315226
	[16365943061271568709, 11470862121108514714]  =  0.5842779650442673
	[17135076390733320242, 11314283927973801071]  =  0.691988477051821
	[5337699408644063394 ,  3279378535085980212]  =  0.01107381635645388
	[11527542315164007414, 12020782256748308824]  =  0.46584593826585685Timing named index: 0.000736526, array index: 0.000710393, named key: 0.135170424
Timing sum large sparse array: 0.007967455, named: 0.016999363
done!
INFO: NamedArrays tests passed

>>> End of log
