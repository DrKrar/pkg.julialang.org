>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (880.62890625 MB free)
Uptime: 6523.0 sec
Load Avg:  1.1591796875  1.033203125  1.05419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     282640 s         54 s      32173 s     256832 s         12 s
#2  3500 MHz     186256 s         85 s      26573 s     411382 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.282319  0.135278  0.785447
b           │ 0.613747   0.91795  0.613445 0.2823191671075469 0.2823191671075469
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.282319  0.135278  0.785447
b     │ 0.613747   0.91795  0.613445
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.282319  0.135278  0.785447
b           │ 0.613747   0.91795  0.613445
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.282319  0.135278  0.785447
b     │ 0.613747   0.91795  0.613445
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.376012  0.658371  0.786002  0.573993
two   │ 0.201281  0.462137  0.852791  0.732905
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.591498  0.849342
1           │ 0.272645  0.431599

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.705792     0.18073
1           │    0.53648  0.00596837
2-element Named Array{Float64,1}
A │ 
──┼──────────
1 │  0.780215
2 │ 0.0341296
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.108041  0.0267844
2     │  0.483141    0.36807
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.853694  0.662803
2     │  0.76759  0.161579

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.336682  0.455784
2     │ 0.817082  0.848693
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.244274  0.369399
2     │ 0.758953  0.811502

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.388928  0.851363
2     │ 0.272786    0.0653

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.15628   0.511398
2     │  0.337892  0.0101864

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.181284  0.919938
2     │ 0.858032   0.76118
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.678882  0.547205
2     │ 0.325699  0.137122

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.750306  0.355999
2     │ 0.122128  0.718058

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.612713  0.374325
2     │   0.1598   0.61397

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.228508   0.26252
2     │ 0.901056  0.556207

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.745349  0.395403
2     │ 0.550116  0.774029

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.42918  0.838081
2     │ 0.470198  0.116935

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.16034  0.712608
2     │ 0.238279   0.90437

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.841569  0.734296
2     │ 0.671363  0.110178
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.622994  0.548066

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.828701  0.754049
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.570987
2     │ 0.596229

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.461421
2     │ 0.267877
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.707578  0.123777
2     │ 0.468438  0.383534
done!
Timing named index: 0.000724128, array index: 0.000485563, named key: 0.070710842
Timing sum large sparse array: 0.01379801, named: 0.012205898
INFO: NamedArrays tests passed

>>> End of log
