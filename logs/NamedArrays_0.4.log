>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (402.77734375 MB free)
Uptime: 9054.0 sec
Load Avg:  1.65771484375  1.21630859375  1.10595703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     380843 s       4878 s      31737 s     401922 s         13 s
#2  3507 MHz     251719 s       3009 s      29920 s     593881 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.23719598091126382	.5068510649775955	.12728751697773943	.4809184617073883
two	.7458476204103848	.6003104670936883	.724863400453071	.17180016617232208
a	95
b	41
c	23
d	100
e	61
f	76
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.573959  0.939946  0.931939
b           │ 0.646387  0.207549  0.595336 0.5739588179024429 0.5739588179024429
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.573959  0.939946  0.931939
b     │ 0.646387  0.207549  0.595336
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.573959  0.939946  0.931939
b           │ 0.646387  0.207549  0.595336
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.573959  0.939946  0.931939
b     │ 0.646387  0.207549  0.595336
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.796931  0.736324  0.392224  0.290096
er              │ 0.205525  0.690347   0.31144  0.160733
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140435232197264
0-element Named Array{Any,1}

[0.5394643699091453 0.4891387402744831 0.8404647579984696 0.8805640739160288
 0.5464122592713347 0.9129884927130079 0.26765785301484035 0.08374195997126388]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.539464  0.489139  0.840465  0.880564
two   │ 0.546412  0.912988  0.267658  0.0837422x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.539464  0.489139  0.840465  0.880564
two   │ 0.546412  0.912988  0.267658  0.0837422x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.905261     -0.201292  …    -0.0534472       1.72292
2     │      0.88522      0.636443  …      0.414476     -0.1474761000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.346896  -0.864114
2     │  -1.30907  0.0168935
3     │    1.3286  -0.303631
4     │ -0.449469   0.411237
5     │ 0.0820646   0.633404
6     │ -0.572269    1.11974
7     │    1.7398    1.49313
8     │  -1.79241  -0.557762
9     │   1.47558  -0.560133
⋮               ⋮          ⋮
992   │  -2.35142   0.720639
993   │  -1.40974  -0.336462
994   │ -0.286573    1.26968
995   │  0.955392   -1.20234
996   │  0.156641  -0.406707
997   │  0.871597    1.72559
998   │  -1.19534   -1.96527
999   │ 0.0492155   -1.13299
1000  │  -0.23003   -1.646711000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.745615
2    │   -2.13674
3    │  -0.218588
4    │  0.0342143
5    │   -0.59647
6    │   0.820677
7    │ -0.0246171
8    │  -0.433477
9    │    1.05023
⋮               ⋮
992  │   -1.42751
993  │    2.49637
994  │   0.113408
995  │    1.24912
996  │   0.559099
997  │    1.29745
998  │    1.04478
999  │   0.542336
1000 │   -1.571382x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.456164  0.334961
1           │ 0.694129  0.678908

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.448966   0.146477
1           │  0.571074  0.0661048
2-element Named Array{Float64,1}
A  │ 
───┼───────────
1  │ 0.00584374
2  │    0.93642
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.342122  0.0770345
2     │  0.135899   0.660681
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.477504   0.38631
2     │  0.74381  0.809948

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.866422  0.971157
2     │ 0.675979  0.254308
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.404139  0.00620919
2     │   0.313651    0.517935

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.796578   0.402788
2     │  0.121027  0.0633539

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.906577   0.60578
2     │ 0.760169  0.806402

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.601055  0.327353
2     │ 0.934594  0.268495
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.573341  0.401599
2     │  0.34887   0.92689

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0378207   0.287334
2     │  0.468611    0.81651

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.679649   0.838008
2     │ 0.0256282  0.0458427
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.78841  0.559163

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.99398  0.615967
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.110138
2     │ 0.0525126

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.645785
2     │ 0.0750706
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.609519  0.269703
2     │ 0.952231  0.658284
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[1030988749247038162 ,  6526988131186142725]  =  0.9102758807308873
	[12459420750016908814,  4400785119912308702]  =  0.2420638458167097
	[11565746237708632912,  8699333159457747740]  =  0.13843428281264347
	[8305934159106380255 , 16462243977607957471]  =  0.3193647681807952
	[11660797228701312840,  6046649976662626325]  =  0.5407092698053797
	[11868935393991040875, 16544335554558850098]  =  0.7115308611140845
	[5846421799401500860 ,  4981387750669837953]  =  0.03739603684350601
	[9623387968596508826 ,   273396578563598247]  =  0.5698376523749562
	                                              ⋮
	[12624682912995533025,  3014575823142358933]  =  0.2698400109811352
	[10953304140290405338, 17329041886349039120]  =  0.4836965023626896
	[13882698648709482562, 15717097331822026300]  =  0.40620927083263747
	[2117445326293199079 , 11470862121108514714]  =  0.8420773864285511
	[397394769374478572  , 16365943061271568709]  =  0.7834087644400269
	[15272022662576939533, 12624682912995533025]  =  0.9137912385232176
	[6134978669850253296 , 14835807873575694564]  =  0.1487736841816405
	[12881399881645621208, 13950575499123628905]  =  0.8928110965793208
	[16069635275006911712,  2588469222286953884]  =  0.4258021035903998Timing named index: 0.000899553, array index: 0.000979387, named key: 0.128822228
Timing sum large sparse array: 0.009849259, named: 0.024254142
done!
INFO: NamedArrays tests passed

>>> End of log
