>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (875.25 MB free)
Uptime: 7098.0 sec
Load Avg:  1.021484375  0.994140625  1.0302734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     307163 s         50 s      32098 s     284618 s         12 s
#2  3501 MHz     178278 s         87 s      28250 s     470161 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.897171   0.803705   0.635555
b           │  0.530393   0.770527  0.0346037 0.8971711899599724 0.8971711899599724
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.897171   0.803705   0.635555
b     │  0.530393   0.770527  0.0346037
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.897171   0.803705   0.635555
b           │  0.530393   0.770527  0.0346037
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.897171   0.803705   0.635555
b     │  0.530393   0.770527  0.0346037
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.370521  0.0749166   0.162149   0.570792
two   │   0.36715   0.498538   0.539164    0.34369
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.453188  0.671517
1           │ 0.462319  0.353645

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.452981   0.298597
1           │  0.492285  0.0180393
2-element Named Array{Float64,1}
A │ 
──┼──────────
1 │  0.635041
2 │ 0.0396989
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.75358  0.473153
2     │ 0.453198  0.410558
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.685643   0.325187
2     │  0.068902  0.0783964

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0577315  0.0830153
2     │  0.781699    0.18807
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.656977   0.0882447
2     │   0.637369  0.00530745

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.329089  0.491324
2     │ 0.373794  0.945447

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.924026  0.354075
2     │ 0.290362  0.146114

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.312278   0.946001
2     │ 0.0895193   0.827537
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.64192  0.637238
2     │ 0.841889  0.584148

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.500677  0.965973
2     │ 0.759938  0.455479

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0859521   0.344292
2     │ 0.0702713   0.359134

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.70067  0.277031
2     │ 0.264331  0.475259

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.50362  0.360902
2     │ 0.840273  0.412514

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0816493   0.305002
2     │  0.113163   0.499018

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.970245  0.158335
2     │ 0.474492  0.602843

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.591933  0.495366
2     │ 0.331554  0.730532
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.945455  0.144085

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.934379  0.937679
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.443675
2     │ 0.406437

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.23364
2     │ 0.877561
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.834009   0.354383
2     │ 0.0421601   0.790614
done!
Timing named index: 0.000854066, array index: 0.0003816, named key: 0.123166068
Timing sum large sparse array: 0.005651937, named: 0.010434332
INFO: NamedArrays tests passed

>>> End of log
