>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (539.6328125 MB free)
Uptime: 8119.0 sec
Load Avg:  1.01171875  1.03955078125  1.11767578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     363780 s         62 s      31947 s     372787 s          7 s
#2  3500 MHz     189135 s         91 s      26491 s     564042 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.238629  0.992019  0.358692
b           │ 0.588781  0.940256   0.57313 0.23862895076832658 0.23862895076832658
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.238629  0.992019  0.358692
b     │ 0.588781  0.940256   0.57313
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.238629  0.992019  0.358692
b           │ 0.588781  0.940256   0.57313
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.238629  0.992019  0.358692
b     │ 0.588781  0.940256   0.57313
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.933974  0.0488547   0.865164   0.764835
two   │   0.54919  0.0605602   0.205859    0.14294
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.196841  0.474756
1           │ 0.244744  0.866631

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0924791   0.511833
1           │   0.45458   0.945159
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.968903
2 │ 0.741557
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.548903  0.719843
2     │ 0.587953    0.0404
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.654356  0.312253
2     │ 0.151441   0.84091

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.572804   0.35166
2     │ 0.865261  0.938176
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.436536  0.757244
2     │ 0.157487   0.45618

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.892349  0.223523
2     │ 0.899244  0.680658

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.849853  0.835035
2     │ 0.475751  0.712979

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.993547   0.714429
2     │ 0.0137249   0.601107
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.546827  0.781668
2     │ 0.333429  0.244887

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.987191  0.265935
2     │  0.67455  0.140662

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.357257  0.501361
2     │ 0.726849  0.592259

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.865296  0.949173
2     │ 0.947934    0.9864

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.665197  0.857104
2     │ 0.975908  0.819682

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.212445  0.993597
2     │  0.27597  0.756432

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.780376  0.743831
2     │ 0.819953  0.495839

[:, :, C=2, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.212068   0.722034
2     │ 0.0225042   0.618723
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.564433  0.443354

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.741771  0.708714
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │   0.9864
2     │ 0.453372

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.653156
2     │  0.46832
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.641661  0.0774087
2     │  0.277485   0.957366
done!
Timing named index: 0.000760831, array index: 0.00061462, named key: 0.113431962
Timing sum large sparse array: 0.010662993, named: 0.024689278
INFO: NamedArrays tests passed

>>> End of log
