>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (857.29296875 MB free)
Uptime: 6861.0 sec
Load Avg:  1.08984375  0.97314453125  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     321678 s       6310 s      27732 s     259483 s         14 s
#2  3500 MHz     202560 s         91 s      23808 s     437943 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.21458620786077454	.5293509005707724	.0526247314019852	.8939908825803746
two	.8740451980203354	.8914374278804091	.12872784158407335	.8418636730279911
a	82
b	87
c	32
d	39
e	10
f	19
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.660324  0.0934392   0.949453
b           │    0.1498   0.895791   0.555094 0.660323943764533 0.660323943764533
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.660324  0.0934392   0.949453
b     │    0.1498   0.895791   0.555094
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.660324  0.0934392   0.949453
b           │    0.1498   0.895791   0.555094
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.660324  0.0934392   0.949453
b     │    0.1498   0.895791   0.555094
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │    0.81956    0.899148  0.00607123    0.147044
er              │   0.196563    0.609319    0.397175    0.650593
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139969566951760
0-element Named Array{Any,1}

[0.2113333560875239 0.4111488359177229 0.03159517143896484 0.7396543095066688
 0.7896714827230487 0.19151223109299376 0.09075424807606725 0.47248064538777546]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.211333   0.411149  0.0315952   0.739654
two   │  0.789671   0.191512  0.0907542   0.4724812x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.211333   0.411149  0.0315952   0.739654
two   │  0.789671   0.191512  0.0907542   0.4724812x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.117591     0.0436118  …    -0.0604409      0.908556
2     │     -1.45638    -0.0464555  …       2.56954        1.70491000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -1.27218   0.216785
2     │ -0.253367   -1.48629
3     │   1.29942   0.312823
4     │ -0.568912  -0.506414
5     │  0.739861   0.816547
6     │ -0.391619    2.10718
7     │  0.928814  -0.330847
8     │ -0.395924   0.551968
9     │   1.08515   -1.80122
⋮               ⋮          ⋮
992   │    2.1697   0.824123
993   │  0.629355   -1.04312
994   │ -0.758136    1.21894
995   │   -1.2402    1.01422
996   │ -0.240813   0.527795
997   │ -0.893686   0.620439
998   │  -1.39061   0.409368
999   │  0.186613   -1.10873
1000  │  0.296714   -2.310121000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.435091
2    │ -0.339937
3    │ -0.289983
4    │   -1.5302
5    │  0.276842
6    │ -0.119304
7    │  0.968295
8    │   1.61839
9    │  -0.22946
⋮              ⋮
992  │   -1.3253
993  │  0.480958
994  │   1.58616
995  │  0.635177
996  │  -1.08738
997  │  0.310846
998  │  0.950257
999  │  0.737702
1000 │  0.9091042x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.464957  0.251836
1           │ 0.989337  0.672738

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.240042  0.0219887
1           │  0.364886    0.78837
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0500652
2  │   0.56035
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.220439  0.425227
2     │ 0.471955  0.856032
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.490476   0.41962
2     │ 0.966291  0.364561

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.950476  0.503073
2     │ 0.683664  0.626087
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.450659  0.208421
2     │ 0.183867  0.613733

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.650355  0.0369625
2     │  0.860456  0.0907538

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.843485  0.471591
2     │ 0.276328  0.500226

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.328964  0.153881
2     │    0.831   0.74937
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.253607  0.0286209
2     │  0.769466   0.118214

[:, :, C=2, D=1, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.834302    0.819576
2     │ 0.00715946     0.14945

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.653828  0.116751
2     │ 0.956434  0.388747
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.140234  0.109996

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.216711  0.265256
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.348319
2     │ 0.229365

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.579928
2     │ 0.122306
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.99439  0.0414291
2     │  0.435114   0.200447
1000×1000 Named sparse matrix with 85 Float64 nonzero entries:
	[17853331136360781895,  5312631360709731698]  =  0.8312191935468798
	[9861459413671678323 ,   592365234179887848]  =  0.24053056027589714
	[11624303196129780378, 18443816037252674910]  =  0.5370307256910516
	[1656903684371133098 ,  8265524791738013937]  =  0.03160619613831539
	[4083684169156455281 , 15493082059768908559]  =  0.47718945081758735
	[16410581380162038602, 12876006501778729182]  =  0.41894272559691026
	[6216214939212987967 , 12876006501778729182]  =  0.8635924418857446
	[13342932250377702532, 15260609615288845879]  =  0.7389419270524642
	                                              ⋮
	[13867334145892551164, 10024080200852233627]  =  0.19120683318434373
	[841443329012084682  , 10663619072362037589]  =  0.41118218466140477
	[13464983696880885265,  7989582431359101293]  =  0.515815526473113
	[17131895616600668418, 16365943061271568709]  =  0.26281380711217217
	[1523061068178304284 , 12624682912995533025]  =  0.36433986156463916
	[1325176273747465022 ,  1861743268047760089]  =  0.943317279907816
	[16069635275006911712,  1861743268047760089]  =  0.1988968620421081
	[4420061231740490028 ,  9133170895916704973]  =  0.6259846890292247
	[3159188428204763267 , 14599810768241287016]  =  0.23397010254044037Timing named index: 0.000832693, array index: 0.000743076, named key: 0.114818372
Timing sum large sparse array: 0.007928633, named: 0.01645163
done!
INFO: NamedArrays tests passed

>>> End of log
