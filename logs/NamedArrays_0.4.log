>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (810.17578125 MB free)
Uptime: 9631.0 sec
Load Avg:  1.00048828125  0.93994140625  0.986328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     365677 s       6789 s      32247 s     461983 s         19 s
#2  3500 MHz     244782 s         94 s      29052 s     651688 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5412193155888119	.28464762017271217	.30667589374201576	.26123910596180355
two	.34728896615043925	.0007820176621202712	.22500682381864956	.9813685525897822
a	49
b	42
c	1
d	74
e	38
f	14
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.28843   0.299089   0.641823
b           │   0.43118  0.0851153   0.319228 0.28842979830121296 0.28842979830121296
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.28843   0.299089   0.641823
b     │   0.43118  0.0851153   0.319228
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.28843   0.299089   0.641823
b           │   0.43118  0.0851153   0.319228
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.28843   0.299089   0.641823
b     │   0.43118  0.0851153   0.319228
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.543788   0.238323   0.765075   0.999507
er              │  0.958979  0.0518328   0.851575     0.6129
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139662405976496
0-element Named Array{Any,1}

[0.6131385797568996 0.3234382577951349 0.9936465850010521 0.35878548769752494
 0.7239522174972406 0.9935372179555442 0.797566036453593 0.8204812663035153]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.613139  0.323438  0.993647  0.358785
two   │ 0.723952  0.993537  0.797566  0.8204812x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.613139  0.323438  0.993647  0.358785
two   │ 0.723952  0.993537  0.797566  0.8204812x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.47551     0.915955  …      1.55699    -0.280035
2     │     1.64658    -0.193701  …    -0.325111      1.510711000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.651404   -1.56828
2     │  -1.96083  -0.196908
3     │  0.950666   0.977077
4     │  -1.05398   -1.18934
5     │  0.407522    -0.1286
6     │   0.38646     0.4788
7     │  0.528628   -1.03094
8     │ -0.191496  -0.977506
9     │  0.366097   -1.02713
⋮               ⋮          ⋮
992   │  0.472713   -1.30638
993   │  0.212394  -0.536653
994   │  0.755618    -1.1408
995   │ -0.275826  -0.882394
996   │ 0.0808412   0.693268
997   │   1.81525  -0.842584
998   │ -0.397541  -0.499186
999   │ -0.916997   -1.39775
1000  │ -0.753727   -1.385171000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.562873
2    │   0.358401
3    │   0.631616
4    │   0.537556
5    │  -0.554888
6    │ -0.0742108
7    │   -1.00659
8    │   0.293277
9    │   0.276551
⋮               ⋮
992  │  -0.696403
993  │  -0.173429
994  │   -2.16661
995  │  -0.233602
996  │  -0.322593
997  │  -0.504456
998  │   0.385416
999  │   0.330726
1000 │   0.4847142x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │   0.66556  0.0857505
1           │   0.38176   0.525557

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.806342    0.1178
1           │ 0.469168  0.236367
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.81578
2  │ 0.861391
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0215731   0.215915
2     │  0.788256  0.0783424
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.728516  0.400112
2     │ 0.220133  0.757074

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0434735   0.787511
2     │   0.71811   0.569091
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.383379  0.741802
2     │ 0.912057  0.644319

[:, :, C=2, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.522411  0.00789532
2     │   0.382268    0.332808

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.167155  0.0559828
2     │  0.267488   0.403712

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.182096   0.78255
2     │ 0.461273  0.689842
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0466953   0.203278
2     │   0.34538   0.905379

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.849227  0.029798
2     │ 0.991408  0.909407

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.961493  0.423887
2     │ 0.949832  0.277173
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0337348   0.758813

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.762706   0.05951
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.070431
2     │ 0.642372

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.17087
2     │ 0.796788
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.311344   0.936354
2     │  0.815665  0.0989495
1000×1000 Named sparse matrix with 96 Float64 nonzero entries:
	[12452104047290745507,  5004131969199419793]  =  0.3255373370745622
	[13413762311091243877,  5647414292592918739]  =  0.9707268748904463
	[17850470016925415361,   113574861176001527]  =  0.9297908477915833
	[7135901794575572161 ,  2849690884155085581]  =  0.6032474685654254
	[13593351659750487469, 17676219393380616284]  =  0.20064892121355182
	[7011600752848376140 ,   273396578563598247]  =  0.7376471047265443
	[1269227731312908414 ,  8720304024814141479]  =  0.8243159395948854
	[592365234179887848  ,  5839463014734961202]  =  0.5433183104696009
	                                              ⋮
	[11024660093340930346,  7608520278977511969]  =  0.14862252143278987
	[8225434152398798479 , 18148906667482527649]  =  0.5390314859739711
	[9440739376838893158 , 12169815624147734794]  =  0.15786416706336004
	[9872310664988650577 , 11314283927973801071]  =  0.9744204831172392
	[11197161442816233100, 11314283927973801071]  =  0.8224128454659814
	[14066869468942639955,  2758171916068192631]  =  0.9207025518471181
	[202800707278592455  , 12020782256748308824]  =  0.03231716379226701
	[1987182164192973075 ,  6565262192402102057]  =  0.4973561958286641
	[5193276450681624824 ,  2588469222286953884]  =  0.39262712473437955Timing named index: 0.000708828, array index: 0.000477598, named key: 0.073324541
Timing sum large sparse array: 0.006395683, named: 0.013288762
done!
INFO: NamedArrays tests passed

>>> End of log
