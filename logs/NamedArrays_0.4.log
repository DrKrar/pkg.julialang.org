>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (808.47265625 MB free)
Uptime: 8713.0 sec
Load Avg:  1.181640625  0.9814453125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     373904 s        101 s      29861 s     378579 s         13 s
#2  3499 MHz     245442 s         44 s      26704 s     569325 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.739951129996437	.09311974523569577	.125650817126308	.6886273510444563
two	.08184830233732887	.7002957656766511	.010852229750000886	.9510829145103612
a	20
b	57
c	82
d	91
e	74
f	64
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.670045   0.820379   0.379493
b           │  0.230366  0.0646282   0.539957 0.670044949095578 0.670044949095578
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.670045   0.820379   0.379493
b     │  0.230366  0.0646282   0.539957
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.670045   0.820379   0.379493
b           │  0.230366  0.0646282   0.539957
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.670045   0.820379   0.379493
b     │  0.230366  0.0646282   0.539957
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.229281  0.694664   0.73355  0.858007
er              │ 0.218197  0.415054  0.517758  0.826626
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140440488253584
0-element Named Array{Any,1}

[0.01552338972820233 0.807092090165578 0.2814895988817341 0.62551694923567
 0.4679531265712753 0.29174257488884536 0.15529457800176516 0.23929425604075627]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0155234   0.807092    0.28149   0.625517
two   │  0.467953   0.291743   0.155295   0.2392942x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0155234   0.807092    0.28149   0.625517
two   │  0.467953   0.291743   0.155295   0.2392942x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.19093    -0.514651  …      1.08776      2.00803
2     │     0.41429     -1.38633  …      1.15022      0.649811000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.181431    -1.19242
2     │  -0.783579     1.27722
3     │   -1.78301   0.0516196
4     │  -0.993741     1.51325
5     │  -0.249943   -0.710251
6     │    1.46053    -1.82546
7     │   0.422098    0.707632
8     │  0.0896991   -0.177092
9     │    1.42888     5.00802
⋮                ⋮           ⋮
992   │   0.967219   -0.640672
993   │  -0.266373     1.84337
994   │   0.989272    0.885961
995   │   -1.15259   -0.781023
996   │  -0.896596    0.400095
997   │   0.118457    0.669916
998   │   -2.16472    0.321684
999   │  -0.748806     -1.0312
1000  │    1.36649  -0.02547361000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.709813
2    │  0.826728
3    │  0.496675
4    │  -2.44713
5    │  -0.40864
6    │ -0.265959
7    │  -0.65076
8    │ -0.910492
9    │  -0.76497
⋮              ⋮
992  │  -1.16511
993  │   2.99488
994  │  0.961609
995  │  0.279695
996  │   1.49412
997  │  -0.24125
998  │   1.81769
999  │  -1.48974
1000 │ -0.6552122x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.195892    0.91478
1           │ 0.0253628   0.797193

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.560205  0.616335
1           │ 0.103181  0.410777
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0414007
2  │  0.269973
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.824647  0.031291
2     │  0.46391  0.445729
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.652486   0.28903
2     │ 0.385724  0.569341

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.297425    0.133638
2     │   0.175857  0.00170437
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.613143   0.03702
2     │ 0.967346  0.238743

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.588961  0.178269
2     │ 0.866041  0.462438

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.703111  0.660498
2     │ 0.811607  0.743804

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0610241   0.449912
2     │  0.274568   0.413037
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.505738  0.735097
2     │ 0.252416  0.550185

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.973759  0.333178
2     │ 0.703102  0.368515

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.733315       0.707
2     │ 0.00795051    0.852716
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.89155  0.842188

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.355961  0.747534
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.522705
2     │ 0.561646

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.94105
2     │ 0.219331
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.992477   0.279705
2     │  0.642796  0.0813988
1000×1000 Named sparse matrix with 103 Float64 nonzero entries:
	[4788923618671962983 , 14343632987770563929]  =  0.3422247067781601
	[8428585625424605984 , 12809965746239821631]  =  0.9432547685365742
	[18180706245899323906, 10106592262940987645]  =  0.07781938657066023
	[5004131969199419793 ,  4786699431706339713]  =  0.9441932085990279
	[13873794816269884083, 17676219393380616284]  =  0.37244120404027004
	[12376285854513575894,  7199089960335318010]  =  0.19789607416496513
	[16468281889911035053, 17211410618634043162]  =  0.49171246724019757
	[10080555958650725266,  8265524791738013937]  =  0.7470262373239234
	                                              ⋮
	[2050037547392292084 ,  7608520278977511969]  =  0.9141713361680783
	[4721490707364992361 ,  7608520278977511969]  =  0.6091335071613644
	[5193276450681624824 ,  9526342322394325946]  =  0.1230866045620238
	[16530907666167163390, 11993454575275700781]  =  0.6195280825025395
	[16332748141415539697, 12169815624147734794]  =  0.8970210969108381
	[14881898804895637463, 10663619072362037589]  =  0.8050337727768717
	[532635700462514874  ,  3279378535085980212]  =  0.25518549199445384
	[13404584004200911263, 15240003619098155971]  =  0.4027057741496676
	[12281884974520114934, 13950575499123628905]  =  0.4174222776185901Timing named index: 0.001032016, array index: 0.000713924, named key: 0.07549941
Timing sum large sparse array: 0.006246869, named: 0.012585953
done!
INFO: NamedArrays tests passed

>>> End of log
