>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (889.44921875 MB free)
Uptime: 7102.0 sec
Load Avg:  1.01513671875  0.9736328125  1.02880859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     324456 s        101 s      29042 s     284863 s         14 s
#2  3499 MHz     197438 s         68 s      26286 s     465127 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.16102597492106363	.5363899872948696	.49947142563566227	.4367688121330977
two	.8543771996159157	.4921375503235381	.1875426754568681	.675247385619923
a	60
b	79
c	81
d	1
e	55
f	24
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0462334   0.752152    0.54526
b           │ 0.0855074   0.880675   0.359449 0.046233412839930876 0.046233412839930876
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0462334   0.752152    0.54526
b     │ 0.0855074   0.880675   0.359449
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0462334   0.752152    0.54526
b           │ 0.0855074   0.880675   0.359449
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0462334   0.752152    0.54526
b     │ 0.0855074   0.880675   0.359449
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.788433   0.325657  0.0457383   0.890498
er              │  0.738155   0.106091   0.785298   0.202165
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140550039175408
0-element Named Array{Any,1}

[0.5870280201429414 0.8087657097711087 0.8328173578882536 0.9631716001103912
 0.21813470854370087 0.8931099944570433 0.3022774751884145 0.5711855894872762]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.587028  0.808766  0.832817  0.963172
two   │ 0.218135   0.89311  0.302277  0.5711862x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.587028  0.808766  0.832817  0.963172
two   │ 0.218135   0.89311  0.302277  0.5711862x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    0.0853649      -1.13274  …     -0.747549     -0.468576
2     │     -1.56462       1.02544  …     -0.672829     -0.4236031000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.792739    0.579627
2     │   0.550731   -0.800122
3     │   -1.43108   -0.567813
4     │  -0.118137    0.556828
5     │   0.579321   -0.410399
6     │   0.535564    -1.18302
7     │    1.01284   -0.501206
8     │   0.565276   -0.661302
9     │   0.927354   -0.314489
⋮                ⋮           ⋮
992   │   0.437162  -0.0109513
993   │  -0.087197    -1.71632
994   │  -0.600283   -0.467302
995   │   -1.02237    -1.03091
996   │   0.101097    0.127426
997   │   -1.24973    -1.26631
998   │    1.65515   -0.631405
999   │   0.153502    -2.13462
1000  │   -0.51457     -1.81021000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.01322
2    │  0.434054
3    │  0.941356
4    │ 0.0269743
5    │   2.49233
6    │ -0.818368
7    │    1.0798
8    │  0.347189
9    │  0.542265
⋮              ⋮
992  │  -1.19619
993  │  -1.69309
994  │   1.03466
995  │  -1.00912
996  │  0.399823
997  │  -1.53615
998  │ -0.620722
999  │ -0.951024
1000 │  0.1162112x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.543792  0.741031
1           │ 0.245907  0.594855

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.718937  0.0502744
1           │  0.572855   0.452554
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.212843
2  │ 0.905326
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.538464  0.740428
2     │ 0.244928   0.33678
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.638619  0.520342
2     │ 0.179362  0.141908

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.412822  0.532256
2     │ 0.870365  0.111712
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.840728   0.329667
2     │  0.423612  0.0128515

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.866459  0.527469
2     │ 0.214664  0.342378

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0167524   0.559947
2     │  0.640384   0.299917

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.125925  0.574704
2     │ 0.290973  0.157021
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.734393  0.877984
2     │ 0.677157  0.759555

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.810155  0.205093
2     │ 0.701919  0.279667

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.774791  0.296243
2     │ 0.523632  0.658705
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0652994   0.998164

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0798721   0.621985
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.181332
2     │ 0.666316

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.907359
2     │ 0.105219
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.491483  0.798479
2     │  0.38041  0.504564
1000×1000 Named sparse matrix with 106 Float64 nonzero entries:
	[12664953981709537240, 13888991764943741743]  =  0.4365325934665236
	[18301367769706361526, 17822619313291261357]  =  0.13820545056199274
	[2758171916068192631 ,  2230070772219402886]  =  0.733817206412223
	[5062864901616737721 , 17211410618634043162]  =  0.5370183608609136
	[15263238418481705881,  8720304024814141479]  =  0.17507541909320956
	[16077859356318100249,  7242692203416363180]  =  0.34465821832762367
	[372001016642560619  , 15465980046630820984]  =  0.030692094078408783
	[2963278688299848341 , 14486665179875284614]  =  0.44660980778297543
	                                              ⋮
	[14766805435251878341, 14774945750507892610]  =  0.2588313187004654
	[8069307267129313135 , 11641483179283066996]  =  0.24348765268043637
	[16332748141415539697,  5983786778458205040]  =  0.4884090882184038
	[3098092458876750059 ,  6468689935112619700]  =  0.4139017401110703
	[7401919267257527897 , 18148906667482527649]  =  0.4974541368670342
	[13544680138434484894, 17718833055079784125]  =  0.277602480075094
	[4972200319723568142 , 16836080019131185762]  =  0.6249799096288464
	[6279220855469790341 ,  2758171916068192631]  =  0.9483121730680599
	[5777672114274436489 ,  4047135350800189603]  =  0.7134012693645237Timing named index: 0.000600626, array index: 0.000430185, named key: 0.069919637
Timing sum large sparse array: 0.006344571, named: 0.017331163
done!
INFO: NamedArrays tests passed

>>> End of log
