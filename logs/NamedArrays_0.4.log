>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.4
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (784.890625 MB free)
Uptime: 9579.0 sec
Load Avg:  1.05078125  1.01904296875  1.05322265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     396119 s       3459 s      34958 s     433692 s         30 s
#2  3504 MHz     248534 s       3380 s      31753 s     645160 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.4
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.6859255112005678	.849594733549466	.09672086505346567	.38629823825013454
two	.21426153148873595	.19994508641253206	.6986684349027499	.4305095868962676
a	17
b	9
c	37
d	13
e	88
f	87
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.360242  0.0632413   0.100131
b           │ 0.0184177   0.145852   0.176204 0.36024186191047014 0.36024186191047014
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.360242  0.0632413   0.100131
b     │ 0.0184177   0.145852   0.176204
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.360242  0.0632413   0.100131
b           │ 0.0184177   0.145852   0.176204
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.360242  0.0632413   0.100131
b     │ 0.0184177   0.145852   0.176204
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.971072     0.77857   0.0394853    0.284027
er              │ 0.00951217   0.0288539      0.2936    0.375473
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139785823413552
0-element Named Array{Any,1}

[0.26301775458290955 0.47712342825132503 0.598298997215408 0.31425127797625607
 0.8863212732058003 0.8107675061026056 0.7356297624214574 0.015451723076871149]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.263018   0.477123   0.598299   0.314251
two   │  0.886321   0.810768    0.73563  0.01545172x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.263018   0.477123   0.598299   0.314251
two   │  0.886321   0.810768    0.73563  0.01545172x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.348021     0.0149133  …      0.867546      0.977598
2     │      -2.2532      -1.25839  …     -0.421164     -0.8323011000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   1.72219    1.53454
2     │ 0.0565682  0.0452415
3     │ -0.862966  -0.468598
4     │  -1.73195  -0.157644
5     │ -0.996592   -1.35132
6     │  0.527372   -1.42576
7     │  0.768572   -1.12022
8     │  0.700994   0.194174
9     │  -1.62746   0.816645
⋮               ⋮          ⋮
992   │  -1.58146   -2.18447
993   │ -0.477858  -0.112479
994   │  -1.08288  -0.402129
995   │ -0.721494   0.306329
996   │  0.306221    2.14406
997   │  -0.50924   -1.65577
998   │ -0.368112  -0.884209
999   │  0.655878   0.351114
1000  │  -1.08876  -0.3035371000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    -1.5089
2    │   0.995873
3    │  -0.229781
4    │   -1.03226
5    │    0.83982
6    │ -0.0852721
7    │   -2.15478
8    │  -0.804018
9    │   0.456306
⋮               ⋮
992  │   -1.21986
993  │   0.452657
994  │    1.18847
995  │  -0.955433
996  │  -0.369754
997  │    1.54206
998  │    0.36549
999  │  -0.757831
1000 │  -0.6351632x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.863113  0.494494
1           │ 0.803374  0.456818

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.913734   0.80533
1           │ 0.534998  0.278242
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0635079
2  │  0.986915
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0695688   0.680616
2     │  0.115159   0.822137
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.69272   0.937561
2     │ 0.0613155   0.397402

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.639608    0.109287
2     │ 0.00548277    0.471554
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.907349  0.120722
2     │ 0.769886  0.618455

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.375115  0.736414
2     │ 0.611145  0.772078

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.253058    0.25562
2     │ 0.0981396   0.862386

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.690306  0.0673547
2     │  0.590002   0.652291
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.276812  0.602137
2     │ 0.705998  0.467411

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.552478  0.751544
2     │ 0.625868  0.430502

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.445691   0.307857
2     │ 0.0998936   0.459567
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.705587  0.522904

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.933515   0.61917
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.54577
2     │ 0.383816

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.146392
2     │ 0.894843
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.972863   0.81689
2     │ 0.675533  0.292625
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[8173039252081255984 ,  8699333159457747740]  =  0.7214571028147589
	[1987182164192973075 ,  8699333159457747740]  =  0.5236093510321469
	[14770838543801714634,  8699333159457747740]  =  0.2581885447279104
	[11581210425696274532, 17095493447719212504]  =  0.9499840809582287
	[7946303620992373940 ,   113574861176001527]  =  0.4483795668767585
	[15093605664292761005,  6046649976662626325]  =  0.45896006420062574
	[6009757290359055522 , 14066869468942639955]  =  0.05761057279748827
	[6242003743164303227 ,  2230070772219402886]  =  0.8876115617076925
	                                              ⋮
	[849947749456312673  ,  2318046236442875673]  =  0.2970790808074364
	[13096237947071787928, 11551291857879764225]  =  0.8563051123723437
	[4722070531727235685 ,  1526691723863411160]  =  0.3763902528826324
	[4620553278458169351 ,  5597731276780160114]  =  0.39762390456778274
	[5481191165173026183 ,   372001016642560619]  =  0.611521789098159
	[14057278280866812536,  9223427034658990711]  =  0.6768380273562531
	[15552872266293998212,  5122894113285174381]  =  0.9016865987002731
	[15273241082585353674,  6565262192402102057]  =  0.7314148835794534
	[13096237947071787928,  7519919299137062942]  =  0.43202685873208435Timing named index: 0.0006067, array index: 0.00043911, named key: 0.073383704
Timing sum large sparse array: 0.007338426, named: 0.017778219
done!
INFO: NamedArrays tests passed

>>> End of log
