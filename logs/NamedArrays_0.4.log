>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (938.2109375 MB free)
Uptime: 42972.0 sec
Load Avg:  0.90771484375  0.962890625  0.98876953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1091594 s        114 s     136011 s    2658531 s        236 s
#2  3499 MHz     712617 s         61 s     121590 s    3212578 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
3 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
 - PAINTER                       0.3.0
19 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - FITSIO                        0.8.4
 - FileIO                        0.1.2
 - HDF5                          0.6.6
 - Iterators                     0.1.10
 - JLD                           0.6.3
 - LegacyStrings                 0.1.1
 - NFFT                          0.1.2
 - OIFITS                        0.3.0
 - OptimPack                     0.2.0
 - Polynomials                   0.1.0
 - Reexport                      0.0.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
 - Wavelets                      0.5.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.450838  0.834585  0.468577
b           │ 0.453904  0.850216  0.584421 0.450838477494089 0.450838477494089
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.450838  0.834585  0.468577
b     │ 0.453904  0.850216  0.584421
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.450838  0.834585  0.468577
b           │ 0.453904  0.850216  0.584421
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.450838  0.834585  0.468577
b     │ 0.453904  0.850216  0.584421
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.073939  0.764703  0.892264  0.643015
two   │ 0.599065  0.772214  0.135017  0.173008
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0718614   0.758541
1           │   0.30754   0.249351

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.294726  0.687828
1           │ 0.871167  0.770502
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.266353
2 │ 0.726313
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.744141  0.804384
2     │ 0.518109  0.706841
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0705313    0.68717
2     │  0.196985   0.549102

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.521089  0.588951
2     │ 0.419926  0.381957
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.200652  0.262428
2     │ 0.398172  0.453191

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0365218   0.647505
2     │  0.245393   0.494353

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.399389   0.87688
2     │ 0.106246  0.348918

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.528867  0.198483
2     │ 0.448824  0.949012
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.890723  0.735627
2     │ 0.245282  0.590024

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.842464  0.465147
2     │  0.75579  0.318481

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.593414  0.051702
2     │  0.77867  0.329333

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0312452   0.959282
2     │  0.678814   0.733284

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.855391  0.271302
2     │ 0.207982  0.968946

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.921574   0.434354
2     │ 0.0410377   0.280085

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.132779   0.864208
2     │ 0.0598492   0.034463

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.204672  0.685098
2     │ 0.100437  0.202535
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.935715  0.160361

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.777202  0.387784
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.580535
2     │ 0.904004

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.64701
2     │ 0.261943
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.449191  0.985396
2     │ 0.518474  0.863665
done!
Timing named index: 0.000758476, array index: 0.00068173, named key: 0.129868112
Timing sum large sparse array: 0.005462191, named: 0.010457555
INFO: NamedArrays tests passed

>>> End of log
