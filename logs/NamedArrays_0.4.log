>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (559.546875 MB free)
Uptime: 8105.0 sec
Load Avg:  1.36865234375  1.1826171875  1.0947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     315324 s       1980 s      28520 s     397581 s         20 s
#2  3500 MHz     185342 s       3713 s      24438 s     571999 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.559165   0.614831   0.994617
b           │  0.966599   0.579887  0.0331381 0.5591647930118315 0.5591647930118315
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.559165   0.614831   0.994617
b     │  0.966599   0.579887  0.0331381
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.559165   0.614831   0.994617
b           │  0.966599   0.579887  0.0331381
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.559165   0.614831   0.994617
b     │  0.966599   0.579887  0.0331381
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.303207   0.883802  0.0350397   0.841585
two   │ 0.0572033   0.872844   0.767777   0.316504
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.807794  0.718031
1           │ 0.348048   0.60655

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.525871  0.636268
1           │  0.50833  0.493001
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.167108
2 │ 0.286658
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.431631   0.854063
2     │  0.517031  0.0670968
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0244434   0.862995
2     │  0.541456   0.342002

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.14713  0.670627
2     │ 0.516468  0.821211
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0619927   0.472662
2     │  0.794138   0.732431

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.488275  0.871106
2     │ 0.677082  0.399939

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.813394   0.754236
2     │  0.563778  0.0620124

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.968796  0.0785341
2     │ 0.0284349   0.630123
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.702964  0.351067
2     │ 0.895476  0.574921

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.957854  0.485109
2     │ 0.200464  0.550323

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.140212   0.185089
2     │ 0.0247982   0.887314

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0223078   0.472332
2     │  0.480013   0.863971

[:, :, C=1, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.823045   0.165743
2     │ 0.0969663  0.0911336

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.704415  0.0348329
2     │  0.368912   0.860361

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.493846   0.465439
2     │ 0.0797279   0.798808

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.558361  0.727874
2     │ 0.380233   0.79028
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0381698   0.371647

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.181865  0.502659
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.658745
2     │ 0.326676

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.24876
2     │ 0.533005
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.894682  0.530134
2     │ 0.111992   0.27009
done!
Timing named index: 0.000953574, array index: 0.000692153, named key: 0.102496363
Timing sum large sparse array: 0.012502163, named: 0.026027501
INFO: NamedArrays tests passed

>>> End of log
