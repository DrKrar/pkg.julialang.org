>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (791.47265625 MB free)
Uptime: 9159.0 sec
Load Avg:  1.18408203125  1.02783203125  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     381716 s       6949 s      29510 s     410741 s         18 s
#2  3499 MHz     244930 s         41 s      25390 s     617969 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5015674335910492	.5448168605129244	.13899874423429903	.2902200516640481
two	.2933887700253146	.7756314567422935	.634911475839081	.25051213314742604
a	40
b	33
c	56
d	72
e	74
f	5
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.297824   0.68451  0.464769
b           │  0.82247  0.616181   0.44954 0.2978236035564976 0.2978236035564976
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.297824   0.68451  0.464769
b     │  0.82247  0.616181   0.44954
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.297824   0.68451  0.464769
b           │  0.82247  0.616181   0.44954
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.297824   0.68451  0.464769
b     │  0.82247  0.616181   0.44954
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.340453    0.45235   0.638956   0.323647
er              │  0.392044   0.250401  0.0115107   0.063529
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139801396694608
0-element Named Array{Any,1}

[0.3509866421029295 0.11703626387262123 0.9392409691061996 0.8681685223186368
 0.24726089328796186 0.294877281596442 0.26654381828637597 0.6619405958054629]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.350987  0.117036  0.939241  0.868169
two   │ 0.247261  0.294877  0.266544  0.6619412x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.350987  0.117036  0.939241  0.868169
two   │ 0.247261  0.294877  0.266544  0.6619412x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     0.67601     0.373428  …      0.26377    -0.686079
2     │     1.64974     0.932806  …     0.494415    -0.4749371000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │      0.4882    -0.999781
2     │   -0.730619      1.11291
3     │    0.697934    -0.847797
4     │   -0.213796     0.281897
5     │  -0.0500904     0.379864
6     │    0.688775     0.172408
7     │    0.414405      1.94081
8     │   0.0219812     0.709744
9     │     1.24901  -0.00911397
⋮                 ⋮            ⋮
992   │    -0.35351   0.00714276
993   │   -0.924314     0.110729
994   │    0.552283    0.0778813
995   │     2.04714      1.33035
996   │   -0.595333    -0.672868
997   │   -0.840372     0.517461
998   │    -1.87365     0.797431
999   │    0.962228     0.336462
1000  │     2.46015    -0.7795741000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.27644
2    │ -0.0735289
3    │   0.628662
4    │   0.492508
5    │    1.20769
6    │   -1.29751
7    │   0.156904
8    │  -0.907602
9    │  -0.226782
⋮               ⋮
992  │ -0.0474721
993  │   0.421494
994  │   -1.43861
995  │  -0.127201
996  │  -0.683074
997  │   -1.23285
998  │   -0.70033
999  │   -1.93998
1000 │   0.6201562x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.308539   0.568219
1           │ 0.0526042   0.650946

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0622953    0.77566
1           │  0.574971   0.663064
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0150503
2  │   0.49956
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.936272   0.943823
2     │   0.87733  0.0638971
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.793044  0.146797
2     │ 0.656475  0.649918

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.149054   0.39669
2     │ 0.915017  0.932299
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.231692  0.714802
2     │ 0.989617  0.384539

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.922709  0.774577
2     │ 0.771094  0.336738

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.893279  0.471348
2     │ 0.556719  0.387685

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.908767   0.95159
2     │ 0.356452  0.213926
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.870289    0.81951
2     │ 0.0846927  0.0572358

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.756878  0.253727
2     │ 0.767869  0.333831

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.268339  0.574085
2     │ 0.892078  0.627538
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.710955  0.330156

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.575526  0.271661
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0768146
2     │  0.513079

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.979619
2     │  0.74883
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.652583  0.888793
2     │ 0.471614  0.807801
1000×1000 Named sparse matrix with 93 Float64 nonzero entries:
	[3674440393316115114 ,  6526988131186142725]  =  0.702668210158474
	[9396421306174063237 ,  4913249781191789579]  =  0.6473642539365965
	[5477100648039519996 , 12419957900638875901]  =  0.8375632744526913
	[4329451781928897369 ,  8058121953372963805]  =  0.24336801475272218
	[15042065790022137782,   113574861176001527]  =  0.6439397885260414
	[14542831684510380172,  9920432272297441209]  =  0.44740490663083077
	[303867652033633124  ,  9920432272297441209]  =  0.40810786038843805
	[17080632333507329842, 17822619313291261357]  =  0.43886466798082746
	                                              ⋮
	[15552872266293998212, 17135076390733320242]  =  0.957235312473697
	[17448184880248178237, 10647878191897777347]  =  0.40331580066834416
	[11544136240443520407, 17853331136360781895]  =  0.04436565400138148
	[4398365516710837200 , 17853331136360781895]  =  0.24726007170735032
	[6249139884124980606 , 16655780295490676025]  =  0.4426006343238471
	[2713027948549010671 ,  9815398096560962926]  =  0.23258466817399226
	[8809575672816075910 , 11993454575275700781]  =  0.5082363882684644
	[13711291875022394707,  1523061068178304284]  =  0.09117370926247936
	[615289593087278592  ,  1842419535934980543]  =  0.7440363859507308Timing named index: 0.000614174, array index: 0.000441494, named key: 0.071738651
Timing sum large sparse array: 0.005664318, named: 0.012303536
done!
INFO: NamedArrays tests passed

>>> End of log
