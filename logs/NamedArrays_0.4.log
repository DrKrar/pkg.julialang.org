>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (800.55078125 MB free)
Uptime: 8562.0 sec
Load Avg:  1.07080078125  0.9951171875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     368554 s        800 s      33519 s     369194 s         16 s
#2  3499 MHz     251176 s       5897 s      30448 s     541887 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.20540230196643017	.7500933037673867	.48456959622054074	.7479204693681443
two	.20673522361991536	.11526038364799418	.34516664936735864	.205987008491058
a	35
b	65
c	10
d	74
e	11
f	9
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.978731  0.424784  0.515292
b           │ 0.759341  0.663281  0.476704 0.9787308649236084 0.9787308649236084
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.978731  0.424784  0.515292
b     │ 0.759341  0.663281  0.476704
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.978731  0.424784  0.515292
b           │ 0.759341  0.663281  0.476704
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.978731  0.424784  0.515292
b     │ 0.759341  0.663281  0.476704
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.545955    0.556563  0.00153475    0.750603
er              │   0.530684    0.196947   0.0139703     0.45097
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140166759232416
0-element Named Array{Any,1}

[0.7107263575660614 0.005579192970702085 0.8833647430817066 0.049910197744936546
 0.8418898070492886 0.2002271294081459 0.26066345838972604 0.9089339951566129]
2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.710726  0.00557919    0.883365   0.0499102
two   │    0.84189    0.200227    0.260663    0.9089342x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.710726  0.00557919    0.883365   0.0499102
two   │    0.84189    0.200227    0.260663    0.9089342x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.00329     -1.78736  …      1.26658     -1.16146
2     │   -0.912032      -0.8887  …    -0.389122     0.1173181000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.110773   -0.749734
2     │   -2.05042    -1.18116
3     │   -1.15113    0.714376
4     │   0.403333   0.0536214
5     │   0.220251    -1.52396
6     │  -0.180484    0.573008
7     │ -0.0676232     0.62113
8     │   0.912444     2.37265
9     │  -0.922839    0.322241
⋮                ⋮           ⋮
992   │  0.0672912     1.11063
993   │   0.338469    -0.74854
994   │  -0.134253   -0.636682
995   │   -1.10867     1.92512
996   │  0.0234947    -1.36582
997   │   -1.28617    0.696961
998   │   -2.04346     -1.5979
999   │  -0.321724   -0.359522
1000  │   -1.01545    0.7881231000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │ -0.0181987
2    │    1.85231
3    │   -1.09872
4    │   -0.69083
5    │    0.77903
6    │   0.481129
7    │   0.338207
8    │    1.14335
9    │   -1.23141
⋮               ⋮
992  │   -1.37384
993  │    0.80485
994  │  -0.386191
995  │  -0.876436
996  │   0.186183
997  │   0.301658
998  │    1.75499
999  │   -1.28568
1000 │    1.823812x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0641273   0.200749
1           │  0.108721   0.998887

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.453669   0.484708
1           │ 0.0661352   0.889444
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │   0.48843
2  │ 0.0838741
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0282371    0.81945
2     │  0.743907   0.583005
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0421897   0.469402
2     │  0.697801   0.620903

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.367642  0.682469
2     │ 0.244861  0.473281
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.538318   0.172516
2     │ 0.0339258   0.809299

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.32327    0.9275
2     │ 0.533177  0.631538

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.746324   0.411937
2     │  0.119844  0.0705579

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.580854  0.0890436
2     │ 0.0924817   0.250867
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.924975  0.309074
2     │ 0.728919  0.770275

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.85921  0.806106
2     │ 0.434793  0.974898

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.215158  0.656457
2     │ 0.350733  0.967556
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.572687  0.224571

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0712902   0.798007
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1
──────┼───────────
1     │ 0.00813554
2     │   0.577499

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.968668
2     │ 0.885132
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.347748   0.37658
2     │ 0.216401  0.631131
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[13710539999002292266,   144428425607543167]  =  0.618306201724504
	[2362724562918981188 ,  5312631360709731698]  =  0.576321184431368
	[447754687212557937  , 13888991764943741743]  =  0.1690458456156676
	[6036984650697465167 , 10106592262940987645]  =  0.9560201593900104
	[3945256368785098242 , 11496001657944805140]  =  0.5192315587348315
	[2773759897603617072 ,  4329451781928897369]  =  0.9590610979281413
	[14278035825230678864, 15774366784000975931]  =  0.2257772993430569
	[9284771721002998782 , 15774366784000975931]  =  0.5455930156478923
	                                              ⋮
	[6681257941163664566 ,  1526691723863411160]  =  0.2538461902872653
	[8340722336334766600 , 17718833055079784125]  =  0.3395404160241613
	[11373711686711023476, 17718833055079784125]  =  0.7580762920390753
	[7592977768811028340 , 17737936919457265947]  =  0.09377764382242226
	[5983786778458205040 ,  8779884342238752210]  =  0.7998471860785872
	[17498567691103755585, 16031689834122954645]  =  0.12016536818906687
	[10723354513323415010, 14835807873575694564]  =  0.8104879990855993
	[5597731276780160114 ,  1842419535934980543]  =  0.450189271030911
	[12459814376862134316,  2588469222286953884]  =  0.14992393744768817Timing named index: 0.000508727, array index: 0.00079593, named key: 0.131215887
Timing sum large sparse array: 0.009437904, named: 0.02025875
done!
INFO: NamedArrays tests passed

>>> End of log
