>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (828.90234375 MB free)
Uptime: 7690.0 sec
Load Avg:  1.1416015625  1.01171875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     363115 s       7746 s      29699 s     293979 s         21 s
#2  3500 MHz     243007 s        922 s      26415 s     473371 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.66855725899102	.7024557397904809	.2735693169105533	.12652371115786587
two	.04294778739557392	.37382307992177144	.7754270892720021	.8158421201162651
a	79
b	86
c	9
d	21
e	16
f	23
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0815514   0.294101    0.40558
b           │  0.705005   0.114026   0.103737 0.08155137983645222 0.08155137983645222
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0815514   0.294101    0.40558
b     │  0.705005   0.114026   0.103737
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0815514   0.294101    0.40558
b           │  0.705005   0.114026   0.103737
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0815514   0.294101    0.40558
b     │  0.705005   0.114026   0.103737
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.192407  0.872004  0.159072  0.471566
er              │ 0.387365  0.533386  0.246546  0.686602
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140000217368784
0-element Named Array{Any,1}

[0.7883475978061703 0.891514246894388 0.29114454861762273 0.9160379982386331
 0.3357320841371667 0.9600030838637414 0.865929969977109 0.12965229141738166]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.788348  0.891514  0.291145  0.916038
two   │ 0.335732  0.960003   0.86593  0.1296522x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.788348  0.891514  0.291145  0.916038
two   │ 0.335732  0.960003   0.86593  0.1296522x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     0.78162     -2.85157  …     0.885916    -0.496993
2     │   0.0767133      0.05088  …     -1.05379      1.064661000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.47855   -0.160283
2     │   0.401635    -2.09934
3     │  -0.166641    0.162475
4     │   0.794358     1.37894
5     │  -0.217539   0.0156097
6     │    1.08965    -1.92824
7     │    1.76095     1.25737
8     │   -0.54482    -1.28739
9     │    1.12894   -0.672308
⋮                ⋮           ⋮
992   │   0.791538  -0.0254433
993   │ -0.0610844     2.18661
994   │    1.34948    -1.36238
995   │   0.217584    0.523839
996   │   -1.01889     1.23843
997   │    0.37534    0.280116
998   │  -0.633617    0.157647
999   │  -0.474009    0.172414
1000  │   -1.33553   0.04322981000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.012448
2    │   -0.5992
3    │  -1.96727
4    │   1.30582
5    │  0.817315
6    │ -0.867539
7    │ -0.657993
8    │ -0.298739
9    │  0.763963
⋮              ⋮
992  │    0.4205
993  │  0.590171
994  │  -2.18155
995  │   1.78806
996  │ -0.317733
997  │ -0.397811
998  │   0.30641
999  │  -1.54264
1000 │   1.536152x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.389206  0.706433
1           │ 0.878816  0.496657

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.415304  0.264525
1           │ 0.598776  0.106386
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.327365
2  │ 0.240374
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.471478  0.455721
2     │ 0.700419   0.64879
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.083146  0.875812
2     │ 0.852849  0.940891

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.808906  0.361308
2     │ 0.528828  0.229145
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.218207   0.519603
2     │  0.616989  0.0488763

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.857005  0.161719
2     │ 0.800047  0.143131

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.225513  0.782787
2     │ 0.645143   0.79682

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0377439   0.422602
2     │  0.468878   0.819675
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.58337   0.384827
2     │   0.58535  0.0906416

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.626076  0.249329
2     │ 0.833864  0.756109

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.727894  0.156476
2     │ 0.565811  0.646407
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.217012  0.133373

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.938662  0.960542
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.538344
2     │ 0.567493

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.784802
2     │ 0.693209
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.102873     0.107
2     │ 0.683412  0.118674
1000×1000 Named sparse matrix with 84 Float64 nonzero entries:
	[14956803718882296446,  6806539949965918083]  =  0.01904306717015669
	[3929618674436644774 ,  4247719799217886270]  =  0.6371397175810583
	[4972200319723568142 ,  4247719799217886270]  =  0.9068491383761255
	[15884119711317434855,  2230070772219402886]  =  0.5165301162075375
	[8048960545880889629 , 17676219393380616284]  =  0.47458824990837845
	[14071609933964289859,  4394159825732135742]  =  0.07805996662653558
	[3253468397832770835 , 16621507366152005377]  =  0.4910807010365599
	[14626980926454133241,  4976045735032000325]  =  0.4256619746832573
	                                              ⋮
	[7369566324703660862 ,  8471876845144429043]  =  0.47123536844526126
	[12989059827452924244,  2792481481398066916]  =  0.02573877939539848
	[15518036295308090568,  5597731276780160114]  =  0.12298190258982333
	[2362724562918981188 ,   372001016642560619]  =  0.6808037412876622
	[17508789370476597174, 14057278280866812536]  =  0.6410232204236841
	[9526342322394325946 ,  7989582431359101293]  =  0.9503126945443297
	[10504931430957650557,  8779884342238752210]  =  0.6628923110495404
	[17795748529514954214,  9223427034658990711]  =  0.7098809914698929
	[17212324651030760382,  4047135350800189603]  =  0.11233312639124393Timing named index: 0.000767975, array index: 0.00051527, named key: 0.12987767
Timing sum large sparse array: 0.010683178, named: 0.029875799
done!
INFO: NamedArrays tests passed

>>> End of log
