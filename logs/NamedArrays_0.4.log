>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (885.26171875 MB free)
Uptime: 7257.0 sec
Load Avg:  1.5283203125  1.0654296875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     315400 s         76 s      26466 s     310939 s         14 s
#2  3499 MHz     184358 s         63 s      23193 s     488284 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.556146    0.99335  0.0366743
b           │  0.328774   0.596407   0.654121 0.5561457423378813 0.5561457423378813
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.556146    0.99335  0.0366743
b     │  0.328774   0.596407   0.654121
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.556146    0.99335  0.0366743
b           │  0.328774   0.596407   0.654121
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.556146    0.99335  0.0366743
b     │  0.328774   0.596407   0.654121
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.67187   0.488802   0.155993   0.823735
two   │ 0.0310072   0.429418   0.475145   0.395768
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0180698   0.380413
1           │  0.999195  0.0641333

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.234318  0.841344
1           │ 0.661024  0.868748
2-element Named Array{Float64,1}
A │ 
──┼──────────
1 │  0.643076
2 │ 0.0304596
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0425584   0.765598
2     │  0.874276   0.614984
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.761756   0.44851
2     │ 0.242924   0.51031

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.476681  0.484039
2     │ 0.882441  0.111013
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.707179  0.543948
2     │ 0.472689  0.992371

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.648018   0.61154
2     │ 0.862312   0.78828

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.824134  0.342075
2     │ 0.716924  0.521921

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.8264  0.242929
2     │ 0.461497  0.145109
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.217353  0.295426
2     │  0.71201   0.88284

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.503467   0.345636
2     │ 0.0934158   0.514283

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0694674   0.327764
2     │  0.144053      0.239

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.581251  0.510875
2     │ 0.797581  0.354715

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.825996  0.432579
2     │ 0.581896  0.448241

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.565978  0.447533
2     │ 0.732707  0.542267

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.588842   0.22383
2     │ 0.896393  0.782194

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.832727  0.523467
2     │ 0.541113  0.804677
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.391966  0.249075

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.176346  0.186885
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.496976
2     │ 0.800454

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.333653
2     │ 0.101954
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.811369  0.985612
2     │ 0.975949  0.240742
done!
Timing named index: 0.000728683, array index: 0.000196484, named key: 0.0700674
Timing sum large sparse array: 0.013873462, named: 0.012830079
INFO: NamedArrays tests passed

>>> End of log
