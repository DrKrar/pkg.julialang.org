>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (796.95703125 MB free)
Uptime: 8355.0 sec
Load Avg:  1.0087890625  0.99951171875  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz     376075 s       4341 s      34045 s     335435 s         16 s
#2  3506 MHz     240597 s       2706 s      31017 s     532031 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.2
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.42467811065647343	.060936157502466726	.38864473901499896	.8975934278057827
two	.24297132699436386	.3937385103580864	.9587365386474762	.9317999387249447
a	31
b	35
c	64
d	93
e	17
f	96
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.589482   0.932725   0.727535
b           │ 0.0665264   0.529087   0.175285 0.5894820751140231 0.5894820751140231
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.589482   0.932725   0.727535
b     │ 0.0665264   0.529087   0.175285
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.589482   0.932725   0.727535
b           │ 0.0665264   0.529087   0.175285
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.589482   0.932725   0.727535
b     │ 0.0665264   0.529087   0.175285
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.911646  0.615788   0.79559  0.214182
er              │ 0.186615  0.058295   0.46016  0.331861
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140272817550400
0-element Named Array{Any,1}

[0.12456755488186189 0.4275458486001986 0.3315914463607834 0.8542940729871387
 0.3853720034862729 0.25780589133392073 0.39719490722736617 0.5248600568020187]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.124568  0.427546  0.331591  0.854294
two   │ 0.385372  0.257806  0.397195   0.524862x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.124568  0.427546  0.331591  0.854294
two   │ 0.385372  0.257806  0.397195   0.524862x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.060246      0.984764  …     0.0314978       2.20943
2     │     0.642847    0.00204171  …     -0.345418    -0.08423311000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.85556     2.55065
2     │  0.0466567    0.608089
3     │  0.0895094   -0.658149
4     │  -0.504246   -0.314389
5     │  -0.396515    -0.69146
6     │    2.01551   -0.341583
7     │  -0.185292     1.34491
8     │ -0.0652847    0.746799
9     │   -1.59164    0.368579
⋮                ⋮           ⋮
992   │   0.275837     0.89045
993   │   -1.13112   -0.587919
994   │   0.412471    -1.23417
995   │  0.0438454     -1.3092
996   │   0.599066    0.890855
997   │   0.814803   0.0468649
998   │   0.568204     1.15363
999   │  -0.108989   0.0378484
1000  │    1.71551  -0.06117761000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   1.05318
2    │  0.753958
3    │ -0.434313
4    │  -1.86989
5    │   1.80272
6    │ -0.137504
7    │ -0.317755
8    │  0.662379
9    │ -0.349925
⋮              ⋮
992  │  0.245188
993  │  0.602587
994  │ 0.0879294
995  │ -0.710826
996  │ 0.0863889
997  │  0.456386
998  │  0.235627
999  │ -0.291977
1000 │  0.1873242x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.418879  0.499949
1           │ 0.407515  0.217259

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.226246  0.669094
1           │ 0.145871  0.315973
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.255573
2  │ 0.279425
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.709924  0.425759
2     │ 0.987175  0.248235
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.246947   0.404289
2     │ 0.0206203   0.905329

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.552881  0.143996
2     │ 0.600988  0.628652
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.332583  0.399855
2     │ 0.311446  0.678411

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.375592  0.574786
2     │ 0.930743  0.575599

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.339954  0.649326
2     │ 0.814709   0.21252

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.716459   0.339173
2     │  0.794252  0.0617064
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.364613  0.824354
2     │ 0.744628  0.717002

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.401977  0.022484
2     │ 0.319512  0.705709

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.270416  0.062094
2     │ 0.516856  0.703159
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.513989  0.828646

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.261808  0.402069
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.919895
2     │ 0.297893

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.565485
2     │ 0.853729
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.24984  0.437438
2     │ 0.477623  0.307116
1000×1000 Named sparse matrix with 96 Float64 nonzero entries:
	[14117127041272093201, 13888991764943741743]  =  0.07159574461281681
	[8830415785437611716 ,  4247719799217886270]  =  0.3006466651912094
	[16449765671153982371,  5062864901616737721]  =  0.24930179835692168
	[4227256904035335927 ,  8629498292780771804]  =  0.525859091414997
	[9050964765503943907 ,  3253468397832770835]  =  0.0646677525380095
	[11993454575275700781, 17678211741433686062]  =  0.6745067954117905
	[6728864970615655582 ,  8725235013359650451]  =  0.9283709640601967
	[1811770088802748199 ,  1166092285267503990]  =  0.7825273243256115
	                                              ⋮
	[2537122889535958280 , 12680114143357042360]  =  0.18937113816783735
	[12357008997902541361, 16077859356318100249]  =  0.3898343083708149
	[1177457170591155921 , 11732026533134275955]  =  0.5407779653958895
	[15795741207980313740, 16243515418520287792]  =  0.577124474606588
	[1925573130087135049 ,  4285843451033309381]  =  0.21713366005566015
	[16909640532418341430,  2318046236442875673]  =  0.5471151642660528
	[9284771721002998782 , 11551291857879764225]  =  0.9176629493164423
	[1341783406603060396 ,  8779884342238752210]  =  0.057685104326771874
	[14774945750507892610, 15240003619098155971]  =  0.660888229003689Timing named index: 0.000774888, array index: 0.000789326, named key: 0.135206545
Timing sum large sparse array: 0.010268208, named: 0.025697759
done!
INFO: NamedArrays tests passed

>>> End of log
