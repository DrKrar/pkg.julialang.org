>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (792.203125 MB free)
Uptime: 9076.0 sec
Load Avg:  1.0869140625  1.00537109375  1.0498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     388640 s       6416 s      33142 s     392329 s         22 s
#2  3500 MHz     261775 s        810 s      29931 s     586866 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7459602598875585	.7314912341905602	.7919516963301805	.9313455219692421
two	.09265853472739916	.5437275185052588	.3814331271417868	.3754296646083717
a	56
b	69
c	17
d	2
e	12
f	32
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.337566  0.732301  0.872606
b           │ 0.294088  0.829789  0.652605 0.33756591195970387 0.33756591195970387
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.337566  0.732301  0.872606
b     │ 0.294088  0.829789  0.652605
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.337566  0.732301  0.872606
b           │ 0.294088  0.829789  0.652605
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.337566  0.732301  0.872606
b     │ 0.294088  0.829789  0.652605
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.225426    0.5589  0.178484  0.938937
er              │ 0.894863  0.902034  0.470567   0.98683
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.9956928351882335 0.47766624689143944 0.3917881074712979 0.5063488633717612
 0.8967402483674956 0.08115063152050395 0.38516770364679553 0.23841613870815537]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.995693   0.477666   0.391788   0.506349
two   │   0.89674  0.0811506   0.385168   0.2384162x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.995693   0.477666   0.391788   0.506349
two   │   0.89674  0.0811506   0.385168   0.2384162x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.999599     -0.295148  …       1.74032     -0.268283
2     │      1.30916       1.66177  …      -1.45814      0.4573421000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.733078    0.130611
2     │   0.714871   -0.137211
3     │  -0.982833    0.767537
4     │     1.1222     2.29819
5     │  0.0546503     1.07492
6     │    1.40221    -1.28373
7     │  -0.311659  -0.0388758
8     │  0.0169894     1.79946
9     │    1.26842     1.46829
⋮                ⋮           ⋮
992   │   -1.28682    -2.43042
993   │    2.14577   -0.371908
994   │   0.107058    0.292095
995   │   -1.66769    0.459747
996   │  -0.265541    0.350701
997   │    1.12461    -1.08089
998   │    1.65826    0.420542
999   │   0.108931    -1.38766
1000  │   0.675223    0.9922561000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.161339
2    │   0.672711
3    │   -1.17096
4    │   -1.31648
5    │    1.29576
6    │  -0.128672
7    │  -0.394314
8    │  -0.826823
9    │  -0.897592
⋮               ⋮
992  │    1.15363
993  │   0.156755
994  │    0.34462
995  │ -0.0041814
996  │    1.52288
997  │   -1.94185
998  │   0.126504
999  │  -0.438058
1000 │    -2.04042x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0986614   0.157999
1           │  0.729636   0.204315

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.934485  0.591718
1           │  0.15555  0.334129
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.370652
2  │ 0.171323
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.414909  0.340733
2     │ 0.695579  0.331321
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.747133  0.120975
2     │ 0.328182  0.856944

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.605048   0.38208
2     │ 0.811107  0.183765
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.884374  0.202777
2     │ 0.284307  0.177699

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.793932   0.226616
2     │ 0.0792755   0.612763

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0388699    0.345988
2     │ 0.00861873   0.0306689

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0688513   0.906738
2     │  0.528603   0.366359
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.822113  0.953942
2     │ 0.514249  0.146924

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.35583   0.780888
2     │  0.350386  0.0417951

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.44476  0.00224518
2     │   0.323819    0.751065
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.681685  0.319744

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.122946  0.940093
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │       1
──────┼────────
1     │  0.7607
2     │ 0.50943

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.163395
2     │ 0.406427
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.207083  0.610815
2     │ 0.076278  0.148239
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[4136980692892754005 ,  5004131969199419793]  =  0.9060171506488965
	[9187579804086460617 ,  6564272639106249010]  =  0.30272363590118045
	[578032745093892040  ,  6134978669850253296]  =  0.645944938459259
	[9666738521404155677 , 14033074738777421392]  =  0.6941253720733243
	[15220802300650204788, 18168544338330653462]  =  0.6882614688505169
	[16221828541365357577,  8265524791738013937]  =  0.9147899148605645
	[2792827719799450558 ,  1166092285267503990]  =  0.24435196298912598
	[16031689834122954645,  8351221943604278133]  =  0.03109503295530125
	                                              ⋮
	[17090183137420717841, 12554874066387155728]  =  0.9251996613134965
	[16992521057894414253,  6738482027934271349]  =  0.24473009719600536
	[17211410618634043162, 14057278280866812536]  =  0.8471911799972562
	[6242003743164303227 , 14057278280866812536]  =  0.020377365355551014
	[5629102263838832842 , 10663619072362037589]  =  0.07083914552773485
	[16996133433751471822, 10655964431342481635]  =  0.500866030482704
	[12452104047290745507,  7989582431359101293]  =  0.5492233041800827
	[9763015172052692524 ,  9223427034658990711]  =  0.4684900091809401
	[1656903684371133098 ,  7957587899775749890]  =  0.25669213704758165Timing named index: 0.00079124, array index: 0.000787271, named key: 0.128694943
Timing sum large sparse array: 0.006157166, named: 0.011739764
done!
INFO: NamedArrays tests passed

>>> End of log
