>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.5
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (864.7265625 MB free)
Uptime: 7047.0 sec
Load Avg:  1.01806640625  0.9853515625  1.00341796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     301287 s         47 s      29836 s     279273 s         12 s
#2  3500 MHz     164572 s         90 s      25977 s     482047 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.1
 - DataStructures                0.4.5
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.646251    0.898701    0.723799
b           │   0.657409    0.440465  0.00562837 0.6462507330221083 0.6462507330221083
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.646251    0.898701    0.723799
b     │   0.657409    0.440465  0.00562837
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.646251    0.898701    0.723799
b           │   0.657409    0.440465  0.00562837
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.646251    0.898701    0.723799
b     │   0.657409    0.440465  0.00562837
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.857765   0.255231   0.897667   0.223963
two   │  0.992401  0.0811822   0.764224   0.367792
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.332543    0.893897
1           │ 0.00817554    0.236534

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0161499   0.606616
1           │  0.661074   0.608252
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.472055
2 │  0.78839
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.904842  0.239041
2     │ 0.245386  0.602036
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.38313  0.770343
2     │ 0.652414  0.311085

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.434401  0.313589
2     │ 0.153834  0.123335
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.678205   0.737154
2     │ 0.0219358   0.489358

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.650722  0.638893
2     │ 0.981895  0.601516

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.74837  0.0316933
2     │  0.728473   0.179049

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.500118  0.638049
2     │ 0.935226  0.106501
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.217735  0.724946
2     │ 0.446619  0.782328

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.197247  0.260229
2     │ 0.635767   0.83869

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.085608  0.351832
2     │ 0.770801  0.894634

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.222825  0.688659
2     │   0.6786  0.163412

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.637301  0.292595
2     │ 0.448125  0.327678

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.830076  0.527761
2     │ 0.192812  0.196986

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.132614  0.141323
2     │ 0.528928  0.713699

[:, :, C=2, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0435707   0.127681
2     │  0.135832   0.183849
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.305793  0.252869

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.113919  0.146083
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.162244
2     │ 0.891911

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.75299
2     │ 0.550795
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0966822  0.00499296
2     │   0.753141    0.565747
done!
Timing named index: 0.000734416, array index: 0.000280803, named key: 0.114662371
Timing sum large sparse array: 0.010685172, named: 0.015767832
INFO: NamedArrays tests passed

>>> End of log
