>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (891.71484375 MB free)
Uptime: 6733.0 sec
Load Avg:  0.97119140625  0.9853515625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     315864 s        111 s      29520 s     260374 s         16 s
#2  3500 MHz     198127 s         41 s      27236 s     427369 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.339375820095128	.07627227059169583	.3211116597723218	.484020866097044
two	.6434843835077759	.9999670198984241	.5660405890680964	.8990239894725538
a	11
b	5
c	31
d	17
e	71
f	27
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.158205  0.00467117    0.484121
b           │   0.869849    0.752945    0.510383 0.1582046994705122 0.1582046994705122
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.158205  0.00467117    0.484121
b     │   0.869849    0.752945    0.510383
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.158205  0.00467117    0.484121
b           │   0.869849    0.752945    0.510383
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.158205  0.00467117    0.484121
b     │   0.869849    0.752945    0.510383
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │  0.19519  0.149412  0.783347  0.401217
er              │ 0.713144  0.609319  0.293355  0.746741
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140509868394848
0-element Named Array{Any,1}

[0.7131575663467242 0.47823193807177344 0.649060259089514 0.5736404576912073
 0.16867217506759036 0.9964122060832359 0.4263824445192481 0.9167638235526412]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.713158  0.478232   0.64906   0.57364
two   │ 0.168672  0.996412  0.426382  0.9167642x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.713158  0.478232   0.64906   0.57364
two   │ 0.168672  0.996412  0.426382  0.9167642x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │ -0.000951923      -1.37917  …      0.616452      0.636079
2     │    -0.454364      0.480157  …     -0.281454     -0.9354561000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.310808    -1.54137
2     │   0.444571   -0.044669
3     │  -0.677595    -1.31189
4     │   0.660703    -2.46646
5     │   0.188886   -0.497636
6     │    2.60213   -0.305663
7     │   0.742773     1.50943
8     │   0.160092    0.595831
9     │    1.88844     1.07265
⋮                ⋮           ⋮
992   │   0.923997   -0.608426
993   │     1.8993     1.20669
994   │   0.155526   -0.465261
995   │   0.103712    -1.61359
996   │  -0.905686   -0.604418
997   │   -1.54725  -0.0944271
998   │     2.0625    0.847339
999   │  -0.458882    -1.83919
1000  │   0.178557     1.237741000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.376741
2    │ -0.984231
3    │ -0.355409
4    │  -1.74526
5    │ -0.516319
6    │  -1.55262
7    │ -0.605266
8    │  0.286408
9    │ -0.143262
⋮              ⋮
992  │  0.346031
993  │   1.03937
994  │ -0.279006
995  │ -0.157961
996  │  -1.20185
997  │  -0.17821
998  │  -1.33555
999  │ -0.738476
1000 │  -1.240962x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.141918  0.628192
1           │ 0.283625  0.679674

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.43277   0.13364
1           │ 0.410247  0.555144
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.916536
2  │ 0.139481
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.604155  0.986301
2     │ 0.974674  0.114746
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.491798  0.546349
2     │ 0.169898   0.38591

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.238737  0.169641
2     │ 0.775361  0.216555
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.547042     0.5927
2     │  0.334515  0.0548994

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.700371  0.495976
2     │ 0.247185  0.747466

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.999021  0.666255
2     │ 0.745364  0.556742

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.986568  0.523751
2     │  0.78113  0.447212
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.381122  0.103315
2     │ 0.993653  0.663148

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.897678  0.219949
2     │ 0.761583  0.970008

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.710002   0.22642
2     │ 0.354623  0.924266
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0744807   0.668793

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.767265  0.825487
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.580168
2     │ 0.307164

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.110259
2     │ 0.525241
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.551444  0.379578
2     │ 0.168144  0.633802
1000×1000 Named sparse matrix with 92 Float64 nonzero entries:
	[16112569381171233070,  6564272639106249010]  =  0.6653514949816937
	[5846421799401500860 ,  1703847331300677320]  =  0.08224918371056056
	[11355399569336610079,  5927176887743683346]  =  0.6716352394631604
	[1861743268047760089 , 10361072080411987344]  =  0.7969953463906911
	[14343632987770563929, 10601912832305821454]  =  0.06781697634861827
	[14499706018088212885,   273396578563598247]  =  0.302482944072771
	[213295357340211673  ,  2836200141957565154]  =  0.8380543200092625
	[15559590888388931697,  2836200141957565154]  =  0.8183410489023497
	                                              ⋮
	[11660797228701312840, 11551291857879764225]  =  0.20003094507345076
	[9582646421956613839 , 16836080019131185762]  =  0.5205684469601499
	[665597800756090850  ,  8779884342238752210]  =  0.6243972943149911
	[5323866148561809738 ,  1203336841330469213]  =  0.2523946497735219
	[3029636859866978704 , 11314283927973801071]  =  0.6558571543388108
	[16655780295490676025, 11314283927973801071]  =  0.8823469818564182
	[8225434152398798479 ,  5122894113285174381]  =  0.2865416113281407
	[10663619072362037589,  3010300210541878305]  =  0.010236019343408564
	[665597800756090850  ,  2588469222286953884]  =  0.9682013443511124Timing named index: 0.000786003, array index: 0.000622093, named key: 0.128987817
Timing sum large sparse array: 0.006378637, named: 0.0186854
done!
INFO: NamedArrays tests passed

>>> End of log
