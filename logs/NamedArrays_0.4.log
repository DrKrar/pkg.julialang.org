>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (788.796875 MB free)
Uptime: 7739.0 sec
Load Avg:  1.0888671875  1.01123046875  1.03955078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     361622 s       2070 s      33079 s     294292 s         18 s
#2  3500 MHz     225369 s       4115 s      30229 s     480602 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.18.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.665061801473279	.3223005383353261	.7931093416120785	.8070273708870901
two	.04749948518671809	.3144573052422881	.4642324670974407	.6691024047889165
a	12
b	3
c	40
d	11
e	75
f	95
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.307926   0.199707   0.647631
b           │   0.22873   0.535182  0.0223366 0.30792555157685 0.30792555157685
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.307926   0.199707   0.647631
b     │   0.22873   0.535182  0.0223366
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.307926   0.199707   0.647631
b           │   0.22873   0.535182  0.0223366
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.307926   0.199707   0.647631
b     │   0.22873   0.535182  0.0223366
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.931809  0.696371  0.436453  0.418802
er              │ 0.883257  0.135682  0.939172  0.847737
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140672215411976
0-element Named Array{Any,1}

[0.036607223814890455 0.36866013394318986 0.38269292208117633 0.8517436297265779
 0.21903129693771994 0.7680525502047075 0.3422108426075763 0.43718303063145325]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0366072    0.36866   0.382693   0.851744
two   │  0.219031   0.768053   0.342211   0.4371832x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0366072    0.36866   0.382693   0.851744
two   │  0.219031   0.768053   0.342211   0.4371832x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.992157     -0.153774  …      0.280641     -0.707952
2     │      1.11976     -0.557103  …     -0.954455     -0.3672811000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -0.35681    0.651824
2     │   0.297739    0.128411
3     │   0.703581  -0.0913355
4     │     1.2759   -0.740222
5     │   0.813565   -0.327879
6     │   -1.64478     0.11487
7     │  -0.785148    -2.02351
8     │   0.803943    -1.39854
9     │   -1.10129     -1.0359
⋮                ⋮           ⋮
992   │   0.782433   -0.268913
993   │   0.526462  -0.0294859
994   │   0.462589     -1.5654
995   │  -0.978307   -0.153126
996   │  -0.529228    0.294478
997   │  0.0946771   -0.206534
998   │    1.47775    -1.05907
999   │   -0.51156   -0.236881
1000  │   0.302579     1.545131000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.790714
2    │  0.496044
3    │  0.355068
4    │  -1.73801
5    │ -0.211425
6    │  0.376557
7    │ -0.400208
8    │  0.516115
9    │  0.833157
⋮              ⋮
992  │ 0.0790714
993  │ -0.818375
994  │ -0.314613
995  │  0.592888
996  │   0.62105
997  │  0.230836
998  │  -1.17326
999  │  0.612783
1000 │  0.6286612x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.921411  0.999612
1           │ 0.572422  0.296486

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.292663  0.150207
1           │ 0.296697  0.746858
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.546956
2  │ 0.0505516
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.528182   0.878775
2     │  0.832313  0.0117427
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.194192  0.660318
2     │ 0.850963   0.88215

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.181555  0.528054
2     │  0.35051  0.587159
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.778814  0.304371
2     │ 0.986314  0.387066

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.856496  0.955928
2     │ 0.495672  0.945993

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.329443  0.395195
2     │ 0.777948  0.106675

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.545895  0.241224
2     │ 0.456416  0.711541
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.354101  0.0784621
2     │ 0.0886387   0.399995

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.932629  0.634795
2     │ 0.341395  0.922945

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.551813  0.389163
2     │  0.71206  0.945173
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.490363  0.232222

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.665394  0.899499
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.54036
2     │ 0.676472

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.694824
2     │ 0.290079
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.836034  0.884983
2     │ 0.565539  0.828252
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[4970785464298144445 ,  1703847331300677320]  =  0.2849868827031836
	[2539844710871411659 ,  6134978669850253296]  =  0.0943696797339919
	[16332748141415539697,   273396578563598247]  =  0.6906430128015448
	[9526148563984720196 ,  4329451781928897369]  =  0.21875036314210172
	[2876475700534992100 ,  3039451196773527828]  =  0.78833612287817
	[2365706432056806243 , 11907679469289587679]  =  0.735820355817792
	[8580264188801969311 , 12876006501778729182]  =  0.991958585272722
	[4494612503536197367 ,  2001767177420584454]  =  0.7505015521002609
	                                              ⋮
	[18443816037252674910, 15078133678202242611]  =  0.19734457320433196
	[3674440393316115114 ,  2107242561845671563]  =  0.33002136004150495
	[310341593395597147  , 13710539999002292266]  =  0.7279097647442994
	[16836080019131185762,  4285843451033309381]  =  0.8775808852385514
	[1692321568384860970 , 11604119926906451644]  =  0.5599120737870182
	[11104426471044518599, 11382910810432795234]  =  0.004536346108631406
	[13517292640990875502,  6468689935112619700]  =  0.4935880458813857
	[18320751966872690453, 12020782256748308824]  =  0.4046408476407348
	[5887916164234050841 , 16202651256804923129]  =  0.5052185621473626Timing named index: 0.000735532, array index: 0.00062342, named key: 0.119285909
Timing sum large sparse array: 0.010107547, named: 0.025344883
done!
INFO: NamedArrays tests passed

>>> End of log
