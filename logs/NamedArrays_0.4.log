>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.5
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (804.51953125 MB free)
Uptime: 8806.0 sec
Load Avg:  1.03173828125  0.951171875  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     393019 s         59 s      30107 s     367359 s         14 s
#2  3499 MHz     238719 s         93 s      25402 s     586863 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.5
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.3190767637951779	.6597051376608503	.4259984822336451	.2139733579134968
two	.1665122075613752	.6485231581239199	.8039641475942754	.7587402132313805
a	7
b	95
c	87
d	48
e	92
f	33
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │    0.7718   0.510844   0.144674
b           │  0.700457  0.0594598   0.447011 0.7718003939016906 0.7718003939016906
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │    0.7718   0.510844   0.144674
b     │  0.700457  0.0594598   0.447011
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │    0.7718   0.510844   0.144674
b           │  0.700457  0.0594598   0.447011
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │    0.7718   0.510844   0.144674
b     │  0.700457  0.0594598   0.447011
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.986734   0.745224   0.589606   0.796251
er              │  0.873178   0.462596  0.0472419  0.0108319
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140314673428384
0-element Named Array{Any,1}

[0.7534376906746201 0.13299563268755232 0.7279588347491914 0.607334347575077
 0.3992324504563034 0.5828207413740167 0.8801083519566875 0.6687881692712476]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.753438  0.132996  0.727959  0.607334
two   │ 0.399232  0.582821  0.880108  0.6687882x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.753438  0.132996  0.727959  0.607334
two   │ 0.399232  0.582821  0.880108  0.6687882x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │   -0.0929275     -0.013796  …     -0.293528     -0.433021
2     │    -0.747925     -0.429387  …     -0.225283      0.5582961000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.549012    -0.91422
2     │   -1.09263    0.288412
3     │   0.253736     -1.0803
4     │    -1.3355   -0.662056
5     │   0.336474   -0.218474
6     │    1.74857    0.590729
7     │  0.0527944    0.393637
8     │   -1.29269    0.296575
9     │   0.382487   -0.710026
⋮                ⋮           ⋮
992   │ -0.0491418    0.642214
993   │    1.82579   -0.968464
994   │    0.68934   -0.476123
995   │   0.403534  -0.0977627
996   │  -0.284477     1.23284
997   │     -1.956    0.310349
998   │    1.99006   -0.270953
999   │  -0.443241   -0.641086
1000  │  -0.158169   -0.3222721000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │   -0.927882
2    │    0.411749
3    │   -0.207166
4    │    0.980242
5    │  -0.0476472
6    │     1.69729
7    │ -0.00419768
8    │   -0.176042
9    │     -0.9476
⋮                ⋮
992  │   -0.879251
993  │   0.0877132
994  │    0.660909
995  │   -0.663077
996  │    0.557302
997  │     1.04488
998  │   0.0149714
999  │    -1.01056
1000 │     2.380952x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.931572  0.664888
1           │  0.13523  0.750535

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.33382  0.667847
1           │ 0.708453   0.97499
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.720991
2  │ 0.0447392
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.502214   0.23956
2     │ 0.180237  0.304488
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.722998  0.935854
2     │ 0.180532  0.233657

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.742094  0.231611
2     │ 0.239434  0.240483
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.410072  0.485095
2     │ 0.530789  0.333735

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.967668   0.34855
2     │ 0.947903   0.68621

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0301521   0.178226
2     │  0.273797   0.316722

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.497784  0.411493
2     │ 0.757888  0.286876
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.9223  0.570213
2     │ 0.878859  0.502903

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.60884  0.136339
2     │ 0.548123   0.81362

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0474996   0.936394
2     │  0.586465   0.513475
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.294668  0.110186

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.604208  0.666718
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.915317
2     │    0.328

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.12163
2     │ 0.404451
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.754112  0.144122
2     │ 0.174242  0.955239
1000×1000 Named sparse matrix with 113 Float64 nonzero entries:
	[8969053341726467224 , 14304565767364922256]  =  0.15049043817267638
	[10923390679270416228, 17095493447719212504]  =  0.9223051196412428
	[12444970302768542108,   592365234179887848]  =  0.9037778575640423
	[15436097664388839821, 11080872162023102847]  =  0.13039205497675543
	[8215529161129330866 , 10601912832305821454]  =  0.45313119077769537
	[53689838181604040   ,  4786699431706339713]  =  0.4849746891154185
	[16996133433751471822,  8629498292780771804]  =  0.3556994982954145
	[8848098725795227459 ,  4981387750669837953]  =  0.13933856603460937
	                                              ⋮
	[8568476733645628391 ,  6332455606016291123]  =  0.790075946095335
	[18320751966872690453,  6468689935112619700]  =  0.7906854207849483
	[7667973957612014549 , 11551291857879764225]  =  0.12812728286451391
	[13465652674533777795,  8779884342238752210]  =  0.8462668199749919
	[16836080019131185762,  8779884342238752210]  =  0.7567721534297078
	[12261828542413417071,  5122894113285174381]  =  0.032090460159205136
	[12000240359954909472, 16840404209865735426]  =  0.5922394265473572
	[13970367575607681105, 16202651256804923129]  =  0.021358883288314257
	[11565746237708632912,  2588469222286953884]  =  0.9542914282460273Timing named index: 0.00093762, array index: 0.001125607, named key: 0.123997229
Timing sum large sparse array: 0.011534851, named: 0.021120429
done!
INFO: NamedArrays tests passed

>>> End of log
