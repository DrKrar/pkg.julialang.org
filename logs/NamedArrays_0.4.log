>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (883.15625 MB free)
Uptime: 7019.0 sec
Load Avg:  0.86962890625  0.9453125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     320410 s       2332 s      28947 s     281305 s         14 s
#2  3498 MHz     205449 s       4394 s      23876 s     446327 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.38576334172528104	.015050239666619891	.9414573211942863	.7255170643686835
two	.02102151375922534	.16563691759197008	.27456698867038454	.8265882104705948
a	7
b	36
c	34
d	21
e	37
f	14
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.691381   0.694167   0.310214
b           │  0.652316   0.410231  0.0718475 0.6913806230982484 0.6913806230982484
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.691381   0.694167   0.310214
b     │  0.652316   0.410231  0.0718475
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.691381   0.694167   0.310214
b           │  0.652316   0.410231  0.0718475
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.691381   0.694167   0.310214
b     │  0.652316   0.410231  0.0718475
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.405549  0.0975816   0.275264   0.160127
er              │   0.56129  0.0568757   0.461475   0.513885
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140253453416032
0-element Named Array{Any,1}

[0.49921613001870324 0.3605484102477732 0.48104620901840334 0.16249975094542002
 0.03205510051953353 0.07263444117494089 0.4978088272035477 0.9833264235494907]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.499216   0.360548   0.481046     0.1625
two   │ 0.0320551  0.0726344   0.497809   0.9833262x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.499216   0.360548   0.481046     0.1625
two   │ 0.0320551  0.0726344   0.497809   0.9833262x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.391101     0.0510609  …      0.926774      -1.33197
2     │     -1.47933      -1.17837  …       1.24631       0.312691000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    2.05542     -1.9221
2     │  -0.191423   -0.737946
3     │    -1.1822    -1.90683
4     │   -1.14322    0.367669
5     │   -0.93592    0.560861
6     │  0.0532872   -0.711188
7     │    1.23572     1.55023
8     │  -0.957138   -0.722708
9     │   -1.42279    -2.33426
⋮                ⋮           ⋮
992   │   0.894099  -0.0607193
993   │   0.514023    -2.63973
994   │   -0.38411  -0.0733275
995   │  -0.271431   0.0690515
996   │  -0.651908    0.813189
997   │  -0.511341    0.501077
998   │    3.55654   -0.671548
999   │   0.386048    0.330006
1000  │   -1.18973    -1.611121000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.510391
2    │   0.647753
3    │   0.328973
4    │   -0.34067
5    │   0.216167
6    │   -1.10247
7    │  -0.163599
8    │   0.161107
9    │      1.103
⋮               ⋮
992  │  -0.524104
993  │  -0.927634
994  │  0.0563193
995  │  -0.167173
996  │  -0.380608
997  │   0.365021
998  │   0.106136
999  │  -0.250051
1000 │ -0.02872222x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.412499   0.623719
1           │ 0.0602147   0.224295

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.669024  0.695527
1           │ 0.661964  0.457754
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.274643
2  │ 0.189143
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.442584  0.235306
2     │ 0.727583  0.534875
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.167865  0.804369
2     │ 0.511082  0.472507

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.452565  0.0190872
2     │  0.321917   0.938331
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.105982  0.0069524
2     │ 0.0916529    0.68164

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0538385   0.588142
2     │  0.937968   0.641626

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.468287  0.642439
2     │ 0.867121  0.272044

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.924097   0.495039
2     │ 0.0345379   0.330228
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.232846  0.201134
2     │  0.51107  0.276124

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.339151  0.373281
2     │ 0.230701  0.697961

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.710738  0.198616
2     │ 0.779613  0.179311
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.436942  0.435239

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.632286   0.65841
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.215215
2     │ 0.201476

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.676954
2     │ 0.334952
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.947727  0.238425
2     │ 0.513946  0.651155
1000×1000 Named sparse matrix with 88 Float64 nonzero entries:
	[1925573130087135049 ,   113574861176001527]  =  0.5223011105880013
	[18287766226606777885,  6046649976662626325]  =  0.7902125237068878
	[14057278280866812536, 14517667374310463124]  =  0.28413513168486726
	[17813916387369881   ,  8725235013359650451]  =  0.6107039928707929
	[8588666550667973691 , 11907679469289587679]  =  0.0009943540200425538
	[7407209677347974000 , 12876006501778729182]  =  0.30591645634418785
	[13789993170142104254,  2836200141957565154]  =  0.03290253238045904
	[1533720515531077962 ,  3566943156706603705]  =  0.6692790516400988
	                                              ⋮
	[9861459413671678323 ,  1341783406603060396]  =  0.28294825044389005
	[8185803203023614208 , 13544680138434484894]  =  0.9730207166277898
	[5597731276780160114 , 14340416566338039723]  =  0.048402173696661555
	[3082239157947279921 , 16655780295490676025]  =  0.14740306020160987
	[4878460211641475699 ,  9815398096560962926]  =  0.8271206549102723
	[9266536657670673180 , 10361974346531339474]  =  0.47317543649251537
	[18238638934550427920,  9526342322394325946]  =  0.7553888648382372
	[9133170895916704973 , 10655964431342481635]  =  0.6388534017526661
	[16365943061271568709, 16202651256804923129]  =  0.8974568088993464Timing named index: 0.000617305, array index: 0.000450405, named key: 0.073204084
Timing sum large sparse array: 0.007845911, named: 0.016829776
done!
INFO: NamedArrays tests passed

>>> End of log
