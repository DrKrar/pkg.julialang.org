>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (881.5546875 MB free)
Uptime: 7078.0 sec
Load Avg:  0.99072265625  0.94384765625  0.97119140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     309226 s         53 s      25674 s     306959 s         17 s
#2  3499 MHz     200784 s        130 s      22280 s     459304 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.011720785680340295	.9529588715605852	.15936919825306028	.32204202656327463
two	.6254988064745299	.8320081074823926	.8753516950392612	.7081716387385868
a	90
b	96
c	46
d	80
e	71
f	45
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.941049  0.715127  0.386699
b           │ 0.471257  0.225514  0.508704 0.9410492484676338 0.9410492484676338
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.941049  0.715127  0.386699
b     │ 0.471257  0.225514  0.508704
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.941049  0.715127  0.386699
b           │ 0.471257  0.225514  0.508704
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.941049  0.715127  0.386699
b     │ 0.471257  0.225514  0.508704
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │   0.27018   0.289577   0.363794   0.913056
er              │  0.899936   0.458066   0.604411  0.0454683
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140034869659152
0-element Named Array{Any,1}

[0.6913707825747895 0.7514938334764625 0.5429653949461248 0.545796962509804
 0.023329726579488286 0.9425237566559657 0.43245576096180915 0.6243267155878176]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.691371   0.751494   0.542965   0.545797
two   │ 0.0233297   0.942524   0.432456   0.6243272x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.691371   0.751494   0.542965   0.545797
two   │ 0.0233297   0.942524   0.432456   0.6243272x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.95298       1.47276  …      0.552883      -1.73422
2     │      1.87462      0.010822  …     -0.115378     -0.3291731000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   1.10989   0.166954
2     │   1.34816  0.0874282
3     │ -0.265469   0.602941
4     │ -0.755399   -1.87804
5     │   1.03256   0.878181
6     │    0.8396  -0.686998
7     │ -0.478685   -1.19735
8     │  0.292622   0.402298
9     │  0.306414   0.187083
⋮               ⋮          ⋮
992   │  0.616782    1.65751
993   │   1.07505    0.35808
994   │  0.486075   0.287847
995   │  0.843875  -0.523567
996   │  0.647597   0.835708
997   │ -0.705925   -1.46153
998   │  0.726661   0.676623
999   │  0.974151   0.208003
1000  │  0.880017   0.2463621000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.249168
2    │ -0.0794627
3    │    2.22605
4    │    1.88043
5    │  -0.931362
6    │   0.983856
7    │  -0.270254
8    │   0.703381
9    │    1.51917
⋮               ⋮
992  │   -1.37558
993  │   -1.99591
994  │   -2.20476
995  │  -0.212149
996  │   0.675722
997  │   0.450942
998  │  0.0251823
999  │    1.05392
1000 │  -0.4215932x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.743521   0.38112
1           │ 0.705975  0.389495

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.130069  0.073102
1           │ 0.166782  0.646084
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.540405
2  │ 0.135494
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.79287  0.882231
2     │ 0.884993  0.908992
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0167183   0.494017
2     │  0.660262   0.343344

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.851935  0.0781719
2     │  0.376507   0.254218
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.64309  0.165169
2     │ 0.575431  0.130743

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.460997   0.019442
2     │  0.418893  0.0343591

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.729989  0.799866
2     │ 0.781698  0.966047

[:, :, C=2, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.592722    0.156952
2     │ 0.00662911    0.556365
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.741137  0.234592
2     │ 0.212957  0.843861

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.224166   0.801174
2     │ 0.0104999   0.453362

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.295358  0.195389
2     │ 0.179406  0.742642
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.363349  0.126767

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.923024  0.542445
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.490975
2     │  0.70844

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.128263
2     │ 0.674634
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0871471   0.633008
2     │    0.2038   0.122067
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[6468689935112619700 ,  4400785119912308702]  =  0.9563287868382175
	[4565099145871195153 ,  6046649976662626325]  =  0.904952858483349
	[11024660093340930346, 14517667374310463124]  =  0.09645031030415185
	[9507787290874245939 , 10601912832305821454]  =  0.5740979272492595
	[17329041886349039120, 10601912832305821454]  =  0.6019186466020248
	[8037924722734667669 , 17211410618634043162]  =  0.15709734410005494
	[17329041886349039120,  4329451781928897369]  =  0.534841035571112
	[14944477062144183931,  8351221943604278133]  =  0.6067452034536036
	                                              ⋮
	[12843503472939723182,  8357516066305821252]  =  0.2387999847089528
	[6279220855469790341 , 13700233674872906346]  =  0.8192276652943153
	[10361072080411987344, 15078133678202242611]  =  0.8989892127348156
	[13268306687392746585,  1177457170591155921]  =  0.21466209811026382
	[99445198107514719   , 16267926292325351807]  =  0.8037608514838332
	[1477045215949811261 , 10924666096879366607]  =  0.738674993691208
	[17080632333507329842,  3014575823142358933]  =  0.2543169221650252
	[8357516066305821252 , 10663619072362037589]  =  0.2515891698811836
	[4623749630185680030 , 16202651256804923129]  =  0.32481419191578853Timing named index: 0.000623304, array index: 0.000406181, named key: 0.073702037
Timing sum large sparse array: 0.008006609, named: 0.016372403
done!
INFO: NamedArrays tests passed

>>> End of log
