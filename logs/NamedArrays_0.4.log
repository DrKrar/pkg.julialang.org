>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (678.76953125 MB free)
Uptime: 8324.0 sec
Load Avg:  0.9326171875  0.99951171875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     373624 s         35 s      29705 s     345467 s         16 s
#2  3500 MHz     234360 s       5383 s      25436 s     536449 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.7157899535494898	.23596306550983837	.6657762087144705	.6824711509180605
two	.27578972916672573	.8326566893952165	.9320346796102525	.9035049502854406
a	100
b	52
c	30
d	94
e	73
f	67
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.80182  0.552356  0.729052
b           │ 0.461049  0.366874    0.2211 0.8018199900869132 0.8018199900869132
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.80182  0.552356  0.729052
b     │ 0.461049  0.366874    0.2211
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │  0.80182  0.552356  0.729052
b           │ 0.461049  0.366874    0.2211
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │  0.80182  0.552356  0.729052
b     │ 0.461049  0.366874    0.2211
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.951091    0.97678   0.138047   0.779565
er              │  0.742184   0.359004  0.0926253   0.198385
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139622188909904
0-element Named Array{Any,1}

[0.30067909775113844 0.6469011245347382 0.09634756378105536 0.15347782143074729
 0.8402046229290014 0.5409145709361831 0.8191555435640301 0.5449926252671895]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.300679   0.646901  0.0963476   0.153478
two   │  0.840205   0.540915   0.819156   0.5449932x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.300679   0.646901  0.0963476   0.153478
two   │  0.840205   0.540915   0.819156   0.5449932x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.820177    -0.284133  …     0.387276      1.35644
2     │    -1.44893    -0.354829  …     0.119343     0.6264461000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.29903   -0.973535
2     │    1.48027   -0.325623
3     │   0.624869  -0.0544657
4     │   0.994214    -1.35275
5     │   -1.02299    -1.42765
6     │   -2.31173    0.782061
7     │  -0.656885    0.377626
8     │   0.507895    0.728678
9     │    1.13204   -0.391743
⋮                ⋮           ⋮
992   │    1.63862   -0.483984
993   │  -0.374387    -1.11991
994   │    0.77048    -1.05457
995   │    1.34713   -0.423759
996   │  -0.147508     1.33056
997   │   0.985984     1.54634
998   │    1.51274   -0.432799
999   │  0.0784551   -0.997885
1000  │    1.42749    0.3709081000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   0.954445
2    │   0.343302
3    │  -0.162962
4    │    1.82388
5    │  -0.695872
6    │  0.0576703
7    │   0.764689
8    │   0.461169
9    │  -0.859681
⋮               ⋮
992  │     -1.585
993  │   0.456461
994  │   -2.10276
995  │    2.12711
996  │    1.08463
997  │   0.298941
998  │   0.703249
999  │ -0.0644717
1000 │  -0.9191542x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.30353  0.377046
1           │ 0.396663  0.666998

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.224915  0.577192
1           │ 0.296192  0.307286
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.862719
2  │ 0.429805
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.996565  0.732699
2     │ 0.363551  0.915461
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.202383   0.871134
2     │ 0.0276819   0.965217

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.922499  0.442693
2     │ 0.495026  0.118963
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.811457  0.732614
2     │ 0.871224  0.797423

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.378385  0.261334
2     │ 0.229933  0.308755

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.620302  0.625039
2     │ 0.655547   0.88496

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.801296  0.688161
2     │ 0.520074  0.014115
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.818095   0.271563
2     │   0.11576  0.0464662

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.609323  0.118563
2     │ 0.451185  0.390708

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.643705  0.536944
2     │ 0.898824  0.139335
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.696849  0.407195

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.423226  0.286633
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.601417
2     │ 0.136519

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0781008
2     │  0.693962
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.677903  0.971238
2     │ 0.964088  0.331667
1000×1000 Named sparse matrix with 101 Float64 nonzero entries:
	[4034226599594678126 ,   144428425607543167]  =  0.4059119845955377
	[9828685043168917423 , 11080872162023102847]  =  0.9028510546767936
	[409631313458239274  ,  6806539949965918083]  =  0.4384166886904033
	[13970367575607681105, 14066869468942639955]  =  0.9765260737852963
	[10932896149891808656,  9283096199793891681]  =  0.6622274763899068
	[17718833055079784125,  2849690884155085581]  =  0.13091785094130004
	[7580984277293214809 ,  8069307267129313135]  =  0.5652342758976594
	[10369386120472232477,  8629498292780771804]  =  0.6503652355381695
	                                              ⋮
	[10066988524776738469, 17173839162019621584]  =  0.8988331141177024
	[3672445739059134796 ,  4682100877033407764]  =  0.14325490080149383
	[10361072080411987344,  7608520278977511969]  =  0.561432684773002
	[3064253281526677720 , 18148906667482527649]  =  0.9628913651826561
	[849947749456312673  , 14057278280866812536]  =  0.5911866871235794
	[3064253281526677720 ,  7989582431359101293]  =  0.9026980054783025
	[6345740875604378464 ,  8779884342238752210]  =  0.07363736175043067
	[13317946559797870580, 15240003619098155971]  =  0.8460275349311963
	[10917707896527709000,  2588469222286953884]  =  0.20148799100913717Timing named index: 0.001149802, array index: 0.000552864, named key: 0.131868297
Timing sum large sparse array: 0.009473613, named: 0.01988825
done!
INFO: NamedArrays tests passed

>>> End of log
