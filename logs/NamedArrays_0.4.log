>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (801.4765625 MB free)
Uptime: 8206.0 sec
Load Avg:  1.001953125  0.9541015625  1.0126953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     369186 s       3184 s      32940 s     333936 s         19 s
#2  3499 MHz     226561 s       4296 s      29622 s     529505 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.006447653190288172	.16862802292938395	.32561377835207184	.3908533785538406
two	.11119566852185336	.6930564128844436	.7020600971996116	.15801146925623155
a	64
b	63
c	37
d	60
e	94
f	52
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.99121   0.834433   0.306038
b           │  0.437362  0.0729169   0.304523 0.9912103039815543 0.9912103039815543
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.99121   0.834433   0.306038
b     │  0.437362  0.0729169   0.304523
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │   0.99121   0.834433   0.306038
b           │  0.437362  0.0729169   0.304523
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │   0.99121   0.834433   0.306038
b     │  0.437362  0.0729169   0.304523
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.966379   0.133878   0.881592   0.758626
er              │  0.516867   0.445048   0.379792  0.0010929
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139923909573648
0-element Named Array{Any,1}

[0.581210378207623 0.2808264846324189 0.11593712380245691 0.655867203241896
 0.9772939725441097 0.37352197654931496 0.8087034091838194 0.9087862691353392]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.58121  0.280826  0.115937  0.655867
two   │ 0.977294  0.373522  0.808703  0.9087862x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.58121  0.280826  0.115937  0.655867
two   │ 0.977294  0.373522  0.808703  0.9087862x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.06576       0.56994  …     -0.901226      0.485935
2     │     -2.10486     -0.375851  …       0.50433     -0.4143411000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    0.36704   0.0906808
2     │    1.41726    0.214232
3     │   0.120992    0.412658
4     │    2.48418    0.103271
5     │   0.346352     1.08801
6     │   0.800108    0.860225
7     │   0.199971   -0.189942
8     │    2.78273    -1.18897
9     │   0.344882    0.757553
⋮                ⋮           ⋮
992   │  -0.362827    -1.33338
993   │  0.0831696  -0.0867677
994   │  -0.445072    0.664114
995   │   0.264882   -0.580789
996   │  -0.348691   -0.856052
997   │   -0.63164    0.297662
998   │  -0.645114   -0.360207
999   │   0.204599    0.418813
1000  │    1.51757     1.329981000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -2.26844
2    │ -0.248482
3    │ -0.684225
4    │ -0.553886
5    │   0.96648
6    │ -0.620039
7    │  -1.42467
8    │ -0.500625
9    │  0.868135
⋮              ⋮
992  │     0.838
993  │  -1.54699
994  │   1.56076
995  │  -1.00922
996  │   2.24876
997  │ -0.136469
998  │ -0.286267
999  │   0.28802
1000 │ -0.7856492x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.136225  0.780857
1           │   0.2144    0.2809

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.531459  0.301273
1           │ 0.863342  0.598908
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0740409
2  │  0.249857
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.367337   0.730118
2     │ 0.0634601   0.594639
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.148122  0.546904
2     │ 0.427551  0.546614

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.173429    0.44761
2     │  0.922214  0.0535253
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.703166  0.766976
2     │ 0.741928  0.994539

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0922271   0.106984
2     │ 0.0204971   0.786016

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.696893   0.583838
2     │  0.802033  0.0434277

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.373153  0.548629
2     │ 0.924541  0.391166
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.316833  0.0607304
2     │  0.951427   0.746015

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │    0.4686   0.508038
2     │  0.742576  0.0699764

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.614305  0.385955
2     │ 0.982311   0.57695
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.938052  0.970725

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.74395  0.654336
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.724913
2     │ 0.851057

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.191459
2     │ 0.361883
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.15589  0.467506
2     │ 0.556444  0.207803
1000×1000 Named sparse matrix with 123 Float64 nonzero entries:
	[1566360107212290167 , 12419957900638875901]  =  0.5256419401882522
	[11791379751769019020, 17095493447719212504]  =  0.848894868526664
	[2971581029604614559 ,  9920432272297441209]  =  0.21582526576876981
	[4394159825732135742 , 17822619313291261357]  =  0.6942426595291611
	[447754687212557937  ,  8069307267129313135]  =  0.2990103674581246
	[14382878888079666374,  4786699431706339713]  =  0.6625948646840198
	[13617136782637692591, 14995138918287078531]  =  0.13035023939772317
	[2520040687452014961 ,  8629498292780771804]  =  0.1385634567315588
	                                              ⋮
	[7630593249633640373 ,  5266533270354515449]  =  0.5051459321475604
	[3566943156706603705 , 14319986367878219703]  =  0.04393465549148878
	[8984509642560971258 ,  7528617485284887424]  =  0.12199657607391035
	[839451858133325944  , 16300844420296039097]  =  0.8604923061369194
	[3726791872555742705 , 16655780295490676025]  =  0.7687187949212511
	[2050037547392292084 , 18148906667482527649]  =  0.009947545163022653
	[16462243977607957471,  1861743268047760089]  =  0.8306001877247182
	[6036322876017615897 , 16840404209865735426]  =  0.8990262635179678
	[11594286046942303904,  7957587899775749890]  =  0.17331488078916069Timing named index: 0.000614781, array index: 0.000431282, named key: 0.072023409
Timing sum large sparse array: 0.00590831, named: 0.012717317
done!
INFO: NamedArrays tests passed

>>> End of log
