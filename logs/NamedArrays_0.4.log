>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (838.015625 MB free)
Uptime: 7354.0 sec
Load Avg:  0.9609375  0.9794921875  1.04248046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     350221 s       1632 s      30826 s     280510 s         18 s
#2  3500 MHz     214716 s       4429 s      26972 s     460420 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5945633119645983	.500300104642956	.5445489828200585	.8106066433939896
two	.9735867027685723	.8877509397340742	.2915407558161023	.9457701280101305
a	7
b	20
c	53
d	98
e	17
f	83
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0450975    0.29153   0.715067
b           │  0.991107   0.894121  0.0810597 0.045097450099438774 0.045097450099438774
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0450975    0.29153   0.715067
b     │  0.991107   0.894121  0.0810597
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0450975    0.29153   0.715067
b           │  0.991107   0.894121  0.0810597
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0450975    0.29153   0.715067
b     │  0.991107   0.894121  0.0810597
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.535654  0.483942  0.560872  0.829546
er              │ 0.909205  0.448459  0.949085  0.230673
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140240743559568
0-element Named Array{Any,1}

[0.6667472891254049 0.6610069349222529 0.8389764638672459 0.7812524344572451
 0.6359277238096346 0.27472236075808176 0.9155537156978415 0.5631380116939899]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.666747  0.661007  0.838976  0.781252
two   │ 0.635928  0.274722  0.915554  0.5631382x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.666747  0.661007  0.838976  0.781252
two   │ 0.635928  0.274722  0.915554  0.5631382x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.257657     -0.901575  …       0.93359       2.70186
2     │  -0.00569673    -0.0868031  …      -1.78525      -1.855271000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  -0.92096   0.124855
2     │   2.22333   0.873576
3     │  0.478573  -0.317299
4     │  0.919607  -0.326037
5     │  0.328545    1.56224
6     │   1.23563     1.3779
7     │   1.47972     2.5806
8     │ -0.606299  -0.489866
9     │  -0.31163  -0.643421
⋮               ⋮          ⋮
992   │ -0.656866   0.291186
993   │ -0.469455   0.377063
994   │   0.37202  -0.319536
995   │ -0.676971   -1.16568
996   │    1.1543  -0.626779
997   │  -1.06529     1.3392
998   │    1.5146  -0.667097
999   │ -0.417091    2.32873
1000  │   0.42155  -0.3536261000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.213012
2    │  0.0714399
3    │    1.83288
4    │   0.624038
5    │   -1.57069
6    │    -1.6141
7    │   0.189888
8    │ -0.0349047
9    │    1.22193
⋮               ⋮
992  │  -0.626808
993  │   0.873198
994  │  -0.694583
995  │  -0.938304
996  │    1.47944
997  │   0.260497
998  │   -1.44018
999  │   0.805942
1000 │    -1.08812x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.996159  0.430174
1           │ 0.463221   0.24809

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.212374  0.299017
1           │ 0.128583  0.159336
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.482178
2  │ 0.904854
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.676906  0.511357
2     │  0.24181  0.409284
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.652009  0.308968
2     │ 0.754909  0.786852

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.456934   0.84806
2     │ 0.291009  0.602307
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.751654  0.837659
2     │ 0.213477  0.641567

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.46146   0.355388
2     │ 0.0717839   0.470891

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.618877   0.82253
2     │ 0.470269  0.821254

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.147588   0.926606
2     │ 0.0918969   0.705138
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.335481  0.628332
2     │ 0.301612  0.944018

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.234672   0.492531
2     │  0.986834  0.0938259

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.549406  0.488221
2     │ 0.255531  0.346673
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.148709  0.599737

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.205671  0.939532
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.844046
2     │ 0.323123

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.637651
2     │ 0.326992
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.296641  0.439996
2     │ 0.786046  0.258748
1000×1000 Named sparse matrix with 106 Float64 nonzero entries:
	[10024080200852233627,  5312631360709731698]  =  0.7548368945742165
	[7484916964955888105 , 14343632987770563929]  =  0.645637585621442
	[10024080200852233627, 12809965746239821631]  =  0.9879811805844505
	[14025941730136024849, 13888991764943741743]  =  0.3528387119528438
	[6468689935112619700 , 14066869468942639955]  =  0.3228809186370798
	[15884119711317434855,  2230070772219402886]  =  0.3601181847530608
	[2758171916068192631 ,  5062864901616737721]  =  0.8748139032493649
	[592365234179887848  ,  3253468397832770835]  =  0.862625574077478
	                                              ⋮
	[7369566324703660862 , 11641483179283066996]  =  0.8733189430066666
	[16583690740438463922, 12554874066387155728]  =  0.23116655100881012
	[8693402622351373804 , 15436097664388839821]  =  0.9437614612542453
	[8689110468086252001 , 10370911177498520402]  =  0.44219885183790186
	[10024080200852233627,  7989582431359101293]  =  0.40626779568266436
	[11250402503384658013,  8779884342238752210]  =  0.8141601542647123
	[2362724562918981188 ,  5122894113285174381]  =  0.33252669861005946
	[1082833487325258643 ,  2758171916068192631]  =  0.08330296134182502
	[10663619072362037589,  2758171916068192631]  =  0.13954631112028104Timing named index: 0.000936214, array index: 0.000660405, named key: 0.141358203
Timing sum large sparse array: 0.012713971, named: 0.025428603
done!
INFO: NamedArrays tests passed

>>> End of log
