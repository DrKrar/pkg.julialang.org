>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (871.30078125 MB free)
Uptime: 6849.0 sec
Load Avg:  0.93359375  0.9931640625  1.03515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     274015 s         73 s      28706 s     307264 s         14 s
#2  3499 MHz     188924 s         56 s      25266 s     425733 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │    0.1421   0.795258   0.702444
b           │  0.887956  0.0480851    0.15126 0.1421004834806987 0.1421004834806987
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │    0.1421   0.795258   0.702444
b     │  0.887956  0.0480851    0.15126
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │    0.1421   0.795258   0.702444
b           │  0.887956  0.0480851    0.15126
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │    0.1421   0.795258   0.702444
b     │  0.887956  0.0480851    0.15126
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │ 0.00919309   0.0808343    0.298873    0.768451
two   │  0.0879067    0.949419     0.28524    0.661722
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │    0.8771   0.220689
1           │  0.538155  0.0739091

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.814146  0.803757
1           │ 0.134926  0.569336
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.162881
2 │ 0.592346
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.10007  0.163387
2     │ 0.686445  0.962277
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.349214  0.615368
2     │ 0.408058  0.898486

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.397153  0.643089
2     │ 0.923391  0.497636
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.095163  0.710618
2     │ 0.014863  0.536464

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.682471  0.327172
2     │ 0.580826  0.488893

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.277067  0.708757
2     │ 0.351486  0.991619

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.475747   0.785317
2     │  0.274805  0.0878843
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0903963   0.558923
2     │  0.624416   0.509892

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.142657  0.172434
2     │ 0.231621  0.105841

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.070173  0.0158749
2     │ 0.0629277   0.584355

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.181179  0.0430347
2     │   0.59496   0.771584

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.798321  0.924862
2     │ 0.900763  0.378228

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.465656   0.028757
2     │  0.203819  0.0989144

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.85566   0.99052
2     │ 0.293748  0.675862

[:, :, C=2, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.692597  0.0818197
2     │   0.87327   0.222539
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.525061  0.336042

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00888025    0.778539
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0343111
2     │  0.672857

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.341499
2     │ 0.205248
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.488848  0.0318148
2     │  0.274102   0.616969
done!
Timing named index: 0.000732432, array index: 0.000560678, named key: 0.131449105
Timing sum large sparse array: 0.011312945, named: 0.022661931
INFO: NamedArrays tests passed

>>> End of log
