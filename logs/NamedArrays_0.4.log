>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (860.890625 MB free)
Uptime: 7087.0 sec
Load Avg:  1.02783203125  0.951171875  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     332925 s       3457 s      30960 s     271518 s         19 s
#2  3500 MHz     204737 s       3802 s      27409 s     450132 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.31908698406515024	.7509702345154612	.4515387672323614	.690582829069349
two	.5683330900918384	.38476670654201195	.1906354232028924	.8793444177415217
a	32
b	79
c	52
d	54
e	67
f	43
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.528577  0.0181518   0.997164
b           │ 0.0520603  0.0609065   0.154871 0.5285769569910419 0.5285769569910419
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.528577  0.0181518   0.997164
b     │ 0.0520603  0.0609065   0.154871
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.528577  0.0181518   0.997164
b           │ 0.0520603  0.0609065   0.154871
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.528577  0.0181518   0.997164
b     │ 0.0520603  0.0609065   0.154871
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.101901   0.337977   0.251092    0.51456
er              │  0.769652  0.0948962   0.513367    0.96037
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139800497604400
0-element Named Array{Any,1}

[0.4013218032213117 0.8422471564121885 0.20775886840735724 0.12443956632117725
 0.42156714918605376 0.6256041379828097 0.34424551242768686 0.37833212379017045]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.401322  0.842247  0.207759   0.12444
two   │ 0.421567  0.625604  0.344246  0.3783322x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.401322  0.842247  0.207759   0.12444
two   │ 0.421567  0.625604  0.344246  0.3783322x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.500719      1.58388  …    -0.975023     -1.10395
2     │   -0.948604    -0.169343  …     -2.54892     -1.606241000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.538927   0.0228503
2     │  -0.139484  -0.0603972
3     │   0.238025    0.803881
4     │   0.192731    0.668012
5     │    0.20596     1.03021
6     │    1.09978    -0.52715
7     │    1.01704    0.693934
8     │  0.0655396      1.3048
9     │  -0.177806  -0.0803142
⋮                ⋮           ⋮
992   │   -1.01112   -0.334299
993   │     1.6668    0.888751
994   │   -1.30682    0.777424
995   │  -0.955905  -0.0166032
996   │   0.568751    0.886658
997   │   -1.82987      1.8376
998   │   -2.22979   -0.754441
999   │   0.498911   -0.382126
1000  │  -0.861272    0.8025241000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ 0.0946523
2    │  0.454913
3    │ -0.110497
4    │ -0.876402
5    │  0.151495
6    │   2.06856
7    │  0.479065
8    │  0.552668
9    │  -1.14264
⋮              ⋮
992  │ 0.0894303
993  │  0.537527
994  │  0.799067
995  │  0.867536
996  │  0.495276
997  │ -0.478173
998  │   1.63406
999  │   1.07521
1000 │  0.6082982x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.550942  0.046976
1           │ 0.791621  0.715639

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.529622  0.061496
1           │ 0.668927  0.577161
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.190626
2  │  0.33753
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0377989   0.889655
2     │  0.761946    0.68212
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.389748  0.363901
2     │  0.57987  0.232975

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.439399  0.991491
2     │ 0.496406  0.341958
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.512992  0.252583
2     │  0.98174  0.848402

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.457534  0.543764
2     │ 0.341705  0.572504

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.66751   0.433242
2     │  0.179521  0.0536939

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.656941  0.225659
2     │ 0.121835  0.907985
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.70555   0.685731
2     │  0.883507  0.0525218

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.463458  0.478639
2     │ 0.747215  0.916702

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.438145   0.767426
2     │ 0.0569448   0.563839
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.362622  0.320249

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.844778  0.758539
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.397215
2     │ 0.447023

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0932717
2     │ 0.0710244
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.864821  0.0303694
2     │  0.781911     0.7775
1000×1000 Named sparse matrix with 109 Float64 nonzero entries:
	[16147086907566520640,   144428425607543167]  =  0.7375791451534721
	[4509385789584299296 , 11080872162023102847]  =  0.44155979154564706
	[16320645429046908531,  9920432272297441209]  =  0.6954576998411579
	[2436126165640975798 , 18443816037252674910]  =  0.3018410229517887
	[14066869468942639955,  3039451196773527828]  =  0.8448558620754121
	[6134978669850253296 ,  8097707444526576530]  =  0.37582203943994164
	[7713060533429820211 ,  7242692203416363180]  =  0.48478615389999136
	[2836200141957565154 ,  4302721723742542942]  =  0.14821844734427359
	                                              ⋮
	[1692321568384860970 ,  2792481481398066916]  =  0.779123890988572
	[3926415979499511939 , 11382910810432795234]  =  0.053217898516702666
	[10260179183825814155,  9815398096560962926]  =  0.7680236934763851
	[13824790180967006716, 15436097664388839821]  =  0.7332316528677161
	[11604119926906451644, 17718833055079784125]  =  0.15603538698582087
	[16267926292325351807,  5122894113285174381]  =  0.43467007846117256
	[6133723350622533458 ,  4047135350800189603]  =  0.5087268767482183
	[12720131311000364147,  7957587899775749890]  =  0.9784951267288198
	[14178850942406463629,  3010300210541878305]  =  0.8776565001736476Timing named index: 0.00061323, array index: 0.000714976, named key: 0.135784722
Timing sum large sparse array: 0.013104313, named: 0.026023636
done!
INFO: NamedArrays tests passed

>>> End of log
