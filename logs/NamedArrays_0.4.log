>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (859.30859375 MB free)
Uptime: 7206.0 sec
Load Avg:  0.994140625  0.9599609375  1.02978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     319697 s       6518 s      30670 s     290352 s         28 s
#2  3499 MHz     205416 s         78 s      26830 s     459276 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.5097870337948673	.0920340821731247	.261407545693807	.6587986628170743
two	.9805322383143569	.8710221386742396	.5966121823113928	.05490412679212664
a	91
b	42
c	15
d	65
e	77
f	53
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.388769   0.785606   0.463395
b           │  0.611893    0.78866  0.0904084 0.3887685282882276 0.3887685282882276
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.388769   0.785606   0.463395
b     │  0.611893    0.78866  0.0904084
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.388769   0.785606   0.463395
b           │  0.611893    0.78866  0.0904084
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.388769   0.785606   0.463395
b     │  0.611893    0.78866  0.0904084
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0974021   0.743976    0.22534   0.655765
er              │ 0.0944737   0.791666   0.557314   0.770764
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140011999358688
0-element Named Array{Any,1}

[0.3587497718228676 0.8587855109180744 0.3578991821127053 0.5004251235849335
 0.6794692703076 0.41561934282437685 0.499322536162516 0.23894984733461588]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.35875  0.858786  0.357899  0.500425
two   │ 0.679469  0.415619  0.499323   0.238952x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.35875  0.858786  0.357899  0.500425
two   │ 0.679469  0.415619  0.499323   0.238952x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.295576    -0.340547  …      1.15239     0.826266
2     │   -0.500351    -0.754985  …    -0.442659     -1.237241000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.199654  -0.00106104
2     │    -2.08691     0.153372
3     │    0.801775     0.107099
4     │    0.323557     0.242974
5     │    -1.37346    -0.729818
6     │   -0.107658     -1.48905
7     │    0.130574    0.0728933
8     │   -0.596379      2.32038
9     │    0.105056     0.921547
⋮                 ⋮            ⋮
992   │    -1.57053    -0.887519
993   │    0.215442      1.30785
994   │     -1.6297    0.0040572
995   │    -1.29135    -0.937902
996   │     1.13593      1.84324
997   │    -1.13848     0.384519
998   │    0.103167     0.881203
999   │    0.040385     -2.57118
1000  │  0.00543058    -0.6703681000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -0.82923
2    │    1.46209
3    │  -0.806944
4    │ -0.0410385
5    │   0.137779
6    │ -0.0386906
7    │  -0.585454
8    │  -0.844041
9    │    1.06667
⋮               ⋮
992  │   -1.49522
993  │  0.0108985
994  │   -1.49923
995  │   -1.88786
996  │  -0.130152
997  │   0.341583
998  │    1.38258
999  │  -0.852629
1000 │   0.4488992x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.953409  0.674148
1           │ 0.849177  0.474237

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.982465    0.663692
1           │   0.136287  0.00633672
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.87535
2  │ 0.212758
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.678701  0.362727
2     │ 0.596065  0.852078
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.240301  0.660128
2     │  0.22451  0.339723

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.723119  0.435482
2     │ 0.338279  0.556754
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.99817  0.199892
2     │ 0.999783  0.393757

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.890603  0.496836
2     │ 0.716337  0.669612

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.52733  0.146938
2     │ 0.383359  0.942138

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.812867  0.205902
2     │ 0.335321  0.960026
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.816376  0.493035
2     │ 0.975334  0.233185

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.654148  0.698024
2     │ 0.605396   0.32967

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0413579   0.570858
2     │  0.800526   0.053675
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.65024  0.774767

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0939251   0.745046
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0928873
2     │  0.582097

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.711295
2     │ 0.290055
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.156539  0.723587
2     │ 0.656116  0.367818
1000×1000 Named sparse matrix with 99 Float64 nonzero entries:
	[2211499036183048350 , 14304565767364922256]  =  0.5541359617991131
	[16825537159737453803,  4786699431706339713]  =  0.7073160148808599
	[11614427478792455139, 17678211741433686062]  =  0.11023138070935823
	[8048960545880889629 ,  4329451781928897369]  =  0.5605241008267423
	[8265524791738013937 ,  6065204439534692180]  =  0.2604750295806877
	[12444970302768542108,  4302721723742542942]  =  0.9663794404302597
	[17131895616600668418,  6249139884124980606]  =  0.5659162780291849
	[12843503472939723182, 10981095045923005722]  =  0.045006905783390394
	                                              ⋮
	[7175786629381788322 , 14169799449801373117]  =  0.7886093843392454
	[12072215667938940660, 10647878191897777347]  =  0.6448209307845074
	[9892445672491709286 ,  4285843451033309381]  =  0.8377027497730591
	[13268306687392746585, 12901330087571726961]  =  0.07940589733997983
	[12459814376862134316, 11382910810432795234]  =  0.463603741216982
	[1523061068178304284 ,  2520040687452014961]  =  0.7788900453149181
	[13710539999002292266,  5597731276780160114]  =  0.5063180551849893
	[10981095045923005722,  1203336841330469213]  =  0.17015401018000942
	[1811302532022619362 , 13690505415342562739]  =  0.6451743908953385Timing named index: 0.00083181, array index: 0.000668223, named key: 0.13917594
Timing sum large sparse array: 0.011524209, named: 0.032388642
done!
INFO: NamedArrays tests passed

>>> End of log
