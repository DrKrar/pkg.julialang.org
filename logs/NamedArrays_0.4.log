>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.0
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (847.66015625 MB free)
Uptime: 7405.0 sec
Load Avg:  1.08642578125  1.04150390625  1.05322265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     345808 s       2224 s      30196 s     290962 s         18 s
#2  3500 MHz     227800 s       4090 s      26434 s     459011 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.10.0
 - DataStructures                0.5.0
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.8992294049394465	.8206280875440508	.11086174751394795	.7237492338715297
two	.5913871618027555	.12395953727905917	.5499387967093283	.5650470630683184
a	87
b	40
c	34
d	36
e	18
f	13
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.955826  0.0989072   0.673902
b           │  0.528307   0.552685   0.108007 0.9558256714627122 0.9558256714627122
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.955826  0.0989072   0.673902
b     │  0.528307   0.552685   0.108007
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.955826  0.0989072   0.673902
b           │  0.528307   0.552685   0.108007
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.955826  0.0989072   0.673902
b     │  0.528307   0.552685   0.108007
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │  0.833288   0.119127   0.841759   0.396404
er              │  0.355107   0.727047   0.513596  0.0112554
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139643652448960
0-element Named Array{Any,1}

[0.25330060987178604 0.5821946158277835 0.20730235075787018 0.6052332227398163
 0.9707741876244593 0.31966615840563395 0.489359451775476 0.7088927447295004]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.253301  0.582195  0.207302  0.605233
two   │ 0.970774  0.319666  0.489359  0.7088932x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.253301  0.582195  0.207302  0.605233
two   │ 0.970774  0.319666  0.489359  0.7088932x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.47388    -0.694452  …    -0.914206     0.952111
2     │   -0.388683    -0.748762  …      2.14271      1.431861000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -2.18798   -0.485255
2     │ 0.00824849    0.362261
3     │ -0.0106639     0.48474
4     │    1.46276    0.572313
5     │    1.35395    0.216913
6     │    1.34229   -0.351762
7     │ 0.00900164   -0.531363
8     │  0.0953188     0.94185
9     │   0.811766   -0.285034
⋮                ⋮           ⋮
992   │ 0.00466985    0.921242
993   │    0.42718      2.3271
994   │  -0.859167    -1.27277
995   │   0.937149     0.97923
996   │  -0.709909  -0.0269977
997   │    0.51795   -0.458656
998   │   0.111924   -0.845301
999   │   0.267457      1.0333
1000  │  -0.215618    0.2547871000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │ -0.0101459
2    │  -0.611646
3    │   -1.15023
4    │ -0.0248801
5    │    1.43989
6    │  -0.220015
7    │    1.59028
8    │   0.751916
9    │   0.340465
⋮               ⋮
992  │   0.936405
993  │  -0.382944
994  │     1.7503
995  │   0.559054
996  │  -0.659616
997  │ -0.0890733
998  │   0.157028
999  │      1.089
1000 │   -1.047642x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.66523  0.889226
1           │ 0.635242  0.475642

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.31884   0.44328
1           │ 0.430537  0.751257
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.484701
2  │ 0.379095
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.739429  0.514943
2     │ 0.656355  0.111728
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.361673  0.377609
2     │ 0.541141  0.673099

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.885238  0.897203
2     │ 0.931472  0.181439
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.353886  0.274953
2     │ 0.986825  0.666219

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.200306  0.693157
2     │ 0.288489  0.699239

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.617674  0.0582799
2     │  0.687291  0.0306002

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.691703  0.446614
2     │ 0.563154  0.527921
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.286648   0.823017
2     │ 0.0546801   0.855544

[:, :, C=2, D=1, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.440166  0.00294024
2     │  0.0635373    0.586659

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.540883  0.596623
2     │ 0.839327  0.199919
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.185668  0.310054

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.991225  0.880487
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.789935
2     │ 0.763087

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.484748
2     │ 0.663012
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.743658  0.297486
2     │ 0.357419  0.754663
1000×1000 Named sparse matrix with 111 Float64 nonzero entries:
	[140805053905483200  ,  6526988131186142725]  =  0.09354013964928964
	[16836080019131185762,  4400785119912308702]  =  0.863629746125675
	[9284771721002998782 ,  5004131969199419793]  =  0.5735563533640222
	[7484916964955888105 , 13789993170142104254]  =  0.9152637717349519
	[16836080019131185762,  6564272639106249010]  =  0.012590402565746395
	[13440552775821083551, 15422846019410515149]  =  0.29734507250811526
	[9828685043168917423 ,  8058121953372963805]  =  0.7426159555521328
	[5747141066858265299 , 10601912832305821454]  =  0.14076302499673754
	                                              ⋮
	[839451858133325944  , 10361974346531339474]  =  0.7253775345260434
	[58636073693946575   , 11470862121108514714]  =  0.8617838827695306
	[1348625733340586    , 11527542315164007414]  =  0.10500292916353393
	[2807702713668942919 ,  7957587899775749890]  =  0.17565092820249628
	[16544335554558850098, 13950575499123628905]  =  0.8442646196376768
	[1269227731312908414 , 13690505415342562739]  =  0.6677986057111123
	[15396075083334870119,  7519919299137062942]  =  0.6194463852270802
	[8794079702498558299 ,  7519919299137062942]  =  0.38442419969040387
	[5392016834065508343 ,  7519919299137062942]  =  0.8128046611329725Timing named index: 0.000859388, array index: 0.000698057, named key: 0.117844432
Timing sum large sparse array: 0.011750712, named: 0.023598213
done!
INFO: NamedArrays tests passed

>>> End of log
