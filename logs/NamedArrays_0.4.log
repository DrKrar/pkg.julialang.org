>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (874.41796875 MB free)
Uptime: 6449.0 sec
Load Avg:  1.16748046875  1.0185546875  1.00439453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     302474 s         94 s      27594 s     248129 s          6 s
#2  3500 MHz     173026 s         54 s      23675 s     429809 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.380322    0.403915    0.886331
b           │ 0.00873534    0.245595    0.796627 0.38032178507336467 0.38032178507336467
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.380322    0.403915    0.886331
b     │ 0.00873534    0.245595    0.796627
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.380322    0.403915    0.886331
b           │ 0.00873534    0.245595    0.796627
2x3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.380322    0.403915    0.886331
b     │ 0.00873534    0.245595    0.796627
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.438826  0.868099  0.193371  0.699622
two   │  0.63102   0.92429   0.52798  0.589911
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.125154   0.52779
1           │ 0.433509  0.136823

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0461315   0.838873
1           │  0.123634   0.868727
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.435372
2 │ 0.522935
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.355632  0.123846
2     │ 0.552394  0.865455
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.532221  0.807423
2     │ 0.118162  0.991915

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.647438  0.342128
2     │ 0.817081  0.740042
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.333927  0.969355
2     │ 0.767313  0.578243

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.667989  0.501079
2     │ 0.869692  0.138359

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.140134  0.703071
2     │  0.27713  0.142779

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.625124  0.123373
2     │ 0.717057  0.315975
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.801308  0.571777
2     │ 0.726269  0.557832

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.587258  0.117292
2     │ 0.122794   0.33291

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0347358   0.537819
2     │  0.701696    0.59328

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.980311  0.590963
2     │ 0.814288  0.562974

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.501593  0.854155
2     │ 0.143469  0.252694

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.106225   0.488973
2     │ 0.0728786  0.0245348

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0697356   0.490845
2     │   0.56632   0.408113

[:, :, C=2, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.871952  0.0888879
2     │  0.747104   0.522724
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.791616  0.0500562

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.566836   0.42846
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.172182
2     │ 0.828489

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.88743
2     │ 0.906325
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0513769   0.203452
2     │   0.80866   0.400336
done!
Timing named index: 0.000740919, array index: 0.000629655, named key: 0.123598719
Timing sum large sparse array: 0.007411065, named: 0.015337439
INFO: NamedArrays tests passed

>>> End of log
