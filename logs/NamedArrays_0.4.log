>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (800.671875 MB free)
Uptime: 8062.0 sec
Load Avg:  0.880859375  0.96044921875  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     344460 s       5124 s      32067 s     344867 s         12 s
#2  3499 MHz     211349 s       1846 s      28978 s     542998 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.19.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.760045513938566	.14312546833143402	.5601814018754836	.5514414133846661
two	.8734548480052056	.9212549857409111	.8878423557932371	.10075016987898477
a	91
b	40
c	86
d	23
e	81
f	78
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.533676    0.38676   0.111645
b           │  0.531518    0.19685  0.0301198 0.5336760005140266 0.5336760005140266
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.533676    0.38676   0.111645
b     │  0.531518    0.19685  0.0301198
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.533676    0.38676   0.111645
b           │  0.531518    0.19685  0.0301198
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.533676    0.38676   0.111645
b     │  0.531518    0.19685  0.0301198
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.188943  0.904731  0.622444  0.232627
er              │ 0.316802  0.955539  0.650046  0.401004
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140453348340968
0-element Named Array{Any,1}

[0.17481041762387428 0.7208739206466113 0.44249976572849303 0.7775642954894446
 0.986930896827767 0.11014217312202512 0.3452909228575387 0.32978427847177105]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.17481  0.720874    0.4425  0.777564
two   │ 0.986931  0.110142  0.345291  0.3297842x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │  0.17481  0.720874    0.4425  0.777564
two   │ 0.986931  0.110142  0.345291  0.3297842x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.156638     -1.28845  …    -0.102166     0.481721
2     │   -0.339565     0.110002  …    -0.098726     0.5158561000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.28346   -1.33075
2     │  -2.50312   0.677315
3     │   2.61406  -0.174014
4     │  -1.10539    1.30652
5     │ -0.182435   -1.44172
6     │ -0.246513  -0.384939
7     │   1.88051  -0.653623
8     │ -0.108776   -0.38379
9     │  0.657857  -0.375061
⋮               ⋮          ⋮
992   │  0.994357  -0.277987
993   │  -1.30572  -0.763501
994   │  0.553812   -1.32012
995   │ -0.177038   0.758221
996   │  -1.92409  -0.302897
997   │  0.877023   -1.00837
998   │  0.776933   -1.28716
999   │ -0.928166    1.75181
1000  │  0.298077    1.083841000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.658711
2    │ -0.0640775
3    │  -0.401436
4    │   -1.95448
5    │  -0.758042
6    │    0.69229
7    │   -1.10925
8    │   -1.74635
9    │   0.340077
⋮               ⋮
992  │  -0.722311
993  │  0.0268491
994  │   -1.70475
995  │    1.31804
996  │    -0.5295
997  │ -0.0876225
998  │   0.125075
999  │    2.50598
1000 │   0.4592962x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.60241  0.761564
1           │ 0.482992  0.111031

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.135573  0.196038
1           │ 0.186128  0.709243
2-element Named Array{Float64,1}
A  │ 
───┼────────
1  │ 0.95727
2  │ 0.15049
2x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.141741   0.312424
2     │ 0.0871935   0.559871
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.156338  0.231075
2     │ 0.455422   0.54798

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.682566  0.175087
2     │ 0.493845  0.706304
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.40157   0.149227
2     │  0.367205  0.0871131

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0801917   0.284412
2     │  0.262049   0.928777

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.536062  0.692061
2     │ 0.174909  0.161638

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.671306   0.994624
2     │ 0.0164294   0.307931
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.623907  0.386708
2     │  0.55277  0.209355

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.342988  0.0432616
2     │  0.504095    0.77669

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.825817  0.464463
2     │ 0.381771  0.463546
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.630962  0.759527

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.949118  0.524873
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.322684
2     │ 0.227965

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.309844
2     │ 0.427299
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.575576  0.846365
2     │ 0.178398  0.329442
1000×1000 Named sparse matrix with 89 Float64 nonzero entries:
	[2572302398133619299 , 14066869468942639955]  =  0.9237745380062337
	[14475185020288943568,  2230070772219402886]  =  0.856334473116054
	[17466052388280872253, 18443816037252674910]  =  0.7136881355907301
	[10603672941428866019,  7199089960335318010]  =  0.776426561949924
	[6330913940894778354 ,  8725235013359650451]  =  0.6777155566419453
	[4174785917342603289 ,  4329451781928897369]  =  0.4721289989734714
	[4005702914804719925 ,  7425701996526302553]  =  0.47097368563049113
	[2564073136243113693 ,  1166092285267503990]  =  0.8828619264566588
	                                              ⋮
	[1163464316904916440 , 16946861163327142185]  =  0.0719161089186402
	[1085996354551843550 , 13544680138434484894]  =  0.6041127332124192
	[2836200141957565154 , 10647878191897777347]  =  0.18171858218773096
	[4099991848953537601 , 16655780295490676025]  =  0.06885851052411751
	[3010300210541878305 ,  6468689935112619700]  =  0.3907376301761514
	[13706965959382047777, 11711005111088208244]  =  0.7529905767351788
	[2362724562918981188 , 14057278280866812536]  =  0.908880557185026
	[14304565767364922256,  3010300210541878305]  =  0.5546936359700296
	[1406197640930237395 , 13950575499123628905]  =  0.07902895201907656Timing named index: 0.000782303, array index: 0.000879408, named key: 0.110989122
Timing sum large sparse array: 0.006007194, named: 0.012956657
done!
INFO: NamedArrays tests passed

>>> End of log
