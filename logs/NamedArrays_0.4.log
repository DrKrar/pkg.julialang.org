>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (881.5703125 MB free)
Uptime: 7282.0 sec
Load Avg:  0.77685546875  0.89990234375  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     281628 s         51 s      31679 s     332877 s         13 s
#2  3499 MHz     179624 s         92 s      27046 s     492001 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.347835  0.201957  0.383553
b           │ 0.239037  0.247388  0.646021 0.34783486895914506 0.34783486895914506
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.347835  0.201957  0.383553
b     │ 0.239037  0.247388  0.646021
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.347835  0.201957  0.383553
b           │ 0.239037  0.247388  0.646021
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.347835  0.201957  0.383553
b     │ 0.239037  0.247388  0.646021
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.646933  0.936418  0.480425  0.862437
two   │ 0.576488  0.105522  0.564543  0.725447
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.650408  0.971315
1           │ 0.557852  0.175033

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.524513  0.209362
1           │ 0.560777  0.553254
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.606007
2 │ 0.559673
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.474705  0.690725
2     │ 0.188465  0.639767
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.124583  0.616695
2     │ 0.248249  0.797599

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.397073  0.220446
2     │ 0.512783  0.607039
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0757178   0.243621
2     │  0.551341   0.960649

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.234194  0.478723
2     │ 0.223655  0.963095

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0383287   0.491017
2     │  0.273843   0.766422

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.314466   0.60937
2     │ 0.828286  0.751783
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.11509  0.536127
2     │  0.30971  0.736827

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.75316  0.309091
2     │ 0.378532  0.499175

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.3009  0.640172
2     │  0.21744  0.117231

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.233022  0.870516
2     │ 0.156585  0.312319

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.886998  0.806039
2     │ 0.617217  0.748927

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.361154    0.2575
2     │ 0.744542  0.119464

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.53547  0.381525
2     │ 0.576785  0.767488

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.482454  0.930538
2     │ 0.689793  0.946416
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.708332  0.820246

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.926488  0.509598
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.286301
2     │ 0.0187593

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.781066
2     │ 0.347631
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.895864  0.545875
2     │ 0.996271  0.823821
done!
Timing named index: 0.000551873, array index: 0.000435767, named key: 0.082139648
Timing sum large sparse array: 0.012581437, named: 0.025969485
INFO: NamedArrays tests passed

>>> End of log
