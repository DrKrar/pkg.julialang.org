>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (860.62109375 MB free)
Uptime: 6833.0 sec
Load Avg:  0.9560546875  0.966796875  0.99951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     318364 s        135 s      28520 s     268592 s         24 s
#2  3499 MHz     198244 s          0 s      23611 s     438371 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.843434  0.409254   0.83691
b           │ 0.272604  0.576051  0.929513 0.8434336787030223 0.8434336787030223
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.843434  0.409254   0.83691
b     │ 0.272604  0.576051  0.929513
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.843434  0.409254   0.83691
b           │ 0.272604  0.576051  0.929513
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.843434  0.409254   0.83691
b     │ 0.272604  0.576051  0.929513
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.235794  0.0190595   0.631004   0.835514
two   │  0.367614  0.0360592   0.207094   0.899482
2x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.335037  0.355035
1           │ 0.373498  0.619426

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.173673  0.740679
1           │ 0.703411  0.573516
2-element Named Array{Float64,1}
A │ 
──┼───────────
1 │   0.958524
2 │ 0.00184636
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.586881  0.281578
2     │ 0.046818  0.127701
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0691419   0.124676
2     │    0.7184    0.36727

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.177143  0.647276
2     │ 0.495941  0.547938
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.865039  0.960281
2     │  0.17231  0.572189

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.173462  0.120401
2     │ 0.542789  0.439565

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.975434  0.166389
2     │ 0.600354  0.921349

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.305342  0.770478
2     │ 0.108669  0.412657
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.883061  0.0437387
2     │   0.44249   0.697064

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.775613  0.759926
2     │ 0.499782  0.017985

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.175367   0.683242
2     │  0.172627  0.0681165

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.535733  0.581434
2     │ 0.735477  0.969209

[:, :, C=1, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0263917   0.445372
2     │  0.128461   0.920411

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.384829  0.822475
2     │ 0.121646  0.184372

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.553703  0.646846
2     │ 0.198233   0.67961

[:, :, C=2, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.874946   0.105269
2     │  0.731452  0.0604951
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.646722  0.582365

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.312379   0.44325
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.846005
2     │ 0.076393

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.482973
2     │ 0.726918
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.778393  0.694105
2     │  0.94484  0.262109
done!
Timing named index: 0.000616493, array index: 0.000438804, named key: 0.072007354
Timing sum large sparse array: 0.007867563, named: 0.016249162
INFO: NamedArrays tests passed

>>> End of log
