>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (791.1171875 MB free)
Uptime: 7987.0 sec
Load Avg:  1.09033203125  1.029296875  1.048828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     343664 s       3326 s      31281 s     337672 s         29 s
#2  3500 MHz     230716 s       2884 s      27656 s     502878 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.2
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.15.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.033710493307436806	.4170813152023394	.10010930274271646	.30155873931705157
two	.06457334668767789	.4718962814027934	.5873157938490663	.11880815727314276
a	98
b	4
c	100
d	30
e	46
f	14
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0648543   0.663627   0.436299
b           │   0.93219   0.909585   0.354889 0.0648542750050225 0.0648542750050225
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0648543   0.663627   0.436299
b     │   0.93219   0.909585   0.354889
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0648543   0.663627   0.436299
b           │   0.93219   0.909585   0.354889
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0648543   0.663627   0.436299
b     │   0.93219   0.909585   0.354889
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │         yi          er         san          si
────────────────┼───────────────────────────────────────────────
yi              │   0.295897    0.333747    0.896231   0.0978745
er              │ 0.00442115    0.459559   0.0106037      0.9389
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140121563645456
0-element Named Array{Any,1}

[0.08468499531602425 0.8528717643592931 0.040108015537230424 0.15533555299631674
 0.45810042253182925 0.8310337873869589 0.9171136397033524 0.20757494600335913]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.084685  0.852872  0.040108  0.155336
two   │   0.4581  0.831034  0.917114  0.2075752x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.084685  0.852872  0.040108  0.155336
two   │   0.4581  0.831034  0.917114  0.2075752x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.785767    -0.408261  …    -0.940579     -1.48192
2     │     1.29458     0.606385  …     -0.60471      1.571011000x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.343233      -1.025
2     │   0.984768    0.840919
3     │    1.67422     1.58167
4     │  -0.351686   -0.199609
5     │    1.01833    0.572331
6     │    -1.3299    0.264159
7     │  -0.873555    0.217502
8     │   0.880714   -0.192895
9     │   0.641947   -0.729473
⋮                ⋮           ⋮
992   │  -0.599889  -0.0741246
993   │  -0.458847    -1.16085
994   │  -0.482832    0.218926
995   │ -0.0384662   -0.111953
996   │   -1.87903     -0.4707
997   │  -0.515111     1.14832
998   │   -1.72945   -0.153926
999   │  -0.205204    -2.09866
1000  │   0.910802    0.4189711000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.765962
2    │    1.30467
3    │   0.190916
4    │   -1.58655
5    │   -1.13018
6    │  -0.495718
7    │    1.21111
8    │  -0.554366
9    │   0.467802
⋮               ⋮
992  │   0.407958
993  │   0.452024
994  │  -0.277445
995  │  -0.672113
996  │   0.410224
997  │   0.314645
998  │ -0.0564984
999  │  -0.754067
1000 │  -0.6540132x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.342695   0.145193
1           │ 0.0295109   0.852809

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.648381   0.869676
1           │ 0.0229804   0.466472
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.469241
2  │ 0.709629
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.520648  0.243893
2     │ 0.903106  0.261389
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.768102  0.0388076
2     │   0.40829   0.238915

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.993152  0.0297156
2     │   0.68619  0.0116768
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │  0.0626109  0.00936076
2     │   0.177279    0.336965

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.82435   0.510174
2     │   0.31056  0.0205176

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.726441    0.67223
2     │ 0.0952046   0.179421

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.920727   0.308391
2     │  0.739428  0.0495984
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.317448  0.399427
2     │ 0.200448  0.996513

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.237114  0.684122
2     │ 0.128706  0.170536

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.971711  0.681472
2     │ 0.306136  0.619166
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.871522  0.365914

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0432055  0.0123628
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.606882
2     │ 0.964035

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.839776
2     │ 0.756696
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.943432  0.276872
2     │ 0.568728  0.476488
1000×1000 Named sparse matrix with 89 Float64 nonzero entries:
	[12624682912995533025, 13789993170142104254]  =  0.10183601787609398
	[17211410618634043162, 13888991764943741743]  =  0.2841859544924843
	[1257048595837562235 ,  6134978669850253296]  =  0.22623749143423644
	[3674440393316115114 ,  5927176887743683346]  =  0.32842584497181204
	[4115023046715773069 ,   592365234179887848]  =  0.2879656109625732
	[5452972151941397067 ,  9920432272297441209]  =  0.0022968802325915583
	[5941255457965612473 , 14995138918287078531]  =  0.19205019413090185
	[12554874066387155728,  4394159825732135742]  =  0.6569378498833629
	                                              ⋮
	[6036984650697465167 ,  6468689935112619700]  =  0.8225157706507569
	[5312631360709731698 ,  4182991028086505933]  =  0.2333746845519422
	[11170631332889122227,  4182991028086505933]  =  0.2539312903194153
	[5490184849613505398 , 13970367575607681105]  =  0.6050661641357669
	[2111347661095988866 , 11314283927973801071]  =  0.984875489400149
	[16408863325498676967,  1842419535934980543]  =  0.3961634778831584
	[12560086892438044273,  7957587899775749890]  =  0.734836143943411
	[11268042782136347345, 13950575499123628905]  =  0.4800533496411399
	[9940286103801177457 ,  2588469222286953884]  =  0.4267541834928952Timing named index: 0.000682947, array index: 0.000420698, named key: 0.070021613
Timing sum large sparse array: 0.006100962, named: 0.012468127
done!
INFO: NamedArrays tests passed

>>> End of log
