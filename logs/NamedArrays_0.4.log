>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (800.57421875 MB free)
Uptime: 7099.0 sec
Load Avg:  0.9921875  0.9853515625  1.064453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     303858 s        399 s      27262 s     313153 s         13 s
#2  3496 MHz     209098 s       6822 s      23757 s     452424 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	.32335386779344866	.36258873152663496	.2641406460390432	.046734590495994155
two	.9974543537495124	.3588403206292705	.8964978798184207	.14054945179502942
a	52
b	76
c	85
d	53
e	18
f	90
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.830538  0.925834   0.38412
b           │ 0.273763  0.845306  0.644235 0.830538348477915 0.830538348477915
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.830538  0.925834   0.38412
b     │ 0.273763  0.845306  0.644235
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.830538  0.925834   0.38412
b           │ 0.273763  0.845306  0.644235
2x3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.830538  0.925834   0.38412
b     │ 0.273763  0.845306  0.644235
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │        yi         er        san         si
────────────────┼───────────────────────────────────────────
yi              │ 0.0552006   0.677674   0.967338   0.850309
er              │  0.683768   0.545285   0.796058    0.21541
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139714066872208
0-element Named Array{Any,1}

[0.9691546625622927 0.05396692558901228 0.7821929566433274 0.8604119156754353
 0.36029683320281647 0.37620653856154185 0.9749818894464364 0.0815162661253126]
2x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.969155  0.0539669   0.782193   0.860412
two   │  0.360297   0.376207   0.974982  0.08151632x4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.969155  0.0539669   0.782193   0.860412
two   │  0.360297   0.376207   0.974982  0.08151632x1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.444931       1.19105  …     -0.857442     -0.128554
2     │    0.0816064       -1.4935  …      -1.16547      -1.165271000x2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.609149    0.13336
2     │  -1.99769  -0.323706
3     │    1.7214   -1.02312
4     │  0.460645   -1.33823
5     │  0.149377   0.021314
6     │  0.196572   -1.06499
7     │  0.441657   -1.21321
8     │ -0.363595    1.65223
9     │ -0.189911    1.25299
⋮               ⋮          ⋮
992   │  0.408864    1.89983
993   │ -0.498967    1.03117
994   │  0.948556   0.997969
995   │  -2.06433   -0.51138
996   │ 0.0742811  -0.806346
997   │ -0.797227   0.643076
998   │ -0.909874  -0.197161
999   │ -0.833234   0.558086
1000  │ -0.501977   0.1512071000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.231427
2    │  -0.228299
3    │     1.4945
4    │ -0.0704925
5    │   -1.09883
6    │   0.574022
7    │    1.63664
8    │  -0.763402
9    │  -0.176015
⋮               ⋮
992  │   0.620177
993  │   0.691848
994  │   -1.29051
995  │   -1.56172
996  │   -1.20142
997  │    1.14581
998  │   -1.12612
999  │  -0.422099
1000 │ -0.03838012x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.698207  0.512475
1           │ 0.872746  0.507283

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.860375  0.709561
1           │   0.2487  0.779015
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.598967
2  │ 0.965981
2x2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.987506   0.0455189
2     │ 0.00047972    0.814249
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.918289  0.225569
2     │ 0.485669  0.357994

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.370153   0.364212
2     │ 0.0194633   0.167741
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.242403  0.888621
2     │ 0.270462  0.884724

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.718038  0.999667
2     │ 0.375465  0.307705

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.46175   0.235015
2     │ 0.0273042   0.405375

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.511272  0.719408
2     │ 0.796065  0.948151
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.657871  0.669781
2     │ 0.983031  0.937939

[:, :, C=2, D=1, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.387643     0.55361
2     │   0.814765  0.00676754

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.851052  0.104208
2     │ 0.779651  0.556681
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.513336   0.96152

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.795071   0.38441
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.922075
2     │ 0.457217

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.176532
2     │  0.54165
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.472628  0.681779
2     │ 0.171705  0.690171
1000×1000 Named sparse matrix with 88 Float64 nonzero entries:
	[16544335554558850098, 14066869468942639955]  =  0.813457503936827
	[11314283927973801071, 17822619313291261357]  =  0.23645811438413333
	[12281884974520114934,  2230070772219402886]  =  0.3763571035131761
	[4034226599594678126 , 18443816037252674910]  =  0.015473777125064814
	[15380324202042087980, 17676219393380616284]  =  0.11268368690591224
	[13342932250377702532, 18168544338330653462]  =  0.5867408189291266
	[12459814376862134316,  1166092285267503990]  =  0.24785478203763822
	[11902824463030858325,  2791304443232646030]  =  0.6501888702539629
	                                              ⋮
	[7388874443385012746 , 16946861163327142185]  =  0.9329269226585999
	[15444197186593984072, 17173839162019621584]  =  0.20531670068363672
	[2791304443232646030 , 13710539999002292266]  =  0.8739672099130493
	[592365234179887848  , 11604119926906451644]  =  0.32587496524800885
	[4194711704772932182 , 11382910810432795234]  =  0.6846387118831248
	[11104426471044518599,  4214085865611670439]  =  0.5302346362076154
	[5477100648039519996 , 10024080200852233627]  =  0.2520311987955035
	[592365234179887848  ,  3279378535085980212]  =  0.49553996951611157
	[6249139884124980606 ,  7519919299137062942]  =  0.4201578846175611Timing named index: 0.000743166, array index: 0.000657516, named key: 0.129925813
Timing sum large sparse array: 0.010507342, named: 0.029567932
done!
INFO: NamedArrays tests passed

>>> End of log
