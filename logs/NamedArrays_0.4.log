>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from git://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.2.1
INFO: Installing DataStructures v0.5.1
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (854.28125 MB free)
Uptime: 7334.0 sec
Load Avg:  1.19384765625  1.03759765625  1.0556640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     347243 s       4862 s      33343 s     270940 s         12 s
#2  3500 MHz     220036 s       2015 s      29731 s     461922 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.2.1
 - Compat                        0.11.0
 - DataStructures                0.5.1
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
WARNING: New definition 
    push!(DataStructures.Accumulator{#T<:Any, #V<:Number}, #T<:Any) at /home/vagrant/.julia/v0.4/DataStructures/src/accumulator.jl:54
is ambiguous with: 
    push!(Base.Associative, Base.Pair) at dict.jl:294.
To fix, define 
    push!(DataStructures.Accumulator{K<:Any, #V<:Number}, _<:Base.Pair)
before the new definition.
Starting test, no assertions should fail... base, one	.9450332412865534	.3040993280842381	.5491461185444777	.5348577752998045
two	.4607142602809453	.8257681219330992	.11126349101551125	.48759848020383
a	11
b	55
c	77
d	18
e	14
f	43
construction, 2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.601587   0.981864   0.522673
b           │ 0.0203766   0.714451   0.420578 0.6015871380679321 0.6015871380679321
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.601587   0.981864   0.522673
b     │ 0.0203766   0.714451   0.420578
2x3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.601587   0.981864   0.522673
b           │ 0.0203766   0.714451   0.420578
2x3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.601587   0.981864   0.522673
b     │ 0.0203766   0.714451   0.420578
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, WARNING: could not import Base.indices into Main
getindex, setindex, 2x4 Named Array{Float64,2}
magnificent ╲ 7 │       yi        er       san        si
────────────────┼───────────────────────────────────────
yi              │ 0.164421  0.201972  0.766602  0.700616
er              │ 0.730793  0.557254  0.188488  0.494149
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140289408238928
0-element Named Array{Any,1}

[0.7128213148624636 0.9774948131238186 0.3649715329801202 0.1371510399824527
 0.909949130536823 0.6774201355859066 0.41244284423748523 0.5768634477683061]
2x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.712821  0.977495  0.364972  0.137151
two   │ 0.909949   0.67742  0.412443  0.5768632x4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.712821  0.977495  0.364972  0.137151
two   │ 0.909949   0.67742  0.412443  0.5768632x1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │     1.57565      1.16595  …     0.373465       1.2963
2     │    0.861814     -1.17383  …    0.0454797      1.991541000x2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.530242     0.669245
2     │     2.16953    -0.485411
3     │   -0.435734    0.0967107
4     │     0.20367        1.235
5     │   -0.988672     0.671962
6     │    0.813627      1.85366
7     │   -0.503535     0.690692
8     │   -0.837074    -0.890826
9     │   -0.241371     -0.24133
⋮                 ⋮            ⋮
992   │     2.13934      1.52231
993   │    -1.17834     0.825605
994   │   -0.406288    -0.175498
995   │   -0.685606      1.06103
996   │ -0.00224853      1.38948
997   │    -1.09136     0.370555
998   │    0.186575     -1.70617
999   │      1.6795      1.03103
1000  │   -0.531662      0.103271000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   2.18574
2    │  0.647617
3    │ -0.913872
4    │  -1.21122
5    │ -0.198769
6    │  0.414768
7    │ -0.318598
8    │ -0.106375
9    │     1.511
⋮              ⋮
992  │  -0.17054
993  │   1.17154
994  │  -1.10383
995  │ -0.959839
996  │  -2.40118
997  │  -1.36545
998  │  -1.21771
999  │ 0.0577667
1000 │  -1.653292x2x2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.691443  0.691355
1           │ 0.148003  0.520124

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.123012  0.184599
1           │ 0.536548  0.795598
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.618437
2  │ 0.630275
2x2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │  0.50348  0.792386
2     │ 0.516036  0.525347
2x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.444985  0.649443
2     │ 0.525798  0.345545

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.807075   0.636077
2     │  0.151411  0.0660367
2x2x2x2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.471257   0.528125
2     │  0.289579  0.0696632

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.637747  0.216973
2     │ 0.626619  0.237367

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.883393   0.531514
2     │  0.806689  0.0548309

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0380111   0.270403
2     │ 0.0928349    0.22532
2x2x2x2x2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.730782  0.569989
2     │ 0.879518  0.590021

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.548031  0.632152
2     │ 0.400776  0.996112

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.436853  0.425283
2     │ 0.343962  0.785469
⋮
1x2x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.833027  0.618814

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.471695  0.719458
2x1x2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0710398
2     │  0.257144

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.604911
2     │ 0.170156
2x2x1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.986988  0.0448181
2     │   0.67866   0.600503
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[3945256368785098242 , 14343632987770563929]  =  0.8254393461817975
	[17207488849817960156,  6134978669850253296]  =  0.6190476653209149
	[13710539999002292266,  6134978669850253296]  =  0.86609526589425
	[11368314934203416452,  4247719799217886270]  =  0.2558199267555188
	[11496001657944805140, 10106592262940987645]  =  0.11044223670084219
	[1628675476083889103 , 17211410618634043162]  =  0.9145520424838358
	[7713060533429820211 ,  4302721723742542942]  =  0.40894480704671277
	[14542831684510380172, 16112569381171233070]  =  0.15741935619699077
	                                              ⋮
	[12376285854513575894,  5983786778458205040]  =  0.39361814866135014
	[15673988649286256572, 15436097664388839821]  =  0.7191411209459
	[2539844710871411659 , 18148906667482527649]  =  0.27026695181477267
	[493461921061351564  , 14835807873575694564]  =  0.533927863498773
	[13096237947071787928,  4047135350800189603]  =  0.17551657378115393
	[4182991028086505933 ,  3279378535085980212]  =  0.39730511826503645
	[11104426471044518599, 16202651256804923129]  =  0.4018591758080825
	[2230070772219402886 ,   427459847123490633]  =  0.8223628700000578
	[12901330087571726961,  7519919299137062942]  =  0.32480161312289657Timing named index: 0.000670519, array index: 0.000376872, named key: 0.072678083
Timing sum large sparse array: 0.00715653, named: 0.020960185
done!
INFO: NamedArrays tests passed

>>> End of log
