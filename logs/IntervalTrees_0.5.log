>>> 'Pkg.add("IntervalTrees")' log
INFO: Installing Docile v0.5.23
INFO: Installing IntervalTrees v0.0.5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of IntervalTrees
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("IntervalTrees")' log
Julia Version 0.5.0-rc0+67
Commit 5098f48 (2016-07-30 09:04 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1240.96484375 MB free)
Uptime: 27933.0 sec
Load Avg:  0.9541015625  0.9853515625  1.0693359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1445276 s       3233 s     187960 s     793517 s         73 s
#2  3499 MHz     557828 s        984 s      92290 s    2005255 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - IntervalTrees                 0.0.5
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - Docile                        0.5.23
INFO: Computing test dependencies for IntervalTrees...
INFO: Installing FactCheck v0.4.3
INFO: Testing IntervalTrees
Getters
5 facts verified.
Search
  > true positives
  > true negatives
7 facts verified.
Iteration
  > from
    Error :: (line:272) :: from
      Expression: length(collect(from(t,startpos))) --> expected_count
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect at ./array.jl:233 [inlined]
       in (::TestIntervalTrees.##87#101{Int64})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##87#101{Int64}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##84#98)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:202
       in context(::TestIntervalTrees.##84#98, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##80#94)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##80#94, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: from
      Expression: length(collect(from(t,0))) --> n
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##89#103)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##89#103, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##84#98)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:203
       in context(::TestIntervalTrees.##84#98, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##80#94)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##80#94, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: from
      Expression: length(collect(from(t,maxend + 1))) --> 0
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect at ./array.jl:233 [inlined]
       in (::TestIntervalTrees.##91#105{Int64})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##91#105{Int64}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##84#98)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:204
       in context(::TestIntervalTrees.##84#98, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##80#94)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##80#94, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: from
      Expression: length(collect(from(IntervalTree{Int,Int}(),0))) --> 0
      MethodError: no method matching length(::IntervalTrees.IntervalFromIterator{Int64,Int64,64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect at ./array.jl:233 [inlined]
       in (::TestIntervalTrees.##93#107)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##93#107, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##84#98)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:205
       in context(::TestIntervalTrees.##84#98, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##80#94)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:188
       in facts(::TestIntervalTrees.##80#94, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
Out of 5 total facts:
  Verified: 1
  Errored:  4
Interval Intersection
  Error :: (line:272)
    Expression: length(collect(intersect(t,(x,x)))) --> 1
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
     in do_fact(::TestIntervalTrees.##110#143, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##108#141)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:224
     in facts(::TestIntervalTrees.##108#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
  Error :: (line:272)
    Expression: length(collect(intersect(t,(a,a)))) --> 0
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
     in do_fact(::TestIntervalTrees.##114#147, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##108#141)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:228
     in facts(::TestIntervalTrees.##108#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
  Error :: (line:272)
    Expression: length(collect(intersect(t,((intervals[1])[1],(intervals[end])[2])))) --> length(t)
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
     in do_fact(::TestIntervalTrees.##118#151, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##108#141)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:232
     in facts(::TestIntervalTrees.##108#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
  Error :: (line:272)
    Expression: all(Bool[random_intersection_query() for _ = 1:1000]) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntervalIntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
     in (::TestIntervalTrees.#random_intersection_query#158)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:241
     in (::TestIntervalTrees.##126#160)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##126#160, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##108#141)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:244
     in facts(::TestIntervalTrees.##108#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
Out of 13 total facts:
  Verified: 9
  Errored:  4
Nonunique
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect at ./array.jl:233 [inlined]
     in #179 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in do_fact(::TestIntervalTrees.##179#190{IntervalTrees.IntervalBTree{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##175#186)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:283
     in facts(::TestIntervalTrees.##175#186, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
Out of 5 total facts:
  Verified: 4
  Errored:  1
Tree Intersection
  Error :: (line:272)
    Expression: collect(a) == collect(b) --> true
    MethodError: no method matching length(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
     in do_fact(::TestIntervalTrees.##199#206, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##197#204)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:311
     in facts(::TestIntervalTrees.##197#204, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
  Error :: (line:272)
    Expression: isempty(collect(intersect(t1,t2,method=:iterative))) --> true
    MethodError: no method matching length(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect at ./array.jl:233 [inlined]
     in (::TestIntervalTrees.##201#208)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##201#208, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##197#204)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:318
     in facts(::TestIntervalTrees.##197#204, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
  Error :: (line:272)
    Expression: isempty(collect(intersect(t1,t2,method=:successive))) --> true
    MethodError: no method matching length(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntersectionIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
     in (::TestIntervalTrees.##203#210)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##203#210, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##197#204)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:319
     in facts(::TestIntervalTrees.##197#204, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
Out of 3 total facts:
  Errored:  3
Insertion
  > random insertions
    Error :: (line:272) :: random insertions
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##214#267)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##214#267, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##212#265{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:332
       in context(::TestIntervalTrees.##212#265{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##211#264)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:327
       in facts(::TestIntervalTrees.##211#264, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > ordered insertions
    Error :: (line:272) :: ordered insertions
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##223#276)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##223#276, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##221#274{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:343
       in context(::TestIntervalTrees.##221#274{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##211#264)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:338
       in facts(::TestIntervalTrees.##211#264, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > reverse ordered insertions
    Error :: (line:272) :: reverse ordered insertions
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##232#285)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##232#285, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##230#283{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:354
       in context(::TestIntervalTrees.##230#283{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##211#264)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:349
       in facts(::TestIntervalTrees.##211#264, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > bulk insertion
    Error :: (line:272) :: bulk insertion
      Expression: collect(keys(t)) == [Interval{Int}(interval.first,interval.last) for interval = intervals] --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##241#294{Array{IntervalTrees.IntervalValue{Int64,Int64},1}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##241#294{Array{IntervalTrees.IntervalValue{Int64,Int64},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##239#292{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:369
       in context(::TestIntervalTrees.##239#292{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##211#264)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##211#264, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: bulk insertion
      Expression: collect(values(t)) == [interval.value for interval = intervals] --> true
      MethodError: no method matching length(::IntervalTrees.IntervalValueIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalValueIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##244#297{Array{IntervalTrees.IntervalValue{Int64,Int64},1}})() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##244#297{Array{IntervalTrees.IntervalValue{Int64,Int64},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##239#292{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:371
       in context(::TestIntervalTrees.##239#292{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##211#264)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##211#264, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: bulk insertion
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##247#300)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##247#300, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##239#292{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:372
       in context(::TestIntervalTrees.##239#292{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##211#264)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##211#264, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: bulk insertion
      Expression: issorted(collect(keys(t))) --> true
      MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
      Closest candidates are:
        length(!Matched::SimpleVector) at essentials.jl:168
        length(!Matched::Base.MethodList) at reflection.jl:256
        length(!Matched::MethodTable) at reflection.jl:322
        ...
       in _similar_for at ./array.jl:222 [inlined]
       in _collect at ./array.jl:237 [inlined]
       in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}) at ./array.jl:233
       in (::TestIntervalTrees.##255#308)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::TestIntervalTrees.##255#308, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::TestIntervalTrees.##239#292{Int64})() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:379
       in context(::TestIntervalTrees.##239#292{Int64}, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::TestIntervalTrees.##211#264)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:360
       in facts(::TestIntervalTrees.##211#264, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
Out of 24 total facts:
  Verified: 17
  Errored:  7
Updates
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},64})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect at ./array.jl:233 [inlined]
     in #320 at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in do_fact(::TestIntervalTrees.##320#330{IntervalTrees.IntervalBTree{Int64,IntervalTrees.IntervalValue{Int64,Int64},64}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##317#327)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:404
     in facts(::TestIntervalTrees.##317#327, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
Out of 4 total facts:
  Verified: 3
  Errored:  1
Deletion
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8}) at ./array.jl:233
     in (::TestIntervalTrees.##348#422)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##348#422, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##337#411)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:433
     in facts(::TestIntervalTrees.##337#411, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
  Error :: (line:272)
    Expression: issorted(collect(keys(t))) --> true
    MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8})
    Closest candidates are:
      length(!Matched::SimpleVector) at essentials.jl:168
      length(!Matched::Base.MethodList) at reflection.jl:256
      length(!Matched::MethodTable) at reflection.jl:322
      ...
     in _similar_for at ./array.jl:222 [inlined]
     in _collect at ./array.jl:237 [inlined]
     in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},8}) at ./array.jl:233
     in (::TestIntervalTrees.##361#435)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
     in do_fact(::TestIntervalTrees.##361#435, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
     in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
     in (::TestIntervalTrees.##337#411)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:445
     in facts(::TestIntervalTrees.##337#411, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
     in include_from_node1(::String) at ./loading.jl:426
     in process_options(::Base.JLOptions) at ./client.jl:262
     in _start() at ./client.jl:318
ERROR: LoadError: MethodError: no method matching length(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},4})
Closest candidates are:
  length(!Matched::SimpleVector) at essentials.jl:168
  length(!Matched::Base.MethodList) at reflection.jl:256
  length(!Matched::MethodTable) at reflection.jl:322
  ...
 in _similar_for at ./array.jl:222 [inlined]
 in _collect at ./array.jl:237 [inlined]
 in collect(::IntervalTrees.IntervalKeyIterator{Int64,IntervalTrees.IntervalValue{Int64,Int64},4}) at ./array.jl:233
 in (::TestIntervalTrees.##337#411)() at /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl:512
 in facts(::TestIntervalTrees.##337#411, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl, in expression starting on line 411
============================[ ERROR: IntervalTrees ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/IntervalTrees/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: IntervalTrees had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
