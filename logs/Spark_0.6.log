>>> 'Pkg.add("Spark")' log
INFO: Cloning cache of JavaCall from https://github.com/JuliaInterop/JavaCall.jl.git
INFO: Cloning cache of Spark from https://github.com/dfdx/Spark.jl.git
INFO: Installing JavaCall v0.4.2
INFO: Installing Spark v0.1.0
INFO: Building Spark
================================[ ERROR: Spark ]================================

LoadError: Cannot find maven. Is it installed?
while loading /home/vagrant/.julia/v0.6/Spark/deps/build.jl, in expression starting on line 5

================================================================================

================================[ BUILD ERRORS ]================================

WARNING: Spark had build errors.

 - packages with build errors remain installed in /home/vagrant/.julia/v0.6
 - build the package(s) and all dependencies with `Pkg.build("Spark")`
 - build a single package by running its `deps/build.jl` script

================================================================================
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Spark
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Spark")' log
Julia Version 0.6.0-dev.1897
Commit 8563fc5 (2017-01-04 09:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1355.57421875 MB free)
Uptime: 22790.0 sec
Load Avg:  1.0029296875  1.0478515625  1.05126953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1388598 s         67 s     125287 s     493404 s         53 s
#2  3499 MHz     396117 s         85 s      66498 s    1757609 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - Spark                         0.1.0
19 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - Distributions                 0.11.1
 - GenerativeModels              0.0.0-             master (unregistered)
 - Iterators                     0.2.0
 - JavaCall                      0.4.2
 - LaTeXStrings                  0.2.0
 - PDMats                        0.5.2
 - POMDPBounds                   0.0.0-             master (unregistered)
 - POMDPModels                   0.0.0-             master (unregistered)
 - POMDPToolbox                  0.0.0-             master (unregistered)
 - POMDPs                        0.4.0
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - TikzPictures                  0.3.5
 - URIParser                     0.1.6
INFO: Testing Spark
Loaded /usr/lib/jvm/java-7-oracle/jre/lib/amd64/server/libjvm.so
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/Spark/src/serialization.jl:23
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/Spark/src/serialization.jl:31
WARNING: is is deprecated, use === instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] is(::Type{T}, ::Vararg{Type{T},N}) at ./deprecated.jl:30
 [3] signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:291
 [4] method_signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:284
 [5] jnew(::Symbol, ::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:118
 [6] JavaCall.JavaObject{Symbol("org.apache.spark.SparkConf")}(::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:35
 [7] #SparkConf#1(::Array{Any,1}, ::Type{T}) at /home/vagrant/.julia/v0.6/Spark/src/config.jl:7
 [8] #SparkContext#2(::String, ::String, ::Type{T}) at /home/vagrant/.julia/v0.6/Spark/src/context.jl:17
 [9] Spark.SparkContext() at /home/vagrant/.julia/v0.6/Spark/src/context.jl:17
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:298
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Spark/test/runtests.jl, in expression starting on line 5
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] method_signature(::Type{T}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:285
 [4] jnew(::Symbol, ::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:118
 [5] JavaCall.JavaObject{Symbol("org.apache.spark.SparkConf")}(::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:35
 [6] #SparkConf#1(::Array{Any,1}, ::Type{T}) at /home/vagrant/.julia/v0.6/Spark/src/config.jl:7
 [7] #SparkContext#2(::String, ::String, ::Type{T}) at /home/vagrant/.julia/v0.6/Spark/src/context.jl:17
 [8] Spark.SparkContext() at /home/vagrant/.julia/v0.6/Spark/src/context.jl:17
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:298
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Spark/test/runtests.jl, in expression starting on line 5
ERROR: LoadError: Class Not Found org/apache/spark/SparkConf
Stacktrace:
 [1] _metaclass(::Symbol) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:233
 [2] metaclass(::Symbol) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:239
 [3] jnew(::Symbol, ::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:119
 [4] JavaCall.JavaObject{Symbol("org.apache.spark.SparkConf")}(::Tuple{}) at /home/vagrant/.julia/v0.6/JavaCall/src/core.jl:35
 [5] #SparkConf#1(::Array{Any,1}, ::Type{T}) at /home/vagrant/.julia/v0.6/Spark/src/config.jl:7
 [6] #SparkContext#2(::String, ::String, ::Type{T}) at /home/vagrant/.julia/v0.6/Spark/src/context.jl:17
 [7] Spark.SparkContext() at /home/vagrant/.julia/v0.6/Spark/src/context.jl:17
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:298
 [11] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Spark/test/runtests.jl, in expression starting on line 5
================================[ ERROR: Spark ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Spark/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Spark had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
