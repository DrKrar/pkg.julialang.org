>>> 'Pkg.add("BenchmarkTools")' log
INFO: Cloning cache of BenchmarkTools from https://github.com/JuliaCI/BenchmarkTools.jl.git
INFO: Installing BenchmarkTools v0.0.7
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.2.0
INFO: Installing FileIO v0.3.0
INFO: Installing HDF5 v0.7.3
INFO: Installing JLD v0.6.9
INFO: Installing LegacyStrings v0.2.0
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building HDF5
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Tuple{BinDeps.DependencyProvider,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:50
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:236
 [14] process_options(::Base.JLOptions) at ./client.jl:281
 [15] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 6
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] Array(::Type{Tuple{BinDeps.DependencyHelper,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:50
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:236
 [14] process_options(::Base.JLOptions) at ./client.jl:281
 [15] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 6
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] macro expansion at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:12
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:236
 [12] process_options(::Base.JLOptions) at ./client.jl:281
 [13] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated

>>> 'Pkg.test("BenchmarkTools")' log
Julia Version 0.6.0-dev.2635
Commit dc2459d (2017-02-13 07:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (808.78125 MB free)
Uptime: 5027.0 sec
Load Avg:  0.9404296875  1.04638671875  1.02783203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     226438 s       6612 s      26953 s     190978 s         17 s
#2  3500 MHz      92617 s         51 s      16968 s     379237 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - BenchmarkTools                0.0.7
 - JSON                          0.8.3
9 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.2.0
 - Compat                        0.19.0
 - FileIO                        0.3.0
 - HDF5                          0.7.3
 - JLD                           0.6.9
 - LegacyStrings                 0.2.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing BenchmarkTools
Testing Parameters...done (took 2.905081066 seconds)
Testing Trial/TrialEstimate/TrialRatio/TrialJudgement...done (took 2.206392048 seconds)
Testing BenchmarkGroup...done (took 6.857781401 seconds)
Testing execution...(1/3) tuning 10...
done (took 0.492593258 seconds)
(2/3) tuning 5...
done (took 0.371398696 seconds)
(3/3) tuning 20...
done (took 0.37108003 seconds)
(1/3) tuning "sum"...
  (1/3) tuning 10...
  done (took 1.132177808 seconds)
  (2/3) tuning 5...
  done (took 1.046712275 seconds)
  (3/3) tuning 20...
  done (took 1.196305655 seconds)
done (took 4.065556248 seconds)
(2/3) tuning "special"...
  (1/5) tuning "comprehension"...
  done (took 5.552408643 seconds)
  (2/5) tuning "macro"...
  done (took 0.965487225 seconds)
  (3/5) tuning "kwargs"...
  done (took 5.745277635 seconds)
  (4/5) tuning "block"...
  done (took 0.762701354 seconds)
  (5/5) tuning "nothing"...
  done (took 0.577536421 seconds)
done (took 14.292745544 seconds)
(3/3) tuning "sin"...
  (1/3) tuning 10...
  done (took 0.038871646 seconds)
  (2/3) tuning 5...
  done (took 0.035680094 seconds)
  (3/3) tuning 20...
  done (took 0.039307234 seconds)
done (took 0.706651977 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.798396466 seconds)
  (2/3) benchmarking 5...
  done (took 1.098156918 seconds)
  (3/3) benchmarking 20...
  done (took 3.619932674 seconds)
done (took 7.16225027 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 1.360924755 seconds)
  (2/5) benchmarking "macro"...
  done (took 4.636003959 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 4.516326046 seconds)
  (4/5) benchmarking "block"...
  done (took 1.729752966 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.85746911 seconds)
done (took 13.762148035 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.373273451 seconds)
  (2/3) benchmarking 5...
  done (took 0.341731618 seconds)
  (3/3) benchmarking 20...
  done (took 0.38165911 seconds)
done (took 1.710943855 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 1.035721903 seconds)
  (2/3) benchmarking 5...
  done (took 0.479370645 seconds)
  (3/3) benchmarking 20...
  done (took 1.016160023 seconds)
done (took 3.175611666 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.589932699 seconds)
  (2/5) benchmarking "macro"...
  done (took 1.018822074 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 1.012637574 seconds)
  (4/5) benchmarking "block"...
  done (took 0.825900383 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.097137043 seconds)
done (took 4.135618762 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.353675149 seconds)
  (2/3) benchmarking 5...
  done (took 0.365453607 seconds)
  (3/3) benchmarking 20...
  done (took 0.382379714 seconds)
done (took 1.785831027 seconds)
(1/3) benchmarking "sum"...
  (1/3) benchmarking 10...
  done (took 0.030509392 seconds)
  (2/3) benchmarking 5...
  done (took 0.018786843 seconds)
  (3/3) benchmarking 20...
  done (took 0.018390704 seconds)
done (took 0.715547439 seconds)
(2/3) benchmarking "special"...
  (1/5) benchmarking "comprehension"...
  done (took 0.022609314 seconds)
  (2/5) benchmarking "macro"...
  done (took 0.019346774 seconds)
  (3/5) benchmarking "kwargs"...
  done (took 0.017498174 seconds)
  (4/5) benchmarking "block"...
  done (took 0.026416407 seconds)
  (5/5) benchmarking "nothing"...
  done (took 0.026333738 seconds)
done (took 0.757880218 seconds)
(3/3) benchmarking "sin"...
  (1/3) benchmarking 10...
  done (took 0.032392367 seconds)
  (2/3) benchmarking 5...
  done (took 0.027566946 seconds)
  (3/3) benchmarking 20...
  done (took 0.026924256 seconds)
done (took 0.707719624 seconds)
(1/3) benchmarking 10...
done (took 0.319668965 seconds)
(2/3) benchmarking 5...
done (took 0.283831007 seconds)
(3/3) benchmarking 20...
done (took 0.311037378 seconds)
(1/3) benchmarking 10...
done (took 0.387711126 seconds)
(2/3) benchmarking 5...
done (took 0.383052612 seconds)
(3/3) benchmarking 20...
done (took 0.309351218 seconds)
(1/3) benchmarking 10...
done (took 0.019456359 seconds)
(2/3) benchmarking 5...
done (took 0.019468519 seconds)
(3/3) benchmarking 20...
done (took 0.01696833 seconds)
done (took 112.08826197 seconds)
Testing serialization...done (took 9.269887739 seconds)
INFO: BenchmarkTools tests passed

>>> End of log
