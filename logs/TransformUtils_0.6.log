>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.5
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.0-pre.alpha.33
Commit be03a06 (2017-03-03 04:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (899.3359375 MB free)
Uptime: 33468.0 sec
Load Avg:  1.04541015625  1.0146484375  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1874349 s        104 s     164374 s     923083 s        147 s
#2  3501 MHz     591742 s       6296 s      82664 s    2563565 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - TransformUtils                0.0.5
1 additional packages:
 - Compat                        0.19.0
INFO: Testing TransformUtils

WARNING: deprecated syntax "typealias FloatInt Union{Float64,Int}" at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:77.
Use "const FloatInt = Union{Float64,Int}" instead.

WARNING: deprecated syntax "typealias VectorFloatInt Union{Vector{Float64},Vector{Int}}" at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:78.
Use "const VectorFloatInt = Union{Vector{Float64},Vector{Int}}" instead.

WARNING: deprecated syntax "typealias AxisAngle AngleAxis" at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:97.
Use "const AxisAngle = AngleAxis" instead.

WARNING: deprecated syntax "typealias FloatInt Union{Float64,Int}" at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:77.
Use "const FloatInt = Union{Float64,Int}" instead.

WARNING: deprecated syntax "typealias VectorFloatInt Union{Vector{Float64},Vector{Int}}" at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:78.
Use "const VectorFloatInt = Union{Vector{Float64},Vector{Int}}" instead.

WARNING: deprecated syntax "typealias AxisAngle AngleAxis" at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:97.
Use "const AxisAngle = AngleAxis" instead.
WARNING: Method definition *(TransformUtils.SO3, TransformUtils.so3) in module TransformUtils at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:202 overwritten at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:229.
WARNING: Method definition *(TransformUtils.so3, TransformUtils.SO3) in module TransformUtils at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:205 overwritten at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:230.
WARNING: Method definition compare(TransformUtils.SE3, TransformUtils.SE3) in module TransformUtils at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:259 overwritten at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:272.
WARNING: Method definition #compare(Array{Any, 1}, TransformUtils.#compare, TransformUtils.SE3, TransformUtils.SE3) in module TransformUtils overwritten.
WARNING: Method definition *(TransformUtils.SO3, TransformUtils.so3) in module TransformUtils at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:229 overwritten at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:202.
WARNING: Method definition *(TransformUtils.so3, TransformUtils.SO3) in module TransformUtils at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:230 overwritten at /home/vagrant/.julia/v0.6/TransformUtils/src/TransformUtils.jl:205.
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483, [1.0, 0.0, 0.0])
dAA = TransformUtils.so3([0.0 -0.0234589 0.0756572; 0.0234589 0.0 -0.034031; -0.0756572 0.034031 0.0])
dAA = TransformUtils.so3([0.0 -0.0568227 0.154759; 0.0568227 0.0 -0.044152; -0.154759 0.044152 0.0])
dAA = TransformUtils.so3([0.0 0.02824 0.0337764; -0.02824 0.0 -0.0262582; -0.0337764 0.0262582 0.0])
dAA = TransformUtils.Quaternion(0.9953523920940838, [0.0413593, -0.0631925, 0.0597472])
dAA = TransformUtils.SO3([0.996983 0.0121264 0.0766721; -0.0181778 0.99673 0.0787277; -0.0754667 -0.0798839 0.993943])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
[TEST] SE3 ⊕ and ⊖ mechanics... Compare operations on two different SE3 transforms
xi = TransformUtils.SE3(TransformUtils.SO3([0.971623 -0.230794 0.051795; 0.231542 0.883282 -0.407678; 0.04834 0.408102 0.911655]), [-0.544786, -0.156686, 1.11097])
xj = TransformUtils.SE3(TransformUtils.SO3([0.983032 0.106324 -0.149477; -0.0765315 0.978296 0.192563; 0.166707 -0.177856 0.969833]), [-0.709496, 0.451372, -1.4998])
Dx = TransformUtils.SE3(TransformUtils.SO3([0.945475 0.321226 -0.0537671; -0.226443 0.766988 0.600377; 0.234096 -0.555466 0.797908]), [-0.14545, -0.490363, -2.63655])
[SUCCESS]
[TEST] previous discovered issues
TransformUtils.convert(Euler, q) = TransformUtils.Euler(0.7853981633974484, 0.0, 1.5707963267948963, TransformUtils.Quaternion(1.0, [0.0, 0.0, 0.0]))
INFO: TransformUtils tests passed

>>> End of log
