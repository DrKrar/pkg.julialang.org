>>> 'Pkg.add("TransformUtils")' log
INFO: Installing TransformUtils v0.0.3
INFO: Package database updated

>>> 'Pkg.test("TransformUtils")' log
Julia Version 0.6.0-dev.1583
Commit 2d8f5bf (2016-12-16 01:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (382.546875 MB free)
Uptime: 27905.0 sec
Load Avg:  1.11474609375  1.0029296875  0.97216796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1596806 s         99 s     228068 s     661044 s         89 s
#2  3499 MHz     524313 s       6261 s     100616 s    2073671 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - TransformUtils                0.0.3
1 additional packages:
 - Compat                        0.9.5
INFO: Testing TransformUtils
[TEST] constructors SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] comparison functions for SO3, Quaternion, AngleAxis... [SUCCESS]
[TEST] trivial case quaterion -> SO3 -> Euler -> quaternion... [SUCCESS]
[TEST] convert functions 
WARNING: Need better coverage on convert function tests
[TEST] compare SO3 and quaternion rotations... dAA = TransformUtils.AngleAxis(0.7853981633974483,[1.0,0.0,0.0])
dAA = TransformUtils.so3([0.0 0.00222224 0.104834; -0.00222224 0.0 -0.0531713; -0.104834 0.0531713 0.0])
dAA = TransformUtils.so3([0.0 0.0332968 -0.000516894; -0.0332968 0.0 0.00753818; 0.000516894 -0.00753818 0.0])
dAA = TransformUtils.so3([0.0 -0.0808251 0.0225248; 0.0808251 0.0 0.0872769; -0.0225248 -0.0872769 0.0])
dAA = TransformUtils.Quaternion(0.9990498432829805,[-0.0338244,-0.00755495,-0.0264243])
dAA = TransformUtils.SO3([0.998196 -0.0244519 -0.0548349; 0.0274065 0.998176 0.0537927; 0.0534195 -0.0551985 0.997045])
[SUCCESS]
[TEST] basic SE3 mechanics... [SUCCESS]
INFO: TransformUtils tests passed

>>> End of log
