>>> 'Pkg.add("DeferredFutures")' log
INFO: Cloning cache of DeferredFutures from https://github.com/invenia/DeferredFutures.jl.git
INFO: Installing DeferredFutures v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DeferredFutures
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DeferredFutures")' log
Julia Version 0.5.0-dev+5179
Commit fa5af23* (2016-07-06 00:27 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing DeferredFutures
Test Summary: | Pass  Total
  Distributed |    8      8
Test Summary: | Pass  Total
  Allocation  |    2      2
Transfer: Error During Test
  Got an exception of type RemoteException outside of a @test
  On worker 5:
  On worker 5:
  OutOfMemoryError()
   in read at ./io.jl:225
   in deserialize_array at ./serialize.jl:688
   in handle_deserialize at ./serialize.jl:557
   in deserialize_msg at ./multi.jl:120
   in message_handler_loop at ./multi.jl:1086
   in process_tcp_streams at ./multi.jl:1057
   in #318 at ./event.jl:46
   in #remotecall_fetch#310 at ./multi.jl:901
   in remotecall_fetch at ./multi.jl:895
   in #remotecall_fetch#311 at ./multi.jl:904
   in call_on_owner at ./multi.jl:947 [inlined]
   in fetch at ./multi.jl:979
   in #18 at /home/vagrant/.julia/v0.5/DeferredFutures/test/runtests.jl:85
   in #325 at ./multi.jl:1190
   in run_work_thunk at ./multi.jl:841
   in macro expansion at ./multi.jl:1190 [inlined]
   in #324 at ./event.jl:46
   in #remotecall_fetch#310(::Array{Any,1}, ::Function, ::Function, ::Base.Worker, ::DeferredFutures.DeferredFuture, ::Vararg{DeferredFutures.DeferredFuture,N}) at ./multi.jl:901
   in remotecall_fetch(::Function, ::Base.Worker, ::DeferredFutures.DeferredFuture, ::Vararg{DeferredFutures.DeferredFuture,N}) at ./multi.jl:895
   in #remotecall_fetch#311(::Array{Any,1}, ::Function, ::Function, ::Int64, ::DeferredFutures.DeferredFuture, ::Vararg{DeferredFutures.DeferredFuture,N}) at ./multi.jl:904
   in remotecall_fetch(::Function, ::Int64, ::DeferredFutures.DeferredFuture, ::Vararg{DeferredFutures.DeferredFuture,N}) at ./multi.jl:904
   in macro expansion; at /home/vagrant/.julia/v0.5/DeferredFutures/test/runtests.jl:82 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
Test Summary: | Error  Total
  Transfer    |     1      1
ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:495
 in macro expansion; at ./test.jl:679 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/DeferredFutures/test/runtests.jl, in expression starting on line 63
===========================[ ERROR: DeferredFutures ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/DeferredFutures/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: DeferredFutures had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
