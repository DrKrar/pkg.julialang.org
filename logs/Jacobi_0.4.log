>>> 'Pkg.add("Jacobi")' log
INFO: Cloning cache of Jacobi from git://github.com/pjabardo/Jacobi.jl.git
INFO: Installing Jacobi v0.3.0
INFO: Installing Polynomials v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Jacobi
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Jacobi")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2081.16796875 MB free)
Uptime: 41533.0 sec
Load Avg:  0.97509765625  1.06787109375  1.05810546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2017892 s       6762 s     165356 s    1540017 s        180 s
#2  3500 MHz    1392544 s         76 s     145018 s    2455041 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - Jacobi                        0.3.0
2 additional packages:
 - Compat                        0.19.0
 - Polynomials                   0.1.2
INFO: Testing Jacobi
ERROR: LoadError: LoadError: MethodError: `convert` has no method matching convert(::Type{Polynomials.Poly{Int64}}, ::Array{Int64,1}, ::Symbol)
This may have arisen from a call to the constructor Polynomials.Poly{Int64}(...),
since type constructors fall back to convert methods.
Closest candidates are:
  convert{T,S<:Number,n}(::Type{Polynomials.Poly{T}}, ::Array{S<:Number,n})
  call{T}(::Type{T}, ::Any)
  convert{T}(::Type{Polynomials.Poly{T}}, !Matched::Polynomials.Poly{T})
  ...
 in poly_chebyshev at /home/vagrant/.julia/v0.4/Jacobi/src/polynomials.jl:18
 in poly_chebyshev at /home/vagrant/.julia/v0.4/Jacobi/src/polynomials.jl:12
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Jacobi/test/testjacobi.jl, in expression starting on line 154
while loading /home/vagrant/.julia/v0.4/Jacobi/test/runtests.jl, in expression starting on line 3
===============================[ ERROR: Jacobi ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Jacobi/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Jacobi had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
