>>> 'Pkg.add("AmplNLWriter")' log
INFO: Installing AmplNLWriter v0.2.2
INFO: Installing MathProgBase v0.5.6
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of AmplNLWriter
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("AmplNLWriter")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (355.71875 MB free)
Uptime: 38277.0 sec
Load Avg:  0.97607421875  0.638671875  0.30908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz    1118436 s         51 s     156216 s    2127069 s        176 s
#2  3501 MHz     335736 s        194 s      83726 s    3181490 s         10 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
6 required packages:
 - AmplNLWriter                  0.2.2
 - ColorSchemes                  1.0.0
 - ColorTypes                    0.2.6
 - ColorVectorSpace              0.1.8
 - Compat                        0.9.2
 - JSON                          0.7.0
19 additional packages:
 - BinDeps                       0.4.5
 - Clustering                    0.6.0
 - Colors                        0.6.7
 - Distances                     0.3.2
 - FileIO                        0.1.2
 - FixedPointNumbers             0.1.6
 - Graphics                      0.1.3
 - ImageMagick                   0.1.7
 - Images                        0.5.10
 - MathProgBase                  0.5.6
 - Reexport                      0.0.3
 - Rmath                         0.1.3
 - SHA                           0.2.1
 - SIUnits                       0.0.6
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.1
 - TexExtensions                 0.0.3
 - URIParser                     0.1.6
 - Zlib                          0.1.12
INFO: Computing test dependencies for AmplNLWriter...
INFO: Installing Calculus v0.1.15
INFO: Installing Cbc v0.2.4
INFO: Installing Clp v0.2.2
INFO: Installing CoinOptServices v0.1.2
INFO: Installing DataStructures v0.4.6
INFO: Installing FactCheck v0.4.3
INFO: Installing ForwardDiff v0.2.5
INFO: Installing Ipopt v0.2.4
INFO: Installing JuMP v0.14.1
INFO: Installing Lazy v0.11.0
INFO: Installing LightXML v0.4.0
INFO: Installing MacroTools v0.3.2
INFO: Installing NaNMath v0.2.1
INFO: Installing ReverseDiffSparse v0.5.8
INFO: Building Cbc
INFO: Building Ipopt
INFO: Building LightXML
INFO: Building CoinOptServices
WARNING: `@windows_only` is deprecated, use `@static if is_windows()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @windows_only(::Any) at ./deprecated.jl:488
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CoinOptServices/deps/build.jl, in expression starting on line 11
WARNING: Method definition @checked_lib(ANY<:Any, ANY<:Any) in module __anon__ at /home/vagrant/.julia/v0.5/Cbc/deps/deps.jl:7 overwritten at /home/vagrant/.julia/v0.5/Ipopt/deps/deps.jl:7.
INFO: Testing AmplNLWriter
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:19
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:19
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:28
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:91
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:91
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:91
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:91
WARNING: Method definition (::Type{AmplNLWriter.AmplNLSolver})(AbstractString) in module AmplNLWriter at /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:33 overwritten at /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:41.
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:38
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:38
WARNING: Method definition Type(Array{Any, 1}, Type{AmplNLWriter.AmplNLSolver}, AbstractString) in module AmplNLWriter overwritten.
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:38
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:61
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/src/AmplNLWriter.jl:61
[nl_convert] check special conversion cases
31 facts verified.
[nl_convert] check numeric values
2 facts verified.
[nl_convert] check unary, binary and n-ary plus
3 facts verified.
[nl_convert] check unary, binary and n-ary minus
3 facts verified.
[nl_convert] check n-ary multiplication
1 fact verified.
[nl_convert] check comparison expansion
2 facts verified.
[nl_linearity] check simplification of formulae
  > ifelse
6 facts verified.
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
[nl_write] Temp file handling
  > all temp files deleted successfully
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/AmplNLWriter/test/nl_write.jl:1
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: 
Cbc3007W No integer variables - nothing to do

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 0        2 0.000273
Cbc3007W No integer variables - nothing to do

 	"Finished"
  > temp files present after solve in debug mode
  > temp files used custom name
4 facts verified.
[examples] test solver ipopt
  > example: jump_nltrig
Ipopt 3.12.1: print_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

WARNING: Nonlinear solver does not provide dual solutions
Ipopt 3.12.1: print_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

  > example: jump_nlexpr
Ipopt 3.12.1: print_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

  > example: maxmin
Ipopt 3.12.1: print_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

  > example: minmax
Ipopt 3.12.1: print_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

20 facts verified.
[examples] test solver bonmin
  > example: jump_nltrig
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > example: jump_nlexpr
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > example: jump_pruning
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > example: jump_minlp
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > example: jump_nonlinearbinary
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
23 facts verified.
[examples] test solver couenne
  > example: jump_nltrig
Couenne 0.5.4 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: bonmin.nlp_log_level=0
bonmin.bb_log_level=0

ANALYSIS TEST: Couenne: new cutoff value 6.8412456930e+00 (0.012087 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1.0348962e-23        4 0.002972
Couenne: new cutoff value 1.0348962135e-23 (0.016233 seconds)
Loaded instance "/home/vagrant/.julia/v0.5/AmplNLWriter/.solverdata/tmpLZPHlr.nl"
Constraints:            0
Variables:              2 (0 integer)
Auxiliaries:           11 (0 integer)

Coin0506I Presolve 9 (-4) rows, 5 (-8) columns and 19 (-10) elements
Clp0006I 0  Obj 0 Primal inf 0.000346 (4)
Clp0006I 4  Obj -1e-22
Clp0000I Optimal - objective value 0
Clp0032I Optimal objective 0 - 4 iterations time 0.002, Presolve 0.00
Clp0006I 0  Obj 0 Primal inf 0.0011913716 (2)
Clp0006I 2  Obj -2.0444136e-22
Clp0000I Optimal - objective value 0
Cbc0012I Integer solution of 1.0348962e-23 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
NLP Heuristic: NLP0014I             2         OPT 1        0 0
no solution.
Clp0001I Primal infeasible - objective value 0
Clp0001I Primal infeasible - objective value 0
Clp0006I 0  Obj 0
Clp0000I Optimal - objective value 0
Cbc0001I Search completed - best objective 1.034896213525877e-23, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Clp0006I 0  Obj 0 Primal inf 0.0049998 (2)
Clp0006I 2  Obj 0
Clp0000I Optimal - objective value 0

 	"Finished"

Linearization cuts added at root node:         13
Linearization cuts added in total:             13  (separation time: 0s)
Total solve time:                               0s (0s in branch-and-bound)
Lower bound:                           1.0349e-23
Upper bound:                           1.0349e-23  (gap: 0.00%)
Branch-and-bound nodes:                         0
Performance of                           FBBT:	   0.000336s,        3 runs. fix:          0 shrnk:    23.8959 ubd:          0 2ubd:          4 infeas:          0
Couenne 0.5.4 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: bonmin.nlp_log_level=0
bonmin.bb_log_level=0

ANALYSIS TEST: Couenne: new cutoff value 6.8412456930e+00 (0.007177 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1.0348962e-23        4 0
Couenne: new cutoff value 1.0348962135e-23 (0.007177 seconds)
Loaded instance "/home/vagrant/.julia/v0.5/AmplNLWriter/.solverdata/tmp6Y3Mzk.nl"
Constraints:            0
Variables:              2 (0 integer)
Auxiliaries:           11 (0 integer)

Coin0506I Presolve 9 (-4) rows, 5 (-8) columns and 19 (-10) elements
Clp0006I 0  Obj 0 Primal inf 0.000346 (4)
Clp0006I 4  Obj -1e-22
Clp0000I Optimal - objective value 0
Clp0032I Optimal objective 0 - 4 iterations time 0.002, Presolve 0.00
Clp0006I 0  Obj 0 Primal inf 0.0011913716 (2)
Clp0006I 2  Obj -2.0444136e-22
Clp0000I Optimal - objective value 0
Cbc0012I Integer solution of 1.0348962e-23 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
NLP Heuristic: NLP0014I             2         OPT 1        0 0
no solution.
Clp0001I Primal infeasible - objective value 0
Clp0001I Primal infeasible - objective value 0
Clp0006I 0  Obj 0
Clp0000I Optimal - objective value 0
Cbc0001I Search completed - best objective 1.034896213525877e-23, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Clp0006I 0  Obj 0 Primal inf 0.0049998 (2)
Clp0006I 2  Obj 0
Clp0000I Optimal - objective value 0

 	"Finished"

Linearization cuts added at root node:         13
Linearization cuts added in total:             13  (separation time: 0s)
Total solve time:                        0.002164s (0.002164s in branch-and-bound)
Lower bound:                           1.0349e-23
Upper bound:                           1.0349e-23  (gap: 0.00%)
Branch-and-bound nodes:                         0
  > example: jump_nlexpr
Couenne 0.5.4 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: bonmin.nlp_log_level=0
bonmin.bb_log_level=0

ANALYSIS TEST: Couenne: new cutoff value 0.0000000000e+00 (0.007756 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT -1.999e-08        4 0.001593
Loaded instance "/home/vagrant/.julia/v0.5/AmplNLWriter/.solverdata/tmpcFLT5e.nl"
Constraints:            0
Variables:             30 (0 integer)
Auxiliaries:           35 (0 integer)

Coin0506I Presolve 130 (-3) rows, 63 (-2) columns and 294 (-6) elements
Clp0006I 0  Obj 0 Primal inf 0.032926858 (58)
Clp0006I 46  Obj 1.3713734e-20 Primal inf 0.030318634 (19)
Clp0006I 63  Obj 2.8905381e-17
Clp0000I Optimal - objective value 0
Clp0032I Optimal objective 0 - 63 iterations time 0.002, Presolve 0.00
Clp0006I 0  Obj 0 Primal inf 7.0611562e-05 (1)
Clp0006I 3  Obj 1.4141214e-18
Clp0000I Optimal - objective value 0
NLP Heuristic: NLP0014I             2         OPT -1.998999e-08        3 0
no solution.
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.00 seconds)
Clp0000I Optimal - objective value 3.9065426e-07
Clp0006I 0  Obj 0 Primal inf 3.4111942e-05 (1)
Clp0006I 1  Obj -1.1403981e-23
Clp0000I Optimal - objective value 0
Optimality Based BT: 0 improved bounds
Cbc0004I Integer solution of 0 found after 97 iterations and 2 nodes (0.01 seconds)
Cbc0001I Search completed - best objective 0, took 97 iterations and 2 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        133
Linearization cuts added in total:            133  (separation time: 0s)
Total solve time:                        0.010121s (0.010121s in branch-and-bound)
Lower bound:                                    0
Upper bound:                                    0  (gap: 0.00%)
Branch-and-bound nodes:                         2
Performance of                           FBBT:	    4.5e-05s,        5 runs. fix:          0 shrnk:    130.951 ubd:          0 2ubd:          0 infeas:          0
  > example: jump_pruning
Couenne 0.5.4 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: bonmin.nlp_log_level=0
bonmin.bb_log_level=0

ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT -400.00001       22 0.006125
Couenne: new cutoff value -4.0000000800e+02 (0.011816 seconds)
Loaded instance "/home/vagrant/.julia/v0.5/AmplNLWriter/.solverdata/tmpSO5tmb.nl"
Constraints:            9
Variables:              2 (0 integer)
Auxiliaries:            9 (0 integer)

Coin0506I Presolve 24 (-2) rows, 6 (-5) columns and 59 (-9) elements
Clp0006I 0  Obj -399.99001 Primal inf 40.312967 (4) Dual inf 58.942108 (1)
Clp0006I 8  Obj -197487.48
Clp0000I Optimal - objective value -197487.48
Clp0032I Optimal objective -197487.4793 - 8 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value -197487.48
Cbc0012I Integer solution of -400.00001 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
NLP Heuristic: NLP0014I             2         OPT -400.00001       18 0.004037
no solution.
Clp0000I Optimal - objective value -197487.48
Optimality Based BT: 8 improved bounds
Probing: 6 improved bounds
NLP Heuristic: no solution.
Cbc0031I 5 added rows had average density of 2.6
Cbc0013I At root node, 5 cuts changed objective from -197487.48 to -605.79226 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 22 row cuts average 2.9 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, -400.00001 best solution, best possible -605.79226 (0.01 seconds)
Optimality Based BT: 5 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 9 improved bounds
Optimality Based BT: 8 improved bounds
Optimality Based BT: 7 improved bounds
Couenne: new cutoff value -4.0000443878e+02 (0.061333 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 7 improved bounds
Couenne: new cutoff value -4.0000579768e+02 (0.07722 seconds)
Optimality Based BT: 7 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 7 improved bounds
Cbc0010I After 100 nodes, 43 on tree, -400.00001 best solution, best possible -403.86423 (0.07 seconds)
Couenne: new cutoff value -4.0000833861e+02 (0.085066 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 7 improved bounds
Cbc0010I After 200 nodes, 81 on tree, -400.00001 best solution, best possible -401.0193 (0.10 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 7 improved bounds
Cbc0010I After 300 nodes, 114 on tree, -400.00001 best solution, best possible -400.36498 (0.10 seconds)
Couenne: new cutoff value -4.0000834212e+02 (0.117058 seconds)
Optimality Based BT: 7 improved bounds
Optimality Based BT: 7 improved bounds
Cbc0010I After 400 nodes, 143 on tree, -400.00001 best solution, best possible -400.16089 (0.12 seconds)
Cbc0010I After 500 nodes, 180 on tree, -400.00001 best solution, best possible -400.13107 (0.12 seconds)
Optimality Based BT: 2 improved bounds
Cbc0010I After 600 nodes, 217 on tree, -400.00001 best solution, best possible -400.10325 (0.13 seconds)
Optimality Based BT: 6 improved bounds
Cbc0010I After 700 nodes, 253 on tree, -400.00001 best solution, best possible -400.06926 (0.16 seconds)
Cbc0010I After 800 nodes, 288 on tree, -400.00001 best solution, best possible -400.04891 (0.17 seconds)
Optimality Based BT: 6 improved bounds
Cbc0010I After 900 nodes, 322 on tree, -400.00001 best solution, best possible -400.04416 (0.18 seconds)
Cbc0010I After 1000 nodes, 357 on tree, -400.00001 best solution, best possible -400.04033 (0.18 seconds)
Cbc0010I After 1100 nodes, 385 on tree, -400.00001 best solution, best possible -400.03643 (0.18 seconds)
Cbc0011I Exiting as integer gap of 0.036426126 less than 0 or 0.01%
Cbc0001I Search completed - best objective -400.0000080003506, took 3542 iterations and 1101 nodes (0.19 seconds)
Cbc0035I Maximum depth 16, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:         26
Linearization cuts added in total:             26  (separation time: 0s)
Total solve time:                        0.187138s (0.187138s in branch-and-bound)
Lower bound:                             -400.036
Upper bound:                             -400.008  (gap: 0.01%)
Branch-and-bound nodes:                      1101
Performance of                           FBBT:	   0.001687s,     1515 runs. fix:          0 shrnk:  0.0497673 ubd:  0.0240272 2ubd:          0 infeas:          5
  > example: jump_minlp
Couenne 0.5.4 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: bonmin.nlp_log_level=0
bonmin.bb_log_level=0

ANALYSIS TEST: Couenne: new cutoff value 1.8000000000e+01 (0.010465 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 0.75928418        9 0.006149
NLP0014I             2      INFEAS 0.99999999       14 0.011014
Loaded instance "/home/vagrant/.julia/v0.5/AmplNLWriter/.solverdata/tmpUlft9a.nl"
Constraints:            6
Variables:              6 (3 integer)
Auxiliaries:            8 (1 integer)

Coin0506I Presolve 20 (-4) rows, 10 (-4) columns and 52 (-8) elements
Clp0006I 0  Obj 18.0019 Primal inf 4.1932653 (3) Dual inf 4.5052812 (1)
Clp0006I 13  Obj 0.50999604
Clp0000I Optimal - objective value 0.50999604
Clp0032I Optimal objective 0.5099960377 - 13 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 0.50999604
NLP Heuristic: NLP0014I             3         OPT 9.9999997       13 0
Couenne: new cutoff value 9.9999997410e+00 (0.029472 seconds)
solution found, obj. 10
Cbc0012I Integer solution of 9.9999997 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
Clp0000I Optimal - objective value 0.50999604
Optimality Based BT: Couenne: new cutoff value 7.9066440576e+00 (0.029472 seconds)
3 improved bounds
Probing: 0 improved bounds
NLP Heuristic: Couenne: new cutoff value 6.3653774323e+00 (0.029472 seconds)
Couenne: new cutoff value 6.0097589010e+00 (0.031795 seconds)
solution found, obj. 6.00976
Cbc0012I Integer solution of 6.0097589 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
Cbc0013I At root node, 0 cuts changed objective from 0.50999604 to 0.50999604 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 6.0097589 best solution, best possible 0.50999604 (0.00 seconds)
Optimality Based BT: 7 improved bounds
Cbc0001I Search completed - best objective 6.009758900992955, took 13 iterations and 2 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:         24
Linearization cuts added in total:             24  (separation time: 4.7e-05s)
Total solve time:                        0.003189s (0.003189s in branch-and-bound)
Lower bound:                              6.00976
Upper bound:                              6.00976  (gap: 0.00%)
Branch-and-bound nodes:                         2
Performance of                           FBBT:	    7.6e-05s,        6 runs. fix:          0 shrnk:    3.87565 ubd:          0 2ubd:          0 infeas:          0
  > example: jump_nonlinearbinary
Couenne 0.5.4 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: bonmin.nlp_log_level=0
bonmin.bb_log_level=0

ANALYSIS TEST: Couenne: new cutoff value 7.2500000000e+00 (0 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 7.25        0 0
Loaded instance "/home/vagrant/.julia/v0.5/AmplNLWriter/.solverdata/tmpi1rKOb.nl"
Constraints:            0
Variables:              2 (2 integer)
Auxiliaries:            7 (2 integer)

Coin0506I Presolve 0 (-7) rows, 0 (-9) columns and 0 (-12) elements
Clp0000I Optimal - objective value 7.25
Clp0032I Optimal objective 7.25 - 0 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 7.25
NLP Heuristic: NLP0014I             2         OPT 7.25        0 0
no solution.
Cbc0004I Integer solution of 7.25 found after 0 iterations and 0 nodes (0.00 seconds)
Cbc0001I Search completed - best objective 7.25, took 0 iterations and 0 nodes (0.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Clp0000I Optimal - objective value 7.25

 	"Finished"

Linearization cuts added at root node:          7
Linearization cuts added in total:              7  (separation time: 0s)
Total solve time:                               0s (0s in branch-and-bound)
Lower bound:                                 7.25
Upper bound:                                 7.25  (gap: 0.00%)
Branch-and-bound nodes:                         0
23 facts verified.
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:49
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:102
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:107
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:128
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:128
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/solvers.jl:128
[nonlinear] Test getvalue on arrays
5 facts verified.
[nonlinear] Test HS071 solves correctly
  > With solver Ipopt.IpoptSolver

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

  > With solver CoinOptServices.OsilSolver
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:38
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in write_osol_file(::String, ::Array{Float64,1}, ::Array{Dict,1}) at /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:394
 in optimize!(::CoinOptServices.OsilMathProgModel) at /home/vagrant/.julia/v0.5/CoinOptServices/src/CoinOptServices.jl:557
 in optimize!(::CoinOptServices.OsilNonlinearModel) at /home/vagrant/.julia/v0.5/CoinOptServices/src/probmod.jl:409
 in #solvenlp#139(::Bool, ::Function, ::JuMP.Model, ::JuMP.ProblemTraits) at /home/vagrant/.julia/v0.5/JuMP/src/nlp.jl:1246
 in (::JuMP.#kw##solvenlp)(::Array{Any,1}, ::JuMP.#solvenlp, ::JuMP.Model, ::JuMP.ProblemTraits) at ./<missing>:0
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.5/JuMP/src/solvers.jl:138
 in (::##436#444)() at /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:56
 in context(::##436#444, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::##435#443)() at /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl:40
 in facts(::##435#443, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/JuMP/test/nonlinear.jl, in expression starting on line 38

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
9 facts verified.
[nonlinear] Test HS071 solves correctly (no macros)
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
9 facts verified.
[nonlinear] Test HS071 solves correctly, epigraph
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
6 facts verified.
[nonlinear] Test ifelse
  > With solver Ipopt.IpoptSolver
  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
4 facts verified.
[nonlinear] Accepting fixed variables
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true




  > With solver CoinOptServices.OsilSolver, simplify = false




  > With solver AmplNLWriter.AmplNLSolver, simplify = true
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > With solver AmplNLWriter.AmplNLSolver, simplify = false
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
24 facts verified.
[nonlinear] Test QP solve through NL pathway
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver


  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
24 facts verified.
[nonlinear] Test quad con solve through NL pathway
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
9 facts verified.
[nonlinear] Test resolve with parameter
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true


  > With solver CoinOptServices.OsilSolver, simplify = false


  > With solver AmplNLWriter.AmplNLSolver, simplify = true
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > With solver AmplNLWriter.AmplNLSolver, simplify = false
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
24 facts verified.
[nonlinear] Test two-sided nonlinear constraints
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver


  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
12 facts verified.
[nonlinear] Test two-sided nonlinear constraints (no macros)
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver


  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
12 facts verified.
[nonlinear] Quadratic equality constraints
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
6 facts verified.
[nonlinear] Test mixed integer nonlinear problems
  > With solver CoinOptServices.OsilSolver

  > With solver CoinOptServices.OsilSolver

Couenne: new cutoff value 1.0000000000e+01 (0.007027 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 0.75928418        9 0.008304
NLP0014I             2      INFEAS 0.99999999       14 0.008
Coin0506I Presolve 20 (-2) rows, 10 (-7) columns and 53 (-8) elements
Clp0006I 0  Obj 10.0011 Primal inf 2.4306479 (3) Dual inf 19.199999 (1)
Clp0006I 12  Obj 0.50999604
Clp0000I Optimal - objective value 0.50999604
Clp0032I Optimal objective 0.5099960377 - 12 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 0.50999604
NLP Heuristic: NLP0014I             3         OPT 9.9999997       13 0.002231
Couenne: new cutoff value 9.9999997410e+00 (0.028086 seconds)
solution found, obj. 10
Clp0000I Optimal - objective value 0.50999604
Optimality Based BT: Couenne: new cutoff value 8.2249788040e+00 (0.02999 seconds)
Couenne: new cutoff value 7.9066440576e+00 (0.02999 seconds)
5 improved bounds
Probing: 0 improved bounds
NLP Heuristic: Couenne: new cutoff value 6.0097589010e+00 (0.04371 seconds)
solution found, obj. 6.00976
Optimality Based BT: 8 improved bounds
  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > With solver AmplNLWriter.AmplNLSolver
Couenne 0.5.4 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.8000000000e+01 (0 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 0.75928418        9 0.003985
NLP0014I             2      INFEAS 0.99999999       14 0.000789
Loaded instance "/home/vagrant/.julia/v0.5/AmplNLWriter/.solverdata/tmpkd5Wvr.nl"
Constraints:            6
Variables:              6 (3 integer)
Auxiliaries:            8 (1 integer)

Coin0506I Presolve 20 (-4) rows, 10 (-4) columns and 52 (-8) elements
Clp0006I 0  Obj 18.0019 Primal inf 4.1932653 (3) Dual inf 4.5052812 (1)
Clp0006I 13  Obj 0.50999604
Clp0000I Optimal - objective value 0.50999604
Clp0032I Optimal objective 0.5099960377 - 13 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 0.50999604
NLP Heuristic: NLP0014I             3         OPT 9.9999997       13 0.004
Couenne: new cutoff value 9.9999997410e+00 (0.008774 seconds)
solution found, obj. 10
Cbc0012I Integer solution of 9.9999997 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
Clp0000I Optimal - objective value 0.50999604
Optimality Based BT: Couenne: new cutoff value 7.9066440576e+00 (0.008774 seconds)
3 improved bounds
Probing: 0 improved bounds
NLP Heuristic: Couenne: new cutoff value 6.3653774323e+00 (0.012737 seconds)
Couenne: new cutoff value 6.0097589010e+00 (0.017022 seconds)
solution found, obj. 6.00976
Cbc0012I Integer solution of 6.0097589 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.01 seconds)
Cbc0013I At root node, 0 cuts changed objective from 0.50999604 to 0.50999604 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 6.0097589 best solution, best possible 0.50999604 (0.01 seconds)
Optimality Based BT: 7 improved bounds
Cbc0001I Search completed - best objective 6.009758900992955, took 13 iterations and 2 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:         24
Linearization cuts added in total:             24  (separation time: 0s)
Total solve time:                         0.01531s (0.01531s in branch-and-bound)
Lower bound:                              6.00976
Upper bound:                              6.00976  (gap: 0.00%)
Branch-and-bound nodes:                         2
16 facts verified.
[nonlinear] Test continuous relaxation of minlp test problem
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
15 facts verified.
[nonlinear] Test maximization objective
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
9 facts verified.
[nonlinear] Test maximization objective (embedded expressions)
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true

  > With solver CoinOptServices.OsilSolver, simplify = false

  > With solver AmplNLWriter.AmplNLSolver, simplify = true
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
  > With solver AmplNLWriter.AmplNLSolver, simplify = false
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
30 facts verified.
[nonlinear] Test infeasibility detection
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
3 facts verified.
[nonlinear] Test unboundedness detection
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
3 facts verified.
[nonlinear] Test entropy maximization
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
6 facts verified.
[nonlinear] Test entropy maximization (reformulation)
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
12 facts verified.
[nonlinear] Test derivatives of x^4, x < 0
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
6 facts verified.
[nonlinear] Test nonlinear duals
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true

  > With solver CoinOptServices.OsilSolver, simplify = false

76 facts verified.
[nonlinear] Test nonlinear duals (Max)
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

38 facts verified.
[nonlinear] Test changing objectives
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver


  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
24 facts verified.
[nonlinear] Test Hessian chunking code
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver AmplNLWriter.AmplNLSolver
Bonmin 1.8.2 using Cbc 2.9.8 and Ipopt 3.12.1
bonmin: bonmin.nlp_log_level=0
bonmin.bb_log_level=0


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************


 	"Finished"
6 facts verified.
[nonlinear] Test NL MPB interface (-1.0 * x[1] + 1.0 * x[2])
11 facts verified.
[nonlinear] Test NL MPB interface (x[1] ^ x[2])
11 facts verified.
[nonlinear] Expression graph for linear problem
1 fact verified.
[nonlinear] Expression graph for ifelse
1 fact verified.
[nonlinear] Expression graphs for corner cases
2 facts verified.
[nonlinear] Hessians through MPB
3 facts verified.
[nonlinear] Hess-vec through MPB
1 fact verified.
[nonlinear] NaN corner case (#695)
1 fact verified.
[nonlinear] Error on NLP resolve
2 facts verified.
[nonlinear] User-defined functions
10 facts verified.
INFO: AmplNLWriter tests passed
INFO: Removing Calculus v0.1.15
INFO: Removing Cbc v0.2.4
INFO: Removing Clp v0.2.2
INFO: Removing CoinOptServices v0.1.2
INFO: Removing DataStructures v0.4.6
INFO: Removing FactCheck v0.4.3
INFO: Removing ForwardDiff v0.2.5
INFO: Removing Ipopt v0.2.4
INFO: Removing JuMP v0.14.1
INFO: Removing Lazy v0.11.0
INFO: Removing LightXML v0.4.0
INFO: Removing MacroTools v0.3.2
INFO: Removing NaNMath v0.2.1
INFO: Removing ReverseDiffSparse v0.5.8

>>> End of log
