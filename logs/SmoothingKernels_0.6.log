>>> 'Pkg.add("SmoothingKernels")' log
INFO: Cloning cache of SmoothingKernels from https://github.com/johnmyleswhite/SmoothingKernels.jl.git
INFO: Installing SmoothingKernels v0.0.0
INFO: Installing StatsBase v0.11.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SmoothingKernels
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SmoothingKernels")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1577.03125 MB free)
Uptime: 21373.0 sec
Load Avg:  0.9853515625  0.9775390625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz    1150403 s       4413 s     127607 s     607140 s        159 s
#2  3507 MHz     434870 s       3859 s      74209 s    1537590 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - SmoothingKernels              0.0.0
2 additional packages:
 - Compat                        0.9.2
 - StatsBase                     0.11.1
INFO: Testing SmoothingKernels
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 3
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 8
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 9
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 13
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 14
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 18
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 19
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 23
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 24
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 28
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 29
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 33
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 34
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 38
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 39
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 43
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/src/kernels.jl, in expression starting on line 44
ERROR: LoadError: LoadError: MethodError: no method matching keys(::Array{Pair{Symbol,B},1})
Closest candidates are:
  keys(!Matched::Associative{K,V}) at dict.jl:139
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/SmoothingKernels/test/runtests.jl:5 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/test/kernels.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.6/SmoothingKernels/test/runtests.jl, in expression starting on line 4
==========================[ ERROR: SmoothingKernels ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SmoothingKernels/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SmoothingKernels had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
