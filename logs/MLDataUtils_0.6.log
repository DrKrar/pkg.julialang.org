>>> 'Pkg.add("MLDataUtils")' log
INFO: Cloning cache of MLDataUtils from https://github.com/JuliaML/MLDataUtils.jl.git
INFO: Installing MLDataUtils v0.0.2
INFO: Installing StatsBase v0.11.1
INFO: Package database updated

>>> 'Pkg.test("MLDataUtils")' log
Julia Version 0.6.0-dev.1532
Commit ae1b30b (2016-12-09 18:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (622.45703125 MB free)
Uptime: 3336.0 sec
Load Avg:  1.04638671875  0.96484375  0.96044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3511 MHz     166698 s        129 s      22204 s     112415 s          5 s
#2  3511 MHz      44762 s         21 s      11284 s     269961 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - MLDataUtils                   0.0.2
2 additional packages:
 - Compat                        0.9.5
 - StatsBase                     0.11.1
INFO: Computing test dependencies for MLDataUtils...
INFO: Cloning cache of BaseTestNext from https://github.com/JuliaCI/BaseTestNext.jl.git
INFO: Cloning cache of UnicodePlots from https://github.com/Evizero/UnicodePlots.jl.git
INFO: Installing BaseTestNext v0.2.2
INFO: Installing UnicodePlots v0.2.2
INFO: Testing MLDataUtils
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:1
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:1
WARNING: the no-op `transpose` for non-numeric arrays is deprecated, and no specific `transpose` method for String exists. Use `permutedims(x, (2, 1))` for matrices and `reshape(x, 1, length(x))` for vectors, or write a specific `transpose(x::String)` method if appropriate.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in transpose(::String) at ./deprecated.jl:770
 in ctranspose at ./operators.jl:549 [inlined]
 in (::Base.##213#214)(::Tuple{Int64,String}) at ./<missing>:0
 in copy!(::Array{String,2}, ::Base.Generator{Base.Iterators.Prod2{Base.OneTo{Int64},Array{String,1}},Base.##213#214}) at ./abstractarray.jl:465
 in _collect(::Type{String}, ::Base.Generator{Base.Iterators.Prod2{Base.OneTo{Int64},Array{String,1}},Base.##213#214}, ::Base.HasShape) at ./array.jl:298
 in ctranspose(::Array{String,1}) at ./arraymath.jl:506
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl, in expression starting on line 2
WARNING: sub is deprecated, use view instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sub(::Array{Int64,1}, ::Vararg{Any,N}) at ./deprecated.jl:30
 in MLDataUtils.KFolds{Array{Float64,2}}(::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:148
 in LOOFolds(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:157
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:9 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl, in expression starting on line 4
KFolds constructor: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: Cannot `convert` an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}} to an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}
  This may have arisen from a call to the constructor MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}(...),
  since type constructors fall back to convert methods.
   in MLDataUtils.KFolds{Array{Float64,2}}(::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:148
   in LOOFolds(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:157
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:9 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
WARNING: sub is deprecated, use view instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sub(::Array{Int64,1}, ::Vararg{Any,N}) at ./deprecated.jl:30
 in MLDataUtils.LabeledKFolds{Array{Float64,2},Array{String,1}}(::Array{Float64,2}, ::Array{String,1}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:187
 in MLDataUtils.LabeledKFolds{TFeatures,TTargets}(::Array{Float64,2}, ::Array{String,1}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:196
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:34 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl, in expression starting on line 29
LabeledKFolds constructor: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: Cannot `convert` an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}} to an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}
  This may have arisen from a call to the constructor MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}(...),
  since type constructors fall back to convert methods.
   in MLDataUtils.LabeledKFolds{Array{Float64,2},Array{String,1}}(::Array{Float64,2}, ::Array{String,1}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:188
   in MLDataUtils.LabeledKFolds{TFeatures,TTargets}(::Array{Float64,2}, ::Array{String,1}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:196
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:34 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
(Labeled)KFolds methods: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: Cannot `convert` an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}} to an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}
  This may have arisen from a call to the constructor MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}(...),
  since type constructors fall back to convert methods.
   in MLDataUtils.KFolds{Array{Float64,2}}(::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:148
   in MLDataUtils.KFolds{TFeatures}(::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:155
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:66 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
KFolds iterator: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: Cannot `convert` an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}} to an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}
  This may have arisen from a call to the constructor MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}(...),
  since type constructors fall back to convert methods.
   in MLDataUtils.KFolds{Array{Float64,2}}(::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:148
   in MLDataUtils.KFolds{TFeatures}(::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:155
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:84 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
LabeledKFolds iterator: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: Cannot `convert` an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},true}} to an object of type MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}
  This may have arisen from a call to the constructor MLDataUtils.DataSubset{Array{Float64,2},SubArray{Int64,1,Array{Int64,1},Tuple{UnitRange{Int64}},1}}(...),
  since type constructors fall back to convert methods.
   in MLDataUtils.LabeledKFolds{Array{Float64,2},Array{String,1}}(::Array{Float64,2}, ::Array{String,1}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:188
   in MLDataUtils.KFolds{TFeatures}(::Array{Float64,2}, ::Array{String,1}, ::Int64) at /home/vagrant/.julia/v0.6/MLDataUtils/src/datasplits/kfolds.jl:198
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/tst_kfolds.jl:99 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:24 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
ERROR: LoadError: Some tests did not pass: 6 passed, 0 failed, 5 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:521
 in macro expansion; at ./test.jl:718 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl:0 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl, in expression starting on line 22
=============================[ ERROR: MLDataUtils ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MLDataUtils/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
INFO: Removing UnicodePlots v0.2.2
ERROR: MLDataUtils had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
