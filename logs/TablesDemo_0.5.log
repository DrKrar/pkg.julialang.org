>>> 'Pkg.add("TablesDemo")' log
INFO: Cloning cache of AbstractTables from https://github.com/davidagold/AbstractTables.jl.git
INFO: Cloning cache of TablesDemo from https://github.com/davidagold/TablesDemo.jl.git
INFO: Installing AbstractTables v0.0.1
INFO: Installing CSV v0.1.2
INFO: Installing StructuredQueries v0.0.4
INFO: Installing TablesDemo v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TablesDemo
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TablesDemo")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (930.96875 MB free)
Uptime: 28941.0 sec
Load Avg:  1.10400390625  1.041015625  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1733562 s       5426 s     198246 s     620106 s         92 s
#2  3499 MHz     501113 s       1264 s      97793 s    2221149 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - TablesDemo                    0.0.1
21 additional packages:
 - AbstractTables                0.0.1
 - CSV                           0.1.2
 - CategoricalArrays             0.1.0
 - Compat                        0.9.5
 - DataArrays                    0.3.10
 - DataFrames                    0.8.5
 - DataStreams                   0.1.2
 - DataStreamsIntegrationTests   0.0.1              e92cc45b (dirty)
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - Hiccup                        0.0.3
 - Juno                          0.2.5
 - Lazy                          0.11.4
 - MacroTools                    0.3.2
 - Media                         0.2.4
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - StructuredQueries             0.0.4
 - WeakRefStrings                0.2.0
INFO: Testing TablesDemo
Running tests:
	[1m[31mFAILED[0m: query/query.jl
LoadError: MethodError: no method matching length(::TablesDemo.Table)
Closest candidates are:
  length(!Matched::SimpleVector) at essentials.jl:168
  length(!Matched::Base.MethodList) at reflection.jl:256
  length(!Matched::MethodTable) at reflection.jl:322
  ...
 in macro expansion; at /home/vagrant/.julia/v0.5/TablesDemo/test/runtests.jl:25 [inlined]
 in macro expansion; at ./test.jl:672 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/TablesDemo/test/query/query.jl, in expression starting on line 18
	[1m[31mFAILED[0m: query/groupby.jl
LoadError: MethodError: no method matching length(::AbstractTables.Grouped{TablesDemo.Table,Dict{Any,Array{Int64,1}}})
Closest candidates are:
  length(!Matched::SimpleVector) at essentials.jl:168
  length(!Matched::Base.MethodList) at reflection.jl:256
  length(!Matched::MethodTable) at reflection.jl:322
  ...
 in macro expansion; at /home/vagrant/.julia/v0.5/TablesDemo/test/runtests.jl:25 [inlined]
 in macro expansion; at ./test.jl:672 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/TablesDemo/test/query/groupby.jl, in expression starting on line 22
Test Summary: | 
  All tests   | No tests
ERROR: LoadError: "Tests failed"
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/TablesDemo/test/runtests.jl, in expression starting on line 33
=============================[ ERROR: TablesDemo ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/TablesDemo/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: TablesDemo had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
