>>> 'Pkg.add("AbstractDomains")' log
INFO: Cloning cache of AbstractDomains from https://github.com/zenna/AbstractDomains.jl.git
INFO: Cloning cache of Compat from https://github.com/JuliaLang/Compat.jl.git
INFO: Cloning cache of Docile from https://github.com/MichaelHatherly/Docile.jl.git
INFO: Cloning cache of Iterators from https://github.com/JuliaLang/Iterators.jl.git
INFO: Installing AbstractDomains v0.0.3
INFO: Installing Compat v0.7.20
INFO: Installing Docile v0.5.23
INFO: Installing Iterators v0.1.9
INFO: Package database updated

>>> 'Pkg.test("AbstractDomains")' log
Julia Version 0.5.0-dev+4582
Commit d98f2c0 (2016-06-07 22:00 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing AbstractDomains

WARNING: deprecated syntax "call(::Type{Base.ByteString}, ...)".
Use "(::Type{Base.ByteString})(...)" instead.

WARNING: deprecated syntax "call(::Type{Base.ByteString}, ...)".
Use "(::Type{Base.ByteString})(...)" instead.

WARNING: deprecated syntax "call(::Type{Base.ByteString}, ...)".
Use "(::Type{Base.ByteString})(...)" instead.

WARNING: deprecated syntax "call(::Type{Base.ByteString}, ...)".
Use "(::Type{Base.ByteString})(...)" instead.

WARNING: deprecated syntax "call(::Type{Base.ByteString}, ...)".
Use "(::Type{Base.ByteString})(...)" instead.

WARNING: deprecated syntax "call(::Type{Base.ByteString}, ...)".
Use "(::Type{Base.ByteString})(...)" instead.
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:494
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Compat/src/Compat.jl, in expression starting on line 132
ERROR: LoadError: LoadError: LoadError: LoadError: UndefVarError: Uint8 not defined
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/AbstractDomains/src/domains.jl:22 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in eval(::Module, ::Any) at ./boot.jl:225
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/AbstractDomains/src/domains/bool.jl, in expression starting on line 481
while loading /home/vagrant/.julia/v0.5/AbstractDomains/src/domains.jl, in expression starting on line 19
while loading /home/vagrant/.julia/v0.5/AbstractDomains/src/AbstractDomains.jl, in expression starting on line 52
while loading /home/vagrant/.julia/v0.5/AbstractDomains/test/runtests.jl, in expression starting on line 1
===========================[ ERROR: AbstractDomains ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/AbstractDomains/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: AbstractDomains had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
