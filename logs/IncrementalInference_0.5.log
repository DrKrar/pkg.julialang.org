>>> 'Pkg.add("IncrementalInference")' log
INFO: Cloning cache of IncrementalInference from https://github.com/dehann/IncrementalInference.jl.git
INFO: Cloning cache of KernelDensityEstimate from https://github.com/dehann/KernelDensityEstimate.jl.git
INFO: Cloning cache of TransformUtils from https://github.com/dehann/TransformUtils.jl.git
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing BinDeps v0.4.5
INFO: Installing Cairo v0.2.35
INFO: Installing Calculus v0.1.15
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing Compose v0.4.4
INFO: Installing Contour v0.2.0
INFO: Installing DataArrays v0.3.10
INFO: Installing DataFrames v0.8.5
INFO: Installing DiffBase v0.0.2
INFO: Installing Distances v0.3.2
INFO: Installing Distributions v0.11.1
INFO: Installing FileIO v0.2.1
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing Fontconfig v0.1.1
INFO: Installing ForwardDiff v0.3.3
INFO: Installing GZip v0.2.20
INFO: Installing Gadfly v0.5.2
INFO: Installing GraphViz v0.1.0
INFO: Installing Graphics v0.1.3
INFO: Installing Graphs v0.7.1
INFO: Installing Hexagons v0.0.4
INFO: Installing Hiccup v0.1.1
INFO: Installing IncrementalInference v0.2.1
INFO: Installing Interpolations v0.3.6
INFO: Installing Iterators v0.2.0
INFO: Installing Juno v0.2.5
INFO: Installing KernelDensity v0.3.0
INFO: Installing KernelDensityEstimate v0.2.0
INFO: Installing LineSearches v0.1.3
INFO: Installing Loess v0.1.0
INFO: Installing MacroTools v0.3.4
INFO: Installing Measures v0.0.3
INFO: Installing Media v0.2.4
INFO: Installing NLsolve v0.8.0
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.3
INFO: Installing PDMats v0.5.2
INFO: Installing PositiveFactorizations v0.0.3
INFO: Installing Ratios v0.0.4
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.5
INFO: Installing SHA v0.3.0
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing TransformUtils v0.0.4
INFO: Installing URIParser v0.1.6
INFO: Installing WoodburyMatrices v0.2.1
INFO: Building Cairo
INFO: Building Rmath
INFO: Building Fontconfig
INFO: Building GraphViz
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of IncrementalInference
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("IncrementalInference")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (753.23046875 MB free)
Uptime: 36427.0 sec
Load Avg:  0.83154296875  0.916015625  1.0107421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2195797 s       6008 s     201810 s     782001 s        108 s
#2  3504 MHz     762746 s        838 s     118051 s    2647887 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - IncrementalInference          0.2.1
 - JSON                          0.8.0
56 additional packages:
 - AxisAlgorithms                0.1.5
 - BinDeps                       0.4.5
 - Cairo                         0.2.35
 - Calculus                      0.1.15
 - ColorTypes                    0.2.12
 - Colors                        0.6.9
 - Compat                        0.10.0
 - CompilerTools                 0.2.1
 - Compose                       0.4.4
 - Contour                       0.2.0
 - DataArrays                    0.3.10
 - DataFrames                    0.8.5
 - DataStructures                0.4.6
 - DiffBase                      0.0.2
 - Distances                     0.3.2
 - Distributions                 0.11.1
 - DocOpt                        0.2.0
 - FileIO                        0.2.1
 - FixedPointNumbers             0.2.1
 - FixedSizeArrays               0.2.5
 - Fontconfig                    0.1.1
 - ForwardDiff                   0.3.3
 - GZip                          0.2.20
 - Gadfly                        0.5.2
 - GraphViz                      0.1.0
 - Graphics                      0.1.3
 - Graphs                        0.7.1
 - Hexagons                      0.0.4
 - Hiccup                        0.1.1
 - Interpolations                0.3.6
 - Iterators                     0.2.0
 - Juno                          0.2.5
 - KernelDensity                 0.3.0
 - KernelDensityEstimate         0.2.0
 - LineSearches                  0.1.3
 - Loess                         0.1.0
 - MacroTools                    0.3.4
 - Measures                      0.0.3
 - Media                         0.2.4
 - NLsolve                       0.8.0
 - NaNMath                       0.2.2
 - Optim                         0.7.3
 - PDMats                        0.5.2
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - PositiveFactorizations        0.0.3
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - TransformUtils                0.0.4
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.1
INFO: Testing IncrementalInference
[TEST] out of module evalPotential...
evalPotential sees Second.SecondType(1)
evalPotential also sees Second.SecondAgain(3)
evalPotential sees Second.SecondType(1)
evalPotential sees Second.SecondType(1)
evalPotential also sees Second.SecondAgain(3)
Check the speed is reasonable
Success
[TEST] generic root finding by numeric solve of residual functions...
WARNING: Method definition (::Type{Graphs.KeyVertex})(Int64, #K<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:12 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:16.
WARNING: Method definition (::Type{Graphs.Edge})(Int64, #V<:Any, #V<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:54 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:60.
WARNING: Method definition (::Type{Graphs.ExEdge})(Int64, #V<:Any, #V<:Any, Base.Dict{String, Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:72 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:83.
WARNING: Method definition (::Type{Graphs.TargetIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:123 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:127.
WARNING: Method definition (::Type{Graphs.SourceIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:141 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:145.
WARNING: Method definition edge_property_requirement(Graphs.AbstractEdgePropertyInspector{#T<:Any}, Graphs.AbstractGraph{#V<:Any, E<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:164 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:179.
WARNING: Method definition vertex_index(#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, Graphs.GenericGraph{#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, E<:Any, VList<:Any, EList<:Any, IncList<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:65 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:67.
WARNING: Method definition (::Type{Graphs.GDistanceVisitor})(#G<:Graphs.AbstractGraph, #DMap<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:107 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:111.

WARNING: deprecated syntax "for (...)" at /home/vagrant/.julia/v0.5/KernelDensityEstimate/src/DualTree01.jl:51.
Use "for ..." instead.
WARNING: Method definition getType(KernelDensityEstimate.BallTreeDensity) in module KernelDensityEstimate at /home/vagrant/.julia/v0.5/KernelDensityEstimate/src/BallTreeDensity01.jl:26 overwritten at /home/vagrant/.julia/v0.5/KernelDensityEstimate/src/KDE01.jl:43.
WARNING: Method definition *(TransformUtils.SO3, TransformUtils.so3) in module TransformUtils at /home/vagrant/.julia/v0.5/TransformUtils/src/TransformUtils.jl:191 overwritten at /home/vagrant/.julia/v0.5/TransformUtils/src/TransformUtils.jl:218.
WARNING: Method definition *(TransformUtils.so3, TransformUtils.SO3) in module TransformUtils at /home/vagrant/.julia/v0.5/TransformUtils/src/TransformUtils.jl:194 overwritten at /home/vagrant/.julia/v0.5/TransformUtils/src/TransformUtils.jl:219.
WARNING: Method definition (::Type{Graphs.KeyVertex})(Int64, #K<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:12 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:16.
WARNING: Method definition (::Type{Graphs.KeyVertex})(Int64, #K<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:12 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:16.
WARNING: Method definition (::Type{Graphs.KeyVertex})(Int64, #K<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:12 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:16.
WARNING: Method definition (::Type{Graphs.Edge})(Int64, #V<:Any, #V<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:54 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:60.
WARNING: Method definition (::Type{Graphs.ExEdge})(Int64, #V<:Any, #V<:Any, Base.Dict{String, Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:72 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:83.
WARNING: Method definition (::Type{Graphs.TargetIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:123 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:127.
WARNING: Method definition (::Type{Graphs.SourceIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:141 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:145.
WARNING: Method definition edge_property_requirement(Graphs.AbstractEdgePropertyInspector{#T<:Any}, Graphs.AbstractGraph{#V<:Any, E<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:164 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:179.
WARNING: Method definition (::Type{Graphs.Edge})(Int64, #V<:Any, #V<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:54 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:60.
WARNING: Method definition (::Type{Graphs.ExEdge})(Int64, #V<:Any, #V<:Any, Base.Dict{String, Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:72 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:83.
WARNING: Method definition (::Type{Graphs.TargetIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:123 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:127.
WARNING: Method definition (::Type{Graphs.SourceIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:141 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:145.
WARNING: Method definition vertex_index(#V<:Union{Graphs.KeyVertex, Graphs.ExVertex}, Graphs.GenericGraph{#V<:Union{Graphs.KeyVertex, Graphs.ExVertex}, E<:Any, VList<:Any, EList<:Any, IncList<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:65 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:67.
WARNING: Method definition (::Type{Graphs.Edge})WARNING: Method definition (Int64, #V<:Any, #V<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:54 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:60.
edge_property_requirement(Graphs.AbstractEdgePropertyInspector{#T<:Any}, Graphs.AbstractGraph{#V<:Any, E<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:164 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:179.
WARNING: Method definition (::Type{Graphs.ExEdge})(Int64, #V<:Any, #V<:Any, Base.Dict{String, Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:72 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:83.
WARNING: Method definition (::Type{Graphs.TargetIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:123 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:127.
WARNING: Method definition (::Type{Graphs.SourceIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:141 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:145.
WARNING: Method definition edge_property_requirement(Graphs.AbstractEdgePropertyInspector{#T<:Any}, Graphs.AbstractGraph{#V<:Any, E<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:164 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:179.
WARNING: Method definition (::Type{Graphs.GDistanceVisitor})(#G<:Graphs.AbstractGraph, #DMap<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:107 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:111.
WARNING: Method definition vertex_index(#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, Graphs.GenericGraph{#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, E<:Any, VList<:Any, EList<:Any, IncList<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:65 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:67.
WARNING: Method definition vertex_index(#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, Graphs.GenericGraph{#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, E<:Any, VList<:Any, EList<:Any, IncList<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:65 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:67.
WARNING: Method definition (::Type{Graphs.GDistanceVisitor})(#G<:Graphs.AbstractGraph, #DMap<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:107 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:111.
WARNING: Method definition (::Type{Graphs.GDistanceVisitor})(#G<:Graphs.AbstractGraph, #DMap<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:107 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:111.
WARNING: using IncrementalInference.evalPotential in module Main conflicts with an existing identifier.
Increased dimension test
y .% 10 = [0.999514,2.0,3.00061]
yy = y .% 10.0 = [0.999514,2.0,3.00061]
y .% 10 = [0.99949,2.00059,3.0]
yy = y .% 10.0 = [0.99949,2.00059,3.0]
y .% 10 = [1.0,1.99768,2.99962]
yy = y .% 10.0 = [1.0,1.99768,2.99962]
y .% 10 = [1.0,2.00004,3.00219]
yy = y .% 10.0 = [1.0,2.00004,3.00219]
y .% 10 = [0.999184,2.0,3.00067]
yy = y .% 10.0 = [0.999184,2.0,3.00067]
y .% 10 = [1.0,2.00001,3.00203]
yy = y .% 10.0 = [1.0,2.00001,3.00203]
y .% 10 = [1.0007,2.0,2.99848]
yy = y .% 10.0 = [1.0007,2.0,2.99848]
y .% 10 = [1.0006,2.0,2.99968]
yy = y .% 10.0 = [1.0006,2.0,2.99968]
y .% 10 = [1.00145,2.0,2.99991]
yy = y .% 10.0 = [1.00145,2.0,2.99991]
y .% 10 = [0.999031,2.0,3.00161]
yy = y .% 10.0 = [0.999031,2.0,3.00161]
Success
[TEST] with local Graphs.jl dictionary and arrays only (multicore)...
WARNING: setDefaultNodeData! -- deprecated use of stdev.

Building Bayes net...
(vert.label,getData(vert).BayesNetVertID) = ("x3",0)
(vert.label,getData(vert).BayesNetVertID) = ("x4",0)
(vert.label,getData(vert).BayesNetVertID) = ("x1",0)
(vert.label,getData(vert).BayesNetVertID) = ("x6",0)
(vert.label,getData(vert).BayesNetVertID) = ("l1",0)
(vert.label,getData(vert).BayesNetVertID) = ("x7",0)
(vert.label,getData(vert).BayesNetVertID) = ("x2",0)
(vert.label,getData(vert).BayesNetVertID) = ("x5",0)

Eliminating 5
===============

adding marginal to
x.index = 3
x.index = 8
x.index = 10

Eliminating 8
===============

adding marginal to
x.index = 10
x.index = 13
x.index = 3

Eliminating 1
===============

adding marginal to
x.index = 3

Eliminating 15
===============

adding marginal to
x.index = 13
x.index = 17

Eliminating 10
===============

adding marginal to
x.index = 13
x.index = 3

Eliminating 17
===============

adding marginal to
x.index = 13

Eliminating 3
===============

WARNING: removing vertex id=22
WARNING: graphsDeleteVertex! -- not deleting Graphs.jl vertex id=22
adding marginal to
x.index = 13

Eliminating 13
===============

WARNING: removing vertex id=25
WARNING: graphsDeleteVertex! -- not deleting Graphs.jl vertex id=25
WARNING: removing vertex id=26
WARNING: graphsDeleteVertex! -- not deleting Graphs.jl vertex id=26
adding marginal to
WARNING: newPotential -- sep length is 0
Bayes Net
Bayes Tree
Find potential functions for each clique
Get potentials x7,x6,: x5,
Get potentials x1,: x2,
Get potentials x3,: x2,x4,l1,
Get potentials x5,x2,l1,x4,: 
(xx,ll) = ls(fg) = (Symbol[:x1,:x2,:x3,:x4,:x5,:x6,:x7],Symbol[:l1])
Do recursive inference over tree
Start Clique x5,x2,l1,x4,:  =============================
upMsgRec -- calling new recursive on x7,x6,: x5,
Start Clique x7,x6,: x5, =============================
====================== Clique x7,x6,: x5, =============================
up w 0 msgs------------- functional mcmc ----------------x7,x6,: x5,
#1	 -- 
fmcmc! -- finished on x7,x6,: x5,
------------- functional mcmc ----------------x7,x6,: x5,
#1	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
#2	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
#3	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
fmcmc! -- finished on x7,x6,: x5,
------------- functional mcmc ----------------x7,x6,: x5,
#1	 -- x5 [direct] 
fmcmc! -- finished on x7,x6,: x5,
Outgoing msg density on: updateFGBT! up -- finished updating x7,x6,: x5,
End Clique x7,x6,: x5, =============================
upMsgRec -- finished with x7,x6,: x5,, w [13])
upMsgRec -- calling new recursive on x1,: x2,
Start Clique x1,: x2, =============================
====================== Clique x1,: x2, =============================
up w 0 msgs------------- functional mcmc ----------------x1,: x2,
#1	 -- 
fmcmc! -- finished on x1,: x2,
------------- functional mcmc ----------------x1,: x2,
#1	 -- x1 [2x,d1,N200], 
fmcmc! -- finished on x1,: x2,
------------- functional mcmc ----------------x1,: x2,
#1	 -- x2 [direct] 
fmcmc! -- finished on x1,: x2,
Outgoing msg density on: updateFGBT! up -- finished updating x1,: x2,
End Clique x1,: x2, =============================
upMsgRec -- finished with x1,: x2,, w [3])
upMsgRec -- calling new recursive on x3,: x2,x4,l1,
Start Clique x3,: x2,x4,l1, =============================
====================== Clique x3,: x2,x4,l1, =============================
up w 0 msgs------------- functional mcmc ----------------x3,: x2,x4,l1,
#1	 -- 
fmcmc! -- finished on x3,: x2,x4,l1,
------------- functional mcmc ----------------x3,: x2,x4,l1,
#1	 -- x3 [4x,d1,N200], 
fmcmc! -- finished on x3,: x2,x4,l1,
------------- functional mcmc ----------------x3,: x2,x4,l1,
#1	 -- x2 [direct] x4 [direct] l1 [direct] 
fmcmc! -- finished on x3,: x2,x4,l1,
Outgoing msg density on: updateFGBT! up -- finished updating x3,: x2,x4,l1,
End Clique x3,: x2,x4,l1, =============================
upMsgRec -- finished with x3,: x2,x4,l1,, w [10,3,8])
====================== Clique x5,x2,l1,x4,:  =============================
up w 3 msgs------------- functional mcmc ----------------x5,x2,l1,x4,: 
#1	 -- 
fmcmc! -- finished on x5,x2,l1,x4,: 
------------- functional mcmc ----------------x5,x2,l1,x4,: 
#1	 -- x5 [2x,d1,N200], x2 [2x,d1,N200], l1 [2x,d1,N200], x4 [3x,d1,N200], 
#2	 -- x5 [2x,d1,N200], x2 [2x,d1,N200], l1 [2x,d1,N200], x4 [3x,d1,N200], 
#3	 -- x5 [2x,d1,N200], x2 [2x,d1,N200], l1 [2x,d1,N200], x4 [3x,d1,N200], 
fmcmc! -- finished on x5,x2,l1,x4,: 
Outgoing msg density on: updateFGBT! up -- finished updating x5,x2,l1,x4,: 
End Clique x5,x2,l1,x4,:  =============================
====================== Clique x5,x2,l1,x4,:  =============================
dwn------------- functional mcmc ----------------x5,x2,l1,x4,: 
fmcmc! -- finished on x5,x2,l1,x4,: 
Outgoing msg density on: ====================== Clique x7,x6,: x5, =============================
dwn------------- functional mcmc ----------------x7,x6,: x5,
#1	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
#2	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
#3	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
fmcmc! -- finished on x7,x6,: x5,
Dwn msg keys [13,10,3,8]
Outgoing msg density on: 
====================== Clique x1,: x2, =============================
dwn------------- functional mcmc ----------------x1,: x2,
#1	 -- x1 [2x,d1,N200], 
fmcmc! -- finished on x1,: x2,
Dwn msg keys [13,10,3,8]
Outgoing msg density on: 
====================== Clique x3,: x2,x4,l1, =============================
dwn------------- functional mcmc ----------------x3,: x2,x4,l1,
#1	 -- x3 [4x,d1,N200], 
fmcmc! -- finished on x3,: x2,x4,l1,
Dwn msg keys [13,10,3,8]
Outgoing msg density on: 


Do multi-process inference over tree
child.attributes["label"] = "x5,x2,l1,x4,: "
child.attributes["label"] = "x3,: x2,x4,l1,"
child.attributes["label"] = "x1,: x2,"
child.attributes["label"] = "x7,x6,: x5,"
Start Clique x7,x6,: x5, =============================
====================== Clique x7,x6,: x5, =============================
Start Clique x1,: x2, =============================
====================== Clique x1,: x2, =============================
Start Clique x3,: x2,x4,l1, =============================
====================== Clique x3,: x2,x4,l1, =============================
Start Clique x5,x2,l1,x4,:  =============================
asyncProcessPostStacks -- 1, cliq=x5,x2,l1,x4,: , start on child x7,x6,: x5, haskey=false
End Clique x7,x6,: x5, =============================
End Clique x1,: x2, =============================
End Clique x3,: x2,x4,l1, =============================
	From worker 3:	up w 0 msgs------------- functional mcmc ----------------x1,: x2,
	From worker 3:	#1	 -- 
	From worker 3:	fmcmc! -- finished on x1,: x2,
	From worker 3:	------------- functional mcmc ----------------x1,: x2,
	From worker 2:	up w 0 msgs------------- functional mcmc ----------------x7,x6,: x5,
	From worker 2:	#1	 -- 
	From worker 2:	fmcmc! -- finished on x7,x6,: x5,
	From worker 2:	------------- functional mcmc ----------------x7,x6,: x5,
	From worker 4:	up w 0 msgs------------- functional mcmc ----------------x3,: x2,x4,l1,
	From worker 4:	#1	 -- 
	From worker 4:	fmcmc! -- finished on x3,: x2,x4,l1,
	From worker 4:	------------- functional mcmc ----------------x3,: x2,x4,l1,
	From worker 3:	#1	 -- x1 [2x,d1,N200], 
	From worker 3:	fmcmc! -- finished on x1,: x2,
	From worker 3:	------------- functional mcmc ----------------x1,: x2,
	From worker 3:	#1	 -- x2 [direct] 
	From worker 3:	fmcmc! -- finished on x1,: x2,
	From worker 2:	#1	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
	From worker 4:	#1	 -- x3 [4x,d1,N200], 
	From worker 4:	fmcmc! -- finished on x3,: x2,x4,l1,
	From worker 4:	------------- functional mcmc ----------------x3,: x2,x4,l1,
	From worker 4:	#1	 -- x2 [direct] x4 [direct] l1 [direct] 
	From worker 4:	fmcmc! -- finished on x3,: x2,x4,l1,
	From worker 2:	#2	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
	From worker 2:	#3	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
	From worker 2:	fmcmc! -- finished on x7,x6,: x5,
	From worker 2:	------------- functional mcmc ----------------x7,x6,: x5,
	From worker 2:	#1	 -- x5 [direct] 
	From worker 2:	fmcmc! -- finished on x7,x6,: x5,
updateFGBT! up -- finished updating x7,x6,: x5,
asyncProcessPostStacks -- 1, cliq=x5,x2,l1,x4,: , start on child x1,: x2, haskey=false
updateFGBT! up -- finished updating x1,: x2,
asyncProcessPostStacks -- 1, cliq=x5,x2,l1,x4,: , start on child x3,: x2,x4,l1, haskey=false
updateFGBT! up -- finished updating x3,: x2,x4,l1,
====================== Clique x5,x2,l1,x4,:  =============================
End Clique x5,x2,l1,x4,:  =============================
processPostOrderStacks! -- THIS ONLY HAPPENS AFTER SYNC
	From worker 2:	Outgoing msg density on: up w 3 msgs------------- functional mcmc ----------------x5,x2,l1,x4,: 
	From worker 2:	#1	 -- 
	From worker 2:	fmcmc! -- finished on x5,x2,l1,x4,: 
	From worker 2:	------------- functional mcmc ----------------x5,x2,l1,x4,: 
	From worker 2:	#1	 -- x5 [2x,d1,N200], x2 [2x,d1,N200], l1 [2x,d1,N200], x4 [3x,d1,N200], 
	From worker 2:	#2	 -- x5 [2x,d1,N200], x2 [2x,d1,N200], l1 [2x,d1,N200], x4 [3x,d1,N200], 
	From worker 2:	#3	 -- x5 [2x,d1,N200], x2 [2x,d1,N200], l1 [2x,d1,N200], x4 [3x,d1,N200], 
	From worker 2:	fmcmc! -- finished on x5,x2,l1,x4,: 
upward leftovers, Int64[]
updateFGBT! up -- finished updating x5,x2,l1,x4,: 
	From worker 3:	Outgoing msg density on: =================== Iter Clique x5,x2,l1,x4,:  ===========================
	From worker 3:	dwn------------- functional mcmc ----------------x5,x2,l1,x4,: 
	From worker 3:	fmcmc! -- finished on x5,x2,l1,x4,: 
	From worker 3:	Outgoing msg density on: =================== Iter Clique x3,: x2,x4,l1, ===========================
	From worker 3:	dwn------------- functional mcmc ----------------x3,: x2,x4,l1,
	From worker 2:	Outgoing msg density on: =================== Iter Clique x1,: x2, ===========================
	From worker 2:	dwn------------- functional mcmc ----------------x1,: x2,
	From worker 4:	Outgoing msg density on: =================== Iter Clique x7,x6,: x5, ===========================
	From worker 4:	dwn------------- functional mcmc ----------------x7,x6,: x5,
	From worker 2:	#1	 -- x1 [2x,d1,N200], 
	From worker 2:	fmcmc! -- finished on x1,: x2,
	From worker 2:	Dwn msg keys [13,10,3,8]
	From worker 2:	Outgoing msg density on: 
	From worker 4:	#1	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
	From worker 3:	#1	 -- x3 [4x,d1,N200], 
	From worker 3:	fmcmc! -- finished on x3,: x2,x4,l1,
	From worker 3:	Dwn msg keys [13,10,3,8]
	From worker 3:	Outgoing msg density on: 
	From worker 3:	
	From worker 3:	
	From worker 4:	#2	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
	From worker 4:	#3	 -- x7 [2x,d1,N200], x6 [2x,d1,N200], 
	From worker 4:	fmcmc! -- finished on x7,x6,: x5,
	From worker 4:	Dwn msg keys [13,10,3,8]
	From worker 4:	Outgoing msg density on: 
dwnward leftovers, Int64[]
Inference finished
Success
[TEST] plot functions...
WARNING: using Gadfly.Col in module Main conflicts with an existing identifier.
[TEST] Ensure memory return is working properly...Success
[TEST] packing converters work...
Testing conversion to packed data structure and back
Conversions and comparisons agree
INFO: IncrementalInference tests passed

>>> End of log
