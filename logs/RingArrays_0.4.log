>>> 'Pkg.add("RingArrays")' log
INFO: Cloning cache of RingArrays from https://github.com/invenia/RingArrays.jl.git
INFO: Cloning cache of VirtualArrays from git://github.com/invenia/VirtualArrays.jl.git
INFO: Installing RingArrays v0.1.0
INFO: Installing VirtualArrays v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of RingArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("RingArrays")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (918.09765625 MB free)
Uptime: 25663.0 sec
Load Avg:  1.0078125  1.0146484375  1.02783203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1250275 s       2595 s      98664 s     948153 s        102 s
#2  3500 MHz     817321 s       4470 s      84586 s    1558677 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - RingArrays                    0.1.0
2 additional packages:
 - Compat                        0.20.0
 - VirtualArrays                 0.1.1
INFO: Computing test dependencies for RingArrays...
INFO: Installing BaseTestNext v0.2.2
INFO: Installing FactCheck v0.4.3
INFO: Testing RingArrays
About creating RingArray
  > bad curly braces
  > without curly braces
  > passing a size
  > passing a block size
  > passing nothing
  > passing 0 for size
  > passing a negative for size
  > having a multi dimensional array
  > having a multi dimensional array and passing data size
  > creating a RingArray of dimension of the RingArray different form the block size
49 facts verified.
Getting values from RingArray
  > getting the first value
  > getting the first value without loading
  > getting a value in the first block
  > getting a value in the second block after getting a value in the first block
  > getting a value in the second block first
  > getting a value in the second block first while only loading the first block
  > getting a value in any block first
  > getting value from 2 d array
  > getting value from 2 d array like a 1 d array
  > getting value from 2 d array like a 1 d array after overflow
  > getting value from N d array like a 1 d array after overflow
    Error :: (line:-1) :: getting value from N d array like a 1 d array after overflow
      Expression: test[index_overflow] --> expected[index_overflow]
      RingArrayBoundsError: Cannot index (85,1,2), outside of range (79:86,1,1)
       in checkbounds at /home/vagrant/.julia/v0.4/RingArrays/src/RingArrays.jl:123
       in getindex at /home/vagrant/.julia/v0.4/RingArrays/src/RingArrays.jl:134
       in anonymous at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:272
       in do_fact at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:334
       [inlined code] from /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:272
       in anonymous at /home/vagrant/.julia/v0.4/RingArrays/test/RingArrays.jl:368
       in context at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:475
       in anonymous at /home/vagrant/.julia/v0.4/RingArrays/test/RingArrays.jl:342
       in facts at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:449
       in include at ./boot.jl:261
       in include_from_node1 at ./loading.jl:333
       in include at ./boot.jl:261
       in include_from_node1 at ./loading.jl:333
       in process_options at ./client.jl:280
       in _start at ./client.jl:378
    Error :: (line:-1) :: getting value from N d array like a 1 d array after overflow
      Expression: test[index_overflow] --> test[index,2]
      RingArrayBoundsError: Cannot index (85,1,2), outside of range (79:86,1,1)
       in checkbounds at /home/vagrant/.julia/v0.4/RingArrays/src/RingArrays.jl:123
       in getindex at /home/vagrant/.julia/v0.4/RingArrays/src/RingArrays.jl:134
       in anonymous at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:272
       in do_fact at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:334
       [inlined code] from /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:272
       in anonymous at /home/vagrant/.julia/v0.4/RingArrays/test/RingArrays.jl:369
       in context at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:475
       in anonymous at /home/vagrant/.julia/v0.4/RingArrays/test/RingArrays.jl:342
       in facts at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:449
       in include at ./boot.jl:261
       in include_from_node1 at ./loading.jl:333
       in include at ./boot.jl:261
       in include_from_node1 at ./loading.jl:333
       in process_options at ./client.jl:280
       in _start at ./client.jl:378
    Error :: (line:-1) :: getting value from N d array like a 1 d array after overflow
      Expression: test[index_overflow] --> expected[index,2]
      RingArrayBoundsError: Cannot index (85,1,2), outside of range (79:86,1,1)
       in checkbounds at /home/vagrant/.julia/v0.4/RingArrays/src/RingArrays.jl:123
       in getindex at /home/vagrant/.julia/v0.4/RingArrays/src/RingArrays.jl:134
       in anonymous at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:272
       in do_fact at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:334
       [inlined code] from /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:272
       in anonymous at /home/vagrant/.julia/v0.4/RingArrays/test/RingArrays.jl:370
       in context at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:475
       in anonymous at /home/vagrant/.julia/v0.4/RingArrays/test/RingArrays.jl:342
       in facts at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:449
       in include at ./boot.jl:261
       in include_from_node1 at ./loading.jl:333
       in include at ./boot.jl:261
       in include_from_node1 at ./loading.jl:333
       in process_options at ./client.jl:280
       in _start at ./client.jl:378
  > getting the last value from N d array like a 1 d array after overflow
  > getting value from N d array
Out of 49 total facts:
  Verified: 46
  Errored:  3
Getting values over the length (overflow) of the RingArray
  > getting the first value after overflowing
  > getting the first value after overflowing with only before overflow
  > getting any value after overflowing
  > getting any value after any number of overflows
  > getting value from 2 d array after overflowing
  > getting value from N d array after any number of overflows
23 facts verified.
Getting data views
  > looking at a small portion of the first block
  > trying to change a value in a view
  > looking at a small portion of the first block without loading
  > looking at a the whole portion of the first block
  > looking at a small portion of any block
  > looking at a small portion of two blocks
  > looking at a portion of two blocks at overflow
  > looking at a portion of two blocks at overflow of a 2d ring array
  > looking at a portion from one block from N d array after any number of overflows
31 facts verified.
Using checkbounds
  > checking bounds before overflow without overflowing
  > checking bounds after overflow without overflowing
  > checking bounds after overflow with overflowing
  > checking bounds before overflow with overflowing
  > checking unit range bounds before overflow without overflowing
  > checking unit range bounds after overflow without overflowing
  > checking unit range bounds after overflow with overflowing
  > checking unit range bounds before overflow with overflowing
  > checking unit range bounds that exceed the length of the ring
  > checking indexing of N d RingArray
  > checking out of bounds indexing of N d RingArray
  > checking out of bounds indexing not on the first dimension of N d RingArray
  > checking range indexing of N d RingArray
  > checking out of bounds range indexing of N d RingArray
36 facts verified.
Using display
  > trying display on a typical RingArray
5-element Array{AbstractArray{Int64,1},1}:
 #undef
 #undef
 #undef
 #undef
 #undef1 fact verified.
Using views
  > having the RingArray overflow when no views in use
  > having the RingArray overflow when first block is in use
  > having the RingArray overflow to the first block when second block is in use
  > having a view that goes out of scope and run gc
  > having a view that goes out of scope don't run gc
  > having many views that goes out of scope don't run gc
  > having a view that stays and many views that goes out of scope don't run gc
  > having the RingArray overflow to the first block when second block is in use
Out of 64 total facts:
  Verified: 62
  Pending:  2
Loading blocks in RingArray
  > loading the first block
  > loading lots of blocks
  > loading a block of different size
  > loading a block of different dimensions
  > loading too many blocks
145 facts verified.
Testing custom errors
  > testing output of OverwriteError
  > testing output of RingArrayFullError
  > testing output of RingArrayBoundsError
3 facts verified.
Test Summary:   | Pass  Total
RingArray Tests |   32     32
ERROR: LoadError: FactCheck finished with 3 non-successful tests.
 in error at ./error.jl:21
 in exitstatus at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:568
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/RingArrays/test/runtests.jl, in expression starting on line 13
=============================[ ERROR: RingArrays ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/RingArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
INFO: Removing FactCheck v0.4.3
ERROR: RingArrays had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
