>>> 'Pkg.add("MultiPoly")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing MultiPoly v0.1.0
INFO: Installing Polynomials v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of MultiPoly
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("MultiPoly")' log
Julia Version 0.6.0-dev.1918
Commit cfa2312 (2017-01-04 22:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (768.58203125 MB free)
Uptime: 4644.0 sec
Load Avg:  1.041015625  1.30908203125  1.2275390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     240948 s       5507 s      39706 s     134762 s         11 s
#2  3500 MHz      88712 s       2180 s      19665 s     339590 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - MultiPoly                     0.1.0
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing MultiPoly

WARNING: deprecated syntax "call(::Type{MPoly{T}}, ...)".
Use "(::Type{MPoly{T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{MPoly}, ...)".
Use "(::Type{MPoly})(...)" instead.
INFO: MultiPoly tests passed

>>> End of log
