>>> 'Pkg.add("Metamath")' log
INFO: Cloning cache of CSV from https://github.com/JuliaData/CSV.jl.git
INFO: Cloning cache of CategoricalArrays from https://github.com/JuliaData/CategoricalArrays.jl.git
INFO: Cloning cache of DataStreams from https://github.com/JuliaData/DataStreams.jl.git
INFO: Cloning cache of Metamath from https://github.com/getzdan/Metamath.jl.git
INFO: Cloning cache of NullableArrays from https://github.com/JuliaStats/NullableArrays.jl.git
INFO: Installing CSV v0.0.5
INFO: Installing CategoricalArrays v0.0.4
INFO: Installing DataStreams v0.0.4
INFO: Installing Metamath v0.0.1
INFO: Installing NullableArrays v0.0.10
INFO: Installing Reexport v0.0.3
INFO: Package database updated

>>> 'Pkg.test("Metamath")' log
Julia Version 0.6.0-dev.1836
Commit 1539061 (2017-01-01 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (626.171875 MB free)
Uptime: 3025.0 sec
Load Avg:  0.9677734375  0.9580078125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     154175 s        116 s      21202 s      97455 s          4 s
#2  3498 MHz      46405 s         41 s      10507 s     238170 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - Metamath                      0.0.1
6 additional packages:
 - CSV                           0.0.5
 - CategoricalArrays             0.0.4
 - Compat                        0.10.0
 - DataStreams                   0.0.4
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
INFO: Testing Metamath
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:50
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:51
WARNING: Method definition convert(Type{String}, DataStreams.Data.PointerString) in module Data at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:50 overwritten at /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl:51.
ERROR: LoadError: `UTF16String` has been moved to the package LegacyStrings.jl:
Run Pkg.add("LegacyStrings") to install LegacyStrings on Julia v0.5-;
Then do `using LegacyStrings` to get `UTF16String`.

Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:532
 [2] include(::String) at ./sysimg.jl:14
 [3] anonymous at ./<missing>:2
 [4] eval(::Module, ::Any) at ./boot.jl:236
 [5] process_options(::Base.JLOptions) at ./client.jl:275
 [6] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/DataStreams/src/DataStreams.jl, in expression starting on line 52
ERROR: LoadError: Failed to precompile DataStreams to /home/vagrant/.julia/lib/v0.6/DataStreams.ji.
Stacktrace:
 [1] compilecache(::String) at ./loading.jl:672
 [2] require(::Symbol) at ./loading.jl:424
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] anonymous at ./<missing>:2
 [6] eval(::Module, ::Any) at ./boot.jl:236
 [7] process_options(::Base.JLOptions) at ./client.jl:275
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/CSV/src/CSV.jl, in expression starting on line 1
ERROR: LoadError: Failed to precompile CSV to /home/vagrant/.julia/lib/v0.6/CSV.ji.
Stacktrace:
 [1] compilecache(::String) at ./loading.jl:672
 [2] require(::Symbol) at ./loading.jl:424
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] anonymous at ./<missing>:2
 [6] eval(::Module, ::Any) at ./boot.jl:236
 [7] process_options(::Base.JLOptions) at ./client.jl:275
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Metamath/src/Metamath.jl, in expression starting on line 6
ERROR: LoadError: Failed to precompile Metamath to /home/vagrant/.julia/lib/v0.6/Metamath.ji.
Stacktrace:
 [1] compilecache(::String) at ./loading.jl:672
 [2] require(::Symbol) at ./loading.jl:453
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:298
 [6] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Metamath/test/runtests.jl, in expression starting on line 1
==============================[ ERROR: Metamath ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Metamath/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Metamath had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
