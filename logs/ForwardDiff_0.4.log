>>> 'Pkg.add("ForwardDiff")' log
INFO: Installing Calculus v0.1.15
INFO: Installing ForwardDiff v0.2.5
INFO: Installing NaNMath v0.2.1
INFO: Package database updated

>>> 'Pkg.test("ForwardDiff")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (542.73828125 MB free)
Uptime: 21345.0 sec
Load Avg:  0.97265625  0.9853515625  1.009765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     974492 s       2036 s     112649 s     769447 s         61 s
#2  3503 MHz     629292 s       5420 s     102770 s    1273144 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - ForwardDiff                   0.2.5
 - JSON                          0.7.0
3 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.1
 - NaNMath                       0.2.1
INFO: Testing ForwardDiff
Testing Partials...
  ...testing Partials{0,Int64}
  ...testing Partials{0,Float32}
  ...testing Partials{0,Float64}
  ...testing Partials{3,Int64}
  ...testing Partials{3,Float32}
  ...testing Partials{3,Float64}
done (took 0.922118087 seconds).
Testing Dual...
  ...testing Dual{0,Int64} and Dual{0,Dual{0,Int64}}
  ...testing Dual{0,Float32} and Dual{0,Dual{0,Float32}}
  ...testing Dual{0,Int64} and Dual{0,Dual{4,Int64}}
  ...testing Dual{0,Float32} and Dual{0,Dual{4,Float32}}
  ...testing Dual{3,Int64} and Dual{3,Dual{0,Int64}}
  ...testing Dual{3,Float32} and Dual{3,Dual{0,Float32}}
  ...testing Dual{3,Int64} and Dual{3,Dual{4,Int64}}
  ...testing Dual{3,Float32} and Dual{3,Dual{4,Float32}}
done (took 9.690873431 seconds).
Testing derivative functionality...
  ...testing DerivativeTest.deriv_test_1
  ...testing DerivativeTest.deriv_test_2
  ...testing DerivativeTest.deriv_test_3
  ...testing DerivativeTest.deriv_test_4
  ...testing DerivativeTest.deriv_test_5
  ...testing DerivativeTest.deriv_test_6
done (took 0.397141589 seconds).
Testing gradient functionality...
  ...testing GradientTest.rosenbrock with (chunk size = 1) and (usecache = true)
  ...testing GradientTest.rosenbrock with (chunk size = 1) and (usecache = false)
  ...testing GradientTest.rosenbrock with (chunk size = 3) and (usecache = true)
  ...testing GradientTest.rosenbrock with (chunk size = 3) and (usecache = false)
  ...testing GradientTest.rosenbrock with (chunk size = 5) and (usecache = true)
  ...testing GradientTest.rosenbrock with (chunk size = 5) and (usecache = false)
  ...testing GradientTest.rosenbrock with (chunk size = 10) and (usecache = true)
  ...testing GradientTest.rosenbrock with (chunk size = 10) and (usecache = false)
  ...testing GradientTest.ackley with (chunk size = 1) and (usecache = true)
  ...testing GradientTest.ackley with (chunk size = 1) and (usecache = false)
  ...testing GradientTest.ackley with (chunk size = 3) and (usecache = true)
  ...testing GradientTest.ackley with (chunk size = 3) and (usecache = false)
  ...testing GradientTest.ackley with (chunk size = 5) and (usecache = true)
  ...testing GradientTest.ackley with (chunk size = 5) and (usecache = false)
  ...testing GradientTest.ackley with (chunk size = 10) and (usecache = true)
  ...testing GradientTest.ackley with (chunk size = 10) and (usecache = false)
  ...testing GradientTest.self_weighted_logit with (chunk size = 1) and (usecache = true)
  ...testing GradientTest.self_weighted_logit with (chunk size = 1) and (usecache = false)
  ...testing GradientTest.self_weighted_logit with (chunk size = 3) and (usecache = true)
  ...testing GradientTest.self_weighted_logit with (chunk size = 3) and (usecache = false)
  ...testing GradientTest.self_weighted_logit with (chunk size = 5) and (usecache = true)
  ...testing GradientTest.self_weighted_logit with (chunk size = 5) and (usecache = false)
  ...testing GradientTest.self_weighted_logit with (chunk size = 10) and (usecache = true)
  ...testing GradientTest.self_weighted_logit with (chunk size = 10) and (usecache = false)
done (took 2.727032336 seconds).
Testing jacobian functionality...
  ...testing JacobianTest.chebyquad with (chunk size = 1) and (usecache = true)
  ...testing JacobianTest.chebyquad! with (chunk size = 1) and (usecache = true)
  ...testing JacobianTest.chebyquad with (chunk size = 1) and (usecache = false)
  ...testing JacobianTest.chebyquad! with (chunk size = 1) and (usecache = false)
  ...testing JacobianTest.chebyquad with (chunk size = 3) and (usecache = true)
  ...testing JacobianTest.chebyquad! with (chunk size = 3) and (usecache = true)
  ...testing JacobianTest.chebyquad with (chunk size = 3) and (usecache = false)
  ...testing JacobianTest.chebyquad! with (chunk size = 3) and (usecache = false)
  ...testing JacobianTest.chebyquad with (chunk size = 5) and (usecache = true)
  ...testing JacobianTest.chebyquad! with (chunk size = 5) and (usecache = true)
  ...testing JacobianTest.chebyquad with (chunk size = 5) and (usecache = false)
  ...testing JacobianTest.chebyquad! with (chunk size = 5) and (usecache = false)
  ...testing JacobianTest.chebyquad with (chunk size = 10) and (usecache = true)
  ...testing JacobianTest.chebyquad! with (chunk size = 10) and (usecache = true)
  ...testing JacobianTest.chebyquad with (chunk size = 10) and (usecache = false)
  ...testing JacobianTest.chebyquad! with (chunk size = 10) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 1) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 1) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 1) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 1) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 3) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 3) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 3) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 3) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 5) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 5) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 5) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 5) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 10) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 10) and (usecache = true)
  ...testing JacobianTest.brown_almost_linear with (chunk size = 10) and (usecache = false)
  ...testing JacobianTest.brown_almost_linear! with (chunk size = 10) and (usecache = false)
  ...testing JacobianTest.trigonometric with (chunk size = 1) and (usecache = true)
  ...testing JacobianTest.trigonometric! with (chunk size = 1) and (usecache = true)
  ...testing JacobianTest.trigonometric with (chunk size = 1) and (usecache = false)
  ...testing JacobianTest.trigonometric! with (chunk size = 1) and (usecache = false)
  ...testing JacobianTest.trigonometric with (chunk size = 3) and (usecache = true)
  ...testing JacobianTest.trigonometric! with (chunk size = 3) and (usecache = true)
  ...testing JacobianTest.trigonometric with (chunk size = 3) and (usecache = false)
  ...testing JacobianTest.trigonometric! with (chunk size = 3) and (usecache = false)
  ...testing JacobianTest.trigonometric with (chunk size = 5) and (usecache = true)
  ...testing JacobianTest.trigonometric! with (chunk size = 5) and (usecache = true)
  ...testing JacobianTest.trigonometric with (chunk size = 5) and (usecache = false)
  ...testing JacobianTest.trigonometric! with (chunk size = 5) and (usecache = false)
  ...testing JacobianTest.trigonometric with (chunk size = 10) and (usecache = true)
  ...testing JacobianTest.trigonometric! with (chunk size = 10) and (usecache = true)
  ...testing JacobianTest.trigonometric with (chunk size = 10) and (usecache = false)
  ...testing JacobianTest.trigonometric! with (chunk size = 10) and (usecache = false)
done (took 3.508058154 seconds).
Testing hessian functionality...
  ...testing HessianTest.rosenbrock with (chunk size = 1) and (usecache = true)
  ...testing HessianTest.rosenbrock with (chunk size = 1) and (usecache = false)
  ...testing HessianTest.rosenbrock with (chunk size = 3) and (usecache = true)
  ...testing HessianTest.rosenbrock with (chunk size = 3) and (usecache = false)
  ...testing HessianTest.rosenbrock with (chunk size = 5) and (usecache = true)
  ...testing HessianTest.rosenbrock with (chunk size = 5) and (usecache = false)
  ...testing HessianTest.rosenbrock with (chunk size = 10) and (usecache = true)
  ...testing HessianTest.rosenbrock with (chunk size = 10) and (usecache = false)
  ...testing HessianTest.ackley with (chunk size = 1) and (usecache = true)
  ...testing HessianTest.ackley with (chunk size = 1) and (usecache = false)
  ...testing HessianTest.ackley with (chunk size = 3) and (usecache = true)
  ...testing HessianTest.ackley with (chunk size = 3) and (usecache = false)
  ...testing HessianTest.ackley with (chunk size = 5) and (usecache = true)
  ...testing HessianTest.ackley with (chunk size = 5) and (usecache = false)
  ...testing HessianTest.ackley with (chunk size = 10) and (usecache = true)
  ...testing HessianTest.ackley with (chunk size = 10) and (usecache = false)
  ...testing HessianTest.self_weighted_logit with (chunk size = 1) and (usecache = true)
  ...testing HessianTest.self_weighted_logit with (chunk size = 1) and (usecache = false)
  ...testing HessianTest.self_weighted_logit with (chunk size = 3) and (usecache = true)
  ...testing HessianTest.self_weighted_logit with (chunk size = 3) and (usecache = false)
  ...testing HessianTest.self_weighted_logit with (chunk size = 5) and (usecache = true)
  ...testing HessianTest.self_weighted_logit with (chunk size = 5) and (usecache = false)
  ...testing HessianTest.self_weighted_logit with (chunk size = 10) and (usecache = true)
  ...testing HessianTest.self_weighted_logit with (chunk size = 10) and (usecache = false)
done (took 9.229497159 seconds).
Testing miscellaneous functionality...
done (took 5.701015866 seconds).
INFO: ForwardDiff tests passed

>>> End of log
