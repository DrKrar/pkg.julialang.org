>>> 'Pkg.add("Synchrony")' log
INFO: Cloning cache of Synchrony from https://github.com/simonster/Synchrony.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing DSP v0.1.1
INFO: Installing NumericExtensions v0.6.2
INFO: Installing NumericFuns v0.2.4
INFO: Installing Polynomials v0.0.6
INFO: Installing Reexport v0.0.3
INFO: Installing Synchrony v0.0.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Synchrony
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Synchrony")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (975.4140625 MB free)
Uptime: 27114.0 sec
Load Avg:  0.84033203125  0.93359375  1.005859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1313996 s       1620 s     165998 s     816968 s        238 s
#2  3499 MHz     485628 s       5467 s      81298 s    1970044 s         22 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - Synchrony                     0.0.1
7 additional packages:
 - ArrayViews                    0.6.4
 - Compat                        0.8.8
 - DSP                           0.1.1
 - NumericExtensions             0.6.2
 - NumericFuns                   0.2.4
 - Polynomials                   0.0.6
 - Reexport                      0.0.3
INFO: Testing Synchrony
Running tests:
 * multitaper.jl
WARNING: could not import Base.add! into NumericExtensions
ERROR: LoadError: LoadError: LoadError: LoadError: LoadError: MethodError: no method matching Union(::Type{DenseArray{T,1}}, ::Type{DenseArray{T,2}})
Closest candidates are:
  Union{T}(::Any) at sysimg.jl:53
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/Synchrony/test/runtests.jl:12 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/NumericExtensions/src/common.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.5/NumericExtensions/src/NumericExtensions.jl, in expression starting on line 116
while loading /home/vagrant/.julia/v0.5/Synchrony/src/Synchrony.jl, in expression starting on line 21
while loading /home/vagrant/.julia/v0.5/Synchrony/test/multitaper.jl, in expression starting on line 1
while loading /home/vagrant/.julia/v0.5/Synchrony/test/runtests.jl, in expression starting on line 10
==============================[ ERROR: Synchrony ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Synchrony/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Synchrony had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
