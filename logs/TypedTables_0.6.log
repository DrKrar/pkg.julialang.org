>>> 'Pkg.add("TypedTables")' log
INFO: Installing NullableArrays v0.0.10
INFO: Installing Reexport v0.0.3
INFO: Installing TypedTables v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of TypedTables
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TypedTables")' log
Julia Version 0.6.0-dev.1847
Commit 8f9036a (2017-01-02 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (390.94921875 MB free)
Uptime: 33985.0 sec
Load Avg:  1.01806640625  1.001953125  0.97705078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz    1684590 s       1254 s     159816 s    1217468 s         88 s
#2  3492 MHz     480138 s       5061 s      78790 s    2749653 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - TypedTables                   0.1.2
20 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - Distributions                 0.11.1
 - GenerativeModels              0.0.0-             master (unregistered)
 - Iterators                     0.2.0
 - LaTeXStrings                  0.2.0
 - NullableArrays                0.0.10
 - PDMats                        0.5.2
 - POMDPBounds                   0.0.0-             master (unregistered)
 - POMDPModels                   0.0.0-             master (unregistered)
 - POMDPToolbox                  0.0.0-             master (unregistered)
 - POMDPs                        0.4.0
 - Reexport                      0.0.3
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - TikzPictures                  0.3.5
 - URIParser                     0.1.6
INFO: Computing test dependencies for TypedTables...
INFO: Installing BaseTestNext v0.2.2
INFO: Testing TypedTables
Cell:
 ┌───┐
 │ A │
 ├───┤
 │ 1 │
 └───┘
3-row Column:
    ╒═══╕
Row │ A │
    ├───┤
  1 │ 1 │
  2 │ 2 │
  3 │ 3 │
    ╘═══╛
2-column Row:
 ╓───┬────────╖
 ║ A │ B      ║
 ╟───┼────────╢
 ║ 1 │ 2.0000 ║
 ╙───┴────────╜
Introspection: Error During Test
  Test threw an exception of type MethodError
  Expression: names(@inferred(rename(r,Val{:A},Val{:A_new}))) == (:A_new,:B)
  MethodError: no method matching columnindex(::Tuple{Symbol,Symbol}, ::Symbol)
  The applicable method may be too new: running in world age 20568, while current world is 20844.
  Closest candidates are:
    columnindex{N}(::Tuple{Vararg{Symbol,N}}, ::Symbol) at /home/vagrant/.julia/v0.6/TypedTables/src/Row.jl:93 (method too new to be called from this world context.)
    columnindex{N}(::Tuple{Vararg{Symbol,N}}, ::Any) at /home/vagrant/.julia/v0.6/TypedTables/src/Row.jl:91 (method too new to be called from this world context.)
    columnindex{N,M}(::Tuple{Vararg{Symbol,N}}, !Matched::Tuple{Vararg{Symbol,M}}) at /home/vagrant/.julia/v0.6/TypedTables/src/Row.jl:101 (method too new to be called from this world context.)
  Stacktrace:
   [1] rename(...) at /home/vagrant/.julia/v0.6/TypedTables/src/Row.jl:82
   [2] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/test_row.jl:29 [inlined]
   [3] macro expansion; at ./test.jl:714 [inlined]
   [4] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/test_row.jl:0 [inlined]
   [5] macro expansion; at ./test.jl:714 [inlined]
   [6] anonymous at ./<missing>:?
   [7] include_from_node1(::String) at ./loading.jl:532
   [8] include(::String) at ./sysimg.jl:14
   [9] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/runtests.jl:15 [inlined]
   [10] macro expansion; at ./test.jl:714 [inlined]
   [11] anonymous at ./<missing>:?
   [12] include_from_node1(::String) at ./loading.jl:532
   [13] include(::String) at ./sysimg.jl:14
   [14] process_options(::Base.JLOptions) at ./client.jl:298
   [15] _start() at ./client.jl:364
Introspection: Test Failed
  Expression: @Row(A::Int64=1,B::Float64=2.0) == @Row(B::Float64=2.0,A::Int64=1)
   Evaluated: 2-column Row:
 ╓───┬────────╖
 ║ A │ B      ║
 ╟───┼────────╢
 ║ 1 │ 2.0000 ║
 ╙───┴────────╜ == 2-column Row:
 ╓────────┬───╖
 ║ B      │ A ║
 ╟────────┼───╢
 ║ 2.0000 │ 1 ║
 ╙────────┴───╜
Stacktrace:
 [1] record(::Base.Test.DefaultTestSet, ::Base.Test.Fail) at ./test.jl:433
 [2] do_test(::Base.Test.Returned, ::Expr) at ./test.jl:284
 [3] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/test_row.jl:32 [inlined]
 [4] macro expansion; at ./test.jl:714 [inlined]
 [5] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/test_row.jl:0 [inlined]
 [6] macro expansion; at ./test.jl:714 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/runtests.jl:15 [inlined]
 [11] macro expansion; at ./test.jl:714 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:532
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:298
 [16] _start() at ./client.jl:364
Accessing and iterating: Error During Test
  Test threw an exception of type MethodError
  Expression: permutecols(r,Val{(:B,:A)}) == Row{(:B,:A)}((2.0,1))
  MethodError: no method matching permutator(::Tuple{Symbol,Symbol}, ::Tuple{Symbol,Symbol})
  The applicable method may be too new: running in world age 20593, while current world is 20844.
  Closest candidates are:
    permutator{N}(::Tuple{Vararg{Symbol,N}}, ::Tuple{Vararg{Symbol,N}}) at /home/vagrant/.julia/v0.6/TypedTables/src/Row.jl:168 (method too new to be called from this world context.)
  Stacktrace:
   [1] permutecols(...) at /home/vagrant/.julia/v0.6/TypedTables/src/Row.jl:160
   [2] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/test_row.jl:48 [inlined]
   [3] macro expansion; at ./test.jl:714 [inlined]
   [4] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/test_row.jl:0 [inlined]
   [5] macro expansion; at ./test.jl:714 [inlined]
   [6] anonymous at ./<missing>:?
   [7] include_from_node1(::String) at ./loading.jl:532
   [8] include(::String) at ./sysimg.jl:14
   [9] macro expansion; at /home/vagrant/.julia/v0.6/TypedTables/test/runtests.jl:15 [inlined]
   [10] macro expansion; at ./test.jl:714 [inlined]
   [11] anonymous at ./<missing>:?
   [12] include_from_node1(::String) at ./loading.jl:532
   [13] include(::String) at ./sysimg.jl:14
   [14] process_options(::Base.JLOptions) at ./client.jl:298
   [15] _start() at ./client.jl:364
3-row × 2-column Table:
    ╔═══╤════════╗
Row ║ A │ B      ║
    ╟───┼────────╢
  1 ║ 1 │ 2.0000 ║
  2 ║ 2 │ 4.0000 ║
  3 ║ 3 │ 6.0000 ║
    ╚═══╧════════╝
ERROR: LoadError: Some tests did not pass: 186 passed, 1 failed, 2 errored, 0 broken.
Stacktrace:
 [1] finish(::Base.Test.DefaultTestSet) at ./test.jl:524
 [2] macro expansion; at ./test.jl:721 [inlined]
 [3] anonymous at ./<missing>:?
 [4] include_from_node1(::String) at ./loading.jl:532
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:298
 [7] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/TypedTables/test/runtests.jl, in expression starting on line 11
=============================[ ERROR: TypedTables ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/TypedTables/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
ERROR: TypedTables had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
