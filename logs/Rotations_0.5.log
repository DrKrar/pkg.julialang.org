>>> 'Pkg.add("Rotations")' log
INFO: Installing Rotations v0.3.0
INFO: Installing StaticArrays v0.0.4
INFO: Package database updated

>>> 'Pkg.test("Rotations")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (714.66796875 MB free)
Uptime: 20545.0 sec
Load Avg:  0.98046875  0.9794921875  0.9560546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     985738 s       1620 s     126098 s     619843 s        217 s
#2  3499 MHz     327524 s       5467 s      65802 s    1518591 s         21 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - Rotations                     0.3.0
2 additional packages:
 - Compat                        0.8.8
 - StaticArrays                  0.0.4
INFO: Computing test dependencies for Rotations...
INFO: Installing Calculus v0.1.15
INFO: Installing ForwardDiff v0.2.3
INFO: Installing NaNMath v0.2.1
INFO: Testing Rotations
Test Summary:   |   Pass   Total
  Rotations Tests | 128878  128878
Jacobian (Quat -> RotMatrix): Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching jacobian_dual_type(::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4})
  Closest candidates are:
    jacobian_dual_type{T,M,N}(!Matched::Array{T,M}, ::ForwardDiff.Chunk{N}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:19
   in multithread_jacobian_cachefetch!(::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:33
   in jacobian_cachefetch! at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:36 [inlined]
   in compute_vector_mode_jacobian(::##1#8, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:126
   in vector_mode_jacobian at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:144 [inlined]
   in #jacobian#35(::Bool, ::Bool, ::Function, ::Function, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:23
   in jacobian(::Function, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:22
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:20 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:14 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Jacobian (SPQuat -> Quat): Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching jacobian_dual_type(::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3})
  Closest candidates are:
    jacobian_dual_type{T,M,N}(!Matched::Array{T,M}, ::ForwardDiff.Chunk{N}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:19
   in multithread_jacobian_cachefetch!(::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:33
   in jacobian_cachefetch! at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:36 [inlined]
   in compute_vector_mode_jacobian(::##2#9, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:126
   in vector_mode_jacobian at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:144 [inlined]
   in #jacobian#35(::Bool, ::Bool, ::Function, ::Function, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:23
   in jacobian(::Function, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:22
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:36 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:29 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Jacobian (Quat -> SPQuat): Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching jacobian_dual_type(::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4})
  Closest candidates are:
    jacobian_dual_type{T,M,N}(!Matched::Array{T,M}, ::ForwardDiff.Chunk{N}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:19
   in multithread_jacobian_cachefetch!(::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:33
   in jacobian_cachefetch! at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:36 [inlined]
   in compute_vector_mode_jacobian(::##3#10, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:126
   in vector_mode_jacobian at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:144 [inlined]
   in #jacobian#35(::Bool, ::Bool, ::Function, ::Function, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:23
   in jacobian(::Function, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:22
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:52 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:46 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Jacobian (SPQuat -> RotMatrix): Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching jacobian_dual_type(::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3})
  Closest candidates are:
    jacobian_dual_type{T,M,N}(!Matched::Array{T,M}, ::ForwardDiff.Chunk{N}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:19
   in multithread_jacobian_cachefetch!(::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:33
   in jacobian_cachefetch! at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:36 [inlined]
   in compute_vector_mode_jacobian(::##4#11, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:126
   in vector_mode_jacobian at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:144 [inlined]
   in #jacobian#35(::Bool, ::Bool, ::Function, ::Function, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:23
   in jacobian(::Function, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:22
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:68 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:62 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Jacobian (RotMatrix rotation): Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching jacobian_dual_type(::StaticArrays.SVector{9,Float64}, ::ForwardDiff.Chunk{9})
  Closest candidates are:
    jacobian_dual_type{T,M,N}(!Matched::Array{T,M}, ::ForwardDiff.Chunk{N}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:19
   in multithread_jacobian_cachefetch!(::StaticArrays.SVector{9,Float64}, ::ForwardDiff.Chunk{9}, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:33
   in jacobian_cachefetch! at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:36 [inlined]
   in compute_vector_mode_jacobian(::##5#12, ::StaticArrays.SVector{9,Float64}, ::ForwardDiff.Chunk{9}, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:126
   in vector_mode_jacobian at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:144 [inlined]
   in #jacobian#35(::Bool, ::Bool, ::Function, ::Function, ::StaticArrays.SVector{9,Float64}, ::ForwardDiff.Chunk{9}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:23
   in jacobian(::Function, ::StaticArrays.SVector{9,Float64}, ::ForwardDiff.Chunk{9}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:22
   in Type; at ./sysimg.jl:53 [inlined]
   in randn; at ./random.jl:132 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:128 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:125 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Jacobian (Quat rotation): Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching jacobian_dual_type(::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4})
  Closest candidates are:
    jacobian_dual_type{T,M,N}(!Matched::Array{T,M}, ::ForwardDiff.Chunk{N}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:19
   in multithread_jacobian_cachefetch!(::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:33
   in jacobian_cachefetch! at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:36 [inlined]
   in compute_vector_mode_jacobian(::##6#13, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:126
   in vector_mode_jacobian at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:144 [inlined]
   in #jacobian#35(::Bool, ::Bool, ::Function, ::Function, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:23
   in jacobian(::Function, ::StaticArrays.SVector{4,Float64}, ::ForwardDiff.Chunk{4}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:22
   in randn; at ./random.jl:148 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:144 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:141 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:125 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Jacobian (SPQuat rotation): Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: no method matching jacobian_dual_type(::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3})
  Closest candidates are:
    jacobian_dual_type{T,M,N}(!Matched::Array{T,M}, ::ForwardDiff.Chunk{N}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:19
   in multithread_jacobian_cachefetch!(::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:33
   in jacobian_cachefetch! at /home/vagrant/.julia/v0.5/ForwardDiff/src/cache.jl:36 [inlined]
   in compute_vector_mode_jacobian(::##7#14, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}, ::Bool) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:126
   in vector_mode_jacobian at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:144 [inlined]
   in #jacobian#35(::Bool, ::Bool, ::Function, ::Function, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:23
   in jacobian(::Function, ::StaticArrays.SVector{3,Float64}, ::ForwardDiff.Chunk{3}) at /home/vagrant/.julia/v0.5/ForwardDiff/src/jacobian.jl:22
   in randn; at ./random.jl:164 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:160 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at ./test.jl:157 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:141 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:125 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Test Summary:                      | Error  Total
  Derivative checks                |     7      7
  Jacobian checks                  |     7      7
  Jacobian (Quat -> RotMatrix)     |     1      1
  Jacobian (SPQuat -> Quat)        |     1      1
  Jacobian (Quat -> SPQuat)        |     1      1
  Jacobian (SPQuat -> RotMatrix)   |     1      1
  Jacobian (RotMatrix rotation)    |     1      1
  Jacobian (Quat rotation)         |     1      1
  Jacobian (SPQuat rotation)       |     1      1
ERROR: LoadError: LoadError: Some tests did not pass: 0 passed, 0 failed, 7 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:495
 in macro expansion; at ./test.jl:679 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:125 [inlined]
 in macro expansion; at ./test.jl:672 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl:11 [inlined]
 in macro expansion; at ./test.jl:672 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Rotations/test/derivative_tests.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.5/Rotations/test/runtests.jl, in expression starting on line 8
==============================[ ERROR: Rotations ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Rotations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Calculus v0.1.15
INFO: Removing ForwardDiff v0.2.3
INFO: Removing NaNMath v0.2.1
ERROR: Rotations had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
