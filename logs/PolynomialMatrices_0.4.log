>>> 'Pkg.add("PolynomialMatrices")' log
INFO: Cloning cache of PolynomialMatrices from https://github.com/neveritt/PolynomialMatrices.jl.git
INFO: Installing DataStructures v0.5.3
INFO: Installing PolynomialMatrices v0.1.0
INFO: Installing Polynomials v0.1.4
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PolynomialMatrices
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PolynomialMatrices")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (441.2578125 MB free)
Uptime: 18827.0 sec
Load Avg:  1.02294921875  1.078125  1.05322265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     879252 s       6843 s      70095 s     732867 s         58 s
#2  3500 MHz     588650 s         43 s      59072 s    1163595 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.3
 - PolynomialMatrices            0.1.0
3 additional packages:
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Polynomials                   0.1.4
INFO: Testing PolynomialMatrices
WARNING: New definition 
    +(#M2<:AbstractArray, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, #N<:Any}) at /home/vagrant/.julia/v0.4/PolynomialMatrices/src/arithmetic.jl:170
is ambiguous with: 
    +(Base.Range{#S<:Any}, AbstractArray{#T<:Any, N<:Any}) at arraymath.jl:87.
To fix, define 
    +(_<:Base.Range{#S<:Any}, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, N<:Any})
before the new definition.
WARNING: New definition 
    -(#M2<:AbstractArray, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, #N<:Any}) at /home/vagrant/.julia/v0.4/PolynomialMatrices/src/arithmetic.jl:173
is ambiguous with: 
    -(Base.Range{#S<:Any}, AbstractArray{#T<:Any, N<:Any}) at arraymath.jl:87.
To fix, define 
    -(_<:Base.Range{#S<:Any}, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, N<:Any})
before the new definition.
WARNING: New definition 
    *(AbstractArray{#S<:Any, 2}, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, #N<:Any}) at /home/vagrant/.julia/v0.4/PolynomialMatrices/src/arithmetic.jl:176
is ambiguous with: 
    *(Base.LinAlg.Bidiagonal{#T<:Any}, AbstractArray{#T<:Any, 1}) at linalg/bidiag.jl:202.
To fix, define 
    *(Base.LinAlg.Bidiagonal{Polynomials.Poly{#T<:Any}}, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, 1})
before the new definition.
WARNING: New definition 
    *(AbstractArray{#S<:Any, 2}, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, #N<:Any}) at /home/vagrant/.julia/v0.4/PolynomialMatrices/src/arithmetic.jl:176
is ambiguous with: 
    *(PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, #N<:Any}, AbstractArray{#S<:Any, 2}) at /home/vagrant/.julia/v0.4/PolynomialMatrices/src/arithmetic.jl:175.
To fix, define 
    *(PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, 2}, PolynomialMatrices.PolyMatrix{#T<:Any, #M1<:Any, Base.Val{#V<:Any}, 2})
before the new definition.
WARNING: PolyMatrix: lengt(d) == 0
WARNING: PolyMatrix: size of elements not consistent
WARNING: PolyMatrix: dimensions are not consistent
WARNING: PolyMatrix: dimensions are not consistent
ERROR: LoadError: LoadError: test error in expression: !(isapprox(pm2,pm3))
MethodError: `rtoldefault` has no method matching rtoldefault(::Type{Polynomials.Poly{Float64}}, ::Type{Polynomials.Poly{Float64}})
 in anonymous at test.jl:92
 in do_test at test.jl:50
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
 in anonymous at test.jl:92
 in do_test at test.jl:50
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:333
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/PolynomialMatrices/test/methods.jl, in expression starting on line 17
while loading /home/vagrant/.julia/v0.4/PolynomialMatrices/test/runtests.jl, in expression starting on line 6
=========================[ ERROR: PolynomialMatrices ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/PolynomialMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolynomialMatrices had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
