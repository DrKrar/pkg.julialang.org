>>> 'Pkg.add("PGFPlots")' log
INFO: Cloning cache of ColorBrewer from https://github.com/timothyrenner/ColorBrewer.jl.git
INFO: Cloning cache of PGFPlots from https://github.com/sisl/PGFPlots.jl.git
INFO: Cloning cache of TikzPictures from https://github.com/sisl/TikzPictures.jl.git
INFO: Installing ColorBrewer v0.3.0
INFO: Installing ColorTypes v0.2.1
INFO: Installing ColorVectorSpace v0.1.1
INFO: Installing Colors v0.6.3
INFO: Installing Docile v0.5.23
INFO: Installing FileIO v0.0.4
INFO: Installing FixedPointNumbers v0.1.2
INFO: Installing Graphics v0.1.3
INFO: Installing Images v0.5.3
INFO: Installing LaTeXStrings v0.1.6
INFO: Installing PGFPlots v1.3.2
INFO: Installing Reexport v0.0.3
INFO: Installing SIUnits v0.0.6
INFO: Installing TexExtensions v0.0.3
INFO: Installing TikzPictures v0.3.1
INFO: Installing Zlib v0.1.12
INFO: Package database updated

>>> 'Pkg.test("PGFPlots")' log
Julia Version 0.5.0-dev+2918
Commit 1eacbbb (2016-02-28 16:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing PGFPlots
WARNING: New definition 
    sub(Images.AbstractImage, Union{T<:Real, AbstractArray{T<:Real, N<:Any}, Base.Colon}...) at /home/vagrant/.julia/v0.5/Images/src/core.jl:473
is ambiguous with: 
    sub(AbstractArray, Union{Real, AbstractArray{T<:Any, 1}, Base.Colon}...) at subarray.jl:98.
To fix, define 
    sub(Images.AbstractImage, Union{AbstractArray{T<:Real, 1}, Real, Base.Colon}...)
before the new definition.
WARNING: New definition 
    slice(Images.AbstractImage, Union{T<:Real, AbstractArray{T<:Real, N<:Any}, Base.Colon}...) at /home/vagrant/.julia/v0.5/Images/src/core.jl:478
is ambiguous with: 
    slice(AbstractArray, Union{Real, AbstractArray{T<:Any, 1}, Base.Colon}...) at subarray.jl:86.
To fix, define 
    slice(Images.AbstractImage, Union{AbstractArray{T<:Real, 1}, Real, Base.Colon}...)
before the new definition.
WARNING: Method definition sliceim(Images.AbstractImage, AbstractString, Union{T<:Real, AbstractArray{T<:Real, N<:Any}, Base.Colon}, Any...) in module Images at /home/vagrant/.julia/v0.5/Images/src/core.jl:585 overwritten at /home/vagrant/.julia/v0.5/Images/src/core.jl:587.
ERROR: LoadError: LoadError: error in method definition: function Base.take must be explicitly imported to be extended
 in include(::UTF8String) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Images/src/map.jl, in expression starting on line 494
while loading /home/vagrant/.julia/v0.5/Images/src/Images.jl, in expression starting on line 35
ERROR: LoadError: LoadError: LoadError: Failed to precompile Images to /home/vagrant/.julia/lib/v0.5/Images.ji
 in error(::ASCIIString) at ./error.jl:21
 in compilecache(::ASCIIString) at ./loading.jl:496
 in require(::Symbol) at ./loading.jl:355
 in include(::UTF8String) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PGFPlots/src/colormaps.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.5/PGFPlots/src/PGFPlots.jl, in expression starting on line 11
while loading /home/vagrant/.julia/v0.5/PGFPlots/test/runtests.jl, in expression starting on line 1
==============================[ ERROR: PGFPlots ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/PGFPlots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("PGFPlots had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::UTF8String) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
