>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.0
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (890.2421875 MB free)
Uptime: 15885.0 sec
Load Avg:  0.99609375  1.0048828125  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     658241 s        123 s      78890 s     658222 s         64 s
#2  3500 MHz     451563 s         39 s      67230 s     972616 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.6.0
3 additional packages:
 - Compat                        0.8.6
 - MacroTools                    0.3.0
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 62612.966   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.99189e-12  final value -37.2237      factorizations 16
  4.337086 seconds (3.10 M allocations: 237.047 MB, 2.61% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.5489     17.5        17.5        0.0897      0.0         
2           32.0064     9.03        9.03        0.0737      -0.2        
3           22.9737     6.74        6.74        0.0929      -0.6        
4           16.2338     5.17        5.17        0.156       -1.2        
5           11.0622     3.12        3.12        0.258       -2.0        
6           7.93802     0.834       0.834       0.257       -3.1        
7           7.10426     0.0252      0.0252      0.0807      -4.3        
8           7.07906     1.19e-05    1.19e-05    0.00248     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   7.079047    

                     final grad:   3.441051e-06

                     final lambda: 0.0000000e+00

                     time / iter:  805   ms

                     total time:   7.24  seconds, of which

                     derivs:     0.4 %

                     back pass:  92.3%

                     fwd pass:   2.2 %

                     other:      5.0 % (graphics etc.)
 =========== end iLQG ===========
 17.042279 seconds (14.45 M allocations: 927.049 MB, 3.51% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
