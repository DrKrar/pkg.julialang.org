>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (931.6796875 MB free)
Uptime: 18689.0 sec
Load Avg:  1.1572265625  1.03271484375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     714630 s         70 s      79646 s     870705 s         38 s
#2  3499 MHz     557211 s         76 s      69413 s    1135313 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.8.8
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 65899.537   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.00571e-12  final value -39.4669      factorizations 13
  4.297607 seconds (3.10 M allocations: 222.748 MB, 2.97% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.9916     24.7        24.7        0.108       0.0         
2           24.2759     9.27        9.27        0.0781      -0.2        
3           15.0067     4.66        4.66        0.0771      -0.6        
4           10.344      2.86        2.86        0.103       -1.2        
5           7.48105     1.64        1.64        0.153       -2.0        
6           5.84366     0.541       0.541       0.179       -3.1        
7           5.30275     0.0341      0.0341      0.0594      -4.3        
8           5.26864     3.92e-05    3.92e-05    0.00236     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.268604    

                     final grad:   3.872572e-06

                     final lambda: 0.0000000e+00

                     time / iter:  921   ms

                     total time:   8.29  seconds, of which

                     derivs:     0.6 %

                     back pass:  94.9%

                     fwd pass:   1.3 %

                     other:      3.2 % (graphics etc.)
 =========== end iLQG ===========
 20.668863 seconds (14.46 M allocations: 927.168 MB, 3.10% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
