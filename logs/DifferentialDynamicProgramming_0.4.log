>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.4
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1068.59765625 MB free)
Uptime: 19951.0 sec
Load Avg:  1.06591796875  1.06787109375  1.05224609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     958070 s       7351 s      82344 s     727347 s         66 s
#2  3499 MHz     587709 s         58 s      77032 s    1264243 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.2
3 additional packages:
 - Compat                        0.15.0
 - MacroTools                    0.3.4
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 62335.199   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 3.17214e-12  final value -39.0552      factorizations 16
  3.414412 seconds (3.10 M allocations: 238.346 MB, 3.89% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.599      12.4        12.4        0.075       0.0         
2           37.233      10.2        10.2        0.0818      -0.2        
3           26.9853     9.56        9.56        0.119       -0.6        
4           17.4267     7.57        7.57        0.195       -1.2        
5           9.855       3.5         3.5         0.285       -2.0        
6           6.35998     0.795       0.795       0.278       -3.1        
7           5.56521     0.0413      0.0413      0.0899      -4.3        
8           5.52388     4.06e-05    4.06e-05    0.00306     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.523842    

            final grad:   4.679112e-06

            final lambda: 4.4841551e-08

            time / iter:  741   ms

            total time:   6.67  seconds, of which

            derivs:     0.9 %

            back pass:  92.1%

            fwd pass:   2.2 %

            other:      4.8 % (graphics etc.)
 =========== end iLQG ===========
 18.853058 seconds (14.73 M allocations: 920.731 MB, 3.19% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
