>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (866.84765625 MB free)
Uptime: 17533.0 sec
Load Avg:  1.064453125  1.0576171875  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     793654 s        109 s      79038 s     665059 s         29 s
#2  3499 MHz     481042 s       6710 s      67716 s    1111450 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.8.8
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 63842.167   
RESULT: Gradient norm smaller than tolerance.
iterations 12  gradient 2.74308e-12  final value -28.2923      factorizations 11
  3.769800 seconds (3.09 M allocations: 212.228 MB, 2.81% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.088      25.2        25.2        0.115       0.0         
2           25.8504     9.93        9.93        0.0868      -0.2        
3           15.9169     4.4         4.4         0.0839      -0.6        
4           11.515      3.25        3.25        0.128       -1.2        
5           8.26377     2.08        2.08        0.229       -2.0        
6           6.18812     0.429       0.429       0.208       -3.1        
7           5.75883     0.0205      0.0205      0.0613      -4.3        
8           5.73833     2.4e-05    2.4e-05    0.00224     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.738303    

                     final grad:   3.640957e-06

                     final lambda: 0.0000000e+00

                     time / iter:  695   ms

                     total time:   6.26  seconds, of which

                     derivs:     0.6 %

                     back pass:  92.2%

                     fwd pass:   2.0 %

                     other:      5.2 % (graphics etc.)
 =========== end iLQG ===========
 16.709269 seconds (14.46 M allocations: 927.122 MB, 3.34% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
