>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (887.85546875 MB free)
Uptime: 16381.0 sec
Load Avg:  1.11865234375  1.0927734375  1.06591796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     757370 s       5394 s      81371 s     585152 s         58 s
#2  3503 MHz     458974 s        378 s      76851 s    1026184 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61417.884   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.40017e-12  final value -40.6964      factorizations 14
  4.647665 seconds (3.10 M allocations: 225.959 MB, 2.82% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.5041     27          27          0.113       0.0         
2           22.517      9.71        9.71        0.0821      -0.2        
3           12.8075     3.81        3.81        0.0716      -0.6        
4           8.99542     2.1         2.1         0.0891      -1.2        
5           6.89743     1.14        1.14        0.153       -2.0        
6           5.76116     0.305       0.305       0.167       -3.1        
7           5.45576     0.0197      0.0197      0.0567      -4.3        
8           5.43608     2.36e-05    2.36e-05    0.00213     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.436054    

                     final grad:   3.512025e-06

                     final lambda: 0.0000000e+00

                     time / iter:  792   ms

                     total time:   7.12  seconds, of which

                     derivs:     0.9 %

                     back pass:  93.3%

                     fwd pass:   1.6 %

                     other:      4.1 % (graphics etc.)
 =========== end iLQG ===========
 20.592412 seconds (14.46 M allocations: 927.169 MB, 3.18% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
