>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (886.19140625 MB free)
Uptime: 16195.0 sec
Load Avg:  1.41357421875  1.08251953125  1.01220703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     705465 s         79 s      76164 s     647640 s         35 s
#2  3499 MHz     504080 s         83 s      67018 s     937222 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.6.0
3 additional packages:
 - Compat                        0.8.7
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 59434.965   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.21156e-12  final value -32.9459      factorizations 14
  3.427862 seconds (3.10 M allocations: 226.970 MB, 2.99% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1975     14          14          0.0728      0.0         
2           36.2396     10.5        10.5        0.0748      -0.2        
3           25.782      9.21        9.21        0.104       -0.6        
4           16.5751     7.05        7.05        0.173       -1.2        
5           9.52677     3.42        3.42        0.259       -2.0        
6           6.1105      0.899       0.899       0.269       -3.1        
7           5.21162     0.0582      0.0582      0.0869      -4.3        
8           5.15341     6.71e-05    6.71e-05    0.00325     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.153344    

                     final grad:   5.139058e-06

                     final lambda: 0.0000000e+00

                     time / iter:  759   ms

                     total time:   6.83  seconds, of which

                     derivs:     0.6 %

                     back pass:  91.6%

                     fwd pass:   2.0 %

                     other:      5.8 % (graphics etc.)
 =========== end iLQG ===========
 17.230800 seconds (14.46 M allocations: 927.180 MB, 3.66% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
