>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.4
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1043.58203125 MB free)
Uptime: 18227.0 sec
Load Avg:  1.0205078125  0.9853515625  1.01513671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     832940 s       4448 s      74118 s     723813 s         53 s
#2  3499 MHz     559378 s       2106 s      65296 s    1109314 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.10.0
 - MacroTools                    0.3.4
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64238.656   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.28086e-12  final value -38.7268      factorizations 14
  3.350882 seconds (3.10 M allocations: 202.095 MB, 1.39% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.5957     18.8        18.8        0.0962      0.0         
2           31.8079     10.5        10.5        0.0872      -0.2        
3           21.3533     6.87        6.87        0.103       -0.6        
4           14.4853     4.37        4.37        0.148       -1.2        
5           10.1104     2.15        2.15        0.2         -2.0        
6           7.96221     0.585       0.585       0.22        -3.1        
7           7.37769     0.0342      0.0342      0.0739      -4.3        
8           7.34349     3.96e-05    3.96e-05    0.00267     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   7.343454    

                     final grad:   4.198156e-06

                     final lambda: 0.0000000e+00

                     time / iter:  798   ms

                     total time:   7.18  seconds, of which

                     derivs:     0.7 %

                     back pass:  93.1%

                     fwd pass:   1.6 %

                     other:      4.6 % (graphics etc.)
 =========== end iLQG ===========
 18.829531 seconds (14.46 M allocations: 876.686 MB, 2.76% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
