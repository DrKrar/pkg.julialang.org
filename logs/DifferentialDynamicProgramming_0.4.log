>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.4
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1085.95703125 MB free)
Uptime: 21747.0 sec
Load Avg:  0.86181640625  0.99462890625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     946998 s       5928 s      96528 s     860850 s        205 s
#2  3499 MHz     741472 s       1373 s      89060 s    1215035 s          9 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.2
3 additional packages:
 - Compat                        0.14.0
 - MacroTools                    0.3.4
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 65234.045   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.7168e-12  final value -28.3139      factorizations 16
  5.800050 seconds (3.10 M allocations: 240.291 MB, 2.52% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.7982     29.5        29.5        0.12        0.0         
2           21.3361     10.8        10.8        0.0851      -0.2        
3           10.5355     4.45        4.45        0.0746      -0.6        
4           6.08286     2.01        2.01        0.0902      -1.2        
5           4.06972     0.718       0.718       0.13        -2.0        
6           3.35125     0.163       0.163       0.14        -3.1        
7           3.18825     0.0114      0.0114      0.0505      -4.3        
8           3.17681     1.47e-05    1.47e-05    0.00203     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.176795    

            final grad:   3.371978e-06

            final lambda: 4.4841551e-08

            time / iter:  859   ms

            total time:   7.73  seconds, of which

            derivs:     0.7 %

            back pass:  92.0%

            fwd pass:   1.8 %

            other:      5.6 % (graphics etc.)
 =========== end iLQG ===========
 21.029528 seconds (14.73 M allocations: 920.730 MB, 2.96% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
