>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1042.6015625 MB free)
Uptime: 18420.0 sec
Load Avg:  1.0234375  1.00048828125  1.001953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     849160 s       6083 s      77922 s     717684 s         84 s
#2  3500 MHz     551181 s         64 s      74954 s    1133792 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 71001.726   
RESULT: Gradient norm smaller than tolerance.
iterations 12  gradient 3.04835e-12  final value -29.4442      factorizations 11
  4.724505 seconds (3.09 M allocations: 184.887 MB, 1.41% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.8212     20.1        20.1        0.1         0.0         
2           29.694      11.4        11.4        0.0903      -0.2        
3           18.245      6.35        6.35        0.0975      -0.6        
4           11.8961     2.98        2.98        0.108       -1.2        
5           8.9131      1.53        1.53        0.174       -2.0        
6           7.37979     0.51        0.51        0.224       -3.1        
7           6.86932     0.0325      0.0325      0.0711      -4.3        
8           6.83684     3.66e-05    3.66e-05    0.00239     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   6.836803    

                     final grad:   3.645947e-06

                     final lambda: 0.0000000e+00

                     time / iter:  904   ms

                     total time:   8.13  seconds, of which

                     derivs:     0.7 %

                     back pass:  91.8%

                     fwd pass:   1.9 %

                     other:      5.6 % (graphics etc.)
 =========== end iLQG ===========
 17.964321 seconds (14.46 M allocations: 876.715 MB, 3.15% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
