>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.5
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1068.5625 MB free)
Uptime: 21332.0 sec
Load Avg:  1.0791015625  1.068359375  1.11083984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     989005 s       7592 s      86668 s     813168 s         85 s
#2  3499 MHz     621887 s        162 s      77821 s    1335779 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.19.0
 - MacroTools                    0.3.5
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61248.383   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 2.84521e-12  final value -21.2671      factorizations 17
  5.693474 seconds (3.11 M allocations: 245.183 MB, 2.85% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.2277     29.4        29.4        0.123       0.0         
2           21.8186     10          10          0.0848      -0.2        
3           11.7756     4.16        4.16        0.0757      -0.6        
4           7.61955     2.13        2.13        0.0898      -1.2        
5           5.48698     0.852       0.852       0.135       -2.0        
6           4.6351      0.16        0.16        0.145       -3.1        
7           4.47499     0.0114      0.0114      0.0514      -4.3        
8           4.46354     1.57e-05    1.57e-05    0.00204     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.463527    

            final grad:   3.464503e-06

            final lambda: 4.4841551e-08

            time / iter:  985   ms

            total time:   8.86  seconds, of which

            derivs:     0.7 %

            back pass:  93.9%

            fwd pass:   1.4 %

            other:      4.0 % (graphics etc.)
 =========== end iLQG ===========
 23.008269 seconds (14.73 M allocations: 920.792 MB, 2.88% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
