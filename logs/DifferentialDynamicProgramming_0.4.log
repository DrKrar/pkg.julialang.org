>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.4
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1000.4921875 MB free)
Uptime: 18301.0 sec
Load Avg:  1.072265625  1.07568359375  1.05908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     805276 s        107 s      71862 s     773028 s         38 s
#2  3499 MHz     551436 s         51 s      67201 s    1158276 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.5
 - MacroTools                    0.3.4
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 73272.956   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 3.13241e-12  final value -32.8329      factorizations 15
  4.173468 seconds (3.10 M allocations: 207.528 MB, 1.37% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.7194     17.3        17.3        0.0896      0.0         
2           31.374      7.94        7.94        0.0742      -0.2        
3           23.436      5.03        5.03        0.0909      -0.6        
4           18.4079     4.22        4.22        0.159       -1.2        
5           14.1892     2.81        2.81        0.27        -2.0        
6           11.3819     0.64        0.64        0.297       -3.1        
7           10.7418     0.0167      0.0167      0.065       -4.3        
8           10.7251     1.15e-05    1.15e-05    0.00183     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   10.7251     

                     final grad:   2.868007e-06

                     final lambda: 0.0000000e+00

                     time / iter:  831   ms

                     total time:   7.48  seconds, of which

                     derivs:     0.8 %

                     back pass:  92.2%

                     fwd pass:   1.9 %

                     other:      5.1 % (graphics etc.)
 =========== end iLQG ===========
 19.743977 seconds (14.46 M allocations: 876.686 MB, 2.79% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
