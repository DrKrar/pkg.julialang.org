>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1040.0390625 MB free)
Uptime: 18190.0 sec
Load Avg:  1.22021484375  1.18896484375  1.05810546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     856706 s       2318 s      69939 s     715938 s         51 s
#2  3500 MHz     480900 s       4337 s      61370 s    1202615 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.3
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 62060.742   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.84703e-12  final value -36.0102      factorizations 13
  4.791387 seconds (3.10 M allocations: 195.448 MB, 1.27% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.503      18.2        18.2        0.0871      0.0         
2           30.2839     12          12          0.085       -0.2        
3           18.3229     7.32        7.32        0.0977      -0.6        
4           11.0055     4.09        4.09        0.112       -1.2        
5           6.91614     2.74        2.74        0.212       -2.0        
6           4.17247     0.728       0.728       0.248       -3.1        
7           3.44471     0.028       0.028       0.0725      -4.3        
8           3.4167      2.47e-05    2.47e-05    0.00257     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   3.416678    

                     final grad:   3.850138e-06

                     final lambda: 0.0000000e+00

                     time / iter:  675   ms

                     total time:   6.08  seconds, of which

                     derivs:     0.7 %

                     back pass:  90.8%

                     fwd pass:   2.2 %

                     other:      6.2 % (graphics etc.)
 =========== end iLQG ===========
 18.551538 seconds (14.46 M allocations: 876.715 MB, 2.67% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
