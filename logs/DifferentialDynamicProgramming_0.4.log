>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1006.7578125 MB free)
Uptime: 18161.0 sec
Load Avg:  1.00244140625  1.015625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     844938 s       4897 s      85659 s     684284 s        100 s
#2  3500 MHz     539536 s        123 s      78520 s    1120244 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 59516.308   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 2.88536e-12  final value -36.4101      factorizations 20
  4.578674 seconds (3.11 M allocations: 236.248 MB, 1.47% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.442      16.7        16.7        0.0924      0.0         
2           32.743      9.67        9.67        0.0829      -0.2        
3           23.0687     6.04        6.04        0.0986      -0.6        
4           17.0245     3.17        3.17        0.126       -1.2        
5           13.8536     1.3         1.3         0.19        -2.0        
6           12.5566     0.23        0.23        0.17        -3.1        
7           12.3264     0.0109      0.0109      0.0467      -4.3        
8           12.3155     1.31e-05    1.31e-05    0.0018      -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   12.31545    

                     final grad:   3.038824e-06

                     final lambda: 0.0000000e+00

                     time / iter:  716   ms

                     total time:   6.45  seconds, of which

                     derivs:     0.6 %

                     back pass:  93.9%

                     fwd pass:   1.4 %

                     other:      4.1 % (graphics etc.)
 =========== end iLQG ===========
 18.179469 seconds (14.46 M allocations: 876.715 MB, 2.65% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
