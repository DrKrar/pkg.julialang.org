>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (950.203125 MB free)
Uptime: 17230.0 sec
Load Avg:  0.98046875  1.015625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     747284 s        103 s      79183 s     681206 s         37 s
#2  3499 MHz     506076 s       5601 s      75154 s    1030963 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.6.0
3 additional packages:
 - Compat                        0.8.7
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64148.881   
RESULT: Gradient norm smaller than tolerance.
iterations 20  gradient 2.86178e-12  final value -24.1401      factorizations 18
  4.894684 seconds (3.11 M allocations: 251.544 MB, 2.74% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1347     24          24          0.101       0.0         
2           26.1505     11.2        11.2        0.0822      -0.2        
3           14.9079     5.29        5.29        0.082       -0.6        
4           9.61673     2.64        2.64        0.103       -1.2        
5           6.97734     1.21        1.21        0.161       -2.0        
6           5.7677      0.303       0.303       0.18        -3.1        
7           5.46512     0.0205      0.0205      0.0604      -4.3        
8           5.44467     2.54e-05    2.54e-05    0.00232     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.444641    

                     final grad:   3.764551e-06

                     final lambda: 0.0000000e+00

                     time / iter:  770   ms

                     total time:   6.93  seconds, of which

                     derivs:     0.7 %

                     back pass:  92.0%

                     fwd pass:   1.8 %

                     other:      5.5 % (graphics etc.)
 =========== end iLQG ===========
 17.990830 seconds (14.46 M allocations: 927.206 MB, 3.45% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
