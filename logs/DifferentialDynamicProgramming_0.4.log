>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1071.6015625 MB free)
Uptime: 21738.0 sec
Load Avg:  0.9755859375  1.0712890625  1.07470703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     949654 s       6667 s      84420 s     907739 s         82 s
#2  3500 MHz     669315 s         70 s      70569 s    1330721 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.20.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 70601.689   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 3.03811e-12  final value -30.3955      factorizations 15
  5.431342 seconds (3.10 M allocations: 234.750 MB, 2.41% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.9817     10          10          0.0669      0.0         
2           39.9391     8.79        8.79        0.0773      -0.2        
3           31.1467     9.13        9.13        0.119       -0.6        
4           22.0121     7.71        7.71        0.199       -1.2        
5           14.2985     3.51        3.51        0.315       -2.0        
6           10.7922     0.582       0.582       0.272       -3.1        
7           10.21       0.0262      0.0262      0.0654      -4.3        
8           10.1839     2.99e-05    2.99e-05    0.00219     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   10.18383    

            final grad:   3.464431e-06

            final lambda: 4.4841551e-08

            time / iter:  1025  ms

            total time:   9.22  seconds, of which

            derivs:     0.6 %

            back pass:  92.9%

            fwd pass:   1.4 %

            other:      5.1 % (graphics etc.)
 =========== end iLQG ===========
 24.677381 seconds (14.73 M allocations: 920.817 MB, 2.78% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
