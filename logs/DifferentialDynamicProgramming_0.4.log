>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (952.08984375 MB free)
Uptime: 17970.0 sec
Load Avg:  1.0517578125  1.09716796875  1.06982421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     822680 s        101 s      83110 s     647699 s        106 s
#2  3500 MHz     527627 s         42 s      72992 s    1085699 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 66452.754   
RESULT: Gradient norm smaller than tolerance.
iterations 22  gradient 3.32434e-12  final value -37.8796      factorizations 21
  4.302543 seconds (3.11 M allocations: 240.532 MB, 1.25% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.5824     14.5        14.5        0.0774      0.0         
2           36.0891     9.52        9.52        0.0731      -0.2        
3           26.5727     7.56        7.56        0.0962      -0.6        
4           19.0102     5.08        5.08        0.139       -1.2        
5           13.93       3.38        3.38        0.217       -2.0        
6           10.5482     1.57        1.57        0.278       -3.1        
7           8.97798     0.126       0.126       0.0924      -4.3        
8           8.8516      0.000156    0.000156    0.0035      -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   8.851444    

                     final grad:   5.328075e-06

                     final lambda: 0.0000000e+00

                     time / iter:  718   ms

                     total time:   6.46  seconds, of which

                     derivs:     0.7 %

                     back pass:  90.0%

                     fwd pass:   2.5 %

                     other:      6.8 % (graphics etc.)
 =========== end iLQG ===========
 19.320249 seconds (14.46 M allocations: 876.713 MB, 2.68% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
