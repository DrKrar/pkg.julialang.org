>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (952.3046875 MB free)
Uptime: 17778.0 sec
Load Avg:  1.0869140625  1.115234375  1.0615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3487 MHz     794623 s       2622 s      82730 s     661612 s        109 s
#2  3487 MHz     501922 s       4276 s      74854 s    1089677 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61771.065   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 2.84193e-12  final value -30.6896      factorizations 18
  3.980140 seconds (3.11 M allocations: 225.131 MB, 1.37% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.0645     21.9        21.9        0.107       0.0         
2           27.1566     10.5        10.5        0.0893      -0.2        
3           16.6777     4.93        4.93        0.0886      -0.6        
4           11.7509     2.3         2.3         0.0932      -1.2        
5           9.45593     1.38        1.38        0.136       -2.0        
6           8.07369     0.474       0.474       0.158       -3.1        
7           7.60006     0.0322      0.0322      0.0616      -4.3        
8           7.5679      4.05e-05    4.05e-05    0.00255     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   7.567863    

                     final grad:   3.993641e-06

                     final lambda: 0.0000000e+00

                     time / iter:  858   ms

                     total time:   7.73  seconds, of which

                     derivs:     0.6 %

                     back pass:  95.2%

                     fwd pass:   1.1 %

                     other:      3.1 % (graphics etc.)
 =========== end iLQG ===========
 21.194086 seconds (14.46 M allocations: 876.713 MB, 2.64% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
