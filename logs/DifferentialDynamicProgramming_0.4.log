>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (967.50390625 MB free)
Uptime: 18002.0 sec
Load Avg:  1.0830078125  1.087890625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     768073 s         81 s      84237 s     733076 s         84 s
#2  3500 MHz     529057 s       6762 s      74991 s    1095360 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 62973.835   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.3438e-12  final value -38.2262      factorizations 17
  4.300258 seconds (3.10 M allocations: 219.732 MB, 1.25% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1541     13.5        13.5        0.0801      0.0         
2           36.6293     10.2        10.2        0.0831      -0.2        
3           26.4159     8.51        8.51        0.11        -0.6        
4           17.9064     6.59        6.59        0.183       -1.2        
5           11.316      3.8         3.8         0.314       -2.0        
6           7.51206     1.16        1.16        0.305       -3.1        
7           6.35439     0.0655      0.0655      0.0997      -4.3        
8           6.28892     6.75e-05    6.75e-05    0.00343     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   6.288849    

                     final grad:   5.096812e-06

                     final lambda: 0.0000000e+00

                     time / iter:  925   ms

                     total time:   8.33  seconds, of which

                     derivs:     0.7 %

                     back pass:  92.9%

                     fwd pass:   1.6 %

                     other:      4.8 % (graphics etc.)
 =========== end iLQG ===========
 18.376140 seconds (14.46 M allocations: 876.713 MB, 2.74% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
