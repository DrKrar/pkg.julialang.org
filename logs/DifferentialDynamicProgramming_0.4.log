>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.4
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1057.6171875 MB free)
Uptime: 18813.0 sec
Load Avg:  0.951171875  0.9853515625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     851458 s         63 s      77036 s     768850 s         44 s
#2  3507 MHz     565729 s         79 s      70216 s    1186485 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.5
 - MacroTools                    0.3.4
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64145.859   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.30087e-12  final value -26.6185      factorizations 17
  4.410047 seconds (3.10 M allocations: 219.747 MB, 1.37% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.8926     9.02        9.02        0.0669      0.0         
2           41.8738     7.14        7.14        0.0731      -0.2        
3           34.7381     6.47        6.47        0.102       -0.6        
4           28.2651     4.32        4.32        0.145       -1.2        
5           23.9431     1.41        1.41        0.196       -2.0        
6           22.5356     0.229       0.229       0.177       -3.1        
7           22.3069     0.0127      0.0127      0.0542      -4.3        
8           22.2943     1.59e-05    1.59e-05    0.00202     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   22.29425    

                     final grad:   3.34053e-06

                     final lambda: 0.0000000e+00

                     time / iter:  720   ms

                     total time:   6.48  seconds, of which

                     derivs:     0.6 %

                     back pass:  93.3%

                     fwd pass:   1.8 %

                     other:      4.3 % (graphics etc.)
 =========== end iLQG ===========
 17.531580 seconds (14.46 M allocations: 876.717 MB, 2.88% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
