>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1000.953125 MB free)
Uptime: 17819.0 sec
Load Avg:  1.0703125  1.0224609375  1.02880859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     835917 s       2595 s      80593 s     683846 s        113 s
#2  3504 MHz     529937 s       3963 s      80289 s    1091537 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.1
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 65800.932   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 3.09966e-12  final value -31.4108      factorizations 12
  3.907535 seconds (3.09 M allocations: 190.619 MB, 1.40% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.0236     24.4        24.4        0.104       0.0         
2           25.5776     11.5        11.5        0.086       -0.2        
3           14.0948     5.87        5.87        0.0929      -0.6        
4           8.22782     2.81        2.81        0.107       -1.2        
5           5.42205     1.65        1.65        0.165       -2.0        
6           3.77559     0.428       0.428       0.206       -3.1        
7           3.34733     0.0175      0.0175      0.0661      -4.3        
8           3.32978     1.7e-05    1.7e-05    0.00248     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   3.329765    

                     final grad:   3.887804e-06

                     final lambda: 0.0000000e+00

                     time / iter:  595   ms

                     total time:   5.35  seconds, of which

                     derivs:     0.6 %

                     back pass:  88.3%

                     fwd pass:   2.8 %

                     other:      8.3 % (graphics etc.)
 =========== end iLQG ===========
 16.893085 seconds (14.46 M allocations: 876.713 MB, 2.94% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
