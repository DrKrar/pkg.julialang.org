>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.5
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1041.93359375 MB free)
Uptime: 23145.0 sec
Load Avg:  1.00390625  1.037109375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1089949 s        108 s      95622 s     867884 s        210 s
#2  3500 MHz     698679 s       6367 s      85224 s    1400039 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.18.0
 - MacroTools                    0.3.5
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67754.109   
RESULT: Gradient norm smaller than tolerance.
iterations 23  gradient 3.00269e-12  final value -26.2587      factorizations 22
  6.129914 seconds (3.12 M allocations: 270.993 MB, 2.65% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.2476     25.3        25.3        0.116       0.0         
2           25.9947     11.3        11.3        0.0885      -0.2        
3           14.667      6.06        6.06        0.0903      -0.6        
4           8.60555     3.07        3.07        0.117       -1.2        
5           5.53509     1.24        1.24        0.153       -2.0        
6           4.29195     0.321       0.321       0.191       -3.1        
7           3.97139     0.0129      0.0129      0.0596      -4.3        
8           3.95852     1.13e-05    1.13e-05    0.00214     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.958509    

            final grad:   3.403135e-06

            final lambda: 4.4841551e-08

            time / iter:  976   ms

            total time:   8.79  seconds, of which

            derivs:     0.8 %

            back pass:  93.7%

            fwd pass:   1.2 %

            other:      4.3 % (graphics etc.)
 =========== end iLQG ===========
 24.218519 seconds (14.73 M allocations: 920.780 MB, 2.75% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
