>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1043.265625 MB free)
Uptime: 17493.0 sec
Load Avg:  1.044921875  1.06298828125  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     834747 s       6194 s      74910 s     638567 s         59 s
#2  3500 MHz     485089 s       1376 s      69387 s    1123685 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.3
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 63789.159   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 2.9132e-12  final value -26.4694      factorizations 15
  4.760378 seconds (3.10 M allocations: 207.796 MB, 1.29% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.9279     20.6        20.6        0.104       0.0         
2           29.3713     10.5        10.5        0.0867      -0.2        
3           18.8959     6.42        6.42        0.101       -0.6        
4           12.4793     4.13        4.13        0.138       -1.2        
5           8.3541      2.5         2.5         0.214       -2.0        
6           5.85507     0.632       0.632       0.216       -3.1        
7           5.22348     0.0261      0.0261      0.0663      -4.3        
8           5.19737     2.37e-05    2.37e-05    0.00226     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.197348    

                     final grad:   3.350284e-06

                     final lambda: 0.0000000e+00

                     time / iter:  720   ms

                     total time:   6.48  seconds, of which

                     derivs:     0.9 %

                     back pass:  91.6%

                     fwd pass:   2.3 %

                     other:      5.2 % (graphics etc.)
 =========== end iLQG ===========
 18.628536 seconds (14.46 M allocations: 876.714 MB, 2.96% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
