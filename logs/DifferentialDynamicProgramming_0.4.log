>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1048.19140625 MB free)
Uptime: 18045.0 sec
Load Avg:  1.05224609375  1.05126953125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     840207 s       3578 s      79280 s     702466 s         74 s
#2  3501 MHz     563268 s       3083 s      72460 s    1096232 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.4
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 53491.233   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.08948e-12  final value -37.3113      factorizations 17
  4.412124 seconds (3.10 M allocations: 219.499 MB, 1.28% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.5561     23.8        23.8        0.109       0.0         
2           26.7191     11          11          0.0865      -0.2        
3           15.759      5.87        5.87        0.0875      -0.6        
4           9.88673     3.32        3.32        0.109       -1.2        
5           6.56314     1.61        1.61        0.161       -2.0        
6           4.94817     0.291       0.291       0.186       -3.1        
7           4.65672     0.00932     0.00932     0.0596      -4.3        
8           4.6474      7.75e-06    7.75e-06    0.0022      -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   4.647391    

                     final grad:   3.494333e-06

                     final lambda: 0.0000000e+00

                     time / iter:  773   ms

                     total time:   6.96  seconds, of which

                     derivs:     0.8 %

                     back pass:  93.4%

                     fwd pass:   2.0 %

                     other:      3.8 % (graphics etc.)
 =========== end iLQG ===========
 19.559627 seconds (14.46 M allocations: 876.713 MB, 2.68% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
