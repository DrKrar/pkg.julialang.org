>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1040.046875 MB free)
Uptime: 22317.0 sec
Load Avg:  1.09423828125  1.080078125  1.06103515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1016083 s       1227 s      85804 s     910994 s         57 s
#2  3500 MHz     694771 s       5434 s      76935 s    1372397 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.20.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 66816.787   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 2.85544e-12  final value -23.7548      factorizations 17
  5.348078 seconds (3.11 M allocations: 248.358 MB, 2.61% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.468      32.7        32.7        0.127       0.0         
2           15.7801     7.4         7.4         0.0691      -0.2        
3           8.38125     2.22        2.22        0.0486      -0.6        
4           6.16368     1.2         1.2         0.0659      -1.2        
5           4.96013     0.711       0.711       0.113       -2.0        
6           4.24901     0.289       0.289       0.125       -3.1        
7           3.95961     0.0227      0.0227      0.0513      -4.3        
8           3.93696     2.71e-05    2.71e-05    0.00208     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.936931    

            final grad:   3.355148e-06

            final lambda: 4.4841551e-08

            time / iter:  977   ms

            total time:   8.80  seconds, of which

            derivs:     0.6 %

            back pass:  91.4%

            fwd pass:   1.6 %

            other:      6.4 % (graphics etc.)
 =========== end iLQG ===========
 23.840847 seconds (14.73 M allocations: 920.795 MB, 2.91% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
