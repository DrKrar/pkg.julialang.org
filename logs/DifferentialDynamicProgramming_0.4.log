>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.0
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (919.82421875 MB free)
Uptime: 17062.0 sec
Load Avg:  1.111328125  1.02880859375  0.982421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     678567 s       7055 s      84275 s     750993 s         30 s
#2  3499 MHz     511081 s        346 s      75029 s    1029733 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.6.0
3 additional packages:
 - Compat                        0.8.6
 - MacroTools                    0.3.0
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 63749.752   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.06386e-12  final value -31.4426      factorizations 13
  3.878967 seconds (3.09 M allocations: 221.701 MB, 2.87% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.4827     21.9        21.9        0.102       0.0         
2           27.5552     11.1        11.1        0.0871      -0.2        
3           16.435      5.77        5.77        0.0878      -0.6        
4           10.6663     3.34        3.34        0.104       -1.2        
5           7.32621     1.93        1.93        0.166       -2.0        
6           5.39758     0.532       0.532       0.199       -3.1        
7           4.86588     0.0315      0.0315      0.0609      -4.3        
8           4.83443     3.62e-05    3.62e-05    0.00224     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   4.834393    

                     final grad:   3.590393e-06

                     final lambda: 0.0000000e+00

                     time / iter:  680   ms

                     total time:   6.12  seconds, of which

                     derivs:     0.5 %

                     back pass:  92.9%

                     fwd pass:   1.6 %

                     other:      5.1 % (graphics etc.)
 =========== end iLQG ===========
 15.641046 seconds (14.45 M allocations: 927.028 MB, 3.30% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
