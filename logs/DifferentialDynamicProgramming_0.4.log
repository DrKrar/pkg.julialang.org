>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (928.21484375 MB free)
Uptime: 16893.0 sec
Load Avg:  0.9228515625  0.96875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     741323 s       4161 s      80308 s     658319 s         57 s
#2  3500 MHz     448284 s       1849 s      76793 s    1039421 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.9.1
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 63337.687   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.14828e-12  final value -31.7795      factorizations 13
  3.867809 seconds (3.10 M allocations: 221.617 MB, 3.12% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1977     21          21          0.101       0.0         
2           29.1748     12.1        12.1        0.0915      -0.2        
3           17.0853     6.73        6.73        0.0962      -0.6        
4           10.3598     3.37        3.37        0.115       -1.2        
5           6.98899     1.66        1.66        0.191       -2.0        
6           5.33325     0.461       0.461       0.202       -3.1        
7           4.87192     0.0225      0.0225      0.0679      -4.3        
8           4.84939     2.26e-05    2.26e-05    0.00241     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   4.849368    

                     final grad:   3.848434e-06

                     final lambda: 0.0000000e+00

                     time / iter:  741   ms

                     total time:   6.67  seconds, of which

                     derivs:     0.4 %

                     back pass:  91.5%

                     fwd pass:   2.1 %

                     other:      6.0 % (graphics etc.)
 =========== end iLQG ===========
 17.883888 seconds (14.46 M allocations: 927.139 MB, 3.41% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
