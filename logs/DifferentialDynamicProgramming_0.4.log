>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (940.19140625 MB free)
Uptime: 18096.0 sec
Load Avg:  3.72216796875  2.05224609375  1.40673828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     799971 s       6369 s      81355 s     685014 s        106 s
#2  3507 MHz     474678 s        104 s      78300 s    1144264 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 63644.715   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.8243e-12  final value -36.7892      factorizations 16
  3.948247 seconds (3.10 M allocations: 213.068 MB, 1.48% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           51.0058     27          27          0.114       0.0         
2           23.9761     11.7        11.7        0.0897      -0.2        
3           12.237      4.84        4.84        0.0818      -0.6        
4           7.39801     2.14        2.14        0.0794      -1.2        
5           5.26255     1.14        1.14        0.144       -2.0        
6           4.12443     0.274       0.274       0.161       -3.1        
7           3.85047     0.0153      0.0153      0.0543      -4.3        
8           3.83517     1.77e-05    1.77e-05    0.00207     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   3.835155    

                     final grad:   3.450611e-06

                     final lambda: 0.0000000e+00

                     time / iter:  764   ms

                     total time:   6.88  seconds, of which

                     derivs:     0.5 %

                     back pass:  91.4%

                     fwd pass:   2.3 %

                     other:      5.9 % (graphics etc.)
 =========== end iLQG ===========
 19.165723 seconds (14.46 M allocations: 876.713 MB, 2.82% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
