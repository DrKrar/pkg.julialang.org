>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1082.9375 MB free)
Uptime: 21419.0 sec
Load Avg:  1.22705078125  1.11083984375  1.06494140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     984120 s       4464 s      82925 s     850138 s         70 s
#2  3499 MHz     680122 s       3560 s      71441 s    1304502 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.21.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 60203.463   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.97629e-12  final value -35.3406      factorizations 16
  5.210044 seconds (3.10 M allocations: 238.546 MB, 2.46% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.2254     20          20          0.092       0.0         
2           30.2553     12.7        12.7        0.0859      -0.2        
3           17.5951     7.71        7.71        0.0974      -0.6        
4           9.88597     3.35        3.35        0.11        -1.2        
5           6.53307     1.11        1.11        0.139       -2.0        
6           5.42488     0.19        0.19        0.168       -3.1        
7           5.23517     0.00659     0.00659     0.0575      -4.3        
8           5.22858     5.88e-06    5.88e-06    0.00197     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.228579    

            final grad:   3.271594e-06

            final lambda: 4.4841551e-08

            time / iter:  937   ms

            total time:   8.43  seconds, of which

            derivs:     0.7 %

            back pass:  93.8%

            fwd pass:   1.2 %

            other:      4.3 % (graphics etc.)
 =========== end iLQG ===========
 22.284886 seconds (14.73 M allocations: 920.818 MB, 2.78% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
