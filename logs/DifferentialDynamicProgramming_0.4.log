>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1049.65234375 MB free)
Uptime: 22253.0 sec
Load Avg:  0.99560546875  1.0146484375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1045415 s        102 s      85147 s     878761 s         92 s
#2  3499 MHz     670330 s       5884 s      74424 s    1387243 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.21.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 66295.183   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 3.14957e-12  final value -29.1314      factorizations 15
  3.626816 seconds (3.10 M allocations: 232.949 MB, 3.16% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.1875     25.8        25.8        0.109       0.0         
2           23.4163     10.1        10.1        0.0799      -0.2        
3           13.3393     4.85        4.85        0.0771      -0.6        
4           8.48936     2.94        2.94        0.105       -1.2        
5           5.5543      2.01        2.01        0.181       -2.0        
6           3.54809     0.815       0.815       0.194       -3.1        
7           2.73312     0.0516      0.0516      0.0701      -4.3        
8           2.6815      5.54e-05    5.54e-05    0.00269     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.681444    

            final grad:   4.142052e-06

            final lambda: 4.4841551e-08

            time / iter:  753   ms

            total time:   6.78  seconds, of which

            derivs:     0.4 %

            back pass:  94.7%

            fwd pass:   1.1 %

            other:      3.8 % (graphics etc.)
 =========== end iLQG ===========
 19.931217 seconds (14.73 M allocations: 920.803 MB, 3.00% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
