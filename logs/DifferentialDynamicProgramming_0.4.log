>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1065.015625 MB free)
Uptime: 22087.0 sec
Load Avg:  1.0029296875  1.05078125  1.0791015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz     973785 s       7140 s      86780 s     896180 s        114 s
#2  3497 MHz     683041 s         43 s      78230 s    1347442 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.21.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67404.792   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.09547e-12  final value -22.7876      factorizations 14
  5.074417 seconds (3.10 M allocations: 228.805 MB, 2.83% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1629     18.7        18.7        0.09        0.0         
2           31.4236     11          11          0.0843      -0.2        
3           20.4038     7.17        7.17        0.101       -0.6        
4           13.2317     4.18        4.18        0.139       -1.2        
5           9.05652     1.72        1.72        0.192       -2.0        
6           7.33869     0.441       0.441       0.229       -3.1        
7           6.89761     0.0223      0.0223      0.0714      -4.3        
8           6.8753      2.31e-05    2.31e-05    0.00243     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   6.875272    

            final grad:   3.860243e-06

            final lambda: 4.4841551e-08

            time / iter:  959   ms

            total time:   8.63  seconds, of which

            derivs:     0.6 %

            back pass:  93.1%

            fwd pass:   1.7 %

            other:      4.7 % (graphics etc.)
 =========== end iLQG ===========
 21.493031 seconds (14.73 M allocations: 920.803 MB, 2.76% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
