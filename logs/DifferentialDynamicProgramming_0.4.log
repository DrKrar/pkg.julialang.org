>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1042.53125 MB free)
Uptime: 17885.0 sec
Load Avg:  0.97802734375  1.0244140625  1.04150390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     831963 s         78 s      76242 s     692564 s         94 s
#2  3500 MHz     520007 s         90 s      73403 s    1131481 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64382.178   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 2.9607e-12  final value -27.8678      factorizations 20
  4.423758 seconds (3.11 M allocations: 236.359 MB, 1.55% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.7577     28.2        28.2        0.124       0.0         
2           21.5805     9.93        9.93        0.0846      -0.2        
3           11.6494     4.3         4.3         0.0758      -0.6        
4           7.3475      2.31        2.31        0.103       -1.2        
5           5.0363      1.23        1.23        0.153       -2.0        
6           3.80656     0.412       0.412       0.175       -3.1        
7           3.39461     0.0226      0.0226      0.062       -4.3        
8           3.37204     2.32e-05    2.32e-05    0.0022      -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   3.372013    

                     final grad:   3.462665e-06

                     final lambda: 0.0000000e+00

                     time / iter:  903   ms

                     total time:   8.13  seconds, of which

                     derivs:     0.7 %

                     back pass:  91.1%

                     fwd pass:   2.1 %

                     other:      6.1 % (graphics etc.)
 =========== end iLQG ===========
 21.199563 seconds (14.46 M allocations: 876.713 MB, 2.66% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
