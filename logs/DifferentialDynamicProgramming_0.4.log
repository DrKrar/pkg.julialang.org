>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1024.98828125 MB free)
Uptime: 18012.0 sec
Load Avg:  1.30126953125  1.08935546875  1.06591796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     876039 s       6158 s      78973 s     647797 s         96 s
#2  3499 MHz     532628 s        591 s      79217 s    1121135 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 66957.173   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 2.96624e-12  final value -38.8745      factorizations 13
  4.773156 seconds (3.10 M allocations: 197.030 MB, 1.29% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.9268     28.2        28.2        0.121       0.0         
2           22.7451     11.3        11.3        0.0902      -0.2        
3           11.463      4.59        4.59        0.0805      -0.6        
4           6.87628     2.2         2.2         0.085       -1.2        
5           4.67189     1.25        1.25        0.166       -2.0        
6           3.42447     0.337       0.337       0.18        -3.1        
7           3.08787     0.021       0.021       0.0579      -4.3        
8           3.06682     2.53e-05    2.53e-05    0.00227     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   3.066797    

                     final grad:   3.746583e-06

                     final lambda: 0.0000000e+00

                     time / iter:  740   ms

                     total time:   6.66  seconds, of which

                     derivs:     0.5 %

                     back pass:  94.0%

                     fwd pass:   1.2 %

                     other:      4.3 % (graphics etc.)
 =========== end iLQG ===========
 18.861780 seconds (14.46 M allocations: 876.683 MB, 2.78% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
