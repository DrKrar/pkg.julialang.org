>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1017.04296875 MB free)
Uptime: 16492.0 sec
Load Avg:  0.9521484375  1.0556640625  1.0517578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     729460 s       7061 s      71793 s     673138 s         16 s
#2  3498 MHz     448916 s        644 s      70958 s    1077236 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.3
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 55483.982   
RESULT: Gradient norm smaller than tolerance.
iterations 20  gradient 2.86465e-12  final value -27.2038      factorizations 18
  5.302970 seconds (3.11 M allocations: 229.033 MB, 1.28% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.5926     21.1        21.1        0.0987      0.0         
2           29.4927     10.4        10.4        0.0798      -0.2        
3           19.1111     6.98        6.98        0.0998      -0.6        
4           12.1308     4.44        4.44        0.158       -1.2        
5           7.68689     1.3         1.3         0.193       -2.0        
6           6.38458     0.128       0.128       0.14        -3.1        
7           6.2568      0.00472     0.00472     0.0453      -4.3        
8           6.25208     5.91e-06    5.91e-06    0.00177     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   6.252072    

                     final grad:   3.02404e-06

                     final lambda: 0.0000000e+00

                     time / iter:  485   ms

                     total time:   4.37  seconds, of which

                     derivs:     0.8 %

                     back pass:  91.9%

                     fwd pass:   2.0 %

                     other:      5.3 % (graphics etc.)
 =========== end iLQG ===========
 13.130199 seconds (14.46 M allocations: 876.683 MB, 3.31% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
