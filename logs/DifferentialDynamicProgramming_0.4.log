>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1071.1796875 MB free)
Uptime: 21409.0 sec
Load Avg:  1.03857421875  1.10107421875  1.0869140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1025443 s       6870 s      82818 s     795232 s         74 s
#2  3499 MHz     646942 s         50 s      70120 s    1322957 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.21.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64958.171   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.02659e-12  final value -33.0754      factorizations 13
  5.113898 seconds (3.10 M allocations: 222.831 MB, 2.68% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.5087     26.5        26.5        0.116       0.0         
2           22.0583     9.8         9.8         0.0824      -0.2        
3           12.2604     4.31        4.31        0.0725      -0.6        
4           7.94823     2.74        2.74        0.0912      -1.2        
5           5.21049     1.33        1.33        0.148       -2.0        
6           3.87862     0.282       0.282       0.155       -3.1        
7           3.59618     0.0159      0.0159      0.0552      -4.3        
8           3.5803      1.84e-05    1.84e-05    0.00203     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   3.580278    

            final grad:   3.338136e-06

            final lambda: 4.4841551e-08

            time / iter:  996   ms

            total time:   8.97  seconds, of which

            derivs:     0.7 %

            back pass:  92.5%

            fwd pass:   1.6 %

            other:      5.2 % (graphics etc.)
 =========== end iLQG ===========
 22.474947 seconds (14.73 M allocations: 920.799 MB, 2.80% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
