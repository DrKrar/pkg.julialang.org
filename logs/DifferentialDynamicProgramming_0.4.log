>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.0
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (888.56640625 MB free)
Uptime: 16376.0 sec
Load Avg:  1.103515625  0.96240234375  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     667156 s       3424 s      74430 s     708624 s         27 s
#2  3500 MHz     466134 s       3673 s      66988 s    1014382 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.6.0
3 additional packages:
 - Compat                        0.8.6
 - MacroTools                    0.3.0
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 73275.961   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.06611e-12  final value -31.4364      factorizations 17
  2.876053 seconds (3.10 M allocations: 243.978 MB, 3.45% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.9216     21.6        21.6        0.104       0.0         
2           29.295      11.8        11.8        0.0919      -0.2        
3           17.4939     6.2         6.2         0.0979      -0.6        
4           11.2907     3.12        3.12        0.108       -1.2        
5           8.17046     1.68        1.68        0.174       -2.0        
6           6.48708     0.45        0.45        0.208       -3.1        
7           6.03683     0.0249      0.0249      0.0609      -4.3        
8           6.01192     3.03e-05    3.03e-05    0.00228     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   6.011892    

                     final grad:   3.72405e-06

                     final lambda: 0.0000000e+00

                     time / iter:  519   ms

                     total time:   4.67  seconds, of which

                     derivs:     0.6 %

                     back pass:  92.7%

                     fwd pass:   1.6 %

                     other:      5.2 % (graphics etc.)
 =========== end iLQG ===========
 12.719668 seconds (14.45 M allocations: 927.029 MB, 3.67% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
