>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (944.81640625 MB free)
Uptime: 16426.0 sec
Load Avg:  1.119140625  1.04296875  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     748978 s       3098 s      76013 s     607091 s         32 s
#2  3500 MHz     454060 s       2388 s      73216 s    1045203 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.9.1
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 72386.715   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 3.21526e-12  final value -38.6208      factorizations 17
  4.931259 seconds (3.11 M allocations: 247.181 MB, 2.69% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.118      25.4        25.4        0.112       0.0         
2           23.6764     10.5        10.5        0.0819      -0.2        
3           13.1648     5.1         5.1         0.0798      -0.6        
4           8.06369     2.91        2.91        0.117       -1.2        
5           5.14915     1.2         1.2         0.154       -2.0        
6           3.95077     0.191       0.191       0.14        -3.1        
7           3.75936     0.00563     0.00563     0.0473      -4.3        
8           3.75373     5.14e-06    5.14e-06    0.0018      -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   3.753722    

                     final grad:   3.009828e-06

                     final lambda: 0.0000000e+00

                     time / iter:  1020  ms

                     total time:   9.18  seconds, of which

                     derivs:     0.7 %

                     back pass:  92.4%

                     fwd pass:   1.8 %

                     other:      5.1 % (graphics etc.)
 =========== end iLQG ===========
 21.309669 seconds (14.46 M allocations: 927.172 MB, 3.00% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
