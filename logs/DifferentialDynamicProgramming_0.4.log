>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (924.796875 MB free)
Uptime: 16744.0 sec
Load Avg:  0.978515625  0.95703125  0.96630859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     703856 s         54 s      74530 s     696269 s         33 s
#2  3500 MHz     466496 s         96 s      67687 s    1056267 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.8.8
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 64229.025   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.04652e-12  final value -27.7554      factorizations 17
  4.013866 seconds (3.10 M allocations: 244.878 MB, 2.90% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.653      21.9        21.9        0.102       0.0         
2           28.788      10.5        10.5        0.0835      -0.2        
3           18.3312     5.72        5.72        0.0901      -0.6        
4           12.6096     3.75        3.75        0.129       -1.2        
5           8.85668     2.61        2.61        0.223       -2.0        
6           6.24883     0.783       0.783       0.237       -3.1        
7           5.46604     0.0481      0.0481      0.0683      -4.3        
8           5.4179      5.61e-05    5.61e-05    0.00241     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.417843    

                     final grad:   3.991105e-06

                     final lambda: 0.0000000e+00

                     time / iter:  627   ms

                     total time:   5.64  seconds, of which

                     derivs:     0.6 %

                     back pass:  93.5%

                     fwd pass:   1.7 %

                     other:      4.2 % (graphics etc.)
 =========== end iLQG ===========
 13.964679 seconds (14.46 M allocations: 927.121 MB, 3.73% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
