>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.5
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1063.42578125 MB free)
Uptime: 20354.0 sec
Load Avg:  1.26025390625  1.1552734375  1.08642578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3516 MHz     941235 s       7568 s      83430 s     793354 s         58 s
#2  3516 MHz     658924 s       1957 s      71351 s    1225758 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.19.0
 - MacroTools                    0.3.5
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 74878.180   
RESULT: Gradient norm smaller than tolerance.
iterations 14  gradient 3.0572e-12  final value -30.4394      factorizations 13
  5.912015 seconds (3.10 M allocations: 221.159 MB, 2.55% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.3992     23.2        23.2        0.0983      0.0         
2           26.2061     11.4        11.4        0.0837      -0.2        
3           14.8253     5.4         5.4         0.0865      -0.6        
4           9.42396     2.72        2.72        0.0985      -1.2        
5           6.7032      1.49        1.49        0.168       -2.0        
6           5.20888     0.301       0.301       0.178       -3.1        
7           4.90786     0.011       0.011       0.0533      -4.3        
8           4.89682     1.17e-05    1.17e-05    0.00203     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.896806    

            final grad:   3.40784e-06

            final lambda: 4.4841551e-08

            time / iter:  1067  ms

            total time:   9.60  seconds, of which

            derivs:     0.8 %

            back pass:  93.1%

            fwd pass:   1.5 %

            other:      4.6 % (graphics etc.)
 =========== end iLQG ===========
 26.394987 seconds (14.73 M allocations: 920.792 MB, 2.68% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
