>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.4
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1082.52734375 MB free)
Uptime: 22752.0 sec
Load Avg:  1.13623046875  1.0986328125  1.0693359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1004443 s       4233 s      80979 s     951991 s         81 s
#2  3499 MHz     725480 s       3188 s      72292 s    1375781 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.2
3 additional packages:
 - Compat                        0.14.0
 - MacroTools                    0.3.4
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61892.091   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 3.24627e-12  final value -36.0392      factorizations 20
  3.205011 seconds (3.11 M allocations: 260.680 MB, 3.31% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.7226     16.5        16.5        0.0916      0.0         
2           34.1874     9.96        9.96        0.086       -0.2        
3           24.2308     7.3         7.3         0.106       -0.6        
4           16.9275     4.78        4.78        0.156       -1.2        
5           12.15       1.9         1.9         0.224       -2.0        
6           10.2539     0.355       0.355       0.195       -3.1        
7           9.89892     0.0188      0.0188      0.057       -4.3        
8           9.88012     2.26e-05    2.26e-05    0.00201     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   9.880101    

            final grad:   3.309131e-06

            final lambda: 4.4841551e-08

            time / iter:  822   ms

            total time:   7.40  seconds, of which

            derivs:     0.7 %

            back pass:  92.5%

            fwd pass:   1.2 %

            other:      5.6 % (graphics etc.)
 =========== end iLQG ===========
 20.332216 seconds (14.73 M allocations: 920.762 MB, 2.78% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
