>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (953.875 MB free)
Uptime: 16796.0 sec
Load Avg:  0.9931640625  0.99951171875  0.96337890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz     762239 s       5080 s      73392 s     625362 s         24 s
#2  3492 MHz     511252 s       3768 s      70992 s    1016021 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.8.8
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 68605.132   
RESULT: Gradient norm smaller than tolerance.
iterations 12  gradient 3.18698e-12  final value -27.3491      factorizations 11
  3.559449 seconds (3.09 M allocations: 211.864 MB, 2.88% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.371      26.5        26.5        0.121       0.0         
2           22.8219     9.58        9.58        0.0863      -0.2        
3           13.2448     3.88        3.88        0.0762      -0.6        
4           9.36554     2.04        2.04        0.0917      -1.2        
5           7.32944     1.17        1.17        0.176       -2.0        
6           6.16288     0.223       0.223       0.182       -3.1        
7           5.94006     0.00617     0.00617     0.0494      -4.3        
8           5.9339      5.25e-06    5.25e-06    0.00172     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   5.933891    

                     final grad:   2.81887e-06

                     final lambda: 0.0000000e+00

                     time / iter:  811   ms

                     total time:   7.30  seconds, of which

                     derivs:     0.4 %

                     back pass:  94.8%

                     fwd pass:   1.2 %

                     other:      3.5 % (graphics etc.)
 =========== end iLQG ===========
 18.848507 seconds (14.46 M allocations: 927.136 MB, 3.41% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
