>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1045.95703125 MB free)
Uptime: 18537.0 sec
Load Avg:  1.0458984375  1.0380859375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     789824 s       3993 s      75277 s     792645 s         93 s
#2  3499 MHz     563877 s       3282 s      66452 s    1140773 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.3
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 70255.348   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 2.83743e-12  final value -32.4582      factorizations 12
  4.399294 seconds (3.09 M allocations: 192.084 MB, 1.60% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.2829     22.1        22.1        0.102       0.0         
2           27.1435     11.7        11.7        0.0881      -0.2        
3           15.4366     5.7         5.7         0.0874      -0.6        
4           9.73776     2.47        2.47        0.0877      -1.2        
5           7.27225     1.64        1.64        0.148       -2.0        
6           5.63085     0.696       0.696       0.227       -3.1        
7           4.93448     0.0442      0.0442      0.0707      -4.3        
8           4.89024     4.84e-05    4.84e-05    0.00279     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   4.890194    

                     final grad:   4.092532e-06

                     final lambda: 0.0000000e+00

                     time / iter:  701   ms

                     total time:   6.31  seconds, of which

                     derivs:     0.5 %

                     back pass:  91.2%

                     fwd pass:   2.2 %

                     other:      6.1 % (graphics etc.)
 =========== end iLQG ===========
 18.735007 seconds (14.46 M allocations: 876.738 MB, 2.71% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
