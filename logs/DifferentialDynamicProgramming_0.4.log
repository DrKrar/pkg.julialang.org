>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1050.95703125 MB free)
Uptime: 21876.0 sec
Load Avg:  1.20947265625  1.09619140625  1.06298828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     937962 s       7031 s      83768 s     944511 s         77 s
#2  3499 MHz     715784 s         40 s      74830 s    1308646 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.20.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 62858.353   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 3.36394e-12  final value -29.2752      factorizations 15
  6.366627 seconds (3.10 M allocations: 233.034 MB, 2.57% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.9458     23.6        23.6        0.102       0.0         
2           25.3871     9.87        9.87        0.0778      -0.2        
3           15.5145     5.19        5.19        0.0824      -0.6        
4           10.3274     2.83        2.83        0.103       -1.2        
5           7.49663     1.19        1.19        0.153       -2.0        
6           6.30175     0.203       0.203       0.154       -3.1        
7           6.09889     0.00772     0.00772     0.047       -4.3        
8           6.09118     9.16e-06    9.16e-06    0.00183     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   6.091169    

            final grad:   3.139687e-06

            final lambda: 4.4841551e-08

            time / iter:  1052  ms

            total time:   9.47  seconds, of which

            derivs:     0.7 %

            back pass:  92.9%

            fwd pass:   1.4 %

            other:      5.0 % (graphics etc.)
 =========== end iLQG ===========
 25.279841 seconds (14.73 M allocations: 920.857 MB, 2.75% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
