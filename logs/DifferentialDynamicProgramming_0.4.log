>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1062.91015625 MB free)
Uptime: 17615.0 sec
Load Avg:  1.36474609375  1.1142578125  1.0732421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     854118 s         59 s      76149 s     644701 s         51 s
#2  3504 MHz     495184 s       5376 s      70338 s    1123681 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.3
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 58024.763   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 2.99273e-12  final value -31.8751      factorizations 12
  4.786955 seconds (3.09 M allocations: 192.090 MB, 1.33% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.603      13.7        13.7        0.0806      0.0         
2           36.9215     11.4        11.4        0.0888      -0.2        
3           25.5583     9.33        9.33        0.12        -0.6        
4           16.229      5.11        5.11        0.159       -1.2        
5           11.1212     2.26        2.26        0.193       -2.0        
6           8.8571      0.788       0.788       0.252       -3.1        
7           8.06936     0.0468      0.0468      0.089       -4.3        
8           8.02253     4.68e-05    4.68e-05    0.00298     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   8.022484    

                     final grad:   4.240527e-06

                     final lambda: 0.0000000e+00

                     time / iter:  734   ms

                     total time:   6.60  seconds, of which

                     derivs:     0.6 %

                     back pass:  90.6%

                     fwd pass:   2.3 %

                     other:      6.5 % (graphics etc.)
 =========== end iLQG ===========
 20.535996 seconds (14.46 M allocations: 876.715 MB, 2.52% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
