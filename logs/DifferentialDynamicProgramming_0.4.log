>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (882.2578125 MB free)
Uptime: 19213.0 sec
Load Avg:  1.22705078125  1.04638671875  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     751112 s         76 s      95766 s     805348 s        124 s
#2  3507 MHz     529582 s         64 s      90766 s    1146375 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.7.0
3 additional packages:
 - Compat                        0.8.8
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 66201.446   
RESULT: Gradient norm smaller than tolerance.
iterations 13  gradient 2.99265e-12  final value -35.5152      factorizations 12
  4.535571 seconds (3.09 M allocations: 216.470 MB, 2.94% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.8153     23.6        23.6        0.105       0.0         
2           27.2369     12          12          0.0903      -0.2        
3           15.2383     6.15        6.15        0.0933      -0.6        
4           9.08963     3.29        3.29        0.104       -1.2        
5           5.7956      1.74        1.74        0.166       -2.0        
6           4.05522     0.456       0.456       0.167       -3.1        
7           3.59911     0.0267      0.0267      0.0578      -4.3        
8           3.57245     3.22e-05    3.22e-05    0.00229     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   3.572414    

                     final grad:   3.739264e-06

                     final lambda: 0.0000000e+00

                     time / iter:  762   ms

                     total time:   6.86  seconds, of which

                     derivs:     0.6 %

                     back pass:  93.3%

                     fwd pass:   1.4 %

                     other:      4.6 % (graphics etc.)
 =========== end iLQG ===========
 18.946766 seconds (14.46 M allocations: 927.137 MB, 2.99% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
