>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1075.1484375 MB free)
Uptime: 22040.0 sec
Load Avg:  0.9970703125  1.0146484375  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     980458 s       7384 s      81119 s     926466 s         56 s
#2  3499 MHz     712445 s         33 s      72423 s    1342980 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.20.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 51332.136   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 3.01997e-12  final value -33.7954      factorizations 18
  3.651128 seconds (3.11 M allocations: 251.261 MB, 2.98% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.3826     20.2        20.2        0.0978      0.0         
2           29.1622     11.8        11.8        0.0903      -0.2        
3           17.4068     6.68        6.68        0.102       -0.6        
4           10.7281     3.19        3.19        0.121       -1.2        
5           7.542       1.68        1.68        0.184       -2.0        
6           5.8662      0.446       0.446       0.215       -3.1        
7           5.42013     0.0225      0.0225      0.061       -4.3        
8           5.39758     2.43e-05    2.43e-05    0.00221     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.397558    

            final grad:   3.658125e-06

            final lambda: 4.4841551e-08

            time / iter:  776   ms

            total time:   6.98  seconds, of which

            derivs:     0.4 %

            back pass:  92.1%

            fwd pass:   1.5 %

            other:      5.9 % (graphics etc.)
 =========== end iLQG ===========
 16.227598 seconds (14.73 M allocations: 920.760 MB, 3.21% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
