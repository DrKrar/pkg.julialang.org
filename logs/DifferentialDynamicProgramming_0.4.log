>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1087.85546875 MB free)
Uptime: 22595.0 sec
Load Avg:  1.0537109375  1.0888671875  1.07177734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1052188 s       5530 s      83209 s     880537 s         95 s
#2  3499 MHz     652848 s       1432 s      72787 s    1446292 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.21.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 56355.118   
RESULT: Gradient norm smaller than tolerance.
iterations 19  gradient 2.83624e-12  final value -32.667       factorizations 18
  3.425998 seconds (3.11 M allocations: 252.265 MB, 3.17% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.8295     19.2        19.2        0.0949      0.0         
2           30.6622     11.8        11.8        0.0883      -0.2        
3           18.8263     6.79        6.79        0.097       -0.6        
4           12.0351     3.3         3.3         0.118       -1.2        
5           8.73097     1.96        1.96        0.199       -2.0        
6           6.76854     0.73        0.73        0.228       -3.1        
7           6.03886     0.0501      0.0501      0.0716      -4.3        
8           5.9888      6.13e-05    6.13e-05    0.00283     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   5.988737    

            final grad:   4.503368e-06

            final lambda: 4.4841551e-08

            time / iter:  655   ms

            total time:   5.89  seconds, of which

            derivs:     0.9 %

            back pass:  93.0%

            fwd pass:   1.6 %

            other:      4.6 % (graphics etc.)
 =========== end iLQG ===========
 18.061319 seconds (14.73 M allocations: 920.768 MB, 2.81% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
