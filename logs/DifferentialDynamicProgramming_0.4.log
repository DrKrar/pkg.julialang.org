>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1014.09765625 MB free)
Uptime: 18649.0 sec
Load Avg:  1.00146484375  1.0419921875  1.04443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     854002 s       3495 s      81020 s     727172 s        105 s
#2  3500 MHz     567570 s       3120 s      78922 s    1137928 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.8.0
3 additional packages:
 - Compat                        0.9.2
 - MacroTools                    0.3.2
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67880.969   
RESULT: Gradient norm smaller than tolerance.
iterations 16  gradient 2.89582e-12  final value -31.8356      factorizations 15
  4.679645 seconds (3.10 M allocations: 207.949 MB, 1.28% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.9101     26.5        26.5        0.108       0.0         
2           23.4115     9.17        9.17        0.0755      -0.2        
3           14.2374     3.31        3.31        0.0705      -0.6        
4           10.9236     1.36        1.36        0.0824      -1.2        
5           9.56393     0.702       0.702       0.126       -2.0        
6           8.86181     0.156       0.156       0.139       -3.1        
7           8.7054      0.00672     0.00672     0.0458      -4.3        
8           8.69869     7.48e-06    7.48e-06    0.00182     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   8.69868     

                     final grad:   3.032595e-06

                     final lambda: 0.0000000e+00

                     time / iter:  748   ms

                     total time:   6.73  seconds, of which

                     derivs:     1.1 %

                     back pass:  93.1%

                     fwd pass:   1.3 %

                     other:      4.5 % (graphics etc.)
 =========== end iLQG ===========
 21.038691 seconds (14.46 M allocations: 876.738 MB, 2.62% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
