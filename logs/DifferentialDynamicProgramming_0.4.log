>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.6
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1075.19140625 MB free)
Uptime: 22288.0 sec
Load Avg:  0.92333984375  1.0537109375  1.07421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1025356 s       3531 s      79583 s     893454 s         72 s
#2  3499 MHz     654086 s       4394 s      73530 s    1408327 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.20.0
 - MacroTools                    0.3.6
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 54600.250   
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.4186e-12  final value -41.4648      factorizations 14
  5.292584 seconds (3.10 M allocations: 227.390 MB, 2.94% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.81       24.7        24.7        0.116       0.0         
2           24.0941     9.68        9.68        0.0878      -0.2        
3           14.4155     5.25        5.25        0.09        -0.6        
4           9.16959     3.55        3.55        0.115       -1.2        
5           5.61666     2.36        2.36        0.172       -2.0        
6           3.25282     0.616       0.616       0.195       -3.1        
7           2.63633     0.0334      0.0334      0.0658      -4.3        
8           2.60295     3.95e-05    3.95e-05    0.00249     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.602906    

            final grad:   3.964927e-06

            final lambda: 4.4841551e-08

            time / iter:  1000  ms

            total time:   9.00  seconds, of which

            derivs:     0.5 %

            back pass:  92.6%

            fwd pass:   1.7 %

            other:      5.3 % (graphics etc.)
 =========== end iLQG ===========
 24.954514 seconds (14.73 M allocations: 920.817 MB, 2.93% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
