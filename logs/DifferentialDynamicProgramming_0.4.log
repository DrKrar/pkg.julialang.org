>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Requires v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (897.8515625 MB free)
Uptime: 17366.0 sec
Load Avg:  1.296875  1.14599609375  1.0869140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     708714 s       3216 s      88416 s     744092 s         35 s
#2  3507 MHz     539769 s       4068 s      77273 s    1029781 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.6.0
3 additional packages:
 - Compat                        0.8.7
 - MacroTools                    0.3.2
 - Requires                      0.2.2
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 68140.557   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.02581e-12  final value -33.263       factorizations 17
  4.369545 seconds (3.11 M allocations: 244.762 MB, 2.85% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.3814     17.8        17.8        0.0936      0.0         
2           32.6258     10          10          0.0879      -0.2        
3           22.6023     6.18        6.18        0.106       -0.6        
4           16.4264     3.48        3.48        0.142       -1.2        
5           12.9509     1.84        1.84        0.211       -2.0        
6           11.1066     0.427       0.427       0.271       -3.1        
7           10.6797     0.0133      0.0133      0.0649      -4.3        
8           10.6664     1.13e-05    1.13e-05    0.00192     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

                     final cost:   10.66639    

                     final grad:   3.173995e-06

                     final lambda: 0.0000000e+00

                     time / iter:  823   ms

                     total time:   7.41  seconds, of which

                     derivs:     0.6 %

                     back pass:  90.9%

                     fwd pass:   2.1 %

                     other:      6.4 % (graphics etc.)
 =========== end iLQG ===========
 20.219868 seconds (14.46 M allocations: 927.180 MB, 3.03% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
