>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from git://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing MacroTools v0.3.5
INFO: Installing Requires v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1067.4609375 MB free)
Uptime: 19909.0 sec
Load Avg:  0.96533203125  1.06884765625  1.111328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     962868 s       4086 s      82818 s     723509 s         57 s
#2  3500 MHz     604499 s       2999 s      71694 s    1241220 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
3 additional packages:
 - Compat                        0.18.0
 - MacroTools                    0.3.5
 - Requires                      0.2.3
INFO: Testing DifferentialDynamicProgramming
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 60422.828   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 2.94995e-12  final value -24.9283      factorizations 16
  5.028149 seconds (3.10 M allocations: 238.104 MB, 2.93% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.5355     17.4        17.4        0.0884      0.0         
2           32.1804     10.6        10.6        0.0824      -0.2        
3           21.5444     7.92        7.92        0.107       -0.6        
4           13.6213     4.97        4.97        0.153       -1.2        
5           8.65144     2.87        2.87        0.193       -2.0        
6           5.77959     0.951       0.951       0.254       -3.1        
7           4.82863     0.0328      0.0328      0.0764      -4.3        
8           4.79578     1.76e-05    1.76e-05    0.00239     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.795764    

            final grad:   3.634463e-06

            final lambda: 4.4841551e-08

            time / iter:  1025  ms

            total time:   9.23  seconds, of which

            derivs:     0.6 %

            back pass:  94.3%

            fwd pass:   1.3 %

            other:      3.8 % (graphics etc.)
 =========== end iLQG ===========
 22.168045 seconds (14.73 M allocations: 920.780 MB, 2.89% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
