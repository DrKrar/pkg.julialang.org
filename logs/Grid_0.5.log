>>> 'Pkg.add("Grid")' log
INFO: Installing Grid v0.4.0
INFO: Installing WoodburyMatrices v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Grid
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Grid")' log
Julia Version 0.5.0-pre+5664
Commit 0d7c014 (2016-07-24 18:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1292.04296875 MB free)
Uptime: 22320.0 sec
Load Avg:  0.61376953125  0.69580078125  0.90234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1109139 s       4012 s     137336 s     684610 s         38 s
#2  3500 MHz     434340 s        408 s      67060 s    1635541 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Grid                          0.4.0
 - JSON                          0.6.0
35 additional packages:
 - BinDeps                       0.4.0
 - BufferedStreams               0.1.5
 - Codecs                        0.1.5
 - ColorTypes                    0.2.5
 - ColorVectorSpace              0.1.5
 - Colors                        0.6.6
 - Compat                        0.8.6
 - ConfParser                    0.0.7              3ea61aa3 (dirty)
 - DataArrays                    0.3.6
 - DataFrames                    0.7.6
 - Docile                        0.5.23
 - FileIO                        0.1.0
 - FixedPointNumbers             0.1.4
 - GZip                          0.2.19
 - GeoIP                         0.2.2              598fe5a8 (dirty)
 - Graphics                      0.1.3
 - HttpCommon                    0.2.6
 - HttpParser                    0.1.1
 - IPNets                        0.2.0
 - Images                        0.5.5              8840a952 (dirty)
 - Libz                          0.1.1
 - MbedTLS                       0.2.5
 - Reexport                      0.0.3
 - Requests                      0.3.8
 - Rmath                         0.1.2
 - SHA                           0.1.2
 - SIUnits                       0.0.6
 - SortingAlgorithms             0.0.6
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - TexExtensions                 0.0.3
 - URIParser                     0.1.5
 - WoodburyMatrices              0.2.0
 - ZipFile                       0.2.6
 - Zlib                          0.1.12
INFO: Testing Grid
WARNING: cell(dims::Integer...) is deprecated, use Array{Any}(dims...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in cell(::Int64) at ./deprecated.jl:50
 in pad1_index(::Tuple{Int64,Int64}, ::Tuple{UnitRange{Int64}}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1250
 in pad1(::Array{Float64,2}, ::Int64, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1263
 in Grid.InterpGrid{T<:AbstractFloat,N,BC<:Grid.BoundaryCondition,IT<:Grid.InterpType}(::Array{Float64,2}, ::Type{Grid.BCnil}, ::Type{Grid.InterpCubic}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:60
 in macro expansion; at /home/vagrant/.julia/v0.5/Grid/test/grid.jl:59 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Grid/test/grid.jl, in expression starting on line 53
WARNING: cell(dims::Integer...) is deprecated, use Array{Any}(dims...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in cell(::Int64) at ./deprecated.jl:50
 in pad1_index(::Tuple{Int64,Int64,Int64}, ::Tuple{UnitRange{Int64}}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1250
 in pad1(::Array{Float64,3}, ::Int64, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1263
 in Grid.InterpGrid{T<:AbstractFloat,N,BC<:Grid.BoundaryCondition,IT<:Grid.InterpType}(::Array{Float64,3}, ::Type{Grid.BCnil}, ::Type{Grid.InterpCubic}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:60
 in macro expansion; at /home/vagrant/.julia/v0.5/Grid/test/grid.jl:76 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Grid/test/grid.jl, in expression starting on line 70
WARNING: cell(dims::Integer...) is deprecated, use Array{Any}(dims...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in cell(::Int64) at ./deprecated.jl:50
 in pad1_index(::Tuple{Int64,Int64,Int64,Int64}, ::Tuple{UnitRange{Int64}}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1250
 in pad1(::Array{Float64,4}, ::Int64, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1263
 in Grid.InterpGrid{T<:AbstractFloat,N,BC<:Grid.BoundaryCondition,IT<:Grid.InterpType}(::Array{Float64,4}, ::Type{Grid.BCnil}, ::Type{Grid.InterpCubic}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:60
 in macro expansion; at /home/vagrant/.julia/v0.5/Grid/test/grid.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Grid/test/grid.jl, in expression starting on line 85
WARNING: cell(dims::Integer...) is deprecated, use Array{Any}(dims...) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in cell(::Int64) at ./deprecated.jl:50
 in pad1_index(::Tuple{Int64}, ::Tuple{UnitRange{Int64}}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1250
 in pad1(::Array{Float64,1}, ::Int64, ::UnitRange{Int64}, ::Vararg{UnitRange{Int64},N}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:1263
 in Grid.InterpGrid{T<:AbstractFloat,N,BC<:Grid.BoundaryCondition,IT<:Grid.InterpType}(::Array{Float64,1}, ::Int64, ::Type{Grid.InterpQuadratic}) at /home/vagrant/.julia/v0.5/Grid/src/interp.jl:67
 in macro expansion; at /home/vagrant/.julia/v0.5/Grid/test/grid.jl:166 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Grid/test/grid.jl, in expression starting on line 165
INFO: Grid tests passed

>>> End of log
