>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (802.1953125 MB free)
Uptime: 15110.0 sec
Load Avg:  0.9541015625  0.9609375  0.98095703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     734224 s         66 s      83073 s     474939 s         40 s
#2  3499 MHz     262600 s         86 s      42828 s    1133289 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - ScikitLearnBase               0.1.1
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 5    2    0  0
 1  145   23  0
 0   14  128  4
 0    0    3  8
Accuracy: 0.8588588588588588
Kappa:    0.7435187309494935

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 5    4    0  0
 3  135   12  0
 0   12  150  3
 0    0    4  5
Accuracy: 0.8858858858858859
Kappa:    0.7915492957746479

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 6    4    0  0
 0  129    8  0
 0    9  162  8
 0    0    3  4
Accuracy: 0.9039039039039038
Kappa:    0.8233538889994032

Mean Accuracy: 0.8828828828828829

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 1    9    0  0
 0  148   11  0
 0   10  145  0
 0    0    4  5
Accuracy: 0.8978978978978979
Kappa:    0.8096535027992132

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 2    3    0  0
 0  143   14  0
 0   16  146  0
 0    0    6  3
Accuracy: 0.8828828828828829
Kappa:    0.7780986228342959

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 1   10    0  0
 0  134    6  0
 0   15  157  1
 0    0    5  4
Accuracy: 0.8888888888888888
Kappa:    0.7929556873750189

Mean Accuracy: 0.8898898898898899

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0    5    0  0
 0  156    2  0
 0   48  115  0
 0    0    7  0
Accuracy: 0.8138138138138138
Kappa:    0.6419044315323909

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0    9    0  0
 0  125   29  0
 0   26  133  0
 0    0   11  0
Accuracy: 0.7747747747747747
Kappa:    0.5748357223111231

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0   12    0  0
 0  109   36  0
 0    3  164  0
 0    0    9  0
Accuracy: 0.8198198198198198
Kappa:    0.6555528738406371

Mean Accuracy: 0.8028028028028028
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     1.0679745676797834
Correlation Coeff:      0.9412350276713844
Coeff of Determination: 0.8851989063140979

Fold 2
Mean Squared Error:     0.8189888126986832
Correlation Coeff:      0.9483281930915177
Coeff of Determination: 0.8988820453428603

Fold 3
Mean Squared Error:     0.9601786084391957
Correlation Coeff:      0.9439182950267373
Coeff of Determination: 0.8896850515095414

Mean Coeff of Determination: 0.8912553343888332

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     0.6653398778623052
Correlation Coeff:      0.9669311296902019
Coeff of Determination: 0.9205767896589027

Fold 2
Mean Squared Error:     0.9482442447250752
Correlation Coeff:      0.9575554016228839
Coeff of Determination: 0.8939604057795361

Fold 3
Mean Squared Error:     0.6789664704969114
Correlation Coeff:      0.9727055849984436
Coeff of Determination: 0.9230856368420025

Mean Coeff of Determination: 0.9125409440934805
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
