>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Cloning cache of ScikitLearnBase from https://github.com/cstjean/ScikitLearnBase.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (815.078125 MB free)
Uptime: 17105.0 sec
Load Avg:  0.9931640625  0.96728515625  0.98583984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     839260 s       7988 s      96946 s     537171 s         39 s
#2  3502 MHz     326028 s        139 s      53089 s    1246136 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.7.0
68 additional packages:
 - Anasol                        0.1.8
 - AxisAlgorithms                0.1.5
 - BIGUQ                         0.1.6
 - BinDeps                       0.4.5
 - BlackBoxOptim                 0.2.1
 - Blosc                         0.1.7
 - Calculus                      0.1.15
 - Codecs                        0.2.0
 - ColorTypes                    0.2.6
 - Colors                        0.6.6
 - Compat                        0.8.8
 - Compose                       0.4.4
 - Conda                         0.3.0
 - Contour                       0.2.0
 - DataArrays                    0.3.8
 - DataFrames                    0.8.1
 - DataStructures                0.4.5
 - Dates                         0.4.4
 - Distances                     0.3.2
 - Distributions                 0.10.2
 - Docile                        0.5.23
 - FactCheck                     0.4.3
 - FileIO                        0.1.2
 - FixedPointNumbers             0.1.4
 - FixedSizeArrays               0.2.3
 - Formatting                    0.1.5
 - ForwardDiff                   0.2.5
 - GZip                          0.2.20
 - Gadfly                        0.4.3
 - HDF5                          0.6.5
 - Hexagons                      0.0.4
 - Interpolations                0.3.6
 - Iterators                     0.1.10
 - JLD                           0.6.3
 - KernelDensity                 0.3.0
 - LaTeXStrings                  0.2.0
 - LegacyStrings                 0.1.1
 - Lexicon                       0.1.18
 - Loess                         0.0.7
 - Lora                          0.5.5
 - MacroTools                    0.3.2
 - Mads                          0.2.3              33972a53 (dirty)
 - Measures                      0.0.3
 - MetaProgTools                 0.1.4
 - NaNMath                       0.2.1
 - ODE                           0.2.1
 - Optim                         0.6.1
 - PDMats                        0.4.2
 - Polynomials                   0.1.0
 - PositiveFactorizations        0.0.2
 - ProgressMeter                 0.3.3
 - PyCall                        1.7.1
 - PyPlot                        2.2.1
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - ReusableFunctions             0.1.6
 - ReverseDiffSource             0.2.3
 - Rmath                         0.1.2
 - RobustPmap                    0.1.9
 - SHA                           0.2.1
 - ScikitLearnBase               0.1.1
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.0
 - YAML                          0.1.10
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 2  40   20   0  0
 0   9  180  12  0
 0   0   21  46  0
 0   0    0   2  0
Accuracy: 0.7987987987987988
Kappa:    0.6240521686381558

Fold 2
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 0  47   19   0  0
 0  18  177  11  0
 0   0   17  41  1
 0   0    0   1  0
Accuracy: 0.7957957957957958
Kappa:    0.6196011893762495

Fold 3
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 1   1    0   0
 0  49   20   0
 0  19  168  19
 0   0   15  41
Accuracy: 0.7777777777777778
Kappa:    0.5956881275841701

Mean Accuracy: 0.7907907907907908

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 0   3    0   0
 0  39   24   0
 0   2  205   5
 0   0   16  39
Accuracy: 0.8498498498498499
Kappa:    0.6902728946927843

Fold 2
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 0  44   18   0  0
 0   3  201   1  0
 0   0   21  42  0
 0   0    0   2  0
Accuracy: 0.8618618618618619
Kappa:    0.725867067539998

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 50   22   0  0
  7  187   2  0
  0   20  44  0
  0    0   1  0
Accuracy: 0.8438438438438438
Kappa:    0.7059752432377362

Mean Accuracy: 0.8518518518518517

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 9   55  0  0
 2  203  0  0
 0   63  0  0
 0    1  0  0
Accuracy: 0.6366366366366366
Kappa:    0.0878777589134125

Fold 2
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0  0    3  0  0
 0  1   63  0  0
 0  0  210  0  0
 0  0   55  0  0
 0  0    1  0  0
Accuracy: 0.6336336336336337
Kappa:    0.011653083566476312

Fold 3
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0  0    1  0  0
 0  0   68  0  0
 0  0  199  0  0
 0  0   64  0  0
 0  0    1  0  0
Accuracy: 0.5975975975975976
Kappa:    0.0

Mean Accuracy: 0.6226226226226226
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     1.517882407918408
Correlation Coeff:      0.8807861362365098
Coeff of Determination: 0.7628005613145984

Fold 2
Mean Squared Error:     1.2569697705425578
Correlation Coeff:      0.908762269234527
Coeff of Determination: 0.8188677798008621

Fold 3
Mean Squared Error:     1.1298030572211626
Correlation Coeff:      0.9270947092457572
Coeff of Determination: 0.8561358857381764

Mean Coeff of Determination: 0.8126014089512124

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     0.9696170169753188
Correlation Coeff:      0.9527209200161447
Coeff of Determination: 0.865512599663752

Fold 2
Mean Squared Error:     0.5780762597802022
Correlation Coeff:      0.9653766118702725
Coeff of Determination: 0.9161560471553132

Fold 3
Mean Squared Error:     0.7980289736318802
Correlation Coeff:      0.9572984565983003
Coeff of Determination: 0.8874955245089902

Mean Coeff of Determination: 0.8897213904426851
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
