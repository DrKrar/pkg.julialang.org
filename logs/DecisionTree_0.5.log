>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DecisionTree
INFO: Use `Pkg.update()` to get the latest versions of your packages
INFO: Nothing to be done
INFO: METADATA is out-of-date — you may not have the latest version of DecisionTree
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.5.0-rc0+4
Commit 347057b (2016-07-27 09:20 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (756.48046875 MB free)
Uptime: 15603.0 sec
Load Avg:  0.99267578125  0.97607421875  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     720868 s       3208 s     103740 s     543330 s         29 s
#2  3499 MHz     283052 s        914 s      49188 s    1160752 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.6
 - ScikitLearnBase               0.1.1
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 6    3    0  0
 1  135   19  0
 0   13  148  2
 0    0    4  2
Accuracy: 0.8738738738738738
Kappa:    0.7650359518849538

Fold 2
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 5    3    0  0
 4  141   14  0
 0   14  147  1
 0    0    1  3
Accuracy: 0.8888888888888888
Kappa:    0.7926979052746698

Fold 3
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 8    1    0  0
 2  142   16  0
 0   10  142  7
 0    0    1  4
Accuracy: 0.8888888888888888
Kappa:    0.7979600872374266

Mean Accuracy: 0.8838838838838838

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 4    4    0  0
 0  140   12  0
 0   14  153  0
 0    0    3  3
Accuracy: 0.9009009009009009
Kappa:    0.8130073000153147

Fold 2
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 3    3    0  0
 0  146   19  0
 0   12  144  0
 0    0    6  0
Accuracy: 0.8798798798798799
Kappa:    0.7701149425287357

Fold 3
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 4    7    0  0
 1  136   20  0
 0    2  159  1
 0    0    2  1
Accuracy: 0.9009009009009009
Kappa:    0.8129245331199674

Mean Accuracy: 0.893893893893894

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 0   10    0  0
 0  141   18  0
 0   18  142  0
 0    0    4  0
Accuracy: 0.8498498498498499
Kappa:    0.7118280314306484

Fold 2
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 0    6    0  0
 0  151   15  0
 0   37  119  0
 0    0    5  0
Accuracy: 0.8108108108108109
Kappa:    0.6319538253714848

Fold 3
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 0   10    0  0
 0  122   27  0
 0   42  126  0
 0    0    6  0
Accuracy: 0.7447447447447447
Kappa:    0.5140855950970799

Mean Accuracy: 0.8018018018018019
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     1.460991160276475
Correlation Coeff:      0.9318406114679196
Coeff of Determination: 0.8638814384997108

Fold 2
Mean Squared Error:     1.736055228696245
Correlation Coeff:      0.9073715819628496
Coeff of Determination: 0.8205438972215315

Fold 3
Mean Squared Error:     1.909329810144379
Correlation Coeff:      0.9063117681280619
Coeff of Determination: 0.8191915181631828

Mean Coeff of Determination: 0.8345389512948085

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     1.187877296236326
Correlation Coeff:      0.9529214883436218
Coeff of Determination: 0.8852302406774207

Fold 2
Mean Squared Error:     1.021189959676237
Correlation Coeff:      0.961036730510798
Coeff of Determination: 0.8941968900259435

Fold 3
Mean Squared Error:     1.1865340739923735
Correlation Coeff:      0.9576703190782737
Coeff of Determination: 0.8903859505872186

Mean Coeff of Determination: 0.8899376937635276
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
