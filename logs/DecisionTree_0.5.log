>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Cloning cache of ScikitLearnBase from https://github.com/cstjean/ScikitLearnBase.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (798.4609375 MB free)
Uptime: 16616.0 sec
Load Avg:  1.00830078125  0.9541015625  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz     777882 s       7329 s      92846 s     578859 s         38 s
#2  3497 MHz     384932 s        330 s      46080 s    1142393 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.7.0
68 additional packages:
 - Anasol                        0.1.8
 - AxisAlgorithms                0.1.5
 - BIGUQ                         0.1.6
 - BinDeps                       0.4.5
 - BlackBoxOptim                 0.2.1
 - Blosc                         0.1.7
 - Calculus                      0.1.15
 - Codecs                        0.2.0
 - ColorTypes                    0.2.6
 - Colors                        0.6.6
 - Compat                        0.8.8
 - Compose                       0.4.4
 - Conda                         0.3.0
 - Contour                       0.2.0
 - DataArrays                    0.3.8
 - DataFrames                    0.8.1
 - DataStructures                0.4.5
 - Dates                         0.4.4
 - Distances                     0.3.2
 - Distributions                 0.10.2
 - Docile                        0.5.23
 - FactCheck                     0.4.3
 - FileIO                        0.1.2
 - FixedPointNumbers             0.1.4
 - FixedSizeArrays               0.2.3
 - Formatting                    0.1.5
 - ForwardDiff                   0.2.5
 - GZip                          0.2.20
 - Gadfly                        0.4.3
 - HDF5                          0.6.5
 - Hexagons                      0.0.4
 - Interpolations                0.3.6
 - Iterators                     0.1.10
 - JLD                           0.6.3
 - KernelDensity                 0.3.0
 - LaTeXStrings                  0.2.0
 - LegacyStrings                 0.1.1
 - Lexicon                       0.1.18
 - Loess                         0.0.7
 - Lora                          0.5.5
 - MacroTools                    0.3.2
 - Mads                          0.2.3              33972a53 (dirty)
 - Measures                      0.0.3
 - MetaProgTools                 0.1.4
 - NaNMath                       0.2.1
 - ODE                           0.2.1
 - Optim                         0.6.1
 - PDMats                        0.4.2
 - Polynomials                   0.1.0
 - PositiveFactorizations        0.0.2
 - ProgressMeter                 0.3.3
 - PyCall                        1.7.1
 - PyPlot                        2.2.1
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - ReusableFunctions             0.1.6
 - ReverseDiffSource             0.2.3
 - Rmath                         0.1.2
 - RobustPmap                    0.1.9
 - SHA                           0.2.1
 - ScikitLearnBase               0.1.1
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.0
 - YAML                          0.1.10
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 46    1   0
  8  246   2
  0    8  22
Accuracy: 0.9429429429429429
Kappa:    0.8506056527590846

Fold 2
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 46    4   0
  2  237   3
  0    2  39
Accuracy: 0.9669669669669669
Kappa:    0.9236254456746106

Fold 3
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 48    3   0
  2  240   3
  0    6  31
Accuracy: 0.9579579579579579
Kappa:    0.8988193419567669

Mean Accuracy: 0.955955955955956

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 40    6   0
  1  244   0
  0    8  34
Accuracy: 0.954954954954955
Kappa:    0.8874112476050942

Fold 2
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 49    5   0
  3  245   1
  0   14  16
Accuracy: 0.9309309309309309
Kappa:    0.8169236285406956

Fold 3
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 41    7   0
  1  246   2
  0    6  30
Accuracy: 0.9519519519519519
Kappa:    0.8767522553782094

Mean Accuracy: 0.9459459459459459

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 0   50  0
 0  255  0
 0   28  0
Accuracy: 0.7657657657657657
Kappa:    0.0

Fold 2
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 0   52  0
 0  244  0
 0   37  0
Accuracy: 0.7327327327327328
Kappa:    0.0

Fold 3
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 25   21  0
 32  212  0
  0   43  0
Accuracy: 0.7117117117117117
Kappa:    0.2188255992962391

Mean Accuracy: 0.7367367367367367
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     0.7458527395437775
Correlation Coeff:      0.9549957122082972
Coeff of Determination: 0.9116610340390612

Fold 2
Mean Squared Error:     1.0313122327815938
Correlation Coeff:      0.9437289497914008
Coeff of Determination: 0.8894855540106403

Fold 3
Mean Squared Error:     1.046045132071352
Correlation Coeff:      0.9453149018482835
Coeff of Determination: 0.8918593937609584

Mean Coeff of Determination: 0.8976686606035532

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     0.7535970871317561
Correlation Coeff:      0.962259990917994
Coeff of Determination: 0.9107529803009626

Fold 2
Mean Squared Error:     0.8691771677383465
Correlation Coeff:      0.9658300482923176
Coeff of Determination: 0.9143451422268357

Fold 3
Mean Squared Error:     0.7504001495986322
Correlation Coeff:      0.9650160048092746
Coeff of Determination: 0.9148038454342932

Mean Coeff of Determination: 0.9133006559873639
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
