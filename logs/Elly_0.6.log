>>> 'Pkg.add("Elly")' log
INFO: Cloning cache of Elly from https://github.com/JuliaParallel/Elly.jl.git
INFO: Cloning cache of ProtoBuf from https://github.com/tanmaykm/ProtoBuf.jl.git
INFO: Installing ArgParse v0.4.0
INFO: Installing CRC v1.2.0
INFO: Installing Elly v0.0.9
INFO: Installing ProtoBuf v0.3.0
INFO: Installing TextWrap v0.1.6
INFO: Installing URIParser v0.1.6
INFO: Package database updated

>>> 'Pkg.test("Elly")' log
Julia Version 0.6.0-dev.1181
Commit e90a2e4 (2016-11-04 01:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (400.39453125 MB free)
Uptime: 20729.0 sec
Load Avg:  1.0615234375  0.9765625  0.99853515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1255174 s         72 s     139856 s     473493 s         33 s
#2  3500 MHz     585391 s       6622 s      71558 s    1337725 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Elly                          0.0.9
 - JSON                          0.8.0
6 additional packages:
 - ArgParse                      0.4.0
 - CRC                           1.2.0
 - Compat                        0.9.3
 - ProtoBuf                      0.3.0
 - TextWrap                      0.1.6
 - URIParser                     0.1.6
INFO: Testing Elly
ERROR: LoadError: connect: connection refused (ECONNREFUSED)
 in yieldto(::Task, ::ANY) at ./event.jl:134
 in wait() at ./event.jl:167
 in wait(::Condition) at ./event.jl:27
 in stream_wait(::TCPSocket, ::Condition, ::Vararg{Condition,N}) at ./stream.jl:42
 in wait_connected(::TCPSocket) at ./stream.jl:251
 in connect at ./stream.jl:914 [inlined]
 in connect(::String, ::Int64) at ./socket.jl:733
 in connect(::Elly.HadoopRpcChannel) at /home/vagrant/.julia/v0.6/Elly/src/rpc.jl:200
 in send_rpc_message(::Elly.HadoopRpcChannel, ::Elly.HadoopRpcController, ::ProtoBuf.MethodDescriptor, ::Elly.hadoop.hdfs.GetFileInfoRequestProto) at /home/vagrant/.julia/v0.6/Elly/src/rpc.jl:239
 in call_method(::Elly.HadoopRpcChannel, ::ProtoBuf.MethodDescriptor, ::Elly.HadoopRpcController, ::Elly.hadoop.hdfs.GetFileInfoRequestProto) at /home/vagrant/.julia/v0.6/Elly/src/rpc.jl:290
 in _get_file_info(::Elly.HDFSClient, ::String) at /home/vagrant/.julia/v0.6/Elly/src/api_hdfs_base.jl:165
 in exists at /home/vagrant/.julia/v0.6/Elly/src/api_hdfs_base.jl:218 [inlined]
 in test_hdfs(::String, ::Int64) at /home/vagrant/.julia/v0.6/Elly/test/hdfstests.jl:7
 in test_hdfs() at /home/vagrant/.julia/v0.6/Elly/test/hdfstests.jl:5
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Elly/test/runtests.jl, in expression starting on line 4
================================[ ERROR: Elly ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Elly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Elly had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
