>>> 'Pkg.add("SortingAlgorithms")' log
INFO: Installing SortingAlgorithms v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SortingAlgorithms
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SortingAlgorithms")' log
Julia Version 0.6.0-dev.2945
Commit 3ccfd1c (2017-02-24 00:52 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2331.10546875 MB free)
Uptime: 24868.0 sec
Load Avg:  0.9384765625  0.998046875  1.01953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz    1426830 s       2303 s     127743 s     644864 s         94 s
#2  3503 MHz     467658 s       4232 s      68121 s    1864474 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - SortingAlgorithms             0.1.0
1 additional packages:
 - Compat                        0.19.0
INFO: Computing test dependencies for SortingAlgorithms...
INFO: Installing DataStructures v0.5.3
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Testing SortingAlgorithms
ERROR: LoadError: Base.Collections.heapify!([1643, 4878, 9486, 3671, 4102, 2250, 7248, 6933, 2601, 5553, 6012, 1688, 6102, 6258, 8024, 2138, 1615, 3206, 1002, 9317, 1761, 498, 3854, 1998, 5552, 1536, 7115, 7717, 1828, 5916, 6387, 8312, 9116, 4153, 4789, 6338, 5127, 1636, 3588, 4481, 2982, 6639, 4281, 3141, 8019, 5691, 5056, 5613, 7750, 5027, 7916, 1639, 2578, 4148, 8609, 2927, 7360, 9239, 6180, 2508, 9259, 5957, 2421, 5960, 715, 3456, 5165, 1153, 639, 6705, 2070, 6364, 208, 243, 5716, 4205, 2659, 4274, 8760, 5031, 2835, 366, 1536, 365, 6237, 9836, 1157, 1211, 543, 443, 7287, 4403, 6461, 8844, 1861, 322, 8245, 7865, 3852, 2290, 115, 5134, 5513, 956, 8703, 6460, 4649, 9508, 6475, 7877, 6215, 7695, 441, 6746, 6611, 2811, 2556, 1592, 6886, 5733, 8288, 7623, 230, 8114, 3200, 7249, 7227, 2014, 2142, 7146, 7352, 2164, 7729, 9804, 1332, 3478, 7442, 377, 5376, 5213, 2259, 2802, 6436, 2426, 1435, 70, 1709, 8300, 1969, 1103, 1157, 2077, 4332, 3656, 5247, 3594, 3592, 2493, 4165, 4443, 8912, 1481, 9452, 1175, 8858, 7702, 5828, 5824, 2654, 1125, 5531, 1437, 4565, 606, 3860, 7997, 2662, 7716, 5170, 4496, 3740, 6405, 755, 5699, 5068, 6376, 5129, 527, 4977, 3945, 8239, 4896, 6831, 3869, 2408, 1331, 5716, 585, 8705, 4935, 6270, 8392, 9995, 1255, 8439, 8568, 3902, 6297, 3697, 2937, 6270, 4719, 2741, 807, 6960, 8564, 938, 6448, 4323, 8898, 1201, 4646, 356, 377, 7449, 3246, 1106, 2644, 9461, 5158, 2341, 1493, 6658, 17, 4399, 8848, 4840, 9672, 3564, 414, 7910, 3421, 8075, 7572, 7724, 2519, 9171, 1510, 812, 7534, 9815, 2497, 2351, 7187, 9141, 4384, 8335, 1674, 3596, 809, 4262, 5013, 5027, 4151, 5364, 6035, 3670, 6993, 7784, 1611, 5399, 4246, 1135, 7984, 8884, 3521, 2163, 7882, 3029, 1036, 2908, 5336, 6483, 349, 3370, 8349, 3863, 6866, 8262, 8217, 7188, 8951, 9439, 132, 6759, 622, 1040, 1105, 3527, 862, 4234, 5100, 4066, 141, 9093, 3034, 1364, 7743, 669, 1555, 4933, 6824, 4133, 1871, 6652, 2815, 8817, 3323, 3610, 2047, 2387, 7529, 5638, 8292, 6852, 6604, 4026, 388, 3679, 9830, 7352, 9714, 7359, 8050, 520, 7929, 7412, 7813, 3308, 8282, 7290, 6715, 7558, 9779, 904, 5717, 3202, 7219, 3010, 491, 2385, 2502, 3901, 8811, 8697, 7070, 8224, 7581, 9494, 4485, 2879, 9824, 5555, 9386, 2857, 3306, 8244, 7855, 1096, 7782, 2711, 7134, 3866, 9248, 8443, 9811, 6394, 2184, 7910, 4934, 1650, 1059, 3215, 6702, 6220, 4067, 6905, 9228, 8914, 2711, 789, 237, 2037, 4676, 979, 7434, 8318, 1418, 2085, 6147, 4370, 9784, 5523, 8092, 4700, 6428, 5698, 1658, 1817, 3166, 7774, 5223, 4239, 5546, 1289, 3315, 8711, 5030, 4805, 9987, 8468, 7007, 9253, 4679, 9694, 3983, 8395, 2766, 1266, 7891, 5909, 7404, 5149, 5605, 4103, 1579, 7804, 1424, 7367, 4283, 5167, 1902, 4027, 3837, 1619, 7102, 3132, 4640, 487, 5580, 6613, 1063, 1314, 9218, 6535, 8764, 1967, 6818, 1978, 164, 6803, 7189, 6502, 961, 3638, 686, 7421, 7567, 9701, 7544, 2930, 7282, 8596, 5992, 1780, 6607, 1645, 6139, 14, 1945, 3705, 1832, 7755, 7016, 3420, 4386, 2238, 8057, 8009, 1170, 3899, 8918, 7932, 9432, 4115, 8755, 228, 1980, 7059, 5746, 4875, 4042, 8811, 961, 3386, 835, 619, 6104, 7291, 4816, 770, 3343, 5293, 9203, 7145, 2483, 6349, 3688, 5745, 2436, 1196, 4416, 3739, 5892, 5737, 56, 3256, 7972, 7505, 4492, 4362, 948, 8439, 3021, 6377, 2862, 7196, 4032, 9100, 314, 8834, 9311, 2657, 1983, 4091, 8639, 7978, 5184, 9672, 3490, 1602, 4293, 2221, 7575, 7881, 6603, 1330, 9239, 6789, 6150, 5446, 4131, 2174, 3879, 8898, 3828, 4816, 2188, 3197, 8671, 5804, 9076, 7047, 9277, 8913, 4326, 2666, 5090, 1795, 2497, 3376, 3910, 5590, 450, 960, 4801, 2061, 5143, 657, 2584, 3396, 5920, 9496, 4802, 7358, 5668, 566, 5650, 3935, 9084, 5933, 9094, 6065, 9739, 359, 2204, 1723, 1371, 6025, 4146, 7083, 6011, 2794, 3329, 2317, 3355, 6103, 2389, 9449, 3638, 4026, 7326, 902, 8809, 6297, 6785, 3509, 7378, 8125, 5282, 8223, 4431, 2445, 276, 2476, 6187, 1710, 4319, 6168, 6611, 837, 6203, 7318, 8647, 3629, 8075, 1353, 5910, 1428, 2331, 7905, 1462, 7968, 6186, 4707, 4489, 6708, 2990, 9526, 6402, 1301, 6719, 3117, 5906, 8916, 2861, 8901, 350, 8028, 2293, 6138, 1794, 1591, 3232, 3635, 6019, 3507, 9762, 100, 2621, 4278, 8573, 526, 8894, 8033, 2589, 7580, 4637, 5076, 768, 9432, 8640, 1977, 5657, 7122, 1682, 8205, 6919, 2421, 6993, 9644, 705, 7390, 8501, 2259, 647, 3253, 2484, 2835, 5335, 7404, 230, 5623, 5836, 8598, 1059, 4890, 360, 5863, 2399, 9745, 3357, 8757, 6783, 2330, 7896, 815, 9702, 649, 1878, 8662, 5350, 2112, 5804, 7790, 496, 791, 9186, 1558, 5705, 7280, 2340, 385, 6070, 1169, 4105, 414, 5728, 9127, 8173, 8157, 3349, 7660, 3079, 4631, 8409, 5247, 7658, 6127, 3840, 109, 9529, 4307, 3822, 2073, 5139, 3204, 4385, 2735, 4331, 3499, 6576, 1330, 8631, 511, 5124, 2258, 5493, 6685, 3944, 6844, 6553, 1577, 4348, 5112, 9645, 3831, 2956, 1651, 7542, 743, 3312, 1098, 5461, 3375, 1866, 6696, 2502, 5089, 7262, 3633, 439, 8408, 6568, 3786, 3495, 6861, 9671, 3185, 4644, 4660, 739, 343, 5885, 5467, 6258, 4004, 2666, 9064, 6682, 2364, 4041, 2835, 3589, 9294, 3258, 7721, 5687, 8205, 3185, 5145, 5996, 2885, 9768, 3186, 3713, 7899, 3500, 4658, 7083, 2758, 1218, 5614, 741, 6907, 3974, 5943, 9948, 4622, 5900, 7078, 7434, 4416, 6877, 3816, 5290, 8464, 1784, 2786, 3996, 3474, 718, 2661, 2962, 2522, 2293, 6901, 1662, 7881, 5645, 4109, 9785, 7151, 7941, 7077, 6259, 273, 1207, 8821, 5605, 8504, 6640, 2400, 1562, 9879, 3930, 4803, 7340, 1496, 2379, 1625, 1496, 4968, 7399, 1135, 6198, 4802, 3125, 8272, 7662, 5466, 6878, 7386, 7588, 9443, 3791, 5115, 2160, 6908, 3982, 5045, 5710, 1066, 8539, 1877, 9074, 1010, 7179, 4935, 708, 12, 5632, 7419, 1803, 6194, 4438, 4427, 2236, 2555, 8722, 4380, 2980, 3861, 4890, 2383, 1541, 1034, 6243, 5180, 214, 1553, 4912, 580, 6814, 4267, 5301, 5467, 1137, 3857, 3294, 4067, 2855, 5262, 5546, 1703, 747, 5029, 3509, 863, 7952, 2754, 4471, 8780, 7193, 3067, 8592, 2072, 3774, 3402, 3444, 3602, 8888, 6584, 6735, 2199, 1405, 9469, 8517, 7199, 1623, 8001, 249, 140, 4832, 1696, 4705, 5545, 3725, 3226, 6854, 7852, 6009, 8959, 550, 5255, 1411, 9740, 6513, 1133, 9333], Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}(Base.Order.ForwardOrdering())) has been moved to the package DataStructures.jl.
Run Pkg.add("DataStructures") to install DataStructures on Julia v0.6 and later, and then run `using DataStructures`.
Stacktrace:
 [1] sort!(::Array{Int64,1}, ::Int64, ::Int64, ::SortingAlgorithms.HeapSortAlg, ::Base.Order.ForwardOrdering) at /home/vagrant/.julia/v0.6/SortingAlgorithms/src/SortingAlgorithms.jl:29
 [2] sort!(::Array{Int64,1}, ::SortingAlgorithms.HeapSortAlg, ::Base.Order.ForwardOrdering) at ./sort.jl:432
 [3] #sort!#7(::SortingAlgorithms.HeapSortAlg, ::Function, ::Function, ::Bool, ::Base.Order.ForwardOrdering, ::Function, ::Array{Int64,1}) at ./sort.jl:491
 [4] (::Base.#kw##sort!)(::Array{Any,1}, ::Base.#sort!, ::Array{Int64,1}) at ./<missing>:0
 [5] #sort#8(::Array{Any,1}, ::Function, ::Array{Int64,1}) at ./sort.jl:538
 [6] (::Base.#kw##sort)(::Array{Any,1}, ::Base.#sort, ::Array{Int64,1}) at ./<missing>:0
 [7] macro expansion at /home/vagrant/.julia/v0.6/SortingAlgorithms/test/runtests.jl:9 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SortingAlgorithms/test/runtests.jl, in expression starting on line 8
==========================[ ERROR: SortingAlgorithms ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SortingAlgorithms/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DataStructures v0.5.3
INFO: Removing SpecialFunctions v0.1.1
INFO: Removing StatsBase v0.13.1
ERROR: SortingAlgorithms had test errors

>>> End of log
