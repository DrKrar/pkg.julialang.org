>>> 'Pkg.add("SCS")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing MathProgBase v0.6.1
INFO: Installing SCS v0.2.7
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building SCS
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SCS
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SCS")' log
Julia Version 0.6.0-dev.2995
Commit d3de8cc (2017-02-27 22:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2164.44921875 MB free)
Uptime: 20807.0 sec
Load Avg:  0.93505859375  1.083984375  1.1279296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1249275 s       2463 s     105521 s     447375 s         92 s
#2  3500 MHz     338688 s       5240 s      56607 s    1611002 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - SCS                           0.2.7
5 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - MathProgBase                  0.6.1
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing SCS
Running tests:
 Test: direct.jl
ERROR: LoadError: LoadError: MethodError: no method matching SCS_solve(::Int64, ::Int64, ::RowVector{Float64,Array{Float64,1}}, ::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Int64,1}, ::Int64, ::Int64, ::Int64)
Closest candidates are:
  SCS_solve(::Int64, ::Int64, !Matched::Union{SparseMatrixCSC{Float64,Int64}, Union{Array{T,1}, Array{T,2}} where T}, ::Array{Float64,N} where N, ::Array{Float64,N} where N, ::Int64, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Int64, ::Int64, !Matched::Array{Float64,1}) at /home/vagrant/.julia/v0.6/SCS/src/high_level_wrapper.jl:154
  SCS_solve(::Int64, ::Int64, !Matched::Union{SparseMatrixCSC{Float64,Int64}, Union{Array{T,1}, Array{T,2}} where T}, ::Array{Float64,N} where N, ::Array{Float64,N} where N, ::Int64, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Int64, ::Int64, !Matched::Array{Float64,N} where N, !Matched::Int64) at /home/vagrant/.julia/v0.6/SCS/src/high_level_wrapper.jl:127
  SCS_solve(::Int64, ::Int64, !Matched::Union{SparseMatrixCSC{Float64,Int64}, Union{Array{T,1}, Array{T,2}} where T}, ::Array{Float64,N} where N, ::Array{Float64,N} where N, ::Int64, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Int64, ::Int64, !Matched::Array{Float64,N} where N, !Matched::Int64, !Matched::Array{Float64,1}) at /home/vagrant/.julia/v0.6/SCS/src/high_level_wrapper.jl:127
  ...
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:539
 [2] include(::String) at ./sysimg.jl:14
 [3] macro expansion at /home/vagrant/.julia/v0.6/SCS/test/runtests.jl:9 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SCS/test/direct.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/SCS/test/runtests.jl, in expression starting on line 7
=================================[ ERROR: SCS ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SCS/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SCS had test errors

>>> End of log
