>>> 'Pkg.add("SCS")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing MathProgBase v0.6.1
INFO: Installing SCS v0.2.7
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building SCS
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Tuple{BinDeps.DependencyProvider,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:51
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:235
 [14] process_options(::Base.JLOptions) at ./client.jl:286
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SCS/deps/build.jl, in expression starting on line 19
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:51
 [3] macro expansion at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:12
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:235
 [12] process_options(::Base.JLOptions) at ./client.jl:286
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SCS/deps/build.jl, in expression starting on line 71
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SCS
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SCS")' log
Julia Version 0.6.0-dev.2788
Commit 8341444 (2017-02-12 23:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2043.640625 MB free)
Uptime: 20153.0 sec
Load Avg:  1.03173828125  1.11474609375  1.13232421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1205806 s       5122 s     105762 s     449172 s         80 s
#2  3500 MHz     323928 s       2026 s      55754 s    1577846 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - SCS                           0.2.7
5 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.17.0
 - MathProgBase                  0.6.1
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing SCS
Running tests:
 Test: direct.jl

WARNING: deprecated syntax "abstract AbstractMathProgModel" at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/SolverInterface.jl:47.
Use "abstract type AbstractMathProgModel end" instead.

WARNING: deprecated syntax "abstract AbstractMathProgSolver" at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/SolverInterface.jl:51.
Use "abstract type AbstractMathProgSolver end" instead.

WARNING: deprecated syntax "abstract AbstractLinearQuadraticModel<:AbstractMathProgModel" at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/LinearQuadratic.jl:4.
Use "abstract type AbstractLinearQuadraticModel<:AbstractMathProgModel end" instead.

WARNING: deprecated syntax "abstract MathProgCallbackData" at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/callbacks.jl:2.
Use "abstract type MathProgCallbackData end" instead.

WARNING: deprecated syntax "abstract AbstractNonlinearModel<:AbstractMathProgModel" at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/Nonlinear.jl:4.
Use "abstract type AbstractNonlinearModel<:AbstractMathProgModel end" instead.

WARNING: deprecated syntax "abstract AbstractNLPEvaluator" at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/Nonlinear.jl:7.
Use "abstract type AbstractNLPEvaluator end" instead.

WARNING: deprecated syntax "abstract AbstractConicModel<:AbstractMathProgModel" at /home/vagrant/.julia/v0.6/MathProgBase/src/SolverInterface/Conic.jl:4.
Use "abstract type AbstractConicModel<:AbstractMathProgModel end" instead.

WARNING: deprecated syntax "typealias InputVector{T<:Union{Real,Char}} Union{Vector{T},Real,Char}" at /home/vagrant/.julia/v0.6/MathProgBase/src/HighLevelInterface/linprog.jl:9.
Use "InputVector{T<:Union{Real,Char}} = Union{Vector{T},Real,Char}" instead.

WARNING: deprecated syntax "typealias SymbolInputVector Union{Vector{Symbol},Symbol}" at /home/vagrant/.julia/v0.6/MathProgBase/src/HighLevelInterface/mixintprog.jl:10.
Use "const SymbolInputVector = Union{Vector{Symbol},Symbol}" instead.
ERROR: LoadError: LoadError: MethodError: no method matching SCS_solve(::Int64, ::Int64, ::RowVector{Float64,Array{Float64,1}}, ::Array{Float64,1}, ::Array{Float64,1}, ::Int64, ::Int64, ::Array{Int64,1}, ::Int64, ::Array{Int64,1}, ::Int64, ::Int64, ::Int64)
Closest candidates are:
  SCS_solve(::Int64, ::Int64, !Matched::Union{SparseMatrixCSC{Float64,Int64}, Union{Array{T,1}, Array{T,2}} where T}, ::Array{Float64,N} where N, ::Array{Float64,N} where N, ::Int64, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/SCS/src/high_level_wrapper.jl:154
  SCS_solve(::Int64, ::Int64, !Matched::Union{SparseMatrixCSC{Float64,Int64}, Union{Array{T,1}, Array{T,2}} where T}, ::Array{Float64,N} where N, ::Array{Float64,N} where N, ::Int64, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Int64, ::Int64, !Matched::Array{Float64,1}) at /home/vagrant/.julia/v0.6/SCS/src/high_level_wrapper.jl:154
  SCS_solve(::Int64, ::Int64, !Matched::Union{SparseMatrixCSC{Float64,Int64}, Union{Array{T,1}, Array{T,2}} where T}, ::Array{Float64,N} where N, ::Array{Float64,N} where N, ::Int64, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Array{Int64,N} where N, ::Int64, ::Int64, ::Int64, !Matched::Array{Float64,N} where N, !Matched::Int64) at /home/vagrant/.julia/v0.6/SCS/src/high_level_wrapper.jl:127
  ...
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:539
 [2] include(::String) at ./sysimg.jl:14
 [3] macro expansion at /home/vagrant/.julia/v0.6/SCS/test/runtests.jl:9 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/SCS/test/direct.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/SCS/test/runtests.jl, in expression starting on line 7
=================================[ ERROR: SCS ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SCS/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SCS had test errors

>>> End of log
