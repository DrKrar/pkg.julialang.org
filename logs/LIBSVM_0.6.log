>>> 'Pkg.add("LIBSVM")' log
INFO: Cloning cache of LIBSVM from https://github.com/simonster/LIBSVM.jl.git
INFO: Installing LIBSVM v0.0.1
INFO: Building LIBSVM
g++ -Wall -Wconversion -O3 -fPIC -c svm.cpp
svm.cpp: In function ‘svm_model* svm_load_model(const char*)’:
svm.cpp:2778:24: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
   fscanf(fp,"%80s",cmd);
                        ^
svm.cpp:2782:25: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
    fscanf(fp,"%80s",cmd);
                         ^
svm.cpp:2807:25: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
    fscanf(fp,"%80s",cmd);
                         ^
svm.cpp:2831:33: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
    fscanf(fp,"%d",&param.degree);
                                 ^
svm.cpp:2833:33: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
    fscanf(fp,"%lf",&param.gamma);
                                 ^
svm.cpp:2835:33: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
    fscanf(fp,"%lf",&param.coef0);
                                 ^
svm.cpp:2837:36: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
    fscanf(fp,"%d",&model->nr_class);
                                    ^
svm.cpp:2839:29: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
    fscanf(fp,"%d",&model->l);
                             ^
svm.cpp:2845:36: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
     fscanf(fp,"%lf",&model->rho[i]);
                                    ^
svm.cpp:2852:37: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
     fscanf(fp,"%d",&model->label[i]);
                                     ^
svm.cpp:2859:38: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
     fscanf(fp,"%lf",&model->probA[i]);
                                      ^
svm.cpp:2866:38: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
     fscanf(fp,"%lf",&model->probB[i]);
                                      ^
svm.cpp:2873:35: warning: ignoring return value of ‘int fscanf(FILE*, const char*, ...)’, declared with attribute warn_unused_result [-Wunused-result]
     fscanf(fp,"%d",&model->nSV[i]);
                                   ^
if [ "Linux" = "Darwin" ]; then \
		SHARED_LIB_FLAG="-dynamiclib -Wl,-install_name,libsvm.so.2"; \
	else \
		SHARED_LIB_FLAG="-shared -Wl,-soname,libsvm.so.2"; \
	fi; \
	g++ ${SHARED_LIB_FLAG} svm.o -o libsvm.so.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of LIBSVM
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LIBSVM")' log
Julia Version 0.6.0-dev.1847
Commit 8f9036a (2017-01-02 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (421.01953125 MB free)
Uptime: 37723.0 sec
Load Avg:  0.98193359375  1.67431640625  1.53271484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz    2034951 s       6404 s     206819 s    1099698 s        101 s
#2  3508 MHz     754118 s        100 s     133773 s    2783392 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - LIBSVM                        0.0.1
5 additional packages:
 - Compat                        0.10.0
 - CompilerTools                 0.2.1
 - DataStructures                0.4.6
 - DocOpt                        0.2.0
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
INFO: Testing LIBSVM
ERROR: LoadError: LoadError: UndefVarError: int32 not defined
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:532
 [2] eval(::Module, ::Any) at ./boot.jl:236
 [3] require(::Symbol) at ./loading.jl:446
 [4] include_from_node1(::String) at ./loading.jl:532
 [5] include(::String) at ./sysimg.jl:14
 [6] process_options(::Base.JLOptions) at ./client.jl:298
 [7] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/LIBSVM/src/LIBSVM.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/LIBSVM/test/runtests.jl, in expression starting on line 1
===============================[ ERROR: LIBSVM ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/LIBSVM/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: LIBSVM had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
