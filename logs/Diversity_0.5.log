>>> 'Pkg.add("Diversity")' log
INFO: Cloning cache of Diversity from https://github.com/richardreeve/Diversity.jl.git
INFO: Installing Diversity v0.2.7
INFO: Installing Docile v0.5.23
INFO: Installing Lexicon v0.1.18
INFO: Package database updated

>>> 'Pkg.test("Diversity")' log
Julia Version 0.5.0-dev+4805
Commit 3f4e1e7* (2016-06-16 01:29 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Diversity
WARNING: We now generate two warnings for code coverage completeness...
WARNING: qD: Population proportions don't sum to 1, fixing...
WARNING: qDZ: Population proportions don't sum to 1, fixing...
ERROR: LoadError: LoadError: MethodError: no method matching powermean(::Array{Float64,1}, ::Float64, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true})
Closest candidates are:
  powermean{S<:AbstractFloat}(::Array{S<:AbstractFloat,1}, ::Real)
  powermean{S<:AbstractFloat}(::Array{S<:AbstractFloat,1}, ::Real, !Matched::Array{S<:AbstractFloat,1})
  powermean{S<:AbstractFloat}(::Array{S<:AbstractFloat,1})
  ...
 in mapslices(::Diversity.##35#36{Int64}, ::Array{Float64,2}, ::Array{Int64,1}) at ./abstractarray.jl:1403
 in Dγ̄(::Array{Float64,2}, ::Int64, ::Array{Float64,2}) at /home/vagrant/.julia/v0.5/Diversity/src/GeneralisedDiversities.jl:500
 in diversity(::Diversity.#Dγ̄, ::Array{Float64,2}, ::Int64, ::Array{Float64,2}, ::Bool, ::Bool, ::Bool) at /home/vagrant/.julia/v0.5/Diversity/src/GeneralisedDiversities.jl:55
 in jostbeta(::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.5/Diversity/src/Jost.jl:49
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Diversity/test/Jost.jl, in expression starting on line 21
while loading /home/vagrant/.julia/v0.5/Diversity/test/runtests.jl, in expression starting on line 17
==============================[ ERROR: Diversity ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Diversity/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Diversity had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:231
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
