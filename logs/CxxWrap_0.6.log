>>> 'Pkg.add("CxxWrap")' log
INFO: Cloning cache of CxxWrap from https://github.com/JuliaInterop/CxxWrap.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing CxxWrap v0.1.7
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building CxxWrap
Found Julia library at /home/vagrant/julia/lib/libjulia.so
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/cxx_wrap
INFO: Changing Directory to /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/cxx_wrap
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_VISIBILITY - Success
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY
-- Performing Test COMPILER_HAS_HIDDEN_INLINE_VISIBILITY - Success
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR
-- Performing Test COMPILER_HAS_DEPRECATED_ATTR - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/cxx_wrap
Scanning dependencies of target cxx_wrap
[ 25%] [ 50%] [ 75%] Building CXX object CMakeFiles/cxx_wrap.dir/containers/containers.cpp.o
Building CXX object CMakeFiles/cxx_wrap.dir/c_interface.cpp.o
[100%] Building CXX object CMakeFiles/cxx_wrap.dir/cxx_wrap.cpp.o
Building CXX object CMakeFiles/cxx_wrap.dir/functions.cpp.o
Linking CXX shared library libcxx_wrap.so
[100%] Built target cxx_wrap
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libcxx_wrap.so.0.1
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libcxx_wrap.so.0
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libcxx_wrap.so
-- Removed runtime path from "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libcxx_wrap.so.0.1"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/array.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/cxx_wrap.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/functions.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/type_conversion.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/containers/const_array.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/include/containers/tuple.hpp
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/cmake/CxxWrapConfig.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/cmake/CxxWrapConfig-release.cmake
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/cmake/CxxWrapConfigVersion.cmake
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/examples
INFO: Changing Directory to /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/examples
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.6/CxxWrap/deps/builds/examples
Scanning dependencies of target functions
[ 12%] Scanning dependencies of target extended
[ 25%] Scanning dependencies of target except
Scanning dependencies of target containers
Building CXX object CMakeFiles/functions.dir/functions.cpp.o
Building CXX object CMakeFiles/extended.dir/extended.cpp.o
[ 37%] [ 50%] Building CXX object CMakeFiles/except.dir/except.cpp.o
Building CXX object CMakeFiles/containers.dir/containers.cpp.o
Linking CXX shared library libexcept.so
[ 50%] Built target except
Scanning dependencies of target hello
[ 62%] Building CXX object CMakeFiles/hello.dir/hello.cpp.o
Linking CXX shared library libhello.so
[ 62%] Built target hello
Scanning dependencies of target inheritance
[ 75%] Building CXX object CMakeFiles/inheritance.dir/inheritance.cpp.o
Linking CXX shared library libextended.so
Linking CXX shared library libcontainers.so
[ 75%] Built target extended
[ 75%] Scanning dependencies of target parametric
Built target containers
[ 87%] Scanning dependencies of target types
Building CXX object CMakeFiles/parametric.dir/parametric.cpp.o
[100%] Building CXX object CMakeFiles/types.dir/types.cpp.o
Linking CXX shared library libfunctions.so
[100%] Built target functions
Linking CXX shared library libinheritance.so
[100%] Built target inheritance
Linking CXX shared library libparametric.so
[100%] Built target parametric
Linking CXX shared library libtypes.so
[100%] Built target types
Install the project...
-- Install configuration: "Release"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libcontainers.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libcontainers.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libexcept.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libexcept.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libextended.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libextended.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libfunctions.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libfunctions.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libhello.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libhello.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libinheritance.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libinheritance.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libparametric.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libparametric.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
-- Installing: /home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libtypes.so
-- Set runtime path of "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib/libtypes.so" to "/home/vagrant/.julia/v0.6/CxxWrap/deps/usr/lib"
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/CxxWrap/deps/build.jl, in expression starting on line 142
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of CxxWrap
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CxxWrap")' log
Julia Version 0.6.0-dev.1262
Commit 9f999b7 (2016-11-16 21:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (942.2734375 MB free)
Uptime: 16241.0 sec
Load Avg:  1.68310546875  1.8837890625  1.763671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     945422 s       5654 s      91870 s     400298 s         43 s
#2  3499 MHz     427499 s       4585 s      59843 s    1059232 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CxxWrap                       0.1.7
 - JSON                          0.8.0
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing CxxWrap
running test containers.jl...
Displaying const matrix
3×2 ConstArray{Float64,2}:
 1.0  4.0
 2.0  5.0
 3.0  6.0
running test except.jl...
exception 1
exception 2
exception 3
running test extended_module.jl...
running test functions.jl...
methods(CppHalfFunctions.half_d) = # 2 methods for generic function "half_d":
half_d(arg1::Int64) in CppHalfFunctions
half_d(arg1::Float64) in CppHalfFunctions
---- Half test timings ----
Julia test:
  0.091979 seconds (126 allocations: 8.047 KB)
  0.133416 seconds (4 allocations: 160 bytes)
  0.120422 seconds (4 allocations: 160 bytes)
C test:
  0.140913 seconds (4 allocations: 160 bytes)
  0.109228 seconds (4 allocations: 160 bytes)
  0.104953 seconds (4 allocations: 160 bytes)
C++ test:
  0.120681 seconds (4 allocations: 160 bytes)
  0.140728 seconds (4 allocations: 160 bytes)
  0.135115 seconds (4 allocations: 160 bytes)
C++ lambda test:
  0.158597 seconds (4 allocations: 160 bytes)
  0.151707 seconds (4 allocations: 160 bytes)
  0.149833 seconds (4 allocations: 160 bytes)
C++ test, loop in the C++ code:
  0.109690 seconds (17 allocations: 1.078 KB)
  0.105235 seconds (4 allocations: 160 bytes)
  0.089726 seconds (4 allocations: 160 bytes)
jl_call inside C++ loop (array is 100 times smaller than other tests):
  0.043247 seconds (1.00 M allocations: 15.304 MB)
  0.072974 seconds (1.00 M allocations: 15.259 MB, 24.22% gc time)
  0.130619 seconds (1.00 M allocations: 15.259 MB, 54.99% gc time)
running test hello.jl...
CppHello.greet() = "hello, world"
running test inheritance.jl...
running test parametric.jl...
Dumping object p1:
TemplateType{P1,P2}
  cpp_object: Ptr{Void} Ptr{Void} @0x00000000037ba350
running test property.jl...
obj.a = val = 6
running test types.jl...
Dumping type w...
World
  cpp_object: Ptr{Void} Ptr{Void} @0x0000000003b83040
fw = CppTypes.world_factory() = World(Ptr{Void} @0x0000000003b42670)
swf = CppTypes.shared_world_factory() = CxxWrap.SharedPtr{World}(Ptr{Void} @0x00000000039c1380)
uwf = CppTypes.unique_world_factory() = CxxWrap.UniquePtr{World}(Ptr{Void} @0x00000000064a5370)
CppTypes.greet(w) = "hello"
Destroying World with message constructed
finalized w
throw test 1 passed
throw test 2 passed
completed deepcopy test
noncopyable constructed
completed noncopyable test
creating bitsval1
created bitsval1
creating bc
created bc
a: 2.0, b: 3.0
INFO: CxxWrap tests passed

>>> End of log
