>>> 'Pkg.add("Bio")' log
INFO: Cloning cache of Bio from https://github.com/BioJulia/Bio.jl.git
INFO: Cloning cache of IntervalTrees from https://github.com/BioJulia/IntervalTrees.jl.git
INFO: Cloning cache of Switch from https://github.com/dcjones/Switch.jl.git
INFO: Installing Bio v0.1.0
INFO: Installing BufferedStreams v0.0.2
INFO: Installing Docile v0.5.23
INFO: Installing IntervalTrees v0.0.5
INFO: Installing Iterators v0.1.9
INFO: Installing Libz v0.0.2
INFO: Installing Switch v0.0.1
INFO: Package database updated

>>> 'Pkg.test("Bio")' log
Julia Version 0.5.0-dev+2440
Commit 2bb94d6 (2016-02-01 02:22 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Computing test dependencies for Bio...
INFO: Installing ArrayViews v0.6.4
INFO: Installing Codecs v0.1.5
INFO: Installing Dates v0.4.4
INFO: Installing Distributions v0.8.9
INFO: Installing FactCheck v0.4.2
INFO: Installing PDMats v0.3.6
INFO: Installing StatsBase v0.7.4
INFO: Installing StatsFuns v0.2.0
INFO: Installing YAML v0.1.10
INFO: Testing Bio

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Switch/src/Switch.jl:8.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Switch/src/Switch.jl:9.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Switch/src/Switch.jl:21.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Switch/src/Switch.jl:30.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Switch/src/Switch.jl:44.
Use "[]" instead.

WARNING: deprecated syntax "{}" at /home/vagrant/.julia/v0.5/Switch/src/Switch.jl:61.
Use "[]" instead.
WARNING: Method definition next(Bio.Seq.AminoAcidSequence, Any) in module Seq at /home/vagrant/.julia/v0.5/Bio/src/seq/aminoacid.jl:423 overwritten at /home/vagrant/.julia/v0.5/Bio/src/seq/aminoacid.jl:427.
IntervalCollection
  > Insertion/Iteration
  > Intersection
  > Show
7 facts verified.
Alphanumeric Sorting
8 facts verified.
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
WARNING: Base.Nothing is deprecated, use Void instead.
  likely near /home/vagrant/.julia/v0.5/Bio/test/intervals/TestIntervals.jl:206
IntervalStream
  > StreamBuffer
  > Intersection
  > IntervalStream Intersection
  > IntervalStream Coverage
15 facts verified.
Interval Parsing
  > BED Parsing
Cloning into '/home/vagrant/.julia/v0.5/Bio/test/BioFmtSpecimens'...
  > BED Intersection
14 facts verified.
BigBed
  > BED → BigBed → BED round-trip
  > BigBed Intersection
13 facts verified.
Nucleotides
  > Conversions
    > UInt8
      > DNA conversions from UInt8
      > RNA conversions from UInt8
      > DNA conversions to UInt8
      > RNA conversions to UInt8
    > UInt64
      > DNA conversions from UInt64
      > RNA conversions from UInt64
      > DNA conversions to UInt64
      > RNA conversions to UInt64
    > Char
      > DNA conversions from Char
      > RNA conversions from Char
      > DNA conversions to Char
      > RNA conversions to Char
  > Show DNA
  > Show RNA
  > Sequences
    > Nucleotide Sequences
      > Construction and Conversions
        > Constructing empty sequences
        > Conversion from/to Strings
        > Conversion between RNA and DNA
        > Construction from nucleotide vectors
        > Concatenation
        > Repetition
      > Equality
      > Length
      > Copy
      > Access and Iterations
        > Access DNA Sequence
        > Iteration through DNA Sequence
        > Access RNA Sequence
        > Iteration through RNA Sequence
        > Indexing with Ranges
      > Subsequence Construction
        > Subsequence Construction from Ranges
      > Transformations
        > Reversal
        > Complement
        > Reverse Complement
      > Mismatches
      > Mutability
    > SequenceNIterator
    > Kmer
      > Construction and Conversions
        > From strings
      > Comparisons
        > Equality
        > Inequality
      > Length
      > Access and Iterations
        > Access DNA Kmer
        > Iteration through DNA Kmer
        > Access RNA Kmer
        > Iteration through RNA Kmer
      > Transformations
        > Reversal
        > Complement
        > Reverse Complement
      > Mismatches
    > EachKmer
    > Nucleotide Counting
    > Kmer Counting
590 facts verified.
Aminoacids
  > AminoAcid Sequences
    > Construction
    > Conversion
      Error :: (line:727) :: Conversion
        Expression: convert(AminoAcidSequence,[aa for aa = seq]) --> seq
        MethodError: Cannot `convert` an object of type Array{Any,1} to an object of type Bio.Seq.AminoAcidSequence
        This may have arisen from a call to the constructor Bio.Seq.AminoAcidSequence(...),
        since type constructors fall back to convert methods.
        Closest candidates are:
          convert(::Type{Bio.Seq.AminoAcidSequence}, !Matched::AbstractArray{Bio.Seq.AminoAcid,1})
          convert(::Type{Bio.Seq.AminoAcidSequence}, !Matched::AbstractString)
          convert{T}(::Type{T}, !Matched::T)
          ...
         in #1231(TestSeq.##1231#1307) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:271
         in do_fact(FactCheck.#do_fact, TestSeq.##1231#1307, Expr, Symbol, FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
         [inlined code] from ./boot.jl:331
         in #1229(TestSeq.##1229#1305) at /home/vagrant/.julia/v0.5/Bio/test/seq/TestSeq.jl:1146
         in context(FactCheck.#context, TestSeq.##1229#1305, ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
         in #1222(TestSeq.##1222#1297) at /home/vagrant/.julia/v0.5/Bio/test/seq/TestSeq.jl:1144
         in context(FactCheck.#context, TestSeq.##1222#1297, ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
         in #1221(TestSeq.##1221#1296) at /home/vagrant/.julia/v0.5/Bio/test/seq/TestSeq.jl:1124
         in facts(FactCheck.#facts, TestSeq.##1221#1296, ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
         in include at ./boot.jl:264
         in include_from_node1 at ./loading.jl:417
         in include at ./boot.jl:264
         in include_from_node1 at ./loading.jl:417
         in process_options at ./client.jl:244
         in _start at ./client.jl:300
    > Concatenation
    > Equality
    > Repetition
    > Copy
    > Subsequence Construction
    > Mutability
  > Parsers
    > Valid Cases
    > Invalid Cases
Out of 95 total facts:
  Verified: 94
  Errored:  1
Translation
6 facts verified.
Sequence Parsing
  > FASTA Parsing
  > FASTQ Parsing
91 facts verified.
ERROR: LoadError: LoadError: error compiling facts: error compiling #1409: unsupported or misplaced expression "toplevel" in function #1409
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in process_options at ./client.jl:244
 in _start at ./client.jl:300
while loading /home/vagrant/.julia/v0.5/Bio/test/seq/TestSeq.jl, in expression starting on line 1436
while loading /home/vagrant/.julia/v0.5/Bio/test/runtests.jl, in expression starting on line 12
=================================[ ERROR: Bio ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Bio/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing ArrayViews v0.6.4
INFO: Removing Codecs v0.1.5
INFO: Removing Dates v0.4.4
INFO: Removing Distributions v0.8.9
INFO: Removing FactCheck v0.4.2
INFO: Removing PDMats v0.3.6
INFO: Removing StatsBase v0.7.4
INFO: Removing StatsFuns v0.2.0
INFO: Removing YAML v0.1.10
ERROR: Base.Pkg.PkgError("Bio had test errors")
 in #test#55(Base.Pkg.Entry.##test#55, Bool, Any, Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in #2(Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}) at ./pkg/dir.jl:31
 in cd(Base.Filesystem.#cd, Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, UTF8String) at ./file.jl:47
 in #cd#1(Base.Pkg.Dir.##cd#1, Array{Any,1}, Any, Any, Array{AbstractString,1}, Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(Base.Pkg.##test#4, Bool, Any, ASCIIString, Vararg{ASCIIString}) at ./pkg.jl:228
 in eval at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options at ./client.jl:221
 in _start at ./client.jl:300

>>> End of log
