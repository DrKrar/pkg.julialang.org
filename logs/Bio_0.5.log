>>> 'Pkg.add("Bio")' log
INFO: Cloning cache of Bio from https://github.com/BioJulia/Bio.jl.git
INFO: Cloning cache of Combinatorics from https://github.com/JuliaMath/Combinatorics.jl.git
INFO: Cloning cache of IndexableBitVectors from https://github.com/BioJulia/IndexableBitVectors.jl.git
INFO: Cloning cache of IntervalTrees from https://github.com/BioJulia/IntervalTrees.jl.git
INFO: Cloning cache of PolynomialFactors from https://github.com/jverzani/PolynomialFactors.jl.git
INFO: Cloning cache of Roots from https://github.com/JuliaMath/Roots.jl.git
INFO: Installing AutoHashEquals v0.1.1
INFO: Installing BGZFStreams v0.1.2
INFO: Installing BinDeps v0.4.7
INFO: Installing Bio v0.4.5
INFO: Installing Blosc v0.2.0
INFO: Installing BufferedStreams v0.3.0
INFO: Installing Calculus v0.2.0
INFO: Installing ColorTypes v0.3.4
INFO: Installing Colors v0.7.3
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.2
INFO: Installing DiffBase v0.0.4
INFO: Installing Distributions v0.12.1
INFO: Installing FileIO v0.3.0
INFO: Installing FixedPointNumbers v0.3.4
INFO: Installing ForwardDiff v0.3.4
INFO: Installing GZip v0.2.20
INFO: Installing HDF5 v0.7.3
INFO: Installing IndexableBitVectors v0.1.1
INFO: Installing IntervalTrees v0.1.1
INFO: Installing Iterators v0.3.0
INFO: Installing JLD v0.6.9
INFO: Installing LegacyStrings v0.2.0
INFO: Installing Libz v0.2.4
INFO: Installing LightGraphs v0.7.2
INFO: Installing LightXML v0.4.0
INFO: Installing NaNMath v0.2.2
INFO: Installing PDMats v0.5.6
INFO: Installing ParserCombinator v1.7.11
INFO: Installing PolynomialFactors v0.0.3
INFO: Installing Polynomials v0.1.2
INFO: Installing Primes v0.1.2
INFO: Installing QuadGK v0.1.1
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing Roots v0.3.0
INFO: Installing SHA v0.3.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Building Blosc
INFO: Building HDF5
INFO: Building LightXML
INFO: Package database updated

>>> 'Pkg.test("Bio")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (661.5390625 MB free)
Uptime: 7113.0 sec
Load Avg:  0.984375  0.96923828125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     403586 s        405 s      52545 s     174487 s         12 s
#2  3499 MHz     141258 s       6411 s      30647 s     513617 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Bio                           0.4.5
 - JSON                          0.8.3
41 additional packages:
 - AutoHashEquals                0.1.1
 - BGZFStreams                   0.1.2
 - BinDeps                       0.4.7
 - Blosc                         0.2.0
 - BufferedStreams               0.3.0
 - Calculus                      0.2.0
 - ColorTypes                    0.3.4
 - Colors                        0.7.3
 - Combinatorics                 0.3.2
 - Compat                        0.19.0
 - DataStructures                0.5.2
 - DiffBase                      0.0.4
 - Distributions                 0.12.1
 - FileIO                        0.3.0
 - FixedPointNumbers             0.3.4
 - ForwardDiff                   0.3.4
 - GZip                          0.2.20
 - HDF5                          0.7.3
 - IndexableBitVectors           0.1.1
 - IntervalTrees                 0.1.1
 - Iterators                     0.3.0
 - JLD                           0.6.9
 - LegacyStrings                 0.2.0
 - Libz                          0.2.4
 - LightGraphs                   0.7.2
 - LightXML                      0.4.0
 - NaNMath                       0.2.2
 - PDMats                        0.5.6
 - ParserCombinator              1.7.11
 - PolynomialFactors             0.0.3
 - Polynomials                   0.1.2
 - Primes                        0.1.2
 - QuadGK                        0.1.1
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - Roots                         0.3.0
 - SHA                           0.3.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for Bio...
INFO: Cloning cache of YAML from https://github.com/dcjones/YAML.jl.git
INFO: Installing Codecs v0.2.0
INFO: Installing Dates v0.4.4
INFO: Installing YAML v0.2.0
INFO: Testing Bio
Test Summary: | Pass  Total
  Alignments  |  303    303
Test Summary:     | Pass  Total
  PairwiseAlignment |  212    212
Cloning into '/home/vagrant/.julia/v0.5/Bio/test/BioFmtSpecimens'...
Test Summary:              | Pass  Total
  High-throughput Sequencing |  237    237
Test Summary: | Pass  Total
  Phylogenies |  129    129
Test Summary:  | Pass  Total
  Misc Functions |    6      6
Test Summary:     | Pass  Total
  Dating algorithms |   10     10
Test Summary: | Pass  Total
  Strand      |   16     16
Test Summary: | Pass  Total
  Interval    |    6      6
Insertion/Iteration: Error During Test
  Test threw an exception of type MethodError
  Expression: Intervals.isordered(collect(Interval{Int},ic))
  MethodError: Cannot `convert` an object of type IntervalTrees.IntervalBTreeIteratorState{Int64,Bio.Intervals.Interval{Int64},16} to an object of type IntervalTrees.IntervalBTreeIteratorState{Int64,Bio.Intervals.Interval{Int64},64}
  This may have arisen from a call to the constructor IntervalTrees.IntervalBTreeIteratorState{Int64,Bio.Intervals.Interval{Int64},64}(...),
  since type constructors fall back to convert methods.
   in start(::Bio.Intervals.IntervalCollection{Int64}) at /home/vagrant/.julia/v0.5/Bio/src/intervals/intervalcollection.jl:160
   in copy!(::Array{Bio.Intervals.Interval{Int64},1}, ::Bio.Intervals.IntervalCollection{Int64}) at ./abstractarray.jl:477
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/intervals/runtests.jl:195 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/intervals/runtests.jl:184 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/runtests.jl:28 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Intersection: Error During Test
  Test threw an exception of type MethodError
  Expression: sort(collect(intersect(ic_a,ic_b))) == sort(simple_intersection(intervals_a,intervals_b))
  MethodError: Cannot `convert` an object of type IntervalTrees.IntervalBTree{Int64,Bio.Intervals.Interval{Int64},16} to an object of type IntervalTrees.IntervalBTree{Int64,Bio.Intervals.Interval{Int64},64}
  This may have arisen from a call to the constructor IntervalTrees.IntervalBTree{Int64,Bio.Intervals.Interval{Int64},64}(...),
  since type constructors fall back to convert methods.
   in copy!(::Base.LinearFast, ::Array{IntervalTrees.IntervalBTree{Int64,Bio.Intervals.Interval{Int64},64},1}, ::Base.LinearFast, ::Array{IntervalTrees.IntervalBTree{Int64,Bio.Intervals.Interval{Int64},16},1}) at ./abstractarray.jl:559
   in Bio.Intervals.IntersectIterator{Int64,Int64}(::Array{IntervalTrees.IntervalBTree{Int64,Bio.Intervals.Interval{Int64},16},1}, ::Array{IntervalTrees.IntervalBTree{Int64,Bio.Intervals.Interval{Int64},16},1}) at /home/vagrant/.julia/v0.5/Bio/src/intervals/intervalcollection.jl:211
   in intersect(::Bio.Intervals.IntervalCollection{Int64}, ::Bio.Intervals.IntervalCollection{Int64}) at /home/vagrant/.julia/v0.5/Bio/src/intervals/intervalcollection.jl:225
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/intervals/runtests.jl:223 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/intervals/runtests.jl:199 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/runtests.jl:28 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Show: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: Cannot `convert` an object of type IntervalTrees.IntervalBTreeIteratorState{Int64,Bio.Intervals.Interval{Int64},16} to an object of type IntervalTrees.IntervalBTreeIteratorState{Int64,Bio.Intervals.Interval{Int64},64}
  This may have arisen from a call to the constructor IntervalTrees.IntervalBTreeIteratorState{Int64,Bio.Intervals.Interval{Int64},64}(...),
  since type constructors fall back to convert methods.
   in start(::Bio.Intervals.IntervalCollection{Int64}) at /home/vagrant/.julia/v0.5/Bio/src/intervals/intervalcollection.jl:160
   in show(::Base.DevNullStream, ::Bio.Intervals.IntervalCollection{Int64}) at /home/vagrant/.julia/v0.5/Bio/src/intervals/intervalcollection.jl:121
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/intervals/runtests.jl:232 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/intervals/runtests.jl:227 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/runtests.jl:28 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Test Summary:         | Pass  Error  Total
  IntervalCollection  |    5      3      8
  Insertion/Iteration |    2      1      3
  Intersection        |    3      1      4
  Show                |           1      1
ERROR: LoadError: LoadError: Some tests did not pass: 5 passed, 0 failed, 3 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:495
 in macro expansion; at ./test.jl:679 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/Bio/test/runtests.jl:28 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Bio/test/intervals/runtests.jl, in expression starting on line 182
while loading /home/vagrant/.julia/v0.5/Bio/test/runtests.jl, in expression starting on line 27
=================================[ ERROR: Bio ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Bio/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Codecs v0.2.0
INFO: Removing Dates v0.4.4
INFO: Removing YAML v0.2.0
ERROR: Bio had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
