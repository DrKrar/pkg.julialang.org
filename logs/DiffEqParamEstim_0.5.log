>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Cloning cache of DiffEqParamEstim from https://github.com/JuliaDiffEq/DiffEqParamEstim.jl.git
INFO: Cloning cache of LearnBase from https://github.com/JuliaML/LearnBase.jl.git
INFO: Cloning cache of LossFunctions from https://github.com/JuliaML/LossFunctions.jl.git
INFO: Cloning cache of LsqFit from https://github.com/JuliaOpt/LsqFit.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.2.0
INFO: Installing DataStructures v0.5.2
INFO: Installing DiffBase v0.0.4
INFO: Installing DiffEqBase v0.10.0
INFO: Installing DiffEqParamEstim v0.1.0
INFO: Installing Distributions v0.12.0
INFO: Installing ForwardDiff v0.3.4
INFO: Installing LearnBase v0.1.2
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.3
INFO: Installing LsqFit v0.1.1
INFO: Installing MacroTools v0.3.4
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.5
INFO: Installing PDMats v0.5.4
INFO: Installing Parameters v0.6.0
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.1
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.2.0
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.1
INFO: Installing SimpleTraits v0.2.0
INFO: Installing StatsBase v0.13.0
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1669.87890625 MB free)
Uptime: 24117.0 sec
Load Avg:  1.04833984375  1.001953125  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1358052 s       4194 s     100383 s     656178 s         86 s
#2  3500 MHz     530160 s       2943 s      62862 s    1742952 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.1.0
 - JSON                          0.8.3
28 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.2.0
 - Compat                        0.17.0
 - DataStructures                0.5.2
 - DiffBase                      0.0.4
 - DiffEqBase                    0.10.0
 - Distributions                 0.12.0
 - ForwardDiff                   0.3.4
 - LearnBase                     0.1.2
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.3
 - LsqFit                        0.1.1
 - MacroTools                    0.3.4
 - NaNMath                       0.2.2
 - Optim                         0.7.5
 - PDMats                        0.5.4
 - Parameters                    0.6.0
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.1
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.2.0
 - Rmath                         0.1.6
 - SHA                           0.3.1
 - SimpleTraits                  0.2.0
 - StatsBase                     0.13.0
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing Conda v0.5.1
INFO: Installing Distances v0.4.0
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Iterators v0.2.0
INFO: Installing Juno v0.2.5
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.1
INFO: Installing Media v0.2.5
INFO: Installing NLopt v0.3.3
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v1.3.1
INFO: Installing ParameterizedFunctions v1.0.0
INFO: Installing PolynomialFactors v0.0.3
INFO: Installing Polynomials v0.1.2
INFO: Installing Primes v0.1.2
INFO: Installing Roots v0.3.0
INFO: Installing SymEngine v0.1.2
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 0s (434 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 86190 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.9) ...
INFO: Building SymEngine
Warning: 'conda-forge' already in 'channels' list, moving to the top
Warning: 'symengine' already in 'channels' list, moving to the top
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.814413e+03              NaN
 * lambda: 10000.0

     1     2.814410e+03     8.733957e+02
 * g(x): 873.3957331724114
 * lambda: 1000.0
 * dx: [1.76882e-6]

     2     2.814379e+03     8.726245e+02
 * g(x): 872.6244605910172
 * lambda: 100.0
 * dx: [1.76724e-5]

     3     2.814073e+03     8.649615e+02
 * g(x): 864.9615011029919
 * lambda: 10.0
 * dx: [0.000175155]

     4     2.810231e+03     8.064781e+02
 * g(x): 806.4781295372919
 * lambda: 1.0
 * dx: [0.00160878]

     5     2.787385e+03     5.295650e+02
 * g(x): 529.5649590690482
 * lambda: 0.1
 * dx: [0.0101442]

     6     2.732947e+03     1.039213e+02
 * g(x): 103.92131756600752
 * lambda: 0.010000000000000002
 * dx: [0.0212784]

     7     2.646618e+03     6.417894e+01
 * g(x): 64.17893917243161
 * lambda: 0.0010000000000000002
 * dx: [0.0283893]

     8     2.533533e+03     7.443975e+01
 * g(x): 74.43975080961516
 * lambda: 0.00010000000000000003
 * dx: [0.0341149]

     9     2.400229e+03     9.296565e+01
 * g(x): 92.96564828963619
 * lambda: 1.0000000000000004e-5
 * dx: [0.0377657]

    10     2.252933e+03     1.980732e+02
 * g(x): 198.07324400700915
 * lambda: 1.0000000000000004e-6
 * dx: [0.0400523]

    11     1.992570e+03     1.154038e+02
 * g(x): 115.40379186700294
 * lambda: 1.0000000000000005e-7
 * dx: [0.0484791]

    12     1.486494e+03     2.627399e+02
 * g(x): 262.7398759428807
 * lambda: 1.0000000000000005e-8
 * dx: [0.0639402]

    13     7.647187e+02     8.214775e+02
 * g(x): 821.4774728027676
 * lambda: 1.0000000000000005e-9
 * dx: [0.0760229]

    14     1.203687e+02     8.168093e+02
 * g(x): 816.8093396779927
 * lambda: 1.0000000000000006e-10
 * dx: [0.086959]

    15     1.014583e+00     1.853042e+02
 * g(x): 185.3041987975455
 * lambda: 1.0000000000000006e-11
 * dx: [0.0463678]

    16     3.780722e-02     3.208294e-01
 * g(x): 0.32082940246350783
 * lambda: 1.0000000000000006e-12
 * dx: [0.00465365]

    17     3.779966e-02     1.580551e-06
 * g(x): 1.5805511148214713e-6
 * lambda: 1.0000000000000007e-13
 * dx: [1.29815e-5]

    18     3.779966e-02     7.318944e-04
 * g(x): 0.0007318943560806757
 * lambda: 1.0000000000000006e-12
 * dx: [1.63256e-8]

    19     3.779966e-02     7.318944e-04
 * g(x): 0.0007318943560806757
 * lambda: 1.0000000000000006e-11
 * dx: [1.63256e-8]

    20     3.779966e-02     7.318944e-04
 * g(x): 0.0007318943560806757
 * lambda: 1.0000000000000006e-10
 * dx: [1.63256e-8]

    21     3.779966e-02     7.318944e-04
 * g(x): 0.0007318943560806757
 * lambda: 1.0000000000000005e-9
 * dx: [1.63256e-8]

    22     3.779966e-02     7.318944e-04
 * g(x): 0.0007318943560806757
 * lambda: 1.0000000000000005e-8
 * dx: [1.63256e-8]

    23     3.779966e-02     9.395281e-09
 * g(x): 9.39528138621526e-9
 * lambda: 1.0000000000000005e-8
 * dx: [1.63256e-8]

WARNING: Problem solving for delta_x: predicted residual increase.
0.037799655264019516 (predicted_residual) >
0.03779965526401949 (residual) + 6.938893903907228e-18 (eps)
    24     3.779966e-02     2.875566e-08
 * g(x): 2.8755659187140736e-8
 * lambda: 1.0000000000000005e-9
 * dx: [-5.35429e-12]

WARNING: MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,trace,f_calls,g_calls,h_calls) is deprecated, use MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,false,trace,f_calls,g_calls,h_calls) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Optim.MultivariateOptimizationResults{T,N,M}(::String, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::Int64, ::Bool, ::Bool, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Array{Optim.OptimizationState{LsqFit.LevenbergMarquardt},1}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 in #levenberg_marquardt#1(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest},Array{Float64,1},Array{Float64,1}}, ::Calculus.#g#5{LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest},Array{Float64,1},Array{Float64,1}},Symbol}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/levenberg_marquardt.jl:169
 in (::LsqFit.#kw##levenberg_marquardt)(::Array{Any,1}, ::LsqFit.#levenberg_marquardt, ::Function, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #lmfit#2(::Array{Any,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest},Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:30
 in (::LsqFit.#kw##lmfit)(::Array{Any,1}, ::LsqFit.#lmfit, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #curve_fit#3(::Array{Any,1}, ::Function, ::DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:40
 in (::LsqFit.#kw##curve_fit)(::Array{Any,1}, ::LsqFit.#curve_fit, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in #lm_fit#1(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/DiffEqParamEstim.jl:18
 in (::DiffEqParamEstim.#kw##lm_fit)(::Array{Any,1}, ::DiffEqParamEstim.#lm_fit, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 24
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LeastSquaresOptim to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.457009e+03              NaN
 * lambda: 10000.0

     1     1.456946e+03     2.847572e+03
 * g(x): 2847.571566410882
 * lambda: 1000.0
 * dx: [1.06575e-5,9.40224e-6]

     2     1.456316e+03     2.844783e+03
 * g(x): 2844.783221462926
 * lambda: 100.0
 * dx: [0.000106464,9.36084e-5]

     3     1.450076e+03     2.817283e+03
 * g(x): 2817.2826111734676
 * lambda: 10.0
 * dx: [0.00105378,0.000895398]

     4     1.392492e+03     2.577883e+03
 * g(x): 2577.8828114151675
 * lambda: 1.0
 * dx: [0.00960125,0.00554907]

     5     1.071331e+03     1.714397e+03
 * g(x): 1714.3974467071675
 * lambda: 0.1
 * dx: [0.0571114,-0.0448446]

     6     5.059091e+02     1.213725e+03
 * g(x): 1213.7252445541192
 * lambda: 0.010000000000000002
 * dx: [0.136262,-0.163456]

     7     4.023631e+01     2.126264e+02
 * g(x): 212.62643703230492
 * lambda: 0.0010000000000000002
 * dx: [0.0449084,0.326983]

     8     2.849030e+00     2.814351e+02
 * g(x): 281.4350668379614
 * lambda: 0.00010000000000000003
 * dx: [-0.0570305,0.275429]

     9     3.857813e-02     2.209847e+00
 * g(x): 2.2098473865511883
 * lambda: 1.0000000000000004e-5
 * dx: [0.00826183,-0.00235688]

    10     3.768325e-02     2.949672e-02
 * g(x): 0.029496719328336307
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000229622,0.00122204]

    11     3.768322e-02     4.511749e-07
 * g(x): 4.511749431834744e-7
 * lambda: 1.0000000000000005e-7
 * dx: [-1.49061e-6,5.16464e-6]

    12     3.768322e-02     3.428571e-05
 * g(x): 3.428571278291104e-5
 * lambda: 1.0000000000000006e-6
 * dx: [-3.45941e-9,1.79773e-8]

WARNING: MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,trace,f_calls,g_calls,h_calls) is deprecated, use MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,false,trace,f_calls,g_calls,h_calls) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Optim.MultivariateOptimizationResults{T,N,M}(::String, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::Int64, ::Bool, ::Bool, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Array{Optim.OptimizationState{LsqFit.LevenbergMarquardt},1}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 in #levenberg_marquardt#1(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti},Array{Float64,1},Array{Float64,1}}, ::Calculus.#g#5{LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti},Array{Float64,1},Array{Float64,1}},Symbol}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/levenberg_marquardt.jl:169
 in (::LsqFit.#kw##levenberg_marquardt)(::Array{Any,1}, ::LsqFit.#levenberg_marquardt, ::Function, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #lmfit#2(::Array{Any,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti},Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:30
 in (::LsqFit.#kw##lmfit)(::Array{Any,1}, ::LsqFit.#lmfit, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #curve_fit#3(::Array{Any,1}, ::Function, ::DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:40
 in (::LsqFit.#kw##curve_fit)(::Array{Any,1}, ::LsqFit.#curve_fit, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in #lm_fit#1(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/DiffEqParamEstim.jl:18
 in (::DiffEqParamEstim.#kw##lm_fit)(::Array{Any,1}, ::DiffEqParamEstim.#lm_fit, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 91
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LeastSquaresOptim to fit the parameter
Use LM to fit the parameter
     0     8.951488e+02              NaN
 * lambda: 10000.0

     1     8.950217e+02     2.415634e+03
 * g(x): 2415.6343258601946
 * lambda: 1000.0
 * dx: [1.18891e-5,-9.51892e-7,4.36971e-5,1.71635e-5]

     2     8.937530e+02     2.410972e+03
 * g(x): 2410.9718890336076
 * lambda: 100.0
 * dx: [0.000118658,-9.18336e-6,0.000436219,0.000171261]

     3     8.812791e+02     2.365371e+03
 * g(x): 2365.371229031506
 * lambda: 10.0
 * dx: [0.0011639,-5.9597e-5,0.00428874,0.00167595]

     4     7.751675e+02     2.000327e+03
 * g(x): 2000.3268612205711
 * lambda: 1.0
 * dx: [0.00979596,0.00184023,0.0369696,0.0137285]

     5     3.455654e+02     1.020764e+03
 * g(x): 1020.764397784715
 * lambda: 0.1
 * dx: [0.0387323,0.0566161,0.202202,0.033139]

     6     1.716258e+01     1.616878e+02
 * g(x): 161.68782704588355
 * lambda: 0.010000000000000002
 * dx: [0.043064,0.0882416,0.44381,-0.0907376]

     7     2.507987e+00     1.347910e+02
 * g(x): 134.79097363968458
 * lambda: 0.0010000000000000002
 * dx: [0.0428063,0.0138415,-0.0962609,-0.0893453]

     8     1.843227e-01     5.188052e+01
 * g(x): 51.880520196386584
 * lambda: 0.00010000000000000003
 * dx: [0.0526264,0.0360485,-0.16259,-0.0563499]

     9     4.092492e-02     7.370702e+00
 * g(x): 7.370702419090815
 * lambda: 1.0000000000000004e-5
 * dx: [0.00986256,0.00278991,-0.0231619,-0.0101282]

    10     3.765011e-02     2.438544e-02
 * g(x): 0.024385435773054034
 * lambda: 1.0000000000000004e-6
 * dx: [0.00162378,0.000602829,-0.00548303,-0.00189831]

    11     3.764996e-02     1.590056e-06
 * g(x): 1.590055590861006e-6
 * lambda: 1.0000000000000005e-7
 * dx: [1.46937e-5,3.51309e-6,-4.35291e-5,-1.536e-5]

    12     3.764996e-02     2.811916e-08
 * g(x): 2.8119162415185528e-8
 * lambda: 1.0000000000000005e-8
 * dx: [6.7981e-8,4.44181e-8,-2.17407e-7,-6.48308e-8]

    13     3.764996e-02     2.045959e-06
 * g(x): 2.045958623853039e-6
 * lambda: 1.0000000000000005e-7
 * dx: [4.96874e-9,2.95003e-9,-1.44153e-8,-5.33352e-9]

WARNING: MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,trace,f_calls,g_calls,h_calls) is deprecated, use MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,false,trace,f_calls,g_calls,h_calls) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Optim.MultivariateOptimizationResults{T,N,M}(::String, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::Int64, ::Bool, ::Bool, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Array{Optim.OptimizationState{LsqFit.LevenbergMarquardt},1}, ::Int64, ::Int64, ::Int64) at ./deprecated.jl:50
 in #levenberg_marquardt#1(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraAll},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraAll},Array{Float64,1},Array{Float64,1}}, ::Calculus.#g#5{LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraAll},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraAll},Array{Float64,1},Array{Float64,1}},Symbol}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/levenberg_marquardt.jl:169
 in (::LsqFit.#kw##levenberg_marquardt)(::Array{Any,1}, ::LsqFit.#levenberg_marquardt, ::Function, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #lmfit#2(::Array{Any,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraAll},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraAll},Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:30
 in (::LsqFit.#kw##lmfit)(::Array{Any,1}, ::LsqFit.#lmfit, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #curve_fit#3(::Array{Any,1}, ::Function, ::DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraAll},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraAll}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:40
 in (::LsqFit.#kw##curve_fit)(::Array{Any,1}, ::LsqFit.#curve_fit, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in #lm_fit#1(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraAll}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/DiffEqParamEstim.jl:18
 in (::DiffEqParamEstim.#kw##lm_fit)(::Array{Any,1}, ::DiffEqParamEstim.#lm_fit, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraAll}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 122
Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LeastSquaresOptim to fit the parameter
INFO: DiffEqParamEstim tests passed
INFO: Removing Combinatorics v0.3.2
INFO: Removing Conda v0.5.1
INFO: Removing Distances v0.4.0
INFO: Removing GenericSVD v0.0.2
INFO: Removing Hiccup v0.1.1
INFO: Removing InplaceOps v0.1.0
INFO: Removing Iterators v0.2.0
INFO: Removing Juno v0.2.5
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.1
INFO: Removing Media v0.2.5
INFO: Removing NLopt v0.3.3
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v1.3.1
INFO: Removing ParameterizedFunctions v1.0.0
INFO: Removing PolynomialFactors v0.0.3
INFO: Removing Polynomials v0.1.2
INFO: Removing Primes v0.1.2
INFO: Removing Roots v0.3.0
INFO: Removing SymEngine v0.1.2

>>> End of log
