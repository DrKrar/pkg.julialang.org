>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Cloning cache of DiffEqParamEstim from https://github.com/JuliaDiffEq/DiffEqParamEstim.jl.git
INFO: Cloning cache of LearnBase from https://github.com/JuliaML/LearnBase.jl.git
INFO: Cloning cache of LossFunctions from https://github.com/JuliaML/LossFunctions.jl.git
INFO: Cloning cache of LsqFit from https://github.com/JuliaOpt/LsqFit.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.2.0
INFO: Installing DataStructures v0.5.2
INFO: Installing DiffBase v0.0.4
INFO: Installing DiffEqBase v0.9.0
INFO: Installing DiffEqParamEstim v0.1.0
INFO: Installing Distributions v0.12.0
INFO: Installing ForwardDiff v0.3.4
INFO: Installing LearnBase v0.1.1
INFO: Installing LineSearches v0.1.5
INFO: Installing LossFunctions v0.0.2
INFO: Installing LsqFit v0.1.1
INFO: Installing MacroTools v0.3.4
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.4
INFO: Installing PDMats v0.5.4
INFO: Installing Parameters v0.6.0
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.1
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.2.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.0
INFO: Installing SimpleTraits v0.2.0
INFO: Installing StatsBase v0.13.0
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1671.72265625 MB free)
Uptime: 23776.0 sec
Load Avg:  0.9765625  0.99755859375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1362818 s       1520 s     128334 s     585856 s         40 s
#2  3499 MHz     507844 s       5213 s      67587 s    1738840 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.1.0
 - JSON                          0.8.2
29 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.2.0
 - Compat                        0.15.0
 - DataStructures                0.5.2
 - DiffBase                      0.0.4
 - DiffEqBase                    0.9.0
 - Distributions                 0.12.0
 - ForwardDiff                   0.3.4
 - LearnBase                     0.1.1
 - LineSearches                  0.1.5
 - LossFunctions                 0.0.2
 - LsqFit                        0.1.1
 - MacroTools                    0.3.4
 - NaNMath                       0.2.2
 - Optim                         0.7.4
 - PDMats                        0.5.4
 - Parameters                    0.6.0
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.1
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.2.0
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.0
 - SimpleTraits                  0.2.0
 - StatsBase                     0.13.0
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Cloning cache of NLopt from https://github.com/JuliaOpt/NLopt.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing Conda v0.5.1
INFO: Installing Distances v0.3.2
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Iterators v0.2.0
INFO: Installing Juno v0.2.5
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing MathProgBase v0.6.0
INFO: Installing Media v0.2.5
INFO: Installing NLopt v0.3.3
INFO: Installing NLsolve v0.9.1
INFO: Installing OrdinaryDiffEq v1.2.0
INFO: Installing ParameterizedFunctions v1.0.0
INFO: Installing PolynomialFactors v0.0.3
INFO: Installing Polynomials v0.1.2
INFO: Installing Primes v0.1.2
INFO: Installing Roots v0.3.0
INFO: Installing SymEngine v0.1.2
INFO: Building Conda
INFO: Building NLopt
Installing dependency libnlopt0 via `sudo apt-get install libnlopt0`:
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  libnlopt0
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 161 kB of archives.
After this operation, 468 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libnlopt0 amd64 2.4.1+dfsg-1ubuntu1 [161 kB]
dpkg-preconfigure: unable to re-open stdin: No such file or directory
Fetched 161 kB in 0s (392 kB/s)
Selecting previously unselected package libnlopt0:amd64.
(Reading database ... 86190 files and directories currently installed.)
Preparing to unpack .../libnlopt0_2.4.1+dfsg-1ubuntu1_amd64.deb ...
Unpacking libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Setting up libnlopt0:amd64 (2.4.1+dfsg-1ubuntu1) ...
Processing triggers for libc-bin (2.19-0ubuntu6.9) ...
INFO: Building SymEngine
Warning: 'conda-forge' already in 'channels' list, moving to the top
Warning: 'symengine' already in 'channels' list, moving to the top
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.816399e+03              NaN
 * lambda: 10000.0

     1     2.816396e+03     8.778649e+02
 * g(x): 877.8649065882191
 * lambda: 1000.0
 * dx: [1.77787e-6]

     2     2.816365e+03     8.770865e+02
 * g(x): 877.0865010381947
 * lambda: 100.0
 * dx: [1.77628e-5]

     3     2.816056e+03     8.693865e+02
 * g(x): 869.3865431923464
 * lambda: 10.0
 * dx: [0.000176052]

     4     2.812181e+03     8.105393e+02
 * g(x): 810.5392932224619
 * lambda: 1.0
 * dx: [0.00161702]

     5     2.789144e+03     5.318790e+02
 * g(x): 531.8790401959778
 * lambda: 0.1
 * dx: [0.0101861]

     6     2.734274e+03     1.041433e+02
 * g(x): 104.14328161115554
 * lambda: 0.010000000000000002
 * dx: [0.0213538]

     7     2.647319e+03     6.455666e+01
 * g(x): 64.55666097545327
 * lambda: 0.0010000000000000002
 * dx: [0.0285056]

     8     2.533665e+03     7.453068e+01
 * g(x): 74.53067619735292
 * lambda: 0.00010000000000000003
 * dx: [0.0342058]

     9     2.399175e+03     1.230564e+02
 * g(x): 123.0563836185059
 * lambda: 1.0000000000000004e-5
 * dx: [0.0380629]

    10     2.247679e+03     1.173152e+02
 * g(x): 117.31516780860746
 * lambda: 1.0000000000000004e-6
 * dx: [0.041026]

    11     1.980303e+03     1.122861e+02
 * g(x): 112.28606073516113
 * lambda: 1.0000000000000005e-7
 * dx: [0.0489837]

    12     1.472442e+03     2.539257e+02
 * g(x): 253.9256601540777
 * lambda: 1.0000000000000005e-8
 * dx: [0.0636201]

    13     7.461062e+02     8.346906e+02
 * g(x): 834.690554157557
 * lambda: 1.0000000000000005e-9
 * dx: [0.0764599]

    14     1.158526e+02     8.763758e+02
 * g(x): 876.3757814324583
 * lambda: 1.0000000000000006e-10
 * dx: [0.0858154]

    15     8.915999e-01     1.766868e+02
 * g(x): 176.68677306324096
 * lambda: 1.0000000000000006e-11
 * dx: [0.0456809]

    16     3.845647e-02     2.742999e-01
 * g(x): 0.27429993120243434
 * lambda: 1.0000000000000006e-12
 * dx: [0.00435352]

    17     3.845546e-02     1.730845e-07
 * g(x): 1.730845355929489e-7
 * lambda: 1.0000000000000007e-13
 * dx: [4.75147e-6]

    18     3.845546e-02     7.411950e-05
 * g(x): 7.411949715246946e-5
 * lambda: 1.0000000000000006e-12
 * dx: [-1.65342e-9]

Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LeastSquaresOptim to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.458761e+03              NaN
 * lambda: 10000.0

     1     1.458698e+03     2.846326e+03
 * g(x): 2846.3256220502553
 * lambda: 1000.0
 * dx: [1.06528e-5,9.36247e-6]

     2     1.458069e+03     2.843539e+03
 * g(x): 2843.5392900151423
 * lambda: 100.0
 * dx: [0.000106418,9.32111e-5]

     3     1.451836e+03     2.816067e+03
 * g(x): 2816.0666185758805
 * lambda: 10.0
 * dx: [0.00105333,0.000891488]

     4     1.394309e+03     2.576904e+03
 * g(x): 2576.9040654991513
 * lambda: 1.0
 * dx: [0.00959769,0.00551557]

     5     1.073277e+03     1.714324e+03
 * g(x): 1714.3240443358359
 * lambda: 0.1
 * dx: [0.0571112,-0.0450143]

     6     5.073507e+02     1.214452e+03
 * g(x): 1214.4519619089376
 * lambda: 0.010000000000000002
 * dx: [0.136375,-0.163746]

     7     4.150593e+01     2.146311e+02
 * g(x): 214.63109374222753
 * lambda: 0.0010000000000000002
 * dx: [0.0459289,0.323797]

     8     3.369065e+00     3.047499e+02
 * g(x): 304.7498579520271
 * lambda: 0.00010000000000000003
 * dx: [-0.0589317,0.28017]

     9     3.962651e-02     2.776095e+00
 * g(x): 2.7760953162511965
 * lambda: 1.0000000000000004e-5
 * dx: [0.00908088,-0.00298332]

    10     3.845320e-02     3.195584e-02
 * g(x): 0.03195583879943953
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000271396,0.0013356]

    11     3.845317e-02     9.094334e-08
 * g(x): 9.09433441331764e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-3.20681e-7,-2.2732e-6]

    12     3.845317e-02     7.233016e-06
 * g(x): 7.233016317609309e-6
 * lambda: 1.0000000000000006e-6
 * dx: [-4.74478e-10,4.23243e-9]

Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LeastSquaresOptim to fit the parameter
Use LM to fit the parameter
     0     8.967870e+02              NaN
 * lambda: 10000.0

     1     8.966598e+02     2.416835e+03
 * g(x): 2416.834634051408
 * lambda: 1000.0
 * dx: [1.1895e-5,-9.37309e-7,4.36969e-5,1.718e-5]

     2     8.953900e+02     2.412172e+03
 * g(x): 2412.171533789503
 * lambda: 100.0
 * dx: [0.000118717,-9.04037e-6,0.000436218,0.000171426]

     3     8.829055e+02     2.366567e+03
 * g(x): 2366.5670156131655
 * lambda: 10.0
 * dx: [0.00116449,-5.81449e-5,0.00428874,0.00167758]

     4     7.766790e+02     2.001479e+03
 * g(x): 2001.4787106383196
 * lambda: 1.0
 * dx: [0.00980161,0.00185425,0.0369712,0.0137431]

     5     3.463687e+02     1.022258e+03
 * g(x): 1022.2578108278071
 * lambda: 0.1
 * dx: [0.038776,0.0567113,0.202255,0.0332009]

     6     1.747039e+01     1.636940e+02
 * g(x): 163.69397292297504
 * lambda: 0.010000000000000002
 * dx: [0.0431574,0.0885053,0.444634,-0.0907032]

     7     2.553479e+00     1.378310e+02
 * g(x): 137.83103726176915
 * lambda: 0.0010000000000000002
 * dx: [0.0431395,0.0137577,-0.098215,-0.0901408]

     8     1.908695e-01     5.458913e+01
 * g(x): 54.58912939066272
 * lambda: 0.00010000000000000003
 * dx: [0.0530945,0.0363347,-0.163791,-0.0567322]

     9     4.139164e-02     7.395155e+00
 * g(x): 7.395154632628481
 * lambda: 1.0000000000000004e-5
 * dx: [0.0100713,0.00290295,-0.0236279,-0.0103047]

    10     3.800937e-02     1.639524e-02
 * g(x): 0.016395243705714102
 * lambda: 1.0000000000000004e-6
 * dx: [0.00167208,0.000615749,-0.00562232,-0.00195095]

    11     3.800923e-02     1.619995e-06
 * g(x): 1.6199946564210421e-6
 * lambda: 1.0000000000000005e-7
 * dx: [7.05191e-6,-3.37918e-6,-1.87899e-5,-8.75486e-6]

    12     3.800923e-02     1.061077e-08
 * g(x): 1.0610772260832846e-8
 * lambda: 1.0000000000000005e-8
 * dx: [9.08381e-9,6.20937e-9,-2.49615e-8,-9.48651e-9]

Use Optim BFGS to fit the parameter
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
WARNING: dt <= dtmin. Aborting. If you would like to force continuation with dt=dtmin, set force_dtmin=true
Use LeastSquaresOptim to fit the parameter
INFO: DiffEqParamEstim tests passed
INFO: Removing Combinatorics v0.3.2
INFO: Removing Conda v0.5.1
INFO: Removing Distances v0.3.2
INFO: Removing GenericSVD v0.0.2
INFO: Removing Hiccup v0.1.1
INFO: Removing InplaceOps v0.1.0
INFO: Removing Iterators v0.2.0
INFO: Removing Juno v0.2.5
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing MathProgBase v0.6.0
INFO: Removing Media v0.2.5
INFO: Removing NLopt v0.3.3
INFO: Removing NLsolve v0.9.1
INFO: Removing OrdinaryDiffEq v1.2.0
INFO: Removing ParameterizedFunctions v1.0.0
INFO: Removing PolynomialFactors v0.0.3
INFO: Removing Polynomials v0.1.2
INFO: Removing Primes v0.1.2
INFO: Removing Roots v0.3.0
INFO: Removing SymEngine v0.1.2

>>> End of log
