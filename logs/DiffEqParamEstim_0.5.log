>>> 'Pkg.add("DiffEqParamEstim")' log
INFO: Cloning cache of DiffEqParamEstim from https://github.com/JuliaDiffEq/DiffEqParamEstim.jl.git
INFO: Cloning cache of LearnBase from https://github.com/JuliaML/LearnBase.jl.git
INFO: Cloning cache of LossFunctions from https://github.com/JuliaML/LossFunctions.jl.git
INFO: Cloning cache of LsqFit from https://github.com/JuliaOpt/LsqFit.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing DataStructures v0.4.6
INFO: Installing DiffBase v0.0.2
INFO: Installing DiffEqBase v0.4.1
INFO: Installing DiffEqParamEstim v0.0.4
INFO: Installing Distributions v0.11.1
INFO: Installing ForwardDiff v0.3.3
INFO: Installing LearnBase v0.1.1
INFO: Installing LineSearches v0.1.3
INFO: Installing LossFunctions v0.0.2
INFO: Installing LsqFit v0.1.0
INFO: Installing MacroTools v0.3.4
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.3
INFO: Installing PDMats v0.5.2
INFO: Installing Parameters v0.5.0
INFO: Installing PositiveFactorizations v0.0.3
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.1.2
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.5
INFO: Installing SHA v0.3.0
INFO: Installing SimpleTraits v0.2.0
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DiffEqParamEstim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DiffEqParamEstim")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1709.66796875 MB free)
Uptime: 21086.0 sec
Load Avg:  1.02734375  1.08349609375  1.06494140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3512 MHz    1288192 s         64 s     103574 s     468066 s         34 s
#2  3512 MHz     413528 s        103 s      64532 s    1569925 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DiffEqParamEstim              0.0.4
 - JSON                          0.8.0
28 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - DiffBase                      0.0.2
 - DiffEqBase                    0.4.1
 - Distributions                 0.11.1
 - ForwardDiff                   0.3.3
 - LearnBase                     0.1.1
 - LineSearches                  0.1.3
 - LossFunctions                 0.0.2
 - LsqFit                        0.1.0
 - MacroTools                    0.3.4
 - NaNMath                       0.2.2
 - Optim                         0.7.3
 - PDMats                        0.5.2
 - Parameters                    0.5.0
 - PositiveFactorizations        0.0.3
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.1.2
 - Reexport                      0.0.3
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - SimpleTraits                  0.2.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
INFO: Computing test dependencies for DiffEqParamEstim...
INFO: Cloning cache of LeastSquaresOptim from https://github.com/matthieugomez/LeastSquaresOptim.jl.git
INFO: Installing Conda v0.4.0
INFO: Installing Distances v0.3.2
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.1.1
INFO: Installing InplaceOps v0.1.0
INFO: Installing Juno v0.2.5
INFO: Installing LeastSquaresOptim v0.2.1
INFO: Installing Media v0.2.4
INFO: Installing NLsolve v0.8.0
INFO: Installing OrdinaryDiffEq v0.6.0
INFO: Installing ParameterizedFunctions v0.5.0
INFO: Installing SymEngine v0.1.2
INFO: Building Conda
INFO: Building SymEngine
Warning: 'conda-forge' already in 'channels' list, moving to the top
Warning: 'symengine' already in 'channels' list, moving to the top
INFO: Testing DiffEqParamEstim
Use LM to fit the parameter
     0     2.814608e+03              NaN
 * lambda: 10000.0

     1     2.814605e+03     8.724627e+02
 * g(x): 872.4626734471722
 * lambda: 1000.0
 * dx: [1.76693e-6]

     2     2.814575e+03     8.716936e+02
 * g(x): 871.693569081963
 * lambda: 100.0
 * dx: [1.76536e-5]

     3     2.814269e+03     8.640424e+02
 * g(x): 864.042408757187
 * lambda: 10.0
 * dx: [0.000174969]

     4     2.810431e+03     8.056420e+02
 * g(x): 805.6419825029413
 * lambda: 1.0
 * dx: [0.00160708]

     5     2.787614e+03     5.291450e+02
 * g(x): 529.1449952121455
 * lambda: 0.1
 * dx: [0.0101366]

     6     2.733192e+03     1.039419e+02
 * g(x): 103.94190442526583
 * lambda: 0.010000000000000002
 * dx: [0.0212741]

     7     2.646828e+03     6.421797e+01
 * g(x): 64.21797360702236
 * lambda: 0.0010000000000000002
 * dx: [0.0283934]

     8     2.533737e+03     7.447528e+01
 * g(x): 74.47527814669293
 * lambda: 0.00010000000000000003
 * dx: [0.034122]

     9     2.400713e+03     9.264932e+01
 * g(x): 92.64932037757379
 * lambda: 1.0000000000000004e-5
 * dx: [0.0377398]

    10     2.254214e+03     1.986441e+02
 * g(x): 198.64410073924344
 * lambda: 1.0000000000000004e-6
 * dx: [0.0399507]

    11     1.995841e+03     1.147828e+02
 * g(x): 114.78281514645008
 * lambda: 1.0000000000000005e-7
 * dx: [0.0483119]

    12     1.491772e+03     2.606451e+02
 * g(x): 260.6450712738246
 * lambda: 1.0000000000000005e-8
 * dx: [0.0638471]

    13     7.707531e+02     8.179304e+02
 * g(x): 817.9304270838311
 * lambda: 1.0000000000000005e-9
 * dx: [0.075903]

    14     1.217154e+02     8.086304e+02
 * g(x): 808.6304087382173
 * lambda: 1.0000000000000006e-10
 * dx: [0.0872649]

    15     1.008805e+00     1.883312e+02
 * g(x): 188.33117563343345
 * lambda: 1.0000000000000006e-11
 * dx: [0.0466334]

    16     4.180497e-02     3.176748e-01
 * g(x): 0.31767484148362857
 * lambda: 1.0000000000000006e-12
 * dx: [0.00463474]

    17     4.180415e-02     6.648583e-08
 * g(x): 6.648582973056705e-8
 * lambda: 1.0000000000000007e-13
 * dx: [4.28889e-6]

    18     4.180415e-02     1.105130e-04
 * g(x): 0.00011051303547526814
 * lambda: 1.0000000000000006e-12
 * dx: [-2.46516e-9]

WARNING: MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,trace,f_calls,g_calls) is deprecated, use MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,trace,f_calls,g_calls,0) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Optim.MultivariateOptimizationResults{T,N,M}(::String, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::Int64, ::Bool, ::Bool, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Array{Optim.OptimizationState{LsqFit.LevenbergMarquardt},1}, ::Int64, ::Int64) at ./deprecated.jl:50
 in #levenberg_marquardt#1(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest},Array{Float64,1},Array{Float64,1}}, ::Calculus.#g#5{LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest},Array{Float64,1},Array{Float64,1}},Symbol}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/levenberg_marquardt.jl:169
 in (::LsqFit.#kw##levenberg_marquardt)(::Array{Any,1}, ::LsqFit.#levenberg_marquardt, ::Function, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #lmfit#2(::Array{Any,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest},Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:29
 in (::LsqFit.#kw##lmfit)(::Array{Any,1}, ::LsqFit.#lmfit, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #curve_fit#3(::Array{Any,1}, ::Function, ::DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraTest}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:43
 in (::LsqFit.#kw##curve_fit)(::Array{Any,1}, ::LsqFit.#curve_fit, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in #lm_fit#1(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/DiffEqParamEstim.jl:18
 in (::DiffEqParamEstim.#kw##lm_fit)(::Array{Any,1}, ::DiffEqParamEstim.#lm_fit, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraTest}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 24
Use Optim Brent to fit the parameter
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LeastSquaresOptim to fit the parameter
Multivariate
Use LM to fit the parameter
     0     1.458496e+03              NaN
 * lambda: 10000.0

     1     1.458433e+03     2.844548e+03
 * g(x): 2844.5481964817172
 * lambda: 1000.0
 * dx: [1.06462e-5,9.35808e-6]

     2     1.457805e+03     2.841764e+03
 * g(x): 2841.7636014526906
 * lambda: 100.0
 * dx: [0.000106351,9.31681e-5]

     3     1.451580e+03     2.814307e+03
 * g(x): 2814.3073859021583
 * lambda: 10.0
 * dx: [0.00105267,0.000891086]

     4     1.394124e+03     2.575298e+03
 * g(x): 2575.2978620050753
 * lambda: 1.0
 * dx: [0.00959173,0.00551338]

     5     1.073452e+03     1.713196e+03
 * g(x): 1713.196226328852
 * lambda: 0.1
 * dx: [0.0570781,-0.0449877]

     6     5.078536e+02     1.213621e+03
 * g(x): 1213.621087691346
 * lambda: 0.010000000000000002
 * dx: [0.136307,-0.163685]

     7     4.129263e+01     2.148962e+02
 * g(x): 214.89622974225534
 * lambda: 0.0010000000000000002
 * dx: [0.045745,0.324709]

     8     3.246169e+00     2.996915e+02
 * g(x): 299.6914691042799
 * lambda: 0.00010000000000000003
 * dx: [-0.0585491,0.279321]

     9     4.282498e-02     2.802774e+00
 * g(x): 2.8027741840678626
 * lambda: 1.0000000000000004e-5
 * dx: [0.00888271,-0.00276153]

    10     4.172930e-02     2.647434e-02
 * g(x): 0.0264743414813271
 * lambda: 1.0000000000000004e-6
 * dx: [-0.000263559,0.00127425]

    11     4.172928e-02     1.644507e-08
 * g(x): 1.644506797404688e-8
 * lambda: 1.0000000000000005e-7
 * dx: [-6.10871e-7,2.64982e-8]

    12     4.172928e-02     9.714623e-06
 * g(x): 9.714622596357358e-6
 * lambda: 1.0000000000000006e-6
 * dx: [-4.84267e-11,1.76205e-9]

WARNING: MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,trace,f_calls,g_calls) is deprecated, use MultivariateOptimizationResults(method,initial_x,minimizer,minimum,iterations,iteration_converged,x_converged,x_tol,f_converged,f_tol,g_converged,g_tol,trace,f_calls,g_calls,0) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in Optim.MultivariateOptimizationResults{T,N,M}(::String, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64, ::Int64, ::Bool, ::Bool, ::Float64, ::Bool, ::Float64, ::Bool, ::Float64, ::Array{Optim.OptimizationState{LsqFit.LevenbergMarquardt},1}, ::Int64, ::Int64) at ./deprecated.jl:50
 in #levenberg_marquardt#1(::Float64, ::Float64, ::Int64, ::Float64, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti},Array{Float64,1},Array{Float64,1}}, ::Calculus.#g#5{LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti},Array{Float64,1},Array{Float64,1}},Symbol}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/levenberg_marquardt.jl:169
 in (::LsqFit.#kw##levenberg_marquardt)(::Array{Any,1}, ::LsqFit.#levenberg_marquardt, ::Function, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #lmfit#2(::Array{Any,1}, ::Function, ::LsqFit.#f#4{DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti},Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:29
 in (::LsqFit.#kw##lmfit)(::Array{Any,1}, ::LsqFit.#lmfit, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in #curve_fit#3(::Array{Any,1}, ::Function, ::DiffEqParamEstim.##2#3{Array{Any,1},DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti},OrdinaryDiffEq.Tsit5,ParameterizedFunctions.LotkaVolterraMulti}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:43
 in (::LsqFit.#kw##curve_fit)(::Array{Any,1}, ::LsqFit.#curve_fit, ::Function, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in #lm_fit#1(::Array{Any,1}, ::Function, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at /home/vagrant/.julia/v0.5/DiffEqParamEstim/src/DiffEqParamEstim.jl:18
 in (::DiffEqParamEstim.#kw##lm_fit)(::Array{Any,1}, ::DiffEqParamEstim.#lm_fit, ::DiffEqBase.ODEProblem{Array{Float64,1},Float64,true,ParameterizedFunctions.LotkaVolterraMulti}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::OrdinaryDiffEq.Tsit5) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DiffEqParamEstim/test/runtests.jl, in expression starting on line 66
Use Optim BFGS to fit the parameter
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
WARNING: Interrupted. Larger maxiters is needed.
Use LeastSquaresOptim to fit the parameter
INFO: DiffEqParamEstim tests passed
INFO: Removing Conda v0.4.0
INFO: Removing Distances v0.3.2
INFO: Removing GenericSVD v0.0.2
INFO: Removing Hiccup v0.1.1
INFO: Removing InplaceOps v0.1.0
INFO: Removing Juno v0.2.5
INFO: Removing LeastSquaresOptim v0.2.1
INFO: Removing Media v0.2.4
INFO: Removing NLsolve v0.8.0
INFO: Removing OrdinaryDiffEq v0.6.0
INFO: Removing ParameterizedFunctions v0.5.0
INFO: Removing SymEngine v0.1.2

>>> End of log
