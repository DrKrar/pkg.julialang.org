>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1768
Commit d7b6ac3 (2016-12-29 23:08 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (469.85546875 MB free)
Uptime: 4055.0 sec
Load Avg:  0.921875  1.39404296875  1.5263671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     180215 s         50 s      33412 s     156543 s          9 s
#2  3499 MHz     103265 s         95 s      23516 s     264783 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.434036 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.501238; 0.0 0.580884 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.693614; 0.0 0.0 0.537418 0.0 0.0 0.0 0.0 0.0 0.0 0.368659; 0.0 0.0 0.0 0.800243 0.0 0.0 0.0 0.0 0.0 0.076576; 0.0 0.0 0.0 0.0 0.935836 0.0 0.0 0.0 0.0 0.606613; 0.0 0.0 0.0 0.0 0.0 0.734433 0.0 0.0 0.0 0.284136; 0.0 0.0 0.0 0.0 0.0 0.0 0.179887 0.0 0.0 0.567894; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.629821 0.0 0.204419; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.498184 0.0464112; 0.501238 0.693614 0.368659 0.076576 0.606613 0.284136 0.567894 0.204419 0.0464112 0.777227]
(U,Lambda) = eig(full(A)) = ([-0.66191,0.264013,0.472252,0.498564,0.547796,0.626428,0.716827,0.798132,0.849435,1.99643],
[-0.302547 0.370183 0.817508 -0.0629905 0.105749 -0.0417223 0.10066 0.0371651 0.144276 0.232141; -0.369196 0.274862 -0.397978 0.0683261 -0.50312 -0.243893 0.289762 0.0861928 0.308822 0.354563; -0.203341 0.169316 -0.352619 0.0769418 0.852562 -0.0663281 0.116697 0.0381741 0.141274 0.182838; -0.0346448 0.0179317 -0.0145522 0.00205837 -0.00728025 0.00705534 -0.0521344 -0.979108 0.186129 0.0463226; -0.251155 0.11338 -0.0815608 0.0112496 -0.0375196 0.0313972 -0.1573 -0.118924 -0.839477 0.413868; -0.134608 0.0758439 -0.0675498 0.0097686 -0.0365387 0.0421304 -0.916539 0.120422 0.295418 0.162917; -0.44627 -0.847649 0.121071 -0.0144509 0.0370467 -0.0203665 0.0600649 0.0247979 0.101415 0.226215; -0.104685 0.0701693 -0.0808629 0.0126291 -0.0598134 0.964811 0.133429 0.0327882 0.111296 0.108237; -0.0264647 0.0248868 -0.111554 -0.992363 0.0224523 -0.0057956 0.012055 0.0041772 0.0157988 0.022415; 0.661512 -0.125568 0.0623302 -0.00810918 0.0240007 -0.0160144 0.056791 0.0269965 0.119569 0.723602])
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:363
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:363
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: sumabs(x) is deprecated, use sum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sumabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 [4] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:363
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] macro expansion at ./multidimensional.jl:373 [inlined]
 [2] macro expansion at ./cartesian.jl:62 [inlined]
 [3] macro expansion at ./multidimensional.jl:370 [inlined]
 [4] _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 [5] macro expansion at ./multidimensional.jl:321 [inlined]
 [6] _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 [7] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:298
 [11] _start() at ./client.jl:363
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:363

>>> End of log
