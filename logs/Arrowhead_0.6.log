>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1185
Commit ca2046e (2016-11-04 08:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (432.34765625 MB free)
Uptime: 3516.0 sec
Load Avg:  0.95361328125  0.96484375  0.89599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     143126 s         81 s      25577 s     153402 s          4 s
#2  3499 MHz      65563 s         78 s      18006 s     257045 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.97908 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.670402; 0.0 0.0673968 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.644795; 0.0 0.0 0.706831 0.0 0.0 0.0 0.0 0.0 0.0 0.076505; 0.0 0.0 0.0 0.142902 0.0 0.0 0.0 0.0 0.0 0.691596; 0.0 0.0 0.0 0.0 0.224634 0.0 0.0 0.0 0.0 0.957453; 0.0 0.0 0.0 0.0 0.0 0.544368 0.0 0.0 0.0 0.876633; 0.0 0.0 0.0 0.0 0.0 0.0 0.430049 0.0 0.0 0.503005; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.981981 0.0 0.707994; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.409103 0.62128; 0.670402 0.644795 0.076505 0.691596 0.957453 0.876633 0.503005 0.707994 0.62128 0.431457]
(U,Lambda) = eig(full(A)) = ([-1.62,0.0883389,0.169379,0.332246,0.421684,0.486671,0.70595,0.835353,0.980461,2.51772],
[-0.181082 -0.0220051 0.0256634 -0.0714175 0.0153464 -0.0681842 -0.0281628 -0.586144 -0.721264 0.302492; -0.268266 0.900205 -0.195975 0.167759 -0.0232221 0.077019 0.011586 0.10551 -0.00104974 0.18269; -0.0230826 -0.00361656 0.00441219 -0.0140735 0.0034234 -0.0174031 -0.996226 0.0748029 -0.00041561 0.0293301; -0.275413 -0.370593 -0.809617 0.251688 -0.0316536 0.100753 0.0140934 0.125508 -0.00122743 0.20218; -0.364391 -0.205388 0.537089 0.613087 -0.061998 0.182991 0.0228243 0.197008 -0.00188302 0.289876; -0.284346 -0.0562038 0.0724609 -0.28477 0.0911733 -0.760927 0.0622492 0.378576 -0.00298812 0.30841; -0.172254 -0.0430382 0.0598114 -0.354388 0.767222 0.444901 0.0209185 0.155955 -0.00135845 0.167273; -0.191023 -0.0231636 0.0270057 -0.0750855 0.0161231 -0.0715858 -0.0294294 -0.606764 0.692644 0.320057; -0.214953 -0.0566294 0.0803304 -0.557014 -0.630082 0.401122 0.024014 0.183159 -0.00161636 0.204553; 0.702038 0.0292375 -0.0309959 0.0689069 -0.0127596 0.0500811 0.0114739 0.125663 -0.00148649 0.69425])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
