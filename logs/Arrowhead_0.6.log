>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1123
Commit b7634be (2016-10-25 19:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (534.46875 MB free)
Uptime: 2961.0 sec
Load Avg:  0.96142578125  0.9677734375  0.89453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     119759 s        113 s      22726 s     126979 s          9 s
#2  3499 MHz      80428 s         44 s      19074 s     184731 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.84885 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.393179; 0.0 0.00781892 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.380252; 0.0 0.0 0.0676557 0.0 0.0 0.0 0.0 0.0 0.0 0.907783; 0.0 0.0 0.0 0.359457 0.0 0.0 0.0 0.0 0.0 0.704808; 0.0 0.0 0.0 0.0 0.895096 0.0 0.0 0.0 0.0 0.157045; 0.0 0.0 0.0 0.0 0.0 0.212051 0.0 0.0 0.0 0.0386665; 0.0 0.0 0.0 0.0 0.0 0.0 0.415049 0.0 0.0 0.170545; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.449508 0.0 0.299873; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.108146 0.464714; 0.393179 0.380252 0.907783 0.704808 0.157045 0.0386665 0.170545 0.299873 0.464714 0.2817]
(U,Lambda) = eig(full(A)) = ([-1.16717,0.0151596,0.0995396,0.211713,0.264096,0.412128,0.440417,0.785466,0.890785,1.6932],
[-0.13517 -0.0085912 0.00856478 0.0053769 -0.0697152 0.0148719 0.0275614 -0.899188 0.248834 0.324428; -0.224297 0.943633 -0.0676693 -0.0162495 0.153841 -0.015536 -0.0251662 0.070881 0.0114294 0.157189; -0.509521 -0.315009 -0.464727 -0.054906 0.479138 -0.0435319 -0.0697238 0.183321 0.0292692 0.389075; -0.31998 -0.0372911 0.0442612 0.0415657 -0.766321 -0.221043 -0.249246 0.239824 0.035205 0.36817; -0.0527794 -0.00325117 0.0032221 0.00200232 -0.025805 0.00537137 0.00988893 -0.20765 -0.966687 0.137093; -0.0194306 -0.00357747 0.00560951 0.996585 0.0770311 -0.0031924 -0.00484768 0.00977477 0.00151193 0.018188; -0.0747066 -0.00776905 0.00882297 0.00730801 -0.117141 0.964506 -0.192477 0.0667406 0.00951417 0.0929625; -0.128558 -0.0125767 0.0139861 0.0109878 -0.167691 0.132521 0.944474 0.129388 0.0180353 0.167986; -0.252554 -0.0910407 0.881383 -0.0390964 0.308965 -0.0252533 -0.0400427 0.0994564 0.0157587 0.204264; 0.693085 0.0182166 -0.0163225 -0.00871312 0.103684 -0.0165189 -0.0286306 0.144957 0.0265397 0.696706])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
