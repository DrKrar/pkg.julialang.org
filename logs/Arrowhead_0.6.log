>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1378
Commit 1e0e793 (2016-12-03 13:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (545.63671875 MB free)
Uptime: 3466.0 sec
Load Avg:  0.9580078125  0.970703125  0.95361328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     130584 s        120 s      25540 s     161990 s          6 s
#2  3499 MHz      78665 s         41 s      18075 s     237615 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.513599 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00656792; 0.0 0.745073 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.186175; 0.0 0.0 0.716583 0.0 0.0 0.0 0.0 0.0 0.0 0.833803; 0.0 0.0 0.0 0.885094 0.0 0.0 0.0 0.0 0.0 0.735214; 0.0 0.0 0.0 0.0 0.489387 0.0 0.0 0.0 0.0 0.501467; 0.0 0.0 0.0 0.0 0.0 0.525343 0.0 0.0 0.0 0.798319; 0.0 0.0 0.0 0.0 0.0 0.0 0.76908 0.0 0.0 0.650345; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.170643 0.0 0.0691261; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.498577 0.236046; 0.00656792 0.186175 0.833803 0.735214 0.501467 0.798319 0.650345 0.0691261 0.236046 0.464042]
(U,Lambda) = eig(full(A)) = ([-1.05978,0.171549,0.495153,0.502355,0.5136,0.602993,0.742104,0.751827,0.845719,2.2119],
[-0.00304056 -0.000251476 0.00311787 -0.00717351 0.999948 -0.00508153 -0.000383138 0.00052207 -0.000906968 -0.00262762; -0.0751346 -0.00425137 0.00652295 -0.00941962 -0.000112635 0.0906293 0.836011 0.521962 -0.084837 -0.0862368; -0.341894 -0.0200354 0.0329723 -0.0477969 -0.000575246 0.507695 -0.435497 0.447993 -0.296126 -0.378861; -0.275348 -0.0134943 0.0165096 -0.0235898 -0.000277148 0.180255 0.0685383 -0.104468 0.856343 -0.376492; -0.235778 -0.020663 -0.761546 0.474885 0.00290038 -0.305294 -0.0264504 0.0361832 -0.0645428 -0.197801; -0.366837 -0.0295518 0.231549 -0.426477 -0.00952026 -0.711065 -0.0490929 0.0667471 -0.114281 -0.321606; -0.259014 -0.0142541 0.0207889 -0.0299428 -0.000356482 0.270824 0.321363 -0.713796 -0.389184 -0.306254; -0.0409211 0.998816 -0.00186525 0.00255914 2.82263e-5 -0.0110582 -0.00161243 0.00225228 -0.00469623 -0.0230088; -0.110329 -0.00945301 0.603745 0.767181 0.00220034 -0.156352 -0.0129203 0.0176498 -0.0311852 -0.0936066; 0.728383 0.0130966 -0.00875633 0.0122804 0.00014004 -0.0691637 -0.0133298 0.0189363 -0.0458627 -0.679438])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
