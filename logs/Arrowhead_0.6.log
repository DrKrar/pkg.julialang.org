>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (514.9375 MB free)
Uptime: 3648.0 sec
Load Avg:  0.92529296875  0.94677734375  0.9267578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     140332 s        102 s      28279 s     166626 s          7 s
#2  3498 MHz      72432 s         37 s      20418 s     259448 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.474299 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.566979; 0.0 0.557168 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.105867; 0.0 0.0 0.472343 0.0 0.0 0.0 0.0 0.0 0.0 0.921764; 0.0 0.0 0.0 0.185391 0.0 0.0 0.0 0.0 0.0 0.555087; 0.0 0.0 0.0 0.0 0.723113 0.0 0.0 0.0 0.0 0.871439; 0.0 0.0 0.0 0.0 0.0 0.345995 0.0 0.0 0.0 0.160118; 0.0 0.0 0.0 0.0 0.0 0.0 0.220407 0.0 0.0 0.630277; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.193791 0.0 0.666981; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.505722 0.342553; 0.566979 0.105867 0.921764 0.555087 0.871439 0.160118 0.630277 0.666981 0.342553 0.130988]
(U,Lambda) = eig(full(A)) = ([-1.53112,0.188426,0.209156,0.310973,0.351151,0.47376,0.502731,0.556406,0.646199,2.10154],
[-0.207149 -0.00893143 -0.0285978 0.262645 0.13835 0.85064 -0.165812 0.0493493 0.244607 -0.23392; -0.0371443 -0.00129291 -0.00406831 0.0325342 0.0154419 0.00102568 0.0161701 -0.993553 0.0881856 -0.0460217; -0.3371 -0.0146202 -0.0468382 0.432168 0.228551 -0.525657 -0.25222 0.0783629 0.393196 -0.379838; -0.236938 0.823524 0.312371 -0.334417 -0.100628 -0.00155548 -0.014544 0.0106921 0.0893345 -0.194484; -0.283243 -0.00733946 -0.0226754 0.159974 0.0704009 0.00282407 0.0328782 -0.0373576 -0.840258 -0.424429; -0.0624985 -0.00457612 -0.0156486 0.34591 -0.933144 -0.00101269 -0.00849415 0.00543833 0.039555 -0.0612322; -0.263654 -0.0887492 -0.749143 -0.526529 -0.144861 -0.00201029 -0.0185624 0.0134057 0.109777 -0.224939; -0.283314 -0.559927 0.580521 -0.430631 -0.127367 -0.00192511 -0.017951 0.013145 0.109336 -0.234717; -0.123223 -0.00486172 -0.0154473 0.133079 0.0665946 0.00866069 0.952118 0.0483002 0.180842 -0.144111; 0.732692 0.00450326 0.0133735 -0.0756582 -0.0300497 -0.000808077 -0.00831473 0.00714653 0.0741616 -0.671354])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
