>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1262
Commit 9f999b7 (2016-11-16 21:47 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (524.859375 MB free)
Uptime: 3216.0 sec
Load Avg:  1.05322265625  1.02490234375  0.94140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     154132 s         88 s      25948 s     107503 s          6 s
#2  3499 MHz      56036 s         55 s      18212 s     236028 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.837111 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.416516; 0.0 0.703765 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.046981; 0.0 0.0 0.100574 0.0 0.0 0.0 0.0 0.0 0.0 0.0610121; 0.0 0.0 0.0 0.751 0.0 0.0 0.0 0.0 0.0 0.682683; 0.0 0.0 0.0 0.0 0.987697 0.0 0.0 0.0 0.0 0.396736; 0.0 0.0 0.0 0.0 0.0 0.029742 0.0 0.0 0.0 0.251529; 0.0 0.0 0.0 0.0 0.0 0.0 0.538129 0.0 0.0 0.935413; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.324528 0.0 0.671933; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.853219 0.128082; 0.416516 0.046981 0.0610121 0.682683 0.396736 0.251529 0.935413 0.671933 0.128082 0.338824]
(U,Lambda) = eig(full(A)) = ([-1.04483,0.0447035,0.101489,0.384624,0.67199,0.70415,0.818246,0.852312,0.961445,1.97046],
[-0.161224 -0.0305722 0.00846988 -0.070903 0.213938 -0.0254905 0.884063 0.190312 -0.208304 -0.245718; -0.0195721 -0.0041461 0.00116688 -0.0113391 0.125399 0.991326 -0.0164324 0.00219667 -0.011337 -0.0247982; -0.0388027 -0.0635155 -0.996793 0.0165447 -0.00905572 0.000822531 -0.00340408 0.00056371 -0.00440692 -0.0218157; -0.276923 -0.056218 0.0157229 -0.143526 0.732818 -0.118573 -0.406502 0.046802 -0.201714 -0.374301; -0.14219 -0.0244701 0.00669677 -0.0506722 0.10658 -0.0113853 0.0937488 -0.0203533 0.939695 -0.269912; -0.170513 0.977816 -0.0524426 0.0545939 -0.0332159 0.00303483 -0.0127731 0.00212385 -0.0167868 -0.0866555; -0.430466 -0.110262 0.0320465 -0.469376 -0.592665 0.0458466 -0.133713 0.0206789 -0.137403 -0.436646; -0.357449 -0.139664 0.0450656 0.861239 -0.164013 0.0144027 -0.0544952 0.00884255 -0.0655996 -0.272951; -0.0491571 -0.0092139 0.00254875 -0.0210538 0.0599403 -0.0069915 0.146642 -0.980109 -0.0735896 -0.0766499; 0.728458 0.0581625 -0.0149589 0.0770263 -0.0848124 0.00813709 -0.0400415 0.00694556 -0.0621809 -0.668604])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
