>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (546.96875 MB free)
Uptime: 3582.0 sec
Load Avg:  0.97021484375  1.02294921875  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     127459 s         94 s      27122 s     175918 s         10 s
#2  3503 MHz      88648 s         44 s      19223 s     238867 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.337738 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.261548; 0.0 0.421918 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.421507; 0.0 0.0 0.105334 0.0 0.0 0.0 0.0 0.0 0.0 0.36339; 0.0 0.0 0.0 0.350697 0.0 0.0 0.0 0.0 0.0 0.894277; 0.0 0.0 0.0 0.0 0.621047 0.0 0.0 0.0 0.0 0.657786; 0.0 0.0 0.0 0.0 0.0 0.384211 0.0 0.0 0.0 0.590735; 0.0 0.0 0.0 0.0 0.0 0.0 0.819418 0.0 0.0 0.943908; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.83617 0.0 0.610849; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.831877 0.648199; 0.261548 0.421507 0.36339 0.894277 0.657786 0.590735 0.943908 0.610849 0.648199 0.169741]
(U,Lambda) = eig(full(A)) = ([-1.5476,0.120181,0.338589,0.372521,0.412991,0.517404,0.680042,0.826875,0.834502,2.32265],
[-0.10284 0.0479494 0.971326 0.113617 -0.0646401 -0.127776 0.0515462 0.00277407 0.00118034 -0.087007; -0.158651 0.0557161 -0.0159794 -0.128931 0.878128 -0.387463 0.110162 0.00539997 0.00229033 -0.146429; -0.162973 -0.976208 0.0049215 0.0205501 -0.0219674 -0.0774046 0.0426562 0.00261281 0.00111725 -0.108215; -0.349225 0.15473 -0.233319 0.619147 -0.266992 -0.47085 0.18318 0.00974312 0.00414388 -0.299446; -0.22485 0.0523802 -0.00735672 -0.0399914 0.0587998 0.557068 0.752188 0.0165797 0.00690851 -0.255252; -0.226687 0.0892369 -0.0409047 -0.763548 -0.381744 -0.389291 0.134711 0.00692331 0.00294106 -0.201226; -0.295615 0.0538406 -0.00620146 -0.0319137 0.0431936 0.274326 -0.456877 0.656666 0.140288 -0.414617; -0.189962 0.0340276 -0.00387815 -0.0199067 0.0268461 0.1682 -0.263943 -0.340943 -0.820852 -0.271343; -0.201941 0.0363261 -0.0041511 -0.0213214 0.0287796 0.180922 -0.288002 -0.672353 0.553565 -0.287105; 0.741308 -0.0398845 0.00315904 0.0151097 -0.0185983 -0.0877737 0.0674616 0.00518794 0.00224184 -0.660303])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
