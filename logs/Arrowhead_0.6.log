>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1565
Commit 0408aa2 (2016-12-15 03:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (527.9609375 MB free)
Uptime: 3344.0 sec
Load Avg:  1.0185546875  1.02880859375  0.93017578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     130433 s         95 s      27730 s     146797 s          2 s
#2  3500 MHz      70656 s         76 s      20357 s     234335 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.535693 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.82107; 0.0 0.431804 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.276803; 0.0 0.0 0.158355 0.0 0.0 0.0 0.0 0.0 0.0 0.268192; 0.0 0.0 0.0 0.467223 0.0 0.0 0.0 0.0 0.0 0.62685; 0.0 0.0 0.0 0.0 0.747429 0.0 0.0 0.0 0.0 0.600393; 0.0 0.0 0.0 0.0 0.0 0.377341 0.0 0.0 0.0 0.877259; 0.0 0.0 0.0 0.0 0.0 0.0 0.956117 0.0 0.0 0.55807; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.723543 0.0 0.732554; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0540772 0.34274; 0.82107 0.276803 0.268192 0.62685 0.600393 0.877259 0.55807 0.732554 0.34274 0.819186]
(U,Lambda) = eig(full(A)) = ([-1.1513,0.0709822,0.168053,0.41537,0.438791,0.496689,0.648703,0.738728,0.92182,2.52293],
[-0.328709 0.0843909 0.0786604 0.213503 -0.17496 0.669778 0.496061 -0.0479073 0.122589 -0.300739; -0.118088 0.0366417 0.0369637 0.526986 0.818021 -0.135735 0.0871332 -0.0106839 0.0325659 -0.0963494; -0.138304 0.146611 -0.973979 -0.0326484 0.0197471 -0.0252211 0.0373432 -0.00547433 0.0202516 -0.0825565; -0.261571 0.0755618 0.0737979 0.378234 -0.455245 -0.676881 0.235834 -0.0273513 0.079495 -0.221953; -0.213559 0.0423936 0.0364984 0.0565711 -0.0401678 0.076186 -0.415214 0.817475 0.198479 -0.246135; -0.387585 0.136771 0.147632 -0.721763 0.294782 -0.233872 0.220724 -0.0287573 0.0928859 -0.297605; -0.178847 0.0301146 0.0249417 0.03229 -0.0222749 0.0386487 -0.123947 0.030412 -0.938057 -0.259257; -0.263888 0.0536187 0.0464474 0.0743735 -0.0531207 0.102744 -0.668299 -0.571506 0.212996 -0.296329; -0.192038 -0.968382 -0.105913 -0.0296812 0.0183958 -0.0246381 0.0393543 -0.00593047 0.0227707 -0.101048; 0.675372 -0.0477637 -0.0352207 -0.0312878 0.0206487 -0.0318173 0.0682764 -0.0118466 0.0576504 -0.727878])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
