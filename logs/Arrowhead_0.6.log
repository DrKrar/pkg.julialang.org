>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (500.0859375 MB free)
Uptime: 3695.0 sec
Load Avg:  0.9580078125  0.88623046875  0.84765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     130281 s         91 s      25268 s     180635 s          8 s
#2  3500 MHz      69125 s         54 s      20481 s     264829 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.240375 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.361329; 0.0 0.366332 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.169023; 0.0 0.0 0.498652 0.0 0.0 0.0 0.0 0.0 0.0 0.161032; 0.0 0.0 0.0 0.61315 0.0 0.0 0.0 0.0 0.0 0.0922692; 0.0 0.0 0.0 0.0 0.324562 0.0 0.0 0.0 0.0 0.75587; 0.0 0.0 0.0 0.0 0.0 0.565031 0.0 0.0 0.0 0.00146478; 0.0 0.0 0.0 0.0 0.0 0.0 0.241646 0.0 0.0 0.656589; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.914799 0.0 0.898087; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.00842387 0.334844; 0.361329 0.169023 0.161032 0.0922692 0.75587 0.00146478 0.656589 0.898087 0.334844 0.405317]
(U,Lambda) = eig(full(A)) = ([-1.02679,0.0296554,0.240667,0.280755,0.364695,0.492232,0.56503,0.606564,0.668844,1.95664],
[-0.201141 -0.104306 0.879578 0.346035 -0.0276396 -0.0555625 0.000739511 -0.0664946 0.164016 0.14174; -0.0855829 -0.0305384 -0.000954729 -0.0763785 0.981849 -0.051994 0.000565218 -0.0474136 0.108669 0.071555; -0.074464 -0.020886 -0.000443064 -0.0285787 0.0114318 0.971371 0.00161195 -0.100561 0.184024 0.0743589; -0.039688 -0.00961906 -0.000175832 -0.0107346 0.00353165 0.0295525 -0.00127406 0.944123 0.322218 0.0462378; -0.394557 -0.155911 -0.00639531 -0.667254 -0.179106 -0.174592 0.00208859 -0.180627 0.427007 0.311804; -0.000649096 -0.000166428 -3.20545e-6 -0.000199258 6.95318e-5 0.000779252 -0.999993 -0.00237663 0.00274423 0.000708648; -0.365136 -0.188404 -0.475708 0.649238 -0.0507442 -0.101478 0.00134909 -0.121252 0.298928 0.257755; -0.326281 -0.0617188 -0.000945633 -0.0547748 0.0155254 0.0823102 -0.00170608 0.196347 -0.710175 0.580353; -0.228162 0.959346 0.00102341 0.0475475 -0.00893782 -0.0268041 0.000399722 -0.0377249 0.0986109 0.115713; 0.705394 0.0608294 0.000709822 0.0386707 -0.00950975 -0.0387286 0.000664452 -0.067389 0.194492 0.673248])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
