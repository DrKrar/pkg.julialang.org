>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1557
Commit 1f8006d (2016-12-13 22:41 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (537.515625 MB free)
Uptime: 3596.0 sec
Load Avg:  0.90625  0.9091796875  0.869140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     127907 s         72 s      26575 s     177735 s          5 s
#2  3500 MHz      68791 s         76 s      18536 s     259366 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.438257 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0388631; 0.0 0.91997 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.805333; 0.0 0.0 0.71251 0.0 0.0 0.0 0.0 0.0 0.0 0.436546; 0.0 0.0 0.0 0.914274 0.0 0.0 0.0 0.0 0.0 0.0930672; 0.0 0.0 0.0 0.0 0.0545806 0.0 0.0 0.0 0.0 0.26497; 0.0 0.0 0.0 0.0 0.0 0.18189 0.0 0.0 0.0 0.889914; 0.0 0.0 0.0 0.0 0.0 0.0 0.518419 0.0 0.0 0.994992; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.502103 0.0 0.0738364; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.695403 0.33766; 0.0388631 0.805333 0.436546 0.0930672 0.26497 0.889914 0.994992 0.0738364 0.33766 0.707396]
(U,Lambda) = eig(full(A)) = ([-1.09142,0.0620588,0.31284,0.438389,0.502192,0.65757,0.702751,0.825942,0.914353,2.32013],
[-0.0171935 0.00284552 -0.0356236 -0.998979 0.000731093 -0.0122745 0.00227807 -0.00957853 6.82438e-5 -0.0148036; -0.270961 0.0258567 -0.152492 0.00568484 -0.00231848 0.21259 -0.0574811 0.81839 -0.119856 -0.412304; -0.163771 0.0184865 -0.125569 0.00541377 -0.00249646 0.550389 -0.693529 -0.367735 0.00180816 -0.194655; -0.0314022 0.00300807 -0.0177895 0.000664824 -0.000271635 0.0251127 -0.00682159 0.100675 0.992786 -0.0474543; -0.156473 -0.975974 0.117949 -0.0023469 0.000711982 -0.0304381 0.00633802 -0.0328231 0.000257652 -0.0838382; -0.472979 0.20456 0.781257 -0.0117944 0.00334166 -0.129588 0.0264895 -0.132029 0.00101574 -0.29834; -0.418278 0.0600555 -0.556413 0.0422651 -0.0737492 -0.495293 0.0836883 -0.309159 0.00210095 -0.395871; -0.0313574 0.00462184 -0.0448498 0.00393958 0.997262 -0.0328974 0.00570534 -0.0217862 0.000149737 -0.0291132; -0.127887 0.0146852 -0.101469 0.00446617 -0.00210194 0.618208 0.712491 -0.247162 0.00128931 -0.148977; 0.67675 -0.0275449 0.114962 -0.00339948 0.00120274 -0.0692676 0.0155041 -0.0955523 0.000836027 -0.716835])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
