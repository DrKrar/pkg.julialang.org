>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1178
Commit 421f079 (2016-11-02 19:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (442.96484375 MB free)
Uptime: 3239.0 sec
Load Avg:  1.01220703125  1.0146484375  0.9111328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     116284 s         85 s      24029 s     156410 s          6 s
#2  3500 MHz      95007 s         62 s      20438 s     197262 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.91111 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.363223; 0.0 0.89829 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.608461; 0.0 0.0 0.728661 0.0 0.0 0.0 0.0 0.0 0.0 0.212128; 0.0 0.0 0.0 0.350201 0.0 0.0 0.0 0.0 0.0 0.819204; 0.0 0.0 0.0 0.0 0.558482 0.0 0.0 0.0 0.0 0.0301567; 0.0 0.0 0.0 0.0 0.0 0.855874 0.0 0.0 0.0 0.042372; 0.0 0.0 0.0 0.0 0.0 0.0 0.256275 0.0 0.0 0.502746; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.990909 0.0 0.691787; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.790243 0.221421; 0.363223 0.608461 0.212128 0.819204 0.0301567 0.042372 0.502746 0.691787 0.221421 0.94068]
(U,Lambda) = eig(full(A)) = ([-0.668018,0.280121,0.557836,0.610321,0.741099,0.800464,0.856026,0.907517,0.951645,2.24371],
[-0.149462 0.0238031 -0.0218976 -0.231297 0.115027 0.140433 0.023696 0.83531 -0.390283 0.198844; -0.252425 0.0407012 -0.0380635 -0.404712 0.208405 0.266079 0.0517358 -0.5449 -0.4967 0.329925; -0.0986911 0.019556 -0.0264474 -0.343341 -0.918172 -0.126382 -0.00598501 -0.00980027 -0.0414346 0.102144; -0.52279 0.48337 0.0840282 0.603222 -0.112831 -0.0778317 -0.00581985 -0.012146 -0.0593248 0.315621; -0.0159769 0.00447978 -0.993488 0.111428 -0.00889089 -0.00533129 -0.000364211 -0.000713936 -0.0033408 0.0130547; -0.0180676 0.00304316 -0.0030279 -0.0330516 0.0198763 0.0327131 -0.99809 -0.00677976 -0.0192701 0.0222731; -0.353439 -0.871818 0.0355065 0.271987 -0.0558299 -0.0395212 -0.00301229 -0.00637896 -0.03149 0.184542; -0.27097 0.0402452 -0.0340209 -0.348158 0.149096 0.155394 0.0184305 0.0685472 0.767392 0.402838; -0.0986641 0.0179484 -0.020291 -0.235718 0.24258 -0.926721 -0.0120954 -0.0156013 -0.0597514 0.111136; 0.649795 -0.0413507 0.0212978 0.19154 -0.0538396 -0.042779 -0.00359352 -0.00826311 -0.0435551 0.729527])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
