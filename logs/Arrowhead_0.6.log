>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1320
Commit 8dd8ea9 (2016-11-26 22:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (548.08984375 MB free)
Uptime: 3687.0 sec
Load Avg:  1.080078125  1.01708984375  0.9345703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     141458 s        107 s      26839 s     170352 s          8 s
#2  3500 MHz      78646 s         42 s      18488 s     258785 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.224279 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.051572; 0.0 0.913417 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.73923; 0.0 0.0 0.0331101 0.0 0.0 0.0 0.0 0.0 0.0 0.998402; 0.0 0.0 0.0 0.541581 0.0 0.0 0.0 0.0 0.0 0.408608; 0.0 0.0 0.0 0.0 0.440985 0.0 0.0 0.0 0.0 0.15555; 0.0 0.0 0.0 0.0 0.0 0.236233 0.0 0.0 0.0 0.437983; 0.0 0.0 0.0 0.0 0.0 0.0 0.980693 0.0 0.0 0.854804; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.26788 0.0 0.513493; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.634025 0.58197; 0.051572 0.73923 0.998402 0.408608 0.15555 0.437983 0.854804 0.513493 0.58197 0.859318]
(U,Lambda) = eig(full(A)) = ([-1.17985,0.165569,0.224414,0.250587,0.411868,0.457398,0.573445,0.745823,0.945047,2.53722],
[-0.0239589 -0.0778514 0.994726 -0.0456225 0.0313876 -0.0182232 -0.00888761 0.0119105 0.00212942 0.0161903; -0.230364 -0.0876058 -0.00279727 0.0259555 -0.168274 0.133531 0.13084 -0.531282 0.695543 0.33056; -0.536931 0.668023 0.0136068 -0.106842 0.30095 -0.193835 -0.111185 0.168732 0.0325824 0.289505; -0.154838 -0.0963103 -0.0033589 0.0326795 -0.359648 0.399826 -0.771611 0.240972 0.0301399 0.148672; -0.0626025 -0.0500552 -0.00187261 0.0190135 -0.60994 -0.780657 -0.070662 0.061462 0.00918394 0.0538808; -0.201757 -0.549319 -0.0966197 -0.710121 0.284706 -0.163128 -0.078155 0.103524 0.0183894 0.138213; -0.258085 -0.0929414 -0.00294687 0.0272479 -0.171569 0.134557 0.126302 -0.438373 -0.713672 0.398762; -0.23137 -0.444816 -0.0308013 0.691083 0.407153 -0.223188 -0.101119 0.129409 0.0225674 0.164301; -0.209292 -0.110103 -0.0037043 0.035323 -0.299084 0.271413 0.578064 0.627008 0.0556868 0.222035; 0.65232 0.0886271 0.00260721 -0.023273 0.11417 -0.0823734 -0.0601731 0.12045 0.0297607 0.726113])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
