>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.739
Commit 361161b (2016-09-22 21:53 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (425.703125 MB free)
Uptime: 3310.0 sec
Load Avg:  0.9970703125  1.4580078125  1.5693359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     161571 s        135 s      32640 s     102392 s          6 s
#2  3500 MHz      83198 s         11 s      22932 s     212000 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.103296 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.967258; 0.0 0.850713 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.824258; 0.0 0.0 0.272481 0.0 0.0 0.0 0.0 0.0 0.0 0.146486; 0.0 0.0 0.0 0.919196 0.0 0.0 0.0 0.0 0.0 0.68182; 0.0 0.0 0.0 0.0 0.410367 0.0 0.0 0.0 0.0 0.202826; 0.0 0.0 0.0 0.0 0.0 0.266345 0.0 0.0 0.0 0.583785; 0.0 0.0 0.0 0.0 0.0 0.0 0.15881 0.0 0.0 0.748969; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.187169 0.0 0.884709; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.705263 0.352142; 0.967258 0.824258 0.146486 0.68182 0.202826 0.583785 0.748969 0.884709 0.352142 0.277973]
(U,Lambda) = eig(full(A)) = ([-1.67799,0.128892,0.171825,0.250511,0.272197,0.405577,0.615152,0.735478,0.894891,2.35508],
[-0.385091 -0.786549 0.170163 -0.158666 0.0109103 -0.0742922 -0.272623 -0.105472 0.0361155 0.29415; -0.231164 0.0237683 -0.0146374 0.0331633 -0.0027144 0.0429915 0.50481 0.493077 0.551449 0.375199; -0.0532614 0.0212345 -0.0175452 0.161009 -0.981417 -0.0255531 -0.061672 -0.02181 0.00695624 0.0481664; -0.186175 0.0179572 -0.0109985 0.0246229 -0.00200767 0.0308206 0.32352 0.255831 -0.829149 0.325165; -0.0688767 0.0149985 -0.0102508 0.0306397 -0.00279662 0.983087 -0.142887 -0.0430059 0.0123726 0.07142; -0.21293 0.0884024 -0.0744613 0.890313 0.190064 -0.0973476 -0.241455 -0.0857816 0.0274517 0.191391; -0.289172 0.521074 0.693771 -0.197236 0.0125843 -0.0704675 -0.236778 -0.0895313 0.0300741 0.233524; -0.336387 0.315989 -0.695144 -0.337289 0.0198228 -0.0940465 -0.298223 -0.111227 0.036948 0.279455; -0.104786 0.0127168 -0.00795854 0.0186997 -0.00154914 0.0272812 0.563777 -0.803417 0.054887 0.146162; 0.709176 -0.0208144 0.0120559 -0.0241486 0.00190514 -0.0232173 -0.144267 -0.0689345 0.0295566 0.684782])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in getindex(::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./abstractarray.jl:812
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
