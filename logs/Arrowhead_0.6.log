>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1045
Commit 0faf8ce (2016-10-19 16:55 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (799.78515625 MB free)
Uptime: 3337.0 sec
Load Avg:  0.9921875  0.75390625  0.46923828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz      67752 s        101 s       9301 s     243870 s          3 s
#2  3499 MHz      18341 s         49 s       3814 s     307735 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.618356 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.808241; 0.0 0.292067 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.420855; 0.0 0.0 0.5756 0.0 0.0 0.0 0.0 0.0 0.0 0.127547; 0.0 0.0 0.0 0.53809 0.0 0.0 0.0 0.0 0.0 0.424298; 0.0 0.0 0.0 0.0 0.622635 0.0 0.0 0.0 0.0 0.20507; 0.0 0.0 0.0 0.0 0.0 0.0508576 0.0 0.0 0.0 0.148221; 0.0 0.0 0.0 0.0 0.0 0.0 0.668197 0.0 0.0 0.991865; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.926564 0.0 0.616422; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.688588 0.208612; 0.808241 0.420855 0.127547 0.424298 0.20507 0.148221 0.991865 0.616422 0.208612 0.24906]
(U,Lambda) = eig(full(A)) = ([-1.14944,0.0559554,0.318347,0.547391,0.57629,0.622341,0.63918,0.687861,0.878294,2.0538],
[-0.341689 0.0491247 -0.161339 0.236737 0.103046 0.278692 -0.723861 0.0398668 -0.21977 -0.369609; -0.218191 0.0609285 0.959036 -0.0342615 -0.00794125 0.00175109 -0.0226121 0.00364548 -0.0507417 -0.156812; -0.0552578 0.00839014 -0.0296921 0.093984 -0.990776 0.00374992 -0.0374137 0.00389521 -0.0297827 -0.0566403; -0.187906 0.030082 -0.115634 -0.948188 -0.0595689 0.00692063 -0.0782787 0.00971255 -0.0881514 -0.183757; -0.0864853 0.01237 -0.0403598 0.05665 0.0237313 -0.959872 -0.23116 0.0107787 -0.0566941 -0.094059; -0.0922874 -0.99388 0.0331844 -0.00620478 -0.00151289 0.000356415 -0.00469866 0.000797735 -0.0126612 -0.0485768; -0.407819 0.0553776 -0.169786 0.170659 0.0578787 -0.0297236 0.637481 0.172931 -0.333681 -0.469896; -0.221907 0.0242025 -0.0606947 0.0337914 0.00943814 -0.00278443 0.0400031 -0.00885344 0.902615 -0.358964; -0.0848219 0.0112718 -0.0337431 0.0307099 0.00996282 -0.00432733 0.0787436 -0.983959 -0.077724 -0.100306; 0.747348 -0.0341826 0.0598868 -0.0207857 -0.0053631 0.0013742 -0.01865 0.0034284 -0.0706803 -0.656429])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
