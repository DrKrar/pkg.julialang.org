>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1583
Commit 2d8f5bf (2016-12-16 01:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (539.90234375 MB free)
Uptime: 3126.0 sec
Load Avg:  0.87646484375  0.9169921875  0.87744140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     133192 s         96 s      28205 s     121831 s          6 s
#2  3500 MHz      61623 s         45 s      18955 s     220615 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.248096 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0366823; 0.0 0.562742 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.528257; 0.0 0.0 0.620784 0.0 0.0 0.0 0.0 0.0 0.0 0.331006; 0.0 0.0 0.0 0.324449 0.0 0.0 0.0 0.0 0.0 0.926818; 0.0 0.0 0.0 0.0 0.173958 0.0 0.0 0.0 0.0 0.62896; 0.0 0.0 0.0 0.0 0.0 0.941497 0.0 0.0 0.0 0.676963; 0.0 0.0 0.0 0.0 0.0 0.0 0.667884 0.0 0.0 0.277101; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.831364 0.0 0.438114; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.506821 0.424465; 0.0366823 0.528257 0.331006 0.926818 0.62896 0.676963 0.277101 0.438114 0.424465 0.584592]
(U,Lambda) = eig(full(A)) = ([-1.07161,0.212912,0.248252,0.452286,0.531712,0.607744,0.657886,0.771319,0.882114,2.16957],
[-0.0191672 -0.0566582 0.997955 0.0146236 0.00516304 0.00351314 -0.00296909 -0.00713764 0.00393366 -0.0134454; -0.222885 -0.0820623 -0.00709749 -0.389303 -0.679592 0.404324 -0.184158 -0.257848 0.112458 -0.23154; -0.13487 -0.044103 -0.00375439 -0.15991 -0.148347 -0.87437 -0.295911 -0.223863 0.0861169 -0.15052; -0.457795 -0.451576 -0.0513951 0.590162 0.178506 0.112687 -0.0921952 -0.211153 0.112996 -0.35377; -0.348206 0.877467 0.0357718 0.18395 0.0701809 0.0499418 -0.0431092 -0.107194 0.060386 -0.221972; -0.231888 -0.050494 -0.00412614 -0.112642 -0.0659461 -0.0698645 0.0791715 0.404991 -0.77507 -0.388232; -0.109849 -0.0330985 -0.0027902 -0.104623 -0.0812328 -0.158706 0.919285 -0.272745 0.0879429 -0.12996; -0.158758 -0.0384978 -0.00317469 -0.0940786 -0.0583647 -0.0674828 0.0837664 0.742836 0.586945 -0.230577; -0.185437 -0.0784846 -0.00693636 -0.633576 0.680723 0.144866 -0.0931976 -0.163382 0.0768977 -0.17979; 0.689573 0.0543445 0.00422539 0.0814016 0.0399191 0.0344443 -0.0331686 -0.101809 0.0679895 -0.70429])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356

>>> End of log
