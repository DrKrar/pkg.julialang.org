>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1295
Commit 2a4b68a (2016-11-22 18:18 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (543.57421875 MB free)
Uptime: 3484.0 sec
Load Avg:  1.0263671875  1.02392578125  0.9619140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     148617 s         56 s      29297 s     138391 s          4 s
#2  3499 MHz      72429 s         86 s      20320 s     245469 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.503146 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.668199; 0.0 0.115041 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.741627; 0.0 0.0 0.0737399 0.0 0.0 0.0 0.0 0.0 0.0 0.346581; 0.0 0.0 0.0 0.260632 0.0 0.0 0.0 0.0 0.0 0.484696; 0.0 0.0 0.0 0.0 0.77877 0.0 0.0 0.0 0.0 0.63688; 0.0 0.0 0.0 0.0 0.0 0.723776 0.0 0.0 0.0 0.376934; 0.0 0.0 0.0 0.0 0.0 0.0 0.309476 0.0 0.0 0.50383; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0819355 0.0 0.843562; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.291923 0.607473; 0.668199 0.741627 0.346581 0.484696 0.63688 0.376934 0.50383 0.843562 0.607473 0.322633]
(U,Lambda) = eig(full(A)) = ([-1.49435,0.0747546,0.100226,0.203381,0.272077,0.30331,0.444906,0.675248,0.745167,2.13636],
[-0.234392 0.00431229 0.0238523 -0.134445 0.053074 0.0339527 -0.841355 -0.348477 0.105432 0.286349; -0.322885 0.0508938 0.719991 0.506351 -0.0866774 -0.0399992 0.164873 -0.11882 0.0449447 0.256794; -0.154866 -0.944326 -0.188201 0.161244 -0.0320715 -0.0153297 0.0684758 -0.051715 0.0197118 0.117603; -0.193517 0.00720917 0.0434602 -0.510628 -0.777294 -0.115322 0.192889 -0.104924 0.0382001 0.180856; -0.196318 0.00250103 0.0134996 -0.0667602 0.0230691 0.0136015 -0.13989 0.552173 -0.723758 0.328339; -0.11907 0.00160564 0.00869434 -0.0436871 0.0153156 0.00910286 -0.0991205 0.697145 0.672906 0.18676; -0.19571 0.00593436 0.0346307 -0.286424 0.247253 0.82968 0.272816 -0.123631 0.0441596 0.193022; -0.374978 0.324772 -0.663321 0.418945 -0.0814251 -0.0386931 0.17043 -0.12761 0.0485704 0.287382; -0.238288 0.00773343 0.0455779 -0.413806 0.561772 -0.541734 0.291197 -0.142237 0.0511818 0.230514; 0.700687 -0.00276467 -0.0143828 0.0603144 -0.0183535 -0.0101541 0.0733332 -0.0897538 0.0381874 0.699895])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
