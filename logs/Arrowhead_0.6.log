>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1401
Commit d2c1c7d (2016-12-06 04:36 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (561.71484375 MB free)
Uptime: 3201.0 sec
Load Avg:  0.9833984375  1.16015625  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     117635 s        119 s      26652 s     147479 s          2 s
#2  3499 MHz      91280 s         42 s      19494 s     200301 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.424692 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.181783; 0.0 0.0931603 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.679804; 0.0 0.0 0.264722 0.0 0.0 0.0 0.0 0.0 0.0 0.329188; 0.0 0.0 0.0 0.989962 0.0 0.0 0.0 0.0 0.0 0.037462; 0.0 0.0 0.0 0.0 0.0130253 0.0 0.0 0.0 0.0 0.0380442; 0.0 0.0 0.0 0.0 0.0 0.33896 0.0 0.0 0.0 0.654319; 0.0 0.0 0.0 0.0 0.0 0.0 0.876575 0.0 0.0 0.534793; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.285577 0.0 0.42281; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.816468 0.575176; 0.181783 0.679804 0.329188 0.037462 0.0380442 0.654319 0.534793 0.42281 0.575176 0.861776]
(U,Lambda) = eig(full(A)) = ([-0.760548,0.0132027,0.173708,0.271164,0.305659,0.420385,0.653108,0.851585,0.989726,2.04693],
[-0.0965998 0.00205844 0.0668923 -0.0197782 -0.0506323 -0.976261 -0.15141 0.0157518 0.00202556 -0.083498; -0.501539 0.0396158 -0.779468 0.0637937 0.106064 0.0480509 -0.230976 0.0331564 0.00477385 -0.259268; -0.202225 0.00609842 0.334046 0.853596 0.266604 0.0489126 -0.161254 0.0207493 0.00285871 -0.137633; -0.013479 0.00017871 0.00423872 -0.000870575 -0.00181503 -0.00152125 0.0211583 -0.0100144 -0.999274 -0.02641; -0.0309754 -0.999104 -0.0218669 0.00246183 0.00431028 0.0021601 -0.0113079 0.00167823 0.000245242 -0.0139379; -0.374819 0.00935923 0.365689 -0.161215 -0.651441 0.185864 -0.396265 0.0472157 0.00633041 -0.285462; -0.205748 0.00288624 0.0702719 -0.0147556 -0.0310567 -0.0271146 0.455307 -0.791631 0.0297573 -0.340492; -0.254561 0.00723308 0.349064 -0.490009 0.698036 0.0725425 -0.218868 0.0276324 0.00378049 -0.17887; -0.229718 0.00333646 0.0826458 -0.0176191 -0.0373322 -0.0335876 0.669864 0.60587 0.0209014 -0.348315; 0.62984 -0.00465955 -0.0923567 0.0167041 0.0331544 0.0231294 -0.190253 0.036991 0.00629604 -0.74514])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
