>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.994
Commit 1ea0de1 (2016-10-17 12:32 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (817.62890625 MB free)
Uptime: 3523.0 sec
Load Avg:  0.9716796875  0.79541015625  0.51171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      54650 s         70 s       8256 s     278324 s          2 s
#2  3500 MHz      33276 s         76 s       3799 s     311811 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.736557 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.241701; 0.0 0.306562 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0412944; 0.0 0.0 0.277418 0.0 0.0 0.0 0.0 0.0 0.0 0.735275; 0.0 0.0 0.0 0.563117 0.0 0.0 0.0 0.0 0.0 0.256304; 0.0 0.0 0.0 0.0 0.991154 0.0 0.0 0.0 0.0 0.139937; 0.0 0.0 0.0 0.0 0.0 0.304627 0.0 0.0 0.0 0.105005; 0.0 0.0 0.0 0.0 0.0 0.0 0.292609 0.0 0.0 0.78381; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.284912 0.0 0.227643; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.427536 0.954518; 0.241701 0.0412944 0.735275 0.256304 0.139937 0.105005 0.78381 0.227643 0.954518 0.447921]
(U,Lambda) = eig(full(A)) = ([-1.10452,0.282966,0.286173,0.30446,0.306535,0.366172,0.557169,0.726592,0.985095,1.92177],
[-0.0913679 -0.00273611 0.002298 -0.000883662 -0.000367595 0.0311623 -0.0306664 0.983259 0.0418104 -0.145536; -0.0203669 -0.00898591 0.0086726 -0.0310258 -0.9985 -0.0330811 0.00375039 -0.00398542 0.00261648 -0.0182452; -0.370295 0.680536 -0.359608 0.0429541 0.0165151 -0.39561 0.0598214 -0.0663587 0.0446696 -0.319111; -0.106965 -0.00469766 0.00396293 -0.00156538 -0.000653296 0.0621461 -0.980719 -0.0635574 0.0261133 -0.134627; -0.0464722 -0.00101462 0.000849976 -0.000321926 -0.000133679 0.0106922 -0.00733895 0.0214421 -0.992822 -0.107312; -0.0518608 -0.0248914 0.0243661 -0.992865 0.0359834 -0.0814743 0.00946353 -0.0100878 0.00663435 -0.0463391; -0.390446 -0.417379 0.521561 0.104481 0.036808 -0.508809 0.0674317 -0.0732151 0.0486628 -0.343348; -0.114026 -0.600633 -0.77273 0.0183969 0.00688514 -0.133778 0.0190307 -0.0208934 0.0139779 -0.0992502; -0.433607 -0.0339018 0.0289135 -0.0122517 -0.00515912 0.742798 0.16759 -0.129388 0.0736022 -0.455883; 0.695962 0.00513475 -0.00428206 0.00157975 0.000654005 -0.0477535 0.0227603 -0.0405381 0.0429929 -0.713652])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
