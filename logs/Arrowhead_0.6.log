>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.754
Commit ac25c58 (2016-09-23 23:59 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (423.0390625 MB free)
Uptime: 3960.0 sec
Load Avg:  0.9541015625  1.48046875  1.61572265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     164845 s         72 s      33358 s     161572 s          8 s
#2  3499 MHz      99735 s         68 s      26043 s     246801 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.49814 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.118382; 0.0 0.332416 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.94307; 0.0 0.0 0.752302 0.0 0.0 0.0 0.0 0.0 0.0 0.373675; 0.0 0.0 0.0 0.500477 0.0 0.0 0.0 0.0 0.0 0.632431; 0.0 0.0 0.0 0.0 0.981432 0.0 0.0 0.0 0.0 0.543414; 0.0 0.0 0.0 0.0 0.0 0.73554 0.0 0.0 0.0 0.889081; 0.0 0.0 0.0 0.0 0.0 0.0 0.921832 0.0 0.0 0.454596; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.446457 0.0 0.835302; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.514392 0.920949; 0.118382 0.94307 0.373675 0.632431 0.543414 0.889081 0.454596 0.835302 0.920949 0.797927]
(U,Lambda) = eig(full(A)) = ([-1.40104,0.373245,0.469636,0.498205,0.505436,0.663452,0.750041,0.897742,0.961455,2.76274],
[-0.0426132 0.0348122 -0.0880837 0.987857 0.0981032 0.0449775 0.00266372 -0.0139571 0.00850586 0.0378224; -0.371926 -0.848324 0.145762 0.0031041 0.032959 0.178931 0.0127995 -0.0785929 0.0499088 0.280761; -0.118634 0.0362059 -0.0280373 -0.000802495 -0.00915295 -0.264153 -0.936853 -0.121046 0.0594758 0.134481; -0.227373 0.182561 -0.434912 -0.151926 0.771044 0.243729 0.0143636 -0.0750017 0.0456713 0.202268; -0.15593 0.0328158 -0.022519 -0.000613659 -0.00690328 -0.107337 -0.0133113 0.305912 -0.905568 0.220723; -0.284478 0.09013 -0.0709141 -0.00204422 -0.0233639 -0.774638 0.347507 -0.25824 0.13101 0.317323; -0.133791 0.0304348 -0.0213214 -0.000585585 -0.00660157 -0.110506 -0.014999 0.889071 0.381928 0.178669; -0.309091 0.419038 0.764304 0.00880836 0.0856385 0.241774 0.0155955 -0.0872029 0.0539944 0.260921; -0.328697 0.239638 -0.436416 -0.0310474 -0.621843 0.388052 0.0221515 -0.113182 0.0685769 0.296366; 0.683639 -0.0367274 0.0212088 0.000545692 0.00604683 0.0628083 0.00566806 -0.0471128 0.0332898 0.723531])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in getindex(::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./abstractarray.jl:812
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
