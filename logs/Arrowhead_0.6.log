>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1202
Commit 42a22b6 (2016-11-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (535.31640625 MB free)
Uptime: 3512.0 sec
Load Avg:  0.90771484375  0.95947265625  0.8994140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     154206 s         51 s      29154 s     139269 s          4 s
#2  3499 MHz      64734 s         90 s      19256 s     256267 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0334485 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.633055; 0.0 0.42372 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.938096; 0.0 0.0 0.82105 0.0 0.0 0.0 0.0 0.0 0.0 0.0379337; 0.0 0.0 0.0 0.0826202 0.0 0.0 0.0 0.0 0.0 0.0728001; 0.0 0.0 0.0 0.0 0.510386 0.0 0.0 0.0 0.0 0.243756; 0.0 0.0 0.0 0.0 0.0 0.796902 0.0 0.0 0.0 0.824241; 0.0 0.0 0.0 0.0 0.0 0.0 0.185929 0.0 0.0 0.530822; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.623634 0.0 0.552998; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.212145 0.239258; 0.633055 0.938096 0.0379337 0.0728001 0.243756 0.824241 0.530822 0.552998 0.239258 0.759132]
(U,Lambda) = eig(full(A)) = ([-1.06105,0.0799611,0.0932247,0.206632,0.256681,0.503314,0.570827,0.712599,0.821006,2.26577],
[-0.382775 -0.436039 0.734349 0.0719853 0.247361 0.0365028 -0.0866896 -0.076241 0.000919596 -0.207498; -0.418124 0.0874275 -0.196821 -0.0850984 -0.489864 0.319318 -0.469266 -0.26561 0.00270135 -0.372628; -0.0133382 0.00163987 -0.00361399 -0.00121582 -0.00586284 -0.00323457 0.0111559 0.0286092 -0.999224 -0.0192119; -0.0421258 0.877116 0.476026 0.0115605 0.0364819 0.00468839 -0.0109732 -0.0094519 0.000112794 -0.0243993; -0.102654 0.0181432 -0.0405174 -0.0158031 -0.0838055 -0.933861 -0.296776 -0.0985959 0.000897765 -0.101604; -0.293586 0.036832 -0.0812213 -0.0274987 -0.133085 -0.076063 0.268291 0.799695 0.0391197 -0.410583; -0.281713 0.160483 -0.397043 0.504923 0.654423 0.0453128 -0.101487 -0.0824373 0.000956225 -0.186745; -0.217231 0.0325867 -0.0722939 -0.0261153 -0.131449 -0.124521 0.770616 -0.508413 0.00320534 -0.246402; -0.124362 0.0579886 -0.139508 -0.854645 0.468603 0.0222628 -0.0490866 -0.0391035 0.000449558 -0.0852461; 0.661782 -0.0320372 0.0693408 0.0196929 0.0872259 0.027093 -0.0735877 -0.0817924 0.00114403 -0.731692])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
