>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (515.1796875 MB free)
Uptime: 3924.0 sec
Load Avg:  1.00390625  1.01806640625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     150401 s         59 s      27407 s     181636 s          8 s
#2  3504 MHz      64992 s         90 s      19642 s     295468 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.399939 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.297652; 0.0 0.967702 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.546841; 0.0 0.0 0.000974397 0.0 0.0 0.0 0.0 0.0 0.0 0.0485443; 0.0 0.0 0.0 0.768647 0.0 0.0 0.0 0.0 0.0 0.694749; 0.0 0.0 0.0 0.0 0.962368 0.0 0.0 0.0 0.0 0.190077; 0.0 0.0 0.0 0.0 0.0 0.864107 0.0 0.0 0.0 0.621556; 0.0 0.0 0.0 0.0 0.0 0.0 0.666564 0.0 0.0 0.347788; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0945529 0.0 0.467961; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.953949 0.583923; 0.297652 0.546841 0.0485443 0.694749 0.190077 0.621556 0.347788 0.467961 0.583923 0.337208]
(U,Lambda) = eig(full(A)) = ([-0.901452,0.00153481,0.175582,0.425445,0.679242,0.812084,0.907071,0.960412,0.963563,1.99253],
[-0.169669 0.00860814 0.209828 0.953641 -0.036867 -0.0345428 -0.0266081 -0.0034802 0.00244897 0.120003; -0.217029 0.00652128 0.109185 -0.0824098 0.0655809 0.168073 0.408875 0.491557 -0.612704 0.342609; -0.0399051 -0.998059 -0.0439712 0.00934574 -0.00247594 -0.00286258 -0.00242879 -0.000331568 0.000233863 0.0156507; -0.308594 0.010435 0.185276 -0.165425 0.268823 -0.765014 -0.227533 -0.0237416 0.0165289 0.364483; -0.0756532 0.00227932 0.038209 -0.0289295 0.0232248 0.0604942 0.15583 0.636679 0.737629 0.118471; -0.261156 0.0083025 0.142775 -0.115791 0.116313 0.571453 -0.65585 -0.0422944 0.028981 0.353669; -0.164538 0.00602558 0.112032 -0.117871 -0.949015 -0.114312 -0.0655561 -0.00775608 0.00543029 0.168411; -0.348538 0.0579651 -0.913402 0.11557 -0.0276878 -0.0311937 -0.0261098 -0.00354171 0.00249717 0.15831; -0.233464 0.00706405 0.118649 -0.0902882 0.0735341 0.19687 0.564694 -0.592057 0.281639 0.360997; 0.741826 -0.0115219 -0.158159 0.081719 -0.0345942 -0.0478298 -0.0453342 -0.00655315 0.00463729 0.642079])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
