>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1307
Commit 03c2464 (2016-11-24 20:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (531.9609375 MB free)
Uptime: 3170.0 sec
Load Avg:  0.98681640625  0.96337890625  0.91845703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     129486 s         73 s      24306 s     136544 s          6 s
#2  3499 MHz      78435 s         74 s      17452 s     210731 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.580766 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.917713; 0.0 0.97743 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.750338; 0.0 0.0 0.59148 0.0 0.0 0.0 0.0 0.0 0.0 0.332746; 0.0 0.0 0.0 0.340142 0.0 0.0 0.0 0.0 0.0 0.225147; 0.0 0.0 0.0 0.0 0.848567 0.0 0.0 0.0 0.0 0.721151; 0.0 0.0 0.0 0.0 0.0 0.0103015 0.0 0.0 0.0 0.465768; 0.0 0.0 0.0 0.0 0.0 0.0 0.680783 0.0 0.0 0.930784; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.694875 0.0 0.215561; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.688791 0.383815; 0.917713 0.750338 0.332746 0.225147 0.721151 0.465768 0.930784 0.215561 0.383815 0.266486]
(U,Lambda) = eig(full(A)) = ([-1.38596,0.0560729,0.34607,0.590028,0.625099,0.687608,0.694376,0.798111,0.933235,2.33498],
[-0.345212 -0.16467 0.101799 0.396491 0.702259 0.0243191 -0.0182116 0.234784 -0.132388 -0.345547; -0.234879 -0.0766729 0.0309401 -0.00775062 -0.072248 -0.00733001 0.0059765 -0.232671 0.863255 -0.365077; -0.124489 -0.0585116 0.035299 -0.91683 0.335778 0.00980048 -0.00729078 0.0895428 -0.0495066 -0.126059; -0.096499 -0.07462 -0.98879 0.00360551 0.0268045 0.00183458 -0.00143296 0.0273365 -0.0193022 -0.074549; -0.238761 -0.0856729 0.0373625 -0.011162 -0.109479 -0.012685 0.0105445 -0.794745 -0.433085 -0.320457; -0.246789 0.958051 -0.0361136 0.00321505 0.0257014 0.00194699 -0.00153506 0.0328746 -0.0256604 -0.132339; -0.333185 -0.140276 0.0723967 -0.0410412 -0.567072 0.386155 -0.154378 0.441123 -0.187471 -0.371659; -0.07664 -0.03177 0.0160891 -0.00822732 -0.104806 -0.0839843 0.975511 0.116104 -0.0459833 -0.0868123; -0.136861 -0.0571117 0.0291558 -0.0155514 -0.204436 -0.918103 -0.154934 0.195225 -0.0798376 -0.154002; 0.739812 0.0941484 -0.0260341 0.00400167 0.033925 0.00283126 -0.00225454 0.0556048 -0.0508468 -0.660514])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
