>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1230
Commit ce6a0c3 (2016-11-10 21:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (526.02734375 MB free)
Uptime: 3675.0 sec
Load Avg:  0.90966796875  0.97705078125  0.91796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     133067 s        120 s      25568 s     178587 s          9 s
#2  3499 MHz      84760 s         38 s      19459 s     251602 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.447056 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.949547; 0.0 0.832697 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.702131; 0.0 0.0 0.195793 0.0 0.0 0.0 0.0 0.0 0.0 0.459544; 0.0 0.0 0.0 0.221322 0.0 0.0 0.0 0.0 0.0 0.527895; 0.0 0.0 0.0 0.0 0.859344 0.0 0.0 0.0 0.0 0.214865; 0.0 0.0 0.0 0.0 0.0 0.190848 0.0 0.0 0.0 0.177055; 0.0 0.0 0.0 0.0 0.0 0.0 0.51276 0.0 0.0 0.805281; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.852732 0.0 0.824941; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.210785 0.117773; 0.949547 0.702131 0.459544 0.527895 0.214865 0.177055 0.805281 0.824941 0.117773 0.70415]
(U,Lambda) = eig(full(A)) = ([-1.1991,0.191335,0.204628,0.211457,0.268821,0.484441,0.696406,0.841315,0.858994,2.46919],
[-0.396556 -0.00982597 -0.0599953 0.0216697 -0.362201 0.66218 0.394636 0.0219732 -0.00366138 -0.335666; -0.237573 -0.00289695 -0.0171236 0.00607673 -0.0846566 -0.0525623 -0.533881 0.743238 -0.0424093 -0.306694; -0.226488 -0.272811 0.796663 -0.157737 0.42782 0.0415062 0.0951295 0.00649492 -0.00110063 -0.144495; -0.255499 -0.0465848 -0.484375 0.287711 0.755589 0.0523057 0.115151 0.00776816 -0.00131495 -0.167872; -0.0717604 -0.000851154 -0.00502685 0.00178311 -0.0247374 -0.0149417 -0.136658 -0.108736 0.976926 -0.0954073; -0.0875725 0.960718 0.196796 -0.0461909 0.154378 0.0157223 0.0362933 0.00248336 -0.000420916 -0.0555507; -0.323399 -0.0066297 -0.0400309 0.01437 -0.224436 -0.741357 0.454417 0.0223613 -0.00369434 -0.294228; -0.276401 -0.00330055 -0.0194967 0.00691655 -0.096051 -0.0583964 -0.546869 -0.659239 -0.209246 -0.364804; -0.0574276 -0.0160232 -0.292994 -0.943088 0.137967 0.0112201 0.0251327 0.00170411 -0.000288597 -0.0372774; 0.687478 0.00264622 0.0153173 -0.00537664 0.067987 0.0260708 0.103631 0.00912343 -0.0015884 -0.714826])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
