>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-pre.beta.9
Commit ceb0674 (2017-04-02 01:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (757.54296875 MB free)
Uptime: 4754.0 sec
Load Avg:  1.00927734375  1.01318359375  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     213659 s         63 s      17715 s     192175 s          7 s
#2  3500 MHz      75929 s         93 s      13232 s     374256 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.21.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead

WARNING: deprecated syntax "abstract AbstractDouble{T}<:Real" at /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:11.
Use "abstract type AbstractDouble{T}<:Real end" instead.

WARNING: deprecated syntax "inner constructor Double(...) around /home/vagrant/.julia/v0.6/DoubleDouble/src/DoubleDouble.jl:25".
Use "Double{T}(...) where T" instead.
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0, 100.0, 100.0, 100.0, 100.0] = [100.0, 100.0, 100.0, 100.0, 100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10, 10) = [0.691773 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.404113; 0.0 0.332321 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.962491; 0.0 0.0 0.597043 0.0 0.0 0.0 0.0 0.0 0.0 0.775364; 0.0 0.0 0.0 0.47411 0.0 0.0 0.0 0.0 0.0 0.967989; 0.0 0.0 0.0 0.0 0.194485 0.0 0.0 0.0 0.0 0.845494; 0.0 0.0 0.0 0.0 0.0 0.950313 0.0 0.0 0.0 0.217017; 0.0 0.0 0.0 0.0 0.0 0.0 0.695852 0.0 0.0 0.160289; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.824788 0.0 0.401929; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.320419 0.378465; 0.404113 0.962491 0.775364 0.967989 0.845494 0.217017 0.160289 0.401929 0.378465 0.463698]
(U, Lambda) = eig(full(A)) = ([-1.48949, 0.235604, 0.321961, 0.405179, 0.558383, 0.679511, 0.695409, 0.808622, 0.944453, 2.38517], [-0.129909 -0.0372604 -0.00416011 -0.0681208 -0.126414 0.909145 0.29371 0.134226 0.0427383 -0.168654; -0.370457 -0.418566 -0.353663 0.638213 0.177657 -0.0764718 0.00700593 0.0784291 0.0420182 -0.331354; -0.26057 -0.0902279 -0.0107306 -0.195234 -0.83686 -0.259353 0.0208325 0.142231 0.0596416 -0.30645; -0.34567 -0.170703 -0.0242205 -0.678422 0.479286 -0.129999 0.0115604 0.11231 0.0549973 -0.357971; -0.352062 0.864834 0.0252503 0.193866 0.0969491 -0.0480858 0.00446086 0.0534326 0.0301268 -0.272761; -0.062371 -0.0127713 -0.00131484 -0.0192324 -0.0231046 0.0221062 -0.00225008 -0.0594449 -0.989742 -0.10689; -0.0514314 -0.0146481 -0.00163208 -0.0266405 -0.0486531 0.270578 -0.955516 0.0551661 0.0172301 -0.067057; -0.121781 -0.0286925 -0.00304308 -0.0462752 -0.0629534 0.0763175 -0.00821042 -0.964959 0.0897571 -0.182042; -0.146627 -0.187683 0.934632 0.215714 0.0663632 -0.0290731 0.00266739 0.0300875 0.016207 -0.129542; 0.701205 0.0420601 0.003807 0.0483107 0.0417266 -0.0275849 0.0026429 0.0388116 0.0267231 -0.706728])
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:29
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:30
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: maxabs(x) is deprecated, use maximum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: sumabs(x) is deprecated, use sum(abs, x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sumabs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 [4] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:305
 [8] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
Remedy 3 
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:128
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:402
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Float64}, ::Int64) at ./deprecated.jl:51
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:129
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:402
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:539
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:305
 [9] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] macro expansion at ./multidimensional.jl:474 [inlined]
 [2] macro expansion at ./cartesian.jl:62 [inlined]
 [3] macro expansion at ./multidimensional.jl:471 [inlined]
 [4] _unsafe_getindex! at ./multidimensional.jl:466 [inlined]
 [5] macro expansion at ./multidimensional.jl:460 [inlined]
 [6] _unsafe_getindex(::IndexLinear, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:453
 [7] macro expansion at ./multidimensional.jl:442 [inlined]
 [8] _getindex at ./multidimensional.jl:438 [inlined]
 [9] getindex at ./abstractarray.jl:875 [inlined]
 [10] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 [11] include_from_node1(::String) at ./loading.jl:539
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:305
 [14] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 243
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors

>>> End of log
