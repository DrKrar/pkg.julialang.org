>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (522.44921875 MB free)
Uptime: 3810.0 sec
Load Avg:  0.994140625  1.02587890625  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     153892 s         89 s      28241 s     165442 s         10 s
#2  3498 MHz      58996 s         51 s      19339 s     290392 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.71287 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.469795; 0.0 0.120618 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.883781; 0.0 0.0 0.0289232 0.0 0.0 0.0 0.0 0.0 0.0 0.00167062; 0.0 0.0 0.0 0.943253 0.0 0.0 0.0 0.0 0.0 0.236341; 0.0 0.0 0.0 0.0 0.945939 0.0 0.0 0.0 0.0 0.911757; 0.0 0.0 0.0 0.0 0.0 0.940687 0.0 0.0 0.0 0.929407; 0.0 0.0 0.0 0.0 0.0 0.0 0.705836 0.0 0.0 0.962027; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0844957 0.0 0.395922; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0896279 0.489184; 0.469795 0.883781 0.00167062 0.236341 0.911757 0.929407 0.962027 0.395922 0.489184 0.503232]
(U,Lambda) = eig(full(A)) = ([-1.48201,0.0289234,0.0861476,0.0983725,0.320879,0.711476,0.80711,0.942846,0.943793,2.61794],
[-0.151285 -6.23265e-5 0.00268639 0.0102823 0.189597 0.89207 -0.341519 -0.0026179 0.00299339 -0.169153; -0.389773 -0.000874557 0.0918834 0.534326 -0.698144 -0.00395967 -0.0881963 -0.00137746 0.0015797 -0.242746; -0.000781507 0.999999 -0.000104624 -0.000323527 -0.00090523 -6.47948e-6 -0.000147074 -2.34259e-6 2.68684e-6 -0.000442614; -0.0688778 -2.34543e-5 0.000988189 0.00376221 0.0600739 0.00269939 0.118928 0.743568 0.644373 -0.0968027; -0.265423 -9.02172e-5 0.00380034 0.0144679 0.230758 0.0102944 0.449926 0.377804 -0.625213 -0.374046; -0.271148 -9.24933e-5 0.00389771 0.0148399 0.237218 0.0107342 0.476668 -0.551663 0.440274 -0.380092; -0.310792 -0.000128956 0.00556351 0.0212994 0.395342 -0.451611 -0.650779 -0.00520175 0.00594857 -0.34511; -0.178639 -0.000646453 -0.858913 -0.383726 -0.264966 -0.00167168 -0.0375357 -0.000591115 0.000677936 -0.107196; -0.219999 -0.000731203 0.50373 -0.752374 -0.334646 -0.00208251 -0.0467092 -0.000734751 0.000842662 -0.132716; 0.706803 9.07374e-5 -0.00358373 -0.0134493 -0.158197 -0.00264727 -0.068508 -0.00128153 0.00147137 -0.685933])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
