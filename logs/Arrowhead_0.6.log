>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1701
Commit d8a5718 (2016-12-26 06:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (471.4296875 MB free)
Uptime: 3822.0 sec
Load Avg:  1.09814453125  1.611328125  1.6552734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     165252 s         94 s      30411 s     158329 s          9 s
#2  3500 MHz     107710 s         46 s      23698 s     236864 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.0781623 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.943914; 0.0 0.961626 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.170446; 0.0 0.0 0.671662 0.0 0.0 0.0 0.0 0.0 0.0 0.475006; 0.0 0.0 0.0 0.727512 0.0 0.0 0.0 0.0 0.0 0.698934; 0.0 0.0 0.0 0.0 0.495689 0.0 0.0 0.0 0.0 0.951333; 0.0 0.0 0.0 0.0 0.0 0.901351 0.0 0.0 0.0 0.872935; 0.0 0.0 0.0 0.0 0.0 0.0 0.45303 0.0 0.0 0.314798; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.109734 0.0 0.348897; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.116651 0.358896; 0.943914 0.170446 0.475006 0.698934 0.951333 0.872935 0.314798 0.348897 0.358896 0.659601]
(U,Lambda) = eig(full(A)) = ([-1.3632,0.103802,0.114019,0.257394,0.457033,0.611437,0.69248,0.828266,0.960097,2.51369],
[-0.446004 -0.491738 0.163499 0.654383 0.0301756 -0.130343 0.049444 -0.086106 -0.00950821 -0.276543; -0.0499317 0.00265396 -0.00124896 -0.0300736 -0.00409129 0.0358418 -0.0203786 0.0874546 0.990499 -0.0783611; -0.15898 0.0111728 -0.0052905 -0.142473 -0.0268056 0.580805 0.734216 -0.207548 -0.0146303 -0.184003; -0.227678 0.0149678 -0.00707589 -0.184733 -0.031298 0.443407 -0.642014 -0.474677 -0.0266967 -0.279212; -0.348545 0.0324248 -0.015481 -0.496058 -0.298079 -0.605232 0.155561 -0.195732 -0.0181985 -0.336383; -0.26253 0.0146194 -0.00688618 -0.168438 -0.0237959 0.221727 -0.134486 0.817288 -0.132009 -0.386321; -0.118043 0.01204 -0.00576728 -0.199938 0.952628 -0.14634 0.0423049 -0.057405 -0.0055153 -0.109005; -0.161322 0.785543 0.505683 0.293595 0.0121677 -0.05121 0.019266 -0.0332256 -0.00364498 -0.10356; -0.16517 0.373057 -0.846826 0.316853 0.0127708 -0.0534142 0.0200563 -0.0345101 -0.0037802 -0.106836; 0.68105 -0.0133569 0.00621089 0.124255 0.012112 -0.0736385 0.0321791 -0.0684261 -0.00888388 -0.713547])
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 in inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: sumabs(x) is deprecated, use sum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs(::Array{Float64,1}) at ./deprecated.jl:50
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:270
 in _start() at ./client.jl:357

>>> End of log
