>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1138
Commit 72725a1 (2016-10-27 21:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (527.0078125 MB free)
Uptime: 3235.0 sec
Load Avg:  0.9658203125  0.96337890625  0.89501953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     138586 s         22 s      26101 s     129248 s          7 s
#2  3499 MHz      71714 s        165 s      18830 s     220527 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.242574 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.718833; 0.0 0.118785 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.11939; 0.0 0.0 0.17692 0.0 0.0 0.0 0.0 0.0 0.0 0.30165; 0.0 0.0 0.0 0.359433 0.0 0.0 0.0 0.0 0.0 0.246596; 0.0 0.0 0.0 0.0 0.530241 0.0 0.0 0.0 0.0 0.6042; 0.0 0.0 0.0 0.0 0.0 0.538883 0.0 0.0 0.0 0.323341; 0.0 0.0 0.0 0.0 0.0 0.0 0.0163288 0.0 0.0 0.292135; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.890769 0.0 0.923104; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.42413 0.199847; 0.718833 0.11939 0.30165 0.246596 0.6042 0.323341 0.292135 0.923104 0.199847 0.40949]
(U,Lambda) = eig(full(A)) = ([-1.00522,0.0330274,0.120715,0.185101,0.333479,0.390291,0.437961,0.536969,0.695977,1.97925],
[-0.409614 0.189115 0.094377 0.319599 -0.592389 0.393417 0.215146 -0.0127589 0.235973 -0.278506; -0.0755247 0.0767489 -0.989948 -0.0460031 -0.0416596 0.0355504 0.0218745 -0.00149181 0.0307869 -0.0431788; -0.181436 0.115569 0.0858659 -0.942181 -0.144342 0.114294 0.0675765 -0.0043778 0.0864983 -0.112614; -0.128485 0.0416493 0.0165271 0.0361451 0.71178 0.646052 0.183638 -0.00725795 0.10906 -0.102434; -0.279789 0.0669909 0.0236045 0.0447325 0.230041 -0.349032 -0.382887 -0.469245 0.542605 -0.280566; -0.148893 0.0352381 0.012371 0.0233541 0.117928 -0.175923 -0.187358 0.88276 0.306352 -0.151047; -0.203336 -0.964454 -0.0447751 -0.0442303 -0.0690056 0.0631555 0.0405181 -0.00293197 0.0639761 -0.100139; -0.346181 0.0593298 0.019179 0.0334263 0.12409 -0.149116 -0.119217 0.0136335 -0.705339 -0.57063; -0.0994141 0.0281699 0.010538 0.0213642 0.165155 -0.477473 0.844964 -0.00925443 0.109419 -0.0864685; 0.71103 -0.0551288 -0.0159991 -0.0255528 -0.0749145 0.0808457 0.058479 -0.00522534 0.14884 -0.672859])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
