>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (512.49609375 MB free)
Uptime: 4002.0 sec
Load Avg:  1.041015625  0.97216796875  0.91455078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     147708 s          5 s      25227 s     196431 s          7 s
#2  3500 MHz      65585 s        194 s      19371 s     302837 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.350926 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.964501; 0.0 0.676942 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.616504; 0.0 0.0 0.433494 0.0 0.0 0.0 0.0 0.0 0.0 0.0874427; 0.0 0.0 0.0 0.332357 0.0 0.0 0.0 0.0 0.0 0.88161; 0.0 0.0 0.0 0.0 0.981584 0.0 0.0 0.0 0.0 0.903091; 0.0 0.0 0.0 0.0 0.0 0.859551 0.0 0.0 0.0 0.599495; 0.0 0.0 0.0 0.0 0.0 0.0 0.965739 0.0 0.0 0.673635; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.124832 0.0 0.0914454; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.706821 0.171775; 0.964501 0.616504 0.0874427 0.88161 0.903091 0.599495 0.673635 0.0914454 0.171775 0.569548]
(U,Lambda) = eig(full(A)) = ([-1.35477,0.125652,0.340624,0.432962,0.563166,0.704266,0.756973,0.893044,0.971726,2.56815],
[-0.399339 0.0383452 0.659584 0.0711789 -0.511026 0.0383122 -0.198738 0.0775772 0.0106981 0.301157; -0.214296 0.0100155 0.0129143 -0.0152981 0.609327 0.316679 -0.644514 0.124395 0.0144008 0.225682; -0.0345329 0.00254398 0.00663337 -0.995791 -0.0758307 0.00453259 -0.0226168 0.0082969 0.00111869 0.0283593; -0.369037 0.0381984 -0.751297 0.053053 -0.429528 0.033271 -0.173714 0.0685616 0.00949467 0.272989; -0.272982 0.00944953 0.00992628 -0.00996584 0.242711 -0.0457069 0.336401 -0.444754 -0.63082 0.39407; -0.191199 0.00731589 0.00813889 -0.00850808 0.227456 -0.0541858 0.488978 0.780461 0.0367997 0.24291; -0.205013 0.00718155 0.0075919 -0.00765481 0.188169 -0.0361598 0.269974 -0.404062 0.774746 0.291038; -0.0436474 -0.99834 -0.00298548 0.00179673 -0.0234598 0.00221506 -0.0121033 0.00519047 0.000743512 0.0259109; -0.0588436 0.00264713 0.00330469 -0.00379742 0.134464 -0.943708 -0.286566 0.040221 0.00446505 0.0638907; 0.706222 -0.00895607 -0.00704508 0.00605418 -0.112452 0.0140355 -0.0836671 0.0436039 0.00688581 0.692309])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
