>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1211
Commit 1ac30c3 (2016-11-08 21:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (539.8515625 MB free)
Uptime: 3414.0 sec
Load Avg:  1.03271484375  1.08056640625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     120803 s         91 s      28782 s     158147 s         14 s
#2  3500 MHz      90746 s         53 s      19378 s     221275 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.129798 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.976556; 0.0 0.920181 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.850891; 0.0 0.0 0.0663467 0.0 0.0 0.0 0.0 0.0 0.0 0.506167; 0.0 0.0 0.0 0.196778 0.0 0.0 0.0 0.0 0.0 0.673337; 0.0 0.0 0.0 0.0 0.869532 0.0 0.0 0.0 0.0 0.172206; 0.0 0.0 0.0 0.0 0.0 0.785283 0.0 0.0 0.0 0.318139; 0.0 0.0 0.0 0.0 0.0 0.0 0.68812 0.0 0.0 0.770336; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.344467 0.0 0.33704; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.947416 0.403706; 0.976556 0.850891 0.506167 0.673337 0.172206 0.318139 0.770336 0.33704 0.403706 0.823755]
(U,Lambda) = eig(full(A)) = ([-1.23883,0.077125,0.175047,0.326749,0.500934,0.764692,0.824739,0.872359,0.943034,2.52582],
[-0.469933 0.36455 -0.565473 -0.240332 -0.405223 0.078556 -0.0976797 -0.0205632 -0.0120696 -0.297087; -0.259563 0.0198456 0.0299202 0.0694987 0.31256 -0.279484 0.619709 0.278209 -0.374234 -0.38628; -0.255416 -0.923402 -0.122008 -0.0942155 -0.179369 0.0370175 -0.0463932 -0.00981924 -0.00580311 -0.150013; -0.308902 0.110651 0.811845 -0.251108 -0.340931 0.0605527 -0.0745341 -0.0155841 -0.00906895 -0.210733; -0.0537931 0.00427313 0.00649696 0.0153778 0.071949 -0.083889 0.267235 -0.952304 -0.0235482 -0.0757859; -0.103516 0.0088335 0.0136598 0.0336294 0.172304 -0.789072 -0.560482 -0.0571273 -0.0202701 -0.133232; -0.263289 0.0247907 0.0393393 0.103324 0.633777 0.513799 -0.391944 -0.0653768 -0.0303737 -0.30555; -0.140198 0.0247891 0.0521245 0.922004 -0.331734 0.0409623 -0.0487809 -0.00998304 -0.00565954 -0.112624; -0.121616 0.00912109 0.0136951 0.0315268 0.139249 -0.112837 0.228748 0.0841013 0.926103 -0.186433; 0.658602 -0.0196628 -0.0262014 -0.0484701 -0.154003 0.0510721 -0.0695112 -0.015636 -0.0100511 -0.728916])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
