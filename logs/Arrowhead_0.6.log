>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (515.5859375 MB free)
Uptime: 3804.0 sec
Load Avg:  1.021484375  1.0419921875  0.958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     141039 s        106 s      27398 s     180226 s         10 s
#2  3499 MHz      75684 s         49 s      19696 s     273016 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.53208 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.587382; 0.0 0.114085 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.599526; 0.0 0.0 0.264169 0.0 0.0 0.0 0.0 0.0 0.0 0.572091; 0.0 0.0 0.0 0.276278 0.0 0.0 0.0 0.0 0.0 0.340033; 0.0 0.0 0.0 0.0 0.95723 0.0 0.0 0.0 0.0 0.0548863; 0.0 0.0 0.0 0.0 0.0 0.507997 0.0 0.0 0.0 0.542349; 0.0 0.0 0.0 0.0 0.0 0.0 0.546374 0.0 0.0 0.618479; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.459303 0.0 0.907115; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.406407 0.636773; 0.587382 0.599526 0.572091 0.340033 0.0548863 0.542349 0.618479 0.907115 0.636773 0.732104]
(U,Lambda) = eig(full(A)) = ([-1.19253,0.149621,0.2725,0.306069,0.421445,0.49158,0.52027,0.540543,0.956696,2.32983],
[-0.228413 -0.0833411 -0.0199289 -0.126306 -0.106557 0.303252 0.686369 0.540271 -0.0134634 -0.240913; -0.307717 0.915503 0.0333308 0.151767 0.0391484 -0.0332078 -0.0203701 0.0109434 -0.00692483 -0.199506; -0.263382 -0.27102 0.604793 0.663574 0.0730056 -0.0526015 -0.0308293 0.0161135 -0.00804003 -0.204209; -0.155256 -0.145685 -0.792621 0.554727 0.0470119 -0.0330231 -0.0192334 0.0100162 -0.00486379 -0.122091; -0.0171224 -0.00368796 -0.000705958 -0.00409646 -0.00205602 0.0024646 0.00173353 -0.00102536 0.999396 -0.0294841; -0.213888 -0.0821228 -0.0202829 -0.130532 -0.125765 0.690772 -0.609861 0.129715 -0.0117639 -0.219502; -0.238528 -0.0845918 -0.0198888 -0.125082 -0.0993612 0.236012 0.32698 -0.825724 -0.01467 -0.2557; -0.368287 -0.158953 -0.0427675 -0.2877 -0.480908 -0.587648 -0.205343 0.0869187 -0.0177497 -0.357575; -0.267082 -0.134567 -0.041881 -0.308427 0.849826 -0.156324 -0.0771811 0.0369538 -0.0112622 -0.244106; 0.670641 0.0542654 0.00880714 0.0485997 0.0200703 -0.0209095 -0.013801 0.00778436 -0.0097326 -0.737341])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
