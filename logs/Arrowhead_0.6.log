>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1973
Commit f4ed16b (2017-01-06 23:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (467.66015625 MB free)
Uptime: 3753.0 sec
Load Avg:  0.94140625  1.48974609375  1.60205078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     175274 s         82 s      29602 s     136044 s         12 s
#2  3499 MHz     107043 s         60 s      24486 s     232473 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.147706 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.298062; 0.0 0.876516 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.921113; 0.0 0.0 0.551423 0.0 0.0 0.0 0.0 0.0 0.0 0.879161; 0.0 0.0 0.0 0.779376 0.0 0.0 0.0 0.0 0.0 0.722674; 0.0 0.0 0.0 0.0 0.304888 0.0 0.0 0.0 0.0 0.994711; 0.0 0.0 0.0 0.0 0.0 0.384001 0.0 0.0 0.0 0.197054; 0.0 0.0 0.0 0.0 0.0 0.0 0.820988 0.0 0.0 0.353278; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.577574 0.0 0.997571; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.244462 0.285364; 0.298062 0.921113 0.879161 0.722674 0.994711 0.197054 0.353278 0.997571 0.285364 0.940458]
(U,Lambda) = eig(full(A)) = ([-1.37102,0.154358,0.247832,0.373244,0.400249,0.562789,0.716936,0.811372,0.840621,2.89101],
[-0.131936 0.983215 0.0343596 0.0534954 -0.0644655 0.00698265 0.032101 -0.00981209 0.0126837 -0.079666; -0.275514 -0.0279881 -0.0169109 -0.0740863 0.105637 -0.0285501 -0.353862 0.308915 -0.756644 -0.335264; -0.307434 -0.0485847 -0.0334247 -0.199728 0.317648 0.752172 0.325638 -0.07389 0.0896384 -0.275531; -0.225924 -0.0253713 -0.0156925 -0.0720284 0.104115 -0.0324458 -0.709552 -0.493457 0.34793 -0.250937; -0.39901 -0.145 -0.201227 0.589047 -0.569747 0.0375053 0.147995 -0.0429077 0.0547481 -0.282026; -0.0754815 -0.0188289 -0.0167031 -0.741508 -0.662433 0.0107175 0.0362848 -0.0100736 0.0127248 -0.0576329; -0.108346 -0.0116285 -0.00711429 -0.0319385 0.0458627 -0.0133049 -0.208146 0.802674 0.530572 -0.125136; -0.344159 -0.0517219 -0.0349186 -0.197624 0.307276 -0.656088 0.438832 -0.0932198 0.111823 -0.316175; -0.11875 -0.0694944 0.977239 0.0896959 -0.100051 0.00871713 0.0370271 -0.0109974 0.0141142 -0.0790605; 0.672261 0.0219428 0.0115422 0.0404789 -0.0546205 0.00972408 0.0613056 -0.0218476 0.0294863 -0.733232])
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:308
 [9] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:308
 [9] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: sumabs(x) is deprecated, use sum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sumabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 [4] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:308
 [8] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] macro expansion at ./multidimensional.jl:383 [inlined]
 [2] macro expansion at ./cartesian.jl:62 [inlined]
 [3] macro expansion at ./multidimensional.jl:380 [inlined]
 [4] _unsafe_getindex! at ./multidimensional.jl:373 [inlined]
 [5] macro expansion at ./multidimensional.jl:331 [inlined]
 [6] _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:324
 [7] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:308
 [11] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors

>>> End of log
