>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1156
Commit 9747250 (2016-10-29 17:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (528.84765625 MB free)
Uptime: 3326.0 sec
Load Avg:  0.93408203125  1.02197265625  0.93896484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     140268 s         96 s      25940 s     136893 s          7 s
#2  3499 MHz      65526 s         41 s      18820 s     235728 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.655 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.550073; 0.0 0.150664 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.836267; 0.0 0.0 0.155165 0.0 0.0 0.0 0.0 0.0 0.0 0.921673; 0.0 0.0 0.0 0.51852 0.0 0.0 0.0 0.0 0.0 0.950483; 0.0 0.0 0.0 0.0 0.817 0.0 0.0 0.0 0.0 0.372464; 0.0 0.0 0.0 0.0 0.0 0.980111 0.0 0.0 0.0 0.25699; 0.0 0.0 0.0 0.0 0.0 0.0 0.941464 0.0 0.0 0.0178178; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.269102 0.0 0.471979; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.885835 0.552504; 0.550073 0.836267 0.921673 0.950483 0.372464 0.25699 0.0178178 0.471979 0.552504 0.991148]
(U,Lambda) = eig(full(A)) = ([-1.21615,0.15268,0.250187,0.387694,0.626321,0.789833,0.855316,0.941433,0.973198,2.60349],
[-0.188581 0.00196782 -0.0479204 0.201605 0.890264 0.254236 -0.129911 -0.00327797 -0.0455718 0.21289; -0.392484 -0.745245 0.29633 -0.345646 -0.0816047 0.0815346 -0.056145 -0.0018051 -0.0268018 0.257106; -0.431148 0.666727 0.342062 -0.388319 -0.0907978 0.0904987 -0.0622767 -0.00200084 -0.0297015 0.283884; -0.351491 0.00466873 -0.124918 0.711775 -0.409246 0.218316 -0.133511 -0.00383619 -0.0551079 0.343778; -0.117517 0.00100752 -0.0231739 0.084998 0.0906665 -0.854414 -0.459876 -0.0051092 -0.0628609 0.157223; -0.0750616 0.000558121 -0.0124163 0.042499 0.0337159 -0.0841667 0.0974222 0.0113413 0.979956 0.119379; -0.00529744 4.0592e-5 -0.000908985 0.00315221 0.00262428 -0.00732285 0.00978474 0.99976 -0.0148013 0.00808442; -0.203849 0.0072851 -0.880004 -0.389902 -0.061327 0.0564835 -0.0380897 -0.00119825 -0.0176711 0.15247; -0.168613 0.0013542 -0.030653 0.108661 0.0988187 -0.358648 0.856449 -0.0169622 -0.166718 0.242568; 0.641484 -0.00179698 0.0352659 -0.0979694 -0.0464156 0.0623179 -0.0473087 -0.0017069 -0.0263617 0.754108])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
