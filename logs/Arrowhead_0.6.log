>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1553
Commit 840820d (2016-12-13 04:22 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (548.1953125 MB free)
Uptime: 3292.0 sec
Load Avg:  0.92626953125  0.998046875  0.921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     126271 s        109 s      25840 s     150236 s          7 s
#2  3501 MHz      68165 s         58 s      18565 s     230085 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.67229 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0477566; 0.0 0.279286 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0298153; 0.0 0.0 0.720188 0.0 0.0 0.0 0.0 0.0 0.0 0.512664; 0.0 0.0 0.0 0.22932 0.0 0.0 0.0 0.0 0.0 0.811862; 0.0 0.0 0.0 0.0 0.676349 0.0 0.0 0.0 0.0 0.337503; 0.0 0.0 0.0 0.0 0.0 0.997401 0.0 0.0 0.0 0.668588; 0.0 0.0 0.0 0.0 0.0 0.0 0.0335871 0.0 0.0 0.339709; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.141257 0.0 0.590627; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.362724 0.227123; 0.0477566 0.0298153 0.512664 0.811862 0.337503 0.668588 0.339709 0.590627 0.227123 0.762914]
(U,Lambda) = eig(full(A)) = ([-0.853808,0.0482154,0.171559,0.279225,0.354028,0.555261,0.67236,0.690886,0.880264,2.07732],
[-0.0202742 -0.00311732 -0.00393311 -0.000248634 0.00552056 0.0733502 0.992386 0.0874489 -0.0327447 0.024551; -0.0170478 -0.00525631 -0.0114136 -0.999379 -0.0146759 -0.0194192 0.000109456 0.00246656 -0.00707451 0.0119774; -0.21102 -0.031079 -0.0385356 -0.00237916 0.0515107 0.558734 -0.0154677 -0.595753 -0.45669 0.272855; -0.485619 -0.182616 -0.579641 0.0332913 -0.239508 -0.447717 0.00264432 0.059893 -0.17785 0.317323; -0.142901 -0.0218882 -0.0275724 -0.00173918 0.0385234 0.501004 -0.122098 0.790542 -0.236017 0.174008; -0.23399 -0.0286941 -0.0333864 -0.00190512 0.0382324 0.271808 -0.00296822 -0.0742739 0.813919 0.447187; -0.248018 0.946017 0.101537 0.00283012 -0.0390025 -0.117049 0.000767424 0.0175984 -0.0572143 0.120062; -0.384552 -0.258596 0.803803 0.00876052 -0.102126 -0.256431 0.00160476 0.0365908 -0.113967 0.220351; -0.120957 -0.029418 -0.048996 -0.00556638 0.960982 -0.212034 0.00105848 0.0235668 -0.0625794 0.0956798; 0.647879 0.0407367 0.0412389 0.00204641 -0.0367904 -0.179747 0.00144303 0.0340509 -0.142599 0.722309])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
