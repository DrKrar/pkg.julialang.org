>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1544
Commit 579cfcb (2016-12-11 05:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (545.01953125 MB free)
Uptime: 3153.0 sec
Load Avg:  0.8935546875  0.97119140625  0.94384765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     147728 s         98 s      28613 s     109533 s          6 s
#2  3500 MHz      60252 s         58 s      18632 s     226637 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.70387 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.715263; 0.0 0.661486 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.236236; 0.0 0.0 0.626025 0.0 0.0 0.0 0.0 0.0 0.0 0.665017; 0.0 0.0 0.0 0.880699 0.0 0.0 0.0 0.0 0.0 0.506784; 0.0 0.0 0.0 0.0 0.431755 0.0 0.0 0.0 0.0 0.444876; 0.0 0.0 0.0 0.0 0.0 0.462035 0.0 0.0 0.0 0.0591579; 0.0 0.0 0.0 0.0 0.0 0.0 0.84783 0.0 0.0 0.530269; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.068936 0.0 0.140033; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.998823 0.582674; 0.715263 0.236236 0.665017 0.506784 0.444876 0.0591579 0.530269 0.140033 0.582674 0.662649]
(U,Lambda) = eig(full(A)) = ([-0.761119,0.07608,0.457972,0.465392,0.651108,0.669066,0.790995,0.866476,0.961965,2.16617],
[-0.347047 -0.0576189 0.126231 -0.131679 0.359111 -0.505188 0.55807 0.0953492 -0.153879 -0.338491; -0.118037 -0.0204081 0.0503739 -0.0528908 0.602962 0.766187 0.123998 0.0249806 -0.0436543 -0.108647; -0.340775 -0.0611543 0.171728 -0.181759 -0.702346 0.379819 0.274029 0.0599509 -0.109917 -0.298806; -0.219409 -0.0318527 0.0520257 -0.0535739 0.0584727 -0.0588651 -0.384044 -0.772376 -0.346264 -0.272821; -0.265095 -0.0632556 -0.736401 0.580664 -0.0537257 0.046083 0.0841826 0.0221829 -0.0465893 -0.177503; -0.0343786 -0.00775157 0.63186 0.773701 -0.00828838 0.0070242 0.0122247 0.00317064 -0.00657051 -0.024023; -0.234267 -0.0347482 0.0590261 -0.0608743 0.0714047 -0.0729177 -0.634229 0.616468 -0.257973 -0.278347; -0.119916 0.991294 -0.0156205 0.0155072 -0.00637182 0.00573591 0.0131833 0.00380597 -0.0087068 -0.0462062; -0.235334 -0.0319344 0.0467523 -0.0479564 0.0443902 -0.043436 -0.190585 -0.0954333 0.877788 -0.345417; 0.710815 0.0505724 -0.0433966 0.0439035 -0.0264902 0.0245821 0.0679779 0.0216765 -0.0555258 -0.692021])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
