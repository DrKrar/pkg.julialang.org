>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (517.90625 MB free)
Uptime: 4822.0 sec
Load Avg:  0.99267578125  0.9677734375  0.90869140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     138118 s        116 s      25538 s     281706 s         10 s
#2  3499 MHz      67380 s         42 s      19496 s     380560 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.1
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.139271 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.464193; 0.0 0.540153 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0849025; 0.0 0.0 0.79038 0.0 0.0 0.0 0.0 0.0 0.0 0.984023; 0.0 0.0 0.0 0.960385 0.0 0.0 0.0 0.0 0.0 0.451933; 0.0 0.0 0.0 0.0 0.67774 0.0 0.0 0.0 0.0 0.715758; 0.0 0.0 0.0 0.0 0.0 0.19694 0.0 0.0 0.0 0.915878; 0.0 0.0 0.0 0.0 0.0 0.0 0.262852 0.0 0.0 0.115109; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.237841 0.0 0.30664; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.190696 0.778372; 0.464193 0.0849025 0.984023 0.451933 0.715758 0.915878 0.115109 0.30664 0.778372 0.277473]
(U,Lambda) = eig(full(A)) = ([-1.5066,0.14569,0.193307,0.235095,0.262289,0.47338,0.542277,0.720931,0.94022,2.26714],
[-0.202478 0.944218 -0.0219917 0.0418499 -0.0183539 -0.20082 0.0282787 -0.0361818 -0.0245554 -0.14779; -0.0297804 -0.0028106 0.000626653 -0.0024044 0.00148623 0.183787 0.98167 -0.021293 -0.0089917 -0.033306; -0.307555 -0.0199315 0.00421912 -0.0153094 0.00906351 0.448688 -0.0973748 0.642393 -0.278246 -0.451425; -0.131517 -0.00724376 0.00150827 -0.00538309 0.0031489 0.134134 -0.0265374 0.0855681 0.949576 -0.234299; -0.235246 -0.017567 0.00378248 -0.0139695 0.00838003 0.506253 -0.129723 -0.751348 -0.115538 -0.305087; -0.385976 -0.233363 0.645368 0.207376 -0.068171 -0.478888 0.065113 -0.0792455 -0.0522081 -0.29972; -0.0467033 -0.0128295 0.00423729 -0.0358264 0.994137 -0.0790312 0.0101139 -0.0113928 -0.00720011 -0.0389083; -0.126197 -0.0434526 0.0176271 -0.964615 -0.0610083 -0.188176 0.024729 -0.0287781 -0.0184974 -0.10237; -0.329234 -0.225841 -0.763313 0.151457 -0.0528835 -0.398001 0.0543545 -0.0665549 -0.0440003 -0.253956; 0.717919 0.0130582 -0.00256002 0.00863913 -0.00486407 -0.144543 0.0245512 -0.0453378 -0.0423695 -0.677473])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
