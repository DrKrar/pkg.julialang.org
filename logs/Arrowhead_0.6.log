>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1181
Commit e90a2e4 (2016-11-04 01:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (432.8671875 MB free)
Uptime: 3136.0 sec
Load Avg:  0.98681640625  0.96044921875  0.8408203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     104539 s         66 s      19762 s     165587 s          3 s
#2  3500 MHz      63774 s         89 s      12004 s     228781 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.945249 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.83832; 0.0 0.963274 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.508682; 0.0 0.0 0.986254 0.0 0.0 0.0 0.0 0.0 0.0 0.248236; 0.0 0.0 0.0 0.97474 0.0 0.0 0.0 0.0 0.0 0.147804; 0.0 0.0 0.0 0.0 0.161134 0.0 0.0 0.0 0.0 0.107801; 0.0 0.0 0.0 0.0 0.0 0.212102 0.0 0.0 0.0 0.432166; 0.0 0.0 0.0 0.0 0.0 0.0 0.0405554 0.0 0.0 0.376917; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.58541 0.0 0.312733; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.878219 0.854332; 0.83832 0.508682 0.248236 0.147804 0.107801 0.432166 0.376917 0.312733 0.854332 0.116085]
(U,Lambda) = eig(full(A)) = ([-1.09771,0.0779993,0.163328,0.283826,0.60357,0.907863,0.958759,0.974302,0.984664,2.00642],
[-0.315102 -0.0892588 0.0214158 0.186962 -0.137686 -0.59192 0.478367 -0.0841993 0.132682 0.484226; -0.189528 -0.0530584 0.0127021 0.110437 -0.0793595 -0.242335 -0.868573 -0.134591 0.148349 0.298899; -0.0914693 -0.0252373 0.00602548 0.0521298 -0.0364017 -0.0835914 -0.0695991 0.0606063 -0.974252 0.149148; -0.0547649 -0.0152196 0.00363858 0.0315562 -0.0223465 -0.0583408 -0.0712974 0.985105 0.0929057 0.087814; -0.0657584 -0.119736 -0.981354 -0.129608 0.0136731 0.00381083 0.00104188 -0.000386838 0.000816598 0.035808; -0.253363 -0.297577 0.176993 -0.888815 0.0619515 0.0163965 0.00446195 -0.00165451 0.00348967 0.14763; -0.254276 0.929503 -0.0613241 -0.22855 0.0375685 0.0114719 0.00316448 -0.00117789 0.00249052 0.117521; -0.142679 -0.0569114 0.0148001 0.152964 0.966366 0.0256016 0.00645733 -0.00234656 0.00488641 0.134896; -0.332014 -0.0985833 0.0238713 0.21202 -0.174561 0.760754 0.0817728 -0.0259458 0.0500686 0.464156; 0.767893 0.0923391 -0.0199751 -0.147511 0.0561174 0.0263974 0.00770894 -0.00291802 0.00623831 0.612946])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
