>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (559.94921875 MB free)
Uptime: 4141.0 sec
Load Avg:  0.95947265625  0.9755859375  0.90771484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     148489 s         57 s      26582 s     206941 s          6 s
#2  3507 MHz      66597 s         89 s      19616 s     314762 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.500484 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.584631; 0.0 0.964426 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.191931; 0.0 0.0 0.577714 0.0 0.0 0.0 0.0 0.0 0.0 0.926679; 0.0 0.0 0.0 0.307989 0.0 0.0 0.0 0.0 0.0 0.367867; 0.0 0.0 0.0 0.0 0.0989175 0.0 0.0 0.0 0.0 0.969279; 0.0 0.0 0.0 0.0 0.0 0.455793 0.0 0.0 0.0 0.366691; 0.0 0.0 0.0 0.0 0.0 0.0 0.131248 0.0 0.0 0.761168; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.527314 0.0 0.671393; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.755296 0.33737; 0.584631 0.191931 0.926679 0.367867 0.969279 0.366691 0.761168 0.671393 0.33737 0.147289]
(U,Lambda) = eig(full(A)) = ([-1.65572,0.118057,0.263893,0.345415,0.462827,0.510608,0.55009,0.74496,0.958354,2.16799],
[-0.195828 0.0198862 -0.193215 -0.280025 -0.276498 0.800693 0.253444 -0.0714855 -0.0400596 -0.238748; -0.0529057 0.00294988 -0.0214227 -0.0230296 -0.00681477 -0.00586422 -0.00996144 0.0261425 0.991739 -0.108593; -0.299667 0.0262249 -0.23089 -0.296293 -0.143654 -0.191477 -0.721378 -0.165633 -0.0763805 -0.396809; -0.1353 0.0251948 -0.652302 0.730057 0.0423135 0.0251743 0.0326758 -0.0251658 -0.017746 -0.13468; -0.398974 -0.658785 0.459394 0.292062 0.0474373 0.0326456 0.0461995 -0.0448497 -0.0353837 -0.319005; -0.125427 0.0141235 -0.149412 -0.246752 0.928457 0.0927556 0.0836242 -0.0379073 -0.0228917 -0.145838; -0.307643 0.750602 0.448689 0.263977 0.0408844 0.0278212 0.0390806 -0.0370755 -0.0288727 -0.254489; -0.222126 0.0213403 -0.19929 -0.27415 -0.185425 -0.557278 0.633913 -0.0922141 -0.0488681 -0.278662; -0.101062 0.0068869 -0.0536817 -0.0611349 -0.0205442 -0.019118 -0.0353546 0.975663 -0.0521259 -0.162624; 0.722244 -0.0130083 0.0781911 0.0742745 0.01781 0.0138659 0.0215046 -0.0298931 -0.0313738 -0.680965])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
