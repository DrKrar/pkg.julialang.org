>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1067
Commit d66df68 (2016-10-21 02:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (796.69921875 MB free)
Uptime: 3672.0 sec
Load Avg:  0.935546875  0.7216796875  0.44189453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      71558 s         54 s       8856 s     272483 s          4 s
#2  3500 MHz      14004 s         86 s       3367 s     347381 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.476168 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.881875; 0.0 0.742985 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.957222; 0.0 0.0 0.179365 0.0 0.0 0.0 0.0 0.0 0.0 0.264928; 0.0 0.0 0.0 0.875726 0.0 0.0 0.0 0.0 0.0 0.547832; 0.0 0.0 0.0 0.0 0.118883 0.0 0.0 0.0 0.0 0.988333; 0.0 0.0 0.0 0.0 0.0 0.598239 0.0 0.0 0.0 0.594107; 0.0 0.0 0.0 0.0 0.0 0.0 0.157427 0.0 0.0 0.422223; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.397074 0.0 0.761487; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.439077 0.825495; 0.881875 0.957222 0.264928 0.547832 0.988333 0.594107 0.422223 0.761487 0.825495 0.943294]
(U,Lambda) = eig(full(A)) = ([-1.52744,0.148989,0.175325,0.231268,0.4123,0.458108,0.571847,0.678224,0.857079,2.92254],
[-0.291389 0.044385 -0.0406495 0.258688 -0.227664 0.73078 0.350602 -0.242211 -0.0749528 0.267346; -0.279116 0.0265365 -0.0233836 0.134382 -0.0477274 0.0502865 -0.21276 0.820273 -0.271614 0.325713; -0.10276 0.143615 -0.909386 -0.366687 0.0187527 -0.014224 0.0256763 -0.029472 -0.0126557 0.071625; -0.150918 0.0124132 -0.0108465 0.0610676 -0.0194911 0.019632 -0.0685755 0.153933 0.951135 0.198499; -0.397436 -0.540596 0.24282 -0.63176 0.0555376 -0.0436024 0.0829971 -0.0980584 -0.0433447 0.261438; -0.185032 0.0217767 -0.0194805 0.116303 -0.0526822 0.0634493 -0.856277 -0.412206 -0.0743084 0.189567; -0.165903 0.823897 0.327131 -0.410774 0.0273141 -0.0210151 0.0387547 -0.0449916 -0.0195373 0.113245; -0.261951 0.0505449 -0.0476201 0.32993 0.824563 -0.186716 0.165733 -0.150308 -0.0535925 0.22362; -0.277904 0.0468596 -0.0434017 0.28537 -0.508309 -0.649144 0.236503 -0.191561 -0.0639352 0.246517; 0.662031 -0.016467 0.0138672 -0.0718386 0.0164881 -0.0149657 0.0380385 -0.0554955 -0.0323746 0.741633])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
