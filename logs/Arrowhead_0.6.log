>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1297
Commit 416f5f2 (2016-11-23 13:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (546.5859375 MB free)
Uptime: 3453.0 sec
Load Avg:  1.01318359375  1.0244140625  0.953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     134489 s        115 s      28746 s     152385 s          5 s
#2  3504 MHz      83518 s         47 s      19757 s     228621 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.519147 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.842229; 0.0 0.497269 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.712831; 0.0 0.0 0.602984 0.0 0.0 0.0 0.0 0.0 0.0 0.994538; 0.0 0.0 0.0 0.0499688 0.0 0.0 0.0 0.0 0.0 0.22382; 0.0 0.0 0.0 0.0 0.849282 0.0 0.0 0.0 0.0 0.310598; 0.0 0.0 0.0 0.0 0.0 0.0776572 0.0 0.0 0.0 0.778211; 0.0 0.0 0.0 0.0 0.0 0.0 0.0306503 0.0 0.0 0.643378; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.267166 0.0 0.182253; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.79041 0.332836; 0.842229 0.712831 0.994538 0.22382 0.310598 0.778211 0.643378 0.182253 0.332836 0.765395]
(U,Lambda) = eig(full(A)) = ([-1.31491,0.0441264,0.054075,0.213085,0.277388,0.505653,0.5637,0.779626,0.840813,2.48637],
[-0.305386 0.0270499 0.0260692 0.306443 0.180015 0.588784 -0.564278 0.10104 0.0694777 0.314489; -0.261588 0.0239994 0.0231532 0.279329 0.167518 -0.802015 -0.3203 0.0788902 0.0550586 0.263244; -0.344849 0.0271499 0.0260819 0.284052 0.157835 0.0963884 0.755676 0.17594 0.110963 0.387892; -0.109053 0.584462 -0.784656 -0.152803 -0.050855 -0.00463331 -0.0130048 0.0095855 0.00750982 0.0674806; -0.095441 0.00588527 0.0056226 0.054367 0.0280637 0.0085264 0.0324644 -0.13934 -0.973199 0.139365; -0.371633 0.35408 0.475041 -0.63991 -0.201333 -0.017152 -0.0477928 0.0346429 0.0270586 0.237324; -0.317977 -0.728367 -0.395377 -0.392725 -0.134739 -0.0127769 -0.0360278 0.0268431 0.0210725 0.192449; -0.076609 0.0124664 0.012312 0.375284 -0.921284 -0.00720884 -0.0183459 0.0111134 0.00843044 0.0603262; -0.105134 0.00680415 0.00650688 0.0642005 0.0335239 0.0110258 0.0438225 -0.964409 0.175226 0.14416; 0.665016 -0.0152563 -0.0143952 -0.11136 -0.0516727 -0.00943315 -0.0298496 0.0312489 0.0265351 0.734563])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
