>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1532
Commit ae1b30b (2016-12-09 18:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (559.6484375 MB free)
Uptime: 3066.0 sec
Load Avg:  0.974609375  1.0556640625  0.97802734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     117584 s        104 s      26633 s     135997 s          6 s
#2  3498 MHz      81333 s         40 s      18954 s     190068 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.721711 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.933535; 0.0 0.995011 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.664168; 0.0 0.0 0.948164 0.0 0.0 0.0 0.0 0.0 0.0 0.0356848; 0.0 0.0 0.0 0.630041 0.0 0.0 0.0 0.0 0.0 0.742778; 0.0 0.0 0.0 0.0 0.801187 0.0 0.0 0.0 0.0 0.909792; 0.0 0.0 0.0 0.0 0.0 0.517247 0.0 0.0 0.0 0.681496; 0.0 0.0 0.0 0.0 0.0 0.0 0.217534 0.0 0.0 0.92439; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.836558 0.0 0.949152; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.930451 0.815574; 0.933535 0.664168 0.0356848 0.742778 0.909792 0.681496 0.92439 0.949152 0.815574 0.193674]
(U,Lambda) = eig(full(A)) = ([-1.94129,0.29602,0.54315,0.654637,0.754266,0.819155,0.903937,0.948138,0.980534,2.83304],
[-0.259473 -0.16927 0.181338 -0.399445 -0.764119 -0.126648 -0.141202 0.00300176 -0.0726857 -0.293995; -0.167421 -0.0733416 0.0509824 -0.056002 0.0735126 0.0499276 0.201002 -0.0103163 0.924512 -0.240265; -0.00914116 -0.00422361 0.00305605 -0.00348913 0.00490402 0.00365666 0.0222389 -0.999346 -0.0222156 -0.0125883; -0.213813 -0.171644 0.296505 0.86669 -0.159328 -0.0519225 -0.0747468 0.00170009 -0.0427071 -0.224187; -0.245546 -0.139012 0.122295 -0.178172 0.516671 -0.669374 -0.244051 0.00450758 -0.102228 -0.297725; -0.205173 -0.237776 -0.912586 0.14236 -0.0766165 -0.0298408 -0.0485758 0.00115151 -0.0296438 -0.195672; -0.316936 0.909095 -0.0984687 0.060695 -0.0458923 -0.020312 -0.0371189 0.000921184 -0.0244147 -0.234998; -0.252907 -0.135536 0.112205 -0.149739 0.30734 0.720996 -0.388268 0.00619331 -0.132851 -0.316108; -0.210209 -0.0992254 0.0730402 -0.0848649 0.123349 0.096873 0.847802 0.0335737 -0.328169 -0.285025; 0.740174 0.077187 -0.0346855 0.0287 -0.0266466 -0.0132197 -0.0275625 0.00072807 -0.0201521 -0.664911])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
