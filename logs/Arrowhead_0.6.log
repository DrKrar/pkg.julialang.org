>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.993
Commit d6d3069 (2016-10-16 23:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (799.296875 MB free)
Uptime: 3498.0 sec
Load Avg:  0.93896484375  0.72900390625  0.45263671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      75035 s         57 s      11013 s     248704 s          6 s
#2  3500 MHz      12640 s         97 s       3797 s     329904 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.141272 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.690906; 0.0 0.222635 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.939478; 0.0 0.0 0.525179 0.0 0.0 0.0 0.0 0.0 0.0 0.645952; 0.0 0.0 0.0 0.20074 0.0 0.0 0.0 0.0 0.0 0.187922; 0.0 0.0 0.0 0.0 0.0903134 0.0 0.0 0.0 0.0 0.823912; 0.0 0.0 0.0 0.0 0.0 0.626246 0.0 0.0 0.0 0.700721; 0.0 0.0 0.0 0.0 0.0 0.0 0.0156847 0.0 0.0 0.00726364; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.183956 0.0 0.194228; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.390775 0.882175; 0.690906 0.939478 0.645952 0.187922 0.823912 0.700721 0.00726364 0.194228 0.882175 0.664654]
(U,Lambda) = eig(full(A)) = ([-1.48062,0.0156872,0.112918,0.169391,0.186479,0.201828,0.323244,0.488146,0.593482,2.4509],
[-0.285683 -0.00193735 0.541759 0.692231 -0.1813 0.0636056 -0.21717 -0.0955339 0.063514 0.220127; -0.369908 -0.00159864 0.190374 -0.497103 0.308251 -0.251725 -0.534114 -0.169713 0.105313 0.310253; -0.215973 -0.000446466 0.0348355 -0.0511493 0.0226243 -0.0111369 0.182969 0.836615 0.393143 0.246833; -0.0749554 -0.000357608 0.047574 -0.168882 0.156328 0.962447 -0.0877428 -0.0313611 0.0198912 0.0614553; -0.35173 -0.0038879 -0.810359 0.293536 -0.101637 0.0411895 -0.202321 -0.0993324 0.0680704 0.256836; -0.223046 -0.00040415 0.030349 -0.0432113 0.0189022 -0.00920427 0.132278 0.243367 -0.889065 0.282593; -0.00325552 0.999989 -0.00166086 0.00133136 -0.000504511 0.000217543 -0.00135086 -0.000737392 0.0005226 0.00219489; -0.0782518 -0.000406475 0.0607877 -0.375684 -0.913077 0.0605853 -0.0797596 -0.030625 0.0197161 0.0630473; -0.316137 -0.000828222 0.0705875 -0.112264 0.0512255 -0.0260287 0.747206 -0.434545 0.180916 0.315106; 0.670634 0.000352148 -0.0222328 0.0281729 -0.0118629 0.00557491 -0.0571988 -0.0479635 0.041571 0.735859])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
