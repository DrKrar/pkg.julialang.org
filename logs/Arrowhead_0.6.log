>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (490.83984375 MB free)
Uptime: 4411.0 sec
Load Avg:  1.19775390625  1.16015625  1.07763671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     162598 s         74 s      27343 s     232758 s          8 s
#2  3496 MHz      78960 s         70 s      19386 s     330837 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.7.1
2 additional packages:
 - Compat                        0.9.2
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.162689 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.53394; 0.0 0.161372 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.702486; 0.0 0.0 0.109882 0.0 0.0 0.0 0.0 0.0 0.0 0.590031; 0.0 0.0 0.0 0.576107 0.0 0.0 0.0 0.0 0.0 0.757022; 0.0 0.0 0.0 0.0 0.698698 0.0 0.0 0.0 0.0 0.0179161; 0.0 0.0 0.0 0.0 0.0 0.436168 0.0 0.0 0.0 0.554708; 0.0 0.0 0.0 0.0 0.0 0.0 0.538413 0.0 0.0 0.389707; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.87695 0.0 0.969313; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.696232 0.586938; 0.53394 0.702486 0.590031 0.757022 0.0179161 0.554708 0.389707 0.969313 0.586938 0.475215]
(U,Lambda) = eig(full(A)) = ([-1.38362,0.123985,0.162207,0.302067,0.473198,0.54644,0.653231,0.698695,0.781355,2.37417],
[-0.242421 -0.287399 0.797136 0.421627 -0.0934495 -0.0251295 -0.0603742 0.000124571 -0.0656227 -0.167698; -0.319216 -0.39144 -0.60374 0.549527 -0.122429 -0.0329489 -0.0792195 0.000163492 -0.0861541 -0.220502; -0.277359 0.871548 -0.00809975 0.337899 -0.088257 -0.0244103 -0.0602325 0.000125312 -0.0668135 -0.180993; -0.271198 -0.0348815 0.00131379 -0.304038 0.39977 0.46086 -0.544446 0.000772245 -0.280445 -0.292429; -0.00604045 -0.000649433 2.3988e-5 -0.00497153 0.00431772 0.00212522 0.0218568 -0.999555 -0.0164807 -0.00742717; -0.214001 -0.0370166 0.00145441 -0.455266 -0.814103 -0.0908535 -0.141747 0.000264232 -0.122188 -0.198805; -0.142348 -0.0195899 0.00074409 -0.181478 0.324748 -0.876867 -0.188262 0.000304052 -0.12197 -0.147449; -0.301036 -0.0268183 0.000974152 -0.185574 0.130469 0.0529688 0.240324 -0.000680016 0.770993 -0.449672; -0.198122 -0.0213673 0.000789483 -0.163888 0.143014 0.0707689 0.75709 0.0297991 -0.524279 -0.24296; 0.702058 0.0208325 -0.00071831 0.110061 -0.0543449 -0.0180609 -0.0554671 0.000125053 -0.0760358 -0.694571])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:372 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:369 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:362 [inlined]
 in macro expansion at ./multidimensional.jl:320 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:313
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
