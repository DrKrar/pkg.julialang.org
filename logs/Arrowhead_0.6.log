>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1836
Commit 1539061 (2017-01-01 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (477.9296875 MB free)
Uptime: 3579.0 sec
Load Avg:  1.037109375  1.509765625  1.5947265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     171294 s         60 s      31839 s     123874 s         11 s
#2  3500 MHz     108534 s         90 s      23644 s     214848 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.196754 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.537213; 0.0 0.550944 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.658727; 0.0 0.0 0.701883 0.0 0.0 0.0 0.0 0.0 0.0 0.900255; 0.0 0.0 0.0 0.878007 0.0 0.0 0.0 0.0 0.0 0.0182166; 0.0 0.0 0.0 0.0 0.189796 0.0 0.0 0.0 0.0 0.501153; 0.0 0.0 0.0 0.0 0.0 0.271024 0.0 0.0 0.0 0.521565; 0.0 0.0 0.0 0.0 0.0 0.0 0.277963 0.0 0.0 0.667892; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.828753 0.0 0.479383; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.506531 0.905437; 0.537213 0.658727 0.900255 0.0182166 0.501153 0.521565 0.667892 0.479383 0.905437 0.781952]
(U,Lambda) = eig(full(A)) = ([-1.2709,0.19273,0.222002,0.273651,0.36831,0.535193,0.64006,0.81218,0.877984,2.5324],
[-0.246628 -0.614937 -0.683259 -0.0277166 0.242777 0.0300245 0.066889 0.0287262 -0.000977923 0.168149; -0.24362 -0.00847193 0.0643053 0.00942468 -0.279632 -0.791034 0.408 0.0829813 -0.00249779 0.243039; -0.307472 -0.00814585 0.060241 0.00834038 -0.209237 -0.102156 -0.803756 0.268604 -0.00633952 0.359539; -0.00571175 -0.000122468 0.000891704 0.000119584 -0.00277089 -0.00100512 -0.00422571 -0.00910691 0.999896 0.00804977; -0.231169 0.786931 -0.499676 -0.0237104 0.217652 0.0274448 0.0614347 0.0264984 -0.000903056 0.156396; -0.227911 -0.0306899 0.341644 -0.787853 0.415649 0.0373454 0.0780103 0.0317172 -0.00106562 0.168613; -0.290545 -0.0361006 0.383247 0.614438 0.57314 0.0491128 0.101811 0.041143 -0.00138036 0.216582; -0.153835 -0.0034724 0.0253707 0.00342618 -0.0807181 -0.0308883 -0.140229 -0.951877 -0.0120752 0.205711; -0.34323 -0.013293 0.102186 0.015425 -0.507864 0.597541 0.374278 0.0974862 -0.00302278 0.32674; 0.673781 0.00460702 -0.0321115 -0.00396735 0.0775291 0.0189151 0.0551965 0.0329084 -0.00124009 0.731062])
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] inv(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:63
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:337
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 [4] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 [5] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
WARNING: sumabs(x) is deprecated, use sum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sumabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:359
 [4] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] macro expansion at ./multidimensional.jl:373 [inlined]
 [2] macro expansion at ./cartesian.jl:62 [inlined]
 [3] macro expansion at ./multidimensional.jl:370 [inlined]
 [4] _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 [5] macro expansion at ./multidimensional.jl:321 [inlined]
 [6] _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 [7] aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:298
 [11] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
