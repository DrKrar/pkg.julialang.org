>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Arrowhead
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1131
Commit 4523ba9 (2016-10-27 01:15 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (537.66015625 MB free)
Uptime: 3509.0 sec
Load Avg:  1.0830078125  0.9970703125  0.93212890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     136311 s         57 s      24787 s     162685 s          6 s
#2  3499 MHz      76322 s         90 s      19851 s     242774 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.35707 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.483794; 0.0 0.704063 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.502265; 0.0 0.0 0.0873869 0.0 0.0 0.0 0.0 0.0 0.0 0.624569; 0.0 0.0 0.0 0.659095 0.0 0.0 0.0 0.0 0.0 0.463668; 0.0 0.0 0.0 0.0 0.552445 0.0 0.0 0.0 0.0 0.0981948; 0.0 0.0 0.0 0.0 0.0 0.648859 0.0 0.0 0.0 0.62468; 0.0 0.0 0.0 0.0 0.0 0.0 0.0304494 0.0 0.0 0.962357; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0289713 0.0 0.886322; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.870149 0.457931; 0.483794 0.502265 0.624569 0.463668 0.0981948 0.62468 0.962357 0.886322 0.457931 0.303094]
(U,Lambda) = eig(full(A)) = ([-1.58322,0.0296468,0.0761136,0.31041,0.501116,0.555146,0.65537,0.690539,0.842577,2.16388],
[-0.173468 0.000831302 0.0276662 -0.858929 -0.433308 -0.0649351 0.0102935 -0.0338547 -0.0564897 -0.186998; -0.15277 0.000418999 0.012851 -0.105697 0.31929 0.0896677 -0.0654667 0.866637 -0.205563 -0.240282; -0.260094 0.00608571 0.890139 0.231991 -0.19476 -0.0354983 0.00697911 -0.0241639 -0.0468843 -0.210057; -0.143858 0.000414434 0.0127785 -0.110158 0.378656 0.118587 -0.790149 -0.344091 -0.143257 -0.215189; -0.0319874 0.000105673 0.00331212 -0.0336088 0.246809 -0.96666 0.00605511 -0.0165931 -0.0191865 -0.0425562; -0.194703 0.000567579 0.0175236 -0.1529 0.545489 0.177217 0.608923 -0.349738 -0.182807 -0.287956; -0.414902 0.674646 -0.3386 0.284761 -0.26379 -0.0487615 0.00977387 -0.0340209 -0.0671762 -0.315025; -0.382472 -0.738115 -0.30207 0.260885 -0.242188 -0.0447828 0.0089804 -0.031263 -0.0617563 -0.289935; -0.129856 0.000306528 0.00926591 -0.0677731 0.160092 0.0386487 -0.0135321 0.0594955 0.941544 -0.247197; 0.695703 -0.000562611 -0.0160667 0.0828404 -0.129014 -0.0265858 0.00634681 -0.0233353 -0.0566897 -0.698374])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
