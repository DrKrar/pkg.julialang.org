>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1527
Commit 4dcada1 (2016-12-08 19:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (541.43359375 MB free)
Uptime: 3416.0 sec
Load Avg:  0.98095703125  0.95166015625  0.8759765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     118962 s         71 s      27657 s     168990 s          5 s
#2  3499 MHz      86932 s         78 s      18785 s     222640 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.5
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.33592 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.683318; 0.0 0.579345 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0033505; 0.0 0.0 0.78557 0.0 0.0 0.0 0.0 0.0 0.0 0.609506; 0.0 0.0 0.0 0.92254 0.0 0.0 0.0 0.0 0.0 0.635336; 0.0 0.0 0.0 0.0 0.709332 0.0 0.0 0.0 0.0 0.248783; 0.0 0.0 0.0 0.0 0.0 0.926163 0.0 0.0 0.0 0.847155; 0.0 0.0 0.0 0.0 0.0 0.0 0.850081 0.0 0.0 0.387764; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.945981 0.0 0.0266379; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.308845 0.364191; 0.683318 0.0033505 0.609506 0.635336 0.248783 0.847155 0.387764 0.0266379 0.364191 0.377612]
(U,Lambda) = eig(full(A)) = ([-0.989991,0.314248,0.468052,0.579348,0.715211,0.814254,0.862483,0.923859,0.945969,2.10796],
[-0.380557 -0.423504 0.778454 -0.0024279 -0.041283 -0.0552058 -0.0355151 -0.00191816 -0.000514163 -0.2526; -0.00157654 -0.000169757 -0.00453167 -0.999987 -0.000565092 -0.000551192 -0.000323856 -1.60508e-5 -4.19499e-6 -0.0014358; -0.253486 -0.0173694 -0.288953 0.00255636 0.198511 -0.821148 -0.216879 -0.00727416 -0.00174429 -0.301927; -0.245305 -0.0140286 -0.210426 0.0016012 0.0702208 0.22674 0.289522 -0.794836 -0.0124475 -0.351087; -0.108107 -0.00845774 -0.155209 0.00165542 -0.969637 -0.0916316 -0.0444571 -0.00191395 -0.000482591 -0.11652; -0.32647 -0.0185949 -0.278361 0.00211272 0.0920238 0.292544 0.36408 0.606706 -0.0196342 -0.469574; -0.155612 -0.00971989 -0.152788 0.00123881 0.0658831 0.418269 -0.855686 -0.00867428 -0.00185628 -0.201935; -0.0101604 -0.000566355 -0.00838982 6.28412e-5 0.00264509 0.00781479 0.00873094 0.00198727 0.999726 -0.0150171; -0.207055 0.905236 0.344337 -0.00116449 -0.0205368 -0.027847 -0.0180029 -0.00097732 -0.00026239 -0.132603; 0.738433 0.0134315 0.150528 -0.000864923 -0.0229151 -0.038645 -0.0273679 -0.00165042 -0.000459032 -0.655062])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
