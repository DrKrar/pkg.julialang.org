>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1235
Commit 271b31d (2016-11-13 22:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (532.390625 MB free)
Uptime: 3595.0 sec
Load Avg:  1.06787109375  0.9775390625  0.927734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     130502 s         99 s      27156 s     171674 s         10 s
#2  3500 MHz      84022 s         39 s      19226 s     245089 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.701543 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.541332; 0.0 0.00175113 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.716515; 0.0 0.0 0.693924 0.0 0.0 0.0 0.0 0.0 0.0 0.994917; 0.0 0.0 0.0 0.849832 0.0 0.0 0.0 0.0 0.0 0.855974; 0.0 0.0 0.0 0.0 0.913195 0.0 0.0 0.0 0.0 0.432054; 0.0 0.0 0.0 0.0 0.0 0.00837302 0.0 0.0 0.0 0.0656183; 0.0 0.0 0.0 0.0 0.0 0.0 0.761201 0.0 0.0 0.0693555; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.057885 0.0 0.71213; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.62736 0.717808; 0.541332 0.716515 0.994917 0.855974 0.432054 0.0656183 0.0693555 0.71213 0.717808 0.218899]
(U,Lambda) = eig(full(A)) = ([-1.58718,0.00830629,0.0273345,0.222299,0.645335,0.699821,0.76088,0.799588,0.904664,2.35292],
[-0.171692 -0.000789238 0.0218821 0.175248 0.208628 0.880648 -0.0420412 0.261084 0.049947 -0.218715; -0.32734 0.110476 -0.763286 -0.504045 -0.0241173 -0.0028752 -0.00434958 0.0424673 0.0148724 -0.203331; -0.316607 -0.00146666 0.0406769 0.327293 0.443562 -0.472615 -0.0684757 0.445249 0.0884792 -0.400132; -0.254965 -0.00102806 0.0283626 0.211627 0.0906737 0.0159837 0.0443446 -0.805599 0.292571 -0.37996; -0.125433 -0.000482579 0.0132921 0.0970225 0.0349412 0.00567202 0.0130717 -0.179836 -0.949116 -0.200226; -0.0298533 -0.99377 -0.0943133 -0.0475892 -0.00223162 -0.000265832 -0.000401839 0.0039217 0.00137207 -0.0186736; -0.0214383 -9.31048e-5 0.00257563 0.0199672 0.0129668 0.00316516 0.995354 0.0854354 0.00906029 -0.0290721; -0.314235 -0.0145174 0.635273 -0.671998 -0.0262602 -0.00310749 -0.00466815 0.0454018 0.0157612 -0.207029; -0.23529 -0.00117194 0.0326031 0.274938 -0.865084 -0.0277489 -0.0247742 0.197082 0.0485124 -0.277549; 0.725902 0.00101071 -0.0272534 -0.155148 -0.0216625 -0.00280118 -0.00460827 0.0472872 0.0187413 -0.667207])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
