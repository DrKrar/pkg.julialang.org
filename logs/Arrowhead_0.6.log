>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1031
Commit 90a3740 (2016-10-19 02:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (789.015625 MB free)
Uptime: 3327.0 sec
Load Avg:  0.9765625  0.71240234375  0.4482421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz      71651 s        112 s      11808 s     236310 s          2 s
#2  3501 MHz       7976 s         41 s       3351 s     319049 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.894105 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0928763; 0.0 0.685613 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.867434; 0.0 0.0 0.267976 0.0 0.0 0.0 0.0 0.0 0.0 0.905349; 0.0 0.0 0.0 0.478052 0.0 0.0 0.0 0.0 0.0 0.618425; 0.0 0.0 0.0 0.0 0.89854 0.0 0.0 0.0 0.0 0.424268; 0.0 0.0 0.0 0.0 0.0 0.415236 0.0 0.0 0.0 0.671658; 0.0 0.0 0.0 0.0 0.0 0.0 0.705615 0.0 0.0 0.0807965; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.117067 0.0 0.00811919; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.314176 0.875699; 0.0928763 0.867434 0.905349 0.618425 0.424268 0.671658 0.0807965 0.00811919 0.875699 0.0321238]
(U,Lambda) = eig(full(A)) = ([-1.61255,0.117072,0.289145,0.378558,0.455407,0.604089,0.705464,0.874277,0.894347,2.10269],
[-0.0275466 -7.159e-5 0.00275812 0.00714484 -0.00637335 0.0245523 -0.000915145 0.247103 0.966905 -0.0507303; -0.280617 -0.000913821 0.0393064 0.112041 -0.113435 0.815756 0.0812218 -0.242549 0.0104647 -0.404095; -0.357928 -0.00359337 -0.768312 -0.324704 0.145412 -0.206509 0.00384654 -0.0787735 0.00363972 -0.325753; -0.219925 -0.0010261 0.0588132 0.246517 -0.822147 -0.376181 0.00505468 -0.0823375 0.00374085 -0.251287; -0.125614 -0.000325174 0.0125077 0.03236 -0.0288227 0.110468 -0.00408445 0.922466 -0.254802 -0.232595; -0.246255 -0.00134921 0.0956975 0.726274 0.503336 -0.272667 0.00430158 -0.0771878 0.00353017 -0.262758; -0.0259123 -8.22245e-5 0.00348533 0.00979773 -0.0097212 0.0610135 -0.996647 -0.0252713 0.00107803 -0.038178; -0.00348996 0.999988 -0.000847658 -0.00123144 0.000722415 -0.00127812 2.56485e-5 -0.000565651 2.63038e-5 -0.00269933; -0.337904 -0.00266101 0.628518 -0.539445 0.18666 -0.231577 0.00415986 -0.0824785 0.00380087 -0.323223; 0.74346 0.000598945 -0.0179653 -0.0396603 0.0301043 -0.0766671 0.00185875 -0.0527536 0.00251816 -0.660147])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
