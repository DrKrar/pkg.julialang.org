>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1297
Commit 416f5f2 (2016-11-23 13:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (542.35546875 MB free)
Uptime: 3272.0 sec
Load Avg:  1.0927734375  1.00927734375  0.93017578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     132507 s         51 s      27437 s     137796 s          4 s
#2  3499 MHz      82826 s         92 s      18770 s     213252 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.448344 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.716938; 0.0 0.559329 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.908606; 0.0 0.0 0.543428 0.0 0.0 0.0 0.0 0.0 0.0 0.212388; 0.0 0.0 0.0 0.0861686 0.0 0.0 0.0 0.0 0.0 0.207606; 0.0 0.0 0.0 0.0 0.0568913 0.0 0.0 0.0 0.0 0.188107; 0.0 0.0 0.0 0.0 0.0 0.840232 0.0 0.0 0.0 0.939919; 0.0 0.0 0.0 0.0 0.0 0.0 0.442848 0.0 0.0 0.314887; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.69041 0.0 0.316536; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.806301 0.0759488; 0.716938 0.908606 0.212388 0.207606 0.188107 0.939919 0.314887 0.316536 0.0759488 0.507215]
(U,Lambda) = eig(full(A)) = ([-1.04566,0.0627409,0.0977127,0.443674,0.487924,0.544293,0.671084,0.739389,0.806584,2.17342],
[-0.342817 -0.0554806 -0.108269 -0.373504 -0.762362 0.0295377 -0.164724 0.191805 -0.00742103 -0.286573; -0.404423 -0.0545984 -0.104224 -0.0191138 0.535544 -0.238886 -0.416084 0.392912 -0.0136266 -0.388159; -0.0954804 -0.0131846 -0.0252315 -0.00518006 0.161046 0.97039 -0.0851455 0.0843912 -0.00299277 -0.0898476; -0.131036 -0.26443 0.95225 0.00141283 -0.0217484 0.00179139 -0.0181644 0.0247467 -0.00106859 -0.0685847; -0.121882 0.959586 0.244 0.00118324 -0.0183672 0.00152564 -0.0156738 0.0214605 -0.000930416 -0.0612834; -0.356046 -0.0360741 -0.0670277 -0.00576659 0.112284 -0.0125552 0.284379 -0.725745 0.103582 -0.48614; -0.151125 -0.0247201 -0.04831 0.927389 -0.294011 0.0122704 -0.0706065 0.0826814 -0.00321015 -0.125467; -0.130253 -0.0150485 -0.0282789 -0.00312123 0.0657926 -0.00856366 0.83822 0.50321 -0.0101035 -0.147178; -0.0292969 -0.00304794 -0.00567543 -0.000509562 0.0100399 -0.00114589 0.0287452 -0.0883811 -0.994431 -0.0383069; 0.714384 0.0298402 0.0529507 0.00243296 -0.0420871 0.00395308 -0.0511769 0.0778642 -0.00370814 -0.689545])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
