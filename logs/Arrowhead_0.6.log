>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1241
Commit 80770e9 (2016-11-14 21:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (537.40234375 MB free)
Uptime: 3689.0 sec
Load Avg:  0.89404296875  0.96923828125  0.89990234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     135102 s        113 s      28618 s     173367 s         10 s
#2  3503 MHz      82832 s         40 s      20075 s     254188 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.4
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.861745 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.848351; 0.0 0.82695 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.245339; 0.0 0.0 0.231187 0.0 0.0 0.0 0.0 0.0 0.0 0.0112425; 0.0 0.0 0.0 0.721397 0.0 0.0 0.0 0.0 0.0 0.0701499; 0.0 0.0 0.0 0.0 0.485186 0.0 0.0 0.0 0.0 0.249576; 0.0 0.0 0.0 0.0 0.0 0.295034 0.0 0.0 0.0 0.080743; 0.0 0.0 0.0 0.0 0.0 0.0 0.087703 0.0 0.0 0.515717; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.325686 0.0 0.118894; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.127235 0.0779085; 0.848351 0.245339 0.0112425 0.0701499 0.249576 0.080743 0.515717 0.118894 0.0779085 0.114994]
(U,Lambda) = eig(full(A)) = ([-0.759986,0.126142,0.229596,0.235054,0.300449,0.340576,0.516844,0.722276,0.829627,1.53654],
[-0.397053 -0.0159005 0.159645 0.25233 0.094466 0.184161 0.289978 -0.075935 -0.276852 -0.737292; -0.117344 -0.00482665 0.0488578 0.0772624 0.0291246 0.0570688 0.0932697 -0.0292599 0.960768 -0.202766; -0.00860924 -0.00147558 0.840147 -0.542026 -0.0101453 -0.0116277 -0.00463984 0.000285791 0.000196911 -0.00505093; -0.0359428 -0.00162481 0.0169682 0.0268863 0.0104158 0.0208405 0.0404301 0.996456 0.00679374 -0.0504695; -0.152134 -0.00958371 0.11616 0.185986 0.0844386 0.195257 -0.929415 0.0131412 0.00759481 -0.139216; -0.0580894 -0.00659136 0.146782 0.250926 -0.931952 -0.200584 -0.042915 0.00235926 0.00158311 -0.0381411; -0.461772 0.184977 -0.432366 -0.652389 -0.151511 -0.230734 -0.141676 0.0101456 0.00728586 -0.208751; -0.0831216 -0.00821485 0.14719 0.244525 0.294448 -0.903412 -0.0733253 0.00374252 0.00247292 -0.0575844; -0.0666508 -0.9824 -0.0905426 -0.134691 -0.0281123 -0.0413156 -0.0235744 0.0016345 0.00116261 -0.0324203; 0.759019 0.0137873 -0.118959 -0.1864 -0.0625018 -0.113136 -0.117892 0.0124838 0.0104816 -0.586459])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:373 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:370 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:363 [inlined]
 in macro expansion at ./multidimensional.jl:321 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:314
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
