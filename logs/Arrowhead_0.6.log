>>> 'Pkg.add("Arrowhead")' log
INFO: Cloning cache of Arrowhead from https://github.com/ivanslapnicar/Arrowhead.jl.git
INFO: Cloning cache of DoubleDouble from https://github.com/simonbyrne/DoubleDouble.jl.git
INFO: Installing Arrowhead v0.0.1
INFO: Installing DoubleDouble v0.2.0
INFO: Package database updated

>>> 'Pkg.test("Arrowhead")' log
Julia Version 0.6.0-dev.1156
Commit 9747250 (2016-10-29 17:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (534.578125 MB free)
Uptime: 3400.0 sec
Load Avg:  0.99267578125  1.0966796875  0.96875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     124586 s         51 s      27293 s     158570 s          4 s
#2  3501 MHz      80808 s         85 s      18970 s     225729 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Arrowhead                     0.0.1
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.9.3
 - DoubleDouble                  0.2.0
INFO: Testing Arrowhead
There are four tests for arrowhead matrices, a random matrix test and three
tests from the arrowhead paper [1] (see README for details)

tols = [100.0,100.0,100.0,100.0,100.0] = [100.0,100.0,100.0,100.0,100.0]

1st test - Random SymArrow matrix

A = Arrowhead.GenSymArrow(10,10) = [0.828672 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.308275; 0.0 0.304337 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.689529; 0.0 0.0 0.252476 0.0 0.0 0.0 0.0 0.0 0.0 0.633905; 0.0 0.0 0.0 0.113957 0.0 0.0 0.0 0.0 0.0 0.738848; 0.0 0.0 0.0 0.0 0.831556 0.0 0.0 0.0 0.0 0.594062; 0.0 0.0 0.0 0.0 0.0 0.842333 0.0 0.0 0.0 0.137532; 0.0 0.0 0.0 0.0 0.0 0.0 0.602011 0.0 0.0 0.750271; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.705154 0.0 0.714393; 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.50694 0.602067; 0.308275 0.689529 0.633905 0.738848 0.594062 0.137532 0.750271 0.714393 0.602067 0.476885]
(U,Lambda) = eig(full(A)) = ([-1.36469,0.161777,0.274939,0.405751,0.543685,0.662549,0.793067,0.829311,0.841956,2.31598],
[-0.0984295 -0.0258134 0.0149603 -0.0641701 -0.049573 0.0851434 0.426344 0.876807 -0.0626841 -0.145285; -0.289325 -0.270096 0.630287 0.598562 0.132025 -0.0883191 -0.069473 0.00238459 -0.00346443 -0.240261; -0.274515 -0.390287 -0.758328 0.364089 0.0997588 -0.070926 -0.0577415 0.00199513 -0.00290475 -0.215328; -0.349935 0.8628 -0.123332 0.222911 0.0787939 -0.0617942 -0.0535731 0.00187513 -0.00274143 -0.235188; -0.18943 -0.0495296 0.0286798 -0.122821 -0.0945727 0.161276 0.760025 -0.48028 -0.154291 -0.280515; -0.043641 -0.0112851 0.0065136 -0.0277327 -0.0211046 0.035099 0.137464 -0.0191735 0.985868 -0.0654174; -0.267163 -0.0951699 0.0616421 -0.336543 -0.589512 -0.568628 -0.19337 0.00599262 -0.00844615 -0.30683; -0.241711 -0.0734177 0.0446225 -0.210056 -0.202759 0.769352 -0.400141 0.0104463 -0.0141057 -0.310864; -0.225279 -0.0974059 0.069736 -0.5238 0.750884 -0.177522 -0.103614 0.00339068 -0.00485436 -0.233281; 0.700322 0.0558425 -0.0268721 0.0880346 0.0458281 -0.045882 -0.0492416 0.00181551 -0.00270118 -0.700941])
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in bisect(::Arrowhead.SymArrow{Float64}, ::Char) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:557
 in aheig(::Arrowhead.SymArrow{Float64}, ::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:341
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:528
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
Remedy 3 
ERROR: LoadError: MethodError: Cannot `convert` an object of type Array{Float64,1} to an object of type Float64
This may have arisen from a call to the constructor Float64(...),
since type constructors fall back to convert methods.
 in macro expansion at ./multidimensional.jl:371 [inlined]
 in macro expansion at ./cartesian.jl:62 [inlined]
 in macro expansion at ./multidimensional.jl:368 [inlined]
 in _unsafe_getindex! at ./multidimensional.jl:361 [inlined]
 in macro expansion at ./multidimensional.jl:319 [inlined]
 in _unsafe_getindex(::Base.LinearFast, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Int64,1}) at ./multidimensional.jl:312
 in aheigall(::Arrowhead.SymArrow{Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Arrowhead/src/arrowhead3.jl:540
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl, in expression starting on line 229
==============================[ ERROR: Arrowhead ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Arrowhead/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Arrowhead had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
