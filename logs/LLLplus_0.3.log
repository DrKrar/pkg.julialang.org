>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.3.11
Commit 483dbf5* (2015-07-27 06:18 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i7-4960HQ CPU @ 2.60GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
elapsed time: 1.361507016 seconds (2432107208 bytes allocated, 34.06% gc time)
elapsed time: 1.264938807 seconds (2427242224 bytes allocated, 34.99% gc time)

Testing LLL on 10x10 complex matrix...
elapsed time: 0.745929942 seconds (55611032 bytes allocated, 1.73% gc time)
elapsed time: 0.000304713 seconds (220224 bytes allocated)
Testing VBLAST on same 10x10 complex matrix...
elapsed time: 0.484921315 seconds (37794980 bytes allocated, 3.70% gc time)
elapsed time: 0.000153947 seconds (149720 bytes allocated)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
elapsed time: 0.5704879 seconds (188914864 bytes allocated, 9.73% gc time)
elapsed time: 0.208206996 seconds (167993056 bytes allocated, 21.00% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
elapsed time: 0.060581808 seconds (106292596 bytes allocated, 44.03% gc time)
max col-norm of lll-reduced basis is 30.0
elapsed time: 4.583434716 seconds (4248938044 bytes allocated, 21.94% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
