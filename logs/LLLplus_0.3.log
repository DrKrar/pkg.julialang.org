>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.3.12
Commit 80aa779 (2015-10-26 12:41 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
elapsed time: 3.457331282 seconds (3689915764 bytes allocated, 48.68% gc time)
elapsed time: 3.892278289 seconds (3683140184 bytes allocated, 52.08% gc time)

Testing LLL on 10x10 complex matrix...
elapsed time: 1.783974586 seconds (55852800 bytes allocated, 1.84% gc time)
elapsed time: 0.000521221 seconds (127448 bytes allocated)
Testing VBLAST on same 10x10 complex matrix...
elapsed time: 0.902968595 seconds (37759124 bytes allocated, 2.54% gc time)
elapsed time: 0.00749032 seconds (149720 bytes allocated)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
elapsed time: 0.996458789 seconds (189041404 bytes allocated, 12.34% gc time)
elapsed time: 0.326460444 seconds (167993056 bytes allocated, 25.28% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
elapsed time: 0.100131904 seconds (106292596 bytes allocated, 52.37% gc time)
max col-norm of lll-reduced basis is 30.0
elapsed time: 9.650741191 seconds (4247362140 bytes allocated, 25.86% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
