>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.3.11
Commit 483dbf5* (2015-07-27 06:18 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
elapsed time: 1.777970996 seconds (2320904920 bytes allocated, 38.94% gc time)
elapsed time: 1.660376181 seconds (2316039936 bytes allocated, 40.52% gc time)

Testing LLL on 10x10 complex matrix...
elapsed time: 1.062702468 seconds (55640416 bytes allocated, 1.44% gc time)
elapsed time: 0.000376008 seconds (247600 bytes allocated)
Testing VBLAST on same 10x10 complex matrix...
elapsed time: 0.689369108 seconds (37758372 bytes allocated, 2.29% gc time)
elapsed time: 0.000158662 seconds (149720 bytes allocated)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
elapsed time: 0.831604131 seconds (189045372 bytes allocated, 8.58% gc time)
elapsed time: 0.371966289 seconds (167993056 bytes allocated, 19.38% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
elapsed time: 0.094659643 seconds (106292596 bytes allocated, 60.24% gc time)
max col-norm of lll-reduced basis is 30.0
elapsed time: 6.366224592 seconds (4192060108 bytes allocated, 22.93% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
