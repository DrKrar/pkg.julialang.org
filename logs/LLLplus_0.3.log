>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.3.10
Commit c8ceeef* (2015-06-24 13:54 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
elapsed time: 2.23249304 seconds (1667431184 bytes allocated, 29.90% gc time)
elapsed time: 1.709614008 seconds (1662551976 bytes allocated, 32.91% gc time)

Testing LLL on 10x10 complex matrix...
elapsed time: 1.270676416 seconds (55579384 bytes allocated, 2.08% gc time)
elapsed time: 0.000579808 seconds (171856 bytes allocated)
Testing VBLAST on same 10x10 complex matrix...
elapsed time: 0.926627254 seconds (37758708 bytes allocated, 2.67% gc time)
elapsed time: 0.000286693 seconds (149720 bytes allocated)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
elapsed time: 0.993316365 seconds (188991212 bytes allocated, 11.60% gc time)
elapsed time: 0.391070306 seconds (167993056 bytes allocated, 18.29% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
elapsed time: 0.11975235 seconds (106292596 bytes allocated, 46.09% gc time)
max col-norm of lll-reduced basis is 30.0
elapsed time: 8.699915311 seconds (4248970744 bytes allocated, 23.78% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
