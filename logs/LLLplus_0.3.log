>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.3.12
Commit 80aa779 (2015-10-26 12:41 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
elapsed time: 2.320820995 seconds (1832422124 bytes allocated, 41.56% gc time)
elapsed time: 1.98608413 seconds (1827769520 bytes allocated, 44.26% gc time)

Testing LLL on 10x10 complex matrix...
elapsed time: 1.672025142 seconds (55700420 bytes allocated, 1.88% gc time)
elapsed time: 0.000749495 seconds (205872 bytes allocated)
Testing VBLAST on same 10x10 complex matrix...
elapsed time: 0.644157258 seconds (37800372 bytes allocated, 3.85% gc time)
elapsed time: 0.000369156 seconds (149720 bytes allocated)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
elapsed time: 0.931422768 seconds (188917840 bytes allocated, 11.80% gc time)
elapsed time: 0.382670804 seconds (167993056 bytes allocated, 21.52% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
elapsed time: 0.121821382 seconds (106292596 bytes allocated, 50.99% gc time)
max col-norm of lll-reduced basis is 30.0
elapsed time: 8.861671165 seconds (4247550868 bytes allocated, 26.06% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
