>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.3.12
Commit 80aa779 (2015-10-26 12:41 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
elapsed time: 2.880625975 seconds (3413226572 bytes allocated, 48.38% gc time)
elapsed time: 2.700318351 seconds (3408559816 bytes allocated, 49.12% gc time)

Testing LLL on 10x10 complex matrix...
elapsed time: 1.303481125 seconds (55049072 bytes allocated, 1.60% gc time)
elapsed time: 0.000844852 seconds (264240 bytes allocated)
Testing VBLAST on same 10x10 complex matrix...
elapsed time: 0.57916453 seconds (37796020 bytes allocated, 3.43% gc time)
elapsed time: 0.000235913 seconds (149720 bytes allocated)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
elapsed time: 0.984333079 seconds (188917840 bytes allocated, 8.46% gc time)
elapsed time: 0.383256909 seconds (167993056 bytes allocated, 18.47% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
elapsed time: 0.070961837 seconds (106292596 bytes allocated, 48.31% gc time)
max col-norm of lll-reduced basis is 30.0
elapsed time: 6.407658652 seconds (4247587092 bytes allocated, 26.79% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
