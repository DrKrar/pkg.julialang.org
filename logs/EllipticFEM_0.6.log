>>> 'Pkg.add("EllipticFEM")' log
INFO: Cloning cache of EllipticFEM from https://github.com/gerhardtulzer/EllipticFEM.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ColorTypes v0.3.4
INFO: Installing Colors v0.7.3
INFO: Installing Conda v0.5.1
INFO: Installing EllipticFEM v0.0.1
INFO: Installing FixedPointNumbers v0.3.3
INFO: Installing LaTeXStrings v0.2.0
INFO: Installing MacroTools v0.3.4
INFO: Installing PyCall v1.10.0
INFO: Installing PyPlot v2.3.1
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .........
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.12.0          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.12) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.6/PyCall/deps/PYTHON has not changed
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of EllipticFEM
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("EllipticFEM")' log
Julia Version 0.6.0-dev.2635
Commit dc2459d (2017-02-13 07:46 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2038.5859375 MB free)
Uptime: 24830.0 sec
Load Avg:  0.9765625  0.97705078125  0.79638671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1009631 s       6588 s     108345 s    1118184 s         46 s
#2  3500 MHz     357758 s         77 s      67845 s    1989987 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - EllipticFEM                   0.0.1
 - JSON                          0.8.3
13 additional packages:
 - BinDeps                       0.4.5
 - ColorTypes                    0.3.4
 - Colors                        0.7.3
 - Compat                        0.18.0
 - Conda                         0.5.1
 - FixedPointNumbers             0.3.3
 - LaTeXStrings                  0.2.0
 - MacroTools                    0.3.4
 - PyCall                        1.10.0
 - PyPlot                        2.3.1
 - Reexport                      0.0.3
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing EllipticFEM
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:62
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] assemble(::EllipticFEM.Mesh, ::Float64, ::Function, ::Array{Any,2}) at /home/vagrant/.julia/v0.6/EllipticFEM/src/EllipticFEM.jl:113
 [4] solve(::String, ::Float64, ::Function, ::Array{Any,2}) at /home/vagrant/.julia/v0.6/EllipticFEM/src/EllipticFEM.jl:219
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:300
 [8] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/EllipticFEM/test/runtests.jl, in expression starting on line 10
ERROR: LoadError: DimensionMismatch("tried to assign 4268×4268 array to 1×4268 destination")
Stacktrace:
 [1] throw_setindex_mismatch(::Array{Float64,2}, ::Tuple{Int64,Int64}) at ./operators.jl:1003
 [2] setindex_shape_check(::Array{Float64,2}, ::Int64, ::Int64) at ./operators.jl:1060
 [3] macro expansion at ./multidimensional.jl:456 [inlined]
 [4] _unsafe_setindex!(::Base.LinearFast, ::Array{Float64,2}, ::Array{Float64,2}, ::Int64, ::Base.Slice{Base.OneTo{Int64}}) at ./multidimensional.jl:451
 [5] macro expansion at ./multidimensional.jl:443 [inlined]
 [6] _setindex! at ./multidimensional.jl:439 [inlined]
 [7] setindex! at ./abstractarray.jl:871 [inlined]
 [8] assemble(::EllipticFEM.Mesh, ::Float64, ::Function, ::Array{Any,2}) at /home/vagrant/.julia/v0.6/EllipticFEM/src/EllipticFEM.jl:115
 [9] solve(::String, ::Float64, ::Function, ::Array{Any,2}) at /home/vagrant/.julia/v0.6/EllipticFEM/src/EllipticFEM.jl:219
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:300
 [13] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/EllipticFEM/test/runtests.jl, in expression starting on line 10
=============================[ ERROR: EllipticFEM ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/EllipticFEM/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: EllipticFEM had test errors

>>> End of log
