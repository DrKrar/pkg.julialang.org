>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.6.0-pre.alpha.140
Commit 58ed252 (2017-03-14 00:06 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (677.20703125 MB free)
Uptime: 24768.0 sec
Load Avg:  0.96142578125  0.96435546875  0.87890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1388703 s        962 s     148628 s     657642 s         72 s
#2  3500 MHz     670516 s       7236 s      88780 s    1607389 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:383 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.6/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{DifferentialDynamicProgramming.QPTrace}, ::Int64) at ./deprecated.jl:51
 [3] #boxQP#1(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Function, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:53
 [4] (::DifferentialDynamicProgramming.#kw##boxQP)(::Array{Any,1}, ::DifferentialDynamicProgramming.#boxQP, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] demoQP() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:198
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 6
WARNING: min{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use min.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] min(::Array{Float64,2}, ::Array{Float64,1}) at ./deprecated.jl:51
 [3] #boxQP#1(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Function, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:59
 [4] (::DifferentialDynamicProgramming.#kw##boxQP)(::Array{Any,1}, ::DifferentialDynamicProgramming.#boxQP, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] demoQP() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:198
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 6
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isfinite(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #boxQP#1(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Function, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:61
 [4] (::DifferentialDynamicProgramming.#kw##boxQP)(::Array{Any,1}, ::DifferentialDynamicProgramming.#boxQP, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] demoQP() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:198
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 6
==========
Starting box-QP, dimension 500, initial value: 67533.619   
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] #boxQP#1(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Function, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:96
 [4] (::DifferentialDynamicProgramming.#kw##boxQP)(::Array{Any,1}, ::DifferentialDynamicProgramming.#boxQP, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] demoQP() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:198
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 6
WARNING: min{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use min.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] min(::Array{Float64,2}, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] #boxQP#1(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Function, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:141
 [4] (::DifferentialDynamicProgramming.#kw##boxQP)(::Array{Any,1}, ::DifferentialDynamicProgramming.#boxQP, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] demoQP() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:198
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 6
WARNING: min{T1 <: Real, T2 <: Real}(x::AbstractArray{T1}, y::AbstractArray{T2}) is deprecated, use min.(x, y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] min(::Array{Float64,2}, ::Array{Float64,2}) at ./deprecated.jl:51
 [3] #boxQP#1(::Int64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Function, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:146
 [4] (::DifferentialDynamicProgramming.#kw##boxQP)(::Array{Any,1}, ::DifferentialDynamicProgramming.#boxQP, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] demoQP() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/boxQP.jl:198
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:305
 [10] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 6
RESULT: Gradient norm smaller than tolerance.
iterations 15  gradient 3.30337e-12  final value -28.7721      factorizations 14
  2.943066 seconds (1.68 M allocations: 133.778 MiB, 1.15% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,1}) at ./deprecated.jl:51
 [3] (::DifferentialDynamicProgramming.#lin_dyn_f#38)(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:54
 [4] forward_pass(::Array{Float64,1}, ::Array{Float64,2}, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Int64, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:413
 [5] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:164
 [6] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [9] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:166
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7

---------- begin iLQG ----------
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,2}) at ./deprecated.jl:51
 [3] (::DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}})(::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:47
 [4] (::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}})(::Array{Float64,2}, ::Array{Float64,2}, ::UnitRange{Int64}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [5] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:215
 [6] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [7] macro expansion at ./util.jl:237 [inlined]
 [8] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [9] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [10] include_from_node1(::String) at ./loading.jl:539
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:305
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: Matrix{T}() is deprecated, use Matrix{T}(0, 0) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] zero_arg_matrix_constructor(::String) at ./deprecated.jl:1241
 [3] Type at ./deprecated.jl:1244 [inlined]
 [4] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:226
 [5] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [6] macro expansion at ./util.jl:237 [inlined]
 [7] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [8] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] process_options(::Base.JLOptions) at ./client.jl:305
 [12] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.8006     16.6        16.6        0.0958      0.0         
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
2           32.2245     9.36        9.36        0.0886      -0.2        
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
3           22.8693     5.21        5.21        0.0996      -0.6        
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
4           17.6575     2.57        2.57        0.117       -1.2        
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
5           15.087      1.41        1.41        0.176       -2.0        
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
6           13.672      0.378       0.378       0.192       -3.1        
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
7           13.2943     0.0167      0.0167      0.0576      -4.3        
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
8           13.2776     1.73e-05    1.73e-05    0.0021      -5.7        
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,2}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:251
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7

SUCCESS: gradient norm < tolGrad
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,1}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:363
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:363
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,1}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:365
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:365
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] isnan(::Array{Float64,1}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:367
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
WARNING: !(B::BitArray) is deprecated, use .!(B) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] !(::BitArray{1}) at ./deprecated.jl:51
 [3] #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Base.#-, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##33#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40{Array{Float64,2},Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_f#38}, ::DifferentialDynamicProgramming.#fT#41{Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_fT#39}, ::DifferentialDynamicProgramming.#df#42{Array{Float64,2},Array{Float64,2},DifferentialDynamicProgramming.#lin_dyn_df#37{Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2},Array{Float64,2}}}, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/iLQG.jl:367
 [4] (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 [5] macro expansion at ./util.jl:237 [inlined]
 [6] #demo_linear#32(::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:67
 [7] demo_linear() at /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/src/demo_linear.jl:16
 [8] include_from_node1(::String) at ./loading.jl:539
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:305
 [11] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7

 iterations:   9  

            final cost:   13.27755    

            final grad:   3.378823e-06

            final lambda: 4.4841551e-08

            time / iter:  635   ms

            total time:   5.71  seconds, of which

            derivs:     2.8 %

            back pass:  23.8%

            fwd pass:   46.9%

            other:      26.5% (graphics etc.)
 =========== end iLQG ===========
 14.509161 seconds (8.02 M allocations: 605.035 MiB, 2.30% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
