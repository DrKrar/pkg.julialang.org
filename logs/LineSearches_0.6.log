>>> 'Pkg.add("LineSearches")' log
INFO: Installing LineSearches v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LineSearches
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LineSearches")' log
Julia Version 0.6.0-dev.2788
Commit 8341444 (2017-02-12 23:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2218.0625 MB free)
Uptime: 46245.0 sec
Load Avg:  0.96337890625  1.16357421875  1.2880859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2135702 s        756 s     207232 s    1830959 s        117 s
#2  3500 MHz     743650 s       6120 s     123517 s    3624600 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.3
 - LineSearches                  0.1.5
5 additional packages:
 - Compat                        0.17.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.2
 - DocOpt                        0.2.0
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
INFO: Computing test dependencies for LineSearches...
INFO: Installing Calculus v0.2.0
INFO: Installing DiffBase v0.0.4
INFO: Installing ForwardDiff v0.3.4
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.5
INFO: Installing PositiveFactorizations v0.0.4
INFO: Testing LineSearches
Running tests:

 * alphacalc.jl
Testing LineSearches.basic!
Testing LineSearches.hagerzhang!
Testing LineSearches.strongwolfe!
Testing LineSearches.morethuente!
Testing LineSearches.backtracking!
Testing LineSearches.bt2!
Testing LineSearches.bt3!

 * optim.jl

WARNING: deprecated syntax "abstract Optimizer" at /home/vagrant/.julia/v0.6/Optim/src/types.jl:2.
Use "abstract type Optimizer end" instead.

WARNING: deprecated syntax "typealias OptimizationTrace{T} Vector{OptimizationState{T}}" at /home/vagrant/.julia/v0.6/Optim/src/types.jl:58.
Use "OptimizationTrace{T} = Vector{OptimizationState{T}}" instead.

WARNING: deprecated syntax "abstract OptimizationResults" at /home/vagrant/.julia/v0.6/Optim/src/types.jl:60.
Use "abstract type OptimizationResults end" instead.

WARNING: deprecated syntax "abstract Simplexer" at /home/vagrant/.julia/v0.6/Optim/src/nelder_mead.jl:2.
Use "abstract type Simplexer end" instead.

WARNING: deprecated syntax "abstract NMParameters" at /home/vagrant/.julia/v0.6/Optim/src/nelder_mead.jl:19.
Use "abstract type NMParameters end" instead.

WARNING: deprecated syntax "typealias FirstOrderSolver Union{AcceleratedGradientDescent,ConjugateGradient,GradientDescent,MomentumGradientDescent,BFGS,LBFGS}" at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:3.
Use "const FirstOrderSolver = Union{AcceleratedGradientDescent,ConjugateGradient,GradientDescent,MomentumGradientDescent,BFGS,LBFGS}" instead.

WARNING: deprecated syntax "typealias SecondOrderSolver Union{Newton,NewtonTrustRegion}" at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:4.
Use "const SecondOrderSolver = Union{Newton,NewtonTrustRegion}" instead.

Testing LineSearches.hagerzhang!
WARNING: Matrix{T}() is deprecated, use Matrix{T}(0, 0) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] zero_arg_matrix_constructor(::String) at ./deprecated.jl:1230
 [3] Type at ./deprecated.jl:1233 [inlined]
 [4] initial_state(::Optim.Newton, ::Optim.Options{Void}, ::Optim.TwiceDifferentiable, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Optim/src/newton.jl:39
 [5] optimize(::Optim.TwiceDifferentiable, ::Array{Float64,1}, ::Optim.Newton, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:172
 [6] optimize(::Optim.UnconstrainedProblems.#exponential, ::Array{Float64,1}, ::Optim.Newton, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:116
 [7] macro expansion at /home/vagrant/.julia/v0.6/LineSearches/test/optim.jl:16 [inlined]
 [8] anonymous at ./<missing>:?
 [9] include_from_node1(::String) at ./loading.jl:539
 [10] include(::String) at ./sysimg.jl:14
 [11] macro expansion at /home/vagrant/.julia/v0.6/LineSearches/test/runtests.jl:17 [inlined]
 [12] anonymous at ./<missing>:?
 [13] include_from_node1(::String) at ./loading.jl:539
 [14] include(::String) at ./sysimg.jl:14
 [15] process_options(::Base.JLOptions) at ./client.jl:305
 [16] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/LineSearches/test/optim.jl, in expression starting on line 4
Exponential:	iterations = 6	f_calls = 26	g_calls = 26
Rosenbrock:	iterations = 14	f_calls = 58	g_calls = 58
Parabola:	iterations = 1	f_calls = 5	g_calls = 5
Hosaki:	iterations = 4	f_calls = 15	g_calls = 15
Large Polynomial:	iterations = 1	f_calls = 5	g_calls = 5
Polynomial:	iterations = 2	f_calls = 9	g_calls = 9
Powell:	iterations = 10	f_calls = 41	g_calls = 41
Himmelblau:	iterations = 5	f_calls = 19	g_calls = 19

Testing LineSearches.strongwolfe!
Exponential:	iterations = 15	f_calls = 31	g_calls = 31
Rosenbrock:	iterations = 14	f_calls = 38	g_calls = 36
Parabola:	iterations = 1	f_calls = 3	g_calls = 3
Hosaki:	iterations = 4	f_calls = 12	g_calls = 12
Large Polynomial:	iterations = 1	f_calls = 3	g_calls = 3
Polynomial:	iterations = 28	f_calls = 57	g_calls = 57
Powell:	iterations = 20	f_calls = 41	g_calls = 41
Himmelblau:	iterations = 5	f_calls = 20	g_calls = 18

Testing LineSearches.morethuente!
Exponential:	iterations = 15	f_calls = 31	g_calls = 31
Rosenbrock:	iterations = 14	f_calls = 31	g_calls = 31
Parabola:	iterations = 1	f_calls = 3	g_calls = 3
Hosaki:	iterations = 5	f_calls = 12	g_calls = 12
Large Polynomial:	iterations = 1	f_calls = 3	g_calls = 3
Polynomial:	iterations = 28	f_calls = 57	g_calls = 57
Powell:	iterations = 20	f_calls = 41	g_calls = 41
Himmelblau:	iterations = 6	f_calls = 14	g_calls = 14

Testing LineSearches.backtracking!
Exponential:	iterations = 15	f_calls = 31	g_calls = 16
Rosenbrock:	iterations = 14	f_calls = 33	g_calls = 15
Parabola:	iterations = 1	f_calls = 3	g_calls = 2
Hosaki:	iterations = 5	f_calls = 11	g_calls = 6
Large Polynomial:	iterations = 1	f_calls = 3	g_calls = 2
Polynomial:	iterations = 28	f_calls = 57	g_calls = 29
Powell:	iterations = 20	f_calls = 41	g_calls = 21
Himmelblau:	iterations = 6	f_calls = 14	g_calls = 7

Testing LineSearches.bt2!
Exponential:	iterations = 15	f_calls = 31	g_calls = 16
Rosenbrock:	iterations = 14	f_calls = 33	g_calls = 15
Parabola:	iterations = 1	f_calls = 3	g_calls = 2
Hosaki:	iterations = 5	f_calls = 11	g_calls = 6
Large Polynomial:	iterations = 1	f_calls = 3	g_calls = 2
Polynomial:	iterations = 28	f_calls = 57	g_calls = 29
Powell:	iterations = 20	f_calls = 41	g_calls = 21
Himmelblau:	iterations = 6	f_calls = 14	g_calls = 7

Testing LineSearches.bt3!
Exponential:	iterations = 15	f_calls = 31	g_calls = 16
Rosenbrock:	iterations = 14	f_calls = 33	g_calls = 15
Parabola:	iterations = 1	f_calls = 3	g_calls = 2
Hosaki:	iterations = 5	f_calls = 11	g_calls = 6
Large Polynomial:	iterations = 1	f_calls = 3	g_calls = 2
Polynomial:	iterations = 28	f_calls = 57	g_calls = 29
Powell:	iterations = 20	f_calls = 41	g_calls = 21
Himmelblau:	iterations = 6	f_calls = 14	g_calls = 7

 * backtracking.jl
INFO: LineSearches tests passed
INFO: Removing Calculus v0.2.0
INFO: Removing DiffBase v0.0.4
INFO: Removing ForwardDiff v0.3.4
INFO: Removing NaNMath v0.2.2
INFO: Removing Optim v0.7.5
INFO: Removing PositiveFactorizations v0.0.4

>>> End of log
