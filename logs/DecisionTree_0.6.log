>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Cloning cache of ScikitLearnBase from https://github.com/cstjean/ScikitLearnBase.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DecisionTree
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (609.27734375 MB free)
Uptime: 17668.0 sec
Load Avg:  1.21435546875  1.13134765625  1.24365234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     962081 s         93 s     102480 s     496265 s         29 s
#2  3500 MHz     588419 s         54 s      67188 s     997556 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - ScikitLearnBase               0.1.1
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0   2    0   0  0
 0  56   13   0  0
 0  15  165  14  0
 0   0   24  42  0
 0   0    0   2  0
Accuracy: 0.7897897897897898
Kappa:    0.6290343115411546

Fold 2
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 41   36   0
  6  170  13
  0   19  48
Accuracy: 0.7777777777777778
Kappa:    0.5937551518348776

Fold 3
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 1  45   12   0  0
 0  12  177  18  0
 0   0   14  51  2
 0   0    0   0  0
Accuracy: 0.8198198198198198
Kappa:    0.671813403416557

Mean Accuracy: 0.7957957957957958

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 0  44   18   0  0
 0   3  185   3  0
 0   0   22  56  0
 0   0    0   1  0
Accuracy: 0.8558558558558559
Kappa:    0.7347406153539779

Fold 2
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 0  55   20   0  0
 0   5  178  13  0
 0   0   22  38  0
 0   0    0   1  0
Accuracy: 0.8138138138138138
Kappa:    0.6563238672304158

Fold 3
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 0   1    0   0
 0  42   25   0
 0   4  197   1
 0   0   23  40
Accuracy: 0.8378378378378378
Kappa:    0.6769719941796755

Mean Accuracy: 0.8358358358358359

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0  0    1  0  0
 0  5   75  0  0
 0  0  189  0  0
 0  0   62  0  0
 0  0    1  0  0
Accuracy: 0.5825825825825826
Kappa:    0.04556982906159142

Fold 2
Classes:  Any[-1,0,1]
Matrix:   3×3 Array{Int64,2}:
 0   67  0
 0  200  0
 0   66  0
Accuracy: 0.6006006006006006
Kappa:    0.0

Fold 3
Classes:  Any[-2,-1,0,1,2]
Matrix:   5×5 Array{Int64,2}:
 0  2    0  0  0
 0  4   53  0  0
 0  1  200  0  0
 0  0   71  1  0
 0  0    1  0  0
Accuracy: 0.6156156156156156
Kappa:    0.054753509413878104

Mean Accuracy: 0.5995995995995996
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     1.8510658864950897
Correlation Coeff:      0.9176095982819205
Coeff of Determination: 0.8403523627735945

Fold 2
Mean Squared Error:     2.111813869374038
Correlation Coeff:      0.9032852667771072
Coeff of Determination: 0.8040438732688322

Fold 3
Mean Squared Error:     1.905203888631357
Correlation Coeff:      0.9066858165416979
Coeff of Determination: 0.8177672954497267

Mean Coeff of Determination: 0.8207211771640511

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     1.3700896714707405
Correlation Coeff:      0.9579440583509008
Coeff of Determination: 0.8832469932048603

Fold 2
Mean Squared Error:     0.9662431817887203
Correlation Coeff:      0.963822702589265
Coeff of Determination: 0.9123745054031875

Fold 3
Mean Squared Error:     0.8141762112622749
Correlation Coeff:      0.9654197006005317
Coeff of Determination: 0.9184485696053079

Mean Coeff of Determination: 0.9046900227377853
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
