>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Cloning cache of ScikitLearnBase from https://github.com/cstjean/ScikitLearnBase.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DecisionTree
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.6.0-dev.739
Commit 361161b (2016-09-22 21:53 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (522.81640625 MB free)
Uptime: 17588.0 sec
Load Avg:  0.84033203125  0.927734375  1.08154296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1005610 s        137 s     129625 s     406459 s         54 s
#2  3500 MHz     573151 s       6344 s      76368 s     991370 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - ScikitLearnBase               0.1.1
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 5    3    0  0
 1  141   18  0
 0   11  149  0
 0    0    4  1
Accuracy: 0.8888888888888888
Kappa:    0.7900163610334717

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 11    0    0  0
  5  135   13  0
  0   13  153  1
  0    0    0  2
Accuracy: 0.9039039039039038
Kappa:    0.8234036558890305

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 7    0    0  0
 0  148    7  0
 0   15  148  0
 0    0    5  3
Accuracy: 0.918918918918919
Kappa:    0.848817070504952

Mean Accuracy: 0.9039039039039038

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 5    6    0  0
 1  134   10  0
 0   18  154  0
 0    0    4  1
Accuracy: 0.8828828828828829
Kappa:    0.7799261167220226

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 4    2    0  0
 1  154    6  0
 0   20  139  0
 0    0    6  1
Accuracy: 0.8948948948948949
Kappa:    0.800793067496197

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 2    7    0  0
 0  149   13  0
 0   15  144  0
 0    0    2  1
Accuracy: 0.8888888888888888
Kappa:    0.7871469292562839

Mean Accuracy: 0.8888888888888888

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0   13    0  0
 0  130   14  0
 0   24  145  0
 0    0    7  0
Accuracy: 0.8258258258258259
Kappa:    0.6714579754027252

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0    5    0  0
 0  137   22  0
 0   17  148  0
 0    0    4  0
Accuracy: 0.8558558558558559
Kappa:    0.719076241695666

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0    8    0  0
 0  153   12  0
 0   31  125  0
 0    0    4  0
Accuracy: 0.8348348348348348
Kappa:    0.6798804467516123

Mean Accuracy: 0.8388388388388388
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     2.7701259639982903
Correlation Coeff:      0.8653420750141289
Coeff of Determination: 0.7440132802106894

Fold 2
Mean Squared Error:     2.3784840633133038
Correlation Coeff:      0.8788252426879241
Coeff of Determination: 0.7677036119460471

Fold 3
Mean Squared Error:     2.9050287266010386
Correlation Coeff:      0.8624399473870142
Coeff of Determination: 0.7285371274625567

Mean Coeff of Determination: 0.7467513398730977

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     1.4644650621333122
Correlation Coeff:      0.9460162264478875
Coeff of Determination: 0.8619337904107303

Fold 2
Mean Squared Error:     1.527516178412041
Correlation Coeff:      0.9404422243588565
Coeff of Determination: 0.8570049488329818

Fold 3
Mean Squared Error:     1.3252395584968595
Correlation Coeff:      0.9499164850499153
Coeff of Determination: 0.8726281146160098

Mean Coeff of Determination: 0.8638556179532406
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
