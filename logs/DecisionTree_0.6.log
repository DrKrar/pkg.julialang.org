>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Cloning cache of ScikitLearnBase from https://github.com/cstjean/ScikitLearnBase.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DecisionTree
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (589.93359375 MB free)
Uptime: 19265.0 sec
Load Avg:  0.9931640625  0.83837890625  0.74658203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1006932 s        945 s      94357 s     609742 s         32 s
#2  3499 MHz     531387 s       4031 s      64765 s    1230612 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.7.1
2 additional packages:
 - Compat                        0.9.2
 - ScikitLearnBase               0.1.1
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-3,-2,-1,0,1]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 0  37   23   0  0
 0  10  179  15  0
 0   0   19  45  2
 0   0    0   2  0
Accuracy: 0.7837837837837838
Kappa:    0.5924459025310645

Fold 2
Classes:  Any[-3,-2,-1,0,1]
Matrix:   5×5 Array{Int64,2}:
 1   0    0   0  0
 1  38   16   0  0
 0  13  182  17  0
 0   0   15  47  0
 0   0    0   2  1
Accuracy: 0.8078078078078078
Kappa:    0.6377420067651408

Fold 3
Classes:  Any[-3,-2,-1,0,1]
Matrix:   5×5 Array{Int64,2}:
 0   1    0   0  0
 1  50   16   0  0
 0  14  176  11  0
 0   0   20  42  1
 0   0    0   1  0
Accuracy: 0.8048048048048048
Kappa:    0.6423378168478799

Mean Accuracy: 0.7987987987987988

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-3,-2,-1,0]
Matrix:   4×4 Array{Int64,2}:
 0   1    0   0
 0  45   17   0
 0   4  198   7
 0   0   12  49
Accuracy: 0.8768768768768769
Kappa:    0.7601791673985595

Fold 2
Classes:  Any[-3,-2,-1,0,1]
Matrix:   5×5 Array{Int64,2}:
 0   2    0   0  0
 0  51   11   0  0
 0   8  187   6  0
 0   0   17  48  1
 0   0    0   2  0
Accuracy: 0.8588588588588588
Kappa:    0.739990696747184

Fold 3
Classes:  Any[-2,-1,0,1]
Matrix:   4×4 Array{Int64,2}:
 37   21   0  0
  4  193   9  0
  0   19  46  0
  0    0   4  0
Accuracy: 0.8288288288288288
Kappa:    0.6651081548396203

Mean Accuracy: 0.8548548548548549

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-3,-2,-1,0,1]
Matrix:   5×5 Array{Int64,2}:
 0  0    1  0  0
 0  0   65  0  0
 0  0  193  0  0
 0  0   73  0  0
 0  0    1  0  0
Accuracy: 0.5795795795795796
Kappa:    0.0

Fold 2
Classes:  Any[-3,-2,-1,0,1]
Matrix:   5×5 Array{Int64,2}:
 0  1    1  0  0
 0  3   52  0  0
 0  2  210  0  0
 0  0   59  0  0
 0  0    5  0  0
Accuracy: 0.6396396396396397
Kappa:    0.03092033466715187

Fold 3
Classes:  Any[-2,-1,0]
Matrix:   3×3 Array{Int64,2}:
 1   61  0
 0  211  0
 0   60  0
Accuracy: 0.6366366366366366
Kappa:    0.011820968730839921

Mean Accuracy: 0.6186186186186187
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     2.3232967581376838
Correlation Coeff:      0.8966442981414003
Coeff of Determination: 0.7998925890574264

Fold 2
Mean Squared Error:     2.6622220631771527
Correlation Coeff:      0.8983311900140628
Coeff of Determination: 0.8049462114872892

Fold 3
Mean Squared Error:     2.2055508577792633
Correlation Coeff:      0.9085012464485726
Coeff of Determination: 0.8144956233450971

Mean Coeff of Determination: 0.8064448079632709

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     1.6519220187680945
Correlation Coeff:      0.9393361072840227
Coeff of Determination: 0.8654620112505116

Fold 2
Mean Squared Error:     1.540413362475878
Correlation Coeff:      0.9506288594796996
Coeff of Determination: 0.8728548801426215

Fold 3
Mean Squared Error:     1.4511310297376
Correlation Coeff:      0.9542360850320971
Coeff of Determination: 0.8865233263745231

Mean Coeff of Determination: 0.8749467392558854
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
