>>> 'Pkg.add("DecisionTree")' log
INFO: Cloning cache of DecisionTree from https://github.com/bensadeghi/DecisionTree.jl.git
INFO: Cloning cache of ScikitLearnBase from https://github.com/cstjean/ScikitLearnBase.jl.git
INFO: Installing DecisionTree v0.4.2
INFO: Installing ScikitLearnBase v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of DecisionTree
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DecisionTree")' log
Julia Version 0.6.0-dev.718
Commit 9f50a2c (2016-09-20 15:35 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (547.43359375 MB free)
Uptime: 17801.0 sec
Load Avg:  1.08935546875  0.91748046875  0.61328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     943417 s       3200 s     101683 s     557701 s         40 s
#2  3498 MHz     463979 s       3892 s      68327 s    1178962 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DecisionTree                  0.4.2
 - JSON                          0.7.0
2 additional packages:
 - Compat                        0.9.2
 - ScikitLearnBase               0.1.1
INFO: Testing DecisionTree

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
Running tests...
Test: classification_rand.jl

##### nfoldCV Classification Tree #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 5    3    0  0
 2  150   15  0
 0   14  132  5
 0    0    0  7
Accuracy: 0.8828828828828829
Kappa:    0.7859156322634884

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 5    0    0  0
 1  141   13  0
 0   10  158  1
 0    0    0  4
Accuracy: 0.924924924924925
Kappa:    0.8577773981378662

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 3    5    0  0
 0  143   15  0
 0    6  145  7
 0    0    4  5
Accuracy: 0.8888888888888888
Kappa:    0.7963908581627087

Mean Accuracy: 0.8988988988988988

##### nfoldCV Classification Forest #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 3    7    0  0
 2  161    5  0
 0   11  137  0
 0    0    6  1
Accuracy: 0.9069069069069069
Kappa:    0.8246058175886909

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0    7    0  0
 0  142   10  0
 0   14  156  0
 0    0    4  0
Accuracy: 0.8948948948948949
Kappa:    0.7962875570237534

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 1    3    0  0
 0  150   10  0
 0   25  135  0
 0    0    3  6
Accuracy: 0.8768768768768769
Kappa:    0.7672955974842767

Mean Accuracy: 0.8928928928928929

##### nfoldCV Adaboosted Stumps #####

Fold 1
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0    7    0  0
 0  149   13  0
 0   28  128  0
 0    0    8  0
Accuracy: 0.8318318318318318
Kappa:    0.6775766377924167

Fold 2
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0    3    0  0
 0  142   12  0
 0   31  139  0
 0    0    6  0
Accuracy: 0.8438438438438438
Kappa:    0.6967159996497067

Fold 3
Classes:  Any[-1,0,1,2]
Matrix:   4×4 Array{Int64,2}:
 0   11    0  0
 0  134   30  0
 0   14  138  0
 0    0    6  0
Accuracy: 0.8168168168168168
Kappa:    0.6519660755589823

Mean Accuracy: 0.8308308308308309
==================================================
Test: regression_rand.jl

##### nfoldCV Regression Tree #####

Fold 1
Mean Squared Error:     0.18831410307353064
Correlation Coeff:      0.983310866058286
Coeff of Determination: 0.966078833687922

Fold 2
Mean Squared Error:     0.12261473720503081
Correlation Coeff:      0.9874735478462415
Coeff of Determination: 0.9747578022662762

Fold 3
Mean Squared Error:     0.15284691547218546
Correlation Coeff:      0.9845641851166225
Coeff of Determination: 0.9684247861934977

Mean Coeff of Determination: 0.9697538073825652

##### nfoldCV Regression Forest #####

Fold 1
Mean Squared Error:     0.33421805264723425
Correlation Coeff:      0.9731798442827134
Coeff of Determination: 0.9353753806445382

Fold 2
Mean Squared Error:     0.3645456642032294
Correlation Coeff:      0.9788039640339028
Coeff of Determination: 0.9334492179693983

Fold 3
Mean Squared Error:     0.23740224490086792
Correlation Coeff:      0.9790576608540551
Coeff of Determination: 0.9487073054101166

Mean Coeff of Determination: 0.939177301341351
==================================================
Test: classification_scikitlearn.jl
==================================================
Test: regression_scikitlearn.jl
==================================================
INFO: DecisionTree tests passed

>>> End of log
