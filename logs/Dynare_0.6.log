>>> 'Pkg.add("Dynare")' log
INFO: Cloning cache of Dynare from https://github.com/DynareTeam/Dynare.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing Distances v0.3.2
INFO: Installing Dynare v0.0.1
INFO: Installing ForwardDiff v0.2.5
INFO: Installing NLsolve v0.8.0
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.6.1
INFO: Installing PositiveFactorizations v0.0.3
INFO: Package database updated

>>> 'Pkg.test("Dynare")' log
Julia Version 0.6.0-dev.1378
Commit 1e0e793 (2016-12-03 13:48 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (384.03515625 MB free)
Uptime: 19247.0 sec
Load Avg:  0.9599609375  1.05126953125  1.1044921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1207468 s        120 s     119471 s     399743 s         57 s
#2  3499 MHz     531013 s       6592 s      66732 s    1246872 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Dynare                        0.0.1
 - JSON                          0.8.0
8 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - Distances                     0.3.2
 - ForwardDiff                   0.2.5
 - NLsolve                       0.8.0
 - NaNMath                       0.2.2
 - Optim                         0.6.1
 - PositiveFactorizations        0.0.3
INFO: Testing Dynare
ERROR: LoadError: LoadError: MethodError: no method matching Union(::Type{Expr}, ::Type{Symbol}, ::Type{Number})
Closest candidates are:
  Union{T}(::Any) at sysimg.jl:66
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Dynare/src/Dynare.jl, in expression starting on line 7
while loading /home/vagrant/.julia/v0.6/Dynare/test/runtests.jl, in expression starting on line 1
===============================[ ERROR: Dynare ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Dynare/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Dynare had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
