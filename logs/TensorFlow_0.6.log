>>> 'Pkg.add("TensorFlow")' log
INFO: Cloning cache of TensorFlow from https://github.com/malmaud/TensorFlow.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing BufferedStreams v0.2.0
INFO: Installing Calculus v0.1.15
INFO: Installing Codecs v0.2.0
INFO: Installing Conda v0.3.2
INFO: Installing Distributions v0.11.0
INFO: Installing FileIO v0.1.2
INFO: Installing HDF5 v0.6.6
INFO: Installing Hiccup v0.0.3
INFO: Installing HttpCommon v0.2.6
INFO: Installing HttpParser v0.2.0
INFO: Installing JLD v0.6.4
INFO: Installing Juno v0.2.2
INFO: Installing Lazy v0.11.2
INFO: Installing LegacyStrings v0.1.1
INFO: Installing Libz v0.2.0
INFO: Installing MNIST v0.0.2
INFO: Installing MacroTools v0.3.2
INFO: Installing MbedTLS v0.3.0
INFO: Installing Media v0.2.2
INFO: Installing PDMats v0.5.0
INFO: Installing ProtoBuf v0.2.0
INFO: Installing PyCall v1.7.2
INFO: Installing Requests v0.3.10
INFO: Installing Requires v0.3.0
INFO: Installing Rmath v0.1.3
INFO: Installing SHA v0.2.1
INFO: Installing StatsBase v0.10.0
INFO: Installing StatsFuns v0.3.1
INFO: Installing TensorFlow v0.4.1
INFO: Installing URIParser v0.1.6
INFO: Building Blosc
INFO: Building Rmath
INFO: Building HDF5
INFO: Building HttpParser
INFO: Building MbedTLS
INFO: Building PyCall
INFO: No system-wide Python was found; got the following error:
could not spawn `'' -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('VERSION'))"`: no such file or directory (ENOENT)
using the Python distribution in the Conda package
Using Anaconda API: https://api.anaconda.org
Fetching package metadata ...........
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.11.1          py27_blas_openblas_202  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.12) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: Building TensorFlow
INFO: Building TensorFlow.jl for CPU use only. To enable the GPU, set the TF_USE_GPU environment variable to 1 and rebuild TensorFlow.jl
Archive:  /home/vagrant/.julia/v0.6/TensorFlow/deps/downloads/tensorflow.zip
  inflating: libtensorflow_c.so      
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of TensorFlow
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("TensorFlow")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (302.8828125 MB free)
Uptime: 23538.0 sec
Load Avg:  1.0166015625  1.0107421875  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1272950 s       5323 s     119215 s     685498 s        152 s
#2  3496 MHz     427603 s       1897 s      64309 s    1778266 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.1
 - TensorFlow                    0.4.1
32 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - BufferedStreams               0.2.0
 - Calculus                      0.1.15
 - Codecs                        0.2.0
 - Compat                        0.9.2
 - Conda                         0.3.2
 - Distributions                 0.11.0
 - FileIO                        0.1.2
 - HDF5                          0.6.6
 - Hiccup                        0.0.3
 - HttpCommon                    0.2.6
 - HttpParser                    0.2.0
 - JLD                           0.6.4
 - Juno                          0.2.2
 - Lazy                          0.11.2
 - LegacyStrings                 0.1.1
 - Libz                          0.2.0
 - MNIST                         0.0.2
 - MacroTools                    0.3.2
 - MbedTLS                       0.3.0
 - Media                         0.2.2
 - PDMats                        0.5.0
 - ProtoBuf                      0.2.0
 - PyCall                        1.7.2
 - Requests                      0.3.10
 - Requires                      0.3.0
 - Rmath                         0.1.3
 - SHA                           0.2.1
 - StatsBase                     0.10.0
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
INFO: Testing TensorFlow
WARNING: error while reinitializing value google:
ErrorException("Cannot replace module google during incremental precompile.")
WARNING: could not import Juno.interleave into TensorFlow
WARNING: Method definition require(Symbol) in module Base at loading.jl:376 overwritten in module Main at /home/vagrant/.julia/v0.6/Requires/src/require.jl:12.
WARNING: replacing module google.
WARNING: replacing module google.
ERROR: LoadError: InitError: On worker 2:
The Python TensorFlow package could not be imported. You must install Python TensorFlow before using this package.
 in init at /home/vagrant/.julia/v0.6/TensorFlow/src/py.jl:12
 in #1 at /home/vagrant/.julia/v0.6/TensorFlow/src/TensorFlow.jl:97
 in #622 at ./multi.jl:1432
 in run_work_thunk at ./multi.jl:1005
 in run_work_thunk at ./multi.jl:1014 [inlined]
 in #590 at ./event.jl:68
 in #remotecall_wait#604(::Array{Any,1}, ::Function, ::Function, ::Base.Worker, ::String, ::Vararg{String,N}) at ./multi.jl:1099
 in remotecall_wait(::Function, ::Base.Worker, ::String, ::Vararg{String,N}) at ./multi.jl:1090
 in #remotecall_wait#607(::Array{Any,1}, ::Function, ::Function, ::Int64, ::String, ::Vararg{String,N}) at ./multi.jl:1109
 in remotecall_wait(::Function, ::Int64, ::String, ::Vararg{String,N}) at ./multi.jl:1109
 in eval(::Module, ::Any) at ./boot.jl:238
 in __init__() at /home/vagrant/.julia/v0.6/TensorFlow/src/TensorFlow.jl:94
 in _include_from_serialized(::String) at ./loading.jl:150
 in _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:187
 in require(::Symbol) at ./loading.jl:454
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
during initialization of module TensorFlow
while loading /home/vagrant/.julia/v0.6/TensorFlow/test/runtests.jl, in expression starting on line 1
=============================[ ERROR: TensorFlow ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/TensorFlow/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: TensorFlow had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
