>>> 'Pkg.add("PhyloModels")' log
INFO: Cloning cache of PhyloModels from https://github.com/jangevaare/PhyloModels.jl.git
INFO: Cloning cache of PhyloTrees from https://github.com/jangevaare/PhyloTrees.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.2.0
INFO: Installing DataStructures v0.5.2
INFO: Installing Distributions v0.12.0
INFO: Installing PDMats v0.5.5
INFO: Installing PhyloModels v0.1.0
INFO: Installing PhyloTrees v0.6.1
INFO: Installing QuadGK v0.1.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.1
INFO: Installing StatsBase v0.13.0
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("PhyloModels")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (894.4453125 MB free)
Uptime: 16045.0 sec
Load Avg:  1.1142578125  1.1044921875  1.076171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     958792 s        778 s      92317 s     368011 s         72 s
#2  3499 MHz     306827 s       5852 s      50344 s    1190193 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - PhyloModels                   0.1.0
14 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.2.0
 - Compat                        0.18.0
 - DataStructures                0.5.2
 - Distributions                 0.12.0
 - PDMats                        0.5.5
 - PhyloTrees                    0.6.1
 - QuadGK                        0.1.1
 - RecipesBase                   0.1.0
 - Rmath                         0.1.6
 - SHA                           0.3.1
 - StatsBase                     0.13.0
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
INFO: Testing PhyloModels
ERROR: LoadError: MethodError: no method matching get(::Float64)
Closest candidates are:
  get(!Matched::ObjectIdDict, !Matched::ANY, !Matched::ANY) at dict.jl:284
  get(!Matched::Base.EnvHash, !Matched::AbstractString, !Matched::Any) at env.jl:74
  get(!Matched::AbstractArray{T,N}, !Matched::Integer, !Matched::Any) at abstractarray.jl:912
  ...
 in simulate!(::PhyloTrees.Tree{PhyloModels.Sequence,Void}, ::PhyloModels.JC69, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/PhyloModels/src/simulation.jl:19
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PhyloModels/test/runtests.jl, in expression starting on line 59
=============================[ ERROR: PhyloModels ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/PhyloModels/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PhyloModels had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
