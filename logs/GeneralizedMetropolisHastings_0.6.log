>>> 'Pkg.add("GeneralizedMetropolisHastings")' log
INFO: Cloning cache of GeneralizedMetropolisHastings from https://github.com/QuantifyingUncertainty/GeneralizedMetropolisHastings.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing Conda v0.4.0
INFO: Installing Distributions v0.8.10
INFO: Installing FileIO v0.2.0
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing GeneralizedMetropolisHastings v0.0.1
INFO: Installing HDF5 v0.6.6
INFO: Installing IJulia v1.3.2
INFO: Installing JLD v0.6.5
INFO: Installing LaTeXStrings v0.2.0
INFO: Installing LegacyStrings v0.1.1
INFO: Installing MacroTools v0.3.2
INFO: Installing Nettle v0.2.4
INFO: Installing PDMats v0.4.2
INFO: Installing PyCall v1.7.2
INFO: Installing PyPlot v2.2.4
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.2.1
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.2.2
INFO: Installing Sundials v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Installing ZMQ v0.4.0
INFO: Building Blosc
INFO: Building Conda
INFO: Building Nettle
INFO: Building ZMQ
INFO: Building IJulia
INFO: Installing Jupyter via the Conda package.
Fetching package metadata .............
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
jupyter                   1.0.0                    py27_3  
INFO: Found Jupyter version 4.2.0: /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/jupyter
Writing IJulia kernelspec to /home/vagrant/.julia/v0.6/IJulia/deps/julia-0.6/kernel.json ...
Installing julia kernelspec julia-0.6
[InstallKernelSpec] Removing existing kernelspec in /home/vagrant/.local/share/jupyter/kernels/julia-0.6
[InstallKernelSpec] Installed kernelspec julia-0.6 in /home/vagrant/.local/share/jupyter/kernels/julia-0.6
INFO: Building PyCall
INFO: No system-wide Python was found; got the following error:
could not spawn `'' -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('VERSION'))"`: no such file or directory (ENOENT)
using the Python distribution in the Conda package
Fetching package metadata .............
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.11.2          py27_blas_openblas_200  [blas_openblas]  conda-forge
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.12) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: Building Sundials
WARNING: Base.WORD_SIZE is deprecated.
  likely near /home/vagrant/.julia/v0.6/Sundials/deps/build.jl:21
INFO: Building HDF5
INFO: Package database updated

>>> 'Pkg.test("GeneralizedMetropolisHastings")' log
Julia Version 0.6.0-dev.1181
Commit e90a2e4 (2016-11-04 01:59 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1740.51953125 MB free)
Uptime: 25413.0 sec
Load Avg:  0.939453125  1.08740234375  1.0791015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1557410 s         72 s     170018 s     544789 s         41 s
#2  3500 MHz     653366 s       6622 s      84718 s    1713682 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GeneralizedMetropolisHastings 0.0.1
 - JSON                          0.8.0
27 additional packages:
 - ArrayViews                    0.6.4
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - ColorTypes                    0.2.12
 - Colors                        0.6.9
 - Compat                        0.9.3
 - Conda                         0.4.0
 - Distributions                 0.8.10
 - FileIO                        0.2.0
 - FixedPointNumbers             0.2.1
 - HDF5                          0.6.6
 - IJulia                        1.3.2
 - JLD                           0.6.5
 - LaTeXStrings                  0.2.0
 - LegacyStrings                 0.1.1
 - MacroTools                    0.3.2
 - Nettle                        0.2.4
 - PDMats                        0.4.2
 - PyCall                        1.7.2
 - PyPlot                        2.2.4
 - Reexport                      0.0.3
 - SHA                           0.2.1
 - StatsBase                     0.11.1
 - StatsFuns                     0.2.2
 - Sundials                      0.3.0
 - URIParser                     0.1.6
 - ZMQ                           0.4.0
INFO: Testing GeneralizedMetropolisHastings
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 56
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:994
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 57
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 58
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 59
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 60
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 61
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 62
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 63
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StatsFuns/src/basicfuns.jl, in expression starting on line 64
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/src/univariates.jl:199 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Distributions/src/univariates.jl, in expression starting on line 193
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/src/univariates.jl:200 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Distributions/src/univariates.jl, in expression starting on line 193
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in @_delegate_statsfuns(::ANY, ::ANY, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/Distributions/src/univariates.jl:316
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/src/univariates.jl:409 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Distributions/src/univariate/discrete/binomial.jl, in expression starting on line 71
WARNING: Method definition (::Type{Distributions.MvNormalKnownCov})(#Cov<:PDMats.AbstractPDMat) in module Distributions at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:149 overwritten at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:152.

WARNING: deprecated syntax "x::Float64".
Use "local x::Float64" instead.

WARNING: deprecated syntax "rmin::Float64".
Use "local rmin::Float64" instead.

WARNING: deprecated syntax "rmax::Float64".
Use "local rmax::Float64" instead.
ERROR: LoadError: LoadError: LoadError: LoadError: ArgumentError: invalid type for argument remote in method definition for iterate! at /home/vagrant/.julia/v0.6/GeneralizedMetropolisHastings/src/jobsegments/jobsegments.jl:15
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in eval(::Module, ::Any) at ./boot.jl:236
 in eval_ew_expr at ./multi.jl:2006 [inlined]
 in (::Base.##607#608{Base.#eval_ew_expr,Tuple{Expr},Array{Any,1}})() at ./multi.jl:1034
 in run_work_thunk(::Base.##607#608{Base.#eval_ew_expr,Tuple{Expr},Array{Any,1}}, ::Bool) at ./multi.jl:1005
 in #remotecall_fetch#612(::Array{Any,1}, ::Function, ::Function, ::Base.LocalProcess, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1059
 in remotecall_fetch(::Function, ::Base.LocalProcess, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1059
 in #remotecall_fetch#616(::Array{Any,1}, ::Function, ::Function, ::Int64, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1084
 in remotecall_fetch(::Function, ::Int64, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1084
 in (::##1#3)() at ./multi.jl:1992
while loading /home/vagrant/.julia/v0.6/GeneralizedMetropolisHastings/src/jobsegments/jobsegments.jl, in expression starting on line 15
while loading /home/vagrant/.julia/v0.6/GeneralizedMetropolisHastings/src/GeneralizedMetropolisHastings.jl, in expression starting on line 80
 in #remotecall_fetch#612(::Array{Any,1}, ::Function, ::Function, ::Base.LocalProcess, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1060
 in remotecall_fetch(::Function, ::Base.LocalProcess, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1059
 in #remotecall_fetch#616(::Array{Any,1}, ::Function, ::Function, ::Int64, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1084
 in remotecall_fetch(::Function, ::Int64, ::Expr, ::Vararg{Expr,N}) at ./multi.jl:1084
 in (::##1#3)() at ./multi.jl:1992
 in sync_end() at ./task.jl:314
 in macro expansion; at ./multi.jl:2002 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/GeneralizedMetropolisHastings/test/imports.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/GeneralizedMetropolisHastings/test/runtests.jl, in expression starting on line 1
====================[ ERROR: GeneralizedMetropolisHastings ]====================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/GeneralizedMetropolisHastings/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: GeneralizedMetropolisHastings had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
