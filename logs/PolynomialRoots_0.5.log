>>> 'Pkg.add("PolynomialRoots")' log
INFO: Cloning cache of PolynomialRoots from https://github.com/giordano/PolynomialRoots.jl.git
INFO: Installing PolynomialRoots v0.0.4
INFO: Package database updated

>>> 'Pkg.test("PolynomialRoots")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (734.5625 MB free)
Uptime: 14277.0 sec
Load Avg:  1.08984375  1.24951171875  1.13818359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     839042 s       3619 s     103910 s     322458 s         29 s
#2  3500 MHz     266446 s       2927 s      45244 s    1074131 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - PolynomialRoots               0.0.4
1 additional packages:
 - Compat                        0.9.5
INFO: Testing PolynomialRoots
INFO: Testing random polynomials...
 poly1[1] = -8.46354063681716 + 6.1705927488958245im
 poly1[2] = -6.652879793046709 + 9.006209746793381im
 poly1[3] = -0.9792595265024353 + 0.5238397823325958im
 poly1[4] = 9.85390699073255 - 1.4622270429950568im
 poly1[5] = 8.70653302387889 + 8.50427076107795im
 poly1[6] = -1.0872001796155217 - 0.49114688719301114im
 poly2[1] = 7.516334020421496 + 5.625852703047993im
 poly2[2] = 6.1122984181512585 - 7.38181621665448im
 poly2[3] = 8.531216400646425 - 3.6576957261569376im
 poly2[4] = 4.792411788495423 - 0.48467604006336984im
 poly2[5] = -2.8814036398962184 + 4.763182023842951im
 poly2[6] = 0.44340271883370086 - 8.157617256966567im
ERROR: LoadError: assertion failed: |zeros(length(res1)) - PolynomialRoots.evalpoly(res1,poly1)| <= 2.0e-12
  zeros(length(res1)) = [0.0,0.0,0.0,0.0,0.0]
  PolynomialRoots.evalpoly(res1,poly1) = Complex{Float64}[5.82077e-11+1.45519e-11im,0.0+0.0im,-7.10543e-15+5.32907e-15im,-1.77636e-15+1.77636e-15im,-7.10543e-15-1.06581e-14im]
  difference = 5.999908354159067e-11 > 2.0e-12
 in test_approx_eq(::Array{Float64,1}, ::Array{Complex{Float64},1}, ::Float64, ::String, ::String) at ./test.jl:863
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl, in expression starting on line 96
===========================[ ERROR: PolynomialRoots ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolynomialRoots had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
