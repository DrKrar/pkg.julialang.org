>>> 'Pkg.add("PolynomialRoots")' log
INFO: Cloning cache of PolynomialRoots from https://github.com/giordano/PolynomialRoots.jl.git
INFO: Installing PolynomialRoots v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PolynomialRoots
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PolynomialRoots")' log
Julia Version 0.5.0-pre+5664
Commit 0d7c014 (2016-07-24 18:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (855.484375 MB free)
Uptime: 13837.0 sec
Load Avg:  0.9296875  0.9697265625  0.96337890625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     650390 s        100 s      87740 s     468155 s         21 s
#2  3500 MHz     287203 s       6165 s      68539 s     966833 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - PolynomialRoots               0.0.3
21 additional packages:
 - Calculus                      0.1.15
 - ColorTypes                    0.2.5
 - ColorVectorSpace              0.1.5
 - Colors                        0.6.6
 - Compat                        0.8.6
 - Distances                     0.3.1
 - DualNumbers                   0.2.2
 - FileIO                        0.1.0
 - FixedPointNumbers             0.1.4
 - ForwardDiff                   0.2.2
 - Graphics                      0.1.3
 - Images                        0.5.5              8840a952 (dirty)
 - NLsolve                       0.7.2              bc5bbedf (dirty)
 - NaNMath                       0.2.1
 - OCCA                          0.0.1              f9fb1c0c (dirty)
 - Optim                         0.5.0
 - PositiveFactorizations        0.0.1
 - Reexport                      0.0.3
 - SIUnits                       0.0.6
 - TexExtensions                 0.0.3
 - Zlib                          0.1.12
INFO: Testing PolynomialRoots

WARNING: deprecated syntax "root::Core.apply_type(Complex,T)".
Use "local root::Core.apply_type(Complex,T)" instead.

WARNING: deprecated syntax "root::Core.apply_type(Complex,T)".
Use "local root::Core.apply_type(Complex,T)" instead.
INFO: Testing random polynomials...
 poly1[1] = 9.870293573540923 + 6.095586245537884im
 poly1[2] = -4.862171533107094 + 1.288845147482256im
 poly1[3] = -9.461894671669157 + 2.768624429262335im
 poly1[4] = 6.3767771270387215 + 5.972325876106769im
 poly1[5] = -0.509564317596439 + 6.64572696453336im
 poly1[6] = -6.090311716760737 + 2.7348719744959915im
 poly2[1] = 4.9542569706487996 + 3.6076304458488995im
 poly2[2] = 4.2057085611576674 - 7.944599856018515im
 poly2[3] = 0.5748704751693658 - 4.3197811180389545im
 poly2[4] = 8.236705443520094 - 1.3082185230566967im
 poly2[5] = -3.9305461072329484 - 3.8297435071743324im
 poly2[6] = 5.755020579977682 - 0.9514370897905664im
INFO: PolynomialRoots tests passed

>>> End of log
