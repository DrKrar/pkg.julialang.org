>>> 'Pkg.add("PolynomialRoots")' log
INFO: Cloning cache of PolynomialRoots from https://github.com/giordano/PolynomialRoots.jl.git
INFO: Installing PolynomialRoots v0.0.2
INFO: Package database updated

>>> 'Pkg.test("PolynomialRoots")' log
Julia Version 0.5.0-dev+4381
Commit 3ab92ef (2016-05-29 01:37 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing PolynomialRoots
INFO: Testing random polynomials...
 poly1[1] = -6.26532596638929 - 7.256497171987277im
 poly1[2] = 3.61940401895966 + 1.455249527925723im
 poly1[3] = 8.952415510866246 - 3.6818581328684052im
 poly1[4] = -8.611167856479241 + 8.669735159993284im
 poly1[5] = 3.9685411374522026 - 7.487453379656874im
 poly1[6] = 4.585656397316264 + 1.3210391689432868im
 poly2[1] = -5.272422419214813 + 2.269979890514975im
 poly2[2] = -4.71206016293535 - 4.155514738331965im
 poly2[3] = -4.660141536987976 + 1.5141228452581679im
 poly2[4] = 3.063527273220119 - 6.244271771569574im
 poly2[5] = 7.174706161052772 + 4.41077571420097im
 poly2[6] = 9.305620258905321 - 4.512723478739762im
ERROR: LoadError: syntax: invalid numeric constant "8.i"
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl, in expression starting on line 115
===========================[ ERROR: PolynomialRoots ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolynomialRoots had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
