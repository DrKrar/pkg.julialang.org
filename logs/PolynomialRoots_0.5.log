>>> 'Pkg.add("PolynomialRoots")' log
INFO: Cloning cache of PolynomialRoots from https://github.com/giordano/PolynomialRoots.jl.git
INFO: Installing PolynomialRoots v0.0.2
INFO: Package database updated

>>> 'Pkg.test("PolynomialRoots")' log
Julia Version 0.5.0-dev+4281
Commit a0661a0 (2016-05-23 13:30 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing PolynomialRoots
INFO: Testing random polynomials...
 poly1[1] = -5.5535428393015485 + 5.854714898798168im
 poly1[2] = 1.717391081408115 + 5.263077491413789im
 poly1[3] = -8.664475626650368 + 4.552759222657482im
 poly1[4] = 5.650646921141469 + 8.935765201023447im
 poly1[5] = 7.449754374820941 - 6.704687328485899im
 poly1[6] = 3.350578635652841 + 9.275996563840607im
 poly2[1] = -7.636897460354595 - 5.091920932358338im
 poly2[2] = 8.06689292574994 + 7.46501271590391im
 poly2[3] = -1.3716860442160907 + 1.3533607701023165im
 poly2[4] = -0.7497208087841933 - 7.760271223817203im
 poly2[5] = 9.645241922290499 - 8.176146316580288im
 poly2[6] = 6.133922908626133 + 7.9372703503641375im
ERROR: LoadError: syntax: invalid numeric constant "8.i"
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl, in expression starting on line 115
===========================[ ERROR: PolynomialRoots ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolynomialRoots had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
