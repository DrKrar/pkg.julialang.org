>>> 'Pkg.add("PolynomialRoots")' log
INFO: Cloning cache of PolynomialRoots from https://github.com/giordano/PolynomialRoots.jl.git
INFO: Installing PolynomialRoots v0.0.2
INFO: Package database updated

>>> 'Pkg.test("PolynomialRoots")' log
Julia Version 0.5.0-dev+4370
Commit 758aebc (2016-05-27 21:34 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing PolynomialRoots
INFO: Testing random polynomials...
 poly1[1] = -2.4611543153063 + 6.303684623681477im
 poly1[2] = 2.4063047988817754 - 2.7877302596829523im
 poly1[3] = 3.3245374307154343 + 4.219698050760492im
 poly1[4] = -4.08997882047438 + 4.811651822033994im
 poly1[5] = 2.70621671451552 + 5.8256397702215565im
 poly1[6] = 0.5775108382258267 + 7.629800702457711im
 poly2[1] = 5.56830404409688 + 6.674511819661152im
 poly2[2] = -5.49561806416782 + 3.100504563100891im
 poly2[3] = -4.480361938343829 + 1.76370980800597im
 poly2[4] = -1.1172020157463258 + 5.560325572693966im
 poly2[5] = 8.086571460893154 - 3.870467029275182im
 poly2[6] = -5.589416939039054 - 3.0398300184485327im
ERROR: LoadError: syntax: invalid numeric constant "8.i"
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl, in expression starting on line 115
===========================[ ERROR: PolynomialRoots ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/PolynomialRoots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolynomialRoots had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
