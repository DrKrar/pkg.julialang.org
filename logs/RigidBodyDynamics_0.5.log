>>> 'Pkg.add("RigidBodyDynamics")' log
INFO: Cloning cache of RigidBodyDynamics from https://github.com/tkoolen/RigidBodyDynamics.jl.git
INFO: Installing DataStructures v0.5.2
INFO: Installing DocStringExtensions v0.3.1
INFO: Installing LightXML v0.4.0
INFO: Installing RigidBodyDynamics v0.0.6
INFO: Installing Rotations v0.3.4
INFO: Installing StaticArrays v0.3.0
INFO: Building LightXML
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of RigidBodyDynamics
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("RigidBodyDynamics")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (875.40234375 MB free)
Uptime: 24670.0 sec
Load Avg:  0.98193359375  0.97509765625  0.96435546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1403679 s       6245 s     143553 s     614440 s        110 s
#2  3496 MHz     464873 s        240 s      71190 s    1845759 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - RigidBodyDynamics             0.0.6
6 additional packages:
 - Compat                        0.19.0
 - DataStructures                0.5.2
 - DocStringExtensions           0.3.1
 - LightXML                      0.4.0
 - Rotations                     0.3.4
 - StaticArrays                  0.3.0
INFO: Computing test dependencies for RigidBodyDynamics...
INFO: Cloning cache of SymPy from https://github.com/JuliaPy/SymPy.jl.git
INFO: Installing BaseTestNext v0.2.2
INFO: Installing BenchmarkTools v0.0.7
INFO: Installing BinDeps v0.4.7
INFO: Installing Blosc v0.2.0
INFO: Installing Calculus v0.2.0
INFO: Installing Conda v0.5.1
INFO: Installing DiffBase v0.0.4
INFO: Installing DiffEqBase v0.11.0
INFO: Installing FileIO v0.3.0
INFO: Installing ForwardDiff v0.3.4
INFO: Installing HDF5 v0.7.3
INFO: Installing JLD v0.6.9
INFO: Installing LegacyStrings v0.2.0
INFO: Installing MacroTools v0.3.4
INFO: Installing NBInclude v1.1.0
INFO: Installing NaNMath v0.2.2
INFO: Installing ODE v0.3.0
INFO: Installing Parameters v0.6.0
INFO: Installing Polynomials v0.1.2
INFO: Installing PyCall v1.10.0
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.2.0
INFO: Installing SHA v0.3.1
INFO: Installing SimpleTraits v0.3.0
INFO: Installing SymPy v0.5.0
INFO: Installing URIParser v0.1.8
INFO: Building Blosc
INFO: Building HDF5
INFO: Building Conda
INFO: Building PyCall
INFO: Using the Python distribution in the Conda package by default.
To use a different Python version, set ENV["PYTHON"]="pythoncommand" and re-run Pkg.build("PyCall").
Fetching package metadata .........
Solving package specifications: .

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.5/Conda/deps/usr:
#
numpy                     1.12.0                   py27_0  
INFO: PyCall is using /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.5/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.5/Conda/deps/usr/lib/libpython2.7
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/deps.jl has not changed
INFO: /home/vagrant/.julia/v0.5/PyCall/deps/PYTHON has not changed
INFO: Testing RigidBodyDynamics
rotation vector rate: Error During Test
  Got an exception of type ErrorException outside of a @test
  The size of type `Rotations.RotMatrix{3,Float64,9}` is not known.
  
  If you were trying to construct (or `convert` to) a `StaticArray` you
  may need to add the size explicitly as a type parameter so its size is
  inferrable to the Julia compiler (or performance would be terrible). For
  example, you might try
  
      m = zeros(3,3)
      SMatrix(m)      # this error
      SMatrix{3,3}(m) # correct - size is inferrable
  
   in StaticArrays.Size{S}(::Type{Rotations.RotMatrix{3,Float64,9}}) at /home/vagrant/.julia/v0.5/StaticArrays/src/traits.jl:42
   in size(::Type{Rotations.RotMatrix{3,Float64,9}}, ::Int64) at /home/vagrant/.julia/v0.5/StaticArrays/src/abstractarray.jl:10
   in *(...) at /home/vagrant/.julia/v0.5/StaticArrays/src/matrix_multiply.jl:302
   in macro expansion; at /home/vagrant/.julia/v0.5/RigidBodyDynamics/test/test_util.jl:8 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.5/RigidBodyDynamics/test/test_util.jl:4 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Test Summary:          | Pass  Error  Total
  util                 |    4      1      5
  rotation vector rate |           1      1
  colwise              |    4             4
ERROR: LoadError: LoadError: Some tests did not pass: 4 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:495
 in macro expansion; at ./test.jl:679 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/RigidBodyDynamics/test/test_util.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.5/RigidBodyDynamics/test/runtests.jl, in expression starting on line 21
==========================[ ERROR: RigidBodyDynamics ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/RigidBodyDynamics/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
INFO: Removing BenchmarkTools v0.0.7
INFO: Removing BinDeps v0.4.7
INFO: Removing Blosc v0.2.0
INFO: Removing Calculus v0.2.0
INFO: Removing Conda v0.5.1
INFO: Removing DiffBase v0.0.4
INFO: Removing DiffEqBase v0.11.0
INFO: Removing FileIO v0.3.0
INFO: Removing ForwardDiff v0.3.4
INFO: Removing HDF5 v0.7.3
INFO: Removing JLD v0.6.9
INFO: Removing LegacyStrings v0.2.0
INFO: Removing MacroTools v0.3.4
INFO: Removing NBInclude v1.1.0
INFO: Removing NaNMath v0.2.2
INFO: Removing ODE v0.3.0
INFO: Removing Parameters v0.6.0
INFO: Removing Polynomials v0.1.2
INFO: Removing PyCall v1.10.0
INFO: Removing Ranges v0.0.1
INFO: Removing RecipesBase v0.1.0
INFO: Removing RecursiveArrayTools v0.2.0
INFO: Removing SHA v0.3.1
INFO: Removing SimpleTraits v0.3.0
INFO: Removing SymPy v0.5.0
INFO: Removing URIParser v0.1.8
ERROR: RigidBodyDynamics had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
