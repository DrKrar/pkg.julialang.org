>>> 'Pkg.add("XSV")' log
INFO: Cloning cache of XSV from https://github.com/benhamner/XSV.jl.git
INFO: Installing XSV v0.0.2
INFO: Package database updated

>>> 'Pkg.test("XSV")' log
Julia Version 0.6.0-dev.1230
Commit ce6a0c3 (2016-11-10 21:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1837.3515625 MB free)
Uptime: 32409.0 sec
Load Avg:  1.09033203125  1.00634765625  0.8515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1842167 s       5137 s     243853 s     807790 s        118 s
#2  3499 MHz     495163 s        877 s     112780 s    2543293 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - XSV                           0.0.2
13 additional packages:
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.10
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - DataStreamsIntegrationTests   0.0.1              e92cc45b (dirty)
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - WeakRefStrings                0.2.0
INFO: Testing XSV
Running tests:
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/XSV/test/readxsv.jl:6
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/XSV/test/readxsv.jl:6
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/XSV/test/readxsv.jl:6
in get_string_type at /home/vagrant/.julia/v0.6/XSV/src/readxsv.jl
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.6/XSV/test/readxsv.jl:6
in get_string_type at /home/vagrant/.julia/v0.6/XSV/src/readxsv.jl
Error During Test
  Test threw an exception of type UndefVarError
  Expression: ((readxsv("1,2,3\n4,5,6"))[1])[1] == "1"
  UndefVarError: uint8 not defined
   in schedule_and_wait(::Task, ::Void) at ./event.jl:108
   in consume(::Task) at ./task.jl:272
   in done at ./task.jl:277 [inlined]
   in #readxsv#6(::Char, ::Char, ::String, ::Bool, ::Function, ::Base.AbstractIOBuffer{Array{UInt8,1}}) at /home/vagrant/.julia/v0.6/XSV/src/readxsv.jl:132
   in (::XSV.#kw##readxsv)(::Array{Any,1}, ::XSV.#readxsv, ::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./<missing>:0
   in readxsv(::String) at /home/vagrant/.julia/v0.6/XSV/src/readxsv.jl:137
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in macro expansion; at /home/vagrant/.julia/v0.6/XSV/test/runtests.jl:10 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
	[1m[31mFAILED[0m: readxsv.jl
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:398
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:281
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/XSV/test/runtests.jl:10 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/XSV/test/readxsv.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.6/XSV/test/runtests.jl, in expression starting on line 8
=================================[ ERROR: XSV ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/XSV/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: XSV had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
