>>> 'Pkg.add("RandomCorrelationMatrices")' log
INFO: Cloning cache of RandomCorrelationMatrices from https://github.com/IainNZ/RandomCorrelationMatrices.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing Distributions v0.9.0
INFO: Installing PDMats v0.4.2
INFO: Installing RandomCorrelationMatrices v0.3.0
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Package database updated

>>> 'Pkg.test("RandomCorrelationMatrices")' log
Julia Version 0.5.0-dev+4951
Commit 5d524ec* (2016-06-27 12:38 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing RandomCorrelationMatrices
Random correlation matrix
WARNING: chol(A::AbstractMatrix,::Type{Val{:L}}) is deprecated, use ctranspose(chol(A)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in chol(::Array{Float64,2}, ::Type{Val{:L}}) at ./deprecated.jl:50
 in randcormatrix(::Int64, ::Int64) at /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/src/RandomCorrelationMatrices.jl:37
 in macro expansion; at /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl:9 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl, in expression starting on line 8
η = 2
 1.00  0.37  0.61  0.30 
 0.37  1.00  0.64  0.46 
 0.61  0.64  1.00  0.67 
 0.30  0.46  0.67  1.00 
mean(ranges) = 0.9544674880964165
median(ranges) = 0.951089680363062
η = 8
 1.00 -0.28 -0.14 -0.45 
-0.28  1.00 -0.27  0.22 
-0.14 -0.27  1.00  0.16 
-0.45  0.22  0.16  1.00 
mean(ranges) = 0.5851269765951768
median(ranges) = 0.5680841178420399
η = 32
 1.00 -0.09 -0.09 -0.05 
-0.09  1.00 -0.12 -0.05 
-0.09 -0.12  1.00  0.03 
-0.05 -0.05  0.03  1.00 
mean(ranges) = 0.31015456608181763
median(ranges) = 0.30475427958115486
η = 128
 1.00 -0.04 -0.10  0.16 
-0.04  1.00  0.16 -0.04 
-0.10  0.16  1.00  0.09 
 0.16 -0.04  0.09  1.00 
mean(ranges) = 0.15727994497562373
median(ranges) = 0.15415897222995234

Random covariance matrix
σ = [100,200,300,400,500]
ERROR: LoadError: ArgumentError: matrix is not symmetric/Hermitian. This error can be avoided by calling chol(Hermitian(A)) which will ignore either the upper or lower triangle of the matrix.
 in chol(::Array{Float64,2}) at ./linalg/cholesky.jl:156
 in chol(::Array{Float64,2}, ::Type{Val{:L}}) at ./deprecated.jl:52
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl, in expression starting on line 33
======================[ ERROR: RandomCorrelationMatrices ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/RandomCorrelationMatrices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: RandomCorrelationMatrices had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
