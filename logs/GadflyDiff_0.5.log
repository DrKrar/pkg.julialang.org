>>> 'Pkg.add("GadflyDiff")' log
INFO: Cloning cache of GadflyDiff from https://github.com/shashi/GadflyDiff.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing Benchmark v0.1.0
INFO: Installing Calculus v0.1.14
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.2.1
INFO: Installing Colors v0.6.3
INFO: Installing Compose v0.4.2
INFO: Installing ComposeDiff v0.0.1
INFO: Installing Contour v0.1.0
INFO: Installing DataArrays v0.2.20
INFO: Installing DataFrames v0.6.10
INFO: Installing DataStructures v0.4.3
INFO: Installing Dates v0.4.4
INFO: Installing Distances v0.3.0
INFO: Installing Distributions v0.8.10
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.2.2
INFO: Installing FactCheck v0.4.2
INFO: Installing FixedPointNumbers v0.1.2
INFO: Installing FixedSizeArrays v0.0.10
INFO: Installing FunctionalCollections v0.1.3
INFO: Installing GZip v0.2.18
INFO: Installing Gadfly v0.4.2
INFO: Installing GadflyDiff v0.0.1
INFO: Installing Grid v0.4.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing MacroTools v0.3.0
INFO: Installing Measures v0.0.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.4.4
INFO: Installing PDMats v0.4.0
INFO: Installing Patchwork v0.2.1
INFO: Installing Reactive v0.3.0
INFO: Installing Reexport v0.0.3
INFO: Installing Requires v0.2.2
INFO: Installing Showoff v0.0.6
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.0
INFO: Installing StatsFuns v0.2.0
INFO: Installing WoodburyMatrices v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GadflyDiff
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GadflyDiff")' log
Julia Version 0.5.0-dev+3184
Commit fb283c6 (2016-03-17 08:49 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing GadflyDiff
WARNING: Method definition (::Type{Patchwork.Elem})(Symbol, Symbol) in module Patchwork at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:109 overwritten at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:114.
WARNING: readall is deprecated, use readstring instead.
 [inlined code] from ./error.jl:26
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in readall(::IOStream, ::Vararg{IOStream}) at ./deprecated.jl:30
 [inlined code] from ./expr.jl:8
 in __init__() at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:226
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl, in expression starting on line 221
ERROR: LoadError: LoadError: LoadError: module Cairo not found in current path; you should rm("/home/vagrant/.julia/lib/v0.5/Cairo.ji") to remove the orphaned cache file
 in error(::ASCIIString) at ./error.jl:21
 [inlined code] from ./strings/io.jl:33
 in recompile_stale(::Symbol, ::ASCIIString) at ./loading.jl:568
 in _require_from_serialized(::Int64, ::Symbol, ::ASCIIString, ::Bool) at ./loading.jl:164
 in _require_from_serialized(::Int64, ::Symbol, ::Bool) at ./loading.jl:193
 in require(::Symbol) at ./loading.jl:323
 in stale_cachefile(::ASCIIString, ::ASCIIString) at ./loading.jl:553
 in recompile_stale(::Symbol, ::ASCIIString) at ./loading.jl:570
 in _require_from_serialized(::Int64, ::Symbol, ::ASCIIString, ::Bool) at ./loading.jl:164
 in _require_from_serialized(::Int64, ::Symbol, ::Bool) at ./loading.jl:193
 in require(::Symbol) at ./loading.jl:323
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ComposeDiff/src/ComposeDiff.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.5/GadflyDiff/src/GadflyDiff.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.5/GadflyDiff/test/runtests.jl, in expression starting on line 1
=============================[ ERROR: GadflyDiff ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/GadflyDiff/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("GadflyDiff had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::ASCIIString) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#3(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
