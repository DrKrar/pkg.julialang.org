>>> 'Pkg.add("Roots")' log
INFO: Installing Calculus v0.1.15
INFO: Installing ForwardDiff v0.2.5
INFO: Installing NaNMath v0.2.1
INFO: Installing Polynomials v0.1.0
INFO: Installing Primes v0.1.1
INFO: Installing Roots v0.2.1
INFO: Package database updated

>>> 'Pkg.test("Roots")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1007.640625 MB free)
Uptime: 17916.0 sec
Load Avg:  0.96923828125  0.97607421875  1.01513671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz     901128 s       6464 s     102010 s     599762 s         44 s
#2  3508 MHz     298496 s         96 s      52504 s    1389203 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.1
 - Roots                         0.2.1
6 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.2
 - ForwardDiff                   0.2.5
 - NaNMath                       0.2.1
 - Polynomials                   0.1.0
 - Primes                        0.1.1
INFO: Testing Roots
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in ratio(::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:55
 in precondition(::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:70
 in #agcd#64(::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:241
 in (::Roots.#kw##agcd)(::Array{Any,1}, ::Roots.#agcd, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at ./<missing>:0
 in #multroot#76(::Float64, ::Float64, ::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:168
 in multroot(::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:151
 in #multroot#78(::Array{Any,1}, ::Function, ::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:225
 in multroot(::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:219
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Roots/test/./tests_multroot.jl, in expression starting on line 8
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in ratio(::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:58
 in precondition(::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:70
 in #agcd#64(::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:241
 in (::Roots.#kw##agcd)(::Array{Any,1}, ::Roots.#agcd, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at ./<missing>:0
 in #multroot#76(::Float64, ::Float64, ::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:168
 in multroot(::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:151
 in #multroot#78(::Array{Any,1}, ::Function, ::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:225
 in multroot(::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:219
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Roots/test/./tests_multroot.jl, in expression starting on line 8
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in geometric_mean(::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:50
 in precondition(::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:86
 in #agcd#64(::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:241
 in (::Roots.#kw##agcd)(::Array{Any,1}, ::Roots.#agcd, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at ./<missing>:0
 in #multroot#76(::Float64, ::Float64, ::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:168
 in multroot(::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:151
 in #multroot#78(::Array{Any,1}, ::Function, ::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:225
 in multroot(::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:219
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Roots/test/./tests_multroot.jl, in expression starting on line 8
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in #lemma24#62(::Float64, ::Function, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:103
 in reveal_rank(::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}, ::Float64) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:144
 in #agcd#64(::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/agcd.jl:243
 in (::Roots.#kw##agcd)(::Array{Any,1}, ::Roots.#agcd, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at ./<missing>:0
 in #multroot#76(::Float64, ::Float64, ::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:168
 in multroot(::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:151
 in #multroot#78(::Array{Any,1}, ::Function, ::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:225
 in multroot(::Function) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:219
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Roots/test/./tests_multroot.jl, in expression starting on line 8
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Complex{Float64},1}) at ./deprecated.jl:50
 in #multroot#76(::Float64, ::Float64, ::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/multroot.jl:180
 in factor(::Polynomials.Poly{Rational{BigInt}}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/real_roots.jl:399
 in real_roots(::Polynomials.Poly{BigInt}) at /home/vagrant/.julia/v0.6/Roots/src/Polys/real_roots.jl:319
 in fzeros(::Polynomials.Poly{BigInt}) at /home/vagrant/.julia/v0.6/Roots/src/Roots.jl:185
 in fzeros(::##182#183) at /home/vagrant/.julia/v0.6/Roots/src/Roots.jl:196
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/Roots/test/./tests_multroot.jl, in expression starting on line 43
INFO: Roots tests passed

>>> End of log
