>>> 'Pkg.add("JellyFish")' log
INFO: Cloning cache of JellyFish from https://github.com/samuelcolvin/JellyFish.jl.git
INFO: Installing JellyFish v0.0.1
INFO: Building JellyFish
gcc cjellyfish/damerau_levenshtein.c cjellyfish/hamming.c cjellyfish/jaro.c cjellyfish/levenshtein.c cjellyfish/metaphone.c cjellyfish/mra.c cjellyfish/nysiis.c cjellyfish/porter.c cjellyfish/soundex.c -lm -o jellyfish.so -shared -fPIC -I./cjellyfish/ -lm
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JellyFish
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JellyFish")' log
Julia Version 0.5.0-dev+4916
Commit 65c6e6e* (2016-06-23 02:47 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing JellyFish
ERROR: LoadError: LoadError: UndefVarError: find_library not defined
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:231
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/JellyFish/src/JellyFish.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.5/JellyFish/test/runtests.jl, in expression starting on line 1
==============================[ ERROR: JellyFish ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/JellyFish/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: JellyFish had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:231
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
