>>> 'Pkg.add("WriteVTK")' log
INFO: Cloning cache of WriteVTK from https://github.com/jipolanco/WriteVTK.jl.git
INFO: Installing BufferedStreams v0.2.0
INFO: Installing Libz v0.2.0
INFO: Installing LightXML v0.4.0
INFO: Installing WriteVTK v0.4.2
INFO: Building LightXML
INFO: Package database updated

>>> 'Pkg.test("WriteVTK")' log
Julia Version 0.6.0-dev.1156
Commit 9747250 (2016-10-29 17:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1877.46484375 MB free)
Uptime: 29390.0 sec
Load Avg:  1.4072265625  2.33447265625  1.62646484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz    1703166 s       6110 s     207247 s     691204 s        141 s
#2  3495 MHz     469911 s         92 s      98298 s    2270181 s         10 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - WriteVTK                      0.4.2
16 additional packages:
 - BufferedStreams               0.2.0
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.9
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - DataStreamsIntegrationTests   0.0.1              e92cc45b (dirty)
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - Libz                          0.2.0
 - LightXML                      0.4.0
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - WeakRefStrings                0.2.0
INFO: Testing WriteVTK
TEST (first run): multiblock.jl
Saved:   multiblock.vtm   multiblock.z01.vts   multiblock.z02.vtr   multiblock.z03.vtu
  3.957585 seconds (3.30 M allocations: 101.356 MB, 9.63% gc time)

TEST (first run): rectilinear.jl
Saved:   rectilinear_2D.vtr   rectilinear_3D.vtr
  2.497706 seconds (2.36 M allocations: 87.539 MB, 4.80% gc time)

TEST (first run): imagedata.jl
Saved:   imagedata.vti
  0.354831 seconds (353.98 k allocations: 10.825 MB)

TEST (first run): structured.jl
Saved:   structured_2D.vts   structured_3D.vts
  0.636880 seconds (369.33 k allocations: 10.775 MB, 1.28% gc time)

TEST (first run): unstructured.jl
Saved:   unstructured_1D.vtu   unstructured_2D.vtu   unstructured_3D.vtu
  0.748262 seconds (742.59 k allocations: 24.712 MB, 1.21% gc time)

TEST (first run): pvdCollection.jl
Saved:   collection.pvd   collection_00.vtr   collection_01.vtr   collection_02.vtr   collection_03.vtr
  1.169828 seconds (1.43 M allocations: 41.008 MB, 1.37% gc time)

============================================================

TEST (second run): multiblock.jl
Saved:   multiblock.vtm   multiblock.z01.vts   multiblock.z02.vtr   multiblock.z03.vtu
  0.867017 seconds (2.20 M allocations: 53.413 MB, 1.66% gc time)

TEST (second run): rectilinear.jl
Saved:   rectilinear_2D.vtr   rectilinear_3D.vtr
  0.728295 seconds (1.09 M allocations: 28.299 MB, 1.57% gc time)

TEST (second run): imagedata.jl
Saved:   imagedata.vti
  0.282030 seconds (256.06 k allocations: 6.157 MB)

TEST (second run): structured.jl
Saved:   structured_2D.vts   structured_3D.vts
  0.379297 seconds (342.06 k allocations: 9.486 MB)

TEST (second run): unstructured.jl
Saved:   unstructured_1D.vtu   unstructured_2D.vtu   unstructured_3D.vtu
  0.548783 seconds (716.60 k allocations: 23.433 MB, 0.99% gc time)

TEST (second run): pvdCollection.jl
Saved:   collection.pvd   collection_00.vtr   collection_01.vtr   collection_02.vtr   collection_03.vtr
  0.510058 seconds (1.19 M allocations: 30.053 MB, 1.77% gc time)

INFO: WriteVTK tests passed

>>> End of log
