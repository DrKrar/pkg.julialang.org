>>> 'Pkg.add("ClassicalCiphers")' log
INFO: Cloning cache of ClassicalCiphers from https://github.com/Smaug123/ClassicalCiphers.jl.git
INFO: Installing ClassicalCiphers v0.2.0
INFO: Installing Iterators v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ClassicalCiphers
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ClassicalCiphers")' log
Julia Version 0.6.0-dev.1918
Commit cfa2312 (2017-01-04 22:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (644.390625 MB free)
Uptime: 10464.0 sec
Load Avg:  0.9921875  1.05029296875  0.91943359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3512 MHz     534233 s       6637 s      63914 s     348211 s         23 s
#2  3512 MHz     189638 s         69 s      37816 s     793258 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ClassicalCiphers              0.2.0
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - Iterators                     0.2.0
INFO: Testing ClassicalCiphers

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
WARNING: Method definition letters_only(Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:3 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:3.
WARNING: Method definition rotateRight(Any, Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:8 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:8.
WARNING: Method definition rotateLeft(Any, Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:17 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:17.
WARNING: Method definition rotateLeftStr(AbstractString, Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:25 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:25.
WARNING: Method definition rotateRightStr(AbstractString, Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:29 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:29.
WARNING: Method definition flatten(Array{#T<:Any, 1}) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:32 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:32.
WARNING: Method definition flatten(Array{#T<:Any, N<:Any}) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:33 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:33.
WARNING: Method definition flatten(Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:34 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:34.
WARNING: Method definition splitBy(Any, Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:40 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:40.
WARNING: Method definition get_trigram_fitnesses() in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:55 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:55.
WARNING: Method definition string_fitness(Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:76 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:76.
WARNING: Method definition #string_fitness(Array{Any, 1}, ClassicalCiphers.#string_fitness, Any) in module ClassicalCiphers overwritten.
WARNING: replacing docs for 'ClassicalCiphers.string_fitness :: Tuple{Any}' in module 'ClassicalCiphers'.
WARNING: Method definition frequencies(Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:97 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:97.
WARNING: replacing docs for 'ClassicalCiphers.frequencies :: Tuple{Any}' in module 'ClassicalCiphers'.
WARNING: Method definition index_of_coincidence(Any) in module ClassicalCiphers at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:113 overwritten at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/common.jl:113.
WARNING: replacing docs for 'ClassicalCiphers.index_of_coincidence :: Tuple{Any}' in module 'ClassicalCiphers'.
Running tests:
 * vigenere.jl
Error During Test
  Test threw an exception of type ArgumentError
  Expression: encrypt_vigenere("ab",[0,1]) == "AC"
  ArgumentError: 65 is not a valid key for type Char
  Stacktrace:
   [1] setindex!(::Dict{Char,Char}, ::Char, ::Int64) at ./dict.jl:414
   [2] Dict{Char,Char}(::Array{Tuple{Int64,Char},1}) at ./dict.jl:109
   [3] keystr_to_dict(::String) at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/monoalphabetic.jl:2
   [4] encrypt_caesar(::Char, ::Int64) at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/caesar.jl:12
   [5] (::ClassicalCiphers.##32#33{Array{Int64,1}})(::Tuple{Int64,Char}) at ./<missing>:0
   [6] collect(::Base.Generator{Enumerate{String},ClassicalCiphers.##32#33{Array{Int64,1}}}) at ./array.jl:372
   [7] encrypt_vigenere(::String, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/ClassicalCiphers/src/vigenere.jl:8
   [8] include_from_node1(::String) at ./loading.jl:532
   [9] include(::String) at ./sysimg.jl:14
   [10] macro expansion; at /home/vagrant/.julia/v0.6/ClassicalCiphers/test/runtests.jl:12 [inlined]
   [11] anonymous at ./<missing>:?
   [12] include_from_node1(::String) at ./loading.jl:532
   [13] include(::String) at ./sysimg.jl:14
   [14] process_options(::Base.JLOptions) at ./client.jl:298
   [15] _start() at ./client.jl:364
ERROR: LoadError: LoadError: There was an error during testing
Stacktrace:
 [1] record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:425
 [2] do_test(::Base.Test.Threw, ::Expr) at ./test.jl:308
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] macro expansion; at /home/vagrant/.julia/v0.6/ClassicalCiphers/test/runtests.jl:12 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ClassicalCiphers/test/vigenere.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/ClassicalCiphers/test/runtests.jl, in expression starting on line 9
==========================[ ERROR: ClassicalCiphers ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ClassicalCiphers/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ClassicalCiphers had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
