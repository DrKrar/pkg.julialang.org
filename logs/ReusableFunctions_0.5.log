>>> 'Pkg.add("ReusableFunctions")' log
INFO: Installing BinDeps v0.3.21
INFO: Installing Blosc v0.1.4
INFO: Installing Docile v0.5.23
INFO: Installing FileIO v0.0.4
INFO: Installing HDF5 v0.5.8
INFO: Installing JLD v0.5.9
INFO: Installing ReusableFunctions v0.1.3
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building Blosc
INFO: Building HDF5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ReusableFunctions
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ReusableFunctions")' log
Julia Version 0.5.0-dev+3184
Commit fb283c6 (2016-03-17 08:49 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ReusableFunctions
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/HDF5.ji for module HDF5.
WARNING: Method definition h5l_exists(Any, Any, Any) in module HDF5 at /home/vagrant/.julia/v0.5/HDF5/src/plain.jl:2049 overwritten at /home/vagrant/.julia/v0.5/HDF5/src/plain.jl:2075.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/JLD.ji for module JLD.
Testing with integers:
Should be about 1 second:  0.927117 seconds (4.06 k allocations: 240.703 KB)
Should be less than .1 seconds:  0.008603 seconds (1.73 k allocations: 97.969 KB)
Testing with dictionaries:
Should be about 1 second:  0.931513 seconds (6.41 k allocations: 362.954 KB)
Should be less than .1 seconds:  0.012147 seconds (2.72 k allocations: 147.500 KB)
Testing with Float64 arrays:
Should be about 1 second:  1.035527 seconds (4.34 k allocations: 260.000 KB)
Should be less than .1 seconds:  0.006536 seconds (1.84 k allocations: 103.594 KB)
Testing with integers:
Should be about 1 second:  0.915638 seconds (63 allocations: 3.375 KB)
Should be less than .1 seconds:  0.000019 seconds
Testing with dictionaries:
Should be about 1 second:  0.914294 seconds (844 allocations: 54.350 KB)
Should be less than .1 seconds:  0.000070 seconds (90 allocations: 8.438 KB)
Testing with Float64 arrays:
Should be about 1 second:  1.016119 seconds (780 allocations: 49.084 KB)
Should be less than .1 seconds:  0.000146 seconds (20 allocations: 3.125 KB)
testing with Dict->Dict efficient storage
Should be about 1 second:  0.927579 seconds (4.42 k allocations: 267.484 KB)
Should be less than .1 seconds:  0.004047 seconds (2.14 k allocations: 123.906 KB)
INFO: ReusableFunctions tests passed

>>> End of log
