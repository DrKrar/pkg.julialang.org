>>> 'Pkg.add("ReusableFunctions")' log
INFO: Installing BinDeps v0.3.21
INFO: Installing Blosc v0.1.4
INFO: Installing Docile v0.5.23
INFO: Installing FileIO v0.0.4
INFO: Installing HDF5 v0.5.8
INFO: Installing JLD v0.5.9
INFO: Installing ReusableFunctions v0.1.3
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.2
INFO: Building Blosc
INFO: Building HDF5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ReusableFunctions
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ReusableFunctions")' log
Julia Version 0.5.0-dev+2918
Commit 1eacbbb (2016-02-28 16:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing ReusableFunctions
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/HDF5.ji for module HDF5.
WARNING: Method definition h5l_exists(Any, Any, Any) in module HDF5 at /home/vagrant/.julia/v0.5/HDF5/src/plain.jl:2049 overwritten at /home/vagrant/.julia/v0.5/HDF5/src/plain.jl:2075.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/JLD.ji for module JLD.
Testing with integers:
Should be about 1 second:  0.927742 seconds (3.95 k allocations: 212.484 KB)
Should be less than .1 seconds:  0.005755 seconds (1.73 k allocations: 90.000 KB)
Testing with dictionaries:
Should be about 1 second:  0.941042 seconds (6.34 k allocations: 323.860 KB)
Should be less than .1 seconds:  0.011811 seconds (2.71 k allocations: 135.000 KB)
Testing with Float64 arrays:
Should be about 1 second:  1.030970 seconds (4.22 k allocations: 229.219 KB)
Should be less than .1 seconds:  0.005353 seconds (1.83 k allocations: 95.156 KB)
Testing with integers:
Should be about 1 second:  0.911568 seconds (81 allocations: 4.078 KB)
Should be less than .1 seconds:  0.000024 seconds
Testing with dictionaries:
Should be about 1 second:  0.923632 seconds (735 allocations: 44.490 KB)
Should be less than .1 seconds:  0.000087 seconds (90 allocations: 7.500 KB)
Testing with Float64 arrays:
Should be about 1 second:  1.015514 seconds (673 allocations: 39.693 KB)
Should be less than .1 seconds:  0.000022 seconds (20 allocations: 2.813 KB)
testing with Dict->Dict efficient storage
Should be about 1 second:  0.933445 seconds (4.31 k allocations: 236.781 KB)
Should be less than .1 seconds:  0.003382 seconds (2.13 k allocations: 113.594 KB)
INFO: ReusableFunctions tests passed

>>> End of log
