>>> 'Pkg.add("AutoGrad")' log
INFO: Cloning cache of AutoGrad from https://github.com/denizyuret/AutoGrad.jl.git
INFO: Installing AutoGrad v0.0.4
INFO: Package database updated

>>> 'Pkg.test("AutoGrad")' log
Julia Version 0.6.0-dev.1843
Commit c38a5a3 (2017-01-01 14:09 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (641.87109375 MB free)
Uptime: 3176.0 sec
Load Avg:  0.875  1.03271484375  1.236328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     151875 s         54 s      21998 s     116465 s          8 s
#2  3500 MHz      66389 s         90 s      11213 s     234018 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AutoGrad                      0.0.4
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.10.0
INFO: Testing AutoGrad

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.
WARNING: log{T <: Number}(x::AbstractArray{T}) is deprecated, use log.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Array{Float64,1}) at ./deprecated.jl:50
 [3] #randin#14(::Float64, ::Function, ::Tuple{Int64,Float64}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/util.jl:311
 [4] addtest2(::Symbol, ::Tuple{Int64,Float64}, ::Tuple{Int64,Float64}) at /home/vagrant/.julia/v0.6/AutoGrad/src/util.jl:337
 [5] addtest3(::Symbol, ::Tuple{Int64,Float64}, ::Tuple{Int64,Float64}) at /home/vagrant/.julia/v0.6/AutoGrad/src/util.jl:343
 [6] macro expansion; at /home/vagrant/.julia/v0.6/AutoGrad/src/base/broadcast.jl:22 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] anonymous at ./<missing>:2
 [13] eval(::Module, ::Any) at ./boot.jl:236
 [14] process_options(::Base.JLOptions) at ./client.jl:275
 [15] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/AutoGrad/src/base/broadcast.jl, in expression starting on line 19
WARNING: log{T <: Number}(x::AbstractArray{T}) is deprecated, use log.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] log(::Array{Float64,2}) at ./deprecated.jl:50
 [3] #randin#14(::Float64, ::Function, ::Tuple{Int64,Float64}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/util.jl:311
 [4] addtest3(::Symbol, ::Tuple{Int64,Float64}, ::Tuple{Int64,Float64}) at /home/vagrant/.julia/v0.6/AutoGrad/src/util.jl:344
 [5] macro expansion; at /home/vagrant/.julia/v0.6/AutoGrad/src/base/broadcast.jl:22 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] anonymous at ./<missing>:2
 [12] eval(::Module, ::Any) at ./boot.jl:236
 [13] process_options(::Base.JLOptions) at ./client.jl:275
 [14] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/AutoGrad/src/base/broadcast.jl, in expression starting on line 19

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.
WARNING: sec{T <: Number}(A::AbstractArray{T}) is deprecated, use sec.(A) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sec(::Array{Float64,1}) at ./deprecated.jl:50
 [3] #randin#14(::Float64, ::Function, ::Tuple{Float64,Int64,Int64,Float64}, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/util.jl:323
 [4] addtest1(::Symbol, ::Tuple{Float64,Int64,Int64,Float64}) at /home/vagrant/.julia/v0.6/AutoGrad/src/util.jl:332
 [5] macro expansion; at /home/vagrant/.julia/v0.6/AutoGrad/src/special/trig.jl:50 [inlined]
 [6] anonymous at ./<missing>:?
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] anonymous at ./<missing>:2
 [12] eval(::Module, ::Any) at ./boot.jl:236
 [13] process_options(::Base.JLOptions) at ./client.jl:275
 [14] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/AutoGrad/src/special/trig.jl, in expression starting on line 48
INFO: Test indexing...
INFO: Test rosenbrock with map...
  0.954372 seconds (3.10 M allocations: 131.986 MB, 21.73% gc time)
INFO: Test higher order gradients...
WARNING: .* is no longer a function object; use broadcast(*, ...) instead
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] (::Base.##941#942)(::Float64, ::Float64) at ./deprecated.jl:991
 [3] (::AutoGrad.##rfun#4#6{Base.##941#942})(::Array{Any,1}, ::Function, ::Float64, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:110
 [4] broadcast(::Base.#*, ::Float64, ::AutoGrad.Rec{Float64}) at ./<missing>:0
 [5] sin(::Type{AutoGrad.Grad{1}}, ::Float64, ::Float64, ::AutoGrad.Rec{Int64}) at ./<missing>:0
 [6] backward_pass(::AutoGrad.Rec{Int64}, ::AutoGrad.Rec{Float64}, ::Array{AutoGrad.Node,1}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:212
 [7] (::AutoGrad.##gradfun#1#3{Base.#sin,Int64})(::Array{Any,1}, ::Function, ::AutoGrad.Rec{Int64}, ::Vararg{AutoGrad.Rec{Int64},N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:47
 [8] (::AutoGrad.#gradfun#2)(::AutoGrad.Rec{Int64}, ::Vararg{AutoGrad.Rec{Int64},N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:47
 [9] forward_pass(::Function, ::Tuple{Int64}, ::Array{Any,1}, ::Int64) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:75
 [10] (::AutoGrad.##gradfun#1#3{AutoGrad.#gradfun#2,Int64})(::Array{Any,1}, ::Function, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:47
 [11] (::AutoGrad.#gradfun#2)(::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:47
 [12] include_from_node1(::String) at ./loading.jl:532
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:298
 [15] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/AutoGrad/test/runtests.jl, in expression starting on line 62
Error During Test
  Test threw an exception of type MethodError
  Expression: g2(1) == -(sin(1))
  MethodError: no method matching (::Base.##941#942)(::Type{AutoGrad.Grad{2}}, ::Float64, ::Float64, ::Float64, ::AutoGrad.Rec{Float64})
  Closest candidates are:
    #941(::Any, ::Any) at deprecated.jl:990
  Stacktrace:
   [1] backward_pass(::AutoGrad.Rec{Int64}, ::AutoGrad.Rec{Float64}, ::Array{AutoGrad.Node,1}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:212
   [2] (::AutoGrad.##gradfun#1#3{AutoGrad.#gradfun#2,Int64})(::Array{Any,1}, ::Function, ::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:47
   [3] (::AutoGrad.#gradfun#2)(::Int64, ::Vararg{Int64,N}) at /home/vagrant/.julia/v0.6/AutoGrad/src/core.jl:47
   [4] include_from_node1(::String) at ./loading.jl:532
   [5] include(::String) at ./sysimg.jl:14
   [6] process_options(::Base.JLOptions) at ./client.jl:298
   [7] _start() at ./client.jl:364
ERROR: LoadError: There was an error during testing
Stacktrace:
 [1] record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:401
 [2] do_test(::Base.Test.Threw, ::Expr) at ./test.jl:284
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:298
 [6] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/AutoGrad/test/runtests.jl, in expression starting on line 62
==============================[ ERROR: AutoGrad ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/AutoGrad/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: AutoGrad had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
