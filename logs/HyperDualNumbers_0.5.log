>>> 'Pkg.add("HyperDualNumbers")' log
INFO: Cloning cache of HyperDualNumbers from https://github.com/JuliaDiff/HyperDualNumbers.jl.git
INFO: Installing HyperDualNumbers v1.0.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of HyperDualNumbers
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("HyperDualNumbers")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (395.27734375 MB free)
Uptime: 30445.0 sec
Load Avg:  1.056640625  1.02294921875  1.30810546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1764097 s       8498 s     166788 s     697407 s         64 s
#2  3500 MHz     769078 s         91 s     105555 s    2006022 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - HyperDualNumbers              1.0.0
 - JSON                          0.7.0
67 additional packages:
 - Anasol                        0.1.8
 - AxisAlgorithms                0.1.5
 - BIGUQ                         0.1.6
 - BinDeps                       0.4.5
 - BlackBoxOptim                 0.2.1
 - Blosc                         0.1.7
 - Calculus                      0.1.15
 - Codecs                        0.2.0
 - ColorTypes                    0.2.6
 - Colors                        0.6.6
 - Compat                        0.9.1
 - Compose                       0.4.4
 - Conda                         0.3.1
 - Contour                       0.2.0
 - DataArrays                    0.3.8
 - DataFrames                    0.8.2
 - DataStructures                0.4.5
 - Dates                         0.4.4
 - Distances                     0.3.2
 - Distributions                 0.10.2
 - Docile                        0.5.23
 - FactCheck                     0.4.3
 - FileIO                        0.1.2
 - FixedPointNumbers             0.1.4
 - FixedSizeArrays               0.2.3
 - Formatting                    0.1.5
 - ForwardDiff                   0.2.5
 - GZip                          0.2.20
 - Gadfly                        0.4.4
 - HDF5                          0.6.5
 - Hexagons                      0.0.4
 - Interpolations                0.3.6
 - Iterators                     0.1.10
 - JLD                           0.6.3
 - KernelDensity                 0.3.0
 - LaTeXStrings                  0.2.0
 - LegacyStrings                 0.1.1
 - Lexicon                       0.1.18
 - Loess                         0.0.7
 - Lora                          0.5.5
 - MacroTools                    0.3.2
 - Mads                          0.2.3              33972a53 (dirty)
 - Measures                      0.0.3
 - MetaProgTools                 0.1.4
 - NaNMath                       0.2.1
 - ODE                           0.2.1
 - Optim                         0.6.1
 - PDMats                        0.4.2
 - Polynomials                   0.1.0
 - PositiveFactorizations        0.0.2
 - ProgressMeter                 0.3.3
 - PyCall                        1.7.2
 - PyPlot                        2.2.2
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - ReusableFunctions             0.1.6
 - ReverseDiffSource             0.2.3
 - Rmath                         0.1.2
 - RobustPmap                    0.1.9
 - SHA                           0.2.1
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.0
 - YAML                          0.1.10
INFO: Testing HyperDualNumbers
Running tests:
  * test_basics.jl *

Examples of show() for hyperdual numbers with NaN:

hdNaN = NaN + 0.0ϵ1 + 0.0ϵ2 + 0.0ϵ1ϵ2
hdNaN + hd4 = NaN + 4.0ϵ1 + 3.0ϵ2 + 4.0ϵ1ϵ2

Testing includes Tim Holy's division performance improvement.
Testing includes ngedwin98's fixes for asin, acos and atan.



  * test_TimHoly_example.jl *
8//25 - 8//5ϵ1 - 8//5ϵ2 + 144//25ϵ1ϵ2



  * test_Paper_example.jl *

"THE" example
f(1.5) = 4.497780053946162

t0 = 1.5 + 1.0ϵ1 + 1.0ϵ2 + 0.0ϵ1ϵ2
t1 = 4.4816890703380645 + 4.4816890703380645ϵ1 + 4.4816890703380645ϵ2 + 4.4816890703380645ϵ1ϵ2
t2 = 0.9974949866040544 + 0.0707372016677029ϵ1 + 0.0707372016677029ϵ2 - 0.9974949866040544ϵ1ϵ2
t3 = 0.9925037693693151 + 0.21114975082386195ϵ1 + 0.21114975082386195ϵ2 - 2.947564004699509ϵ1ϵ2
t4 = 0.0707372016677029 - 0.9974949866040544ϵ1 - 0.9974949866040544ϵ2 - 0.0707372016677029ϵ1ϵ2
t5 = 0.000353951393082256 - 0.014973651704218029ϵ1 - 0.014973651704218029ϵ2 + 0.42123764746847714ϵ1ϵ2
t5a = 0.000353951393082256 - 0.014973651704218029ϵ1 - 0.014973651704218029ϵ2 + 0.42123764746847714ϵ1ϵ2
t6 = 0.9928577207623973 + 0.19617609911964393ϵ1 + 0.19617609911964393ϵ2 - 2.526326357231032ϵ1ϵ2
t7 = 1.0035903837494204 - 0.0991483686337086ϵ1 - 0.0991483686337086ϵ2 + 1.3062034995890381ϵ1ϵ2
t8 = 4.497780053946162 + 4.053427893898621ϵ1 + 4.053427893898621ϵ2 + 9.463073681596603ϵ1ϵ2

f(t0) = 4.497780053946162 + 4.05342789389862ϵ1 + 4.05342789389862ϵ2 + 9.463073681596601ϵ1ϵ2



INFO: HyperDualNumbers tests passed

>>> End of log
