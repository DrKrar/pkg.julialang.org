>>> 'Pkg.add("HyperDualNumbers")' log
INFO: Cloning cache of HyperDualNumbers from https://github.com/JuliaDiff/HyperDualNumbers.jl.git
INFO: Installing HyperDualNumbers v0.1.7
INFO: Package database updated

>>> 'Pkg.test("HyperDualNumbers")' log
Julia Version 0.5.0-dev+4402
Commit f31723a (2016-05-30 23:02 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing HyperDualNumbers
Running tests:
  * test_basics.jl *

Examples of show() for hyperdual numbers with NaN:

ERROR: LoadError: LoadError: UndefVarError: FloatingPoint not defined
 in hyper_show(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::HyperDualNumbers.Hyper{Float64}, ::Bool) at /home/vagrant/.julia/v0.5/HyperDualNumbers/src/hyperdual.jl:101
 in print(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::HyperDualNumbers.Hyper{Float64}) at ./strings/io.jl:8
 in #print_to_string#132(::Void, ::Function, ::String, ::Vararg{Any,N}) at ./strings/io.jl:62
 in print_to_string(::String, ::Vararg{Any,N}) at ./strings/io.jl:51
 in string(::String, ::HyperDualNumbers.Hyper{Float64}, ::Vararg{HyperDualNumbers.Hyper{Float64},N}) at ./strings/io.jl:69
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/HyperDualNumbers/test/runtests.jl:9 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/HyperDualNumbers/test/test_basics.jl, in expression starting on line 33
while loading /home/vagrant/.julia/v0.5/HyperDualNumbers/test/runtests.jl, in expression starting on line 7
==========================[ ERROR: HyperDualNumbers ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/HyperDualNumbers/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: HyperDualNumbers had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
