>>> 'Pkg.add("Slugify")' log
INFO: Cloning cache of Slugify from https://github.com/eraviart/Slugify.jl.git
INFO: Installing Slugify v0.1.1
INFO: Package database updated

>>> 'Pkg.test("Slugify")' log
Julia Version 0.5.0-dev+4381
Commit 3ab92ef (2016-05-29 01:37 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Slugify

WARNING: deprecated syntax "(Char=>ASCIIString)[a=>b, ...]" at /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:86.
Use "Dict{Char,ASCIIString}(a=>b, ...)" instead.
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:18
WARNING: isless(x::Char,y::Integer) is deprecated, use UInt32(x) < y instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isless(::Char, ::UInt8) at ./deprecated.jl:50
 in #1 at /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:92 [inlined]
 in get(::Slugify.##1#2{Char}, ::Dict{Char,String}, ::Char) at ./dict.jl:797
 in #slugify_char#4(::Char, ::Base.#lowercase, ::Function, ::Char) at /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:112
 in (::Slugify.#kw##slugify_char)(::Array{Any,1}, ::Slugify.#slugify_char, ::Char) at ./null:0
 in #slugify#3(::Char, ::Function, ::Function, ::String) at /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:99
 in slugify(::String) at /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:98
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Slugify/test/runtests.jl, in expression starting on line 18
Error During Test
  Test threw an exception of type MethodError
  Expression: slugify("Hello world!") == "hello-world"
  MethodError: no method matching split(::String, ::Char, ::Int64, ::Bool)
  Closest candidates are:
    split{T<:AbstractString}(::T<:AbstractString, ::Any)
    split{T<:SubString{T<:AbstractString}}(!Matched::T<:SubString{T<:AbstractString}, ::Any)
    split(::AbstractString)
   in #slugify#3(::Char, ::Function, ::Function, ::String) at /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:103
   in slugify(::String) at /home/vagrant/.julia/v0.5/Slugify/src/Slugify.jl:98
   in include_from_node1(::String) at ./loading.jl:426
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
ERROR: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:321
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:219
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/Slugify/test/runtests.jl, in expression starting on line 18
===============================[ ERROR: Slugify ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Slugify/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Slugify had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:693
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg.jl:245
 in test(::String, ::Vararg{String,N}) at ./pkg.jl:245
 in eval(::Module, ::Any) at ./boot.jl:225
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
