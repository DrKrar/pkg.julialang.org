>>> 'Pkg.add("Unitful")' log
INFO: Installing Unitful v0.0.4
INFO: Building Unitful
WARNING: `Pkg.build("Unitful.jl")` was run, but /home/vagrant/.julia/v0.6/Unitful/deps/Defaults.jl already exists. No action has been taken. If you encounter problems, you might consider backing up then deleting the existing file at /home/vagrant/.julia/v0.6/Unitful/deps/Defaults.jl, then running `Pkg.build("Unitful")` again.
INFO: Package database updated

>>> 'Pkg.test("Unitful")' log
Julia Version 0.6.0-dev.1202
Commit 42a22b6 (2016-11-06 22:14 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (446.2421875 MB free)
Uptime: 26297.0 sec
Load Avg:  0.82568359375  0.9228515625  0.9609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1482209 s        130 s     150805 s     698550 s        136 s
#2  3500 MHz     525658 s       6311 s      77132 s    1930880 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - Unitful                       0.0.4
13 additional packages:
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.10
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - DataStreamsIntegrationTests   0.0.1              e92cc45b (dirty)
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - WeakRefStrings                0.2.0
INFO: Testing Unitful
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: @inferred(([1m,2m])' * [3m,4m]) == [11 * m ^ 2]
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,2//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(2//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,2//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(2//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:33
   in *(::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}, ::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},1}) at ./linalg/matmul.jl:82
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:574 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: @inferred([1V,2V] * ([0.1 / m,0.4 / m])') == [(0.1V) / m (0.4V) / m;(0.2V) / m (0.8V) / m]
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,-1//1),Unitful.Unit{:Volt}(0,1//1)),Unitful.Dimensions{(Unitful.Dimension{:Current}(-1//1),Unitful.Dimension{:Length}(1//1),Unitful.Dimension{:Mass}(1//1),Unitful.Dimension{:Time}(-3//1))}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,-1//1),Unitful.Unit{:Volt}(0,1//1)),Unitful.Dimensions{(Unitful.Dimension{:Current}(-1//1),Unitful.Dimension{:Length}(1//1),Unitful.Dimension{:Mass}(1//1),Unitful.Dimension{:Time}(-3//1))}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(Unitful.Unit{:Volt}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Current}(-1//1),Unitful.Dimension{:Length}(2//1),Unitful.Dimension{:Mass}(1//1),Unitful.Dimension{:Time}(-3//1))}}}, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,-1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(-1//1),)}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Quantity{Int64, Dimensions:{𝐈^-1 𝐋^2 𝐌 𝐓^-3}, Units:{V}}}, ::Type{Quantity{Float64, Dimensions:{𝐋^-1}, Units:{m^-1}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:33
   in *(::Array{Quantity{Int64, Dimensions:{𝐈^-1 𝐋^2 𝐌 𝐓^-3}, Units:{V}},2}, ::Array{Quantity{Float64, Dimensions:{𝐋^-1}, Units:{m^-1}},2}) at ./linalg/matmul.jl:143
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:575 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: @inferred(([1m,2m])' * [3 / m,4 / m]) == [11]
  MethodError: no method matching +(::Unitful.Units{(),Unitful.Dimensions{()}}, ::Unitful.Units{(),Unitful.Dimensions{()}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,-1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(-1//1),)}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}, ::Type{Quantity{Int64, Dimensions:{𝐋^-1}, Units:{m^-1}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:33
   in *(::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}, ::Array{Quantity{Int64, Dimensions:{𝐋^-1}, Units:{m^-1}},1}) at ./linalg/matmul.jl:82
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:576 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: @inferred([1 2] * [3m,4m]) == [11m]
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Int64}, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:49
   in *(::Array{Int64,2}, ::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},1}) at ./linalg/matmul.jl:82
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:582 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: typeof([1 2] * [3m,4m]) == Array{typeof(1 * @u_str("m")),1}
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Int64}, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:49
   in *(::Array{Int64,2}, ::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},1}) at ./linalg/matmul.jl:82
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:583 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: @inferred([1,2] * [3m 4m]) == [3m 4m;6m 8m]
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Int64}, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:49
   in *(::Array{Int64,2}, ::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}) at ./linalg/matmul.jl:143
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:584 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: typeof([1,2] * [3m 4m]) == Array{typeof(1 * @u_str("m")),2}
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Int64}, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:49
   in *(::Array{Int64,2}, ::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}) at ./linalg/matmul.jl:143
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:585 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: @inferred([3m 4m] * [1,2]) == [11m]
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}, ::Type{Int64}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:64
   in *(::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}, ::Array{Int64,1}) at ./linalg/matmul.jl:82
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:586 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: typeof([3m 4m] * [1,2]) == Array{typeof(1 * @u_str("m")),1}
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}, ::Type{Int64}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:64
   in *(::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}, ::Array{Int64,1}) at ./linalg/matmul.jl:82
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:587 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: @inferred([3m,4m] * [1 2]) == [3m 6m;4m 8m]
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}, ::Type{Int64}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:64
   in *(::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}, ::Array{Int64,2}) at ./linalg/matmul.jl:143
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:588 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
>> Array multiplication: Error During Test
  Test threw an exception of type MethodError
  Expression: typeof([3m,4m] * [1 2]) == Array{typeof(1 * @u_str("m")),2}
  MethodError: no method matching +(::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}, ::Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}})
  Closest candidates are:
    +(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:287
   in promote_op(::Base.LinAlg.#matprod, ::Type{Unitful.Units{(Unitful.Unit{:Meter}(0,1//1),),Unitful.Dimensions{(Unitful.Dimension{:Length}(1//1),)}}}, ::Type{Unitful.Units{(),Unitful.Dimensions{()}}}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:23
   in promote_op(::Function, ::Type{Quantity{Int64, Dimensions:{𝐋}, Units:{m}}}, ::Type{Int64}) at /home/vagrant/.julia/v0.6/Unitful/src/Promotion.jl:64
   in *(::Array{Quantity{Int64, Dimensions:{𝐋}, Units:{m}},2}, ::Array{Int64,2}) at ./linalg/matmul.jl:143
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:589 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in macro expansion; at /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl:0 [inlined]
   in macro expansion; at ./test.jl:711 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:532
   in include(::String) at ./sysimg.jl:14
   in process_options(::Base.JLOptions) at ./client.jl:271
   in _start() at ./client.jl:335
ERROR: LoadError: Some tests did not pass: 63 passed, 0 failed, 11 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:521
 in macro expansion; at ./test.jl:718 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl, in expression starting on line 489
===============================[ ERROR: Unitful ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Unitful/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Unitful had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
