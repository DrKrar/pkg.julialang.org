>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.4.5
INFO: Installing RecipesBase v0.0.6
INFO: Installing ValueHistories v0.1.0
INFO: Package database updated

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (617.859375 MB free)
Uptime: 26671.0 sec
Load Avg:  1.1240234375  0.998046875  0.9677734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1426451 s       3765 s     178218 s     702214 s         74 s
#2  3499 MHz     403924 s       1979 s      72626 s    2076338 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ValueHistories                0.1.0
3 additional packages:
 - Compat                        0.8.8
 - DataStructures                0.4.5
 - RecipesBase                   0.0.6
INFO: Testing ValueHistories
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
QHistory
    types: UInt8, String
    length: 100
Test Summary:       | Pass  Total
  [->] tst_history.jl | 1028   1028
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
Test Summary:         | Pass  Total
  [->] tst_mvhistory.jl |  538    538
   --> Baseline: 100 loops that accumulates a Float64
  0.005660 seconds (1.71 k allocations: 80.771 KB)
  0.000045 seconds (5 allocations: 176 bytes)
   --> History: 100 loops tracking accumulator as Float64
  0.012777 seconds (1.72 k allocations: 83.718 KB)
  0.000014 seconds (13 allocations: 4.391 KB)
   --> History: Converting result into arrays
  0.000033 seconds (3 allocations: 96 bytes)
  0.000031 seconds (3 allocations: 96 bytes)
   --> QHistory: 100 loops tracking accumulator as Float64
  0.011622 seconds (1.73 k allocations: 80.843 KB)
  0.000010 seconds (1 allocation: 16 bytes)
   --> QHistory: Converting result into arrays
  0.000460 seconds (1.11 k allocations: 30.016 KB)
  0.000292 seconds (1.11 k allocations: 30.016 KB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
  0.012837 seconds (2.56 k allocations: 122.545 KB)
  0.000167 seconds (633 allocations: 32.703 KB)
   --> MVHistory: Converting result into arrays
  0.015074 seconds (2.79 k allocations: 127.233 KB)
  0.000427 seconds (417 allocations: 14.938 KB)
Test Summary:      | 
  [->] bm_history.jl | No tests
INFO: ValueHistories tests passed

>>> End of log
