>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.4.2
INFO: Installing ValueHistories v0.0.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ValueHistories
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.5.0-dev+2440
Commit 2bb94d6 (2016-02-01 02:22 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing ValueHistories
[->] tst_stat_uv_history.jl
   --> VectorUnivalueHistory: Basic functions
VectorUnivalueHistory
  * types: Int64, Float64
  * length: 100
   --> VectorUnivalueHistory: Storing arbitrary types
VectorUnivalueHistory
  * types: UInt8, ASCIIString
  * length: 100
   --> QueueUnivalueHistory: Basic functions
QueueUnivalueHistory
    types: Int64, Float64
    length: 100
   --> QueueUnivalueHistory: Storing arbitrary types
QueueUnivalueHistory
    types: UInt8, ASCIIString
    length: 100
[OK] tst_stat_uv_history.jl
====================================================================
[->] tst_dyn_mv_history.jl
   --> DynMultivalueHistory: Basic functions
DynMultivalueHistory{ValueHistories.QueueUnivalueHistory{I,V}}
  :myf =>: 56 elements {Int64,Int64}
  :myint =>: 5 elements {Int64,Int64}
   --> DynMultivalueHistory: Storing arbitrary types
[OK] tst_dyn_mv_history.jl
====================================================================
[->] bm_history.jl
   --> Baseline: 100 loops that accumulates a Float64
  0.012580 seconds (1.43 k allocations: 71.925 KB)
  0.000065 seconds (305 allocations: 6.438 KB)
   --> VectorUnivalueHistory: 100 loops tracking accumulator of accumulator as Float64
  0.014585 seconds (1.38 k allocations: 66.830 KB)
  0.000083 seconds (413 allocations: 12.219 KB)
   --> VectorUnivalueHistory: Converting result into arrays
  0.000124 seconds (3 allocations: 96 bytes)
  0.000021 seconds (3 allocations: 96 bytes)
   --> QueueUnivalueHistory: 100 loops tracking accumulator of accumulator as Float64
  0.000161 seconds (401 allocations: 7.844 KB)
  0.000257 seconds (401 allocations: 7.844 KB)
   --> QueueUnivalueHistory: Converting result into arrays
  0.000079 seconds (106 allocations: 5.000 KB)
  0.000156 seconds (106 allocations: 5.000 KB)
   --> DynMultivalueHistory: 100 loops tracking accumulator as Float64 and String
  0.217696 seconds (117.73 k allocations: 5.246 MB, 3.49% gc time)
  0.000240 seconds (933 allocations: 37.344 KB)
   --> DynMultivalueHistory: Converting result into arrays
  0.078647 seconds (15.17 k allocations: 730.838 KB)
  0.000242 seconds (411 allocations: 14.563 KB)
[OK] bm_history.jl
====================================================================
INFO: ValueHistories tests passed

>>> End of log
