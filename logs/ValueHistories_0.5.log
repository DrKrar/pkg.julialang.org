>>> 'Pkg.add("ValueHistories")' log
INFO: Cloning cache of ValueHistories from https://github.com/JuliaML/ValueHistories.jl.git
INFO: Installing DataStructures v0.4.6
INFO: Installing RecipesBase v0.1.0
INFO: Installing ValueHistories v0.1.0
INFO: Package database updated

>>> 'Pkg.test("ValueHistories")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1325.9375 MB free)
Uptime: 34676.0 sec
Load Avg:  0.84375  0.95263671875  0.9443359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2007243 s       1630 s     201568 s     853377 s        135 s
#2  3500 MHz     684323 s      13216 s      98388 s    2556824 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ValueHistories                0.1.0
3 additional packages:
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - RecipesBase                   0.1.0
INFO: Testing ValueHistories
100 elements {Int64,Float64}
History
  * types: Int64, Float64
  * length: 100
History
  * types: UInt8, String
  * length: 100
100 elements {Int64,Float64}
QHistory
    types: Int64, Float64
    length: 100
QHistory
    types: UInt8, String
    length: 100
Test Summary:       | Pass  Total
  [->] tst_history.jl | 1028   1028
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
MVHistory{ValueHistories.History{I,V}}
  :myf => 56 elements {Int64,Int64}
  :myint2 => 5 elements {Int64,Int64}
  :myint => 5 elements {Int64,Int64}
Test Summary:         | Pass  Total
  [->] tst_mvhistory.jl |  538    538
   --> Baseline: 100 loops that accumulates a Float64
  0.006948 seconds (1.69 k allocations: 80.303 KB)
  0.000006 seconds (5 allocations: 176 bytes)
   --> History: 100 loops tracking accumulator as Float64
  0.008533 seconds (1.71 k allocations: 83.343 KB)
  0.000010 seconds (13 allocations: 4.391 KB)
   --> History: Converting result into arrays
  0.000020 seconds (3 allocations: 96 bytes)
  0.000015 seconds (3 allocations: 96 bytes)
   --> QHistory: 100 loops tracking accumulator as Float64
  0.008788 seconds (1.72 k allocations: 80.468 KB)
  0.000008 seconds (1 allocation: 16 bytes)
   --> QHistory: Converting result into arrays
  0.000310 seconds (1.11 k allocations: 30.016 KB)
  0.000324 seconds (1.11 k allocations: 30.016 KB)
   --> MVHistory: 100 loops tracking accumulator as Float64 and String
  0.013536 seconds (2.55 k allocations: 122.201 KB)
  0.000130 seconds (633 allocations: 32.703 KB)
   --> MVHistory: Converting result into arrays
  0.012975 seconds (3.05 k allocations: 137.858 KB)
  0.000309 seconds (417 allocations: 14.938 KB)
Test Summary:      | 
  [->] bm_history.jl | No tests
INFO: ValueHistories tests passed

>>> End of log
