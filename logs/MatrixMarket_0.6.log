>>> 'Pkg.add("MatrixMarket")' log
INFO: Cloning cache of MatrixMarket from https://github.com/JuliaSparse/MatrixMarket.jl.git
INFO: Installing MatrixMarket v0.1.0
INFO: Package database updated

>>> 'Pkg.test("MatrixMarket")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (981.5546875 MB free)
Uptime: 2212.0 sec
Load Avg:  0.95849609375  1.0654296875  0.96826171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     107487 s         63 s      17704 s      74313 s          6 s
#2  3500 MHz      26475 s         72 s       8233 s     181729 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - MatrixMarket                  0.1.0
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for MatrixMarket...
INFO: Installing GZip v0.2.20
INFO: Testing MatrixMarket
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  6687    0  6687    0     0   127k      0 --:--:-- --:--:-- --:--:--  128k100 41552    0 41552    0     0   437k      0 --:--:-- --:--:-- --:--:--  436k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 3600k  100 3600k    0     0  5191k      0 --:--:-- --:--:-- --:--:-- 5195k
SPARSKIT_drivcav_e40r0000.mtx : SparseMatrixCSC{Float64,Int64}  (17281,17281)
WARNING: conj(A::SparseMatrixCSC) is deprecated, use conj.(A) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in conj(::SparseMatrixCSC{Float64,Int64}) at ./deprecated.jl:50
 in hermitian!(::SparseMatrixCSC{Float64,Int64}) at /home/vagrant/.julia/v0.6/MatrixMarket/src/MatrixMarket.jl:146
 in mmread(::String, ::Bool) at /home/vagrant/.julia/v0.6/MatrixMarket/src/MatrixMarket.jl:96
 in macro expansion; at /home/vagrant/.julia/v0.6/MatrixMarket/test/runtests.jl:18 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/MatrixMarket/test/runtests.jl, in expression starting on line 9


PARSE ERROR
SPARSKIT_drivcav_e40r0000.mtx : OutOfMemoryError()
SimpleVector[svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1e238b)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1be7e2)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1beb18)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1ea458)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1bfed7)),svec(svec(:convert,Symbol("./sparse/sparsematrix.jl"),319,MethodInstance for convert(::Type{Array{T,2}}, ::SparseMatrixCSC{Float64,Int64}),false,false,Ptr{Void} @0x00007f97999e2734)),svec(svec(:+,Symbol("./sparse/sparsematrix.jl"),1777,nothing,false,true,Ptr{Void} @0x00007f97999e133d),svec(:hermitian!,Symbol("/home/vagrant/.julia/v0.6/MatrixMarket/src/MatrixMarket.jl"),146,MethodInstance for hermitian!(::SparseMatrixCSC{Float64,Int64}),false,false,Ptr{Void} @0x00007f97999e133d)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f97999e13c3)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1a2a13)),svec(svec(:mmread,Symbol("/home/vagrant/.julia/v0.6/MatrixMarket/src/MatrixMarket.jl"),96,MethodInstance for mmread(::String, ::Bool),false,false,Ptr{Void} @0x00007f97999d9784)),svec(svec(Symbol("macro expansion;"),Symbol("/home/vagrant/.julia/v0.6/MatrixMarket/test/runtests.jl"),18,nothing,false,true,Ptr{Void} @0x00007f97999d70c2),svec(:anonymous,Symbol("./<missing>"),-1,nothing,false,false,Ptr{Void} @0x00007f97999d70c2)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1d120b)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1ab87e)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1d1364)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1d13e9)),svec(svec(:include_from_node1,Symbol("./loading.jl"),532,MethodInstance for include_from_node1(::String),false,false,Ptr{Void} @0x00007f99a6f8fabb)),svec(svec(Symbol(""),Symbol("/home/vagrant/julia/lib/julia/sys.so"),-1,MethodInstance for include_from_node1(::String),true,false,Ptr{Void} @0x00007f99a6f8fcfc)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1a2a13)),svec(svec(:include,Symbol("./sysimg.jl"),14,MethodInstance for include(::String),false,false,Ptr{Void} @0x00007f99a6e89a22)),svec(svec(Symbol(""),Symbol("/home/vagrant/julia/lib/julia/sys.so"),-1,MethodInstance for include(::String),true,false,Ptr{Void} @0x00007f99a6e89a7c)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1a2a13)),svec(svec(:process_options,Symbol("./client.jl"),268,MethodInstance for process_options(::Base.JLOptions),false,false,Ptr{Void} @0x00007f99a6fb2dc3)),svec(svec(:_start,Symbol("./client.jl"),332,MethodInstance for _start(),false,false,Ptr{Void} @0x00007f99a6fb4874)),svec(svec(Symbol(""),Symbol("/home/vagrant/julia/lib/julia/sys.so"),-1,MethodInstance for _start(),true,false,Ptr{Void} @0x00007f99a6fb5319)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ac1a2a13)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x0000000000401bce)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00000000004014a7)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00007f99ab798f45)),svec(svec(Symbol(""),Symbol(""),-1,nothing,true,false,Ptr{Void} @0x00000000004014ed))]


Summary: 1 parse errors in 1 matrices 
============================[ ERROR: MatrixMarket ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MatrixMarket/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing GZip v0.2.20
ERROR: MatrixMarket had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
