>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1002.19921875 MB free)
Uptime: 11395.0 sec
Load Avg:  1.0302734375  1.0732421875  1.05029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     637026 s       3735 s      65280 s     302446 s          5 s
#2  3499 MHz     195274 s       2416 s      29875 s     888425 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2713	 ParSpMatVec=0.0284	 speedup=9.5506
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2713	 ParSpMatVec=0.0103	 speedup=26.4356
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2713	 ParSpMatVec=0.0119	 speedup=22.8202
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2713	 ParSpMatVec=0.0062	 speedup=43.5670
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2713	 ParSpMatVec=0.0100	 speedup=27.0635
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1968	 ParSpMatVec=0.0488	 speedup=4.0351
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1968	 ParSpMatVec=0.0139	 speedup=14.1798
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1968	 ParSpMatVec=0.0119	 speedup=16.5206
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1968	 ParSpMatVec=0.0108	 speedup=18.1652
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1968	 ParSpMatVec=0.0112	 speedup=17.5493

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0557	 ParSpMatVec=0.0321	 speedup=1.7342
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0557	 ParSpMatVec=0.0135	 speedup=4.1188
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0557	 ParSpMatVec=0.0096	 speedup=5.8079
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0557	 ParSpMatVec=0.0111	 speedup=5.0112
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0557	 ParSpMatVec=0.0112	 speedup=4.9780

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0624	 ParSpMatVec=0.0378	 speedup=1.6494
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0624	 ParSpMatVec=0.0021	 speedup=29.3213
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0624	 ParSpMatVec=0.0018	 speedup=35.0283
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0624	 ParSpMatVec=0.0022	 speedup=28.2439
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0624	 ParSpMatVec=0.0015	 speedup=41.7779

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0558	 speedup=0.1578
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0037	 speedup=2.3516
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0063	 speedup=1.3905
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0307	 speedup=0.2867
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0063	 speedup=1.3947

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0863	 ParSpMatVec=0.0731	 speedup=1.1796
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0863	 ParSpMatVec=0.0041	 speedup=20.9277
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0863	 ParSpMatVec=0.0030	 speedup=29.0924
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0863	 ParSpMatVec=0.0028	 speedup=31.0250
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0863	 ParSpMatVec=0.0030	 speedup=29.0125

INFO: ParSpMatVec tests passed

>>> End of log
