>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1032.98828125 MB free)
Uptime: 14594.0 sec
Load Avg:  0.9462890625  1.04052734375  1.0400390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     881020 s       3375 s      75380 s     318121 s         24 s
#2  3500 MHz     236884 s       3840 s      36823 s    1152070 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2261	 ParSpMatVec=0.0177	 speedup=12.7875
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2261	 ParSpMatVec=0.0094	 speedup=24.0025
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2261	 ParSpMatVec=0.0145	 speedup=15.6147
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2261	 ParSpMatVec=0.0119	 speedup=19.0545
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2261	 ParSpMatVec=0.0068	 speedup=33.2204
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1961	 ParSpMatVec=0.0335	 speedup=5.8623
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1961	 ParSpMatVec=0.0142	 speedup=13.7723
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1961	 ParSpMatVec=0.0167	 speedup=11.7191
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1961	 ParSpMatVec=0.0134	 speedup=14.5955
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1961	 ParSpMatVec=0.0159	 speedup=12.3442

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0452	 ParSpMatVec=0.0306	 speedup=1.4752
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0452	 ParSpMatVec=0.0121	 speedup=3.7313
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0452	 ParSpMatVec=0.0246	 speedup=1.8335
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0452	 ParSpMatVec=0.0174	 speedup=2.5932
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0452	 ParSpMatVec=0.0154	 speedup=2.9344

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0561	 ParSpMatVec=0.0663	 speedup=0.8465
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0561	 ParSpMatVec=0.0023	 speedup=24.1408
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0561	 ParSpMatVec=0.0040	 speedup=14.0663
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0561	 ParSpMatVec=0.0030	 speedup=18.9486
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0561	 ParSpMatVec=0.0025	 speedup=22.8390

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0614	 speedup=0.1395
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0034	 speedup=2.5144
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0021	 speedup=4.1259
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0049	 speedup=1.7378
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0021	 speedup=3.9902

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0803	 ParSpMatVec=0.0623	 speedup=1.2886
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0803	 ParSpMatVec=0.0037	 speedup=21.8856
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0803	 ParSpMatVec=0.0020	 speedup=39.9875
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0803	 ParSpMatVec=0.0032	 speedup=25.0804
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0803	 ParSpMatVec=0.0024	 speedup=33.5760

INFO: ParSpMatVec tests passed

>>> End of log
