>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.7
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1033.2109375 MB free)
Uptime: 13040.0 sec
Load Avg:  1.0029296875  0.994140625  0.970703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     808176 s       4574 s      78786 s     253781 s         26 s
#2  3500 MHz     215736 s       1800 s      37736 s    1021339 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.11.0
 - SHA                           0.3.0
 - URIParser                     0.1.7
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2789	 ParSpMatVec=0.0164	 speedup=17.0291
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2789	 ParSpMatVec=0.0082	 speedup=33.8462
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2789	 ParSpMatVec=0.0119	 speedup=23.3865
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2789	 ParSpMatVec=0.0099	 speedup=28.2126
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2789	 ParSpMatVec=0.0099	 speedup=28.3008
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1923	 ParSpMatVec=0.0331	 speedup=5.8155
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1923	 ParSpMatVec=0.0118	 speedup=16.2350
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1923	 ParSpMatVec=0.0146	 speedup=13.2182
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1923	 ParSpMatVec=0.0133	 speedup=14.4637
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1923	 ParSpMatVec=0.0131	 speedup=14.7306

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0533	 ParSpMatVec=0.0309	 speedup=1.7285
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0533	 ParSpMatVec=0.0117	 speedup=4.5711
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0533	 ParSpMatVec=0.0124	 speedup=4.2868
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0533	 ParSpMatVec=0.0126	 speedup=4.2350
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0533	 ParSpMatVec=0.0115	 speedup=4.6329

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0724	 ParSpMatVec=0.0589	 speedup=1.2287
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0724	 ParSpMatVec=0.0024	 speedup=29.6198
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0724	 ParSpMatVec=0.0030	 speedup=24.5190
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0724	 ParSpMatVec=0.0384	 speedup=1.8866
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0724	 ParSpMatVec=0.0016	 speedup=45.8700

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0575	 speedup=0.1134
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0038	 speedup=1.7025
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0018	 speedup=3.6364
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0037	 speedup=1.7475
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0026	 speedup=2.4831

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0841	 ParSpMatVec=0.0679	 speedup=1.2398
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0841	 ParSpMatVec=0.0037	 speedup=22.7622
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0841	 ParSpMatVec=0.0042	 speedup=19.9185
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0841	 ParSpMatVec=0.0030	 speedup=28.0598
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0841	 ParSpMatVec=0.0033	 speedup=25.5470

INFO: ParSpMatVec tests passed

>>> End of log
