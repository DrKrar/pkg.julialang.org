>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1027.44140625 MB free)
Uptime: 12192.0 sec
Load Avg:  1.00634765625  1.04052734375  1.0029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     671910 s         67 s      65199 s     356456 s         19 s
#2  3500 MHz     201178 s       6784 s      33996 s     951424 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2830	 ParSpMatVec=0.0285	 speedup=9.9411
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2830	 ParSpMatVec=0.0098	 speedup=28.8792
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2830	 ParSpMatVec=0.0102	 speedup=27.8692
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2830	 ParSpMatVec=0.0067	 speedup=42.0708
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2830	 ParSpMatVec=0.0109	 speedup=26.0535
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1960	 ParSpMatVec=0.0879	 speedup=2.2284
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1960	 ParSpMatVec=0.0118	 speedup=16.5649
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1960	 ParSpMatVec=0.0080	 speedup=24.4120
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1960	 ParSpMatVec=0.0169	 speedup=11.6083
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1960	 ParSpMatVec=0.0185	 speedup=10.5828

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0483	 ParSpMatVec=0.0314	 speedup=1.5382
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0483	 ParSpMatVec=0.0149	 speedup=3.2379
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0483	 ParSpMatVec=0.0075	 speedup=6.4269
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0483	 ParSpMatVec=0.0125	 speedup=3.8772
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0483	 ParSpMatVec=0.0209	 speedup=2.3078

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0907	 ParSpMatVec=0.0686	 speedup=1.3218
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0907	 ParSpMatVec=0.0031	 speedup=28.9460
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0907	 ParSpMatVec=0.0019	 speedup=48.3850
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0907	 ParSpMatVec=0.0026	 speedup=34.2950
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0907	 ParSpMatVec=0.0047	 speedup=19.2368

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0068	 ParSpMatVec=0.0678	 speedup=0.1003
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0068	 ParSpMatVec=0.0029	 speedup=2.3680
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0068	 ParSpMatVec=0.0052	 speedup=1.2978
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0068	 ParSpMatVec=0.0047	 speedup=1.4425
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0068	 ParSpMatVec=0.0060	 speedup=1.1267

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0886	 ParSpMatVec=0.0631	 speedup=1.4043
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0886	 ParSpMatVec=0.0058	 speedup=15.3540
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0886	 ParSpMatVec=0.0023	 speedup=38.4207
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0886	 ParSpMatVec=0.0024	 speedup=36.7710
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0886	 ParSpMatVec=0.0780	 speedup=1.1359

INFO: ParSpMatVec tests passed

>>> End of log
