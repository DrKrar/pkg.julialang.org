>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.2
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (859.25390625 MB free)
Uptime: 10745.0 sec
Load Avg:  1.08544921875  1.09912109375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3513 MHz     572788 s         65 s      67746 s     294430 s         19 s
#2  3513 MHz     174719 s       6134 s      32184 s     828495 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.2
 - Compat                        0.8.6
 - SHA                           0.2.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2519	 ParSpMatVec=0.0185	 speedup=13.5888
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2519	 ParSpMatVec=0.0087	 speedup=28.9988
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2519	 ParSpMatVec=0.0117	 speedup=21.5268
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2519	 ParSpMatVec=0.0103	 speedup=24.3865
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2519	 ParSpMatVec=0.0090	 speedup=28.1013
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1896	 ParSpMatVec=0.0329	 speedup=5.7557
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1896	 ParSpMatVec=0.0124	 speedup=15.3459
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1896	 ParSpMatVec=0.0156	 speedup=12.1598
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1896	 ParSpMatVec=0.0151	 speedup=12.5352
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1896	 ParSpMatVec=0.0098	 speedup=19.2877

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0460	 ParSpMatVec=0.0198	 speedup=2.3212
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0460	 ParSpMatVec=0.0139	 speedup=3.3036
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0460	 ParSpMatVec=0.0127	 speedup=3.6297
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0460	 ParSpMatVec=0.0118	 speedup=3.9017
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0460	 ParSpMatVec=0.0108	 speedup=4.2501

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0684	 ParSpMatVec=0.0595	 speedup=1.1501
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0684	 ParSpMatVec=0.0022	 speedup=30.8250
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0684	 ParSpMatVec=0.0018	 speedup=37.3087
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0684	 ParSpMatVec=0.0016	 speedup=42.2021
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0684	 ParSpMatVec=0.0019	 speedup=35.6814

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0073	 ParSpMatVec=0.0616	 speedup=0.1190
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0073	 ParSpMatVec=0.0046	 speedup=1.5953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0073	 ParSpMatVec=0.0021	 speedup=3.4875
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0073	 ParSpMatVec=0.0030	 speedup=2.4747
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0073	 ParSpMatVec=0.0022	 speedup=3.2958

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0478	 ParSpMatVec=0.0382	 speedup=1.2540
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0478	 ParSpMatVec=0.0022	 speedup=22.2410
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0478	 ParSpMatVec=0.0019	 speedup=25.3593
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0478	 ParSpMatVec=0.0022	 speedup=22.1566
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0478	 ParSpMatVec=0.0022	 speedup=22.0405

INFO: ParSpMatVec tests passed

>>> End of log
