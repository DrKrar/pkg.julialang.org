>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1036.15234375 MB free)
Uptime: 14529.0 sec
Load Avg:  1.0029296875  1.0146484375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     849831 s       3523 s      80231 s     340966 s         16 s
#2  3499 MHz     257484 s       3191 s      40466 s    1118330 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3017	 ParSpMatVec=0.0263	 speedup=11.4944
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3017	 ParSpMatVec=0.0103	 speedup=29.3344
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3017	 ParSpMatVec=0.0154	 speedup=19.5524
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3017	 ParSpMatVec=0.0089	 speedup=34.0688
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3017	 ParSpMatVec=0.0087	 speedup=34.5221
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2202	 ParSpMatVec=0.0506	 speedup=4.3503
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2202	 ParSpMatVec=0.0137	 speedup=16.1334
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2202	 ParSpMatVec=0.0188	 speedup=11.7409
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2202	 ParSpMatVec=0.0128	 speedup=17.1490
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2202	 ParSpMatVec=0.0193	 speedup=11.4180

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0603	 ParSpMatVec=0.0349	 speedup=1.7268
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0603	 ParSpMatVec=0.0141	 speedup=4.2773
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0603	 ParSpMatVec=0.0163	 speedup=3.6998
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0603	 ParSpMatVec=0.0152	 speedup=3.9700
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0603	 ParSpMatVec=0.0121	 speedup=4.9824

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0821	 ParSpMatVec=0.0720	 speedup=1.1393
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0821	 ParSpMatVec=0.0029	 speedup=28.6837
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0821	 ParSpMatVec=0.0048	 speedup=17.1497
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0821	 ParSpMatVec=0.0021	 speedup=38.3508
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0821	 ParSpMatVec=0.0017	 speedup=48.1865

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0671	 speedup=0.1176
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0040	 speedup=1.9803
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0032	 speedup=2.4891
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0028	 speedup=2.8652
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0036	 speedup=2.2003

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0813	 ParSpMatVec=0.0676	 speedup=1.2029
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0813	 ParSpMatVec=0.0040	 speedup=20.2798
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0813	 ParSpMatVec=0.0021	 speedup=38.5783
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0813	 ParSpMatVec=0.0040	 speedup=20.2317
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0813	 ParSpMatVec=0.0036	 speedup=22.7818

INFO: ParSpMatVec tests passed

>>> End of log
