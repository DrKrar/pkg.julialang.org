>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1035.3515625 MB free)
Uptime: 14738.0 sec
Load Avg:  1.05908203125  1.044921875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz     835092 s       5799 s      70920 s     383062 s         25 s
#2  3502 MHz     258556 s         40 s      36994 s    1141451 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.20.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1757	 ParSpMatVec=0.0169	 speedup=10.3766
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1757	 ParSpMatVec=0.0084	 speedup=20.8852
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1757	 ParSpMatVec=0.0113	 speedup=15.6180
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1757	 ParSpMatVec=0.0123	 speedup=14.3350
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1757	 ParSpMatVec=0.0137	 speedup=12.8361
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1493	 ParSpMatVec=0.0495	 speedup=3.0142
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1493	 ParSpMatVec=0.0128	 speedup=11.6801
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1493	 ParSpMatVec=0.0186	 speedup=8.0358
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1493	 ParSpMatVec=0.0125	 speedup=11.9850
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1493	 ParSpMatVec=0.0129	 speedup=11.5819

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0591	 ParSpMatVec=0.0290	 speedup=2.0386
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0591	 ParSpMatVec=0.0101	 speedup=5.8400
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0591	 ParSpMatVec=0.0131	 speedup=4.5296
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0591	 ParSpMatVec=0.0134	 speedup=4.4143
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0591	 ParSpMatVec=0.0108	 speedup=5.4916

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0659	 ParSpMatVec=0.0605	 speedup=1.0890
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0659	 ParSpMatVec=0.0027	 speedup=24.3690
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0659	 ParSpMatVec=0.0018	 speedup=35.7314
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0659	 ParSpMatVec=0.0038	 speedup=17.1822
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0659	 ParSpMatVec=0.0018	 speedup=36.1032

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0083	 ParSpMatVec=0.0725	 speedup=0.1147
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0083	 ParSpMatVec=0.0036	 speedup=2.3147
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0083	 ParSpMatVec=0.0020	 speedup=4.1858
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0083	 ParSpMatVec=0.0022	 speedup=3.7611
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0083	 ParSpMatVec=0.0026	 speedup=3.2083

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0800	 ParSpMatVec=0.0416	 speedup=1.9254
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0800	 ParSpMatVec=0.0033	 speedup=24.1038
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0800	 ParSpMatVec=0.0015	 speedup=53.4044
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0800	 ParSpMatVec=0.0035	 speedup=22.6552
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0800	 ParSpMatVec=0.0028	 speedup=28.8888

INFO: ParSpMatVec tests passed

>>> End of log
