>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1047.91015625 MB free)
Uptime: 15039.0 sec
Load Avg:  0.99560546875  1.0146484375  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     856218 s       6242 s      90502 s     370988 s         22 s
#2  3496 MHz     255999 s        238 s      40802 s    1173681 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2935	 ParSpMatVec=0.0275	 speedup=10.6600
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2935	 ParSpMatVec=0.0082	 speedup=35.7645
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2935	 ParSpMatVec=0.0116	 speedup=25.2864
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2935	 ParSpMatVec=0.0103	 speedup=28.3974
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2935	 ParSpMatVec=0.0128	 speedup=22.9804
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2189	 ParSpMatVec=0.0542	 speedup=4.0368
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2189	 ParSpMatVec=0.0155	 speedup=14.1636
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2189	 ParSpMatVec=0.0155	 speedup=14.0928
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2189	 ParSpMatVec=0.0141	 speedup=15.5672
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2189	 ParSpMatVec=0.0144	 speedup=15.1484

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0488	 ParSpMatVec=0.0323	 speedup=1.5116
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0488	 ParSpMatVec=0.0131	 speedup=3.7287
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0488	 ParSpMatVec=0.0151	 speedup=3.2406
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0488	 ParSpMatVec=0.0144	 speedup=3.3930
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0488	 ParSpMatVec=0.0134	 speedup=3.6463

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0789	 ParSpMatVec=0.0654	 speedup=1.2074
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0789	 ParSpMatVec=0.0025	 speedup=32.0362
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0789	 ParSpMatVec=0.0033	 speedup=24.2746
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0789	 ParSpMatVec=0.0034	 speedup=22.9692
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0789	 ParSpMatVec=0.0025	 speedup=31.7718

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0094	 ParSpMatVec=0.0695	 speedup=0.1347
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0094	 ParSpMatVec=0.0044	 speedup=2.1358
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0094	 ParSpMatVec=0.0043	 speedup=2.1762
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0094	 ParSpMatVec=0.0026	 speedup=3.5504
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0094	 ParSpMatVec=0.0030	 speedup=3.1578

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0822	 ParSpMatVec=0.0683	 speedup=1.2030
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0822	 ParSpMatVec=0.0037	 speedup=21.9671
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0822	 ParSpMatVec=0.0025	 speedup=33.0876
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0822	 ParSpMatVec=0.0054	 speedup=15.3180
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0822	 ParSpMatVec=0.0025	 speedup=32.9554

INFO: ParSpMatVec tests passed

>>> End of log
