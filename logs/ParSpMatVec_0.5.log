>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.1
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.0
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-rc0+146
Commit 37e6397 (2016-08-03 00:47 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (860.16796875 MB free)
Uptime: 12185.0 sec
Load Avg:  1.05322265625  1.1044921875  1.052734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     607425 s        102 s      65106 s     382467 s         16 s
#2  3504 MHz     266278 s       6104 s      38102 s     862068 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.1
 - Compat                        0.8.6
 - SHA                           0.2.0
 - URIParser                     0.1.5
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2083	 ParSpMatVec=0.0277	 speedup=7.5266
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2083	 ParSpMatVec=0.0071	 speedup=29.2552
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2083	 ParSpMatVec=0.0126	 speedup=16.4762
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2083	 ParSpMatVec=0.0082	 speedup=25.5460
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2083	 ParSpMatVec=0.0095	 speedup=22.0162
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2087	 ParSpMatVec=0.0574	 speedup=3.6382
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2087	 ParSpMatVec=0.0098	 speedup=21.2230
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2087	 ParSpMatVec=0.0135	 speedup=15.5126
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2087	 ParSpMatVec=0.0104	 speedup=20.1137
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2087	 ParSpMatVec=0.0138	 speedup=15.1495

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0727	 ParSpMatVec=0.0226	 speedup=3.2167
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0727	 ParSpMatVec=0.0154	 speedup=4.7323
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0727	 ParSpMatVec=0.0141	 speedup=5.1690
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0727	 ParSpMatVec=0.0117	 speedup=6.1954
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0727	 ParSpMatVec=0.0136	 speedup=5.3394

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0560	 ParSpMatVec=0.0542	 speedup=1.0334
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0560	 ParSpMatVec=0.0025	 speedup=22.1234
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0560	 ParSpMatVec=0.0158	 speedup=3.5376
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0560	 ParSpMatVec=0.0019	 speedup=29.6599
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0560	 ParSpMatVec=0.0018	 speedup=30.5310

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0095	 ParSpMatVec=0.0753	 speedup=0.1262
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0095	 ParSpMatVec=0.0051	 speedup=1.8659
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0095	 ParSpMatVec=0.0020	 speedup=4.8501
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0095	 ParSpMatVec=0.0032	 speedup=2.9262
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0095	 ParSpMatVec=0.0211	 speedup=0.4511

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0902	 ParSpMatVec=0.0748	 speedup=1.2059
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0902	 ParSpMatVec=0.0034	 speedup=26.6823
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0902	 ParSpMatVec=0.0022	 speedup=40.7164
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0902	 ParSpMatVec=0.0029	 speedup=31.0644
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0902	 ParSpMatVec=0.0039	 speedup=23.2549

INFO: ParSpMatVec tests passed

>>> End of log
