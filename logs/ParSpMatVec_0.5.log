>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-rc4+0
Commit 9c76c3e (2016-09-09 01:43 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (990.86328125 MB free)
Uptime: 10381.0 sec
Load Avg:  1.0966796875  1.1083984375  1.0380859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     562063 s       5030 s      60557 s     266642 s         17 s
#2  3500 MHz     188955 s       2170 s      32846 s     777870 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.1
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1732	 ParSpMatVec=0.0267	 speedup=6.4830
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1732	 ParSpMatVec=0.0088	 speedup=19.6447
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1732	 ParSpMatVec=0.0096	 speedup=18.1313
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1732	 ParSpMatVec=0.0105	 speedup=16.5279
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1732	 ParSpMatVec=0.0070	 speedup=24.6934
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2177	 ParSpMatVec=0.0507	 speedup=4.2943
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2177	 ParSpMatVec=0.0125	 speedup=17.4595
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2177	 ParSpMatVec=0.0113	 speedup=19.2739
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2177	 ParSpMatVec=0.0129	 speedup=16.8558
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2177	 ParSpMatVec=0.0098	 speedup=22.3222

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0506	 ParSpMatVec=0.0335	 speedup=1.5093
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0506	 ParSpMatVec=0.0141	 speedup=3.5815
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0506	 ParSpMatVec=0.0175	 speedup=2.8912
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0506	 ParSpMatVec=0.0126	 speedup=4.0288
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0506	 ParSpMatVec=0.0127	 speedup=3.9933

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0576	 ParSpMatVec=0.0481	 speedup=1.1977
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0576	 ParSpMatVec=0.0019	 speedup=30.8654
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0576	 ParSpMatVec=0.0020	 speedup=28.7959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0576	 ParSpMatVec=0.0011	 speedup=53.4426
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0576	 ParSpMatVec=0.0013	 speedup=42.6451

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0085	 ParSpMatVec=0.0387	 speedup=0.2196
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0085	 ParSpMatVec=0.0038	 speedup=2.2429
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0085	 ParSpMatVec=0.0019	 speedup=4.4086
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0085	 ParSpMatVec=0.0036	 speedup=2.3605
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0085	 ParSpMatVec=0.0026	 speedup=3.3301

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0608	 ParSpMatVec=0.0489	 speedup=1.2450
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0608	 ParSpMatVec=0.0041	 speedup=14.6845
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0608	 ParSpMatVec=0.0023	 speedup=26.5883
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0608	 ParSpMatVec=0.0025	 speedup=24.4755
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0608	 ParSpMatVec=0.0016	 speedup=38.6066

INFO: ParSpMatVec tests passed

>>> End of log
