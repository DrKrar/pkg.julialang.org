>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1020.59765625 MB free)
Uptime: 11301.0 sec
Load Avg:  1.087890625  1.1376953125  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     555790 s       1834 s      54556 s     370114 s         24 s
#2  3496 MHz     187302 s       4492 s      28757 s     867184 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1909	 ParSpMatVec=0.0198	 speedup=9.6617
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1909	 ParSpMatVec=0.0083	 speedup=22.9441
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1909	 ParSpMatVec=0.0113	 speedup=16.9431
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1909	 ParSpMatVec=0.0081	 speedup=23.4607
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1909	 ParSpMatVec=0.0084	 speedup=22.8492
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2090	 ParSpMatVec=0.0542	 speedup=3.8556
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2090	 ParSpMatVec=0.0145	 speedup=14.4293
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2090	 ParSpMatVec=0.0149	 speedup=13.9864
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2090	 ParSpMatVec=0.0134	 speedup=15.6180
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2090	 ParSpMatVec=0.0140	 speedup=14.9395

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0614	 ParSpMatVec=0.0315	 speedup=1.9524
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0614	 ParSpMatVec=0.0138	 speedup=4.4571
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0614	 ParSpMatVec=0.0147	 speedup=4.1736
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0614	 ParSpMatVec=0.0146	 speedup=4.2185
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0614	 ParSpMatVec=0.0108	 speedup=5.6745

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0735	 ParSpMatVec=0.0624	 speedup=1.1784
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0735	 ParSpMatVec=0.0019	 speedup=38.3943
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0735	 ParSpMatVec=0.0012	 speedup=60.9357
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0735	 ParSpMatVec=0.0015	 speedup=50.4929
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0735	 ParSpMatVec=0.0018	 speedup=41.2838

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0095	 ParSpMatVec=0.0476	 speedup=0.1989
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0095	 ParSpMatVec=0.0034	 speedup=2.8003
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0095	 ParSpMatVec=0.0018	 speedup=5.1948
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0095	 ParSpMatVec=0.0022	 speedup=4.3738
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0095	 ParSpMatVec=0.0024	 speedup=4.0306

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0840	 ParSpMatVec=0.0763	 speedup=1.1003
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0840	 ParSpMatVec=0.0039	 speedup=21.6105
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0840	 ParSpMatVec=0.0047	 speedup=17.7770
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0840	 ParSpMatVec=0.0024	 speedup=35.5351
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0840	 ParSpMatVec=0.0029	 speedup=29.0098

INFO: ParSpMatVec tests passed

>>> End of log
