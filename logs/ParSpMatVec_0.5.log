>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:532
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+5146
Commit 3e1878b* (2016-07-04 02:26 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2135	 ParSpMatVec=0.0195	 speedup=10.9650
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2135	 ParSpMatVec=0.0094	 speedup=22.7428
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2135	 ParSpMatVec=0.0159	 speedup=13.4290
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2135	 ParSpMatVec=0.0085	 speedup=25.0156
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2135	 ParSpMatVec=0.0090	 speedup=23.8383
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2145	 ParSpMatVec=0.0552	 speedup=3.8886
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2145	 ParSpMatVec=0.0134	 speedup=16.0506
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2145	 ParSpMatVec=0.0146	 speedup=14.6944
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2145	 ParSpMatVec=0.0135	 speedup=15.8704
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2145	 ParSpMatVec=0.0169	 speedup=12.6554

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0708	 ParSpMatVec=0.0340	 speedup=2.0822
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0708	 ParSpMatVec=0.0138	 speedup=5.1275
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0708	 ParSpMatVec=0.0168	 speedup=4.2286
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0708	 ParSpMatVec=0.0137	 speedup=5.1780
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0708	 ParSpMatVec=0.0137	 speedup=5.1777

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1096	 ParSpMatVec=0.0453	 speedup=2.4217
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1096	 ParSpMatVec=0.0022	 speedup=49.4150
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1096	 ParSpMatVec=0.0037	 speedup=29.7470
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1096	 ParSpMatVec=0.0020	 speedup=54.3673
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1096	 ParSpMatVec=0.0019	 speedup=58.6451

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0539	 speedup=0.1461
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0036	 speedup=2.2048
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0016	 speedup=5.0196
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0035	 speedup=2.2444
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0028	 speedup=2.7707

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1467	 ParSpMatVec=0.0515	 speedup=2.8516
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1467	 ParSpMatVec=0.0037	 speedup=40.0765
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1467	 ParSpMatVec=0.0040	 speedup=36.9574
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1467	 ParSpMatVec=0.0028	 speedup=52.5737
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1467	 ParSpMatVec=0.0025	 speedup=59.0557

INFO: ParSpMatVec tests passed

>>> End of log
