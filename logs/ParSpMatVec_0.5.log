>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1051.80859375 MB free)
Uptime: 14749.0 sec
Load Avg:  1.021484375  1.05322265625  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     811714 s       3966 s      67082 s     400671 s         21 s
#2  3500 MHz     245246 s       2965 s      37286 s    1159589 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.20.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2918	 ParSpMatVec=0.0165	 speedup=17.7260
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2918	 ParSpMatVec=0.0087	 speedup=33.5162
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2918	 ParSpMatVec=0.0119	 speedup=24.5311
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2918	 ParSpMatVec=0.0132	 speedup=22.0306
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2918	 ParSpMatVec=0.0128	 speedup=22.8103
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2337	 ParSpMatVec=0.0507	 speedup=4.6090
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2337	 ParSpMatVec=0.0135	 speedup=17.2866
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2337	 ParSpMatVec=0.0170	 speedup=13.7389
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2337	 ParSpMatVec=0.0132	 speedup=17.6378
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2337	 ParSpMatVec=0.0142	 speedup=16.5004

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0579	 ParSpMatVec=0.0312	 speedup=1.8531
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0579	 ParSpMatVec=0.0126	 speedup=4.5769
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0579	 ParSpMatVec=0.0164	 speedup=3.5328
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0579	 ParSpMatVec=0.0116	 speedup=5.0053
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0579	 ParSpMatVec=0.0133	 speedup=4.3600

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0626	 ParSpMatVec=0.0577	 speedup=1.0861
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0626	 ParSpMatVec=0.0028	 speedup=22.5993
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0626	 ParSpMatVec=0.0024	 speedup=26.0494
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0626	 ParSpMatVec=0.0016	 speedup=40.3553
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0626	 ParSpMatVec=0.0017	 speedup=36.5612

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0111	 ParSpMatVec=0.0381	 speedup=0.2918
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0111	 ParSpMatVec=0.0028	 speedup=3.9948
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0111	 ParSpMatVec=0.0018	 speedup=6.2519
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0111	 ParSpMatVec=0.0020	 speedup=5.4490
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0111	 ParSpMatVec=0.0020	 speedup=5.5619

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0485	 ParSpMatVec=0.0385	 speedup=1.2612
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0485	 ParSpMatVec=0.0033	 speedup=14.5226
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0485	 ParSpMatVec=0.0031	 speedup=15.8937
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0485	 ParSpMatVec=0.0026	 speedup=18.9124
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0485	 ParSpMatVec=0.0032	 speedup=15.3423

INFO: ParSpMatVec tests passed

>>> End of log
