>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1038.70703125 MB free)
Uptime: 14712.0 sec
Load Avg:  1.07470703125  1.09423828125  1.072265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     831018 s       1210 s      91349 s     376763 s         20 s
#2  3500 MHz     273457 s       5262 s      41414 s    1115856 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.20.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2574	 ParSpMatVec=0.0262	 speedup=9.8103
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2574	 ParSpMatVec=0.0102	 speedup=25.1460
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2574	 ParSpMatVec=0.0108	 speedup=23.7404
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2574	 ParSpMatVec=0.0119	 speedup=21.6439
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2574	 ParSpMatVec=0.0155	 speedup=16.6359
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2264	 ParSpMatVec=0.0501	 speedup=4.5156
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2264	 ParSpMatVec=0.0142	 speedup=15.9162
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2264	 ParSpMatVec=0.0135	 speedup=16.8229
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2264	 ParSpMatVec=0.0129	 speedup=17.5214
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2264	 ParSpMatVec=0.0130	 speedup=17.3529

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0602	 ParSpMatVec=0.0315	 speedup=1.9125
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0602	 ParSpMatVec=0.0125	 speedup=4.8202
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0602	 ParSpMatVec=0.0144	 speedup=4.1737
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0602	 ParSpMatVec=0.0123	 speedup=4.8858
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0602	 ParSpMatVec=0.0132	 speedup=4.5435

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0684	 ParSpMatVec=0.0564	 speedup=1.2127
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0684	 ParSpMatVec=0.0024	 speedup=28.3934
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0684	 ParSpMatVec=0.0021	 speedup=31.8694
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0684	 ParSpMatVec=0.0012	 speedup=55.2466
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0684	 ParSpMatVec=0.0012	 speedup=58.1100

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0091	 ParSpMatVec=0.0423	 speedup=0.2140
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0091	 ParSpMatVec=0.0036	 speedup=2.5444
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0091	 ParSpMatVec=0.0029	 speedup=3.0808
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0091	 ParSpMatVec=0.0045	 speedup=2.0215
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0091	 ParSpMatVec=0.0030	 speedup=3.0691

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0730	 ParSpMatVec=0.0687	 speedup=1.0620
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0730	 ParSpMatVec=0.0047	 speedup=15.3697
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0730	 ParSpMatVec=0.0059	 speedup=12.2765
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0730	 ParSpMatVec=0.0047	 speedup=15.6380
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0730	 ParSpMatVec=0.0033	 speedup=21.9650

INFO: ParSpMatVec tests passed

>>> End of log
