>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1035.5703125 MB free)
Uptime: 13657.0 sec
Load Avg:  1.00537109375  1.017578125  0.98046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     854280 s       6524 s      75870 s     260547 s         31 s
#2  3500 MHz     229997 s         96 s      38298 s    1067667 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2612	 ParSpMatVec=0.0270	 speedup=9.6569
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2612	 ParSpMatVec=0.0087	 speedup=30.1856
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2612	 ParSpMatVec=0.0142	 speedup=18.3991
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2612	 ParSpMatVec=0.0074	 speedup=35.4300
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2612	 ParSpMatVec=0.0093	 speedup=28.0706
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1334	 ParSpMatVec=0.0348	 speedup=3.8297
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1334	 ParSpMatVec=0.0139	 speedup=9.6020
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1334	 ParSpMatVec=0.0144	 speedup=9.2573
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1334	 ParSpMatVec=0.0120	 speedup=11.1260
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1334	 ParSpMatVec=0.0113	 speedup=11.7937

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0538	 ParSpMatVec=0.0309	 speedup=1.7403
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0538	 ParSpMatVec=0.0130	 speedup=4.1342
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0538	 ParSpMatVec=0.0151	 speedup=3.5749
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0538	 ParSpMatVec=0.0123	 speedup=4.3623
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0538	 ParSpMatVec=0.0127	 speedup=4.2283

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0693	 ParSpMatVec=0.0550	 speedup=1.2598
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0693	 ParSpMatVec=0.0023	 speedup=29.8548
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0693	 ParSpMatVec=0.0022	 speedup=32.2133
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0693	 ParSpMatVec=0.0015	 speedup=44.9725
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0693	 ParSpMatVec=0.0015	 speedup=45.3443

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0590	 speedup=0.1345
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0037	 speedup=2.1580
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0020	 speedup=3.9431
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0031	 speedup=2.5665
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0021	 speedup=3.7062

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0735	 ParSpMatVec=0.0635	 speedup=1.1586
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0735	 ParSpMatVec=0.0042	 speedup=17.6440
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0735	 ParSpMatVec=0.0022	 speedup=33.9016
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0735	 ParSpMatVec=0.0056	 speedup=13.1154
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0735	 ParSpMatVec=0.0029	 speedup=25.7867

INFO: ParSpMatVec tests passed

>>> End of log
