>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:532
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+4951
Commit 5d524ec* (2016-06-27 12:38 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1843	 ParSpMatVec=0.0198	 speedup=9.2988
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1843	 ParSpMatVec=0.0092	 speedup=20.0783
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1843	 ParSpMatVec=0.0107	 speedup=17.2432
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1843	 ParSpMatVec=0.0078	 speedup=23.6212
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1843	 ParSpMatVec=0.0114	 speedup=16.1625
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2874	 ParSpMatVec=0.0552	 speedup=5.2039
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2874	 ParSpMatVec=0.0135	 speedup=21.2326
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2874	 ParSpMatVec=0.0152	 speedup=18.8873
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2874	 ParSpMatVec=0.0175	 speedup=16.3827
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2874	 ParSpMatVec=0.0126	 speedup=22.8699

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0990	 ParSpMatVec=0.0237	 speedup=4.1764
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0990	 ParSpMatVec=0.0133	 speedup=7.4362
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0990	 ParSpMatVec=0.0423	 speedup=2.3369
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0990	 ParSpMatVec=0.0091	 speedup=10.9310
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0990	 ParSpMatVec=0.0118	 speedup=8.4218

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1233	 ParSpMatVec=0.0667	 speedup=1.8467
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1233	 ParSpMatVec=0.0025	 speedup=50.2998
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1233	 ParSpMatVec=0.0014	 speedup=88.0079
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1233	 ParSpMatVec=0.0014	 speedup=87.7873
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1233	 ParSpMatVec=0.0018	 speedup=69.7375

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0084	 ParSpMatVec=0.0802	 speedup=0.1052
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0084	 ParSpMatVec=0.0034	 speedup=2.4576
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0084	 ParSpMatVec=0.0027	 speedup=3.1030
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0084	 ParSpMatVec=0.0027	 speedup=3.1712
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0084	 ParSpMatVec=0.0027	 speedup=3.1749

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0868	 ParSpMatVec=0.0588	 speedup=1.4764
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0868	 ParSpMatVec=0.0040	 speedup=21.9761
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0868	 ParSpMatVec=0.0021	 speedup=40.5752
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0868	 ParSpMatVec=0.0031	 speedup=28.0174
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0868	 ParSpMatVec=0.0029	 speedup=30.0492

INFO: ParSpMatVec tests passed

>>> End of log
