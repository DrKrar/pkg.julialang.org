>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1045.91015625 MB free)
Uptime: 15133.0 sec
Load Avg:  1.294921875  1.11474609375  1.02294921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     855486 s         38 s      76196 s     404571 s         43 s
#2  3500 MHz     298802 s       6172 s      40843 s    1123398 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.18.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2442	 ParSpMatVec=0.0254	 speedup=9.6255
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2442	 ParSpMatVec=0.0093	 speedup=26.1693
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2442	 ParSpMatVec=0.0125	 speedup=19.4778
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2442	 ParSpMatVec=0.0089	 speedup=27.3945
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2442	 ParSpMatVec=0.0128	 speedup=19.0746
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1978	 ParSpMatVec=0.0523	 speedup=3.7801
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1978	 ParSpMatVec=0.0127	 speedup=15.5595
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1978	 ParSpMatVec=0.0156	 speedup=12.7013
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1978	 ParSpMatVec=0.0127	 speedup=15.6129
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1978	 ParSpMatVec=0.0133	 speedup=14.9040

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0405	 ParSpMatVec=0.0247	 speedup=1.6439
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0405	 ParSpMatVec=0.0117	 speedup=3.4739
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0405	 ParSpMatVec=0.0146	 speedup=2.7755
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0405	 ParSpMatVec=0.0142	 speedup=2.8627
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0405	 ParSpMatVec=0.0141	 speedup=2.8816

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0695	 ParSpMatVec=0.0564	 speedup=1.2311
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0695	 ParSpMatVec=0.0024	 speedup=29.4010
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0695	 ParSpMatVec=0.0025	 speedup=27.9515
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0695	 ParSpMatVec=0.0016	 speedup=43.1802
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0695	 ParSpMatVec=0.0017	 speedup=41.6309

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0087	 ParSpMatVec=0.0668	 speedup=0.1307
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0087	 ParSpMatVec=0.0040	 speedup=2.1958
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0087	 ParSpMatVec=0.0028	 speedup=3.1331
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0087	 ParSpMatVec=0.0026	 speedup=3.3789
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0087	 ParSpMatVec=0.0028	 speedup=3.1288

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0907	 ParSpMatVec=0.0399	 speedup=2.2707
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0907	 ParSpMatVec=0.0041	 speedup=22.1269
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0907	 ParSpMatVec=0.0011	 speedup=84.6161
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0907	 ParSpMatVec=0.0014	 speedup=64.2529
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0907	 ParSpMatVec=0.0023	 speedup=38.8715

INFO: ParSpMatVec tests passed

>>> End of log
