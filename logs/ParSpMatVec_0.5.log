>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (982.71484375 MB free)
Uptime: 12795.0 sec
Load Avg:  1.10205078125  1.02880859375  0.9873046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     570861 s        916 s      73590 s     483271 s         25 s
#2  3500 MHz     180492 s       4639 s      34912 s    1007721 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2855	 ParSpMatVec=0.0187	 speedup=15.2925
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2855	 ParSpMatVec=0.0084	 speedup=33.9788
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2855	 ParSpMatVec=0.0117	 speedup=24.3971
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2855	 ParSpMatVec=0.0082	 speedup=34.6137
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2855	 ParSpMatVec=0.0079	 speedup=35.9592
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2265	 ParSpMatVec=0.0628	 speedup=3.6060
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2265	 ParSpMatVec=0.0107	 speedup=21.1654
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2265	 ParSpMatVec=0.0144	 speedup=15.7203
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2265	 ParSpMatVec=0.0125	 speedup=18.1035
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2265	 ParSpMatVec=0.0168	 speedup=13.4601

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0598	 ParSpMatVec=0.0364	 speedup=1.6443
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0598	 ParSpMatVec=0.0132	 speedup=4.5152
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0598	 ParSpMatVec=0.0146	 speedup=4.0964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0598	 ParSpMatVec=0.0120	 speedup=4.9820
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0598	 ParSpMatVec=0.0153	 speedup=3.8997

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0549	 ParSpMatVec=0.0394	 speedup=1.3944
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0549	 ParSpMatVec=0.0026	 speedup=21.2167
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0549	 ParSpMatVec=0.0025	 speedup=21.7638
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0549	 ParSpMatVec=0.0020	 speedup=27.1908
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0549	 ParSpMatVec=0.0022	 speedup=25.3992

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0092	 ParSpMatVec=0.0504	 speedup=0.1832
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0092	 ParSpMatVec=0.0037	 speedup=2.5230
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0092	 ParSpMatVec=0.0019	 speedup=4.9779
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0092	 ParSpMatVec=0.0043	 speedup=2.1391
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0092	 ParSpMatVec=0.0024	 speedup=3.8389

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0824	 ParSpMatVec=0.0672	 speedup=1.2259
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0824	 ParSpMatVec=0.0040	 speedup=20.8444
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0824	 ParSpMatVec=0.0025	 speedup=32.7746
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0824	 ParSpMatVec=0.0025	 speedup=33.4609
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0824	 ParSpMatVec=0.0027	 speedup=30.3852

INFO: ParSpMatVec tests passed

>>> End of log
