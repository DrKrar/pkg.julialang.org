>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.7
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1045.73828125 MB free)
Uptime: 15528.0 sec
Load Avg:  1.013671875  1.05078125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3511 MHz     809858 s       7174 s     100466 s     412119 s        213 s
#2  3511 MHz     358713 s         53 s      83637 s     995295 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.2
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.14.0
 - SHA                           0.3.0
 - URIParser                     0.1.7
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2662	 ParSpMatVec=0.0344	 speedup=7.7288
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2662	 ParSpMatVec=0.0082	 speedup=32.5022
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2662	 ParSpMatVec=0.0140	 speedup=19.0190
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2662	 ParSpMatVec=0.0124	 speedup=21.5554
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2662	 ParSpMatVec=0.0174	 speedup=15.2960
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2253	 ParSpMatVec=0.0505	 speedup=4.4654
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2253	 ParSpMatVec=0.0156	 speedup=14.4691
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2253	 ParSpMatVec=0.0161	 speedup=13.9635
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2253	 ParSpMatVec=0.0135	 speedup=16.6557
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2253	 ParSpMatVec=0.0121	 speedup=18.6730

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0607	 ParSpMatVec=0.0307	 speedup=1.9786
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0607	 ParSpMatVec=0.0159	 speedup=3.8117
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0607	 ParSpMatVec=0.0218	 speedup=2.7867
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0607	 ParSpMatVec=0.0124	 speedup=4.8888
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0607	 ParSpMatVec=0.0130	 speedup=4.6831

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0629	 ParSpMatVec=0.0719	 speedup=0.8754
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0629	 ParSpMatVec=0.0017	 speedup=36.5732
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0629	 ParSpMatVec=0.0034	 speedup=18.6155
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0629	 ParSpMatVec=0.0059	 speedup=10.6105
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0629	 ParSpMatVec=0.0018	 speedup=35.1492

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0162	 ParSpMatVec=0.0518	 speedup=0.3132
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0162	 ParSpMatVec=0.0041	 speedup=3.9392
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0162	 ParSpMatVec=0.0049	 speedup=3.3358
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0162	 ParSpMatVec=0.0035	 speedup=4.6894
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0162	 ParSpMatVec=0.0064	 speedup=2.5428

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0793	 ParSpMatVec=0.0648	 speedup=1.2235
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0793	 ParSpMatVec=0.0032	 speedup=24.9014
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0793	 ParSpMatVec=0.0489	 speedup=1.6212
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0793	 ParSpMatVec=0.0055	 speedup=14.5222
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0793	 ParSpMatVec=0.0045	 speedup=17.4918

INFO: ParSpMatVec tests passed

>>> End of log
