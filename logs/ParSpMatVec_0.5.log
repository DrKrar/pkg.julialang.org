>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1036.0703125 MB free)
Uptime: 14414.0 sec
Load Avg:  0.94580078125  1.04296875  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     851500 s       6484 s      78382 s     322476 s         21 s
#2  3499 MHz     233196 s        163 s      39398 s    1136288 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.20.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2725	 ParSpMatVec=0.0262	 speedup=10.3923
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2725	 ParSpMatVec=0.0100	 speedup=27.3295
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2725	 ParSpMatVec=0.0118	 speedup=23.1050
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2725	 ParSpMatVec=0.0091	 speedup=30.0993
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2725	 ParSpMatVec=0.0097	 speedup=27.9983
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2300	 ParSpMatVec=0.0507	 speedup=4.5332
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2300	 ParSpMatVec=0.0126	 speedup=18.2694
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2300	 ParSpMatVec=0.0177	 speedup=12.9781
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2300	 ParSpMatVec=0.0185	 speedup=12.4329
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2300	 ParSpMatVec=0.0166	 speedup=13.8676

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0634	 ParSpMatVec=0.0202	 speedup=3.1358
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0634	 ParSpMatVec=0.0110	 speedup=5.7505
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0634	 ParSpMatVec=0.0148	 speedup=4.2821
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0634	 ParSpMatVec=0.0134	 speedup=4.7242
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0634	 ParSpMatVec=0.0112	 speedup=5.6553

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0795	 ParSpMatVec=0.0363	 speedup=2.1902
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0795	 ParSpMatVec=0.0024	 speedup=33.1921
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0795	 ParSpMatVec=0.0029	 speedup=27.8538
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0795	 ParSpMatVec=0.0036	 speedup=22.2444
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0795	 ParSpMatVec=0.0013	 speedup=60.2140

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0070	 ParSpMatVec=0.0366	 speedup=0.1903
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0070	 ParSpMatVec=0.0035	 speedup=2.0167
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0070	 ParSpMatVec=0.0024	 speedup=2.8765
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0070	 ParSpMatVec=0.0019	 speedup=3.6187
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0070	 ParSpMatVec=0.0026	 speedup=2.6611

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0851	 ParSpMatVec=0.0678	 speedup=1.2546
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0851	 ParSpMatVec=0.0037	 speedup=22.9358
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0851	 ParSpMatVec=0.0018	 speedup=47.0312
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0851	 ParSpMatVec=0.0028	 speedup=30.9275
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0851	 ParSpMatVec=0.0030	 speedup=27.9342

INFO: ParSpMatVec tests passed

>>> End of log
