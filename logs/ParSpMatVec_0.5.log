>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.2
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-rc2+0
Commit 0350e57 (2016-08-12 11:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (826.71484375 MB free)
Uptime: 12327.0 sec
Load Avg:  1.00732421875  1.05712890625  1.013671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     626036 s       4958 s      78683 s     362097 s         24 s
#2  3504 MHz     209223 s       1589 s      37517 s     940152 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.2
 - Compat                        0.8.6
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1782	 ParSpMatVec=0.0194	 speedup=9.1948
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1782	 ParSpMatVec=0.0097	 speedup=18.4469
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1782	 ParSpMatVec=0.0145	 speedup=12.2641
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1782	 ParSpMatVec=0.0176	 speedup=10.1370
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1782	 ParSpMatVec=0.0076	 speedup=23.3622
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2230	 ParSpMatVec=0.0632	 speedup=3.5257
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2230	 ParSpMatVec=0.0158	 speedup=14.0818
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2230	 ParSpMatVec=0.0182	 speedup=12.2560
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2230	 ParSpMatVec=0.0144	 speedup=15.4443
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2230	 ParSpMatVec=0.0154	 speedup=14.5193

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0433	 ParSpMatVec=0.0356	 speedup=1.2165
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0433	 ParSpMatVec=0.0133	 speedup=3.2463
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0433	 ParSpMatVec=0.0152	 speedup=2.8512
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0433	 ParSpMatVec=0.0130	 speedup=3.3331
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0433	 ParSpMatVec=0.0142	 speedup=3.0586

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0623	 ParSpMatVec=0.0362	 speedup=1.7221
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0623	 ParSpMatVec=0.0029	 speedup=21.7379
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0623	 ParSpMatVec=0.0019	 speedup=33.1922
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0623	 ParSpMatVec=0.0024	 speedup=25.6491
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0623	 ParSpMatVec=0.0021	 speedup=30.1372

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0066	 ParSpMatVec=0.0383	 speedup=0.1710
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0066	 ParSpMatVec=0.0033	 speedup=2.0072
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0066	 ParSpMatVec=0.0023	 speedup=2.8288
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0066	 ParSpMatVec=0.0033	 speedup=2.0153
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0066	 ParSpMatVec=0.0022	 speedup=2.9143

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0597	 ParSpMatVec=0.0683	 speedup=0.8740
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0597	 ParSpMatVec=0.0034	 speedup=17.6469
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0597	 ParSpMatVec=0.0023	 speedup=26.4208
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0597	 ParSpMatVec=0.0019	 speedup=31.2358
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0597	 ParSpMatVec=0.0043	 speedup=13.9283

INFO: ParSpMatVec tests passed

>>> End of log
