>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1032.04296875 MB free)
Uptime: 14564.0 sec
Load Avg:  1.0830078125  1.03125  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     858466 s       4530 s      76094 s     344585 s         26 s
#2  3499 MHz     263197 s       2107 s      41194 s    1119783 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3109	 ParSpMatVec=0.0277	 speedup=11.2193
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3109	 ParSpMatVec=0.0112	 speedup=27.7057
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3109	 ParSpMatVec=0.0110	 speedup=28.3293
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3109	 ParSpMatVec=0.0079	 speedup=39.1098
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3109	 ParSpMatVec=0.0096	 speedup=32.2275
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1461	 ParSpMatVec=0.0346	 speedup=4.2225
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1461	 ParSpMatVec=0.0102	 speedup=14.3855
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1461	 ParSpMatVec=0.0123	 speedup=11.8581
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1461	 ParSpMatVec=0.0132	 speedup=11.0348
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1461	 ParSpMatVec=0.0116	 speedup=12.5918

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0634	 ParSpMatVec=0.0203	 speedup=3.1301
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0634	 ParSpMatVec=0.0125	 speedup=5.0822
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0634	 ParSpMatVec=0.0155	 speedup=4.0913
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0634	 ParSpMatVec=0.0116	 speedup=5.4453
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0634	 ParSpMatVec=0.0109	 speedup=5.8250

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0513	 ParSpMatVec=0.0385	 speedup=1.3318
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0513	 ParSpMatVec=0.0028	 speedup=18.5140
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0513	 ParSpMatVec=0.0017	 speedup=29.9936
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0513	 ParSpMatVec=0.0020	 speedup=25.6293
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0513	 ParSpMatVec=0.0019	 speedup=27.2703

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0609	 speedup=0.1332
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0035	 speedup=2.2962
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0021	 speedup=3.9053
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0025	 speedup=3.2849
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0022	 speedup=3.7369

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0477	 ParSpMatVec=0.0543	 speedup=0.8777
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0477	 ParSpMatVec=0.0035	 speedup=13.7071
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0477	 ParSpMatVec=0.0016	 speedup=29.8281
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0477	 ParSpMatVec=0.0024	 speedup=19.6623
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0477	 ParSpMatVec=0.0022	 speedup=21.5583

INFO: ParSpMatVec tests passed

>>> End of log
