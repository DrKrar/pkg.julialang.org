>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-109-generic #156-Ubuntu SMP Wed Feb 8 16:09:17 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1031.0859375 MB free)
Uptime: 14773.0 sec
Load Avg:  1.00634765625  1.05126953125  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     851046 s       3000 s      97128 s     347266 s         33 s
#2  3501 MHz     240405 s       3648 s      42859 s    1151691 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2889	 ParSpMatVec=0.0300	 speedup=9.6158
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2889	 ParSpMatVec=0.0094	 speedup=30.5995
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2889	 ParSpMatVec=0.0127	 speedup=22.8007
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2889	 ParSpMatVec=0.0131	 speedup=22.0986
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2889	 ParSpMatVec=0.0068	 speedup=42.5072
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1267	 ParSpMatVec=0.0361	 speedup=3.5102
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1267	 ParSpMatVec=0.0124	 speedup=10.2332
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1267	 ParSpMatVec=0.0152	 speedup=8.3134
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1267	 ParSpMatVec=0.0135	 speedup=9.3606
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1267	 ParSpMatVec=0.0124	 speedup=10.2260

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0550	 ParSpMatVec=0.0324	 speedup=1.6979
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0550	 ParSpMatVec=0.0122	 speedup=4.5268
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0550	 ParSpMatVec=0.0130	 speedup=4.2248
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0550	 ParSpMatVec=0.0124	 speedup=4.4533
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0550	 ParSpMatVec=0.0139	 speedup=3.9499

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0662	 ParSpMatVec=0.0380	 speedup=1.7424
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0662	 ParSpMatVec=0.0017	 speedup=39.9868
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0662	 ParSpMatVec=0.0036	 speedup=18.3328
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0662	 ParSpMatVec=0.0022	 speedup=29.7154
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0662	 ParSpMatVec=0.0016	 speedup=41.1454

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0058	 ParSpMatVec=0.0662	 speedup=0.0872
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0058	 ParSpMatVec=0.0039	 speedup=1.4689
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0058	 ParSpMatVec=0.0022	 speedup=2.5859
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0058	 ParSpMatVec=0.0019	 speedup=2.9984
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0058	 ParSpMatVec=0.0033	 speedup=1.7395

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0851	 ParSpMatVec=0.0668	 speedup=1.2743
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0851	 ParSpMatVec=0.0040	 speedup=21.4835
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0851	 ParSpMatVec=0.0022	 speedup=38.1085
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0851	 ParSpMatVec=0.0234	 speedup=3.6440
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0851	 ParSpMatVec=0.0023	 speedup=36.8956

INFO: ParSpMatVec tests passed

>>> End of log
