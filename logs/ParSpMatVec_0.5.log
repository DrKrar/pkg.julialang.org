>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1030.1015625 MB free)
Uptime: 16651.0 sec
Load Avg:  1.01318359375  1.07373046875  1.02978515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     879427 s       6414 s     103920 s     498887 s         27 s
#2  3500 MHz     254761 s         44 s      48209 s    1327199 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1646	 ParSpMatVec=0.0165	 speedup=9.9561
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1646	 ParSpMatVec=0.0080	 speedup=20.5420
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1646	 ParSpMatVec=0.0132	 speedup=12.5181
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1646	 ParSpMatVec=0.0080	 speedup=20.6259
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1646	 ParSpMatVec=0.0107	 speedup=15.3846
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1204	 ParSpMatVec=0.0327	 speedup=3.6824
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1204	 ParSpMatVec=0.0116	 speedup=10.3933
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1204	 ParSpMatVec=0.0143	 speedup=8.3943
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1204	 ParSpMatVec=0.0129	 speedup=9.3653
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1204	 ParSpMatVec=0.0136	 speedup=8.8256

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0540	 ParSpMatVec=0.0344	 speedup=1.5706
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0540	 ParSpMatVec=0.0136	 speedup=3.9625
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0540	 ParSpMatVec=0.0139	 speedup=3.8876
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0540	 ParSpMatVec=0.0130	 speedup=4.1398
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0540	 ParSpMatVec=0.0134	 speedup=4.0391

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0470	 ParSpMatVec=0.0510	 speedup=0.9228
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0470	 ParSpMatVec=0.0032	 speedup=14.5487
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0470	 ParSpMatVec=0.0032	 speedup=14.5439
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0470	 ParSpMatVec=0.0022	 speedup=21.4711
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0470	 ParSpMatVec=0.0028	 speedup=16.5985

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0078	 ParSpMatVec=0.0632	 speedup=0.1237
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0078	 ParSpMatVec=0.0026	 speedup=2.9992
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0078	 ParSpMatVec=0.0027	 speedup=2.9086
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0078	 ParSpMatVec=0.0022	 speedup=3.4881
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0078	 ParSpMatVec=0.0027	 speedup=2.9452

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0786	 ParSpMatVec=0.0490	 speedup=1.6054
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0786	 ParSpMatVec=0.0039	 speedup=20.3201
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0786	 ParSpMatVec=0.0027	 speedup=29.2631
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0786	 ParSpMatVec=0.0037	 speedup=21.1279
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0786	 ParSpMatVec=0.0031	 speedup=25.1866

INFO: ParSpMatVec tests passed

>>> End of log
