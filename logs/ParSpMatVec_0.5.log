>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1021.45703125 MB free)
Uptime: 12477.0 sec
Load Avg:  1.01318359375  1.03662109375  0.99609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     651695 s       6632 s      73065 s     368433 s         41 s
#2  3495 MHz     244531 s      10336 s      36024 s     909381 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2734	 ParSpMatVec=0.0249	 speedup=10.9588
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2734	 ParSpMatVec=0.0093	 speedup=29.3670
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2734	 ParSpMatVec=0.0108	 speedup=25.3159
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2734	 ParSpMatVec=0.0103	 speedup=26.6435
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2734	 ParSpMatVec=0.0154	 speedup=17.7505
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1945	 ParSpMatVec=0.0489	 speedup=3.9804
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1945	 ParSpMatVec=0.0132	 speedup=14.7715
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1945	 ParSpMatVec=0.0138	 speedup=14.0776
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1945	 ParSpMatVec=0.0149	 speedup=13.0801
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1945	 ParSpMatVec=0.0154	 speedup=12.6513

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0363	 ParSpMatVec=0.0195	 speedup=1.8600
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0363	 ParSpMatVec=0.0129	 speedup=2.8157
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0363	 ParSpMatVec=0.0159	 speedup=2.2839
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0363	 ParSpMatVec=0.0147	 speedup=2.4750
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0363	 ParSpMatVec=0.0139	 speedup=2.6138

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0729	 ParSpMatVec=0.0385	 speedup=1.8942
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0729	 ParSpMatVec=0.0020	 speedup=36.4486
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0729	 ParSpMatVec=0.0022	 speedup=33.0265
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0729	 ParSpMatVec=0.0016	 speedup=45.5161
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0729	 ParSpMatVec=0.0027	 speedup=26.8090

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0069	 ParSpMatVec=0.0621	 speedup=0.1117
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0069	 ParSpMatVec=0.0043	 speedup=1.6279
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0069	 ParSpMatVec=0.0031	 speedup=2.2120
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0069	 ParSpMatVec=0.0024	 speedup=2.9501
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0069	 ParSpMatVec=0.0022	 speedup=3.1468

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0794	 ParSpMatVec=0.0787	 speedup=1.0088
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0794	 ParSpMatVec=0.0042	 speedup=18.7893
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0794	 ParSpMatVec=0.0025	 speedup=31.2902
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0794	 ParSpMatVec=0.0027	 speedup=29.5034
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0794	 ParSpMatVec=0.0027	 speedup=29.6775

INFO: ParSpMatVec tests passed

>>> End of log
