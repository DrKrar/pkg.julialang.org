>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1001.91796875 MB free)
Uptime: 11577.0 sec
Load Avg:  1.01953125  1.03857421875  1.0
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3514 MHz     598751 s       6188 s      63754 s     340139 s         18 s
#2  3514 MHz     203795 s        514 s      34039 s     878757 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.0
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2065	 ParSpMatVec=0.0169	 speedup=12.2210
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2065	 ParSpMatVec=0.0086	 speedup=24.0654
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2065	 ParSpMatVec=0.0151	 speedup=13.6560
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2065	 ParSpMatVec=0.0095	 speedup=21.8155
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2065	 ParSpMatVec=0.0091	 speedup=22.7185
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2068	 ParSpMatVec=0.0485	 speedup=4.2614
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2068	 ParSpMatVec=0.0133	 speedup=15.6063
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2068	 ParSpMatVec=0.0154	 speedup=13.3930
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2068	 ParSpMatVec=0.0124	 speedup=16.7384
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2068	 ParSpMatVec=0.0131	 speedup=15.7814

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0515	 ParSpMatVec=0.0190	 speedup=2.7177
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0515	 ParSpMatVec=0.0132	 speedup=3.9053
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0515	 ParSpMatVec=0.0144	 speedup=3.5751
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0515	 ParSpMatVec=0.0126	 speedup=4.0831
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0515	 ParSpMatVec=0.0131	 speedup=3.9292

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0505	 ParSpMatVec=0.0605	 speedup=0.8348
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0505	 ParSpMatVec=0.0027	 speedup=18.4460
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0505	 ParSpMatVec=0.0021	 speedup=23.7397
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0505	 ParSpMatVec=0.0018	 speedup=27.6512
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0505	 ParSpMatVec=0.0019	 speedup=27.1075

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0061	 ParSpMatVec=0.0379	 speedup=0.1606
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0061	 ParSpMatVec=0.0028	 speedup=2.1602
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0061	 ParSpMatVec=0.0020	 speedup=3.0001
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0061	 ParSpMatVec=0.0029	 speedup=2.0858
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0061	 ParSpMatVec=0.0025	 speedup=2.4221

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0739	 ParSpMatVec=0.0626	 speedup=1.1802
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0739	 ParSpMatVec=0.0030	 speedup=24.3785
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0739	 ParSpMatVec=0.0032	 speedup=22.8636
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0739	 ParSpMatVec=0.0025	 speedup=29.8413
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0739	 ParSpMatVec=0.0025	 speedup=29.6673

INFO: ParSpMatVec tests passed

>>> End of log
