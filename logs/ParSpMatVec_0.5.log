>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:532
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+4946
Commit 68e1dd4* (2016-06-26 23:37 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1250	 ParSpMatVec=0.0179	 speedup=6.9878
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1250	 ParSpMatVec=0.0088	 speedup=14.1887
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1250	 ParSpMatVec=0.0121	 speedup=10.3609
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1250	 ParSpMatVec=0.0122	 speedup=10.2349
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1250	 ParSpMatVec=0.0125	 speedup=9.9694
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2134	 ParSpMatVec=0.0416	 speedup=5.1237
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2134	 ParSpMatVec=0.0119	 speedup=17.9465
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2134	 ParSpMatVec=0.0150	 speedup=14.1981
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2134	 ParSpMatVec=0.0124	 speedup=17.1746
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2134	 ParSpMatVec=0.0085	 speedup=25.1839

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0686	 ParSpMatVec=0.0210	 speedup=3.2736
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0686	 ParSpMatVec=0.0123	 speedup=5.5679
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0686	 ParSpMatVec=0.0142	 speedup=4.8484
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0686	 ParSpMatVec=0.0131	 speedup=5.2355
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0686	 ParSpMatVec=0.0121	 speedup=5.6645

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0975	 ParSpMatVec=0.0407	 speedup=2.3967
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0975	 ParSpMatVec=0.0026	 speedup=38.0374
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0975	 ParSpMatVec=0.0029	 speedup=33.7053
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0975	 ParSpMatVec=0.0015	 speedup=65.9665
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0975	 ParSpMatVec=0.0020	 speedup=49.1348

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0077	 ParSpMatVec=0.0627	 speedup=0.1223
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0077	 ParSpMatVec=0.0037	 speedup=2.0647
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0077	 ParSpMatVec=0.0018	 speedup=4.1550
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0077	 ParSpMatVec=0.0027	 speedup=2.8243
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0077	 ParSpMatVec=0.0027	 speedup=2.8633

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1390	 ParSpMatVec=0.0731	 speedup=1.9008
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1390	 ParSpMatVec=0.0039	 speedup=36.0512
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1390	 ParSpMatVec=0.0020	 speedup=69.2047
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1390	 ParSpMatVec=0.0029	 speedup=48.2111
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1390	 ParSpMatVec=0.0028	 speedup=49.1120

INFO: ParSpMatVec tests passed

>>> End of log
