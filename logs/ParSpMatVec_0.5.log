>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:532
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:231
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+4891
Commit 5ed294d* (2016-06-21 21:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1537	 ParSpMatVec=0.0222	 speedup=6.9159
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1537	 ParSpMatVec=0.0088	 speedup=17.3968
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1537	 ParSpMatVec=0.0124	 speedup=12.3826
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1537	 ParSpMatVec=0.0126	 speedup=12.2096
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1537	 ParSpMatVec=0.0097	 speedup=15.8436
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1943	 ParSpMatVec=0.0549	 speedup=3.5388
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1943	 ParSpMatVec=0.0145	 speedup=13.4413
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1943	 ParSpMatVec=0.0153	 speedup=12.6786
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1943	 ParSpMatVec=0.0121	 speedup=16.0120
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1943	 ParSpMatVec=0.0148	 speedup=13.0969

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0655	 ParSpMatVec=0.0321	 speedup=2.0399
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0655	 ParSpMatVec=0.0134	 speedup=4.8964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0655	 ParSpMatVec=0.0169	 speedup=3.8840
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0655	 ParSpMatVec=0.0155	 speedup=4.2393
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0655	 ParSpMatVec=0.0215	 speedup=3.0543

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0879	 ParSpMatVec=0.0539	 speedup=1.6304
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0879	 ParSpMatVec=0.0020	 speedup=44.2429
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0879	 ParSpMatVec=0.0017	 speedup=51.8505
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0879	 ParSpMatVec=0.0013	 speedup=66.8856
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0879	 ParSpMatVec=0.0014	 speedup=62.6157

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0078	 ParSpMatVec=0.0504	 speedup=0.1551
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0078	 ParSpMatVec=0.0042	 speedup=1.8536
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0078	 ParSpMatVec=0.0037	 speedup=2.1253
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0078	 ParSpMatVec=0.0028	 speedup=2.7464
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0078	 ParSpMatVec=0.0054	 speedup=1.4543

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1496	 ParSpMatVec=0.0792	 speedup=1.8897
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1496	 ParSpMatVec=0.0057	 speedup=26.3830
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1496	 ParSpMatVec=0.0024	 speedup=61.6809
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1496	 ParSpMatVec=0.0021	 speedup=71.0951
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1496	 ParSpMatVec=0.0022	 speedup=66.8433

INFO: ParSpMatVec tests passed

>>> End of log
