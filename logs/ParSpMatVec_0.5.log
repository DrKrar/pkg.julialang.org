>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1000.6015625 MB free)
Uptime: 11118.0 sec
Load Avg:  1.0263671875  1.0693359375  1.0126953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     564638 s         59 s      76809 s     329078 s         13 s
#2  3500 MHz     160803 s         86 s      31720 s     884197 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2491	 ParSpMatVec=0.0464	 speedup=5.3709
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2491	 ParSpMatVec=0.0095	 speedup=26.1172
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2491	 ParSpMatVec=0.0142	 speedup=17.5433
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2491	 ParSpMatVec=0.0108	 speedup=22.9873
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2491	 ParSpMatVec=0.0080	 speedup=31.0882
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1515	 ParSpMatVec=0.0417	 speedup=3.6292
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1515	 ParSpMatVec=0.0131	 speedup=11.5208
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1515	 ParSpMatVec=0.0155	 speedup=9.7530
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1515	 ParSpMatVec=0.0130	 speedup=11.6912
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1515	 ParSpMatVec=0.0146	 speedup=10.3446

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0453	 ParSpMatVec=0.0210	 speedup=2.1568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0453	 ParSpMatVec=0.0120	 speedup=3.7767
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0453	 ParSpMatVec=0.0137	 speedup=3.2994
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0453	 ParSpMatVec=0.0105	 speedup=4.3062
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0453	 ParSpMatVec=0.0102	 speedup=4.4209

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0554	 ParSpMatVec=0.0369	 speedup=1.5038
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0554	 ParSpMatVec=0.0020	 speedup=27.9996
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0554	 ParSpMatVec=0.0023	 speedup=24.1011
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0554	 ParSpMatVec=0.0016	 speedup=34.9265
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0554	 ParSpMatVec=0.0019	 speedup=28.8745

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0667	 speedup=0.1324
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0042	 speedup=2.1085
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0024	 speedup=3.7462
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0019	 speedup=4.5706
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0025	 speedup=3.4715

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0836	 ParSpMatVec=0.0389	 speedup=2.1524
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0836	 ParSpMatVec=0.0047	 speedup=17.8878
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0836	 ParSpMatVec=0.0027	 speedup=30.8825
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0836	 ParSpMatVec=0.0024	 speedup=34.3893
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0836	 ParSpMatVec=0.0023	 speedup=35.9412

INFO: ParSpMatVec tests passed

>>> End of log
