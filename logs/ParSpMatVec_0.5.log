>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/lruthotto/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.2
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.1) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+2918
Commit 1eacbbb (2016-02-28 16:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2030	 ParSpMatVec=0.0323	 speedup=6.2907
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2030	 ParSpMatVec=0.0086	 speedup=23.5037
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2030	 ParSpMatVec=0.0111	 speedup=18.2596
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2030	 ParSpMatVec=0.0103	 speedup=19.6581
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2030	 ParSpMatVec=0.0065	 speedup=31.3931
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1568	 ParSpMatVec=0.0643	 speedup=2.4371
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1568	 ParSpMatVec=0.0122	 speedup=12.8059
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1568	 ParSpMatVec=0.0142	 speedup=11.0760
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1568	 ParSpMatVec=0.0138	 speedup=11.3781
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1568	 ParSpMatVec=0.0157	 speedup=9.9590

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0524	 ParSpMatVec=0.0437	 speedup=1.1990
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0524	 ParSpMatVec=0.0160	 speedup=3.2820
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0524	 ParSpMatVec=0.0147	 speedup=3.5771
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0524	 ParSpMatVec=0.0118	 speedup=4.4513
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0524	 ParSpMatVec=0.0124	 speedup=4.2439

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0934	 ParSpMatVec=0.0679	 speedup=1.3748
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0934	 ParSpMatVec=0.0026	 speedup=36.2355
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0934	 ParSpMatVec=0.0039	 speedup=24.1585
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0934	 ParSpMatVec=0.0015	 speedup=63.3866
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0934	 ParSpMatVec=0.0015	 speedup=61.6530

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0087	 ParSpMatVec=0.0801	 speedup=0.1081
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0087	 ParSpMatVec=0.0043	 speedup=2.0238
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0087	 ParSpMatVec=0.0023	 speedup=3.8030
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0087	 ParSpMatVec=0.0068	 speedup=1.2793
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0087	 ParSpMatVec=0.0053	 speedup=1.6253

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0664	 ParSpMatVec=0.0731	 speedup=0.9085
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0664	 ParSpMatVec=0.0036	 speedup=18.4309
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0664	 ParSpMatVec=0.0019	 speedup=35.3424
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0664	 ParSpMatVec=0.0017	 speedup=38.8018
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0664	 ParSpMatVec=0.0024	 speedup=27.6777

INFO: ParSpMatVec tests passed

>>> End of log
