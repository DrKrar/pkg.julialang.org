>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1028.0078125 MB free)
Uptime: 15684.0 sec
Load Avg:  0.970703125  1.0947265625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     889822 s       6162 s      77212 s     403369 s         61 s
#2  3499 MHz     304571 s        356 s      44288 s    1167931 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3098	 ParSpMatVec=0.0388	 speedup=7.9830
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3098	 ParSpMatVec=0.0176	 speedup=17.6197
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3098	 ParSpMatVec=0.0213	 speedup=14.5123
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3098	 ParSpMatVec=0.0291	 speedup=10.6422
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3098	 ParSpMatVec=0.0125	 speedup=24.8120
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2431	 ParSpMatVec=0.0593	 speedup=4.0967
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2431	 ParSpMatVec=0.0190	 speedup=12.7732
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2431	 ParSpMatVec=0.0147	 speedup=16.5214
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2431	 ParSpMatVec=0.0214	 speedup=11.3855
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2431	 ParSpMatVec=0.0175	 speedup=13.8981

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0832	 ParSpMatVec=0.0342	 speedup=2.4322
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0832	 ParSpMatVec=0.0151	 speedup=5.5282
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0832	 ParSpMatVec=0.0147	 speedup=5.6587
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0832	 ParSpMatVec=0.0277	 speedup=3.0093
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0832	 ParSpMatVec=0.0149	 speedup=5.5741

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0830	 ParSpMatVec=0.0647	 speedup=1.2822
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0830	 ParSpMatVec=0.0040	 speedup=20.7742
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0830	 ParSpMatVec=0.0021	 speedup=38.6471
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0830	 ParSpMatVec=0.0107	 speedup=7.7590
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0830	 ParSpMatVec=0.0037	 speedup=22.2001

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0106	 ParSpMatVec=0.0814	 speedup=0.1300
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0106	 ParSpMatVec=0.0051	 speedup=2.0762
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0106	 ParSpMatVec=0.0025	 speedup=4.1508
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0106	 ParSpMatVec=0.0050	 speedup=2.1185
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0106	 ParSpMatVec=0.0102	 speedup=1.0341

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1043	 ParSpMatVec=0.1125	 speedup=0.9268
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1043	 ParSpMatVec=0.0036	 speedup=28.8623
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1043	 ParSpMatVec=0.0102	 speedup=10.2575
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1043	 ParSpMatVec=0.0029	 speedup=35.3657
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1043	 ParSpMatVec=0.0081	 speedup=12.9163

INFO: ParSpMatVec tests passed

>>> End of log
