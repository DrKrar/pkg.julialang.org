>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1025.078125 MB free)
Uptime: 11880.0 sec
Load Avg:  1.00048828125  1.046875  0.99755859375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     608667 s       7253 s      73871 s     377650 s         30 s
#2  3500 MHz     217890 s         98 s      38060 s     900067 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2823	 ParSpMatVec=0.0278	 speedup=10.1704
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2823	 ParSpMatVec=0.0078	 speedup=36.3933
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2823	 ParSpMatVec=0.0079	 speedup=35.5173
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2823	 ParSpMatVec=0.0086	 speedup=32.8547
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2823	 ParSpMatVec=0.0070	 speedup=40.2192
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2120	 ParSpMatVec=0.0554	 speedup=3.8241
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2120	 ParSpMatVec=0.0131	 speedup=16.2084
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2120	 ParSpMatVec=0.0086	 speedup=24.7094
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2120	 ParSpMatVec=0.0104	 speedup=20.4024
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2120	 ParSpMatVec=0.0108	 speedup=19.5527

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0368	 ParSpMatVec=0.0204	 speedup=1.8013
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0368	 ParSpMatVec=0.0124	 speedup=2.9663
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0368	 ParSpMatVec=0.0072	 speedup=5.0963
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0368	 ParSpMatVec=0.0129	 speedup=2.8594
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0368	 ParSpMatVec=0.0142	 speedup=2.5963

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0714	 ParSpMatVec=0.0397	 speedup=1.7961
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0714	 ParSpMatVec=0.0013	 speedup=54.8213
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0714	 ParSpMatVec=0.0016	 speedup=43.5769
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0714	 ParSpMatVec=0.0018	 speedup=39.5518
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0714	 ParSpMatVec=0.0017	 speedup=41.5482

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0077	 ParSpMatVec=0.0411	 speedup=0.1861
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0077	 ParSpMatVec=0.0043	 speedup=1.7688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0077	 ParSpMatVec=0.0014	 speedup=5.3898
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0077	 ParSpMatVec=0.0037	 speedup=2.0578
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0077	 ParSpMatVec=0.0026	 speedup=2.9473

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0620	 ParSpMatVec=0.0459	 speedup=1.3495
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0620	 ParSpMatVec=0.0041	 speedup=15.0544
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0620	 ParSpMatVec=0.0027	 speedup=23.0095
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0620	 ParSpMatVec=0.0044	 speedup=14.0210
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0620	 ParSpMatVec=0.0026	 speedup=24.2786

INFO: ParSpMatVec tests passed

>>> End of log
