>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1022.7734375 MB free)
Uptime: 11998.0 sec
Load Avg:  1.01123046875  1.03369140625  1.013671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     638826 s       6914 s      71273 s     350615 s         24 s
#2  3507 MHz     169254 s        144 s      31202 s     973797 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2649	 ParSpMatVec=0.0170	 speedup=15.5704
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2649	 ParSpMatVec=0.0083	 speedup=31.9278
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2649	 ParSpMatVec=0.0120	 speedup=22.0380
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2649	 ParSpMatVec=0.0083	 speedup=31.8171
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2649	 ParSpMatVec=0.0086	 speedup=30.7404
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1309	 ParSpMatVec=0.0561	 speedup=2.3351
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1309	 ParSpMatVec=0.0126	 speedup=10.4140
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1309	 ParSpMatVec=0.0131	 speedup=10.0105
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1309	 ParSpMatVec=0.0122	 speedup=10.7060
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1309	 ParSpMatVec=0.0124	 speedup=10.5655

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0378	 ParSpMatVec=0.0208	 speedup=1.8225
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0378	 ParSpMatVec=0.0125	 speedup=3.0175
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0378	 ParSpMatVec=0.0149	 speedup=2.5447
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0378	 ParSpMatVec=0.0131	 speedup=2.8929
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0378	 ParSpMatVec=0.0128	 speedup=2.9454

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0660	 ParSpMatVec=0.0360	 speedup=1.8353
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0660	 ParSpMatVec=0.0028	 speedup=23.4718
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0660	 ParSpMatVec=0.0023	 speedup=28.4433
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0660	 ParSpMatVec=0.0018	 speedup=37.5437
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0660	 ParSpMatVec=0.0017	 speedup=38.0995

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0082	 ParSpMatVec=0.0661	 speedup=0.1246
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0082	 ParSpMatVec=0.0037	 speedup=2.2256
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0082	 ParSpMatVec=0.0016	 speedup=5.1732
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0082	 ParSpMatVec=0.0023	 speedup=3.6008
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0082	 ParSpMatVec=0.0052	 speedup=1.5884

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0621	 ParSpMatVec=0.0719	 speedup=0.8634
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0621	 ParSpMatVec=0.0038	 speedup=16.1387
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0621	 ParSpMatVec=0.0021	 speedup=28.8742
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0621	 ParSpMatVec=0.0029	 speedup=21.6350
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0621	 ParSpMatVec=0.0021	 speedup=29.3314

INFO: ParSpMatVec tests passed

>>> End of log
