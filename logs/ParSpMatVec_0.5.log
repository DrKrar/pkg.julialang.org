>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1055.3125 MB free)
Uptime: 14522.0 sec
Load Avg:  1.08251953125  1.05126953125  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     831490 s       6256 s      81862 s     353193 s         22 s
#2  3499 MHz     233344 s        698 s      39405 s    1149695 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.20.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3367	 ParSpMatVec=0.0262	 speedup=12.8397
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3367	 ParSpMatVec=0.0079	 speedup=42.4232
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3367	 ParSpMatVec=0.0103	 speedup=32.7634
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3367	 ParSpMatVec=0.0116	 speedup=29.1317
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3367	 ParSpMatVec=0.0079	 speedup=42.6204
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2119	 ParSpMatVec=0.0522	 speedup=4.0572
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2119	 ParSpMatVec=0.0123	 speedup=17.3016
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2119	 ParSpMatVec=0.0128	 speedup=16.5953
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2119	 ParSpMatVec=0.0151	 speedup=14.0582
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2119	 ParSpMatVec=0.0120	 speedup=17.6180

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0599	 ParSpMatVec=0.0327	 speedup=1.8298
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0599	 ParSpMatVec=0.0126	 speedup=4.7475
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0599	 ParSpMatVec=0.0147	 speedup=4.0835
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0599	 ParSpMatVec=0.0133	 speedup=4.4931
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0599	 ParSpMatVec=0.0146	 speedup=4.1138

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0742	 ParSpMatVec=0.0545	 speedup=1.3610
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0742	 ParSpMatVec=0.0022	 speedup=33.9561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0742	 ParSpMatVec=0.0026	 speedup=28.3023
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0742	 ParSpMatVec=0.0048	 speedup=15.4729
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0742	 ParSpMatVec=0.0016	 speedup=45.9564

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0391	 speedup=0.1955
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0029	 speedup=2.6397
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0019	 speedup=4.0188
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0018	 speedup=4.2252
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0031	 speedup=2.4852

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0459	 ParSpMatVec=0.0379	 speedup=1.2106
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0459	 ParSpMatVec=0.0030	 speedup=15.4529
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0459	 ParSpMatVec=0.0017	 speedup=27.6979
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0459	 ParSpMatVec=0.0022	 speedup=20.4296
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0459	 ParSpMatVec=0.0023	 speedup=19.9577

INFO: ParSpMatVec tests passed

>>> End of log
