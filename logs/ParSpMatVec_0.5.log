>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1030.3515625 MB free)
Uptime: 11888.0 sec
Load Avg:  1.01513671875  1.037109375  1.0009765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     694777 s       4276 s      71142 s     283709 s         22 s
#2  3499 MHz     240137 s       2552 s      35712 s     880888 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.10.0
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2842	 ParSpMatVec=0.0264	 speedup=10.7728
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2842	 ParSpMatVec=0.0082	 speedup=34.4589
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2842	 ParSpMatVec=0.0141	 speedup=20.1679
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2842	 ParSpMatVec=0.0063	 speedup=45.1974
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2842	 ParSpMatVec=0.0087	 speedup=32.8059
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1970	 ParSpMatVec=0.0554	 speedup=3.5570
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1970	 ParSpMatVec=0.0133	 speedup=14.8303
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1970	 ParSpMatVec=0.0067	 speedup=29.6196
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1970	 ParSpMatVec=0.0099	 speedup=19.8439
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1970	 ParSpMatVec=0.0122	 speedup=16.2094

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0536	 ParSpMatVec=0.0312	 speedup=1.7202
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0536	 ParSpMatVec=0.0117	 speedup=4.5678
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0536	 ParSpMatVec=0.0111	 speedup=4.8124
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0536	 ParSpMatVec=0.0105	 speedup=5.1038
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0536	 ParSpMatVec=0.0109	 speedup=4.9361

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0732	 ParSpMatVec=0.0703	 speedup=1.0414
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0732	 ParSpMatVec=0.0022	 speedup=33.3859
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0732	 ParSpMatVec=0.0014	 speedup=52.8442
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0732	 ParSpMatVec=0.0032	 speedup=22.8790
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0732	 ParSpMatVec=0.0020	 speedup=37.5078

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0072	 ParSpMatVec=0.0631	 speedup=0.1137
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0072	 ParSpMatVec=0.0037	 speedup=1.9503
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0072	 ParSpMatVec=0.0020	 speedup=3.5395
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0072	 ParSpMatVec=0.0022	 speedup=3.3048
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0072	 ParSpMatVec=0.0028	 speedup=2.5308

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0772	 ParSpMatVec=0.0688	 speedup=1.1221
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0772	 ParSpMatVec=0.0044	 speedup=17.5808
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0772	 ParSpMatVec=0.0022	 speedup=34.3696
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0772	 ParSpMatVec=0.0024	 speedup=32.1321
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0772	 ParSpMatVec=0.0026	 speedup=30.2484

INFO: ParSpMatVec tests passed

>>> End of log
