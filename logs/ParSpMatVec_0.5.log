>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1036.61328125 MB free)
Uptime: 13574.0 sec
Load Avg:  1.0029296875  1.0126953125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     828374 s       2328 s      87568 s     263057 s         21 s
#2  3499 MHz     222160 s      12518 s      40106 s    1049823 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2679	 ParSpMatVec=0.0259	 speedup=10.3321
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2679	 ParSpMatVec=0.0082	 speedup=32.8103
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2679	 ParSpMatVec=0.0120	 speedup=22.3568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2679	 ParSpMatVec=0.0081	 speedup=32.9655
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2679	 ParSpMatVec=0.0081	 speedup=32.8977
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1309	 ParSpMatVec=0.0308	 speedup=4.2456
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1309	 ParSpMatVec=0.0127	 speedup=10.3095
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1309	 ParSpMatVec=0.0156	 speedup=8.3662
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1309	 ParSpMatVec=0.0139	 speedup=9.4103
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1309	 ParSpMatVec=0.0124	 speedup=10.5349

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0365	 ParSpMatVec=0.0311	 speedup=1.1733
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0365	 ParSpMatVec=0.0143	 speedup=2.5508
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0365	 ParSpMatVec=0.0143	 speedup=2.5472
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0365	 ParSpMatVec=0.0131	 speedup=2.7852
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0365	 ParSpMatVec=0.0126	 speedup=2.9057

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0679	 ParSpMatVec=0.0377	 speedup=1.8011
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0679	 ParSpMatVec=0.0019	 speedup=36.3280
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0679	 ParSpMatVec=0.0014	 speedup=48.9654
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0679	 ParSpMatVec=0.0018	 speedup=37.0494
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0679	 ParSpMatVec=0.0028	 speedup=24.2001

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0085	 ParSpMatVec=0.0382	 speedup=0.2222
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0085	 ParSpMatVec=0.0022	 speedup=3.9091
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0085	 ParSpMatVec=0.0015	 speedup=5.6851
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0085	 ParSpMatVec=0.0031	 speedup=2.7287
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0085	 ParSpMatVec=0.0025	 speedup=3.3742

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0720	 ParSpMatVec=0.0654	 speedup=1.1000
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0720	 ParSpMatVec=0.0039	 speedup=18.5669
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0720	 ParSpMatVec=0.0022	 speedup=32.2499
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0720	 ParSpMatVec=0.0027	 speedup=26.6982
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0720	 ParSpMatVec=0.0028	 speedup=25.8761

INFO: ParSpMatVec tests passed

>>> End of log
