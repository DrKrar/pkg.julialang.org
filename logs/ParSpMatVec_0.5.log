>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1034.1640625 MB free)
Uptime: 11785.0 sec
Load Avg:  0.98291015625  1.1005859375  1.01708984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     607085 s       7652 s      68010 s     360953 s         25 s
#2  3499 MHz     226519 s         86 s      38206 s     880923 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2459	 ParSpMatVec=0.0254	 speedup=9.6730
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2459	 ParSpMatVec=0.0093	 speedup=26.4149
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2459	 ParSpMatVec=0.0136	 speedup=18.1433
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2459	 ParSpMatVec=0.0120	 speedup=20.5543
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2459	 ParSpMatVec=0.0077	 speedup=31.8166
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2047	 ParSpMatVec=0.0500	 speedup=4.0949
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2047	 ParSpMatVec=0.0130	 speedup=15.8019
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2047	 ParSpMatVec=0.0143	 speedup=14.3611
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2047	 ParSpMatVec=0.0130	 speedup=15.7333
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2047	 ParSpMatVec=0.0123	 speedup=16.6092

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0678	 ParSpMatVec=0.0239	 speedup=2.8416
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0678	 ParSpMatVec=0.0129	 speedup=5.2514
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0678	 ParSpMatVec=0.0142	 speedup=4.7712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0678	 ParSpMatVec=0.0123	 speedup=5.5318
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0678	 ParSpMatVec=0.0113	 speedup=6.0048

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0721	 ParSpMatVec=0.0409	 speedup=1.7639
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0721	 ParSpMatVec=0.0031	 speedup=23.0198
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0721	 ParSpMatVec=0.0044	 speedup=16.2507
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0721	 ParSpMatVec=0.0025	 speedup=28.5585
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0721	 ParSpMatVec=0.0020	 speedup=36.1320

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0119	 ParSpMatVec=0.0625	 speedup=0.1911
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0119	 ParSpMatVec=0.0032	 speedup=3.7599
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0119	 ParSpMatVec=0.0021	 speedup=5.6938
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0119	 ParSpMatVec=0.0024	 speedup=5.0467
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0119	 ParSpMatVec=0.0027	 speedup=4.4636

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0764	 ParSpMatVec=0.0650	 speedup=1.1753
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0764	 ParSpMatVec=0.0043	 speedup=17.8529
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0764	 ParSpMatVec=0.0026	 speedup=29.8918
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0764	 ParSpMatVec=0.0034	 speedup=22.5028
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0764	 ParSpMatVec=0.0027	 speedup=28.1369

INFO: ParSpMatVec tests passed

>>> End of log
