>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1039.328125 MB free)
Uptime: 14289.0 sec
Load Avg:  1.08642578125  1.0947265625  1.076171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     844699 s       3684 s      92015 s     314298 s         23 s
#2  3500 MHz     241535 s       2597 s      41084 s    1114295 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.20.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1904	 ParSpMatVec=0.0168	 speedup=11.3140
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1904	 ParSpMatVec=0.0088	 speedup=21.5532
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1904	 ParSpMatVec=0.0118	 speedup=16.1442
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1904	 ParSpMatVec=0.0068	 speedup=28.1068
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1904	 ParSpMatVec=0.0077	 speedup=24.8008
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2463	 ParSpMatVec=0.0362	 speedup=6.8051
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2463	 ParSpMatVec=0.0136	 speedup=18.1436
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2463	 ParSpMatVec=0.0147	 speedup=16.7294
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2463	 ParSpMatVec=0.0122	 speedup=20.2098
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2463	 ParSpMatVec=0.0137	 speedup=17.9593

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0766	 ParSpMatVec=0.0308	 speedup=2.4836
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0766	 ParSpMatVec=0.0132	 speedup=5.8150
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0766	 ParSpMatVec=0.0144	 speedup=5.3292
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0766	 ParSpMatVec=0.0131	 speedup=5.8309
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0766	 ParSpMatVec=0.0161	 speedup=4.7671

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0474	 ParSpMatVec=0.0366	 speedup=1.2947
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0474	 ParSpMatVec=0.0022	 speedup=21.8702
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0474	 ParSpMatVec=0.0021	 speedup=22.0468
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0474	 ParSpMatVec=0.0017	 speedup=28.4529
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0474	 ParSpMatVec=0.0015	 speedup=31.3622

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0650	 speedup=0.0998
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0025	 speedup=2.6278
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0034	 speedup=1.9145
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0031	 speedup=2.0942
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0024	 speedup=2.7307

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0492	 ParSpMatVec=0.0589	 speedup=0.8350
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0492	 ParSpMatVec=0.0039	 speedup=12.7493
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0492	 ParSpMatVec=0.0020	 speedup=24.1444
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0492	 ParSpMatVec=0.0030	 speedup=16.6238
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0492	 ParSpMatVec=0.0043	 speedup=11.4349

INFO: ParSpMatVec tests passed

>>> End of log
