>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.3
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (840.30859375 MB free)
Uptime: 13251.0 sec
Load Avg:  1.009765625  1.0771484375  1.021484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     593333 s         95 s      70134 s     452701 s        158 s
#2  3496 MHz     209934 s         67 s      41101 s     979748 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.3
 - Compat                        0.8.8
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1714	 ParSpMatVec=0.0228	 speedup=7.5341
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1714	 ParSpMatVec=0.0067	 speedup=25.6712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1714	 ParSpMatVec=0.0090	 speedup=19.0203
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1714	 ParSpMatVec=0.0088	 speedup=19.3839
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1714	 ParSpMatVec=0.0100	 speedup=17.1405
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1858	 ParSpMatVec=0.0402	 speedup=4.6287
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1858	 ParSpMatVec=0.0162	 speedup=11.5041
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1858	 ParSpMatVec=0.0160	 speedup=11.5993
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1858	 ParSpMatVec=0.0180	 speedup=10.3045
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1858	 ParSpMatVec=0.0140	 speedup=13.3051

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0582	 ParSpMatVec=0.0233	 speedup=2.4971
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0582	 ParSpMatVec=0.0169	 speedup=3.4516
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0582	 ParSpMatVec=0.0168	 speedup=3.4653
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0582	 ParSpMatVec=0.0151	 speedup=3.8464
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0582	 ParSpMatVec=0.0100	 speedup=5.8234

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0473	 ParSpMatVec=0.0348	 speedup=1.3592
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0473	 ParSpMatVec=0.0017	 speedup=28.3262
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0473	 ParSpMatVec=0.0013	 speedup=37.4950
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0473	 ParSpMatVec=0.0013	 speedup=37.8030
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0473	 ParSpMatVec=0.0022	 speedup=21.2615

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0084	 ParSpMatVec=0.0441	 speedup=0.1900
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0084	 ParSpMatVec=0.0037	 speedup=2.2433
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0084	 ParSpMatVec=0.0041	 speedup=2.0550
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0084	 ParSpMatVec=0.0030	 speedup=2.7510
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0084	 ParSpMatVec=0.0029	 speedup=2.9250

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0710	 ParSpMatVec=0.0403	 speedup=1.7615
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0710	 ParSpMatVec=0.0036	 speedup=19.7534
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0710	 ParSpMatVec=0.0014	 speedup=49.6561
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0710	 ParSpMatVec=0.0018	 speedup=38.4015
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0710	 ParSpMatVec=0.0027	 speedup=25.9267

INFO: ParSpMatVec tests passed

>>> End of log
