>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1037.34765625 MB free)
Uptime: 14676.0 sec
Load Avg:  1.05419921875  1.03955078125  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     871737 s        120 s      86374 s     334275 s         21 s
#2  3500 MHz     246955 s       6517 s      42594 s    1137504 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2493	 ParSpMatVec=0.0274	 speedup=9.0859
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2493	 ParSpMatVec=0.0095	 speedup=26.2553
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2493	 ParSpMatVec=0.0114	 speedup=21.8746
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2493	 ParSpMatVec=0.0101	 speedup=24.7562
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2493	 ParSpMatVec=0.0089	 speedup=28.0162
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1543	 ParSpMatVec=0.0526	 speedup=2.9335
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1543	 ParSpMatVec=0.0140	 speedup=10.9955
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1543	 ParSpMatVec=0.0151	 speedup=10.1908
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1543	 ParSpMatVec=0.0126	 speedup=12.2827
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1543	 ParSpMatVec=0.0117	 speedup=13.1973

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0418	 ParSpMatVec=0.0187	 speedup=2.2373
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0418	 ParSpMatVec=0.0129	 speedup=3.2374
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0418	 ParSpMatVec=0.0143	 speedup=2.9225
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0418	 ParSpMatVec=0.0110	 speedup=3.7922
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0418	 ParSpMatVec=0.0111	 speedup=3.7568

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0457	 ParSpMatVec=0.0349	 speedup=1.3078
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0457	 ParSpMatVec=0.0019	 speedup=24.3197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0457	 ParSpMatVec=0.0023	 speedup=19.9613
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0457	 ParSpMatVec=0.0016	 speedup=28.4940
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0457	 ParSpMatVec=0.0013	 speedup=35.2655

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0614	 speedup=0.1241
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0035	 speedup=2.1987
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0024	 speedup=3.1554
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0027	 speedup=2.8119
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0028	 speedup=2.6946

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0592	 ParSpMatVec=0.0677	 speedup=0.8748
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0592	 ParSpMatVec=0.0043	 speedup=13.7420
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0592	 ParSpMatVec=0.0023	 speedup=25.4327
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0592	 ParSpMatVec=0.0017	 speedup=34.2675
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0592	 ParSpMatVec=0.0030	 speedup=19.7376

INFO: ParSpMatVec tests passed

>>> End of log
