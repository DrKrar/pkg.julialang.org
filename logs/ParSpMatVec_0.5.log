>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.1
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.0
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages
INFO: Nothing to be done
INFO: METADATA is out-of-date — you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-rc0+4
Commit 347057b (2016-07-27 09:20 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (654.45703125 MB free)
Uptime: 13100.0 sec
Load Avg:  1.01123046875  1.01513671875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     607098 s       2483 s      83215 s     460552 s         18 s
#2  3500 MHz     269399 s       3004 s      67522 s     911407 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.1
 - Compat                        0.8.6
 - SHA                           0.2.0
 - URIParser                     0.1.5
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2765	 ParSpMatVec=0.0226	 speedup=12.2432
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2765	 ParSpMatVec=0.0077	 speedup=35.7621
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2765	 ParSpMatVec=0.0132	 speedup=20.8984
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2765	 ParSpMatVec=0.0092	 speedup=30.1050
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2765	 ParSpMatVec=0.0087	 speedup=31.6244
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1958	 ParSpMatVec=0.2390	 speedup=0.8195
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1958	 ParSpMatVec=0.0134	 speedup=14.5937
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1958	 ParSpMatVec=0.0087	 speedup=22.5333
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1958	 ParSpMatVec=0.0103	 speedup=18.9897
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1958	 ParSpMatVec=0.0095	 speedup=20.5079

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0605	 ParSpMatVec=0.0339	 speedup=1.7872
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0605	 ParSpMatVec=0.0125	 speedup=4.8568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0605	 ParSpMatVec=0.0081	 speedup=7.4829
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0605	 ParSpMatVec=0.0102	 speedup=5.9229
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0605	 ParSpMatVec=0.0103	 speedup=5.8551

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0714	 ParSpMatVec=0.0596	 speedup=1.1989
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0714	 ParSpMatVec=0.0019	 speedup=37.4626
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0714	 ParSpMatVec=0.0014	 speedup=51.0019
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0714	 ParSpMatVec=0.0017	 speedup=41.2294
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0714	 ParSpMatVec=0.0022	 speedup=33.1939

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0093	 ParSpMatVec=0.0430	 speedup=0.2159
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0093	 ParSpMatVec=0.0036	 speedup=2.5685
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0093	 ParSpMatVec=0.0032	 speedup=2.9422
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0093	 ParSpMatVec=0.0027	 speedup=3.3858
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0093	 ParSpMatVec=0.0028	 speedup=3.2840

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0719	 ParSpMatVec=0.0755	 speedup=0.9521
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0719	 ParSpMatVec=0.0047	 speedup=15.1411
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0719	 ParSpMatVec=0.0047	 speedup=15.1467
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0719	 ParSpMatVec=0.0027	 speedup=26.8964
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0719	 ParSpMatVec=0.0031	 speedup=23.1875

INFO: ParSpMatVec tests passed

>>> End of log
