>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.1
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1026.921875 MB free)
Uptime: 13784.0 sec
Load Avg:  1.03271484375  1.08447265625  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     847043 s       7252 s      76143 s     267484 s         24 s
#2  3499 MHz     200393 s        150 s      37856 s    1108448 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.19.0
 - SHA                           0.3.1
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1731	 ParSpMatVec=0.0263	 speedup=6.5701
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1731	 ParSpMatVec=0.0097	 speedup=17.8730
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1731	 ParSpMatVec=0.0116	 speedup=14.8907
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1731	 ParSpMatVec=0.0066	 speedup=26.2651
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1731	 ParSpMatVec=0.0098	 speedup=17.6742
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1913	 ParSpMatVec=0.0341	 speedup=5.6088
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1913	 ParSpMatVec=0.0136	 speedup=14.0743
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1913	 ParSpMatVec=0.0076	 speedup=25.1080
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1913	 ParSpMatVec=0.0099	 speedup=19.3797
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1913	 ParSpMatVec=0.0159	 speedup=12.0353

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0687	 ParSpMatVec=0.0333	 speedup=2.0664
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0687	 ParSpMatVec=0.0133	 speedup=5.1670
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0687	 ParSpMatVec=0.0081	 speedup=8.4999
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0687	 ParSpMatVec=0.0107	 speedup=6.4150
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0687	 ParSpMatVec=0.0141	 speedup=4.8853

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0617	 ParSpMatVec=0.0364	 speedup=1.6927
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0617	 ParSpMatVec=0.0051	 speedup=12.1121
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0617	 ParSpMatVec=0.0017	 speedup=36.4332
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0617	 ParSpMatVec=0.0012	 speedup=50.5455
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0617	 ParSpMatVec=0.0013	 speedup=48.5750

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0383	 speedup=0.1991
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0027	 speedup=2.8271
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0034	 speedup=2.2110
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0026	 speedup=2.9739
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0027	 speedup=2.8143

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0812	 ParSpMatVec=0.0651	 speedup=1.2464
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0812	 ParSpMatVec=0.0039	 speedup=20.9995
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0812	 ParSpMatVec=0.0037	 speedup=21.9489
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0812	 ParSpMatVec=0.0025	 speedup=32.4165
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0812	 ParSpMatVec=0.0029	 speedup=27.9235

INFO: ParSpMatVec tests passed

>>> End of log
