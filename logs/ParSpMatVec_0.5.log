>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:532
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+5179
Commit fa5af23* (2016-07-06 00:27 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2250	 ParSpMatVec=0.0275	 speedup=8.1747
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2250	 ParSpMatVec=0.0098	 speedup=23.0065
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2250	 ParSpMatVec=0.0152	 speedup=14.8039
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2250	 ParSpMatVec=0.0104	 speedup=21.5931
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2250	 ParSpMatVec=0.0099	 speedup=22.7469
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1545	 ParSpMatVec=0.0709	 speedup=2.1797
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1545	 ParSpMatVec=0.0134	 speedup=11.5197
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1545	 ParSpMatVec=0.0154	 speedup=10.0056
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1545	 ParSpMatVec=0.0135	 speedup=11.4130
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1545	 ParSpMatVec=0.0151	 speedup=10.2465

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0623	 ParSpMatVec=0.0328	 speedup=1.9002
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0623	 ParSpMatVec=0.0133	 speedup=4.6733
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0623	 ParSpMatVec=0.0156	 speedup=3.9875
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0623	 ParSpMatVec=0.0144	 speedup=4.3342
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0623	 ParSpMatVec=0.0173	 speedup=3.5930

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0795	 ParSpMatVec=0.0577	 speedup=1.3791
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0795	 ParSpMatVec=0.0026	 speedup=30.2500
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0795	 ParSpMatVec=0.0025	 speedup=32.3022
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0795	 ParSpMatVec=0.0017	 speedup=45.6424
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0795	 ParSpMatVec=0.0017	 speedup=46.4422

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0072	 ParSpMatVec=0.0647	 speedup=0.1116
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0072	 ParSpMatVec=0.0036	 speedup=1.9793
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0072	 ParSpMatVec=0.0024	 speedup=2.9554
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0072	 ParSpMatVec=0.0024	 speedup=2.9948
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0072	 ParSpMatVec=0.0026	 speedup=2.7576

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0723	 ParSpMatVec=0.0662	 speedup=1.0926
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0723	 ParSpMatVec=0.0042	 speedup=17.3940
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0723	 ParSpMatVec=0.0021	 speedup=34.8741
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0723	 ParSpMatVec=0.0026	 speedup=28.2056
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0723	 ParSpMatVec=0.0025	 speedup=28.4663

INFO: ParSpMatVec tests passed

>>> End of log
