>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1014.8046875 MB free)
Uptime: 12521.0 sec
Load Avg:  1.01318359375  1.06884765625  1.02294921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     687072 s       5821 s      80801 s     342260 s         27 s
#2  3500 MHz     242626 s       1560 s      39147 s     934470 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2725	 ParSpMatVec=0.0174	 speedup=15.6581
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2725	 ParSpMatVec=0.0088	 speedup=30.9648
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2725	 ParSpMatVec=0.0113	 speedup=24.0686
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2725	 ParSpMatVec=0.0111	 speedup=24.5394
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2725	 ParSpMatVec=0.0065	 speedup=41.7695
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2210	 ParSpMatVec=0.0478	 speedup=4.6262
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2210	 ParSpMatVec=0.0124	 speedup=17.8857
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2210	 ParSpMatVec=0.0141	 speedup=15.6725
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2210	 ParSpMatVec=0.0122	 speedup=18.1812
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2210	 ParSpMatVec=0.0155	 speedup=14.2144

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0493	 ParSpMatVec=0.0310	 speedup=1.5905
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0493	 ParSpMatVec=0.0105	 speedup=4.7120
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0493	 ParSpMatVec=0.0169	 speedup=2.9214
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0493	 ParSpMatVec=0.0124	 speedup=3.9672
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0493	 ParSpMatVec=0.0123	 speedup=4.0158

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0539	 ParSpMatVec=0.0386	 speedup=1.3943
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0539	 ParSpMatVec=0.0021	 speedup=25.6084
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0539	 ParSpMatVec=0.0028	 speedup=19.5369
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0539	 ParSpMatVec=0.0017	 speedup=32.0697
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0539	 ParSpMatVec=0.0015	 speedup=35.1061

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0087	 ParSpMatVec=0.0629	 speedup=0.1384
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0087	 ParSpMatVec=0.0039	 speedup=2.2170
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0087	 ParSpMatVec=0.0019	 speedup=4.4955
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0087	 ParSpMatVec=0.0026	 speedup=3.3389
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0087	 ParSpMatVec=0.0026	 speedup=3.2979

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0865	 ParSpMatVec=0.0427	 speedup=2.0259
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0865	 ParSpMatVec=0.0033	 speedup=25.9578
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0865	 ParSpMatVec=0.0021	 speedup=40.2785
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0865	 ParSpMatVec=0.0021	 speedup=40.5917
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0865	 ParSpMatVec=0.0027	 speedup=32.4700

INFO: ParSpMatVec tests passed

>>> End of log
