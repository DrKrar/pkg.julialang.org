>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1002.23046875 MB free)
Uptime: 10578.0 sec
Load Avg:  1.0166015625  1.0283203125  0.98681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     562769 s        399 s      76002 s     281341 s         17 s
#2  3499 MHz     136008 s       5350 s      31402 s     852968 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2857	 ParSpMatVec=0.0293	 speedup=9.7407
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2857	 ParSpMatVec=0.0090	 speedup=31.5961
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2857	 ParSpMatVec=0.0113	 speedup=25.1909
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2857	 ParSpMatVec=0.0096	 speedup=29.7599
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2857	 ParSpMatVec=0.0088	 speedup=32.5305
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1584	 ParSpMatVec=0.0558	 speedup=2.8370
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1584	 ParSpMatVec=0.0124	 speedup=12.7254
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1584	 ParSpMatVec=0.0139	 speedup=11.3936
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1584	 ParSpMatVec=0.0131	 speedup=12.1063
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1584	 ParSpMatVec=0.0107	 speedup=14.8182

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0350	 ParSpMatVec=0.0214	 speedup=1.6383
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0350	 ParSpMatVec=0.0123	 speedup=2.8423
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0350	 ParSpMatVec=0.0161	 speedup=2.1741
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0350	 ParSpMatVec=0.0132	 speedup=2.6498
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0350	 ParSpMatVec=0.0137	 speedup=2.5600

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0657	 ParSpMatVec=0.0445	 speedup=1.4775
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0657	 ParSpMatVec=0.0024	 speedup=27.0098
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0657	 ParSpMatVec=0.0021	 speedup=30.8500
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0657	 ParSpMatVec=0.0018	 speedup=36.5699
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0657	 ParSpMatVec=0.0017	 speedup=39.6121

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0082	 ParSpMatVec=0.0373	 speedup=0.2197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0082	 ParSpMatVec=0.0028	 speedup=2.9630
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0082	 ParSpMatVec=0.0020	 speedup=4.1809
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0082	 ParSpMatVec=0.0026	 speedup=3.1077
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0082	 ParSpMatVec=0.0026	 speedup=3.1552

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0875	 ParSpMatVec=0.0648	 speedup=1.3501
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0875	 ParSpMatVec=0.0041	 speedup=21.5093
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0875	 ParSpMatVec=0.0030	 speedup=29.4554
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0875	 ParSpMatVec=0.0061	 speedup=14.3617
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0875	 ParSpMatVec=0.0052	 speedup=16.8171

INFO: ParSpMatVec tests passed

>>> End of log
