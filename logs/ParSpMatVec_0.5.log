>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1041.95703125 MB free)
Uptime: 13743.0 sec
Load Avg:  1.087890625  1.09423828125  1.06201171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     853660 s         52 s      74396 s     268356 s         16 s
#2  3499 MHz     227934 s         96 s      38209 s    1081382 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.3294	 ParSpMatVec=0.0264	 speedup=12.4953
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.3294	 ParSpMatVec=0.0094	 speedup=34.8955
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.3294	 ParSpMatVec=0.0143	 speedup=23.0916
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.3294	 ParSpMatVec=0.0079	 speedup=41.6715
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.3294	 ParSpMatVec=0.0083	 speedup=39.8735
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2301	 ParSpMatVec=0.0565	 speedup=4.0750
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2301	 ParSpMatVec=0.0127	 speedup=18.0803
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2301	 ParSpMatVec=0.0150	 speedup=15.3679
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2301	 ParSpMatVec=0.0132	 speedup=17.4442
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2301	 ParSpMatVec=0.0131	 speedup=17.6240

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0559	 ParSpMatVec=0.0251	 speedup=2.2304
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0559	 ParSpMatVec=0.0135	 speedup=4.1418
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0559	 ParSpMatVec=0.0125	 speedup=4.4600
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0559	 ParSpMatVec=0.0121	 speedup=4.6262
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0559	 ParSpMatVec=0.0130	 speedup=4.3095

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0641	 ParSpMatVec=0.0536	 speedup=1.1950
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0641	 ParSpMatVec=0.0024	 speedup=26.6423
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0641	 ParSpMatVec=0.0028	 speedup=22.9948
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0641	 ParSpMatVec=0.0020	 speedup=31.4568
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0641	 ParSpMatVec=0.0016	 speedup=40.7448

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0075	 ParSpMatVec=0.0366	 speedup=0.2060
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0075	 ParSpMatVec=0.0032	 speedup=2.3675
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0075	 ParSpMatVec=0.0014	 speedup=5.5592
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0075	 ParSpMatVec=0.0036	 speedup=2.0724
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0075	 ParSpMatVec=0.0023	 speedup=3.2815

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0536	 ParSpMatVec=0.0380	 speedup=1.4096
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0536	 ParSpMatVec=0.0030	 speedup=18.0008
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0536	 ParSpMatVec=0.0017	 speedup=30.9958
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0536	 ParSpMatVec=0.0024	 speedup=22.5689
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0536	 ParSpMatVec=0.0022	 speedup=24.2228

INFO: ParSpMatVec tests passed

>>> End of log
