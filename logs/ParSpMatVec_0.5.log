>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.23
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:522
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-pre+5606
Commit 5fe9e53 (2016-07-21 19:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2823	 ParSpMatVec=0.0268	 speedup=10.5330
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2823	 ParSpMatVec=0.0095	 speedup=29.7351
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2823	 ParSpMatVec=0.0130	 speedup=21.7068
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2823	 ParSpMatVec=0.0101	 speedup=28.0525
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2823	 ParSpMatVec=0.0135	 speedup=20.9072
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1412	 ParSpMatVec=0.0451	 speedup=3.1329
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1412	 ParSpMatVec=0.0116	 speedup=12.2031
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1412	 ParSpMatVec=0.0150	 speedup=9.4268
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1412	 ParSpMatVec=0.0128	 speedup=11.0650
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1412	 ParSpMatVec=0.0134	 speedup=10.5377

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0716	 ParSpMatVec=0.0238	 speedup=3.0162
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0716	 ParSpMatVec=0.0123	 speedup=5.8287
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0716	 ParSpMatVec=0.0146	 speedup=4.9227
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0716	 ParSpMatVec=0.0140	 speedup=5.1037
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0716	 ParSpMatVec=0.0144	 speedup=4.9794

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0540	 ParSpMatVec=0.0622	 speedup=0.8674
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0540	 ParSpMatVec=0.0021	 speedup=25.2918
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0540	 ParSpMatVec=0.0028	 speedup=19.0562
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0540	 ParSpMatVec=0.0020	 speedup=27.2305
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0540	 ParSpMatVec=0.0020	 speedup=27.5394

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0705	 speedup=0.1252
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0043	 speedup=2.0504
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0019	 speedup=4.5269
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0027	 speedup=3.2197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0032	 speedup=2.7909

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0758	 ParSpMatVec=0.0728	 speedup=1.0421
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0758	 ParSpMatVec=0.0041	 speedup=18.3893
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0758	 ParSpMatVec=0.0018	 speedup=41.4182
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0758	 ParSpMatVec=0.0028	 speedup=27.4277
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0758	 ParSpMatVec=0.0294	 speedup=2.5835

INFO: ParSpMatVec tests passed

>>> End of log
