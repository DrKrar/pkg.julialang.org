>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1013.05859375 MB free)
Uptime: 11376.0 sec
Load Avg:  1.04931640625  1.0146484375  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     715945 s        106 s      65213 s     219357 s         16 s
#2  3500 MHz     202740 s         44 s      33525 s     877925 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.10.0
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1760	 ParSpMatVec=0.0229	 speedup=7.6898
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1760	 ParSpMatVec=0.0080	 speedup=22.1167
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1760	 ParSpMatVec=0.0109	 speedup=16.0855
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1760	 ParSpMatVec=0.0157	 speedup=11.2244
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1760	 ParSpMatVec=0.0083	 speedup=21.2340
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2063	 ParSpMatVec=0.0542	 speedup=3.8095
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2063	 ParSpMatVec=0.0133	 speedup=15.5545
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2063	 ParSpMatVec=0.0142	 speedup=14.5695
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2063	 ParSpMatVec=0.0132	 speedup=15.6379
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2063	 ParSpMatVec=0.0127	 speedup=16.2791

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0545	 ParSpMatVec=0.0344	 speedup=1.5863
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0545	 ParSpMatVec=0.0142	 speedup=3.8415
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0545	 ParSpMatVec=0.0156	 speedup=3.5026
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0545	 ParSpMatVec=0.0129	 speedup=4.2156
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0545	 ParSpMatVec=0.0125	 speedup=4.3592

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0708	 ParSpMatVec=0.0337	 speedup=2.0985
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0708	 ParSpMatVec=0.0019	 speedup=36.5381
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0708	 ParSpMatVec=0.0020	 speedup=35.5258
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0708	 ParSpMatVec=0.0016	 speedup=43.8851
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0708	 ParSpMatVec=0.0018	 speedup=40.1712

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0074	 ParSpMatVec=0.0615	 speedup=0.1197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0074	 ParSpMatVec=0.0038	 speedup=1.9513
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0074	 ParSpMatVec=0.0036	 speedup=2.0487
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0074	 ParSpMatVec=0.0020	 speedup=3.6229
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0074	 ParSpMatVec=0.0023	 speedup=3.2488

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0820	 ParSpMatVec=0.0687	 speedup=1.1929
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0820	 ParSpMatVec=0.0033	 speedup=24.4816
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0820	 ParSpMatVec=0.0336	 speedup=2.4387
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0820	 ParSpMatVec=0.0047	 speedup=17.3855
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0820	 ParSpMatVec=0.0021	 speedup=38.7293

INFO: ParSpMatVec tests passed

>>> End of log
