>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:532
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+5154
Commit 6ab1b19* (2016-07-05 01:05 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2200	 ParSpMatVec=0.0453	 speedup=4.8543
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2200	 ParSpMatVec=0.0084	 speedup=26.1571
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2200	 ParSpMatVec=0.0121	 speedup=18.1802
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2200	 ParSpMatVec=0.0095	 speedup=23.1264
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2200	 ParSpMatVec=0.0104	 speedup=21.0818
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1788	 ParSpMatVec=0.0365	 speedup=4.9036
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1788	 ParSpMatVec=0.0130	 speedup=13.7173
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1788	 ParSpMatVec=0.0156	 speedup=11.4765
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1788	 ParSpMatVec=0.0175	 speedup=10.2073
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1788	 ParSpMatVec=0.0137	 speedup=13.0953

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0786	 ParSpMatVec=0.0305	 speedup=2.5723
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0786	 ParSpMatVec=0.0114	 speedup=6.8804
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0786	 ParSpMatVec=0.0214	 speedup=3.6666
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0786	 ParSpMatVec=0.0133	 speedup=5.9277
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0786	 ParSpMatVec=0.0115	 speedup=6.8483

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0742	 ParSpMatVec=0.0617	 speedup=1.2020
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0742	 ParSpMatVec=0.0027	 speedup=27.0291
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0742	 ParSpMatVec=0.0024	 speedup=31.0813
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0742	 ParSpMatVec=0.0022	 speedup=33.6391
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0742	 ParSpMatVec=0.0016	 speedup=47.0340

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0604	 speedup=0.1340
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0040	 speedup=2.0261
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0022	 speedup=3.6573
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0024	 speedup=3.3406
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0040	 speedup=2.0469

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0865	 ParSpMatVec=0.0654	 speedup=1.3216
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0865	 ParSpMatVec=0.0043	 speedup=19.9028
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0865	 ParSpMatVec=0.0021	 speedup=40.4053
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0865	 ParSpMatVec=0.0041	 speedup=20.9556
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0865	 ParSpMatVec=0.0027	 speedup=32.3565

INFO: ParSpMatVec tests passed

>>> End of log
