>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.7
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.2
INFO: Installing URIParser v0.1.8
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1049.55078125 MB free)
Uptime: 14844.0 sec
Load Avg:  0.99462890625  1.03076171875  1.01953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     836219 s       2598 s      74448 s     379379 s         30 s
#2  3499 MHz     251393 s       6025 s      39054 s    1143656 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.7
 - Compat                        0.21.0
 - SHA                           0.3.2
 - URIParser                     0.1.8
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1795	 ParSpMatVec=0.0181	 speedup=9.9229
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1795	 ParSpMatVec=0.0089	 speedup=20.0690
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1795	 ParSpMatVec=0.0132	 speedup=13.5876
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1795	 ParSpMatVec=0.0103	 speedup=17.4520
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1795	 ParSpMatVec=0.0073	 speedup=24.4299
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2456	 ParSpMatVec=0.0561	 speedup=4.3820
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2456	 ParSpMatVec=0.0144	 speedup=17.0740
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2456	 ParSpMatVec=0.0158	 speedup=15.4988
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2456	 ParSpMatVec=0.0122	 speedup=20.1299
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2456	 ParSpMatVec=0.0125	 speedup=19.6951

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0550	 ParSpMatVec=0.0307	 speedup=1.7936
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0550	 ParSpMatVec=0.0124	 speedup=4.4289
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0550	 ParSpMatVec=0.0140	 speedup=3.9250
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0550	 ParSpMatVec=0.0135	 speedup=4.0741
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0550	 ParSpMatVec=0.0131	 speedup=4.1993

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0669	 ParSpMatVec=0.0559	 speedup=1.1959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0669	 ParSpMatVec=0.0024	 speedup=27.4033
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0669	 ParSpMatVec=0.0024	 speedup=27.3715
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0669	 ParSpMatVec=0.0015	 speedup=45.5685
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0669	 ParSpMatVec=0.0017	 speedup=38.7748

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0082	 ParSpMatVec=0.0619	 speedup=0.1323
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0082	 ParSpMatVec=0.0044	 speedup=1.8519
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0082	 ParSpMatVec=0.0027	 speedup=3.0749
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0082	 ParSpMatVec=0.0029	 speedup=2.7859
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0082	 ParSpMatVec=0.0030	 speedup=2.7455

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0723	 ParSpMatVec=0.0646	 speedup=1.1203
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0723	 ParSpMatVec=0.0045	 speedup=15.9765
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0723	 ParSpMatVec=0.0020	 speedup=35.4343
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0723	 ParSpMatVec=0.0021	 speedup=33.8020
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0723	 ParSpMatVec=0.0026	 speedup=27.8585

INFO: ParSpMatVec tests passed

>>> End of log
