>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:493
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-pre+5637
Commit f578be3 (2016-07-22 22:32 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2723	 ParSpMatVec=0.0256	 speedup=10.6489
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2723	 ParSpMatVec=0.0081	 speedup=33.5787
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2723	 ParSpMatVec=0.0110	 speedup=24.7005
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2723	 ParSpMatVec=0.0093	 speedup=29.2215
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2723	 ParSpMatVec=0.0085	 speedup=32.0296
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1985	 ParSpMatVec=0.0493	 speedup=4.0241
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1985	 ParSpMatVec=0.0126	 speedup=15.7935
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1985	 ParSpMatVec=0.0134	 speedup=14.8378
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1985	 ParSpMatVec=0.0093	 speedup=21.4246
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1985	 ParSpMatVec=0.0100	 speedup=19.8744

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0595	 ParSpMatVec=0.0324	 speedup=1.8374
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0595	 ParSpMatVec=0.0128	 speedup=4.6644
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0595	 ParSpMatVec=0.0084	 speedup=7.0495
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0595	 ParSpMatVec=0.0104	 speedup=5.7109
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0595	 ParSpMatVec=0.0101	 speedup=5.9238

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0701	 ParSpMatVec=0.0600	 speedup=1.1672
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0701	 ParSpMatVec=0.0021	 speedup=33.0482
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0701	 ParSpMatVec=0.0017	 speedup=42.0983
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0701	 ParSpMatVec=0.0012	 speedup=59.3139
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0701	 ParSpMatVec=0.0015	 speedup=47.5164

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0085	 ParSpMatVec=0.0663	 speedup=0.1283
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0085	 ParSpMatVec=0.0039	 speedup=2.1624
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0085	 ParSpMatVec=0.0026	 speedup=3.2333
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0085	 ParSpMatVec=0.0030	 speedup=2.8596
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0085	 ParSpMatVec=0.0034	 speedup=2.5126

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0879	 ParSpMatVec=0.0768	 speedup=1.1437
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0879	 ParSpMatVec=0.0046	 speedup=19.2288
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0879	 ParSpMatVec=0.0046	 speedup=18.9220
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0879	 ParSpMatVec=0.0031	 speedup=28.1665
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0879	 ParSpMatVec=0.0320	 speedup=2.7475

INFO: ParSpMatVec tests passed

>>> End of log
