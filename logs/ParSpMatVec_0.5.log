>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:522
 in include_from_node1(::String) at ./loading.jl:426
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:442 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:231
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0-dev+4846
Commit 59b2530* (2016-06-17 21:46 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1989	 ParSpMatVec=0.0285	 speedup=6.9779
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1989	 ParSpMatVec=0.0084	 speedup=23.5440
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1989	 ParSpMatVec=0.0116	 speedup=17.1448
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1989	 ParSpMatVec=0.0094	 speedup=21.0914
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1989	 ParSpMatVec=0.0101	 speedup=19.7713
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1940	 ParSpMatVec=0.0487	 speedup=3.9816
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1940	 ParSpMatVec=0.0132	 speedup=14.6874
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1940	 ParSpMatVec=0.0129	 speedup=15.0864
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1940	 ParSpMatVec=0.0195	 speedup=9.9636
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1940	 ParSpMatVec=0.0121	 speedup=16.0364

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0712	 ParSpMatVec=0.0248	 speedup=2.8751
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0712	 ParSpMatVec=0.0126	 speedup=5.6604
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0712	 ParSpMatVec=0.0138	 speedup=5.1492
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0712	 ParSpMatVec=0.0140	 speedup=5.0971
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0712	 ParSpMatVec=0.0125	 speedup=5.6787

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1357	 ParSpMatVec=0.0468	 speedup=2.8993
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1357	 ParSpMatVec=0.0024	 speedup=55.9060
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1357	 ParSpMatVec=0.0069	 speedup=19.7814
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1357	 ParSpMatVec=0.0016	 speedup=84.3945
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1357	 ParSpMatVec=0.0015	 speedup=92.4122

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0611	 speedup=0.1415
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0033	 speedup=2.6137
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0023	 speedup=3.7291
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0026	 speedup=3.2822
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0017	 speedup=5.0879

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1188	 ParSpMatVec=0.0642	 speedup=1.8505
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1188	 ParSpMatVec=0.0034	 speedup=34.6236
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1188	 ParSpMatVec=0.0017	 speedup=69.5065
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1188	 ParSpMatVec=0.0038	 speedup=31.5302
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1188	 ParSpMatVec=0.0023	 speedup=51.7536

INFO: ParSpMatVec tests passed

>>> End of log
