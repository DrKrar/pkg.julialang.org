>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from https://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.5/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.5/ParSpMatVec/deps/src
useIntel = false
creating build directory
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:492
 in include_from_node1(::String) at ./loading.jl:488
 in evalfile(::String, ::Array{String,1}) at ./loading.jl:504 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:59
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:113
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParSpMatVec/deps/build.jl, in expression starting on line 29
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1041.84765625 MB free)
Uptime: 11410.0 sec
Load Avg:  0.9970703125  1.04296875  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     636640 s       3302 s      60377 s     316334 s         21 s
#2  3500 MHz     202192 s       2467 s      33652 s     877863 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.2816	 ParSpMatVec=0.0242	 speedup=11.6223
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.2816	 ParSpMatVec=0.0091	 speedup=30.9501
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.2816	 ParSpMatVec=0.0125	 speedup=22.6041
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.2816	 ParSpMatVec=0.0107	 speedup=26.2201
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.2816	 ParSpMatVec=0.0110	 speedup=25.5565
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1984	 ParSpMatVec=0.0473	 speedup=4.1945
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1984	 ParSpMatVec=0.0126	 speedup=15.7005
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1984	 ParSpMatVec=0.0151	 speedup=13.1147
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1984	 ParSpMatVec=0.0119	 speedup=16.6178
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1984	 ParSpMatVec=0.0125	 speedup=15.8230

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0565	 ParSpMatVec=0.0313	 speedup=1.8044
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0565	 ParSpMatVec=0.0127	 speedup=4.4399
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0565	 ParSpMatVec=0.0163	 speedup=3.4585
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0565	 ParSpMatVec=0.0135	 speedup=4.2010
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0565	 ParSpMatVec=0.0132	 speedup=4.2867

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0711	 ParSpMatVec=0.0561	 speedup=1.2660
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0711	 ParSpMatVec=0.0036	 speedup=19.5745
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0711	 ParSpMatVec=0.0028	 speedup=25.1406
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0711	 ParSpMatVec=0.0020	 speedup=35.9032
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0711	 ParSpMatVec=0.0015	 speedup=47.8727

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0110	 ParSpMatVec=0.0659	 speedup=0.1672
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0110	 ParSpMatVec=0.0024	 speedup=4.5344
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0110	 ParSpMatVec=0.0030	 speedup=3.7197
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0110	 ParSpMatVec=0.0027	 speedup=4.0170
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0110	 ParSpMatVec=0.0029	 speedup=3.8313

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0941	 ParSpMatVec=0.0717	 speedup=1.3122
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0941	 ParSpMatVec=0.0035	 speedup=26.8278
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0941	 ParSpMatVec=0.0021	 speedup=44.0735
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0941	 ParSpMatVec=0.0046	 speedup=20.5785
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0941	 ParSpMatVec=0.0023	 speedup=40.6001

INFO: ParSpMatVec tests passed

>>> End of log
