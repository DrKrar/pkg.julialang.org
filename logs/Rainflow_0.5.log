>>> 'Pkg.add("Rainflow")' log
INFO: Cloning cache of Rainflow from https://github.com/dhoegh/Rainflow.jl.git
INFO: Installing Rainflow v0.1.0
INFO: Package database updated

>>> 'Pkg.test("Rainflow")' log
Julia Version 0.5.0-rc1+1
Commit acfd04c (2016-08-05 15:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (658.49609375 MB free)
Uptime: 15572.0 sec
Load Avg:  0.974609375  0.9794921875  0.9951171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     790572 s         55 s      97525 s     454207 s         33 s
#2  3498 MHz     266117 s        103 s      47228 s    1184250 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.6.0
 - Rainflow                      0.1.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing Rainflow
For added plotting features do: Pkg.add("PyPlot")
ERROR: LoadError: BoundsError: attempt to access 100-element Array{Float64,1} at index [Any[true,Bool[true,true,true,false,true,false,true,true,false,true,false,false,true,true,true,true,true,false,true,true,true,true,false,true,false,false,true,false,false,true,true,false,true,false,false,true,false,false,true,true,true,false,true,true,false,true,false,true,true,true,true,false,true,false,false,true,true,true,false,true,false,true,false,true,false,true,true,false,true,true,true,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,true,true,true,false,false,false,true,false,true,true,true],true]]
 in throw_boundserror(::Array{Float64,1}, ::Tuple{Array{Any,1}}) at ./abstractarray.jl:272
 in checkbounds at ./abstractarray.jl:201 [inlined]
 in _getindex at ./multidimensional.jl:263 [inlined]
 in getindex at ./abstractarray.jl:666 [inlined]
 in sort_peaks(::Array{Float64,1}, ::Array{FloatRange{Float64},1}) at /home/vagrant/.julia/v0.5/Rainflow/src/Rainflow.jl:11
 in sort_peaks(::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Rainflow/src/Rainflow.jl:8
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Rainflow/test/runtests.jl, in expression starting on line 6
==============================[ ERROR: Rainflow ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Rainflow/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Rainflow had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
