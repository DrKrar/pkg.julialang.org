>>> 'Pkg.add("IntArrays")' log
INFO: Installing IntArrays v0.0.1
INFO: Package database updated

>>> 'Pkg.test("IntArrays")' log
Julia Version 0.6.0-dev.1178
Commit 421f079 (2016-11-02 19:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (2284.50390625 MB free)
Uptime: 31231.0 sec
Load Avg:  1.01953125  1.0009765625  1.04638671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1985365 s       2275 s     184797 s     600274 s         91 s
#2  3500 MHz     778697 s       5005 s     106748 s    2135209 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - IntArrays                     0.0.1
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.9.3
INFO: Computing test dependencies for IntArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing IntArrays

WARNING: deprecated syntax "call(::Type{IntArray{w,T}}, ...)".
Use "(::Type{IntArray{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntArray{w,T}}, ...)".
Use "(::Type{IntArray{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntArray{w,T}}, ...)".
Use "(::Type{IntArray{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntArray{w,T}}, ...)".
Use "(::Type{IntArray{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntArray{w,T}}, ...)".
Use "(::Type{IntArray{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntArray{w,T,n}}, ...)".
Use "(::Type{IntArray{w,T,n}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntArray{w,T,n}}, ...)".
Use "(::Type{IntArray{w,T,n}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntVector{w,T}}, ...)".
Use "(::Type{IntVector{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntVector{w,T}}, ...)".
Use "(::Type{IntVector{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntVector{w,T}}, ...)".
Use "(::Type{IntVector{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntVector{w,T}}, ...)".
Use "(::Type{IntVector{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntMatrix{w,T}}, ...)".
Use "(::Type{IntMatrix{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntMatrix{w,T}}, ...)".
Use "(::Type{IntMatrix{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntMatrix{w,T}}, ...)".
Use "(::Type{IntMatrix{w,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{IntMatrix{w,T}}, ...)".
Use "(::Type{IntMatrix{w,T}})(...)" instead.
conversion
  > IntVector
  > IntMatrix
  > three-dimensional array
9 facts verified.
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::Symbol, ::Vararg{Any,N}) at ./deprecated.jl:30
 in @fact_throws(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/IntArrays/test/runtests.jl, in expression starting on line 36
construction
  > IntVector
  > IntMatrix
  > invalid width
  > mmap
9 facts verified.
similar
  > IntVector
7 facts verified.
getindex
  > IntVector
  > IntMatrix
25 facts verified.
setindex!
  > IntVector
  > IntMatrix
13 facts verified.
comparison
4 facts verified.
sizeof
  > smaller bits
4 facts verified.
copy
  > same length
  > larger
  > smaller
7 facts verified.
fill!
  > IntVector
  > IntMatrix
8 facts verified.
reverse
10 facts verified.
push!/pop!
6 facts verified.
append!
3 facts verified.
radixsort
12 facts verified.
conversion
  > empty
  > small
  > large
1200 facts verified.
random run
  > IntVector
  > IntMatrix
181412 facts verified.
INFO: IntArrays tests passed
INFO: Removing FactCheck v0.4.3

>>> End of log
