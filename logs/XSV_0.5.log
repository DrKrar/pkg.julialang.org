>>> 'Pkg.add("XSV")' log
INFO: Cloning cache of XSV from https://github.com/benhamner/XSV.jl.git
INFO: Installing XSV v0.0.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of XSV
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("XSV")' log
Julia Version 0.5.0-dev+4934
Commit 1a1a9a6* (2016-06-25 02:49 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing XSV
Running tests:
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/XSV/test/readxsv.jl:6
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/XSV/test/readxsv.jl:6
WARNING: Base.ASCIIString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/XSV/test/readxsv.jl:6
in get_string_type at /home/vagrant/.julia/v0.5/XSV/src/readxsv.jl
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/XSV/test/readxsv.jl:6
in get_string_type at /home/vagrant/.julia/v0.5/XSV/src/readxsv.jl
Error During Test
  Test threw an exception of type UndefVarError
  Expression: ((readxsv("1,2,3\n4,5,6"))[1])[1] == "1"
  UndefVarError: uint8 not defined
   in schedule_and_wait(::Task, ::Void) at ./event.jl:78
   in consume(::Task) at ./task.jl:239
   in done at ./task.jl:244 [inlined]
   in #readxsv#6(::Char, ::Char, ::String, ::Bool, ::Function, ::Base.AbstractIOBuffer{Array{UInt8,1}}) at /home/vagrant/.julia/v0.5/XSV/src/readxsv.jl:132
   in (::XSV.#kw##readxsv)(::Array{Any,1}, ::XSV.#readxsv, ::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./null:0
   in readxsv(::String) at /home/vagrant/.julia/v0.5/XSV/src/readxsv.jl:137
   in include_from_node1(::String) at ./loading.jl:426
   in macro expansion; at /home/vagrant/.julia/v0.5/XSV/test/runtests.jl:10 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:426
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
	[1m[31mFAILED[0m: readxsv.jl
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:399
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:282
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at /home/vagrant/.julia/v0.5/XSV/test/runtests.jl:10 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/XSV/test/readxsv.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.5/XSV/test/runtests.jl, in expression starting on line 8
=================================[ ERROR: XSV ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/XSV/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: XSV had test errors
 in #test#49(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:694
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./null:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./null:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
