>>> 'Pkg.add("DASSL")' log
INFO: Cloning cache of DASSL from https://github.com/JuliaDiffEq/DASSL.jl.git
INFO: Installing DASSL v0.1.0
INFO: Installing FactCheck v0.4.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DASSL
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DASSL")' log
Julia Version 0.6.0-dev.1918
Commit cfa2312 (2017-01-04 22:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (765.02734375 MB free)
Uptime: 15778.0 sec
Load Avg:  1.05908203125  1.04052734375  1.04931640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3512 MHz     848732 s       6637 s      90426 s     475483 s         33 s
#2  3512 MHz     314238 s         69 s      49866 s    1174601 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - DASSL                         0.1.0
 - JSON                          0.8.0
2 additional packages:
 - Compat                        0.10.0
 - FactCheck                     0.4.3
INFO: Testing DASSL
Testing maxorder
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] dassl_weights(::Array{Float64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:579
 [4] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [5] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [6] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] dassl_weights(::Array{Float64,1}, ::Float64, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:579
 [4] (::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:678
 [5] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [6] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [7] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [8] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [9] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: max{T1 <: Real,T2 <: Real}(x::AbstractArray{T1},y::AbstractArray{T2}) is deprecated, use max.(x,y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:50
 [3] max at ./operators.jl:273 [inlined]
 [4] (::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [5] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [6] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [7] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [8] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [9] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: max{T1 <: Real,T2 <: Real}(x::AbstractArray{T1},y::AbstractArray{T2}) is deprecated, use max.(x,y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:50
 [3] max at ./operators.jl:273 [inlined]
 [4] (::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [5] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [6] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [7] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [8] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [9] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] newton_iteration(::DASSL.##24#27{DASSL.#f_newton#22{#F#17,Float64}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:533
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:492
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] newton_iteration(::DASSL.##24#27{DASSL.#f_newton#22{#F#17,Float64}}, ::Array{Float64,1}, ::DASSL.#normy#6{DASSL.#dassl_norm}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:533
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:492
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.#normy#6{DASSL.#dassl_norm}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:74
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] newton_iteration(::DASSL.##25#28{Float64,DASSL.#f_newton#22{#F#17,Float64}}, ::Array{Float64,1}, ::DASSL.#normy#6{DASSL.#dassl_norm}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:533
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#F#17,Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:500
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#F#17, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.#normy#6{DASSL.#dassl_norm}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#F#17,Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#F#17, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:74
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#F#17,Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:22
 [4] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:23
 [4] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::##1#16)() at /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl:38
 [4] facts(::##1#16, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 5
36 facts verified.
Testing minimal error tolerances
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#Fvdp#39{Float64}, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#Fvdp#39{Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#Fvdp#39{Float64},Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 46
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#Fvdp#39{Float64}, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#Fvdp#39{Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#Fvdp#39{Float64},Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 46
WARNING: max{T1 <: Real,T2 <: Real}(x::AbstractArray{T1},y::AbstractArray{T2}) is deprecated, use max.(x,y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:50
 [3] max at ./operators.jl:273 [inlined]
 [4] (::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [5] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [6] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#Fvdp#39{Float64}, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [7] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#Fvdp#39{Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [8] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [9] (::DASSL.##8#9{Array{Any,1},#Fvdp#39{Float64},Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 46
WARNING: max{T1 <: Real,T2 <: Real}(x::AbstractArray{T1},y::AbstractArray{T2}) is deprecated, use max.(x,y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Array{Float64,1}) at ./deprecated.jl:50
 [3] max at ./operators.jl:273 [inlined]
 [4] (::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights})(::Float64, ::Array{Float64,1}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:682
 [5] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:490
 [6] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#Fvdp#39{Float64}, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [7] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#Fvdp#39{Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [8] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [9] (::DASSL.##8#9{Array{Any,1},#Fvdp#39{Float64},Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 46
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] newton_iteration(::DASSL.##24#27{DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:533
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:492
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#Fvdp#39{Float64}, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.##3#5{DASSL.#dassl_norm,DASSL.#dassl_weights,Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#Fvdp#39{Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:55
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#Fvdp#39{Float64},Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 46
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] newton_iteration(::DASSL.##24#27{DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}}, ::Array{Float64,1}, ::DASSL.#normy#6{DASSL.#dassl_norm}) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:533
 [4] corrector(::DASSL.JacData, ::Float64, ::DASSL.#jac_new#23{DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}},Float64}, ::Array{Float64,1}, ::DASSL.#f_newton#22{#Fvdp#39{Float64},Float64}, ::Function) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:492
 [5] stepper(::Int64, ::Array{Float64,1}, ::Array{Array{Float64,1},1}, ::Array{Array{Float64,1},1}, ::Float64, ::#Fvdp#39{Float64}, ::DASSL.JacData, ::DASSL.##2#4{DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}}, ::Array{Float64,1}, ::DASSL.#normy#6{DASSL.#dassl_norm}, ::Int64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:437
 [6] #dasslStep#1(::Float64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Float64,1}, ::Float64, ::DASSL.#dassl_norm, ::DASSL.#dassl_weights, ::Bool, ::DASSL.#numjac#30{#Fvdp#39{Float64},Float64,Float64,DASSL.#dassl_weights}, ::Array{Any,1}, ::DASSL.#dasslStep, ::#Fvdp#39{Float64}, ::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:74
 [7] (::DASSL.#kw##dasslStep)(::Array{Any,1}, ::DASSL.#dasslStep, ::Function, ::Array{Float64,1}, ::Float64) at ./<missing>:0
 [8] (::DASSL.##8#9{Array{Any,1},#Fvdp#39{Float64},Array{Float64,1},Float64})() at /home/vagrant/.julia/v0.6/DASSL/src/DASSL.jl:140
while loading /home/vagrant/.julia/v0.6/DASSL/test/runtests.jl, in expression starting on line 46
INFO: Stepsize too small (h=3.637978807091713e-16 at t=1.0.
1 fact verified.
INFO: DASSL tests passed

>>> End of log
