>>> 'Pkg.add("MbedTLS")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing MbedTLS v0.4.2
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building MbedTLS
Using system libraries...
INFO: Package database updated

>>> 'Pkg.test("MbedTLS")' log
Julia Version 0.6.0-dev.1701
Commit d8a5718 (2016-12-26 06:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (932.6875 MB free)
Uptime: 2212.0 sec
Load Avg:  1.01953125  1.06103515625  0.9599609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     102975 s         21 s      16910 s      81787 s          2 s
#2  3500 MHz      36107 s        150 s       8228 s     171655 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - MbedTLS                       0.4.2
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing MbedTLS
ERROR: LoadError: MethodError: no method matching (::#entropy_func#1)(::Array{UInt8,1})
The applicable method may be too new: running in world age 20393, while current world is 20395.
Closest candidates are:
  entropy_func(::Any) at /home/vagrant/.julia/v0.6/MbedTLS/test/runtests.jl:89 (method too new to be called from this world context.)
 in jl_entropy(::Ptr{Void}, ::Ptr{Void}, ::UInt64, ::Ptr{Void}) at /home/vagrant/.julia/v0.6/MbedTLS/src/entropy.jl:29
 in macro expansion at /home/vagrant/.julia/v0.6/MbedTLS/src/error.jl:3 [inlined]
 in seed!(::MbedTLS.CtrDrbg, ::MbedTLS.Entropy, ::Array{UInt8,1}) at /home/vagrant/.julia/v0.6/MbedTLS/src/ctr_drbg.jl:30
 in seed!(::MbedTLS.CtrDrbg, ::MbedTLS.Entropy) at /home/vagrant/.julia/v0.6/MbedTLS/src/ctr_drbg.jl:37
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/MbedTLS/test/runtests.jl, in expression starting on line 95
===============================[ ERROR: MbedTLS ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/MbedTLS/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: MbedTLS had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:270
 in _start() at ./client.jl:357

>>> End of log
