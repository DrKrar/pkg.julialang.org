>>> 'Pkg.add("NormalizeQuantiles")' log
INFO: Cloning cache of NormalizeQuantiles from https://github.com/oheil/NormalizeQuantiles.jl.git
INFO: Installing DataArrays v0.3.10
INFO: Installing NormalizeQuantiles v0.2.0
INFO: Installing Reexport v0.0.3
INFO: Installing StatsBase v0.11.1
INFO: Package database updated

>>> 'Pkg.test("NormalizeQuantiles")' log
Julia Version 0.6.0-dev.1662
Commit f27c6f3 (2016-12-23 02:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (627.4453125 MB free)
Uptime: 6818.0 sec
Load Avg:  0.94287109375  1.06103515625  1.37353515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     397352 s        118 s      44690 s     170107 s          8 s
#2  3499 MHz     139004 s         42 s      24247 s     504514 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - NormalizeQuantiles            0.2.0
4 additional packages:
 - Compat                        0.9.5
 - DataArrays                    0.3.10
 - Reexport                      0.0.3
 - StatsBase                     0.11.1
INFO: Testing NormalizeQuantiles
ERROR: LoadError: BoundsError: attempt to access 5-element UnitRange{Int64} at index [Bool[true true true false true]]
 in throw_boundserror(::UnitRange{Int64}, ::Tuple{Array{Bool,2}}) at ./abstractarray.jl:335
 in checkbounds at ./abstractarray.jl:292 [inlined]
 in _getindex at ./multidimensional.jl:293 [inlined]
 in getindex at ./abstractarray.jl:785 [inlined]
 in #sampleRanks#37(::NormalizeQuantiles.qnTiesMethods, ::Bool, ::Bool, ::Function, ::Array{Nullable{Float64},2}) at /home/vagrant/.julia/v0.6/NormalizeQuantiles/src/NormalizeQuantiles.jl:451
 in (::NormalizeQuantiles.#kw##sampleRanks)(::Array{Any,1}, ::NormalizeQuantiles.#sampleRanks, ::Array{Nullable{Float64},2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/NormalizeQuantiles/test/runtests.jl, in expression starting on line 139
=========================[ ERROR: NormalizeQuantiles ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/NormalizeQuantiles/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: NormalizeQuantiles had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356

>>> End of log
