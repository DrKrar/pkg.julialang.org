>>> 'Pkg.add("LifeTable")' log
INFO: Cloning cache of LifeTable from https://github.com/klpn/LifeTable.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing DataArrays v0.3.10
INFO: Installing DataFrames v0.8.5
INFO: Installing DiffBase v0.0.2
INFO: Installing Distributions v0.11.1
INFO: Installing FileIO v0.2.0
INFO: Installing ForwardDiff v0.3.3
INFO: Installing GLM v0.6.1
INFO: Installing GZip v0.2.20
INFO: Installing Hiccup v0.0.3
INFO: Installing Juno v0.2.5
INFO: Installing Lazy v0.11.4
INFO: Installing LifeTable v0.1.0
INFO: Installing LineSearches v0.1.1
INFO: Installing LsqFit v0.0.2
INFO: Installing MacroTools v0.3.2
INFO: Installing Media v0.2.4
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.0
INFO: Installing PDMats v0.5.2
INFO: Installing PositiveFactorizations v0.0.3
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.5
INFO: Installing SHA v0.3.0
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LifeTable
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LifeTable")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (380.890625 MB free)
Uptime: 40130.0 sec
Load Avg:  1.115234375  1.72509765625  1.4697265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2558748 s         74 s     234873 s     755961 s         80 s
#2  3500 MHz     934108 s       6345 s     126058 s    2831053 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - LifeTable                     0.1.0
29 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - DataArrays                    0.3.10
 - DataFrames                    0.8.5
 - DiffBase                      0.0.2
 - Distributions                 0.11.1
 - FileIO                        0.2.0
 - ForwardDiff                   0.3.3
 - GLM                           0.6.1
 - GZip                          0.2.20
 - Hiccup                        0.0.3
 - Juno                          0.2.5
 - Lazy                          0.11.4
 - LineSearches                  0.1.1
 - LsqFit                        0.0.2
 - MacroTools                    0.3.2
 - Media                         0.2.4
 - NaNMath                       0.2.2
 - Optim                         0.7.0
 - PDMats                        0.5.2
 - PositiveFactorizations        0.0.3
 - Reexport                      0.0.3
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
INFO: Testing LifeTable
ERROR: LoadError: BoundsError
 in getindex at ./number.jl:21 [inlined]
 in weibsurv(::Array{Int64,1}, ::Float64) at /home/vagrant/.julia/v0.5/LifeTable/src/LifeTable.jl:100
 in f at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:45 [inlined]
 in #lmfit#1(::Array{Any,1}, ::Function, ::LsqFit.#f#5{LifeTable.#weibsurv,Array{Int64,1},Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:31
 in #curve_fit#4(::Array{Any,1}, ::Function, ::LifeTable.#weibsurv, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:46
 in curve_fit(::Function, ::Array{Int64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/LsqFit/src/curve_fit.jl:45
 in MortSurvFit(::DataFrames.DataFrame, ::DataArrays.DataArray{Int64,1}, ::String, ::String) at /home/vagrant/.julia/v0.5/LifeTable/src/LifeTable.jl:117
 in macro expansion; at /home/vagrant/.julia/v0.5/LifeTable/test/runtests.jl:26 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/LifeTable/test/runtests.jl, in expression starting on line 20
==============================[ ERROR: LifeTable ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/LifeTable/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: LifeTable had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
