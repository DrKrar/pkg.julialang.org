>>> 'Pkg.add("CompEcon")' log
INFO: Cloning cache of CompEcon from https://github.com/spencerlyon2/CompEcon.jl.git
INFO: Installing AutoHashEquals v0.0.10
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing Calculus v0.1.15
INFO: Installing CompEcon v0.1.0
INFO: Installing Compat v0.9.2
INFO: Installing DSP v0.1.1
INFO: Installing Distributions v0.11.0
INFO: Installing FileIO v0.2.0
INFO: Installing GZip v0.2.20
INFO: Installing HDF5 v0.6.6
INFO: Installing JLD v0.6.4
INFO: Installing LegacyStrings v0.1.1
INFO: Installing LightGraphs v0.7.1
INFO: Installing LightXML v0.4.0
INFO: Installing PDMats v0.5.0
INFO: Installing ParserCombinator v1.7.11
INFO: Installing Polynomials v0.1.0
INFO: Installing Primes v0.1.1
INFO: Installing QuantEcon v0.6.0
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.3
INFO: Installing SHA v0.2.1
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Building Blosc
INFO: Building Rmath
INFO: Building HDF5
INFO: Building LightXML
INFO: Package database updated

>>> 'Pkg.test("CompEcon")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (950.6875 MB free)
Uptime: 10751.0 sec
Load Avg:  0.94677734375  0.9873046875  1.03759765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     585327 s         13 s      57438 s     319130 s         18 s
#2  3500 MHz     172323 s       5460 s      33846 s     832835 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CompEcon                      0.1.0
 - JSON                          0.8.0
25 additional packages:
 - AutoHashEquals                0.0.10
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - Calculus                      0.1.15
 - Compat                        0.9.2
 - DSP                           0.1.1
 - Distributions                 0.11.0
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - HDF5                          0.6.6
 - JLD                           0.6.4
 - LegacyStrings                 0.1.1
 - LightGraphs                   0.7.1
 - LightXML                      0.4.0
 - PDMats                        0.5.0
 - ParserCombinator              1.7.11
 - Polynomials                   0.1.0
 - Primes                        0.1.1
 - QuantEcon                     0.6.0
 - Reexport                      0.0.3
 - Rmath                         0.1.3
 - SHA                           0.2.1
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
INFO: Computing test dependencies for CompEcon...
INFO: Installing BufferedStreams v0.2.0
INFO: Installing FactCheck v0.4.3
INFO: Installing Libz v0.2.0
INFO: Installing MAT v0.3.1
INFO: Building Blosc
INFO: Building HDF5
INFO: Testing CompEcon
WARNING: Method definition (::Type{QuantEcon.LQ})(Union{Array{T<:Any, N<:Any}, T<:Any}, Union{Array{T<:Any, N<:Any}, T<:Any}, Union{Array{T<:Any, N<:Any}, T<:Any}, Union{Array{T<:Any, N<:Any}, T<:Any}, Union{Array{T<:Any, N<:Any}, T<:Any}, Union{Array{T<:Any, N<:Any}, T<:Any}) in module QuantEcon at /home/vagrant/.julia/v0.6/QuantEcon/src/lqcontrol.jl:117 overwritten at /home/vagrant/.julia/v0.6/QuantEcon/src/lqcontrol.jl:140.
WARNING: Method definition (::Type{QuantEcon.LSS})(Union{Array{T<:Any, N<:Any}, T<:Any}, Union{Array{T<:Any, N<:Any}, T<:Any}, Union{Array{T<:Any, N<:Any}, T<:Any}) in module QuantEcon at /home/vagrant/.julia/v0.6/QuantEcon/src/lss.jl:85 overwritten at /home/vagrant/.julia/v0.6/QuantEcon/src/lss.jl:109.
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sqrt(::Array{Int64,1}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/QuantEcon/src/quad.jl, in expression starting on line 643
WARNING: Method definition quadrect(Function, Any, Any, Any) in module QuantEcon at /home/vagrant/.julia/v0.6/QuantEcon/src/quad.jl:793 overwritten at /home/vagrant/.julia/v0.6/QuantEcon/src/quad.jl:810.
ERROR: LoadError: LoadError: syntax: "(b1::Basis,b2::Basis)" is not a valid function argument name
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/CompEcon/src/basis.jl, in expression starting on line 129
while loading /home/vagrant/.julia/v0.6/CompEcon/src/CompEcon.jl, in expression starting on line 104
ERROR: LoadError: LoadError: Failed to precompile CompEcon to /home/vagrant/.julia/lib/v0.6/CompEcon.ji.
 in compilecache(::String) at ./loading.jl:672
 in require(::Symbol) at ./loading.jl:453
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/CompEcon/test/runtests.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/CompEcon/test/types.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.6/CompEcon/test/runtests.jl, in expression starting on line 5
==============================[ ERROR: CompEcon ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/CompEcon/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BufferedStreams v0.2.0
INFO: Removing FactCheck v0.4.3
INFO: Removing Libz v0.2.0
INFO: Removing MAT v0.3.1
ERROR: CompEcon had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
