>>> 'Pkg.add("NLsolve")' log
INFO: Installing Calculus v0.2.0
INFO: Installing DiffBase v0.0.4
INFO: Installing Distances v0.4.0
INFO: Installing ForwardDiff v0.3.4
INFO: Installing LineSearches v0.1.5
INFO: Installing NLsolve v0.9.1
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.5
INFO: Installing PositiveFactorizations v0.0.4
INFO: Package database updated

>>> 'Pkg.test("NLsolve")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (562.5078125 MB free)
Uptime: 10239.0 sec
Load Avg:  1.0029296875  1.06982421875  1.39306640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     618278 s        778 s      60358 s     225757 s         41 s
#2  3499 MHz     181697 s       5852 s      33012 s     775177 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NLsolve                       0.9.1
9 additional packages:
 - Calculus                      0.2.0
 - Compat                        0.18.0
 - DiffBase                      0.0.4
 - Distances                     0.4.0
 - ForwardDiff                   0.3.4
 - LineSearches                  0.1.5
 - NaNMath                       0.2.2
 - Optim                         0.7.5
 - PositiveFactorizations        0.0.4
INFO: Computing test dependencies for NLsolve...
INFO: Installing BaseTestNext v0.2.2
INFO: Testing NLsolve
Running tests:
WARNING: DifferentiableFunction(args...) is deprecated, use OnceDifferentiable(args) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in DifferentiableFunction(::Function, ::Vararg{Function,N}) at ./deprecated.jl:50
 in newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!) at /home/vagrant/.julia/v0.5/NLsolve/src/newton.jl:103
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/NLsolve/src/nlsolve_func_defs.jl:21
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.5/NLsolve/test/2by2.jl:39 [inlined]
 in macro expansion; at ./test.jl:672 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/NLsolve/test/runtests.jl:27 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/NLsolve/test/2by2.jl, in expression starting on line 3
2by2: Error During Test
  Got an exception of type MethodError outside of a @test
  MethodError: Cannot `convert` an object of type Tuple{NLsolve.#fo#23{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1}},NLsolve.#go!#24{NLsolve.DifferentiableMultivariateFunction,Array{Float64,1},Array{Float64,1},Array{Float64,2}},NLsolve.#fgo!#25{Array{Float64,1}}} to an object of type Optim.OnceDifferentiable
  This may have arisen from a call to the constructor Optim.OnceDifferentiable(...),
  since type constructors fall back to convert methods.
   in DifferentiableFunction(::Function, ::Vararg{Function,N}) at ./deprecated.jl:52
   in newton_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::LineSearches.#backtracking!) at /home/vagrant/.julia/v0.5/NLsolve/src/newton.jl:103
   in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/NLsolve/src/nlsolve_func_defs.jl:21
   in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
   in macro expansion; at /home/vagrant/.julia/v0.5/NLsolve/test/2by2.jl:39 [inlined]
   in macro expansion; at ./test.jl:672 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in macro expansion; at /home/vagrant/.julia/v0.5/NLsolve/test/runtests.jl:27 [inlined]
   in anonymous at ./<missing>:?
   in include_from_node1(::String) at ./loading.jl:488
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
Test Summary: | Pass  Error  Total
  2by2        |   10      1     11
ERROR: LoadError: LoadError: Some tests did not pass: 10 passed, 0 failed, 1 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:495
 in macro expansion; at ./test.jl:679 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/NLsolve/test/runtests.jl:27 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/NLsolve/test/2by2.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.5/NLsolve/test/runtests.jl, in expression starting on line 26
===============================[ ERROR: NLsolve ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/NLsolve/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.2
ERROR: NLsolve had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
