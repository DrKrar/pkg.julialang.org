>>> 'Pkg.add("Geodesy")' log
INFO: Cloning cache of Geodesy from https://github.com/JuliaGeo/Geodesy.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing CoordinateTransformations v0.1.0
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedSizeArrays v0.2.2
INFO: Installing Geodesy v0.1.0
INFO: Installing NaNMath v0.2.1
INFO: Installing Quaternions v0.1.1
INFO: Installing Rotations v0.1.0
INFO: Package database updated

>>> 'Pkg.test("Geodesy")' log
Julia Version 0.5.0-dev+5501
Commit d0dfbd9 (2016-07-19 03:21 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for Geodesy...
INFO: Installing BaseTestNext v0.2.1
INFO: Testing Geodesy

WARNING: deprecated syntax "call(::Type{RotMatrix}, ...)".
Use "(::Type{RotMatrix})(...)" instead.

WARNING: deprecated syntax "call(::Type{RotMatrix}, ...)".
Use "(::Type{RotMatrix})(...)" instead.

WARNING: deprecated syntax "call(::Type{RotMatrix}, ...)".
Use "(::Type{RotMatrix})(...)" instead.

WARNING: deprecated syntax "call(::Type{RotMatrix}, ...)".
Use "(::Type{RotMatrix})(...)" instead.

WARNING: deprecated syntax "call(::Type{RotMatrix}, ...)".
Use "(::Type{RotMatrix})(...)" instead.

WARNING: deprecated syntax "call(::Type{RotMatrix}, ...)".
Use "(::Type{RotMatrix})(...)" instead.

WARNING: deprecated syntax "call(::Type{RotMatrix{T}}, ...)".
Use "(::Type{RotMatrix{T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{Quaternion{T}}, ...)".
Use "(::Type{Quaternion{T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{SpQuat}, ...)".
Use "(::Type{SpQuat})(...)" instead.

WARNING: deprecated syntax "call(::Type{AngleAxis}, ...)".
Use "(::Type{AngleAxis})(...)" instead.

WARNING: deprecated syntax "call(::Type{EulerAngles}, ...)".
Use "(::Type{EulerAngles})(...)" instead.

WARNING: deprecated syntax "call(::Type{EulerAngles{ORD}}, ...)".
Use "(::Type{EulerAngles{ORD}})(...)" instead.

WARNING: deprecated syntax "call(::Type{EulerAngles{ORD}}, ...)".
Use "(::Type{EulerAngles{ORD}})(...)" instead.

WARNING: deprecated syntax "call(::Type{ProperEulerAngles}, ...)".
Use "(::Type{ProperEulerAngles})(...)" instead.

WARNING: deprecated syntax "call(::Type{ProperEulerAngles{ORD}}, ...)".
Use "(::Type{ProperEulerAngles{ORD}})(...)" instead.

WARNING: deprecated syntax "call(::Type{ProperEulerAngles{ORD}}, ...)".
Use "(::Type{ProperEulerAngles{ORD}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in collect(::Base.Generator{UnitRange{Int64},Rotations.##1#3}) at ./array.jl:270
 in add_methods(::Type{T}) at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:98
 in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:116 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl, in expression starting on line 111
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in collect_to!(::Array{Expr,1}, ::Base.Generator{UnitRange{Int64},Rotations.##1#3}, ::Int64, ::Int64) at ./array.jl:302
 in collect(::Base.Generator{UnitRange{Int64},Rotations.##1#3}) at ./array.jl:271
 in add_methods(::Type{T}) at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:98
 in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:116 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl, in expression starting on line 111
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in collect(::Base.Generator{UnitRange{Int64},Rotations.##2#4}) at ./array.jl:270
 in add_methods(::Type{T}) at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:99
 in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:116 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl, in expression starting on line 111
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in collect_to!(::Array{Expr,1}, ::Base.Generator{UnitRange{Int64},Rotations.##2#4}, ::Int64, ::Int64) at ./array.jl:302
 in collect(::Base.Generator{UnitRange{Int64},Rotations.##2#4}) at ./array.jl:271
 in add_methods(::Type{T}) at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:99
 in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl:116 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Rotations/src/type_methods.jl, in expression starting on line 111

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec}, ...)".
Use "(::Type{Vec})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec{9,T}}, ...)".
Use "(::Type{Vec{9,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{FixedSizeArrays.Mat{3, 3, eT<:Real}}, ...)".
Use "(::Type{FixedSizeArrays.Mat{3, 3, eT<:Real}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec}, ...)".
Use "(::Type{Vec})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec{4,T}}, ...)".
Use "(::Type{Vec{4,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Quaternions.Quaternion}, ...)".
Use "(::Type{Quaternions.Quaternion})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec}, ...)".
Use "(::Type{Vec})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec{3,T}}, ...)".
Use "(::Type{Vec{3,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Rotations.SpQuat}, ...)".
Use "(::Type{Rotations.SpQuat})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec}, ...)".
Use "(::Type{Vec})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec{3,T}}, ...)".
Use "(::Type{Vec{3,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Rotations.EulerAngles}, ...)".
Use "(::Type{Rotations.EulerAngles})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec}, ...)".
Use "(::Type{Vec})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec{3,T}}, ...)".
Use "(::Type{Vec{3,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Rotations.ProperEulerAngles}, ...)".
Use "(::Type{Rotations.ProperEulerAngles})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec}, ...)".
Use "(::Type{Vec})(...)" instead.

WARNING: deprecated syntax "call(::Type{Vec{4,T}}, ...)".
Use "(::Type{Vec{4,T}})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{T}, ...)".
Use "(::Type{T})(...)" instead.

WARNING: deprecated syntax "call(::Type{Rotations.AngleAxis}, ...)".
Use "(::Type{Rotations.AngleAxis})(...)" instead.
ERROR: LoadError: LoadError: syntax: unhandled expr (* s (call (core getfield) X (inert x)))
 in macro expansion; at /home/vagrant/.julia/v0.5/Rotations/src/math_funcs.jl:122 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Rotations/src/math_funcs.jl, in expression starting on line 116
while loading /home/vagrant/.julia/v0.5/Rotations/src/Rotations.jl, in expression starting on line 18
ERROR: LoadError: LoadError: LoadError: Failed to precompile Rotations to /home/vagrant/.julia/lib/v0.5/Rotations.ji
 in compilecache(::String) at ./loading.jl:505
 in require(::Symbol) at ./loading.jl:364
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/CoordinateTransformations/src/CoordinateTransformations.jl, in expression starting on line 24
while loading /home/vagrant/.julia/v0.5/Geodesy/src/Geodesy.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.5/Geodesy/test/runtests.jl, in expression starting on line 1
===============================[ ERROR: Geodesy ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Geodesy/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BaseTestNext v0.2.1
ERROR: Geodesy had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:736
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
