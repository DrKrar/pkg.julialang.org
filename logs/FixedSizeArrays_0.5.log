>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Cloning cache of FixedSizeArrays from https://github.com/SimonDanisch/FixedSizeArrays.jl.git
INFO: Installing FixedSizeArrays v0.0.8
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FixedSizeArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.5.0-dev+1968
Commit e55c22a (2016-01-02 23:28 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for FixedSizeArrays...
INFO: Installing FactCheck v0.4.2
INFO: Testing FixedSizeArrays
FixedSizeArrays
WARNING: super(T::DataType) is deprecated, use supertype(T) instead.
 in depwarn at deprecated.jl:73
 in super at deprecated.jl:50
 in fsa_abstract at /home/vagrant/.julia/v0.5/FixedSizeArrays/src/core.jl:48
 in size_or at /home/vagrant/.julia/v0.5/FixedSizeArrays/src/core.jl:53
 in call at /home/vagrant/.julia/v0.5/FixedSizeArrays/src/constructors.jl:51
 in func_for_method at ./inference.jl:648
 in abstract_call_gf at ./inference.jl:704
 in abstract_call at ./inference.jl:969
 in abstract_call at ./inference.jl:1013
 in abstract_eval_call at ./inference.jl:1059
 in abstract_eval at ./inference.jl:1087
 in abstract_interpret at ./inference.jl:1239
 in typeinf_uncached at ./inference.jl:1700
 in typeinf at ./inference.jl:1468
 in typeinf_ext at ./inference.jl:1412
 in facts at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include at ./boot.jl:262
 in include_from_node1 at ./loading.jl:401
 in process_options at ./client.jl:245
 in _start at ./client.jl:301
while loading /home/vagrant/.julia/v0.5/FixedSizeArrays/test/runtests.jl, in expression starting on line 35
  > fsa macro
  > Array of FixedArrays
WARNING: super(T::DataType) is deprecated, use supertype(T) instead.
 in depwarn at deprecated.jl:73
 in super at deprecated.jl:50
 in fsa_abstract at /home/vagrant/.julia/v0.5/FixedSizeArrays/src/core.jl:48
 in size_or at /home/vagrant/.julia/v0.5/FixedSizeArrays/src/core.jl:53
 in call at /home/vagrant/.julia/v0.5/FixedSizeArrays/src/constructors.jl:75
 in func_for_method at ./inference.jl:648
 in pure_eval_call at ./inference.jl:894
 in abstract_call at ./inference.jl:938
 in abstract_eval_call at ./inference.jl:1047
 in abstract_eval at ./inference.jl:1087
 in abstract_interpret at ./inference.jl:1239
 in typeinf_uncached at ./inference.jl:1700
 in typeinf at ./inference.jl:1468
 in typeinf_ext at ./inference.jl:1412
 in context at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
 in anonymous at /home/vagrant/.julia/v0.5/FixedSizeArrays/test/runtests.jl:54
 in facts at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include at ./boot.jl:262
 in include_from_node1 at ./loading.jl:401
 in process_options at ./client.jl:245
 in _start at ./client.jl:301
while loading /home/vagrant/.julia/v0.5/FixedSizeArrays/test/runtests.jl, in expression starting on line 35
    > reduce
    > array ops
    > Show
100-elementArray{FixedSizeArrays.Point{3,Float32},1}:
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)
 Point(0.7132,0.7132,0.7132)

100-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)
 RGB(52.293,52.293,52.293)

[FixedSizeArrays.Mat{4,4,Float64}(
    0.3358180902685075 0.20381195150581388 0.09047236599107689 0.833787953523214
    0.6345458557393884 0.1933717197880751 0.40468241509943836 0.9266550963417244
    0.0058134606375186415 0.10714863837040989 0.44527936191277284 0.7986269719364099
    0.5207148568566662 0.6588607093472336 0.5703954770531328 0.5689720670339515
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.673882768526346 0.5604757097228534 0.09389129376818461 0.16491453442221915
    0.005593246858858647 0.32759709272533577 0.5661822465991397 0.41896120723853825
    0.4461453193481095 0.20306656155259506 0.944393580026909 0.7805562487078899
    0.6328899237314212 0.04056280919847599 0.16028793224090343 0.6387399947326475
)
]
Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
    > construction, conversion, 10
  > Constructors
    > FixedVector: unary, from FixedVector
  > size_or
  > eltype_or
  > ndims_or
  > similar
  > Complex Ops
    > dot product
  > Destructure
  > Indexing
    > FixedVector
    > FixedMatrix
    > fslice
      > getindex
      > setindex
  > Ops
    > Negation
    > Negation
    > Negation
    > Multiplication
    > Division
    > Scalar
    > vector norm+cross product
    > hypot
    > normalize
    > reduce
  > Promotion
  > Conversion 2
  > Conversion to Vec{N,UInt64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Int64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Float32}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Float64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Matrix
  > Matrix Math
    > Matrix{1, 1} * Vector{1}
    > Matrix{1, 1} * Matrix{1, 1}
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > transpose M
    > ctranspose M
    > Matrix{1, 2} * Vector{2}
    > Matrix{1, 2} * Matrix{1, 2}
    > transpose M
    > ctranspose M
    > Matrix{1, 3} * Vector{3}
    > Matrix{1, 3} * Matrix{1, 3}
    > transpose M
    > ctranspose M
    > Matrix{1, 4} * Vector{4}
    > Matrix{1, 4} * Matrix{1, 4}
    > transpose M
    > ctranspose M
    > Matrix{2, 1} * Vector{1}
    > Matrix{2, 1} * Matrix{2, 1}
    > transpose M
    > ctranspose M
    > Matrix{2, 2} * Vector{2}
    > Matrix{2, 2} * Matrix{2, 2}
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > transpose M
    > ctranspose M
    > Matrix{2, 3} * Vector{3}
    > Matrix{2, 3} * Matrix{2, 3}
    > transpose M
    > ctranspose M
    > Matrix{2, 4} * Vector{4}
    > Matrix{2, 4} * Matrix{2, 4}
    > transpose M
    > ctranspose M
    > Matrix{3, 1} * Vector{1}
    > Matrix{3, 1} * Matrix{3, 1}
    > transpose M
    > ctranspose M
    > Matrix{3, 2} * Vector{2}
    > Matrix{3, 2} * Matrix{3, 2}
    > transpose M
    > ctranspose M
    > Matrix{3, 3} * Vector{3}
    > Matrix{3, 3} * Matrix{3, 3}
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > transpose M
    > ctranspose M
    > Matrix{3, 4} * Vector{4}
    > Matrix{3, 4} * Matrix{3, 4}
    > transpose M
    > ctranspose M
    > Matrix{4, 1} * Vector{1}
    > Matrix{4, 1} * Matrix{4, 1}
    > transpose M
    > ctranspose M
    > Matrix{4, 2} * Vector{2}
    > Matrix{4, 2} * Matrix{4, 2}
    > transpose M
    > ctranspose M
    > Matrix{4, 3} * Vector{3}
    > Matrix{4, 3} * Matrix{4, 3}
    > transpose M
    > ctranspose M
    > Matrix{4, 4} * Vector{4}
    > Matrix{4, 4} * Matrix{4, 4}
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > transpose M
    > ctranspose M
    > expm(M::Mat{3,3,Float64})
    > expm(M::Mat{3,3, BigFloat})
  > Meta
  > Vector Math
    > all
  > Equality
  > mapping operators
    > binary: 
      > .+ with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .+ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .+ with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .- with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .- with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .- with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .* with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .* with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .* with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > ./ with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > ./ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > ./ with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .\ with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .\ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .\ with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > / with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > / with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > / with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .== with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .== with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .== with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .!= with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .!= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .!= with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .< with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .< with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .< with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .<= with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .<= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .<= with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .> with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .> with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .> with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > .>= with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > .>= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .>= with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > + with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > + with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > + with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > - with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > - with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > - with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > min with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > min with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > min with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > max with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > max with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > max with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > atan2 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > atan2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > atan2 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > besselj with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > besselj with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besselj with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > bessely with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > bessely with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > bessely with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > hankelh1 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > hankelh1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > hankelh1 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > hankelh2 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > hankelh2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > hankelh2 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > besseli with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > besseli with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besseli with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > besselk with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > besselk with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besselk with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > beta with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > beta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > beta with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
      > lbeta with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807)) and FixedSizeArrays.Vec{3,Int64}((1,0,9223372036854775807))
      > lbeta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > lbeta with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0)) and FixedSizeArrays.Vec{4,Float32}((-23.2929f0,-23.2929f0,-23.2929f0,-23.2929f0))
    > unary: 
      > - with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > - with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > - with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > ~ with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > ~ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > ~ with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > conj with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > conj with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > conj with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > abs with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > abs with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > abs with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > sin with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > sin with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sin with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cos with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cos with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cos with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > tan with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > tan with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tan with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > sinh with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > sinh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sinh with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cosh with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cosh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosh with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > tanh with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > tanh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tanh with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > asin with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > asin with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asin with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acos with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acos with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acos with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > atan with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > atan with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atan with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > asinh with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > asinh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asinh with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acosh with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acosh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acosh with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > atanh with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > atanh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atanh with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > sec with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > sec with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sec with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > csc with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > csc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > csc with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cot with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cot with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cot with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > asec with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > asec with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asec with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acsc with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acsc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acsc with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acot with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acot with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acot with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > sech with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > sech with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sech with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > csch with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > csch with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > csch with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > coth with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > coth with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > coth with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > asech with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > asech with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asech with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acsch with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acsch with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acsch with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acoth with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acoth with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acoth with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > sinc with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > sinc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sinc with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cosc with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cosc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosc with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cosd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cosd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cotd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cotd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cotd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cscd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cscd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cscd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > secd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > secd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > secd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > sind with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > sind with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sind with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > tand with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > tand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tand with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acosd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acosd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acosd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acotd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acotd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acotd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > acscd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > acscd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acscd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > asecd with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > asecd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asecd with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > asind with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > asind with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asind with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > atand with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > atand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atand with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > rad2deg with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > rad2deg with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > rad2deg with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > deg2rad with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > deg2rad with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > deg2rad with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > log with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > log with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > log2 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > log2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log2 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > log10 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > log10 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log10 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > log1p with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > log1p with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log1p with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > exponent with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > exponent with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exponent with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > exp with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > exp with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exp with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > exp2 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > exp2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exp2 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > expm1 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > expm1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > expm1 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > cbrt with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > cbrt with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cbrt with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > sqrt with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > sqrt with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sqrt with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > erf with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > erf with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erf with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > erfc with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > erfc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfc with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > erfcx with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > erfcx with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfcx with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > erfi with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > erfi with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfi with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > dawson with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > dawson with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > dawson with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > significand with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > significand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > significand with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > lgamma with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > lgamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > lgamma with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > gamma with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > gamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > gamma with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > lfact with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > lfact with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > lfact with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > frexp with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > frexp with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > frexp with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > modf with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > modf with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > modf with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > airy with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > airy with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airy with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > airyai with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > airyai with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyai with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > airyprime with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > airyprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyprime with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > airyaiprime with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > airyaiprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyaiprime with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > airybi with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > airybi with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airybi with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > airybiprime with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > airybiprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airybiprime with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > besselj0 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > besselj0 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > besselj0 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > besselj1 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > besselj1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > besselj1 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > bessely0 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > bessely0 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > bessely0 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > bessely1 with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > bessely1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > bessely1 with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > eta with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > eta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > eta with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > zeta with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > zeta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > zeta with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
      > digamma with FixedSizeArrays.Vec{3,Int64}((1,2,9223372036854775807))
      > digamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > digamma with FixedSizeArrays.Vec{4,Float32}((0.777f0,0.777f0,0.777f0,0.777f0))
  > Base.Test
8593 facts verified.
INFO: FixedSizeArrays tests passed
INFO: Removing FactCheck v0.4.2

>>> End of log
