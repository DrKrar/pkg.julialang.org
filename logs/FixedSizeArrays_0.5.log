>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Installing FixedPointNumbers v0.1.4
INFO: Package database updated

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (907.7109375 MB free)
Uptime: 22890.0 sec
Load Avg:  1.0029296875  0.9853515625  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3502 MHz    1167828 s       7988 s     136286 s     668406 s         57 s
#2  3502 MHz     442478 s        139 s      73378 s    1660724 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - FixedSizeArrays               0.2.3
 - JSON                          0.7.0
66 additional packages:
 - Anasol                        0.1.8
 - AxisAlgorithms                0.1.5
 - BIGUQ                         0.1.6
 - BinDeps                       0.4.5
 - BlackBoxOptim                 0.2.1
 - Blosc                         0.1.7
 - Calculus                      0.1.15
 - Codecs                        0.2.0
 - ColorTypes                    0.2.6
 - Colors                        0.6.6
 - Compat                        0.8.8
 - Compose                       0.4.4
 - Conda                         0.3.0
 - Contour                       0.2.0
 - DataArrays                    0.3.8
 - DataFrames                    0.8.1
 - DataStructures                0.4.5
 - Dates                         0.4.4
 - Distances                     0.3.2
 - Distributions                 0.10.2
 - Docile                        0.5.23
 - FactCheck                     0.4.3
 - FileIO                        0.1.2
 - FixedPointNumbers             0.1.4
 - Formatting                    0.1.5
 - ForwardDiff                   0.2.5
 - GZip                          0.2.20
 - Gadfly                        0.4.3
 - HDF5                          0.6.5
 - Hexagons                      0.0.4
 - Interpolations                0.3.6
 - Iterators                     0.1.10
 - JLD                           0.6.3
 - KernelDensity                 0.3.0
 - LaTeXStrings                  0.2.0
 - LegacyStrings                 0.1.1
 - Lexicon                       0.1.18
 - Loess                         0.0.7
 - Lora                          0.5.5
 - MacroTools                    0.3.2
 - Mads                          0.2.3              33972a53 (dirty)
 - Measures                      0.0.3
 - MetaProgTools                 0.1.4
 - NaNMath                       0.2.1
 - ODE                           0.2.1
 - Optim                         0.6.1
 - PDMats                        0.4.2
 - Polynomials                   0.1.0
 - PositiveFactorizations        0.0.2
 - ProgressMeter                 0.3.3
 - PyCall                        1.7.1
 - PyPlot                        2.2.1
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - ReusableFunctions             0.1.6
 - ReverseDiffSource             0.2.3
 - Rmath                         0.1.2
 - RobustPmap                    0.1.9
 - SHA                           0.2.1
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.0
 - YAML                          0.1.10
INFO: Computing test dependencies for FixedSizeArrays...
INFO: No packages to install, update or remove
INFO: Testing FixedSizeArrays
FixedSizeArrays
  > type inference
  > fsa macro
  > core
    > ndims
    > size_or
    > eltype_or
    > ndims_or
    > similar_type
    > construct_similar
  > Array of FixedArrays
    > reduce
    > array ops
    > Show
FixedSizeArrays.Mat{4,4,Float64}[FixedSizeArrays.Mat{4,4,Float64}(
    0.35697744106116547 0.005313908981105175 0.726085815799707 0.062435428874709986
    0.010166383284095026 0.10601106898118173 0.29043960994978213 0.10273506909795205
    0.3809987098352201 0.9480353383134987 0.13571174571291666 0.24180486257183764
    0.1554315992672317 0.4157357735542824 0.5731484808609772 0.7181482778177761
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.46191174753255604 0.5292772434178097 0.23988802962947098 0.9487565704767111
    0.6476744203289704 0.5271930773677211 0.37413501275527206 0.24862080882187754
    0.7977667085958686 0.6595965208855901 0.8135846083999521 0.6461336977228442
    0.7062198073606425 0.041466623805127334 0.976962933115904 0.026437743041541895
)
]
2-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(0.05749929,0.5490278,0.024078846)
 RGB(0.21545422,0.90295756,0.96260107)

2-elementArray{FixedSizeArrays.Vec{3,Float32},1}:
 Vec(0.51484144,0.17909575,0.99660766)
 Vec(0.33924747,0.35031557,0.43152273)

Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Randn
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
    > construction, conversion, 10
  > Constructors
    > FixedVector: unary, from FixedVector
  > map
    > Vec and AbstractVector
    > FixedVectorNoTuple
    > Mat and AbstractMatrix
    > Size checking
    > Broadcast of scalars
  > Complex Ops
    > dot product
  > Destructure
  > Indexing
    > FixedVector
    > FixedMatrix
    > fslice
      > getindex
      > setindex
  > Ops
    > Negation
    > Addition
    > Subtraction
    > Multiplication
    > Mixed Type Multiplication
    > Division
    > Relational
    > Scalar
    > vector norm+cross product
    > hypot
    > normalize
    > reduce
  > Promotion
  > Conversion 2
  > Conversion to Vec{N,UInt64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Int64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Float32}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Conversion to Vec{N,Float64}
    > single value conversion
    > conversion from vararg, tuple & array
    > conversion from too many args should fail
    > conversion from too few args should fail
  > Matrix
  > Matrix Math
    > Matrix{1, 1} * Vector{1}
    > Matrix{1, 1} * Matrix{1, 1}
    > Matrix{1, 1}*(2I)
    > Matrix{1, 1, T} * Vector{1, U}
    > Matrix{1, 1, T} * Matrix{1, 1, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{1, 2} * Vector{2}
    > Matrix{1, 2} * Matrix{2, 1}
    > Matrix{1, 2}*(2I)
    > Matrix{1, 2, T} * Vector{2, U}
    > Matrix{1, 2, T} * Matrix{2, 1, U}
    > Matrix{1, 2} * Matrix{1, 2}
    > transpose M
    > ctranspose M
    > Matrix{1, 3} * Vector{3}
    > Matrix{1, 3} * Matrix{3, 1}
    > Matrix{1, 3}*(2I)
    > Matrix{1, 3, T} * Vector{3, U}
    > Matrix{1, 3, T} * Matrix{3, 1, U}
    > Matrix{1, 3} * Matrix{1, 3}
    > transpose M
    > ctranspose M
    > Matrix{1, 4} * Vector{4}
    > Matrix{1, 4} * Matrix{4, 1}
    > Matrix{1, 4}*(2I)
    > Matrix{1, 4, T} * Vector{4, U}
    > Matrix{1, 4, T} * Matrix{4, 1, U}
    > Matrix{1, 4} * Matrix{1, 4}
    > transpose M
    > ctranspose M
    > Matrix{1, 5} * Vector{5}
    > Matrix{1, 5} * Matrix{5, 1}
    > Matrix{1, 5}*(2I)
    > Matrix{1, 5, T} * Vector{5, U}
    > Matrix{1, 5, T} * Matrix{5, 1, U}
    > Matrix{1, 5} * Matrix{1, 5}
    > transpose M
    > ctranspose M
    > Matrix{2, 1} * Vector{1}
    > Matrix{2, 1} * Matrix{1, 2}
    > Matrix{2, 1}*(2I)
    > Matrix{2, 1, T} * Vector{1, U}
    > Matrix{2, 1, T} * Matrix{1, 2, U}
    > Matrix{2, 1} * Matrix{2, 1}
    > transpose M
    > ctranspose M
    > Matrix{2, 2} * Vector{2}
    > Matrix{2, 2} * Matrix{2, 2}
    > Matrix{2, 2}*(2I)
    > Matrix{2, 2, T} * Vector{2, U}
    > Matrix{2, 2, T} * Matrix{2, 2, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{2, 3} * Vector{3}
    > Matrix{2, 3} * Matrix{3, 2}
    > Matrix{2, 3}*(2I)
    > Matrix{2, 3, T} * Vector{3, U}
    > Matrix{2, 3, T} * Matrix{3, 2, U}
    > Matrix{2, 3} * Matrix{2, 3}
    > transpose M
    > ctranspose M
    > Matrix{2, 4} * Vector{4}
    > Matrix{2, 4} * Matrix{4, 2}
    > Matrix{2, 4}*(2I)
    > Matrix{2, 4, T} * Vector{4, U}
    > Matrix{2, 4, T} * Matrix{4, 2, U}
    > Matrix{2, 4} * Matrix{2, 4}
    > transpose M
    > ctranspose M
    > Matrix{2, 5} * Vector{5}
    > Matrix{2, 5} * Matrix{5, 2}
    > Matrix{2, 5}*(2I)
    > Matrix{2, 5, T} * Vector{5, U}
    > Matrix{2, 5, T} * Matrix{5, 2, U}
    > Matrix{2, 5} * Matrix{2, 5}
    > transpose M
    > ctranspose M
    > Matrix{3, 1} * Vector{1}
    > Matrix{3, 1} * Matrix{1, 3}
    > Matrix{3, 1}*(2I)
    > Matrix{3, 1, T} * Vector{1, U}
    > Matrix{3, 1, T} * Matrix{1, 3, U}
    > Matrix{3, 1} * Matrix{3, 1}
    > transpose M
    > ctranspose M
    > Matrix{3, 2} * Vector{2}
    > Matrix{3, 2} * Matrix{2, 3}
    > Matrix{3, 2}*(2I)
    > Matrix{3, 2, T} * Vector{2, U}
    > Matrix{3, 2, T} * Matrix{2, 3, U}
    > Matrix{3, 2} * Matrix{3, 2}
    > transpose M
    > ctranspose M
    > Matrix{3, 3} * Vector{3}
    > Matrix{3, 3} * Matrix{3, 3}
    > Matrix{3, 3}*(2I)
    > Matrix{3, 3, T} * Vector{3, U}
    > Matrix{3, 3, T} * Matrix{3, 3, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{3, 4} * Vector{4}
    > Matrix{3, 4} * Matrix{4, 3}
    > Matrix{3, 4}*(2I)
    > Matrix{3, 4, T} * Vector{4, U}
    > Matrix{3, 4, T} * Matrix{4, 3, U}
    > Matrix{3, 4} * Matrix{3, 4}
    > transpose M
    > ctranspose M
    > Matrix{3, 5} * Vector{5}
    > Matrix{3, 5} * Matrix{5, 3}
    > Matrix{3, 5}*(2I)
    > Matrix{3, 5, T} * Vector{5, U}
    > Matrix{3, 5, T} * Matrix{5, 3, U}
    > Matrix{3, 5} * Matrix{3, 5}
    > transpose M
    > ctranspose M
    > Matrix{4, 1} * Vector{1}
    > Matrix{4, 1} * Matrix{1, 4}
    > Matrix{4, 1}*(2I)
    > Matrix{4, 1, T} * Vector{1, U}
    > Matrix{4, 1, T} * Matrix{1, 4, U}
    > Matrix{4, 1} * Matrix{4, 1}
    > transpose M
    > ctranspose M
    > Matrix{4, 2} * Vector{2}
    > Matrix{4, 2} * Matrix{2, 4}
    > Matrix{4, 2}*(2I)
    > Matrix{4, 2, T} * Vector{2, U}
    > Matrix{4, 2, T} * Matrix{2, 4, U}
    > Matrix{4, 2} * Matrix{4, 2}
    > transpose M
    > ctranspose M
    > Matrix{4, 3} * Vector{3}
    > Matrix{4, 3} * Matrix{3, 4}
    > Matrix{4, 3}*(2I)
    > Matrix{4, 3, T} * Vector{3, U}
    > Matrix{4, 3, T} * Matrix{3, 4, U}
    > Matrix{4, 3} * Matrix{4, 3}
    > transpose M
    > ctranspose M
    > Matrix{4, 4} * Vector{4}
    > Matrix{4, 4} * Matrix{4, 4}
    > Matrix{4, 4}*(2I)
    > Matrix{4, 4, T} * Vector{4, U}
    > Matrix{4, 4, T} * Matrix{4, 4, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > Matrix{4, 5} * Vector{5}
    > Matrix{4, 5} * Matrix{5, 4}
    > Matrix{4, 5}*(2I)
    > Matrix{4, 5, T} * Vector{5, U}
    > Matrix{4, 5, T} * Matrix{5, 4, U}
    > Matrix{4, 5} * Matrix{4, 5}
    > transpose M
    > ctranspose M
    > Matrix{5, 1} * Vector{1}
    > Matrix{5, 1} * Matrix{1, 5}
    > Matrix{5, 1}*(2I)
    > Matrix{5, 1, T} * Vector{1, U}
    > Matrix{5, 1, T} * Matrix{1, 5, U}
    > Matrix{5, 1} * Matrix{5, 1}
    > transpose M
    > ctranspose M
    > Matrix{5, 2} * Vector{2}
    > Matrix{5, 2} * Matrix{2, 5}
    > Matrix{5, 2}*(2I)
    > Matrix{5, 2, T} * Vector{2, U}
    > Matrix{5, 2, T} * Matrix{2, 5, U}
    > Matrix{5, 2} * Matrix{5, 2}
    > transpose M
    > ctranspose M
    > Matrix{5, 3} * Vector{3}
    > Matrix{5, 3} * Matrix{3, 5}
    > Matrix{5, 3}*(2I)
    > Matrix{5, 3, T} * Vector{3, U}
    > Matrix{5, 3, T} * Matrix{3, 5, U}
    > Matrix{5, 3} * Matrix{5, 3}
    > transpose M
    > ctranspose M
    > Matrix{5, 4} * Vector{4}
    > Matrix{5, 4} * Matrix{4, 5}
    > Matrix{5, 4}*(2I)
    > Matrix{5, 4, T} * Vector{4, U}
    > Matrix{5, 4, T} * Matrix{4, 5, U}
    > Matrix{5, 4} * Matrix{5, 4}
    > transpose M
    > ctranspose M
    > Matrix{5, 5} * Vector{5}
    > Matrix{5, 5} * Matrix{5, 5}
    > Matrix{5, 5}*(2I)
    > Matrix{5, 5, T} * Vector{5, U}
    > Matrix{5, 5, T} * Matrix{5, 5, U}
    > (2*I + I*M)\v
    > det(M)
    > trace(M)
    > inv(M)
    > expm(M)
    > lyap(M,M2*M2')
    > chol(M2*M2')
    > transpose M
    > ctranspose M
    > expm(M::Mat{3,3,Float64})
    > expm(M::Mat{3,3, BigFloat})
    > Matrix * FixedVectorNoTuple
    > Outer product  Vec{N} * Mat{1,M}
    > Large matrix multiply
  > Meta
  > Vector Math
    > all
  > Equality
  > mapping operators
    > binary: 
      > .+ with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .+ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .+ with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .- with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .- with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .- with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .* with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .* with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .* with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > ./ with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > ./ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > ./ with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .\ with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .\ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .\ with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > / with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > / with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > / with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .== with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .== with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .== with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .!= with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .!= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .!= with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .< with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .< with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .< with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .<= with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .<= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .<= with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .> with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .> with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .> with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > .>= with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > .>= with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > .>= with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > + with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > + with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > + with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > - with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > - with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > - with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > min with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > min with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > min with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > max with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > max with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > max with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > atan2 with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > atan2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > atan2 with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > besselj with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > besselj with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besselj with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > bessely with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > bessely with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > bessely with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > hankelh1 with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > hankelh1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > hankelh1 with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > hankelh2 with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > hankelh2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > hankelh2 with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > besseli with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > besseli with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besseli with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > besselk with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > besselk with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > besselk with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > beta with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > beta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > beta with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
      > lbeta with Vec(1,2,9223372036854775807) and Vec(1,0,9223372036854775807)
      > lbeta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)
 and FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    77 9223372036854775807 3
    1 5 6
)

      > lbeta with Vec(0.777,0.777,0.777,0.777) and Vec(-23.2929,-23.2929,-23.2929,-23.2929)
    > unary: 
      > - with Vec(1,2,9223372036854775807)
      > - with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > - with Vec(0.777,0.777,0.777,0.777)
      > ~ with Vec(1,2,9223372036854775807)
      > ~ with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > ~ with Vec(0.777,0.777,0.777,0.777)
      > conj with Vec(1,2,9223372036854775807)
      > conj with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > conj with Vec(0.777,0.777,0.777,0.777)
      > abs with Vec(1,2,9223372036854775807)
      > abs with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > abs with Vec(0.777,0.777,0.777,0.777)
      > sin with Vec(1,2,9223372036854775807)
      > sin with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sin with Vec(0.777,0.777,0.777,0.777)
      > cos with Vec(1,2,9223372036854775807)
      > cos with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cos with Vec(0.777,0.777,0.777,0.777)
      > tan with Vec(1,2,9223372036854775807)
      > tan with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tan with Vec(0.777,0.777,0.777,0.777)
      > sinh with Vec(1,2,9223372036854775807)
      > sinh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sinh with Vec(0.777,0.777,0.777,0.777)
      > cosh with Vec(1,2,9223372036854775807)
      > cosh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosh with Vec(0.777,0.777,0.777,0.777)
      > tanh with Vec(1,2,9223372036854775807)
      > tanh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tanh with Vec(0.777,0.777,0.777,0.777)
      > asin with Vec(1,2,9223372036854775807)
      > asin with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asin with Vec(0.777,0.777,0.777,0.777)
      > acos with Vec(1,2,9223372036854775807)
      > acos with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acos with Vec(0.777,0.777,0.777,0.777)
      > atan with Vec(1,2,9223372036854775807)
      > atan with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atan with Vec(0.777,0.777,0.777,0.777)
      > asinh with Vec(1,2,9223372036854775807)
      > asinh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asinh with Vec(0.777,0.777,0.777,0.777)
      > acosh with Vec(1,2,9223372036854775807)
      > acosh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acosh with Vec(0.777,0.777,0.777,0.777)
      > atanh with Vec(1,2,9223372036854775807)
      > atanh with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atanh with Vec(0.777,0.777,0.777,0.777)
      > sec with Vec(1,2,9223372036854775807)
      > sec with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sec with Vec(0.777,0.777,0.777,0.777)
      > csc with Vec(1,2,9223372036854775807)
      > csc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > csc with Vec(0.777,0.777,0.777,0.777)
      > cot with Vec(1,2,9223372036854775807)
      > cot with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cot with Vec(0.777,0.777,0.777,0.777)
      > asec with Vec(1,2,9223372036854775807)
      > asec with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asec with Vec(0.777,0.777,0.777,0.777)
      > acsc with Vec(1,2,9223372036854775807)
      > acsc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acsc with Vec(0.777,0.777,0.777,0.777)
      > acot with Vec(1,2,9223372036854775807)
      > acot with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acot with Vec(0.777,0.777,0.777,0.777)
      > sech with Vec(1,2,9223372036854775807)
      > sech with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sech with Vec(0.777,0.777,0.777,0.777)
      > csch with Vec(1,2,9223372036854775807)
      > csch with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > csch with Vec(0.777,0.777,0.777,0.777)
      > coth with Vec(1,2,9223372036854775807)
      > coth with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > coth with Vec(0.777,0.777,0.777,0.777)
      > asech with Vec(1,2,9223372036854775807)
      > asech with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asech with Vec(0.777,0.777,0.777,0.777)
      > acsch with Vec(1,2,9223372036854775807)
      > acsch with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acsch with Vec(0.777,0.777,0.777,0.777)
      > acoth with Vec(1,2,9223372036854775807)
      > acoth with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acoth with Vec(0.777,0.777,0.777,0.777)
      > sinc with Vec(1,2,9223372036854775807)
      > sinc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sinc with Vec(0.777,0.777,0.777,0.777)
      > cosc with Vec(1,2,9223372036854775807)
      > cosc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosc with Vec(0.777,0.777,0.777,0.777)
      > cosd with Vec(1,2,9223372036854775807)
      > cosd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cosd with Vec(0.777,0.777,0.777,0.777)
      > cotd with Vec(1,2,9223372036854775807)
      > cotd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cotd with Vec(0.777,0.777,0.777,0.777)
      > cscd with Vec(1,2,9223372036854775807)
      > cscd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cscd with Vec(0.777,0.777,0.777,0.777)
      > secd with Vec(1,2,9223372036854775807)
      > secd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > secd with Vec(0.777,0.777,0.777,0.777)
      > sind with Vec(1,2,9223372036854775807)
      > sind with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sind with Vec(0.777,0.777,0.777,0.777)
      > tand with Vec(1,2,9223372036854775807)
      > tand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > tand with Vec(0.777,0.777,0.777,0.777)
      > acosd with Vec(1,2,9223372036854775807)
      > acosd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acosd with Vec(0.777,0.777,0.777,0.777)
      > acotd with Vec(1,2,9223372036854775807)
      > acotd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acotd with Vec(0.777,0.777,0.777,0.777)
      > acscd with Vec(1,2,9223372036854775807)
      > acscd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > acscd with Vec(0.777,0.777,0.777,0.777)
      > asecd with Vec(1,2,9223372036854775807)
      > asecd with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asecd with Vec(0.777,0.777,0.777,0.777)
      > asind with Vec(1,2,9223372036854775807)
      > asind with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > asind with Vec(0.777,0.777,0.777,0.777)
      > atand with Vec(1,2,9223372036854775807)
      > atand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > atand with Vec(0.777,0.777,0.777,0.777)
      > rad2deg with Vec(1,2,9223372036854775807)
      > rad2deg with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > rad2deg with Vec(0.777,0.777,0.777,0.777)
      > deg2rad with Vec(1,2,9223372036854775807)
      > deg2rad with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > deg2rad with Vec(0.777,0.777,0.777,0.777)
      > log with Vec(1,2,9223372036854775807)
      > log with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log with Vec(0.777,0.777,0.777,0.777)
      > log2 with Vec(1,2,9223372036854775807)
      > log2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log2 with Vec(0.777,0.777,0.777,0.777)
      > log10 with Vec(1,2,9223372036854775807)
      > log10 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log10 with Vec(0.777,0.777,0.777,0.777)
      > log1p with Vec(1,2,9223372036854775807)
      > log1p with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > log1p with Vec(0.777,0.777,0.777,0.777)
      > exponent with Vec(1,2,9223372036854775807)
      > exponent with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exponent with Vec(0.777,0.777,0.777,0.777)
      > exp with Vec(1,2,9223372036854775807)
      > exp with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exp with Vec(0.777,0.777,0.777,0.777)
      > exp2 with Vec(1,2,9223372036854775807)
      > exp2 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > exp2 with Vec(0.777,0.777,0.777,0.777)
      > expm1 with Vec(1,2,9223372036854775807)
      > expm1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > expm1 with Vec(0.777,0.777,0.777,0.777)
      > cbrt with Vec(1,2,9223372036854775807)
      > cbrt with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > cbrt with Vec(0.777,0.777,0.777,0.777)
      > sqrt with Vec(1,2,9223372036854775807)
      > sqrt with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > sqrt with Vec(0.777,0.777,0.777,0.777)
      > erf with Vec(1,2,9223372036854775807)
      > erf with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erf with Vec(0.777,0.777,0.777,0.777)
      > erfc with Vec(1,2,9223372036854775807)
      > erfc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfc with Vec(0.777,0.777,0.777,0.777)
      > erfcx with Vec(1,2,9223372036854775807)
      > erfcx with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfcx with Vec(0.777,0.777,0.777,0.777)
      > erfi with Vec(1,2,9223372036854775807)
      > erfi with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > erfi with Vec(0.777,0.777,0.777,0.777)
      > dawson with Vec(1,2,9223372036854775807)
      > dawson with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > dawson with Vec(0.777,0.777,0.777,0.777)
      > trunc with Vec(1,2,9223372036854775807)
      > trunc with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > trunc with Vec(0.777,0.777,0.777,0.777)
      > round with Vec(1,2,9223372036854775807)
      > round with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > round with Vec(0.777,0.777,0.777,0.777)
      > ceil with Vec(1,2,9223372036854775807)
      > ceil with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > ceil with Vec(0.777,0.777,0.777,0.777)
      > floor with Vec(1,2,9223372036854775807)
      > floor with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > floor with Vec(0.777,0.777,0.777,0.777)
      > significand with Vec(1,2,9223372036854775807)
      > significand with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > significand with Vec(0.777,0.777,0.777,0.777)
      > lgamma with Vec(1,2,9223372036854775807)
      > lgamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > lgamma with Vec(0.777,0.777,0.777,0.777)
      > gamma with Vec(1,2,9223372036854775807)
      > gamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > gamma with Vec(0.777,0.777,0.777,0.777)
      > lfact with Vec(1,2,9223372036854775807)
      > lfact with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > lfact with Vec(0.777,0.777,0.777,0.777)
      > frexp with Vec(1,2,9223372036854775807)
      > frexp with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > frexp with Vec(0.777,0.777,0.777,0.777)
      > modf with Vec(1,2,9223372036854775807)
      > modf with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > modf with Vec(0.777,0.777,0.777,0.777)
      > airy with Vec(1,2,9223372036854775807)
      > airy with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airy with Vec(0.777,0.777,0.777,0.777)
      > airyai with Vec(1,2,9223372036854775807)
      > airyai with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyai with Vec(0.777,0.777,0.777,0.777)
      > airyprime with Vec(1,2,9223372036854775807)
      > airyprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyprime with Vec(0.777,0.777,0.777,0.777)
      > airyaiprime with Vec(1,2,9223372036854775807)
      > airyaiprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airyaiprime with Vec(0.777,0.777,0.777,0.777)
      > airybi with Vec(1,2,9223372036854775807)
      > airybi with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airybi with Vec(0.777,0.777,0.777,0.777)
      > airybiprime with Vec(1,2,9223372036854775807)
      > airybiprime with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > airybiprime with Vec(0.777,0.777,0.777,0.777)
      > besselj0 with Vec(1,2,9223372036854775807)
      > besselj0 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > besselj0 with Vec(0.777,0.777,0.777,0.777)
      > besselj1 with Vec(1,2,9223372036854775807)
      > besselj1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > besselj1 with Vec(0.777,0.777,0.777,0.777)
      > bessely0 with Vec(1,2,9223372036854775807)
      > bessely0 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > bessely0 with Vec(0.777,0.777,0.777,0.777)
      > bessely1 with Vec(1,2,9223372036854775807)
      > bessely1 with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > bessely1 with Vec(0.777,0.777,0.777,0.777)
      > eta with Vec(1,2,9223372036854775807)
      > eta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > eta with Vec(0.777,0.777,0.777,0.777)
      > zeta with Vec(1,2,9223372036854775807)
      > zeta with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > zeta with Vec(0.777,0.777,0.777,0.777)
      > digamma with Vec(1,2,9223372036854775807)
      > digamma with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > digamma with Vec(0.777,0.777,0.777,0.777)
      > real with Vec(1,2,9223372036854775807)
      > real with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > real with Vec(0.777,0.777,0.777,0.777)
      > imag with Vec(1,2,9223372036854775807)
      > imag with FixedSizeArrays.Mat{3,3,Int64}(
    -9223372036854775808 2 -2
    2 3 3
    5 5 6
)

      > imag with Vec(0.777,0.777,0.777,0.777)
  > typed round/floor/ceil/trunc
  > shift, push...
  > Base.Test
show for subtype
1 fact verified.
9299 facts verified.
INFO: FixedSizeArrays tests passed
INFO: No packages to install, update or remove

>>> End of log
