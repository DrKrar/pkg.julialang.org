>>> 'Pkg.add("StochDynamicProgramming")' log
INFO: Cloning cache of StochDynamicProgramming from git://github.com/JuliaOpt/StochDynamicProgramming.jl.git
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing DataStructures v0.4.6
INFO: Installing Distributions v0.11.0
INFO: Installing ForwardDiff v0.2.5
INFO: Installing Interpolations v0.3.6
INFO: Installing Iterators v0.2.0
INFO: Installing JuMP v0.14.1
INFO: Installing Lazy v0.11.4
INFO: Installing MacroTools v0.3.2
INFO: Installing MathProgBase v0.5.8
INFO: Installing NaNMath v0.2.2
INFO: Installing PDMats v0.5.1
INFO: Installing ProgressMeter v0.3.3
INFO: Installing Ratios v0.0.4
INFO: Installing ReverseDiffSparse v0.5.8
INFO: Installing Rmath v0.1.4
INFO: Installing SHA v0.3.0
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing StochDynamicProgramming v0.2.2
INFO: Installing URIParser v0.1.6
INFO: Installing WoodburyMatrices v0.2.1
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("StochDynamicProgramming")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1008.44921875 MB free)
Uptime: 28758.0 sec
Load Avg:  1.181640625  1.05859375  0.994140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1357944 s       6521 s     125418 s    1088746 s        113 s
#2  3499 MHz     852261 s         81 s     112142 s    1791412 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - StochDynamicProgramming       0.2.2
24 additional packages:
 - AxisAlgorithms                0.1.5
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Distributions                 0.11.0
 - ForwardDiff                   0.2.5
 - Interpolations                0.3.6
 - Iterators                     0.2.0
 - JuMP                          0.14.1
 - Lazy                          0.11.4
 - MacroTools                    0.3.2
 - MathProgBase                  0.5.8
 - NaNMath                       0.2.2
 - PDMats                        0.5.1
 - ProgressMeter                 0.3.3
 - Ratios                        0.0.4
 - ReverseDiffSparse             0.5.8
 - Rmath                         0.1.4
 - SHA                           0.3.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.1
INFO: Computing test dependencies for StochDynamicProgramming...
INFO: Installing Cbc v0.2.5
INFO: Installing Clp v0.2.2
INFO: Installing FactCheck v0.4.3
INFO: Building Cbc
INFO: Testing StochDynamicProgramming
Probability functions
8 facts verified.
Utils functions
INFO: extract_vector_from_3Dmatrix is now deprecated. Use collect instead.
3 facts verified.
SDDP algorithm: 1D case
  > Linear cost
Initialize cuts
Pass nÂ° 2	Lower-bound: -1.3440e+01	Time: 0.03s
Compute final upper-bound with 1000 scenarios...

############################################################
SDDP CONVERGENCE
- Exact lower bound:          -1.3440e+01 [Gap < -0.79%]
- Estimation of upper-bound:  -1.3406e+01
- Upper-bound's s.t.d:        1.1630e+00
- Confidence interval (95%):  [-1.3478e+01 , -1.3334e+01]
############################################################
  > Value functions calculation
  > Hotstart
  > Cuts pruning
  > Quadratic regularization
  > Final cost
  > Piecewise linear cost
  > SMIP
  > Stopping criterion
  > Dump
  > Compare parameters
32 facts verified.
SDDP algorithm: 2D case
  > Linear cost
  > Dump
10 facts verified.
Indexation for SDP
6 facts verified.
SDP algorithm
  > Compare StochDynProgModel constructors
  > Solve and simulate using SDP
22 facts verified.
SDDP algorithm: 1D case
  > Extensive solving
  > Unsolvable extensive formulation
WARNING: Not solved to optimality, status: Infeasible
2 facts verified.
INFO: StochDynamicProgramming tests passed
INFO: Removing Cbc v0.2.5
INFO: Removing Clp v0.2.2
INFO: Removing FactCheck v0.4.3

>>> End of log
