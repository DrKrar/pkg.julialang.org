>>> 'Pkg.add("StochDynamicProgramming")' log
INFO: Cloning cache of StochDynamicProgramming from https://github.com/JuliaOpt/StochDynamicProgramming.jl.git
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing DataStructures v0.4.6
INFO: Installing Distributions v0.11.1
INFO: Installing ForwardDiff v0.2.5
INFO: Installing Interpolations v0.3.6
INFO: Installing Iterators v0.2.0
INFO: Installing JuMP v0.14.1
INFO: Installing Lazy v0.11.4
INFO: Installing MacroTools v0.3.2
INFO: Installing MathProgBase v0.5.8
INFO: Installing NaNMath v0.2.2
INFO: Installing PDMats v0.5.2
INFO: Installing ProgressMeter v0.3.3
INFO: Installing Ratios v0.0.4
INFO: Installing ReverseDiffSparse v0.5.8
INFO: Installing Rmath v0.1.5
INFO: Installing SHA v0.3.0
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing StochDynamicProgramming v0.2.2
INFO: Installing URIParser v0.1.6
INFO: Installing WoodburyMatrices v0.2.1
INFO: Building Rmath
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Rmath/deps/build.jl, in expression starting on line 39
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of StochDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("StochDynamicProgramming")' log
Julia Version 0.6.0-dev.1532
Commit ae1b30b (2016-12-09 18:49 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1220.4296875 MB free)
Uptime: 21216.0 sec
Load Avg:  0.97021484375  1.0048828125  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3511 MHz    1225409 s       6680 s     123846 s     538502 s         72 s
#2  3511 MHz     432483 s         25 s      67279 s    1550164 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - StochDynamicProgramming       0.2.2
24 additional packages:
 - AxisAlgorithms                0.1.5
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Distributions                 0.11.1
 - ForwardDiff                   0.2.5
 - Interpolations                0.3.6
 - Iterators                     0.2.0
 - JuMP                          0.14.1
 - Lazy                          0.11.4
 - MacroTools                    0.3.2
 - MathProgBase                  0.5.8
 - NaNMath                       0.2.2
 - PDMats                        0.5.2
 - ProgressMeter                 0.3.3
 - Ratios                        0.0.4
 - ReverseDiffSparse             0.5.8
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.1
INFO: Computing test dependencies for StochDynamicProgramming...
INFO: Installing Cbc v0.2.5
INFO: Installing Clp v0.2.2
INFO: Installing FactCheck v0.4.3
INFO: Building Cbc
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Cbc/deps/build.jl, in expression starting on line 63
INFO: Testing StochDynamicProgramming
WARNING: filter(flt,itr) is deprecated, use Iterators.filter(flt,itr) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in filter(::Function, ::Tuple{Symbol,Expr}) at ./deprecated.jl:50
 in @constraint(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:306
 in docm(::String, ::Expr, ::Bool) at ./docs/Docs.jl:605 (repeats 2 times)
 in @doc(::String, ::Vararg{Any,N}) at ./boot.jl:343
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/forwardBackwardIterations.jl, in expression starting on line 183
WARNING: filter(flt,itr) is deprecated, use Iterators.filter(flt,itr) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in filter(::Function, ::Tuple{Symbol,Symbol,Expr}) at ./deprecated.jl:50
 in @constraint(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:306
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/SDDPoptimize.jl, in expression starting on line 252
Probability functions
8 facts verified.
Utils functions
INFO: extract_vector_from_3Dmatrix is now deprecated. Use collect instead.
3 facts verified.
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::Void, ::Vararg{Void,N}) at ./deprecated.jl:30
 in @fact_throws(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
SDDP algorithm: 1D case
  > Linear cost
ERROR: LoadError: LoadError: UndefVarError: model not defined
 in set_log_level(::Clp.ClpCInterface.ClpModel, ::Int64) at /home/vagrant/.julia/v0.6/Clp/src/ClpCInterface.jl:192
 in #ClpMathProgModel#2(::Array{Any,1}, ::Type{T}) at /home/vagrant/.julia/v0.6/Clp/src/ClpSolverInterface.jl:82
 in LinearQuadraticModel(::Clp.ClpMathProgSolverInterface.ClpSolver) at /home/vagrant/.julia/v0.6/Clp/src/ClpSolverInterface.jl:89
 in #build#93(::Bool, ::Bool, ::JuMP.ProblemTraits, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:370
 in (::JuMP.#kw##build)(::Array{Any,1}, ::JuMP.#build, ::JuMP.Model) at ./<missing>:0
 in #solve#88(::Bool, ::Bool, ::Bool, ::Array{Any,1}, ::Function, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:134
 in (::JuMP.#kw##solve)(::Array{Any,1}, ::JuMP.#solve, ::JuMP.Model) at ./<missing>:0
 in #solve_one_step_one_alea#20(::Bool, ::Bool, ::Function, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/oneStepOneAleaProblem.jl:70
 in (::StochDynamicProgramming.#kw##solve_one_step_one_alea)(::Array{Any,1}, ::StochDynamicProgramming.#solve_one_step_one_alea, ::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::JuMP.Model, ::Int64, ::Array{Float64,1}, ::Array{Float64,1}) at ./<missing>:0
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/forwardBackwardIterations.jl:268
 in initialize_value_functions(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/SDDPoptimize.jl:348
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/SDDPoptimize.jl:41
 in (::##51#126{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:66
 in context(::##51#126{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::##49#122)() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##49#122, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/runtests.jl, in expression starting on line 19
error in running finalizer: UndefVarError(var=:solve)
error in running finalizer: UndefVarError(var=:model)
=======================[ ERROR: StochDynamicProgramming ]=======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cbc v0.2.5
INFO: Removing Clp v0.2.2
INFO: Removing FactCheck v0.4.3
ERROR: StochDynamicProgramming had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
