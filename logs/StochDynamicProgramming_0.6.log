>>> 'Pkg.add("StochDynamicProgramming")' log
INFO: Cloning cache of StochDynamicProgramming from https://github.com/JuliaOpt/StochDynamicProgramming.jl.git
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing DataStructures v0.4.6
INFO: Installing Distributions v0.11.0
INFO: Installing ForwardDiff v0.2.5
INFO: Installing Interpolations v0.3.6
INFO: Installing Iterators v0.2.0
INFO: Installing JuMP v0.14.1
INFO: Installing Lazy v0.11.4
INFO: Installing MacroTools v0.3.2
INFO: Installing MathProgBase v0.5.7
INFO: Installing NaNMath v0.2.1
INFO: Installing PDMats v0.5.0
INFO: Installing ProgressMeter v0.3.3
INFO: Installing Ratios v0.0.4
INFO: Installing ReverseDiffSparse v0.5.8
INFO: Installing Rmath v0.1.4
INFO: Installing SHA v0.2.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing StochDynamicProgramming v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Installing WoodburyMatrices v0.2.0
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("StochDynamicProgramming")' log
Julia Version 0.6.0-dev.1178
Commit 421f079 (2016-11-02 19:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1269.3984375 MB free)
Uptime: 23428.0 sec
Load Avg:  1.07568359375  1.001953125  0.9892578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3492 MHz    1337287 s       5103 s     180218 s     552483 s        141 s
#2  3492 MHz     408596 s       1307 s      90055 s    1765872 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - StochDynamicProgramming       0.2.1
35 additional packages:
 - AxisAlgorithms                0.1.5
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.9
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - DataStreamsIntegrationTests   0.0.1              e92cc45b (dirty)
 - DataStructures                0.4.6
 - Distributions                 0.11.0
 - FileIO                        0.2.0
 - ForwardDiff                   0.2.5
 - GZip                          0.2.20
 - Interpolations                0.3.6
 - Iterators                     0.2.0
 - JuMP                          0.14.1
 - Lazy                          0.11.4
 - MacroTools                    0.3.2
 - MathProgBase                  0.5.7
 - NaNMath                       0.2.1
 - NullableArrays                0.0.10
 - PDMats                        0.5.0
 - ProgressMeter                 0.3.3
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - ReverseDiffSparse             0.5.8
 - Rmath                         0.1.4
 - SHA                           0.2.1
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
 - WeakRefStrings                0.2.0
 - WoodburyMatrices              0.2.0
INFO: Computing test dependencies for StochDynamicProgramming...
INFO: Installing Cbc v0.2.4
INFO: Installing Clp v0.2.2
INFO: Installing FactCheck v0.4.3
INFO: Building Cbc
INFO: Testing StochDynamicProgramming
WARNING: filter(flt,itr) is deprecated, use Iterators.filter(flt,itr) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in filter(::Function, ::Tuple{Symbol,Expr}) at ./deprecated.jl:50
 in @constraint(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:306
 in docm(::String, ::Expr, ::Bool) at ./docs/Docs.jl:605 (repeats 2 times)
 in @doc(::String, ::Vararg{Any,N}) at ./boot.jl:343
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/forwardBackwardIterations.jl, in expression starting on line 179
WARNING: filter(flt,itr) is deprecated, use Iterators.filter(flt,itr) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in filter(::Function, ::Tuple{Symbol,Symbol,Expr}) at ./deprecated.jl:50
 in @constraint(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:306
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:236
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/SDDPoptimize.jl, in expression starting on line 246
Probability functions
8 facts verified.
Utils functions
INFO: extract_vector_from_3Dmatrix is now deprecated. Use collect instead.
4 facts verified.
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::Void, ::Vararg{Void,N}) at ./deprecated.jl:30
 in @fact_throws(::Vararg{Any,N}) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:307
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
SDDP algorithm: 1D case
  > Linear cost
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::JuMP.Model, ::Vararg{JuMP.Model,N}) at ./deprecated.jl:30
 in merge_duplicates(::Type{Int32}, ::JuMP.GenericAffExpr{Float64,JuMP.Variable}, ::JuMP.IndexedVector{Float64}, ::JuMP.Model) at /home/vagrant/.julia/v0.6/JuMP/src/solvers.jl:1046
 in addconstraint(::JuMP.Model, ::JuMP.GenericRangeConstraint{JuMP.GenericAffExpr{Float64,JuMP.Variable}}) at /home/vagrant/.julia/v0.6/JuMP/src/affexpr.jl:169
 in macro expansion at /home/vagrant/.julia/v0.6/JuMP/src/macros.jl:363 [inlined]
 in add_cut_to_model!(::StochDynamicProgramming.LinearSPModel, ::JuMP.Model, ::Int64, ::Float64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/forwardBackwardIterations.jl:200
 in backward_pass!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Array{Float64,3}, ::Array{StochDynamicProgramming.NoiseLaw,1}) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/forwardBackwardIterations.jl:294
 in run_SDDP!(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Array{StochDynamicProgramming.PolyhedralFunction,1}, ::Array{JuMP.Model,1}, ::Int64) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/SDDPoptimize.jl:142
 in solve_SDDP(::StochDynamicProgramming.LinearSPModel, ::StochDynamicProgramming.SDDPparameters, ::Int64) at /home/vagrant/.julia/v0.6/StochDynamicProgramming/src/SDDPoptimize.jl:44
 in (::##55#130{Int64,Int64,Int64})() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:66
 in context(::##55#130{Int64,Int64,Int64}, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::##53#126)() at /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl:64
 in facts(::##53#126, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/StochDynamicProgramming/test/sddp.jl, in expression starting on line 7
Initialize cuts
Pass number 2	Lower-bound: -13.44	Time: 0.03s
Estimate upper-bound with Monte-Carlo ...
Estimation of upper-bound: -13.4114	Exact lower bound: -13.44	 Gap <  -0.21%  with prob. > 97.5 %
Estimation of cost of the solution (fiability 95%):-13.4338 +/- 0.0224
  > Value functions calculation
  > Hotstart
  > Cuts pruning
  > Quadratic regularization
  > Final cost
  > Piecewise linear cost
  > SMIP
  > Stopping criterion
  > Dump
  > Compare parameters
32 facts verified.
SDDP algorithm: 2D case
  > Linear cost
  > Dump
10 facts verified.
Indexation for SDP
6 facts verified.
SDP algorithm
  > Compare StochDynProgModel constructors
  > Solve and simulate using SDP
22 facts verified.
SDDP algorithm: 1D case
  > Extensive solving
  > Unsolvable extensive formulation
WARNING: Not solved to optimality, status: Infeasible
2 facts verified.
INFO: StochDynamicProgramming tests passed
INFO: Removing Cbc v0.2.4
INFO: Removing Clp v0.2.2
INFO: Removing FactCheck v0.4.3

>>> End of log
