>>> 'Pkg.add("JFVM")' log
INFO: Cloning cache of JFVM from https://github.com/simulkade/JFVM.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing Conda v0.4.0
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing JFVM v0.2.0
INFO: Installing LaTeXStrings v0.2.0
INFO: Installing MacroTools v0.3.4
INFO: Installing PyCall v1.7.2
INFO: Installing PyPlot v2.2.4
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Conda
INFO: Building PyCall
INFO: No system-wide Python was found; got the following error:
could not spawn `'' -c "import distutils.sysconfig; print(distutils.sysconfig.get_config_var('VERSION'))"`: no such file or directory (ENOENT)
using the Python distribution in the Conda package
Fetching package metadata .........
Solving package specifications: ..........

# All requested packages already installed.
# packages in environment at /home/vagrant/.julia/v0.6/Conda/deps/usr:
#
numpy                     1.11.2                   py27_0  
INFO: PyCall is using /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python (Python 2.7.13) at /home/vagrant/.julia/v0.6/Conda/deps/usr/bin/python, libpython = /home/vagrant/.julia/v0.6/Conda/deps/usr/lib/libpython2.7
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JFVM
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JFVM")' log
Julia Version 0.6.0-dev.1918
Commit cfa2312 (2017-01-04 22:03 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1919.44921875 MB free)
Uptime: 37553.0 sec
Load Avg:  0.97021484375  0.96435546875  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3512 MHz    1938451 s       6646 s     220255 s    1186324 s        106 s
#2  3512 MHz     821261 s         71 s     148041 s    2672901 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JFVM                          0.2.0
 - JSON                          0.8.0
17 additional packages:
 - BinDeps                       0.4.5
 - ColorTypes                    0.2.12
 - Colors                        0.6.9
 - Compat                        0.10.0
 - CompilerTools                 0.2.1
 - Conda                         0.4.0
 - DataStructures                0.4.6
 - DocOpt                        0.2.0
 - FixedPointNumbers             0.2.1
 - LaTeXStrings                  0.2.0
 - MacroTools                    0.3.4
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - PyCall                        1.7.2
 - PyPlot                        2.2.4
 - Reexport                      0.0.3
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing JFVM
ERROR: LoadError: InitError: UndefVarError: name not defined
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/PyCall/src/exception.jl:78 [inlined]
 [2] pyimport(::String) at /home/vagrant/.julia/v0.6/PyCall/src/PyCall.jl:387
 [3] __init__() at /home/vagrant/.julia/v0.6/PyCall/src/pyinit.jl:58
 [4] _include_from_serialized(::String) at ./loading.jl:150
 [5] _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:187
 [6] require(::Symbol) at ./loading.jl:425
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
during initialization of module PyCall
while loading /home/vagrant/.julia/v0.6/PyPlot/src/PyPlot.jl, in expression starting on line 5
ERROR: LoadError: LoadError: Failed to precompile PyPlot to /home/vagrant/.julia/lib/v0.6/PyPlot.ji.
Stacktrace:
 [1] compilecache(::String) at ./loading.jl:672
 [2] require(::Symbol) at ./loading.jl:453
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] eval(::Module, ::Any) at ./boot.jl:236
 [5] require(::Symbol) at ./loading.jl:446
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/JFVM/src/JFVM.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/JFVM/test/runtests.jl, in expression starting on line 1
================================[ ERROR: JFVM ]=================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/JFVM/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: JFVM had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
