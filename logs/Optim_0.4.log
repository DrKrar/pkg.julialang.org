>>> 'Pkg.add("Optim")' log
INFO: Installing Calculus v0.1.15
INFO: Installing ForwardDiff v0.2.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.6.0
INFO: Installing PositiveFactorizations v0.0.2
INFO: Package database updated

>>> 'Pkg.test("Optim")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1047.453125 MB free)
Uptime: 12849.0 sec
Load Avg:  1.04345703125  1.03857421875  1.0078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     533557 s       5484 s      52862 s     545130 s         24 s
#2  3499 MHz     359899 s       1976 s      47663 s     821563 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - Optim                         0.6.0
5 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.8.7
 - ForwardDiff                   0.2.2
 - NaNMath                       0.2.1
 - PositiveFactorizations        0.0.2
INFO: Testing Optim
Running tests:
 * types.jl
 * bfgs.jl
 * gradient_descent.jl
 * momentum_gradient_descent.jl
 * grid_search.jl
 * l_bfgs.jl
 * levenberg_marquardt.jl
WARNING: Problem solving for delta_x: predicted residual increase.
18.95337979630715 (predicted_residual) >
3.6729087897253905 (residual) + 3.552713678800501e-15 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.83860477635018 (predicted_residual) >
2.9812894464055533 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
2.5347148551516008 (predicted_residual) >
2.1895906529240503 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
2.4662071702097417 (predicted_residual) >
2.0497617658979004 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
2.402223943602616 (predicted_residual) >
1.9102621894841052 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
1.9548243717543228 (predicted_residual) >
1.8272637677633554 (residual) + 2.220446049250313e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.289097004965162 (predicted_residual) >
1.7676814916153436 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.5282850316144354 (predicted_residual) >
0.43569220875204495 (residual) + 1.1102230246251565e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.38479244475307006 (predicted_residual) >
0.3191560404065722 (residual) + 5.551115123125783e-17 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.0867292689898465 (predicted_residual) >
0.07825577278289107 (residual) + 1.3877787807814457e-17 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.05060004314422784 (predicted_residual) >
0.04864792336713843 (residual) + 6.938893903907228e-18 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.367145765447734 (predicted_residual) >
3.358226500859248 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.3680470964852383 (predicted_residual) >
3.367145765447712 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.368137102125979 (predicted_residual) >
3.36804709648524 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.3681461013241285 (predicted_residual) >
3.3681371021259796 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.368147001219089 (predicted_residual) >
3.3681461013241263 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.6257200159753995 (predicted_residual) >
3.6218983224136934 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.634856357243633 (predicted_residual) >
3.6257200159766194 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.6357709238952762 (predicted_residual) >
3.634856357243618 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.635862247103403 (predicted_residual) >
3.6357709238952736 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.6358713782290524 (predicted_residual) >
3.6358622471034012 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.6358722911766694 (predicted_residual) >
3.63587137822905 (residual) + 4.440892098500626e-16 (eps)
 * newton.jl
 * newton_trust_region.jl
 * cg.jl
 * nelder_mead.jl
WARNING: NelderMead(a::Real,g::Real,b::Real) is deprecated, use NelderMead(initial_simplex=AffineSimplexer(),parameters=FixedParameters(a,g,b,0.5)) instead.
 in depwarn at deprecated.jl:73
 in call at deprecated.jl:50
 in NelderMead at /home/vagrant/.julia/v0.4/Optim/src/nelder_mead.jl:54
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 [inlined code] from /home/vagrant/.julia/v0.4/Optim/test/runtests.jl:39
 in anonymous at no file:0
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Optim/test/nelder_mead.jl, in expression starting on line 19
 * optimize.jl
 * simulated_annealing.jl
 * particle_swarm.jl
 * interpolating_line_search.jl
 * api.jl
Iter     Function value   Gradient norm 
     0     1.000000e+00     2.000000e+00
 * g(x): [-2.0,0.0]
 * ~inv(H): [1.0 0.0
 0.0 1.0]
 * x: [0.0,0.0]
     1     8.415971e-01     1.578600e+00
 * g(x): [-1.5785998400300938,-1.4632867729979242]
 * ~inv(H): [12.260820411071911 3.4724400035880936
 3.4724400035880936 1.0]
 * x: [0.08553615530867413,0.0]
     2     6.928766e-01     1.076526e+01
 * g(x): [6.590040993876368,-10.765261839227247]
 * ~inv(H): [0.09755432555822985 0.05561860874038116
 0.05561860874038116 0.04030179753623098]
 * x: [0.36505949086640005,0.079442122675499]
     3     4.336347e-01     1.082559e+00
 * g(x): [-1.0825588837187847,-0.34241413678581245]
 * ~inv(H): [0.08642895329759773 0.06138326588451566
 0.06138326588451566 0.04860312015279905]
 * x: [0.34171314616735027,0.11505580357965983]
     4     3.268654e-01     1.203708e+00
 * g(x): [-0.09839677627716781,-1.2037082999506954]
 * ~inv(H): [0.27842751754766193 0.21395206510478715
 0.21395206510478715 0.16891347473888252]
 * x: [0.4314552937349688,0.18013512899217476]
     5     2.989460e-01     1.820631e+00
 * g(x): [0.5998987628106676,-1.8206313074099922]
 * ~inv(H): [0.1772728271406797 0.1529726293715945
 0.15297262937159456 0.13560134462583273]
 * x: [0.46087178355791397,0.20329964434280273]
     6     2.380606e-01     3.824597e+00
 * g(x): [3.317879999148621,-3.824596886801146]
 * ~inv(H): [0.11749909347998533 0.11432852203558802
 0.11432852203558808 0.11448813761617876]
 * x: [0.5511216920212516,0.2846121349823616]
     7     1.377832e-01     4.305388e+00
 * g(x): [4.305387780883387,-3.657061711344489]
 * ~inv(H): [0.10559052300284952 0.1287935569735938
 0.1287935569735939 0.1683653505547278]
 * x: [0.6769706063292672,0.4400038932770932]
     8     9.932907e-02     1.240226e+00
 * g(x): [-1.2402258640724222,0.44592549283627436]
 * ~inv(H): [0.12047899026168724 0.16494905107389302
 0.16494905107389313 0.23081973637893397]
 * x: [0.6856245199014988,0.472310609754342]
     9     6.543213e-02     6.765640e-01
 * g(x): [0.502941174668424,-0.6765639654057409]
 * ~inv(H): [0.36626219446146857 0.5145981989382932
 0.5145981989382932 0.7265430960391137]
 * x: [0.7464496512850596,0.5538042620765583]
    10     5.511958e-02     1.419213e+00
 * g(x): [1.4192134417115665,-1.211167971472693]
 * ~inv(H): [0.21147280127724322 0.31246909080110485
 0.31246909080110485 0.46459888969678076]
 * x: [0.7731690866149542,0.5917345966396391]
Iter     Function value   Gradient norm 
     0     1.000000e+00     2.000000e+00
 * g(x): [-2.0,0.0]
 * ~inv(H): [1.0 0.0
 0.0 1.0]
 * x: [0.0,0.0]
     1     8.415971e-01     1.578600e+00
 * g(x): [-1.5785998400300938,-1.4632867729979242]
 * ~inv(H): [12.260820411071911 3.4724400035880936
 3.4724400035880936 1.0]
 * x: [0.08553615530867413,0.0]
     2     6.928766e-01     1.076526e+01
 * g(x): [6.590040993876368,-10.765261839227247]
 * ~inv(H): [0.09755432555822985 0.05561860874038116
 0.05561860874038116 0.04030179753623098]
 * x: [0.36505949086640005,0.079442122675499]
     3     4.336347e-01     1.082559e+00
 * g(x): [-1.0825588837187847,-0.34241413678581245]
 * ~inv(H): [0.08642895329759773 0.06138326588451566
 0.06138326588451566 0.04860312015279905]
 * x: [0.34171314616735027,0.11505580357965983]
     4     3.268654e-01     1.203708e+00
 * g(x): [-0.09839677627716781,-1.2037082999506954]
 * ~inv(H): [0.27842751754766193 0.21395206510478715
 0.21395206510478715 0.16891347473888252]
 * x: [0.4314552937349688,0.18013512899217476]
     5     2.989460e-01     1.820631e+00
 * g(x): [0.5998987628106676,-1.8206313074099922]
 * ~inv(H): [0.1772728271406797 0.1529726293715945
 0.15297262937159456 0.13560134462583273]
 * x: [0.46087178355791397,0.20329964434280273]
     6     2.380606e-01     3.824597e+00
 * g(x): [3.317879999148621,-3.824596886801146]
 * ~inv(H): [0.11749909347998533 0.11432852203558802
 0.11432852203558808 0.11448813761617876]
 * x: [0.5511216920212516,0.2846121349823616]
     7     1.377832e-01     4.305388e+00
 * g(x): [4.305387780883387,-3.657061711344489]
 * ~inv(H): [0.10559052300284952 0.1287935569735938
 0.1287935569735939 0.1683653505547278]
 * x: [0.6769706063292672,0.4400038932770932]
     8     9.932907e-02     1.240226e+00
 * g(x): [-1.2402258640724222,0.44592549283627436]
 * ~inv(H): [0.12047899026168724 0.16494905107389302
 0.16494905107389313 0.23081973637893397]
 * x: [0.6856245199014988,0.472310609754342]
     9     6.543213e-02     6.765640e-01
 * g(x): [0.502941174668424,-0.6765639654057409]
 * ~inv(H): [0.36626219446146857 0.5145981989382932
 0.5145981989382932 0.7265430960391137]
 * x: [0.7464496512850596,0.5538042620765583]
    10     5.511958e-02     1.419213e+00
 * g(x): [1.4192134417115665,-1.211167971472693]
 * ~inv(H): [0.21147280127724322 0.31246909080110485
 0.31246909080110485 0.46459888969678076]
 * x: [0.7731690866149542,0.5917345966396391]
    11     4.013082e-02     3.376464e+00
 * g(x): [3.3764638861612575,-2.225535925799549]
 * ~inv(H): [0.16596031736290695 0.26082566468818047
 0.26082566468818036 0.4128398706025068]
 * x: [0.8334217956088235,0.6834642097668377]
    12     6.980795e-03     5.135785e-01
 * g(x): [-0.5135784925739654,0.18950864380857801]
 * ~inv(H): [0.37279387466211067 0.6350814716463098
 0.6350814716463098 1.088528130945603]
 * x: [0.9169878839984639,0.8418143226190231]
    13     4.822164e-03     1.639696e+00
 * g(x): [1.6396956706416248,-0.9197364361997584]
 * ~inv(H): [0.21277966223893663 0.38512074243449224
 0.38512074243449224 0.7005134374449606]
 * x: [0.9479675444006876,0.8940437830560709]
    14     1.768810e-03     4.107685e-01
 * g(x): [-0.4107685286199115,0.17125983330164019]
 * ~inv(H): [0.3033758724195759 0.5801280591151603
 0.5801280591151603 1.1142909527249176]
 * x: [0.9588237274123387,0.9201992394153989]
    15     4.218795e-04     1.186910e-01
 * g(x): [0.1186910070851086,-0.08111407238122759]
 * ~inv(H): [0.4903744908513556 0.9453928635051384
 0.9453928635051384 1.8267232015823822]
 * x: [0.9798646882925809,0.9597292370008106]
    16     9.522312e-05     3.374010e-01
 * g(x): [0.33740103123189163,-0.173900230455315]
 * ~inv(H): [0.436788904106256 0.8603032690972453
 0.8603032690972453 1.6984746476183599]
 * x: [0.9955705649385959,0.9902912486198784]
    17     1.824025e-06     2.888770e-02
 * g(x): [-0.028887703530359368,0.013283506692918223]
 * ~inv(H): [0.49455770183552655 0.9851517376363241
 0.9851517376363241 1.9674497843583114]
 * x: [0.9988240339751772,0.9977158683799104]
    18     3.847551e-09     1.733584e-03
 * g(x): [0.0017335836947083379,-0.0009090400136191334]
 * ~inv(H): [0.495163457689567 0.9884615159206567
 0.9884615159206565 1.977995631119267]
 * x: [0.9999577902041284,0.9999110369898556]
    19     6.629175e-13     2.322282e-05
 * g(x): [2.322282039644862e-5,-1.1011587064402306e-5]
 * ~inv(H): [0.5032494702161785 1.0061461191632277
 1.0061461191632275 2.0166182808176325]
 * x: [1.000000599816529,1.0000011445754822]
    20     1.745741e-19     1.175798e-08
 * g(x): [-1.1757975485618804e-8,6.161249288538784e-9]
 * ~inv(H): [0.49985452220886173 0.9996938112870364
 0.9996938112870362 2.0043554658026466]
 * x: [1.0000000002822615,1.0000000005953293]
    21     5.374115e-30     9.015011e-14
 * g(x): [9.015010959956277e-14,-4.440892098500626e-14]
 * ~inv(H): [0.4999980183519693 0.9999962266730337
 0.9999962266730335 2.0049928000677375]
 * x: [1.0000000000000007,1.000000000000001]
Iter     Function value    √(Σ(yᵢ-ȳ)²)/n 
------   --------------    --------------
     0     9.506641e-01     4.576214e-02
 * step_type: initial
 * centroid: [0.0125,0.0]
     1     9.506641e-01     2.023096e-02
 * step_type: outside contraction
 * centroid: [0.0125,0.0]
     2     9.506641e-01     2.172172e-02
 * step_type: expansion
 * centroid: [0.021875000000000002,-0.00625]
     3     9.262175e-01     5.243757e-02
 * step_type: expansion
 * centroid: [0.045312500000000006,-0.009375000000000001]
     4     8.292372e-01     4.259749e-02
 * step_type: reflection
 * centroid: [0.08203125,-0.010937500000000003]
     5     8.292372e-01     4.265507e-02
 * step_type: reflection
 * centroid: [0.11875000000000001,-0.012500000000000004]
     6     8.138907e-01     3.109209e-02
 * step_type: reflection
 * centroid: [0.13515625,-0.004687500000000004]
     7     7.569606e-01     3.215435e-02
 * step_type: reflection
 * centroid: [0.1515625,0.003124999999999996]
     8     7.382898e-01     2.418419e-02
 * step_type: reflection
 * centroid: [0.16796875,0.010937499999999996]
     9     6.989376e-01     2.426367e-02
 * step_type: reflection
 * centroid: [0.18437499999999998,0.018749999999999996]
    10     6.800415e-01     2.124416e-02
 * step_type: reflection
 * centroid: [0.20078124999999997,0.026562499999999996]
    11     6.475000e-01     1.809652e-02
 * step_type: reflection
 * centroid: [0.21718749999999998,0.034374999999999996]
    12     6.377042e-01     2.151280e-02
 * step_type: reflection
 * centroid: [0.23359374999999996,0.042187499999999996]
    13     5.977620e-01     1.648361e-02
 * step_type: reflection
 * centroid: [0.24999999999999994,0.049999999999999996]
    14     5.977620e-01     2.780850e-02
 * step_type: reflection
 * centroid: [0.26640624999999996,0.057812499999999996]
    15     5.476196e-01     2.429423e-02
 * step_type: inside contraction
 * centroid: [0.24609374999999994,0.0671875]
    16     5.449374e-01     1.754792e-02
 * step_type: reflection
 * centroid: [0.26855468749999994,0.068359375]
    17     5.091263e-01     1.465262e-02
 * step_type: inside contraction
 * centroid: [0.29101562499999994,0.06953125]
    18     5.091263e-01     2.928711e-02
 * step_type: expansion
 * centroid: [0.29208984374999997,0.0748046875]
    19     4.564435e-01     2.393325e-02
 * step_type: reflection
 * centroid: [0.317236328125,0.08916015625000001]
    20     4.564435e-01     4.392438e-02
 * step_type: expansion
 * centroid: [0.3423828125,0.10351562500000001]
    21     3.653678e-01     3.913535e-02
 * step_type: reflection
 * centroid: [0.36967773437500007,0.12841796875]
    22     3.653678e-01     3.661549e-02
 * step_type: reflection
 * centroid: [0.3969726562500001,0.1533203125]
    23     2.993956e-01     2.794297e-02
 * step_type: inside contraction
 * centroid: [0.4395996093750002,0.18076171875000002]
    24     2.993956e-01     3.615204e-02
 * step_type: expansion
 * centroid: [0.43875732421875013,0.1857177734375]
    25     2.597777e-01     2.976324e-02
 * step_type: reflection
 * centroid: [0.4792785644531251,0.22554931640624998]
    26     2.265853e-01     4.845727e-02
 * step_type: expansion
 * centroid: [0.5197998046875001,0.265380859375]
    27     1.444892e-01     3.581898e-02
 * step_type: inside contraction
 * centroid: [0.586773681640625,0.33507080078124996]
    28     1.444892e-01     2.978437e-02
 * step_type: reflection
 * centroid: [0.5824142456054688,0.3375335693359375]
    29     1.444892e-01     2.452313e-02
 * step_type: reflection
 * centroid: [0.6212509155273438,0.3872772216796875]
    30     9.866233e-02     1.906929e-02
 * step_type: inside contraction
 * centroid: [0.664447021484375,0.43455810546874996]
    31     9.866233e-02     2.637123e-02
 * step_type: expansion
 * centroid: [0.6719764709472656,0.4482254028320312]
    32     6.483338e-02     1.579108e-02
 * step_type: inside contraction
 * centroid: [0.7339962005615235,0.5296745300292969]
    33     6.483338e-02     1.844031e-02
 * step_type: expansion
 * centroid: [0.7260207176208497,0.5229795455932618]
    34     5.484730e-02     6.612510e-03
 * step_type: reflection
 * centroid: [0.7681017398834231,0.5876912117004396]
    35     4.879623e-02     1.884123e-02
 * step_type: expansion
 * centroid: [0.8101827621459965,0.6524028778076174]
    36     1.219851e-02     1.494519e-02
 * step_type: inside contraction
 * centroid: [0.8750008106231697,0.755792331695557]
    37     1.219851e-02     7.778578e-03
 * step_type: outside contraction
 * centroid: [0.8621893286705025,0.7425888776779179]
    38     1.219851e-02     6.490233e-03
 * step_type: reflection
 * centroid: [0.8849897414445886,0.7843810141086585]
    39     5.976421e-03     2.702671e-03
 * step_type: inside contraction
 * centroid: [0.9239312797784818,0.8489061653614052]
    40     5.976421e-03     3.461744e-03
 * step_type: expansion
 * centroid: [0.9215608201920997,0.8479876920580872]
    41     2.624191e-03     1.520029e-03
 * step_type: inside contraction
 * centroid: [0.9545762095600379,0.910216660052539]
    42     2.624191e-03     1.337027e-03
 * step_type: inside contraction
 * centroid: [0.9439519026316714,0.8937409447506082]
    43     2.624191e-03     1.226069e-03
 * step_type: reflection
 * centroid: [0.9538812620798138,0.9109773207921547]
    44     3.582590e-04     9.655910e-04
 * step_type: reflection
 * centroid: [0.9723500860156504,0.9469713943544789]
    45     3.582590e-04     3.537509e-04
 * step_type: outside contraction
 * centroid: [0.990818909951487,0.9829654679168031]
    46     4.826749e-05     1.270919e-04
 * step_type: inside contraction
 * centroid: [0.9936487235536348,0.986894231557382]
    47     4.826749e-05     5.661519e-05
 * step_type: inside contraction
 * centroid: [1.0007607753199423,1.00194469560811]
    48     4.826749e-05     1.499616e-05
 * step_type: inside contraction
 * centroid: [0.9982690560176721,0.9963284628604031]
    49     3.589907e-05     1.447031e-05
 * step_type: inside contraction
 * centroid: [1.0012021520752583,1.0024496366988402]
    50     1.331661e-05     1.424732e-05
 * step_type: inside contraction
 * centroid: [0.9968737168703015,0.9940407577646981]
    51     1.565213e-06     4.917747e-06
 * step_type: outside contraction
 * centroid: [0.998653495245226,0.9972868300460862]
    52     1.565213e-06     3.456266e-06
 * step_type: inside contraction
 * centroid: [1.000116475435604,1.0000408399856884]
    53     1.565213e-06     9.104041e-07
 * step_type: reflection
 * centroid: [0.9995923312957362,0.9991063063298947]
    54     1.565213e-06     6.870496e-07
 * step_type: inside contraction
 * centroid: [1.0004217151170214,1.0008761915859248]
    55     4.966342e-07     5.777837e-07
 * step_type: inside contraction
 * centroid: [1.0001380592413458,1.000224882371858]
    56     2.272707e-07     1.307209e-07
 * step_type: inside contraction
 * centroid: [0.999674037167526,0.9993611548264962]
    57     2.120249e-07     7.108936e-08
 * step_type: inside contraction
 * centroid: [1.0001638816607286,1.0003346050925508]
    58     6.942358e-08     8.182068e-08
 * step_type: inside contraction
 * centroid: [1.0000285093277366,1.0000363811656907]
    59     1.876334e-08     2.129210e-08
 * step_type: inside contraction
 * centroid: [0.9998851163308793,0.9997733239778085]
    60     1.876334e-08     9.270314e-09
 * step_type: inside contraction
 * centroid: [1.0000603472450182,1.0001197288321504]
Iter     Function value   Gradient norm 
     0    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -2.0
 * x_upper: 1.0
     1    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -2.0
 * x_upper: -0.14589803375031563
     2    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -1.291796067500631
 * x_upper: -0.14589803375031563
     3    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -1.291796067500631
 * x_upper: -0.5835921350012621
     4    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -1.0212862362522084
 * x_upper: -0.5835921350012621
     5    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.8541019662496847
 * x_upper: -0.5835921350012621
     6    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.8541019662496847
 * x_upper: -0.6869176962471611
     7    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7902432574930602
 * x_upper: -0.6869176962471611
     8    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7902432574930602
 * x_upper: -0.7263845487364357
     9    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7658514012257102
 * x_upper: -0.7263845487364357
    10    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7658514012257102
 * x_upper: -0.7414595449583602
    11    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7565345411802846
 * x_upper: -0.7414595449583602
    12    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7565345411802846
 * x_upper: -0.7472176811348591
    13    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.752975817311358
 * x_upper: -0.7472176811348591
    14    -1.249993e-01              NaN
 * x_minimum: -0.7494170934424312
 * x_lower: -0.7507764050037857
 * x_upper: -0.7472176811348591
    15    -1.249993e-01              NaN
 * x_minimum: -0.7494170934424312
 * x_lower: -0.7507764050037857
 * x_upper: -0.7485769926962135
    16    -1.250000e-01              NaN
 * x_minimum: -0.749936304257568
 * x_lower: -0.7507764050037857
 * x_upper: -0.7494170934424312
    17    -1.250000e-01              NaN
 * x_minimum: -0.749936304257568
 * x_lower: -0.750257194188649
 * x_upper: -0.7494170934424312
    18    -1.250000e-01              NaN
 * x_minimum: -0.749936304257568
 * x_lower: -0.750257194188649
 * x_upper: -0.7497379833735123
    19    -1.250000e-01              NaN
 * x_minimum: -0.7500588733045933
 * x_lower: -0.750257194188649
 * x_upper: -0.749936304257568
    20    -1.250000e-01              NaN
 * x_minimum: -0.7500588733045933
 * x_lower: -0.7501346251416237
 * x_upper: -0.749936304257568
    21    -1.250000e-01              NaN
 * x_minimum: -0.7500120560945983
 * x_lower: -0.7500588733045933
 * x_upper: -0.749936304257568
    22    -1.250000e-01              NaN
 * x_minimum: -0.7500120560945983
 * x_lower: -0.7500588733045933
 * x_upper: -0.749983121467563
    23    -1.250000e-01              NaN
 * x_minimum: -0.7500120560945983
 * x_lower: -0.750029938677558
 * x_upper: -0.749983121467563
    24    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500120560945983
 * x_upper: -0.749983121467563
    25    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500120560945983
 * x_upper: -0.7499941735116387
    26    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500052255557144
 * x_upper: -0.7499941735116387
    27    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500052255557144
 * x_upper: -0.7499983950168304
    28    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500026165220222
 * x_upper: -0.7499983950168304
    29    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500010040505226
 * x_upper: -0.7499983950168304
    30    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500010040505226
 * x_upper: -0.7499993915790231
    31    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500003881412156
 * x_upper: -0.7499993915790231
    32    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500003881412156
 * x_upper: -0.7499997722319087
    33    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500001528847944
 * x_upper: -0.7499997722319087
    34    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500001528847944
 * x_upper: -0.7499999176283731
    35    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500000630248376
 * x_upper: -0.7499999176283731
    36    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500000630248376
 * x_upper: -0.7499999731648807
    37    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500000287013883
 * x_upper: -0.7499999731648807
    38    -1.250000e-01              NaN
 * x_minimum: -0.749999994377939
 * x_lower: -0.75000000748833
 * x_upper: -0.7499999731648807
 * golden_section.jl
 * brent.jl
 * type_stability.jl
 * array.jl
 * constrained.jl
WARNING: could not attach metadata for @simd loop.
 * callbacks.jl
 * precon.jl
Test a basic preconditioning example
N = 10
Optim.GradientDescent{T} WITHOUT preconditioning : g_calls = 890, f_calls = 890
Optim.GradientDescent{T} WITH preconditioning : g_calls = 23, f_calls = 23
Optim.ConjugateGradient{T} WITHOUT preconditioning : g_calls = 49, f_calls = 73
Optim.ConjugateGradient{T} WITH preconditioning : g_calls = 11, f_calls = 16
Optim.LBFGS{T} WITHOUT preconditioning : g_calls = 33, f_calls = 33
Optim.LBFGS{T} WITH preconditioning : g_calls = 25, f_calls = 25
N = 50
Optim.GradientDescent{T} WITHOUT preconditioning : g_calls = 3501, f_calls = 3501
    (gradient descent is not expected to converge)
Optim.GradientDescent{T} WITH preconditioning : g_calls = 12, f_calls = 12
Optim.ConjugateGradient{T} WITHOUT preconditioning : g_calls = 185, f_calls = 276
Optim.ConjugateGradient{T} WITH preconditioning : g_calls = 7, f_calls = 10
Optim.LBFGS{T} WITHOUT preconditioning : g_calls = 386, f_calls = 386
Optim.LBFGS{T} WITH preconditioning : g_calls = 15, f_calls = 15
N = 250
Optim.GradientDescent{T} WITHOUT preconditioning : g_calls = 3502, f_calls = 3502
    (gradient descent is not expected to converge)
Optim.GradientDescent{T} WITH preconditioning : g_calls = 9, f_calls = 9
Optim.ConjugateGradient{T} WITHOUT preconditioning : g_calls = 1371, f_calls = 1993
Optim.ConjugateGradient{T} WITH preconditioning : g_calls = 5, f_calls = 7
Optim.LBFGS{T} WITHOUT preconditioning : g_calls = 1283, f_calls = 1283
Optim.LBFGS{T} WITH preconditioning : g_calls = 12, f_calls = 12
INFO: Optim tests passed

>>> End of log
