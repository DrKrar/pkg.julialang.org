>>> 'Pkg.add("Optim")' log
INFO: No packages to install, update or remove
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Optim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Optim")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing Optim
Running tests:
 * types.jl
 * bfgs.jl
 * gradient_descent.jl
 * momentum_gradient_descent.jl
 * grid_search.jl
 * l_bfgs.jl
 * levenberg_marquardt.jl
WARNING: Problem solving for delta_x: predicted residual increase.
18.95337979630715 (predicted_residual) >
3.6729087897253905 (residual) + 3.552713678800501e-15 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.83860477635018 (predicted_residual) >
2.9812894464055533 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
2.5347148551516008 (predicted_residual) >
2.1895906529240503 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
2.4662071702097417 (predicted_residual) >
2.0497617658979004 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
2.402223943602616 (predicted_residual) >
1.9102621894841052 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
1.9548243717543228 (predicted_residual) >
1.8272637677633554 (residual) + 2.220446049250313e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
3.289097004965162 (predicted_residual) >
1.7676814916153436 (residual) + 4.440892098500626e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.5282850316144354 (predicted_residual) >
0.43569220875204495 (residual) + 1.1102230246251565e-16 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.38479244475307006 (predicted_residual) >
0.3191560404065722 (residual) + 5.551115123125783e-17 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.0867292689898465 (predicted_residual) >
0.07825577278289107 (residual) + 1.3877787807814457e-17 (eps)
WARNING: Problem solving for delta_x: predicted residual increase.
0.05060004314422784 (predicted_residual) >
0.04864792336713843 (residual) + 6.938893903907228e-18 (eps)
 * newton.jl
 * cg.jl
 * nelder_mead.jl
 * optimize.jl
 * simulated_annealing.jl
 * interpolating_line_search.jl
 * api.jl
Iter     Function value   Gradient norm 
     0     1.000000e+00     2.000000e+00
 * g(x): [-2.0,0.0]
 * ~inv(H): [1.0 0.0
 0.0 1.0]
 * x: [0.0,0.0]
     1     8.415971e-01     1.578600e+00
 * g(x): [-1.5785998400300938,-1.4632867729979242]
 * ~inv(H): [12.260820411071911 3.4724400035880936
 3.4724400035880936 1.0]
 * x: [0.08553615530867413,0.0]
     2     6.928766e-01     1.076526e+01
 * g(x): [6.590040993876368,-10.765261839227247]
 * ~inv(H): [0.09755432555822985 0.05561860874038116
 0.05561860874038116 0.04030179753623098]
 * x: [0.36505949086640005,0.079442122675499]
     3     4.336347e-01     1.082559e+00
 * g(x): [-1.0825588837187847,-0.34241413678581245]
 * ~inv(H): [0.08642895329759773 0.06138326588451566
 0.06138326588451566 0.04860312015279905]
 * x: [0.34171314616735027,0.11505580357965983]
     4     3.268654e-01     1.203708e+00
 * g(x): [-0.09839677627716781,-1.2037082999506954]
 * ~inv(H): [0.27842751754766193 0.21395206510478715
 0.21395206510478715 0.16891347473888252]
 * x: [0.4314552937349688,0.18013512899217476]
     5     2.989460e-01     1.820631e+00
 * g(x): [0.5998987628106676,-1.8206313074099922]
 * ~inv(H): [0.1772728271406797 0.1529726293715945
 0.15297262937159456 0.13560134462583273]
 * x: [0.46087178355791397,0.20329964434280273]
     6     2.380606e-01     3.824597e+00
 * g(x): [3.317879999148621,-3.824596886801146]
 * ~inv(H): [0.11749909347998533 0.11432852203558802
 0.11432852203558808 0.11448813761617876]
 * x: [0.5511216920212516,0.2846121349823616]
     7     1.377832e-01     4.305388e+00
 * g(x): [4.305387780883387,-3.657061711344489]
 * ~inv(H): [0.10559052300284952 0.1287935569735938
 0.1287935569735939 0.1683653505547278]
 * x: [0.6769706063292672,0.4400038932770932]
     8     9.932907e-02     1.240226e+00
 * g(x): [-1.2402258640724222,0.44592549283627436]
 * ~inv(H): [0.12047899026168724 0.16494905107389302
 0.16494905107389313 0.23081973637893397]
 * x: [0.6856245199014988,0.472310609754342]
     9     6.543213e-02     6.765640e-01
 * g(x): [0.502941174668424,-0.6765639654057409]
 * ~inv(H): [0.36626219446146857 0.5145981989382932
 0.5145981989382932 0.7265430960391137]
 * x: [0.7464496512850596,0.5538042620765583]
    10     5.511958e-02     1.419213e+00
 * g(x): [1.4192134417115665,-1.211167971472693]
 * ~inv(H): [0.21147280127724322 0.31246909080110485
 0.31246909080110485 0.46459888969678076]
 * x: [0.7731690866149542,0.5917345966396391]
Iter     Function value   Gradient norm 
     0     1.000000e+00     2.000000e+00
 * g(x): [-2.0,0.0]
 * ~inv(H): [1.0 0.0
 0.0 1.0]
 * x: [0.0,0.0]
     1     8.415971e-01     1.578600e+00
 * g(x): [-1.5785998400300938,-1.4632867729979242]
 * ~inv(H): [12.260820411071911 3.4724400035880936
 3.4724400035880936 1.0]
 * x: [0.08553615530867413,0.0]
     2     6.928766e-01     1.076526e+01
 * g(x): [6.590040993876368,-10.765261839227247]
 * ~inv(H): [0.09755432555822985 0.05561860874038116
 0.05561860874038116 0.04030179753623098]
 * x: [0.36505949086640005,0.079442122675499]
     3     4.336347e-01     1.082559e+00
 * g(x): [-1.0825588837187847,-0.34241413678581245]
 * ~inv(H): [0.08642895329759773 0.06138326588451566
 0.06138326588451566 0.04860312015279905]
 * x: [0.34171314616735027,0.11505580357965983]
     4     3.268654e-01     1.203708e+00
 * g(x): [-0.09839677627716781,-1.2037082999506954]
 * ~inv(H): [0.27842751754766193 0.21395206510478715
 0.21395206510478715 0.16891347473888252]
 * x: [0.4314552937349688,0.18013512899217476]
     5     2.989460e-01     1.820631e+00
 * g(x): [0.5998987628106676,-1.8206313074099922]
 * ~inv(H): [0.1772728271406797 0.1529726293715945
 0.15297262937159456 0.13560134462583273]
 * x: [0.46087178355791397,0.20329964434280273]
     6     2.380606e-01     3.824597e+00
 * g(x): [3.317879999148621,-3.824596886801146]
 * ~inv(H): [0.11749909347998533 0.11432852203558802
 0.11432852203558808 0.11448813761617876]
 * x: [0.5511216920212516,0.2846121349823616]
     7     1.377832e-01     4.305388e+00
 * g(x): [4.305387780883387,-3.657061711344489]
 * ~inv(H): [0.10559052300284952 0.1287935569735938
 0.1287935569735939 0.1683653505547278]
 * x: [0.6769706063292672,0.4400038932770932]
     8     9.932907e-02     1.240226e+00
 * g(x): [-1.2402258640724222,0.44592549283627436]
 * ~inv(H): [0.12047899026168724 0.16494905107389302
 0.16494905107389313 0.23081973637893397]
 * x: [0.6856245199014988,0.472310609754342]
     9     6.543213e-02     6.765640e-01
 * g(x): [0.502941174668424,-0.6765639654057409]
 * ~inv(H): [0.36626219446146857 0.5145981989382932
 0.5145981989382932 0.7265430960391137]
 * x: [0.7464496512850596,0.5538042620765583]
    10     5.511958e-02     1.419213e+00
 * g(x): [1.4192134417115665,-1.211167971472693]
 * ~inv(H): [0.21147280127724322 0.31246909080110485
 0.31246909080110485 0.46459888969678076]
 * x: [0.7731690866149542,0.5917345966396391]
    11     4.013082e-02     3.376464e+00
 * g(x): [3.3764638861612575,-2.225535925799549]
 * ~inv(H): [0.16596031736290695 0.26082566468818047
 0.26082566468818036 0.4128398706025068]
 * x: [0.8334217956088235,0.6834642097668377]
    12     6.980795e-03     5.135785e-01
 * g(x): [-0.5135784925739654,0.18950864380857801]
 * ~inv(H): [0.37279387466211067 0.6350814716463098
 0.6350814716463098 1.088528130945603]
 * x: [0.9169878839984639,0.8418143226190231]
    13     4.822164e-03     1.639696e+00
 * g(x): [1.6396956706416248,-0.9197364361997584]
 * ~inv(H): [0.21277966223893663 0.38512074243449224
 0.38512074243449224 0.7005134374449606]
 * x: [0.9479675444006876,0.8940437830560709]
    14     1.768810e-03     4.107685e-01
 * g(x): [-0.4107685286199115,0.17125983330164019]
 * ~inv(H): [0.3033758724195759 0.5801280591151603
 0.5801280591151603 1.1142909527249176]
 * x: [0.9588237274123387,0.9201992394153989]
    15     4.218795e-04     1.186910e-01
 * g(x): [0.1186910070851086,-0.08111407238122759]
 * ~inv(H): [0.4903744908513556 0.9453928635051384
 0.9453928635051384 1.8267232015823822]
 * x: [0.9798646882925809,0.9597292370008106]
    16     9.522312e-05     3.374010e-01
 * g(x): [0.33740103123189163,-0.173900230455315]
 * ~inv(H): [0.436788904106256 0.8603032690972453
 0.8603032690972453 1.6984746476183599]
 * x: [0.9955705649385959,0.9902912486198784]
    17     1.824025e-06     2.888770e-02
 * g(x): [-0.028887703530359368,0.013283506692918223]
 * ~inv(H): [0.49455770183552655 0.9851517376363241
 0.9851517376363241 1.9674497843583114]
 * x: [0.9988240339751772,0.9977158683799104]
    18     3.847551e-09     1.733584e-03
 * g(x): [0.0017335836947083379,-0.0009090400136191334]
 * ~inv(H): [0.495163457689567 0.9884615159206567
 0.9884615159206565 1.977995631119267]
 * x: [0.9999577902041284,0.9999110369898556]
    19     6.629175e-13     2.322282e-05
 * g(x): [2.322282039644862e-5,-1.1011587064402306e-5]
 * ~inv(H): [0.5032494702161785 1.0061461191632277
 1.0061461191632275 2.0166182808176325]
 * x: [1.000000599816529,1.0000011445754822]
    20     1.745741e-19     1.175798e-08
 * g(x): [-1.1757975485618804e-8,6.161249288538784e-9]
 * ~inv(H): [0.49985452220886173 0.9996938112870364
 0.9996938112870362 2.0043554658026466]
 * x: [1.0000000002822615,1.0000000005953293]
    21     5.374115e-30     9.015011e-14
 * g(x): [9.015010959956277e-14,-4.440892098500626e-14]
 * ~inv(H): [0.4999980183519693 0.9999962266730337
 0.9999962266730335 2.0049928000677375]
 * x: [1.0000000000000007,1.000000000000001]
Iter     Function value    âˆš(Î£(yáµ¢-yÌ„)Â²)/n 
------   --------------    --------------
     0     1.000000e+00      4.690653e+01
 * step_type: initial
 * centroid: [0.3333333333333333,0.3333333333333333]
     1     1.000000e+00      4.294492e+01
 * step_type: contraction
 * centroid: [0.41666666666666663,0.16666666666666666]
     2     1.000000e+00      8.299178e+00
 * step_type: reflection
 * centroid: [-0.16666666666666666,0.3333333333333333]
     3     1.000000e+00      6.057657e+00
 * step_type: contraction
 * centroid: [-0.2708333333333333,0.29166666666666663]
     4     1.000000e+00      3.117491e+00
 * step_type: contraction
 * centroid: [-0.32291666666666663,0.2708333333333333]
     5     1.000000e+00      1.110011e+00
 * step_type: reflection
 * centroid: [-0.4270833333333333,0.22916666666666666]
     6     1.000000e+00      9.265022e-01
 * step_type: contraction
 * centroid: [-0.34635416666666663,0.16145833333333331]
     7     1.000000e+00      6.155475e-01
 * step_type: reflection
 * centroid: [-0.16145833333333331,0.13541666666666666]
     8     1.000000e+00      5.490466e-01
 * step_type: shrink
 * centroid: [-0.08072916666666666,0.06770833333333333]
     9     1.000000e+00      3.271364e-01
 * step_type: contraction
 * centroid: [-0.03743489583333333,0.047526041666666664]
    10     1.000000e+00      1.262319e-01
 * step_type: reflection
 * centroid: [0.04915364583333333,0.007161458333333333]
    11     9.524766e-01      2.617085e-02
 * step_type: contraction
 * centroid: [0.058512369791666664,-0.004720052083333333]
    12     8.824456e-01      4.828370e-02
 * step_type: contraction
 * centroid: [0.03920491536458333,0.002400716145833333]
    13     7.195770e-01      9.756635e-02
 * step_type: expansion
 * centroid: [0.09801228841145833,0.006001790364583333]
    14     7.195770e-01      6.905725e-02
 * step_type: contraction
 * centroid: [0.11256663004557291,0.0027414957682291665]
    15     5.865921e-01      1.037273e-01
 * step_type: expansion
 * centroid: [0.16468683878580728,0.024614969889322914]
    16     5.865921e-01      5.768970e-02
 * step_type: contraction
 * centroid: [0.22560850779215494,0.03612963358561198]
    17     4.745263e-01      5.963375e-02
 * step_type: expansion
 * centroid: [0.29938809076944983,0.07411924997965494]
    18     3.474609e-01      9.768890e-02
 * step_type: expansion
 * centroid: [0.34913579622904456,0.11958901087443033]
    19     3.474609e-01      5.715279e-02
 * step_type: contraction
 * centroid: [0.37787463267644245,0.1360413630803426]
    20     3.474609e-01      4.679779e-02
 * step_type: contraction
 * centroid: [0.3729030738274256,0.13885868589083353]
    21     3.053345e-01      3.817404e-02
 * step_type: reflection
 * centroid: [0.42540918787320453,0.174580713113149]
    22     1.923525e-01      6.548807e-02
 * step_type: expansion
 * centroid: [0.4892536823948224,0.23661572237809497]
    23     1.923525e-01      4.842369e-02
 * step_type: contraction
 * centroid: [0.5077005854497353,0.250715813289086]
    24     1.923525e-01      4.037654e-02
 * step_type: reflection
 * centroid: [0.5374858689804871,0.29112888624270755]
    25     1.553300e-01      1.857645e-02
 * step_type: reflection
 * centroid: [0.6041649586210648,0.35974214101831115]
    26     1.553300e-01      1.577860e-02
 * step_type: contraction
 * centroid: [0.6133884101485212,0.3667921864738067]
    27     1.493614e-01      6.110140e-03
 * step_type: expansion
 * centroid: [0.6719015127358337,0.4379868640874823]
    28     1.293002e-01      1.113365e-02
 * step_type: contraction
 * centroid: [0.69114151414639,0.4593105562186489]
    29     7.416311e-02      3.179331e-02
 * step_type: expansion
 * centroid: [0.7215877129735114,0.5057432968557501]
    30     7.416311e-02      2.425272e-02
 * step_type: reflection
 * centroid: [0.6932564430947725,0.47857349280578393]
    31     2.775401e-02      3.802009e-02
 * step_type: expansion
 * centroid: [0.7541488407490153,0.5714389740799863]
    32     2.775401e-02      2.215376e-02
 * step_type: contraction
 * centroid: [0.7764547576322608,0.6014477954110286]
    33     2.775401e-02      1.904872e-02
 * step_type: contraction
 * centroid: [0.7876077160738835,0.6164522060765496]
    34     2.775401e-02      1.127978e-02
 * step_type: reflection
 * centroid: [0.8130327874047604,0.6652507944478808]
    35     8.996770e-03      1.211093e-02
 * step_type: reflection
 * centroid: [0.8607637756188826,0.7440582041502541]
    36     8.996770e-03      7.663226e-03
 * step_type: contraction
 * centroid: [0.8774932132813167,0.7665648201485358]
    37     8.996770e-03      4.082839e-03
 * step_type: contraction
 * centroid: [0.9091090950262999,0.8200437234257454]
    38     5.448726e-03      3.505622e-03
 * step_type: expansion
 * centroid: [0.9398034799813406,0.8777554623432782]
    39     2.127494e-03      2.804880e-03
 * step_type: reflection
 * centroid: [0.9494206104397259,0.8998145990760046]
    40     2.127494e-03      1.357369e-03
 * step_type: contraction
 * centroid: [0.9596520720914061,0.9190518453818488]
    41     2.127494e-03      8.304150e-04
 * step_type: contraction
 * centroid: [0.9543827584672423,0.9101386948356472]
    42     3.050810e-04      8.758497e-04
 * step_type: expansion
 * centroid: [0.9771731729860372,0.9544807079338776]
    43     3.050810e-04      7.824022e-04
 * step_type: reflection
 * centroid: [0.9894249602565044,0.9809964199397048]
    44     3.050810e-04      5.885590e-04
 * step_type: contraction
 * centroid: [0.9970217650961027,0.9957770909724483]
    45     2.664961e-04      2.556902e-04
 * step_type: contraction
 * centroid: [0.9935305282729511,0.9869758102426355]
    46     1.120482e-04      8.340302e-05
 * step_type: contraction
 * centroid: [0.9964561214869623,0.992165825576554]
    47     8.890268e-05      7.883122e-05
 * step_type: contraction
 * centroid: [0.9936800537725953,0.9868064339544796]
    48     8.885533e-05      1.092210e-05
 * step_type: reflection
 * centroid: [0.9961570704876739,0.9925045781528656]
    49     1.865391e-05      3.310443e-05
 * step_type: contraction
 * centroid: [1.0003211720592244,1.0005436655859772]
    50     9.538236e-06      3.543780e-05
 * step_type: contraction
 * centroid: [1.0005934177736981,1.0012982776828143]
    51     9.538236e-06      4.176875e-06
 * step_type: contraction
 * centroid: [1.0010832504164346,1.002072166515705]
    52     4.306094e-06      2.601626e-06
 * step_type: contraction
 * centroid: [0.999572758398567,0.9991989984964453]
    53     1.510696e-06      3.327177e-06
 * step_type: contraction
 * centroid: [0.9994400517154682,0.9988676509080756]
    54     9.180267e-07      1.477404e-06
 * step_type: contraction
 * centroid: [0.9992878330581476,0.9986373002628095]
    55     3.003690e-07      4.941490e-07
 * step_type: contraction
 * centroid: [0.9998293850617671,0.9996526105972127]
    56     1.041127e-07      3.468066e-07
 * step_type: contraction
 * centroid: [0.9998603650567924,0.999683176725312]
    57     9.410181e-08      9.496367e-08
 * step_type: contraction
 * centroid: [1.000061436069795,1.0001220581042898]
    58     2.688844e-08      3.428872e-08
 * step_type: contraction
 * centroid: [1.000029190154532,1.000070201591992]
    59     2.383682e-08      3.242790e-08
 * step_type: contraction
 * centroid: [1.0000868864264796,1.0001822408727117]
    60     1.351316e-08      5.723137e-09
 * step_type: contraction
 * centroid: [1.000005438687492,1.0000079372595394]
Iter     Function value   Gradient norm 
     0    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -2.0
 * x_upper: 1.0
     1    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -2.0
 * x_upper: -0.14589803375031563
     2    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -1.291796067500631
 * x_upper: -0.14589803375031563
     3    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -1.291796067500631
 * x_upper: -0.5835921350012621
     4    -1.033256e-01              NaN
 * x_minimum: -0.8541019662496847
 * x_lower: -1.0212862362522084
 * x_upper: -0.5835921350012621
     5    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.8541019662496847
 * x_upper: -0.5835921350012621
     6    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.8541019662496847
 * x_upper: -0.6869176962471611
     7    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7902432574930602
 * x_upper: -0.6869176962471611
     8    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7902432574930602
 * x_upper: -0.7263845487364357
     9    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7658514012257102
 * x_upper: -0.7263845487364357
    10    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7658514012257102
 * x_upper: -0.7414595449583602
    11    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7565345411802846
 * x_upper: -0.7414595449583602
    12    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.7565345411802846
 * x_upper: -0.7472176811348591
    13    -1.249988e-01              NaN
 * x_minimum: -0.7507764050037857
 * x_lower: -0.752975817311358
 * x_upper: -0.7472176811348591
    14    -1.249993e-01              NaN
 * x_minimum: -0.7494170934424312
 * x_lower: -0.7507764050037857
 * x_upper: -0.7472176811348591
    15    -1.249993e-01              NaN
 * x_minimum: -0.7494170934424312
 * x_lower: -0.7507764050037857
 * x_upper: -0.7485769926962135
    16    -1.250000e-01              NaN
 * x_minimum: -0.749936304257568
 * x_lower: -0.7507764050037857
 * x_upper: -0.7494170934424312
    17    -1.250000e-01              NaN
 * x_minimum: -0.749936304257568
 * x_lower: -0.750257194188649
 * x_upper: -0.7494170934424312
    18    -1.250000e-01              NaN
 * x_minimum: -0.749936304257568
 * x_lower: -0.750257194188649
 * x_upper: -0.7497379833735123
    19    -1.250000e-01              NaN
 * x_minimum: -0.7500588733045933
 * x_lower: -0.750257194188649
 * x_upper: -0.749936304257568
    20    -1.250000e-01              NaN
 * x_minimum: -0.7500588733045933
 * x_lower: -0.7501346251416237
 * x_upper: -0.749936304257568
    21    -1.250000e-01              NaN
 * x_minimum: -0.7500120560945983
 * x_lower: -0.7500588733045933
 * x_upper: -0.749936304257568
    22    -1.250000e-01              NaN
 * x_minimum: -0.7500120560945983
 * x_lower: -0.7500588733045933
 * x_upper: -0.749983121467563
    23    -1.250000e-01              NaN
 * x_minimum: -0.7500120560945983
 * x_lower: -0.750029938677558
 * x_upper: -0.749983121467563
    24    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500120560945983
 * x_upper: -0.749983121467563
    25    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500120560945983
 * x_upper: -0.7499941735116387
    26    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500052255557144
 * x_upper: -0.7499941735116387
    27    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500052255557144
 * x_upper: -0.7499983950168304
    28    -1.250000e-01              NaN
 * x_minimum: -0.7500010040505226
 * x_lower: -0.7500026165220222
 * x_upper: -0.7499983950168304
    29    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500010040505226
 * x_upper: -0.7499983950168304
    30    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500010040505226
 * x_upper: -0.7499993915790231
    31    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500003881412156
 * x_upper: -0.7499993915790231
    32    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500003881412156
 * x_upper: -0.7499997722319087
    33    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500001528847944
 * x_upper: -0.7499997722319087
    34    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500001528847944
 * x_upper: -0.7499999176283731
    35    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500000630248376
 * x_upper: -0.7499999176283731
    36    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500000630248376
 * x_upper: -0.7499999731648807
    37    -1.250000e-01              NaN
 * x_minimum: -0.75000000748833
 * x_lower: -0.7500000287013883
 * x_upper: -0.7499999731648807
    38    -1.250000e-01              NaN
 * x_minimum: -0.749999994377939
 * x_lower: -0.75000000748833
 * x_upper: -0.7499999731648807
 * golden_section.jl
 * brent.jl
 * type_stability.jl
 * array.jl
 * constrained.jl
WARNING: could not attach metadata for @simd loop.
 * callbacks.jl
 * precon.jl
Test a basic preconditioning example
N = 10
Optim.GradientDescent{T} WITHOUT preconditioning : g_calls = 890, f_calls = 890
Optim.GradientDescent{T} WITH preconditioning : g_calls = 23, f_calls = 23
Optim.ConjugateGradient{T} WITHOUT preconditioning : g_calls = 49, f_calls = 73
Optim.ConjugateGradient{T} WITH preconditioning : g_calls = 11, f_calls = 16
Optim.LBFGS{T} WITHOUT preconditioning : g_calls = 33, f_calls = 33
Optim.LBFGS{T} WITH preconditioning : g_calls = 25, f_calls = 25
N = 50
Optim.GradientDescent{T} WITHOUT preconditioning : g_calls = 3501, f_calls = 3501
    (gradient descent is not expected to converge)
Optim.GradientDescent{T} WITH preconditioning : g_calls = 12, f_calls = 12
Optim.ConjugateGradient{T} WITHOUT preconditioning : g_calls = 185, f_calls = 276
Optim.ConjugateGradient{T} WITH preconditioning : g_calls = 7, f_calls = 10
Optim.LBFGS{T} WITHOUT preconditioning : g_calls = 386, f_calls = 386
Optim.LBFGS{T} WITH preconditioning : g_calls = 15, f_calls = 15
N = 250
Optim.GradientDescent{T} WITHOUT preconditioning : g_calls = 3502, f_calls = 3502
    (gradient descent is not expected to converge)
Optim.GradientDescent{T} WITH preconditioning : g_calls = 9, f_calls = 9
Optim.ConjugateGradient{T} WITHOUT preconditioning : g_calls = 1371, f_calls = 1993
Optim.ConjugateGradient{T} WITH preconditioning : g_calls = 5, f_calls = 7
Optim.LBFGS{T} WITHOUT preconditioning : g_calls = 1283, f_calls = 1283
Optim.LBFGS{T} WITH preconditioning : g_calls = 12, f_calls = 12
INFO: Optim tests passed

>>> End of log
