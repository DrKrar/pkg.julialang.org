>>> 'Pkg.add("Blink")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing Blink v0.5.0
INFO: Installing Codecs v0.2.0
INFO: Installing Hiccup v0.1.1
INFO: Installing HttpCommon v0.2.6
INFO: Installing HttpParser v0.2.0
INFO: Installing HttpServer v0.1.7
INFO: Installing Lazy v0.11.4
INFO: Installing MacroTools v0.3.4
INFO: Installing MbedTLS v0.4.2
INFO: Installing Mustache v0.1.2
INFO: Installing Mux v0.2.2
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Installing WebSockets v0.2.1
INFO: Building HttpParser
INFO: Building MbedTLS
Using system libraries...
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Blink
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Blink")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1491.6171875 MB free)
Uptime: 8499.0 sec
Load Avg:  1.0029296875  0.99755859375  1.0419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz     466696 s       5995 s      52110 s     226230 s         17 s
#2  3504 MHz     196622 s        836 s      33213 s     594780 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - Blink                         0.5.0
 - JSON                          0.8.0
16 additional packages:
 - BinDeps                       0.4.5
 - Codecs                        0.2.0
 - Compat                        0.10.0
 - Hiccup                        0.1.1
 - HttpCommon                    0.2.6
 - HttpParser                    0.2.0
 - HttpServer                    0.1.7
 - Lazy                          0.11.4
 - MacroTools                    0.3.4
 - MbedTLS                       0.4.2
 - Mustache                      0.1.2
 - Mux                           0.2.2
 - Reexport                      0.0.3
 - SHA                           0.3.0
 - URIParser                     0.1.6
 - WebSockets                    0.2.1
INFO: Testing Blink
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100  386k  100  386k    0     0   825k      0 --:--:-- --:--:-- --:--:--  826k
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   159    0   159    0     0   1957      0 --:--:-- --:--:-- --:--:--  1962
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0   606    0     0   4401      0 --:--:-- --:--:-- --:--:-- 10821
 51 35.2M   51 18.1M    0     0  16.8M      0  0:00:02  0:00:01  0:00:01 16.8M100 35.2M  100 35.2M    0     0  24.8M      0  0:00:01  0:00:01 --:--:-- 50.6M
ERROR: LoadError: connect: connection refused (ECONNREFUSED)
 in yieldto(::Task, ::ANY) at ./event.jl:136
 in wait() at ./event.jl:169
 in wait(::Condition) at ./event.jl:27
 in stream_wait(::TCPSocket, ::Condition, ::Vararg{Condition,N}) at ./stream.jl:44
 in wait_connected(::TCPSocket) at ./stream.jl:265
 in connect at ./stream.jl:960 [inlined]
 in connect(::IPv4, ::Int64) at ./socket.jl:677
 in #try_connect#4(::Float64, ::Int64, ::Function, ::IPv4, ::Vararg{Any,N}) at /home/vagrant/.julia/v0.5/Blink/src/AtomShell/process.jl:62
 in #init#5(::Bool, ::Function) at /home/vagrant/.julia/v0.5/Blink/src/AtomShell/process.jl:76
 in (::Blink.AtomShell.#kw##init)(::Array{Any,1}, ::Blink.AtomShell.#init) at ./<missing>:0
 in #shell#8(::Bool, ::Function) at /home/vagrant/.julia/v0.5/Blink/src/AtomShell/process.jl:114
 in Blink.AtomShell.Window(::Dict{Any,Any}) at /home/vagrant/.julia/v0.5/Blink/src/AtomShell/window.jl:37
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Blink/test/runtests.jl, in expression starting on line 9
================================[ ERROR: Blink ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Blink/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Blink had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
