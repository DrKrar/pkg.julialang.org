>>> 'Pkg.add("ValueOrientedRiskManagementInsurance")' log
INFO: Cloning cache of ValueOrientedRiskManagementInsurance from https://github.com/mkriele/ValueOrientedRiskManagementInsurance.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing Distributions v0.11.0
INFO: Installing PDMats v0.5.0
INFO: Installing Rmath v0.1.4
INFO: Installing SHA v0.2.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Installing ValueOrientedRiskManagementInsurance v0.0.4
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("ValueOrientedRiskManagementInsurance")' log
Julia Version 0.6.0-dev.1138
Commit 72725a1 (2016-10-27 21:20 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (453.56640625 MB free)
Uptime: 28042.0 sec
Load Avg:  0.96875  0.974609375  1.001953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1564650 s        327 s     195134 s     710403 s        145 s
#2  3499 MHz     522562 s       5493 s     102096 s    2073632 s         12 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - ValueOrientedRiskManagementInsurance 0.0.4
21 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.9
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - DataStreamsIntegrationTests   0.0.1              e92cc45b (dirty)
 - Distributions                 0.11.0
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - NullableArrays                0.0.10
 - PDMats                        0.5.0
 - Reexport                      0.0.3
 - Rmath                         0.1.4
 - SHA                           0.2.1
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
 - WeakRefStrings                0.2.0
INFO: Testing ValueOrientedRiskManagementInsurance
Testing S2 Life
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::Function, ::Vararg{Function,N}) at ./deprecated.jl:30
 in #mapreduce#24(::Bool, ::Function, ::Function, ::Function, ::DataArrays.DataArray{Float64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/reduce.jl:99
 in (::Base.#kw##mapreduce)(::Array{Any,1}, ::Base.#mapreduce, ::Function, ::Function, ::DataArrays.DataArray{Float64,1}) at ./<missing>:0
 in sum(::DataArrays.DataArray{Float64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/reduce.jl:125
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ValueOrientedRiskManagementInsurance/test/Life_Input.jl, in expression starting on line 76
Start S2Life.jl
ERROR: LoadError: LoadError: LoadError: MethodError: no method matching broadcast_shape(::Array{Float64,1}, ::DataArrays.DataArray{Float64,1})
 in .*(::Array{Float64,1}, ::DataArrays.DataArray{Float64,1}) at /home/vagrant/.julia/v0.6/DataArrays/src/broadcast.jl:297
 in premium(::Int64, ::Array{Float64,1}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/ValueOrientedRiskManagementInsurance/src/Life/Life_Functions.jl:145
 in ValueOrientedRiskManagementInsurance.Product(::Array{Float64,1}, ::DataFrames.DataFrame, ::DataFrames.DataFrame, ::DataFrames.DataFrame) at /home/vagrant/.julia/v0.6/ValueOrientedRiskManagementInsurance/src/Life/Life_Constructors.jl:77
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/ValueOrientedRiskManagementInsurance/test/S2Life.jl, in expression starting on line 15
while loading /home/vagrant/.julia/v0.6/ValueOrientedRiskManagementInsurance/test/S2Life_Test.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/ValueOrientedRiskManagementInsurance/test/runtests.jl, in expression starting on line 7
================[ ERROR: ValueOrientedRiskManagementInsurance ]=================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ValueOrientedRiskManagementInsurance/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ValueOrientedRiskManagementInsurance had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
