>>> 'Pkg.add("Gadfly")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing Calculus v0.1.14
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.2.2
INFO: Installing Colors v0.6.4
INFO: Installing Compose v0.4.2
INFO: Installing Contour v0.1.0
INFO: Installing DataArrays v0.3.0
INFO: Installing DataFrames v0.7.3
INFO: Installing DataStructures v0.4.4
INFO: Installing Dates v0.4.4
INFO: Installing Distances v0.3.1
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.1.2
INFO: Installing GZip v0.2.18
INFO: Installing Gadfly v0.4.2
INFO: Installing Grid v0.4.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing Measures v0.0.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.4.5
INFO: Installing PDMats v0.4.1
INFO: Installing PositiveFactorizations v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.1
INFO: Installing StatsFuns v0.2.2
INFO: Installing WoodburyMatrices v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Gadfly
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Gadfly")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for Gadfly...
INFO: Installing Cairo v0.2.31
INFO: Installing Graphics v0.1.3
INFO: Installing RDatasets v0.1.3
INFO: Building Cairo
INFO: Testing Gadfly
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Cairo.ji for module Cairo.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Compose.ji for module Compose.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/KernelDensity.ji for module KernelDensity.
Rendering points on pgf backend.
 16.565505 seconds (8.67 M allocations: 374.149 MB, 0.75% gc time)
Rendering points on svgjs backend.
  1.893775 seconds (859.38 k allocations: 35.684 MB, 0.40% gc time)
Rendering points on svg backend.
  0.040751 seconds (49.51 k allocations: 1.670 MB, 17.87% gc time)
Rendering points on png backend.
  3.531401 seconds (2.27 M allocations: 100.854 MB, 0.88% gc time)
Rendering noticks on pgf backend.
  0.223140 seconds (68.41 k allocations: 2.975 MB)
Rendering noticks on svgjs backend.
  0.005983 seconds (6.82 k allocations: 318.251 KB)
Rendering noticks on svg backend.
  0.017592 seconds (6.91 k allocations: 319.241 KB, 76.54% gc time)
Rendering noticks on png backend.
  0.020218 seconds (5.01 k allocations: 237.892 KB)
Rendering point_shape on pgf backend.
  7.014910 seconds (4.03 M allocations: 173.501 MB, 0.94% gc time)
Rendering point_shape on svgjs backend.
  0.107593 seconds (221.99 k allocations: 8.092 MB)
Rendering point_shape on svg backend.
  0.023488 seconds (122.78 k allocations: 4.610 MB)
Rendering point_shape on png backend.
  0.177019 seconds (194.90 k allocations: 7.840 MB, 3.76% gc time)
Rendering colored_points on pgf backend.
  4.750718 seconds (2.98 M allocations: 132.446 MB, 1.16% gc time)
Rendering colored_points on svgjs backend.
  0.150684 seconds (181.36 k allocations: 6.723 MB)
Rendering colored_points on svg backend.
  0.017357 seconds (67.78 k allocations: 2.644 MB)
Rendering colored_points on png backend.
  0.224880 seconds (135.41 k allocations: 5.759 MB)
Rendering function_plots on pgf backend.
  2.076118 seconds (967.08 k allocations: 40.456 MB, 0.86% gc time)
Rendering function_plots on svgjs backend.
  0.043943 seconds (155.40 k allocations: 5.564 MB)
Rendering function_plots on svg backend.
  0.033290 seconds (118.29 k allocations: 4.308 MB)
Rendering function_plots on png backend.
  0.092664 seconds (124.74 k allocations: 4.572 MB, 10.36% gc time)
Rendering function_explicit_colors on pgf backend.
  0.495818 seconds (328.13 k allocations: 13.473 MB)
Rendering function_explicit_colors on svgjs backend.
  0.039447 seconds (152.78 k allocations: 5.485 MB)
Rendering function_explicit_colors on svg backend.
  0.039015 seconds (115.68 k allocations: 4.228 MB, 24.79% gc time)
Rendering function_explicit_colors on png backend.
  0.055450 seconds (115.05 k allocations: 4.189 MB)
Rendering function_layers on pgf backend.
  0.309814 seconds (235.57 k allocations: 9.242 MB)
Rendering function_layers on svgjs backend.
  0.072767 seconds (176.84 k allocations: 6.298 MB, 11.62% gc time)
Rendering function_layers on svg backend.
  0.059126 seconds (133.31 k allocations: 4.823 MB)
Rendering function_layers on png backend.
  0.057280 seconds (130.32 k allocations: 4.671 MB)
Rendering multicolumn_colorkey on pgf backend.
  0.867526 seconds (545.46 k allocations: 21.534 MB, 0.95% gc time)
Rendering multicolumn_colorkey on svgjs backend.
  0.043134 seconds (143.78 k allocations: 5.166 MB)
Rendering multicolumn_colorkey on svg backend.
  0.041302 seconds (99.12 k allocations: 3.650 MB, 24.09% gc time)
Rendering multicolumn_colorkey on png backend.
  0.053262 seconds (85.46 k allocations: 3.017 MB)
Rendering vstack on pgf backend.
  0.014201 seconds (45.17 k allocations: 1.996 MB)
Rendering vstack on svgjs backend.
  0.040378 seconds (123.13 k allocations: 4.173 MB, 24.15% gc time)
Rendering vstack on svg backend.
  0.008000 seconds (25.52 k allocations: 1.046 MB)
Rendering vstack on png backend.
  0.044065 seconds (25.27 k allocations: 1.002 MB)
Rendering hstack on pgf backend.
  0.009876 seconds (45.04 k allocations: 1.998 MB)
Rendering hstack on svgjs backend.
  0.030396 seconds (123.16 k allocations: 4.182 MB)
Rendering hstack on svg backend.
  0.006646 seconds (25.54 k allocations: 1.055 MB)
Rendering hstack on png backend.
  0.037545 seconds (25.30 k allocations: 1.011 MB, 22.93% gc time)
Rendering colorful_hist on pgf backend.
  1.444328 seconds (3.03 M allocations: 89.448 MB, 1.95% gc time)
Rendering colorful_hist on svgjs backend.
  0.375529 seconds (2.55 M allocations: 68.788 MB, 4.54% gc time)
Rendering colorful_hist on svg backend.
  0.268837 seconds (2.51 M allocations: 67.570 MB, 5.03% gc time)
Rendering colorful_hist on png backend.
  0.355604 seconds (2.50 M allocations: 67.023 MB, 21.10% gc time)
Rendering discrete_histogram on pgf backend.
  0.876443 seconds (398.45 k allocations: 16.684 MB, 0.82% gc time)
Rendering discrete_histogram on svgjs backend.
  0.048869 seconds (66.55 k allocations: 2.235 MB)
Rendering discrete_histogram on svg backend.
  0.044770 seconds (44.02 k allocations: 1.508 MB)
Rendering discrete_histogram on png backend.
  0.038027 seconds (37.48 k allocations: 1.224 MB)
Rendering discrete_bar on pgf backend.
  0.809288 seconds (684.79 k allocations: 26.303 MB, 2.69% gc time)
Rendering discrete_bar on svgjs backend.
  0.052133 seconds (262.32 k allocations: 7.039 MB)
Rendering discrete_bar on svg backend.
  0.046268 seconds (238.82 k allocations: 6.279 MB)
Rendering discrete_bar on png backend.
  0.095742 seconds (233.03 k allocations: 6.164 MB, 12.49% gc time)
Rendering discrete_bar_horizontal on pgf backend.
  0.261946 seconds (426.65 k allocations: 14.923 MB)
Rendering discrete_bar_horizontal on svgjs backend.
  0.054621 seconds (262.25 k allocations: 6.999 MB)
Rendering discrete_bar_horizontal on svg backend.
  0.043822 seconds (238.63 k allocations: 6.230 MB)
Rendering discrete_bar_horizontal on png backend.
  0.080539 seconds (232.95 k allocations: 6.124 MB, 7.75% gc time)
Rendering stacked_discrete_histogram on pgf backend.
  0.259579 seconds (517.36 k allocations: 16.151 MB)
Rendering stacked_discrete_histogram on svgjs backend.
  0.087440 seconds (448.14 k allocations: 12.758 MB)
Rendering stacked_discrete_histogram on svg backend.
  0.090449 seconds (411.52 k allocations: 11.518 MB, 8.54% gc time)
Rendering stacked_discrete_histogram on png backend.
  0.097741 seconds (403.21 k allocations: 11.176 MB)
Rendering stacked_discrete_histogram_horizontal on pgf backend.
  0.182383 seconds (496.94 k allocations: 15.129 MB)
Rendering stacked_discrete_histogram_horizontal on svgjs backend.
  0.283783 seconds (639.41 k allocations: 19.747 MB, 3.39% gc time)
Rendering stacked_discrete_histogram_horizontal on svg backend.
  0.082317 seconds (411.55 k allocations: 11.526 MB, 8.28% gc time)
Rendering stacked_discrete_histogram_horizontal on png backend.
  0.087745 seconds (403.23 k allocations: 11.183 MB)
Rendering stacked_continuous_histogram on pgf backend.
  0.080616 seconds (442.01 k allocations: 13.017 MB)
Rendering stacked_continuous_histogram on svgjs backend.
  0.096343 seconds (448.14 k allocations: 12.758 MB, 7.10% gc time)
Rendering stacked_continuous_histogram on svg backend.
  0.078544 seconds (411.52 k allocations: 11.518 MB)
Rendering stacked_continuous_histogram on png backend.
  0.094864 seconds (403.21 k allocations: 11.176 MB)
Rendering dodged_discrete_histogram on pgf backend.
  0.204466 seconds (538.35 k allocations: 16.521 MB, 3.17% gc time)
Rendering dodged_discrete_histogram on svgjs backend.
  0.063212 seconds (467.52 k allocations: 13.255 MB, 16.62% gc time)
Rendering dodged_discrete_histogram on svg backend.
  0.052916 seconds (424.25 k allocations: 11.789 MB)
Rendering dodged_discrete_histogram on png backend.
  0.068706 seconds (415.97 k allocations: 11.449 MB, 8.86% gc time)
Rendering dodged_discrete_histogram_horizontal on pgf backend.
  0.190816 seconds (502.94 k allocations: 15.102 MB, 3.60% gc time)
Rendering dodged_discrete_histogram_horizontal on svgjs backend.
  0.053919 seconds (467.15 k allocations: 13.245 MB)
Rendering dodged_discrete_histogram_horizontal on svg backend.
  0.059524 seconds (424.30 k allocations: 11.797 MB, 10.29% gc time)
Rendering dodged_discrete_histogram_horizontal on png backend.
  0.061745 seconds (416.00 k allocations: 11.456 MB, 9.03% gc time)
Rendering array_aesthetics on pgf backend.
  0.337094 seconds (126.94 k allocations: 5.069 MB)
Rendering array_aesthetics on svgjs backend.
  0.043526 seconds (69.20 k allocations: 2.318 MB, 25.30% gc time)
Rendering array_aesthetics on svg backend.
  0.028694 seconds (41.95 k allocations: 1.441 MB)
Rendering array_aesthetics on png backend.
  0.052038 seconds (41.88 k allocations: 1.425 MB)
Rendering subplot_grid on pgf backend.
FAILED!
ERROR: LoadError: LoadError: MethodError: `setlevels!` has no method matching setlevels!(::DataArrays.PooledDataArray{ByteString,UInt8,1}, ::Array{ASCIIString,1})
Closest candidates are:
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::AbstractArray{T,1})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,T})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,Any})
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in evalfile at loading.jl:336 (repeats 2 times)
 in run_tests at /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl:138
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Gadfly/test/subplot_grid.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl, in expression starting on line 183
===============================[ ERROR: Gadfly ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cairo v0.2.31
INFO: Removing Graphics v0.1.3
INFO: Removing RDatasets v0.1.3
ERROR: Gadfly had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
