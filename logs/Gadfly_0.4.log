>>> 'Pkg.add("Gadfly")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing Calculus v0.1.15
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.2.3
INFO: Installing Colors v0.6.4
INFO: Installing Compose v0.4.2
INFO: Installing Contour v0.1.0
INFO: Installing DataArrays v0.3.3
INFO: Installing DataFrames v0.7.3
INFO: Installing DataStructures v0.4.4
INFO: Installing Dates v0.4.4
INFO: Installing Distances v0.3.1
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.2.1
INFO: Installing GZip v0.2.19
INFO: Installing Gadfly v0.4.2
INFO: Installing Grid v0.4.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing Measures v0.0.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.5.0
INFO: Installing PDMats v0.4.2
INFO: Installing PositiveFactorizations v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Installing WoodburyMatrices v0.1.5
INFO: Package database updated

>>> 'Pkg.test("Gadfly")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for Gadfly...
INFO: Installing Cairo v0.2.32
INFO: Installing Graphics v0.1.3
INFO: Installing RDatasets v0.1.3
INFO: Building Cairo
INFO: Testing Gadfly
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Compose.ji for module Compose.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Cairo.ji for module Cairo.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Optim.ji for module Optim.
Rendering points on pgf backend.
 13.932971 seconds (8.86 M allocations: 380.031 MB, 0.83% gc time)
Rendering points on svgjs backend.
  1.556871 seconds (919.57 k allocations: 37.783 MB, 0.53% gc time)
Rendering points on svg backend.
  0.022177 seconds (49.50 k allocations: 1.671 MB)
Rendering points on png backend.
  2.351287 seconds (2.42 M allocations: 106.267 MB, 1.34% gc time)
Rendering noticks on pgf backend.
  0.139254 seconds (76.77 k allocations: 3.237 MB, 7.69% gc time)
Rendering noticks on svgjs backend.
  0.004990 seconds (6.83 k allocations: 319.298 KB)
Rendering noticks on svg backend.
  0.002596 seconds (5.10 k allocations: 243.219 KB)
Rendering noticks on png backend.
  0.016555 seconds (5.01 k allocations: 238.751 KB)
Rendering point_shape on pgf backend.
  5.893599 seconds (4.16 M allocations: 178.780 MB, 1.10% gc time)
Rendering point_shape on svgjs backend.
  0.083023 seconds (224.25 k allocations: 8.160 MB)
Rendering point_shape on svg backend.
  0.022254 seconds (120.54 k allocations: 4.546 MB)
Rendering point_shape on png backend.
  0.190678 seconds (194.62 k allocations: 7.846 MB, 4.67% gc time)
Rendering colored_points on pgf backend.
  4.032732 seconds (3.05 M allocations: 134.970 MB, 1.16% gc time)
Rendering colored_points on svgjs backend.
  0.185072 seconds (181.57 k allocations: 6.722 MB)
Rendering colored_points on svg backend.
  0.011489 seconds (67.77 k allocations: 2.645 MB)
Rendering colored_points on png backend.
  0.194073 seconds (134.53 k allocations: 5.734 MB, 3.36% gc time)
Rendering function_plots on pgf backend.
  1.705416 seconds (1.01 M allocations: 42.407 MB, 0.47% gc time)
Rendering function_plots on svgjs backend.
  0.041443 seconds (155.41 k allocations: 5.566 MB, 19.83% gc time)
Rendering function_plots on svg backend.
  0.023663 seconds (118.30 k allocations: 4.309 MB)
Rendering function_plots on png backend.
  0.062900 seconds (124.64 k allocations: 4.565 MB)
Rendering function_explicit_colors on pgf backend.
  0.343155 seconds (342.76 k allocations: 13.987 MB, 2.42% gc time)
Rendering function_explicit_colors on svgjs backend.
  0.019484 seconds (152.79 k allocations: 5.486 MB)
Rendering function_explicit_colors on svg backend.
  0.013353 seconds (115.69 k allocations: 4.230 MB)
Rendering function_explicit_colors on png backend.
  0.028345 seconds (115.06 k allocations: 4.190 MB)
Rendering function_layers on pgf backend.
  0.115680 seconds (235.16 k allocations: 9.211 MB)
Rendering function_layers on svgjs backend.
  0.022590 seconds (176.85 k allocations: 6.300 MB)
Rendering function_layers on svg backend.
  0.022607 seconds (133.32 k allocations: 4.825 MB, 29.74% gc time)
Rendering function_layers on png backend.
  0.036228 seconds (130.34 k allocations: 4.673 MB)
Rendering multicolumn_colorkey on pgf backend.
  0.664622 seconds (540.85 k allocations: 21.380 MB, 1.20% gc time)
Rendering multicolumn_colorkey on svgjs backend.
  0.051235 seconds (143.76 k allocations: 5.167 MB)
Rendering multicolumn_colorkey on svg backend.
  0.037643 seconds (99.09 k allocations: 3.651 MB)
Rendering multicolumn_colorkey on png backend.
  0.047951 seconds (85.44 k allocations: 3.017 MB)
Rendering vstack on pgf backend.
  0.010768 seconds (45.18 k allocations: 1.998 MB)
Rendering vstack on svgjs backend.
  0.028266 seconds (123.14 k allocations: 4.175 MB)
Rendering vstack on svg backend.
  0.007347 seconds (25.53 k allocations: 1.048 MB)
Rendering vstack on png backend.
  0.045782 seconds (25.29 k allocations: 1.003 MB)
Rendering hstack on pgf backend.
  0.012233 seconds (45.05 k allocations: 1.999 MB)
Rendering hstack on svgjs backend.
  0.041100 seconds (123.17 k allocations: 4.184 MB, 20.61% gc time)
Rendering hstack on svg backend.
  0.008048 seconds (25.55 k allocations: 1.057 MB)
Rendering hstack on png backend.
  0.031661 seconds (25.31 k allocations: 1.012 MB)
Rendering colorful_hist on pgf backend.
  1.473761 seconds (2.99 M allocations: 88.631 MB, 1.66% gc time)
Rendering colorful_hist on svgjs backend.
  0.498383 seconds (2.49 M allocations: 67.014 MB, 3.78% gc time)
Rendering colorful_hist on svg backend.
  0.461409 seconds (2.45 M allocations: 65.796 MB, 3.50% gc time)
Rendering colorful_hist on png backend.
  0.588649 seconds (2.44 M allocations: 65.250 MB, 17.30% gc time)
Rendering discrete_histogram on pgf backend.
  0.576554 seconds (398.96 k allocations: 16.644 MB)
Rendering discrete_histogram on svgjs backend.
  0.046483 seconds (54.09 k allocations: 1.846 MB)
Rendering discrete_histogram on svg backend.
  0.009821 seconds (43.29 k allocations: 1.426 MB)
Rendering discrete_histogram on png backend.
  0.073153 seconds (44.58 k allocations: 1.510 MB, 14.54% gc time)
Rendering discrete_bar on pgf backend.
  0.760762 seconds (689.68 k allocations: 26.490 MB, 1.32% gc time)
Rendering discrete_bar on svgjs backend.
  0.052532 seconds (262.32 k allocations: 7.040 MB)
Rendering discrete_bar on svg backend.
  0.046671 seconds (238.82 k allocations: 6.280 MB)
Rendering discrete_bar on png backend.
  0.067172 seconds (233.04 k allocations: 6.165 MB, 9.78% gc time)
Rendering discrete_bar_horizontal on pgf backend.
  0.135559 seconds (426.72 k allocations: 14.940 MB)
Rendering discrete_bar_horizontal on svgjs backend.
  0.035627 seconds (262.25 k allocations: 7.000 MB, 16.47% gc time)
Rendering discrete_bar_horizontal on svg backend.
  0.024998 seconds (238.64 k allocations: 6.231 MB)
Rendering discrete_bar_horizontal on png backend.
  0.068356 seconds (232.97 k allocations: 6.125 MB)
Rendering stacked_discrete_histogram on pgf backend.
  0.177863 seconds (529.00 k allocations: 18.323 MB)
Rendering stacked_discrete_histogram on svgjs backend.
  0.051553 seconds (447.58 k allocations: 12.743 MB)
Rendering stacked_discrete_histogram on svg backend.
  0.051430 seconds (410.96 k allocations: 11.502 MB, 11.98% gc time)
Rendering stacked_discrete_histogram on png backend.
  0.054385 seconds (402.66 k allocations: 11.160 MB)
Rendering stacked_discrete_histogram_horizontal on pgf backend.
  0.100655 seconds (496.40 k allocations: 15.112 MB, 5.29% gc time)
Rendering stacked_discrete_histogram_horizontal on svgjs backend.
  0.054907 seconds (447.89 k allocations: 12.762 MB, 10.78% gc time)
Rendering stacked_discrete_histogram_horizontal on svg backend.
  0.044248 seconds (410.99 k allocations: 11.510 MB)
Rendering stacked_discrete_histogram_horizontal on png backend.
  0.053770 seconds (402.68 k allocations: 11.167 MB)
Rendering stacked_continuous_histogram on pgf backend.
  0.051270 seconds (441.46 k allocations: 13.001 MB, 11.05% gc time)
Rendering stacked_continuous_histogram on svgjs backend.
  0.053249 seconds (447.58 k allocations: 12.743 MB)
Rendering stacked_continuous_histogram on svg backend.
  0.080973 seconds (410.96 k allocations: 11.502 MB)
Rendering stacked_continuous_histogram on png backend.
  0.098730 seconds (402.66 k allocations: 11.160 MB, 5.77% gc time)
Rendering dodged_discrete_histogram on pgf backend.
  0.202715 seconds (537.33 k allocations: 16.488 MB, 3.30% gc time)
Rendering dodged_discrete_histogram on svgjs backend.
  0.065462 seconds (466.96 k allocations: 13.240 MB)
Rendering dodged_discrete_histogram on svg backend.
  0.092018 seconds (423.69 k allocations: 11.773 MB, 6.83% gc time)
Rendering dodged_discrete_histogram on png backend.
  0.099654 seconds (415.41 k allocations: 11.433 MB)
Rendering dodged_discrete_histogram_horizontal on pgf backend.
  0.133315 seconds (501.78 k allocations: 15.064 MB)
Rendering dodged_discrete_histogram_horizontal on svgjs backend.
  0.100315 seconds (466.60 k allocations: 13.230 MB, 6.11% gc time)
Rendering dodged_discrete_histogram_horizontal on svg backend.
  0.094380 seconds (423.74 k allocations: 11.782 MB, 9.29% gc time)
Rendering dodged_discrete_histogram_horizontal on png backend.
  0.101990 seconds (415.44 k allocations: 11.440 MB)
Rendering array_aesthetics on pgf backend.
  0.299646 seconds (126.34 k allocations: 5.049 MB)
Rendering array_aesthetics on svgjs backend.
  0.020720 seconds (69.21 k allocations: 2.319 MB)
Rendering array_aesthetics on svg backend.
  0.013909 seconds (41.96 k allocations: 1.442 MB)
Rendering array_aesthetics on png backend.
  0.031765 seconds (41.89 k allocations: 1.426 MB)
Rendering subplot_grid on pgf backend.
FAILED!
ERROR: LoadError: LoadError: MethodError: `setlevels!` has no method matching setlevels!(::DataArrays.PooledDataArray{ByteString,UInt8,1}, ::Array{ASCIIString,1})
Closest candidates are:
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::AbstractArray{T,1})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,T})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,Any})
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in evalfile at loading.jl:336 (repeats 2 times)
 in run_tests at /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl:138
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Gadfly/test/subplot_grid.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl, in expression starting on line 183
===============================[ ERROR: Gadfly ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cairo v0.2.32
INFO: Removing Graphics v0.1.3
INFO: Removing RDatasets v0.1.3
ERROR: Gadfly had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
