>>> 'Pkg.add("Gadfly")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing Calculus v0.1.14
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.2.2
INFO: Installing Colors v0.6.4
INFO: Installing Compose v0.4.2
INFO: Installing Contour v0.1.0
INFO: Installing DataArrays v0.3.3
INFO: Installing DataFrames v0.7.3
INFO: Installing DataStructures v0.4.4
INFO: Installing Dates v0.4.4
INFO: Installing Distances v0.3.1
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.2.0
INFO: Installing GZip v0.2.18
INFO: Installing Gadfly v0.4.2
INFO: Installing Grid v0.4.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing Measures v0.0.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.5.0
INFO: Installing PDMats v0.4.1
INFO: Installing PositiveFactorizations v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Installing WoodburyMatrices v0.1.5
INFO: Package database updated

>>> 'Pkg.test("Gadfly")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for Gadfly...
INFO: Installing Cairo v0.2.31
INFO: Installing Graphics v0.1.3
INFO: Installing RDatasets v0.1.3
INFO: Building Cairo
INFO: Testing Gadfly
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Cairo.ji for module Cairo.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Compose.ji for module Compose.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Optim.ji for module Optim.
Rendering points on pgf backend.
 14.915151 seconds (8.65 M allocations: 373.765 MB, 0.73% gc time)
Rendering points on svgjs backend.
  1.720153 seconds (860.13 k allocations: 35.813 MB, 0.44% gc time)
Rendering points on svg backend.
  0.028894 seconds (49.49 k allocations: 1.670 MB, 26.07% gc time)
Rendering points on png backend.
  3.126252 seconds (2.25 M allocations: 100.319 MB, 0.93% gc time)
Rendering noticks on pgf backend.
  0.183517 seconds (68.31 k allocations: 2.853 MB)
Rendering noticks on svgjs backend.
  0.011946 seconds (6.82 k allocations: 318.251 KB)
Rendering noticks on svg backend.
  0.002764 seconds (5.10 k allocations: 242.391 KB)
Rendering noticks on png backend.
  0.041558 seconds (5.01 k allocations: 237.892 KB)
Rendering point_shape on pgf backend.
  7.548873 seconds (4.15 M allocations: 182.388 MB, 1.09% gc time)
Rendering point_shape on svgjs backend.
  0.137123 seconds (224.46 k allocations: 8.159 MB)
Rendering point_shape on svg backend.
  0.072244 seconds (120.81 k allocations: 4.556 MB, 28.12% gc time)
Rendering point_shape on png backend.
  0.210861 seconds (193.99 k allocations: 7.814 MB)
Rendering colored_points on pgf backend.
  4.527665 seconds (2.84 M allocations: 123.054 MB, 1.15% gc time)
Rendering colored_points on svgjs backend.
  0.285744 seconds (181.77 k allocations: 6.748 MB)
Rendering colored_points on svg backend.
  0.020399 seconds (67.77 k allocations: 2.643 MB)
Rendering colored_points on png backend.
  0.190373 seconds (134.41 k allocations: 5.729 MB)
Rendering function_plots on pgf backend.
  1.986171 seconds (1.01 M allocations: 43.060 MB, 0.79% gc time)
Rendering function_plots on svgjs backend.
  0.035320 seconds (155.40 k allocations: 5.564 MB)
Rendering function_plots on svg backend.
  0.024768 seconds (118.29 k allocations: 4.308 MB)
Rendering function_plots on png backend.
  0.072456 seconds (124.74 k allocations: 4.572 MB, 12.40% gc time)
Rendering function_explicit_colors on pgf backend.
  0.370538 seconds (328.16 k allocations: 13.474 MB)
Rendering function_explicit_colors on svgjs backend.
  0.085529 seconds (152.78 k allocations: 5.485 MB, 10.46% gc time)
Rendering function_explicit_colors on svg backend.
  0.062124 seconds (115.68 k allocations: 4.228 MB)
Rendering function_explicit_colors on png backend.
  0.067025 seconds (115.05 k allocations: 4.189 MB)
Rendering function_layers on pgf backend.
  0.198299 seconds (235.56 k allocations: 9.232 MB, 4.11% gc time)
Rendering function_layers on svgjs backend.
  0.053557 seconds (176.84 k allocations: 6.298 MB)
Rendering function_layers on svg backend.
  0.067284 seconds (133.31 k allocations: 4.823 MB)
Rendering function_layers on png backend.
  0.075255 seconds (130.32 k allocations: 4.671 MB)
Rendering multicolumn_colorkey on pgf backend.
  0.744429 seconds (540.97 k allocations: 21.388 MB, 1.01% gc time)
Rendering multicolumn_colorkey on svgjs backend.
  0.084058 seconds (143.85 k allocations: 5.169 MB)
Rendering multicolumn_colorkey on svg backend.
  0.083447 seconds (99.19 k allocations: 3.652 MB, 31.28% gc time)
Rendering multicolumn_colorkey on png backend.
  0.080549 seconds (85.53 k allocations: 3.019 MB)
Rendering vstack on pgf backend.
  0.013357 seconds (45.19 k allocations: 1.997 MB)
Rendering vstack on svgjs backend.
  0.045872 seconds (123.13 k allocations: 4.173 MB)
Rendering vstack on svg backend.
  0.006416 seconds (25.52 k allocations: 1.046 MB)
Rendering vstack on png backend.
  0.045020 seconds (25.27 k allocations: 1.002 MB)
Rendering hstack on pgf backend.
  0.006019 seconds (45.06 k allocations: 1.998 MB)
Rendering hstack on svgjs backend.
  0.025383 seconds (123.16 k allocations: 4.182 MB)
Rendering hstack on svg backend.
  0.006286 seconds (25.54 k allocations: 1.055 MB)
Rendering hstack on png backend.
  0.028663 seconds (25.30 k allocations: 1.011 MB)
Rendering colorful_hist on pgf backend.
  1.881941 seconds (2.97 M allocations: 87.661 MB, 1.52% gc time)
Rendering colorful_hist on svgjs backend.
  0.553508 seconds (2.49 M allocations: 67.012 MB, 3.46% gc time)
Rendering colorful_hist on svg backend.
  0.509237 seconds (2.45 M allocations: 65.794 MB, 5.80% gc time)
Rendering colorful_hist on png backend.
  0.432194 seconds (2.44 M allocations: 65.248 MB, 3.64% gc time)
Rendering discrete_histogram on pgf backend.
  0.560339 seconds (396.79 k allocations: 16.613 MB, 1.17% gc time)
Rendering discrete_histogram on svgjs backend.
  0.041990 seconds (65.70 k allocations: 2.210 MB)
Rendering discrete_histogram on svg backend.
  0.028935 seconds (38.55 k allocations: 1.332 MB)
Rendering discrete_histogram on png backend.
  0.049241 seconds (37.88 k allocations: 1.292 MB)
Rendering discrete_bar on pgf backend.
  0.656074 seconds (684.85 k allocations: 26.290 MB, 1.54% gc time)
Rendering discrete_bar on svgjs backend.
  0.059392 seconds (262.32 k allocations: 7.039 MB, 15.09% gc time)
Rendering discrete_bar on svg backend.
  0.043048 seconds (238.82 k allocations: 6.279 MB)
Rendering discrete_bar on png backend.
  0.067125 seconds (233.03 k allocations: 6.164 MB)
Rendering discrete_bar_horizontal on pgf backend.
  0.213462 seconds (426.45 k allocations: 14.915 MB)
Rendering discrete_bar_horizontal on svgjs backend.
  0.051401 seconds (262.25 k allocations: 6.999 MB, 13.01% gc time)
Rendering discrete_bar_horizontal on svg backend.
  0.038391 seconds (238.63 k allocations: 6.230 MB)
Rendering discrete_bar_horizontal on png backend.
  0.079691 seconds (232.95 k allocations: 6.124 MB)
Rendering stacked_discrete_histogram on pgf backend.
  0.252566 seconds (516.82 k allocations: 16.134 MB, 2.76% gc time)
Rendering stacked_discrete_histogram on svgjs backend.
  0.089415 seconds (447.58 k allocations: 12.741 MB, 8.47% gc time)
Rendering stacked_discrete_histogram on svg backend.
  0.255401 seconds (598.32 k allocations: 18.348 MB, 2.73% gc time)
Rendering stacked_discrete_histogram on png backend.
  0.112549 seconds (486.07 k allocations: 13.181 MB, 7.02% gc time)
Rendering stacked_discrete_histogram_horizontal on pgf backend.
  0.176902 seconds (496.18 k allocations: 15.104 MB)
Rendering stacked_discrete_histogram_horizontal on svgjs backend.
  0.108650 seconds (447.88 k allocations: 12.761 MB, 6.68% gc time)
Rendering stacked_discrete_histogram_horizontal on svg backend.
  0.096276 seconds (410.99 k allocations: 11.508 MB, 8.10% gc time)
Rendering stacked_discrete_histogram_horizontal on png backend.
  0.101569 seconds (402.67 k allocations: 11.166 MB)
Rendering stacked_continuous_histogram on pgf backend.
  0.081291 seconds (441.46 k allocations: 13.000 MB, 7.95% gc time)
Rendering stacked_continuous_histogram on svgjs backend.
  0.095559 seconds (447.58 k allocations: 12.741 MB, 6.22% gc time)
Rendering stacked_continuous_histogram on svg backend.
  0.090321 seconds (494.44 k allocations: 13.526 MB)
Rendering stacked_continuous_histogram on png backend.
  0.095405 seconds (402.65 k allocations: 11.159 MB, 5.83% gc time)
Rendering dodged_discrete_histogram on pgf backend.
  0.258163 seconds (537.64 k allocations: 16.499 MB, 3.17% gc time)
Rendering dodged_discrete_histogram on svgjs backend.
  0.104111 seconds (466.95 k allocations: 13.238 MB, 7.52% gc time)
Rendering dodged_discrete_histogram on svg backend.
  0.111590 seconds (423.69 k allocations: 11.772 MB)
Rendering dodged_discrete_histogram on png backend.
  0.115872 seconds (415.40 k allocations: 11.432 MB, 5.63% gc time)
Rendering dodged_discrete_histogram_horizontal on pgf backend.
  0.258821 seconds (586.09 k allocations: 17.124 MB, 2.61% gc time)
Rendering dodged_discrete_histogram_horizontal on svgjs backend.
  0.110785 seconds (466.59 k allocations: 13.228 MB)
Rendering dodged_discrete_histogram_horizontal on svg backend.
  0.096269 seconds (423.74 k allocations: 11.780 MB, 7.35% gc time)
Rendering dodged_discrete_histogram_horizontal on png backend.
  0.107617 seconds (415.43 k allocations: 11.439 MB, 7.45% gc time)
Rendering array_aesthetics on pgf backend.
  0.319535 seconds (126.80 k allocations: 5.071 MB)
Rendering array_aesthetics on svgjs backend.
  0.031835 seconds (69.20 k allocations: 2.318 MB, 25.42% gc time)
Rendering array_aesthetics on svg backend.
  0.008595 seconds (41.95 k allocations: 1.441 MB)
Rendering array_aesthetics on png backend.
  0.019480 seconds (41.88 k allocations: 1.425 MB)
Rendering subplot_grid on pgf backend.
FAILED!
ERROR: LoadError: LoadError: MethodError: `setlevels!` has no method matching setlevels!(::DataArrays.PooledDataArray{ByteString,UInt8,1}, ::Array{ASCIIString,1})
Closest candidates are:
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::AbstractArray{T,1})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,T})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,Any})
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in evalfile at loading.jl:336 (repeats 2 times)
 in run_tests at /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl:138
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Gadfly/test/subplot_grid.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl, in expression starting on line 183
===============================[ ERROR: Gadfly ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cairo v0.2.31
INFO: Removing Graphics v0.1.3
INFO: Removing RDatasets v0.1.3
ERROR: Gadfly had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
