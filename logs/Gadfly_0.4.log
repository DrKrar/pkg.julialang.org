>>> 'Pkg.add("Gadfly")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing Calculus v0.1.14
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.2.2
INFO: Installing Colors v0.6.4
INFO: Installing Compose v0.4.2
INFO: Installing Contour v0.1.0
INFO: Installing DataArrays v0.3.3
INFO: Installing DataFrames v0.7.3
INFO: Installing DataStructures v0.4.4
INFO: Installing Dates v0.4.4
INFO: Installing Distances v0.3.1
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.2.0
INFO: Installing GZip v0.2.18
INFO: Installing Gadfly v0.4.2
INFO: Installing Grid v0.4.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing Measures v0.0.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.5.0
INFO: Installing PDMats v0.4.1
INFO: Installing PositiveFactorizations v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Installing WoodburyMatrices v0.1.5
INFO: Package database updated

>>> 'Pkg.test("Gadfly")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for Gadfly...
INFO: Installing Cairo v0.2.31
INFO: Installing Graphics v0.1.3
INFO: Installing RDatasets v0.1.3
INFO: Building Cairo
INFO: Testing Gadfly
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Cairo.ji for module Cairo.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Compose.ji for module Compose.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Optim.ji for module Optim.
Rendering points on pgf backend.
 10.680687 seconds (8.65 M allocations: 373.693 MB, 1.11% gc time)
Rendering points on svgjs backend.
  1.593564 seconds (858.52 k allocations: 35.621 MB, 0.41% gc time)
Rendering points on svg backend.
  0.033556 seconds (49.50 k allocations: 1.670 MB, 28.65% gc time)
Rendering points on png backend.
  2.740408 seconds (2.25 M allocations: 100.421 MB, 1.09% gc time)
Rendering noticks on pgf backend.
  0.188869 seconds (67.92 k allocations: 2.829 MB)
Rendering noticks on svgjs backend.
  0.005329 seconds (6.82 k allocations: 318.251 KB)
Rendering noticks on svg backend.
  0.002876 seconds (5.10 k allocations: 242.391 KB)
Rendering noticks on png backend.
  0.018619 seconds (5.01 k allocations: 237.892 KB)
Rendering point_shape on pgf backend.
  5.888505 seconds (4.03 M allocations: 173.513 MB, 1.19% gc time)
Rendering point_shape on svgjs backend.
  0.133799 seconds (223.78 k allocations: 8.166 MB)
Rendering point_shape on svg backend.
  0.018255 seconds (122.02 k allocations: 4.590 MB)
Rendering point_shape on png backend.
  0.234818 seconds (194.21 k allocations: 7.835 MB)
Rendering colored_points on pgf backend.
  3.900968 seconds (2.84 M allocations: 123.014 MB, 1.20% gc time)
Rendering colored_points on svgjs backend.
  0.153561 seconds (181.78 k allocations: 6.749 MB)
Rendering colored_points on svg backend.
  0.020987 seconds (67.77 k allocations: 2.643 MB, 40.26% gc time)
Rendering colored_points on png backend.
  0.144975 seconds (134.67 k allocations: 5.737 MB)
Rendering function_plots on pgf backend.
  1.562394 seconds (1.01 M allocations: 42.151 MB, 0.65% gc time)
Rendering function_plots on svgjs backend.
  0.037519 seconds (155.40 k allocations: 5.564 MB, 33.13% gc time)
Rendering function_plots on svg backend.
  0.016309 seconds (118.29 k allocations: 4.308 MB)
Rendering function_plots on png backend.
  0.043778 seconds (124.74 k allocations: 4.572 MB)
Rendering function_explicit_colors on pgf backend.
  0.271429 seconds (328.15 k allocations: 13.474 MB, 3.38% gc time)
Rendering function_explicit_colors on svgjs backend.
  0.021569 seconds (152.78 k allocations: 5.485 MB)
Rendering function_explicit_colors on svg backend.
  0.015873 seconds (115.68 k allocations: 4.228 MB)
Rendering function_explicit_colors on png backend.
  0.030479 seconds (115.05 k allocations: 4.189 MB)
Rendering function_layers on pgf backend.
  0.141018 seconds (235.57 k allocations: 9.254 MB)
Rendering function_layers on svgjs backend.
  0.025773 seconds (176.84 k allocations: 6.298 MB)
Rendering function_layers on svg backend.
  0.029318 seconds (133.31 k allocations: 4.823 MB, 36.51% gc time)
Rendering function_layers on png backend.
  0.054266 seconds (130.32 k allocations: 4.671 MB)
Rendering multicolumn_colorkey on pgf backend.
  0.657782 seconds (542.34 k allocations: 21.434 MB, 1.27% gc time)
Rendering multicolumn_colorkey on svgjs backend.
  0.026840 seconds (143.74 k allocations: 5.165 MB)
Rendering multicolumn_colorkey on svg backend.
  0.025406 seconds (99.08 k allocations: 3.649 MB)
Rendering multicolumn_colorkey on png backend.
  0.034136 seconds (85.42 k allocations: 3.015 MB)
Rendering vstack on pgf backend.
  0.008254 seconds (45.18 k allocations: 1.997 MB)
Rendering vstack on svgjs backend.
  0.016796 seconds (123.13 k allocations: 4.173 MB)
Rendering vstack on svg backend.
  0.004253 seconds (25.52 k allocations: 1.046 MB)
Rendering vstack on png backend.
  0.029349 seconds (25.27 k allocations: 1.002 MB)
Rendering hstack on pgf backend.
  0.011702 seconds (45.05 k allocations: 1.998 MB)
Rendering hstack on svgjs backend.
  0.029439 seconds (123.16 k allocations: 4.182 MB, 34.40% gc time)
Rendering hstack on svg backend.
  0.005032 seconds (25.54 k allocations: 1.055 MB)
Rendering hstack on png backend.
  0.020109 seconds (25.30 k allocations: 1.011 MB)
Rendering colorful_hist on pgf backend.
  1.619312 seconds (2.97 M allocations: 87.702 MB, 2.05% gc time)
Rendering colorful_hist on svgjs backend.
  0.310319 seconds (2.49 M allocations: 67.012 MB, 8.02% gc time)
Rendering colorful_hist on svg backend.
  0.294060 seconds (2.45 M allocations: 65.794 MB, 5.78% gc time)
Rendering colorful_hist on png backend.
  0.484448 seconds (2.44 M allocations: 65.248 MB, 20.21% gc time)
Rendering discrete_histogram on pgf backend.
  0.987688 seconds (398.27 k allocations: 16.975 MB)
Rendering discrete_histogram on svgjs backend.
  0.060045 seconds (52.39 k allocations: 1.793 MB)
Rendering discrete_histogram on svg backend.
  0.012545 seconds (35.38 k allocations: 1.180 MB)
Rendering discrete_histogram on png backend.
  0.055304 seconds (35.53 k allocations: 1.169 MB, 23.23% gc time)
Rendering discrete_bar on pgf backend.
  0.797171 seconds (686.87 k allocations: 26.505 MB, 1.48% gc time)
Rendering discrete_bar on svgjs backend.
  0.032237 seconds (262.32 k allocations: 7.039 MB)
Rendering discrete_bar on svg backend.
  0.040750 seconds (238.82 k allocations: 6.279 MB, 28.12% gc time)
Rendering discrete_bar on png backend.
  0.043351 seconds (233.03 k allocations: 6.164 MB)
Rendering discrete_bar_horizontal on pgf backend.
  0.184358 seconds (426.65 k allocations: 14.922 MB, 4.70% gc time)
Rendering discrete_bar_horizontal on svgjs backend.
  0.032944 seconds (262.25 k allocations: 6.999 MB)
Rendering discrete_bar_horizontal on svg backend.
  0.025737 seconds (238.63 k allocations: 6.230 MB)
Rendering discrete_bar_horizontal on png backend.
  0.047614 seconds (232.95 k allocations: 6.124 MB)
Rendering stacked_discrete_histogram on pgf backend.
  0.209262 seconds (516.81 k allocations: 16.134 MB, 3.66% gc time)
Rendering stacked_discrete_histogram on svgjs backend.
  0.053364 seconds (447.58 k allocations: 12.741 MB)
Rendering stacked_discrete_histogram on svg backend.
  0.049138 seconds (410.95 k allocations: 11.501 MB)
Rendering stacked_discrete_histogram on png backend.
  0.062102 seconds (402.65 k allocations: 11.159 MB, 11.29% gc time)
Rendering stacked_discrete_histogram_horizontal on pgf backend.
  0.102879 seconds (496.49 k allocations: 15.116 MB)
Rendering stacked_discrete_histogram_horizontal on svgjs backend.
  0.072740 seconds (447.88 k allocations: 12.761 MB)
Rendering stacked_discrete_histogram_horizontal on svg backend.
  0.055239 seconds (410.99 k allocations: 11.508 MB, 13.78% gc time)
Rendering stacked_discrete_histogram_horizontal on png backend.
  0.054806 seconds (402.67 k allocations: 11.166 MB)
Rendering stacked_continuous_histogram on pgf backend.
  0.164063 seconds (629.21 k allocations: 19.865 MB, 4.59% gc time)
Rendering stacked_continuous_histogram on svgjs backend.
  0.110896 seconds (534.28 k allocations: 14.872 MB, 10.13% gc time)
Rendering stacked_continuous_histogram on svg backend.
  0.093716 seconds (410.95 k allocations: 11.501 MB, 8.56% gc time)
Rendering stacked_continuous_histogram on png backend.
  0.099222 seconds (402.65 k allocations: 11.159 MB)
Rendering dodged_discrete_histogram on pgf backend.
  0.260391 seconds (621.57 k allocations: 18.545 MB, 3.14% gc time)
Rendering dodged_discrete_histogram on svgjs backend.
  0.109975 seconds (466.95 k allocations: 13.238 MB, 11.04% gc time)
Rendering dodged_discrete_histogram on svg backend.
  0.078552 seconds (423.69 k allocations: 11.772 MB, 12.21% gc time)
Rendering dodged_discrete_histogram on png backend.
  0.097406 seconds (415.40 k allocations: 11.432 MB)
Rendering dodged_discrete_histogram_horizontal on pgf backend.
  0.224261 seconds (502.31 k allocations: 15.083 MB, 4.23% gc time)
Rendering dodged_discrete_histogram_horizontal on svgjs backend.
  0.108036 seconds (466.59 k allocations: 13.228 MB, 8.02% gc time)
Rendering dodged_discrete_histogram_horizontal on svg backend.
  0.089483 seconds (423.74 k allocations: 11.780 MB)
Rendering dodged_discrete_histogram_horizontal on png backend.
  0.100231 seconds (415.43 k allocations: 11.439 MB)
Rendering array_aesthetics on pgf backend.
  0.257788 seconds (127.34 k allocations: 5.094 MB)
Rendering array_aesthetics on svgjs backend.
  0.023234 seconds (69.20 k allocations: 2.318 MB)
Rendering array_aesthetics on svg backend.
  0.016206 seconds (41.95 k allocations: 1.441 MB)
Rendering array_aesthetics on png backend.
  0.034710 seconds (41.88 k allocations: 1.425 MB)
Rendering subplot_grid on pgf backend.
FAILED!
ERROR: LoadError: LoadError: MethodError: `setlevels!` has no method matching setlevels!(::DataArrays.PooledDataArray{ByteString,UInt8,1}, ::Array{ASCIIString,1})
Closest candidates are:
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::AbstractArray{T,1})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,T})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,Any})
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in evalfile at loading.jl:336 (repeats 2 times)
 in run_tests at /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl:138
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Gadfly/test/subplot_grid.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl, in expression starting on line 183
===============================[ ERROR: Gadfly ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cairo v0.2.31
INFO: Removing Graphics v0.1.3
INFO: Removing RDatasets v0.1.3
ERROR: Gadfly had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
