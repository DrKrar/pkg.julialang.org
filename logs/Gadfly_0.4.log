>>> 'Pkg.add("Gadfly")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing Calculus v0.1.14
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.2.2
INFO: Installing Colors v0.6.4
INFO: Installing Compose v0.4.2
INFO: Installing Contour v0.1.0
INFO: Installing DataArrays v0.3.3
INFO: Installing DataFrames v0.7.3
INFO: Installing DataStructures v0.4.4
INFO: Installing Dates v0.4.4
INFO: Installing Distances v0.3.1
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.2.0
INFO: Installing GZip v0.2.18
INFO: Installing Gadfly v0.4.2
INFO: Installing Grid v0.4.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing Measures v0.0.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.5.0
INFO: Installing PDMats v0.4.1
INFO: Installing PositiveFactorizations v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Installing WoodburyMatrices v0.1.5
INFO: Package database updated

>>> 'Pkg.test("Gadfly")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for Gadfly...
INFO: Installing Cairo v0.2.31
INFO: Installing Graphics v0.1.3
INFO: Installing RDatasets v0.1.3
INFO: Building Cairo
INFO: Testing Gadfly
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Cairo.ji for module Cairo.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Compose.ji for module Compose.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Optim.ji for module Optim.
Rendering points on pgf backend.
 12.935059 seconds (8.62 M allocations: 372.138 MB, 0.83% gc time)
Rendering points on svgjs backend.
  1.733285 seconds (859.27 k allocations: 35.744 MB, 0.80% gc time)
Rendering points on svg backend.
  0.025118 seconds (49.49 k allocations: 1.670 MB)
Rendering points on png backend.
  2.049046 seconds (2.22 M allocations: 98.871 MB, 1.23% gc time)
Rendering noticks on pgf backend.
  0.165055 seconds (67.88 k allocations: 2.828 MB)
Rendering noticks on svgjs backend.
  0.004525 seconds (6.82 k allocations: 318.251 KB)
Rendering noticks on svg backend.
  0.002592 seconds (5.10 k allocations: 242.391 KB)
Rendering noticks on png backend.
  0.018122 seconds (5.01 k allocations: 237.892 KB)
Rendering point_shape on pgf backend.
  6.056652 seconds (4.01 M allocations: 172.808 MB, 0.89% gc time)
Rendering point_shape on svgjs backend.
  0.140312 seconds (224.58 k allocations: 8.189 MB, 5.62% gc time)
Rendering point_shape on svg backend.
  0.027413 seconds (121.20 k allocations: 4.565 MB)
Rendering point_shape on png backend.
  0.238077 seconds (196.77 k allocations: 7.896 MB)
Rendering colored_points on pgf backend.
  4.086450 seconds (2.83 M allocations: 122.659 MB, 1.31% gc time)
Rendering colored_points on svgjs backend.
  0.200796 seconds (181.35 k allocations: 6.723 MB)
Rendering colored_points on svg backend.
  0.027165 seconds (67.77 k allocations: 2.643 MB, 29.14% gc time)
Rendering colored_points on png backend.
  0.177431 seconds (122.86 k allocations: 5.231 MB)
Rendering function_plots on pgf backend.
  1.565682 seconds (1.01 M allocations: 42.178 MB, 1.08% gc time)
Rendering function_plots on svgjs backend.
  0.045366 seconds (155.40 k allocations: 5.564 MB, 20.50% gc time)
Rendering function_plots on svg backend.
  0.027259 seconds (118.29 k allocations: 4.308 MB)
Rendering function_plots on png backend.
  0.069058 seconds (124.74 k allocations: 4.572 MB)
Rendering function_explicit_colors on pgf backend.
  0.342264 seconds (328.13 k allocations: 13.473 MB, 2.60% gc time)
Rendering function_explicit_colors on svgjs backend.
  0.020917 seconds (152.78 k allocations: 5.485 MB)
Rendering function_explicit_colors on svg backend.
  0.023994 seconds (115.68 k allocations: 4.228 MB)
Rendering function_explicit_colors on png backend.
  0.033235 seconds (115.05 k allocations: 4.189 MB)
Rendering function_layers on pgf backend.
  0.208119 seconds (235.55 k allocations: 9.229 MB)
Rendering function_layers on svgjs backend.
  0.042878 seconds (176.84 k allocations: 6.298 MB)
Rendering function_layers on svg backend.
  0.030543 seconds (133.31 k allocations: 4.823 MB)
Rendering function_layers on png backend.
  0.062311 seconds (130.32 k allocations: 4.671 MB, 15.40% gc time)
Rendering multicolumn_colorkey on pgf backend.
  0.715755 seconds (537.00 k allocations: 21.231 MB, 1.17% gc time)
Rendering multicolumn_colorkey on svgjs backend.
  0.029450 seconds (143.76 k allocations: 5.166 MB)
Rendering multicolumn_colorkey on svg backend.
  0.024629 seconds (99.10 k allocations: 3.650 MB)
Rendering multicolumn_colorkey on png backend.
  0.047850 seconds (85.44 k allocations: 3.016 MB)
Rendering vstack on pgf backend.
  0.014293 seconds (45.16 k allocations: 1.996 MB)
Rendering vstack on svgjs backend.
  0.029732 seconds (123.13 k allocations: 4.173 MB)
Rendering vstack on svg backend.
  0.006679 seconds (25.52 k allocations: 1.046 MB)
Rendering vstack on png backend.
  0.028035 seconds (25.27 k allocations: 1.002 MB)
Rendering hstack on pgf backend.
  0.009431 seconds (45.04 k allocations: 1.998 MB)
Rendering hstack on svgjs backend.
  0.037611 seconds (123.16 k allocations: 4.182 MB, 22.37% gc time)
Rendering hstack on svg backend.
  0.006882 seconds (25.54 k allocations: 1.055 MB)
Rendering hstack on png backend.
  0.029815 seconds (25.30 k allocations: 1.011 MB)
Rendering colorful_hist on pgf backend.
  2.008092 seconds (2.97 M allocations: 87.758 MB, 1.36% gc time)
Rendering colorful_hist on svgjs backend.
  0.459244 seconds (2.49 M allocations: 67.111 MB, 4.27% gc time)
Rendering colorful_hist on svg backend.
  0.368570 seconds (2.46 M allocations: 65.893 MB, 4.10% gc time)
Rendering colorful_hist on png backend.
  0.491336 seconds (2.44 M allocations: 65.347 MB, 6.76% gc time)
Rendering discrete_histogram on pgf backend.
  0.629912 seconds (405.19 k allocations: 16.887 MB, 12.26% gc time)
Rendering discrete_histogram on svgjs backend.
  0.027241 seconds (52.39 k allocations: 1.793 MB)
Rendering discrete_histogram on svg backend.
  0.009745 seconds (35.78 k allocations: 1.191 MB)
Rendering discrete_histogram on png backend.
  0.050066 seconds (37.88 k allocations: 1.298 MB)
Rendering discrete_bar on pgf backend.
  0.395136 seconds (686.66 k allocations: 26.397 MB, 1.95% gc time)
Rendering discrete_bar on svgjs backend.
  0.031353 seconds (262.32 k allocations: 7.039 MB)
Rendering discrete_bar on svg backend.
  0.052615 seconds (238.82 k allocations: 6.279 MB, 16.45% gc time)
Rendering discrete_bar on png backend.
  0.041071 seconds (233.03 k allocations: 6.164 MB)
Rendering discrete_bar_horizontal on pgf backend.
  0.154475 seconds (426.45 k allocations: 14.915 MB, 4.67% gc time)
Rendering discrete_bar_horizontal on svgjs backend.
  0.034589 seconds (262.25 k allocations: 6.999 MB)
Rendering discrete_bar_horizontal on svg backend.
  0.024259 seconds (238.63 k allocations: 6.230 MB)
Rendering discrete_bar_horizontal on png backend.
  0.045756 seconds (232.95 k allocations: 6.124 MB, 12.62% gc time)
Rendering stacked_discrete_histogram on pgf backend.
  0.139878 seconds (516.81 k allocations: 16.134 MB, 4.56% gc time)
Rendering stacked_discrete_histogram on svgjs backend.
  0.049972 seconds (447.58 k allocations: 12.741 MB)
Rendering stacked_discrete_histogram on svg backend.
  0.051655 seconds (410.95 k allocations: 11.501 MB, 13.40% gc time)
Rendering stacked_discrete_histogram on png backend.
  0.090844 seconds (402.65 k allocations: 11.159 MB, 12.06% gc time)
Rendering stacked_discrete_histogram_horizontal on pgf backend.
  0.095849 seconds (496.18 k allocations: 15.104 MB)
Rendering stacked_discrete_histogram_horizontal on svgjs backend.
  0.069927 seconds (447.88 k allocations: 12.761 MB, 7.41% gc time)
Rendering stacked_discrete_histogram_horizontal on svg backend.
  0.085030 seconds (410.99 k allocations: 11.508 MB, 8.38% gc time)
Rendering stacked_discrete_histogram_horizontal on png backend.
  0.091530 seconds (402.67 k allocations: 11.166 MB)
Rendering stacked_continuous_histogram on pgf backend.
  0.086394 seconds (441.46 k allocations: 13.000 MB, 9.23% gc time)
Rendering stacked_continuous_histogram on svgjs backend.
  0.093215 seconds (447.58 k allocations: 12.741 MB, 5.96% gc time)
Rendering stacked_continuous_histogram on svg backend.
  0.079309 seconds (410.95 k allocations: 11.501 MB)
Rendering stacked_continuous_histogram on png backend.
  0.099947 seconds (402.65 k allocations: 11.159 MB, 5.95% gc time)
Rendering dodged_discrete_histogram on pgf backend.
  0.206537 seconds (536.45 k allocations: 16.455 MB, 3.33% gc time)
Rendering dodged_discrete_histogram on svgjs backend.
  0.065547 seconds (466.95 k allocations: 13.238 MB)
Rendering dodged_discrete_histogram on svg backend.
  0.050650 seconds (423.69 k allocations: 11.772 MB)
Rendering dodged_discrete_histogram on png backend.
  0.089972 seconds (415.40 k allocations: 11.432 MB, 7.02% gc time)
Rendering dodged_discrete_histogram_horizontal on pgf backend.
  0.168140 seconds (501.04 k allocations: 15.035 MB, 3.57% gc time)
Rendering dodged_discrete_histogram_horizontal on svgjs backend.
  0.052985 seconds (466.59 k allocations: 13.228 MB)
Rendering dodged_discrete_histogram_horizontal on svg backend.
  0.067601 seconds (423.74 k allocations: 11.780 MB, 9.77% gc time)
Rendering dodged_discrete_histogram_horizontal on png backend.
  0.073416 seconds (415.43 k allocations: 11.439 MB)
Rendering array_aesthetics on pgf backend.
  0.302297 seconds (126.80 k allocations: 5.064 MB)
Rendering array_aesthetics on svgjs backend.
  0.024010 seconds (69.20 k allocations: 2.318 MB)
Rendering array_aesthetics on svg backend.
  0.025519 seconds (41.95 k allocations: 1.441 MB, 34.52% gc time)
Rendering array_aesthetics on png backend.
  0.030756 seconds (41.88 k allocations: 1.425 MB)
Rendering subplot_grid on pgf backend.
FAILED!
ERROR: LoadError: LoadError: MethodError: `setlevels!` has no method matching setlevels!(::DataArrays.PooledDataArray{ByteString,UInt8,1}, ::Array{ASCIIString,1})
Closest candidates are:
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::AbstractArray{T,1})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,T})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,Any})
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in evalfile at loading.jl:336 (repeats 2 times)
 in run_tests at /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl:138
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Gadfly/test/subplot_grid.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl, in expression starting on line 183
===============================[ ERROR: Gadfly ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cairo v0.2.31
INFO: Removing Graphics v0.1.3
INFO: Removing RDatasets v0.1.3
ERROR: Gadfly had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
