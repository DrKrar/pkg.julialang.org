>>> 'Pkg.add("Gadfly")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing Calculus v0.1.15
INFO: Installing Codecs v0.1.5
INFO: Installing ColorTypes v0.2.3
INFO: Installing Colors v0.6.5
INFO: Installing Compose v0.4.2
INFO: Installing Contour v0.1.0
INFO: Installing DataArrays v0.3.4
INFO: Installing DataFrames v0.7.3
INFO: Installing DataStructures v0.4.4
INFO: Installing Dates v0.4.4
INFO: Installing Distances v0.3.1
INFO: Installing Distributions v0.9.0
INFO: Installing Docile v0.5.23
INFO: Installing DualNumbers v0.2.2
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.2.1
INFO: Installing GZip v0.2.19
INFO: Installing Gadfly v0.4.2
INFO: Installing Grid v0.4.0
INFO: Installing Hexagons v0.0.4
INFO: Installing Iterators v0.1.9
INFO: Installing KernelDensity v0.1.2
INFO: Installing Loess v0.0.6
INFO: Installing Measures v0.0.2
INFO: Installing NaNMath v0.2.1
INFO: Installing Optim v0.5.0
INFO: Installing PDMats v0.4.2
INFO: Installing PositiveFactorizations v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Installing WoodburyMatrices v0.1.5
INFO: Package database updated

>>> 'Pkg.test("Gadfly")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for Gadfly...
INFO: Installing Cairo v0.2.33
INFO: Installing Graphics v0.1.3
INFO: Installing RDatasets v0.1.3
INFO: Building Cairo
INFO: Testing Gadfly
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Gadfly.ji for module Gadfly.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Compose.ji for module Compose.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Cairo.ji for module Cairo.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Optim.ji for module Optim.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/KernelDensity.ji for module KernelDensity.
Rendering points on pgf backend.
  9.821365 seconds (8.85 M allocations: 379.728 MB, 1.00% gc time)
Rendering points on svgjs backend.
  1.295458 seconds (919.67 k allocations: 37.795 MB, 1.04% gc time)
Rendering points on svg backend.
  0.013094 seconds (49.51 k allocations: 1.671 MB)
Rendering points on png backend.
  2.219453 seconds (2.39 M allocations: 104.793 MB, 1.33% gc time)
Rendering noticks on pgf backend.
  0.111606 seconds (74.79 k allocations: 3.084 MB)
Rendering noticks on svgjs backend.
  0.004474 seconds (6.83 k allocations: 319.298 KB)
Rendering noticks on svg backend.
  0.002261 seconds (5.10 k allocations: 243.219 KB)
Rendering noticks on png backend.
  0.011270 seconds (5.01 k allocations: 238.751 KB)
Rendering point_shape on pgf backend.
  4.590260 seconds (4.15 M allocations: 178.212 MB, 1.26% gc time)
Rendering point_shape on svgjs backend.
  0.120303 seconds (222.41 k allocations: 8.107 MB, 5.70% gc time)
Rendering point_shape on svg backend.
  0.023336 seconds (121.43 k allocations: 4.572 MB)
Rendering point_shape on png backend.
  0.151925 seconds (195.30 k allocations: 7.865 MB)
Rendering colored_points on pgf backend.
  3.898825 seconds (2.92 M allocations: 125.754 MB, 1.23% gc time)
Rendering colored_points on svgjs backend.
  0.131324 seconds (181.99 k allocations: 6.747 MB)
Rendering colored_points on svg backend.
  0.012896 seconds (67.77 k allocations: 2.645 MB)
Rendering colored_points on png backend.
  0.162055 seconds (123.19 k allocations: 5.243 MB, 4.86% gc time)
Rendering function_plots on pgf backend.
  1.473157 seconds (1.01 M allocations: 42.543 MB, 1.01% gc time)
Rendering function_plots on svgjs backend.
  0.034660 seconds (155.41 k allocations: 5.566 MB, 20.74% gc time)
Rendering function_plots on svg backend.
  0.020133 seconds (118.30 k allocations: 4.309 MB)
Rendering function_plots on png backend.
  0.044047 seconds (124.64 k allocations: 4.565 MB)
Rendering function_explicit_colors on pgf backend.
  0.253005 seconds (342.69 k allocations: 14.083 MB, 2.86% gc time)
Rendering function_explicit_colors on svgjs backend.
  0.021994 seconds (152.79 k allocations: 5.486 MB)
Rendering function_explicit_colors on svg backend.
  0.015618 seconds (115.69 k allocations: 4.230 MB)
Rendering function_explicit_colors on png backend.
  0.033845 seconds (115.06 k allocations: 4.190 MB)
Rendering function_layers on pgf backend.
  0.130813 seconds (235.52 k allocations: 9.279 MB, 5.08% gc time)
Rendering function_layers on svgjs backend.
  0.023527 seconds (176.85 k allocations: 6.300 MB)
Rendering function_layers on svg backend.
  0.017493 seconds (133.32 k allocations: 4.825 MB)
Rendering function_layers on png backend.
  0.040194 seconds (130.34 k allocations: 4.673 MB, 17.24% gc time)
Rendering multicolumn_colorkey on pgf backend.
  0.514100 seconds (536.74 k allocations: 21.218 MB, 1.45% gc time)
Rendering multicolumn_colorkey on svgjs backend.
  0.028669 seconds (143.79 k allocations: 5.168 MB)
Rendering multicolumn_colorkey on svg backend.
  0.022491 seconds (99.13 k allocations: 3.652 MB)
Rendering multicolumn_colorkey on png backend.
  0.034561 seconds (85.48 k allocations: 3.019 MB)
Rendering vstack on pgf backend.
  0.008069 seconds (45.19 k allocations: 1.998 MB)
Rendering vstack on svgjs backend.
  0.017676 seconds (123.14 k allocations: 4.175 MB)
Rendering vstack on svg backend.
  0.006898 seconds (25.53 k allocations: 1.048 MB)
Rendering vstack on png backend.
  0.034603 seconds (25.29 k allocations: 1.003 MB, 19.26% gc time)
Rendering hstack on pgf backend.
  0.006065 seconds (45.06 k allocations: 2.000 MB)
Rendering hstack on svgjs backend.
  0.018693 seconds (123.17 k allocations: 4.184 MB)
Rendering hstack on svg backend.
  0.003787 seconds (25.55 k allocations: 1.057 MB)
Rendering hstack on png backend.
  0.018051 seconds (25.31 k allocations: 1.012 MB)
Rendering colorful_hist on pgf backend.
  2.009563 seconds (2.99 M allocations: 88.710 MB, 1.45% gc time)
Rendering colorful_hist on svgjs backend.
  0.511187 seconds (2.49 M allocations: 67.014 MB, 5.13% gc time)
Rendering colorful_hist on svg backend.
  0.363981 seconds (2.45 M allocations: 65.796 MB, 4.22% gc time)
Rendering colorful_hist on png backend.
  0.430680 seconds (2.44 M allocations: 65.250 MB, 3.48% gc time)
Rendering discrete_histogram on pgf backend.
  0.517541 seconds (400.14 k allocations: 16.688 MB, 1.04% gc time)
Rendering discrete_histogram on svgjs backend.
  0.021818 seconds (52.40 k allocations: 1.794 MB)
Rendering discrete_histogram on svg backend.
  0.006491 seconds (36.20 k allocations: 1.203 MB)
Rendering discrete_histogram on png backend.
  0.020783 seconds (35.14 k allocations: 1.160 MB)
Rendering discrete_bar on pgf backend.
  0.460700 seconds (692.53 k allocations: 27.119 MB, 11.43% gc time)
Rendering discrete_bar on svgjs backend.
  0.034691 seconds (262.32 k allocations: 7.040 MB, 18.31% gc time)
Rendering discrete_bar on svg backend.
  0.025230 seconds (238.82 k allocations: 6.280 MB)
Rendering discrete_bar on png backend.
  0.039272 seconds (233.04 k allocations: 6.165 MB)
Rendering discrete_bar_horizontal on pgf backend.
  0.158467 seconds (427.05 k allocations: 14.936 MB)
Rendering discrete_bar_horizontal on svgjs backend.
  0.060814 seconds (262.25 k allocations: 7.000 MB, 12.07% gc time)
Rendering discrete_bar_horizontal on svg backend.
  0.049375 seconds (238.64 k allocations: 6.231 MB)
Rendering discrete_bar_horizontal on png backend.
  0.073775 seconds (232.97 k allocations: 6.125 MB)
Rendering stacked_discrete_histogram on pgf backend.
  0.387009 seconds (717.16 k allocations: 23.358 MB, 3.71% gc time)
Rendering stacked_discrete_histogram on svgjs backend.
  0.123004 seconds (449.84 k allocations: 12.901 MB)
Rendering stacked_discrete_histogram on svg backend.
  0.105592 seconds (494.44 k allocations: 13.528 MB, 12.77% gc time)
Rendering stacked_discrete_histogram on png backend.
  0.103928 seconds (402.66 k allocations: 11.160 MB, 6.89% gc time)
Rendering stacked_discrete_histogram_horizontal on pgf backend.
  0.184076 seconds (496.77 k allocations: 15.126 MB)
Rendering stacked_discrete_histogram_horizontal on svgjs backend.
  0.056654 seconds (447.89 k allocations: 12.762 MB, 10.27% gc time)
Rendering stacked_discrete_histogram_horizontal on svg backend.
  0.053423 seconds (410.99 k allocations: 11.510 MB, 11.64% gc time)
Rendering stacked_discrete_histogram_horizontal on png backend.
  0.056600 seconds (402.68 k allocations: 11.167 MB)
Rendering stacked_continuous_histogram on pgf backend.
  0.060812 seconds (525.33 k allocations: 15.045 MB, 11.84% gc time)
Rendering stacked_continuous_histogram on svgjs backend.
  0.070448 seconds (447.58 k allocations: 12.743 MB, 8.47% gc time)
Rendering stacked_continuous_histogram on svg backend.
  0.079290 seconds (410.96 k allocations: 11.502 MB)
Rendering stacked_continuous_histogram on png backend.
  0.101975 seconds (402.66 k allocations: 11.160 MB, 5.65% gc time)
Rendering dodged_discrete_histogram on pgf backend.
  0.237454 seconds (536.01 k allocations: 16.438 MB, 2.89% gc time)
Rendering dodged_discrete_histogram on svgjs backend.
  0.108683 seconds (466.96 k allocations: 13.240 MB, 6.57% gc time)
Rendering dodged_discrete_histogram on svg backend.
  0.091296 seconds (423.69 k allocations: 11.773 MB)
Rendering dodged_discrete_histogram on png backend.
  0.121015 seconds (415.41 k allocations: 11.433 MB, 8.81% gc time)
Rendering dodged_discrete_histogram_horizontal on pgf backend.
  0.193139 seconds (500.46 k allocations: 15.015 MB, 3.46% gc time)
Rendering dodged_discrete_histogram_horizontal on svgjs backend.
  0.079476 seconds (466.60 k allocations: 13.230 MB)
Rendering dodged_discrete_histogram_horizontal on svg backend.
  0.074764 seconds (423.74 k allocations: 11.782 MB, 7.34% gc time)
Rendering dodged_discrete_histogram_horizontal on png backend.
  0.061493 seconds (415.44 k allocations: 11.440 MB, 8.27% gc time)
Rendering array_aesthetics on pgf backend.
  0.193673 seconds (127.11 k allocations: 5.075 MB)
Rendering array_aesthetics on svgjs backend.
  0.019062 seconds (69.21 k allocations: 2.319 MB)
Rendering array_aesthetics on svg backend.
  0.011943 seconds (41.96 k allocations: 1.442 MB)
Rendering array_aesthetics on png backend.
  0.035437 seconds (41.89 k allocations: 1.426 MB, 23.88% gc time)
Rendering subplot_grid on pgf backend.
FAILED!
ERROR: LoadError: LoadError: MethodError: `setlevels!` has no method matching setlevels!(::DataArrays.PooledDataArray{ByteString,UInt8,1}, ::Array{ASCIIString,1})
Closest candidates are:
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::AbstractArray{T,1})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,T})
  setlevels!{T,R}(::DataArrays.PooledDataArray{T,R,N}, !Matched::Dict{T,Any})
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in evalfile at loading.jl:336 (repeats 2 times)
 in run_tests at /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl:138
 in include at ./boot.jl:261
 in include_from_node1 at ./loading.jl:320
 in process_options at ./client.jl:280
 in _start at ./client.jl:378
while loading /home/vagrant/.julia/v0.4/Gadfly/test/subplot_grid.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl, in expression starting on line 183
===============================[ ERROR: Gadfly ]================================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/Gadfly/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Cairo v0.2.33
INFO: Removing Graphics v0.1.3
INFO: Removing RDatasets v0.1.3
ERROR: Gadfly had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:803
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:257
 in _start at ./client.jl:378

>>> End of log
