>>> 'Pkg.add("OrdinaryDiffEq")' log
INFO: Cloning cache of DiffEqBase from https://github.com/JuliaDiffEq/DiffEqBase.jl.git
INFO: Cloning cache of GenericSVD from https://github.com/simonbyrne/GenericSVD.jl.git
INFO: Cloning cache of InplaceOps from https://github.com/simonbyrne/InplaceOps.jl.git
INFO: Cloning cache of OrdinaryDiffEq from https://github.com/JuliaDiffEq/OrdinaryDiffEq.jl.git
INFO: Cloning cache of Parameters from https://github.com/mauro3/Parameters.jl.git
INFO: Cloning cache of Ranges from https://github.com/JuliaArrays/Ranges.jl.git
INFO: Cloning cache of RecursiveArrayTools from https://github.com/ChrisRackauckas/RecursiveArrayTools.jl.git
INFO: Cloning cache of SimpleTraits from https://github.com/mauro3/SimpleTraits.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing DataStructures v0.4.6
INFO: Installing DiffEqBase v0.3.1
INFO: Installing Distances v0.3.2
INFO: Installing ForwardDiff v0.2.5
INFO: Installing GenericSVD v0.0.2
INFO: Installing Hiccup v0.0.3
INFO: Installing InplaceOps v0.1.0
INFO: Installing Juno v0.2.5
INFO: Installing Lazy v0.11.4
INFO: Installing MacroTools v0.3.2
INFO: Installing Media v0.2.4
INFO: Installing NLsolve v0.7.3
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.6.1
INFO: Installing OrdinaryDiffEq v0.3.0
INFO: Installing Parameters v0.5.0
INFO: Installing PositiveFactorizations v0.0.3
INFO: Installing Ranges v0.0.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing RecursiveArrayTools v0.0.3
INFO: Installing SimpleTraits v0.2.0
INFO: Package database updated

>>> 'Pkg.test("OrdinaryDiffEq")' log
Julia Version 0.6.0-dev.1297
Commit 416f5f2 (2016-11-23 13:12 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (918.13671875 MB free)
Uptime: 10020.0 sec
Load Avg:  0.94580078125  0.9384765625  0.95263671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     541980 s       4713 s      75508 s     274105 s         23 s
#2  3499 MHz     182471 s       1744 s      35662 s     759311 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - OrdinaryDiffEq                0.3.0
22 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - DiffEqBase                    0.3.1
 - Distances                     0.3.2
 - ForwardDiff                   0.2.5
 - GenericSVD                    0.0.2
 - Hiccup                        0.0.3
 - InplaceOps                    0.1.0
 - Juno                          0.2.5
 - Lazy                          0.11.4
 - MacroTools                    0.3.2
 - Media                         0.2.4
 - NLsolve                       0.7.3
 - NaNMath                       0.2.2
 - Optim                         0.6.1
 - Parameters                    0.5.0
 - PositiveFactorizations        0.0.3
 - Ranges                        0.0.1
 - RecipesBase                   0.1.0
 - RecursiveArrayTools           0.0.3
 - SimpleTraits                  0.2.0
INFO: Computing test dependencies for OrdinaryDiffEq...
INFO: Cloning cache of AlgebraicDiffEq from https://github.com/ChrisRackauckas/AlgebraicDiffEq.jl.git
INFO: Cloning cache of ChunkedArrays from https://github.com/ChrisRackauckas/ChunkedArrays.jl.git
INFO: Cloning cache of DiffEqDevTools from https://github.com/JuliaDiffEq/DiffEqDevTools.jl.git
INFO: Cloning cache of DiffEqProblemLibrary from https://github.com/JuliaDiffEq/DiffEqProblemLibrary.jl.git
INFO: Cloning cache of EllipsisNotation from https://github.com/ChrisRackauckas/EllipsisNotation.jl.git
INFO: Cloning cache of FiniteElementDiffEq from https://github.com/JuliaDiffEq/FiniteElementDiffEq.jl.git
INFO: Cloning cache of IterativeSolvers from https://github.com/JuliaMath/IterativeSolvers.jl.git
INFO: Cloning cache of ParameterizedFunctions from https://github.com/JuliaDiffEq/ParameterizedFunctions.jl.git
INFO: Cloning cache of PlotThemes from https://github.com/JuliaPlots/PlotThemes.jl.git
INFO: Cloning cache of PlotUtils from https://github.com/JuliaPlots/PlotUtils.jl.git
INFO: Cloning cache of Plots from https://github.com/tbreloff/Plots.jl.git
INFO: Cloning cache of SymEngine from https://github.com/symengine/SymEngine.jl.git
INFO: Cloning cache of Unitful from https://github.com/ajkeller34/Unitful.jl.git
INFO: Cloning cache of VectorizedRoutines from https://github.com/ChrisRackauckas/VectorizedRoutines.jl.git
INFO: Installing AlgebraicDiffEq v0.1.0
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing ChunkedArrays v0.1.1
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing Conda v0.4.0
INFO: Installing DiffEqDevTools v0.2.1
INFO: Installing DiffEqProblemLibrary v0.3.1
INFO: Installing Distributions v0.11.0
INFO: Installing EllipsisNotation v0.0.2
INFO: Installing FileIO v0.2.0
INFO: Installing FiniteElementDiffEq v0.0.5
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing HDF5 v0.7.0
INFO: Installing IterativeSolvers v0.2.2
INFO: Installing Iterators v0.2.0
INFO: Installing JLD v0.6.6
INFO: Installing LegacyStrings v0.1.1
INFO: Installing Measures v0.0.3
INFO: Installing ODEInterface v0.0.10
INFO: Installing PDMats v0.5.1
INFO: Installing ParameterizedFunctions v0.4.1
INFO: Installing PlotThemes v0.1.0
INFO: Installing PlotUtils v0.2.0
INFO: Installing Plots v0.10.1
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.4
INFO: Installing SHA v0.3.0
INFO: Installing Showoff v0.0.7
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing SymEngine v0.1.2
INFO: Installing URIParser v0.1.6
INFO: Installing Unitful v0.0.4
INFO: Installing VectorizedRoutines v0.0.2
INFO: Building Blosc
INFO: Building Conda
INFO: Building Rmath
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Rmath/deps/build.jl, in expression starting on line 39
INFO: Building SymEngine
Fetching package metadata .......
Solving package specifications: ..........

Package plan for installation in environment /home/vagrant/.julia/v0.6/SymEngine/deps/usr:

The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    zlib-1.2.8                 |                3         101 KB

The following NEW packages will be INSTALLED:

    zlib: 1.2.8-3

Fetching packages ...
zlib-1.2.8-3.t   0% |                              | ETA:  --:--:--   0.00  B/szlib-1.2.8-3.t  15% |####                           | ETA:  0:00:00  12.65 MB/szlib-1.2.8-3.t  31% |#########                      | ETA:  0:00:00  17.61 MB/szlib-1.2.8-3.t  47% |##############                 | ETA:  0:00:00  19.01 MB/szlib-1.2.8-3.t  63% |###################            | ETA:  0:00:00  20.00 MB/szlib-1.2.8-3.t  79% |########################       | ETA:  0:00:00  20.28 MB/szlib-1.2.8-3.t  95% |#############################  | ETA:  0:00:00  19.07 MB/szlib-1.2.8-3.t 100% |###############################| ETA:  0:00:00  19.16 MB/szlib-1.2.8-3.t 100% |###############################| Time: 0:00:00  18.34 MB/s
Extracting packages ...
[                    ]|                                                  |   0%[zlib                ]|                                                  |   0%[      COMPLETE      ]|##################################################| 100%
Linking packages ...
[      COMPLETE      ]|                                                  |   0%[zlib                ]|                                                  |   0%[zlib                ]|                                                  |   0%[      COMPLETE      ]|##################################################| 100%
#
# To activate this environment, use:
# > source activate /home/vagrant/.julia/v0.6/SymEngine/deps/usr
#
# To deactivate this environment, use:
# > source deactivate /home/vagrant/.julia/v0.6/SymEngine/deps/usr
#

Fetching package metadata ...........
Solving package specifications: ..........

Package plan for installation in environment /home/vagrant/.julia/v0.6/SymEngine/deps/usr:

The following packages will be downloaded:

    package                    |            build
    ---------------------------|-----------------
    gmp-6.1.1                  |                1         727 KB  conda-forge
    mpfr-3.1.4                 |                2         402 KB  conda-forge
    mpc-1.0.3                  |                1          93 KB  conda-forge
    symengine-0.2.0            |                0         813 KB  symengine
    ------------------------------------------------------------
                                           Total:         2.0 MB

The following NEW packages will be INSTALLED:

    gmp:       6.1.1-1 conda-forge
    mpc:       1.0.3-1 conda-forge
    mpfr:      3.1.4-2 conda-forge
    symengine: 0.2.0-0 symengine  

Fetching packages ...
gmp-6.1.1-1.ta   0% |                              | ETA:  --:--:--   0.00  B/sgmp-6.1.1-1.ta   2% |                               | ETA:  0:00:00   1.77 MB/sgmp-6.1.1-1.ta   4% |#                              | ETA:  0:00:00   1.46 MB/sgmp-6.1.1-1.ta   6% |##                             | ETA:  0:00:00   1.38 MB/sgmp-6.1.1-1.ta   8% |##                             | ETA:  0:00:00   1.82 MB/sgmp-6.1.1-1.ta  11% |###                            | ETA:  0:00:00   1.69 MB/sgmp-6.1.1-1.ta  13% |####                           | ETA:  0:00:00   2.00 MB/sgmp-6.1.1-1.ta  15% |####                           | ETA:  0:00:00   1.87 MB/sgmp-6.1.1-1.ta  17% |#####                          | ETA:  0:00:00   1.54 MB/sgmp-6.1.1-1.ta  19% |######                         | ETA:  0:00:00   1.73 MB/sgmp-6.1.1-1.ta  22% |######                         | ETA:  0:00:00   1.67 MB/sgmp-6.1.1-1.ta  24% |#######                        | ETA:  0:00:00   1.83 MB/sgmp-6.1.1-1.ta  26% |########                       | ETA:  0:00:00   1.99 MB/sgmp-6.1.1-1.ta  28% |########                       | ETA:  0:00:00   1.92 MB/sgmp-6.1.1-1.ta  30% |#########                      | ETA:  0:00:00   2.05 MB/sgmp-6.1.1-1.ta  33% |##########                     | ETA:  0:00:00   1.98 MB/sgmp-6.1.1-1.ta  35% |##########                     | ETA:  0:00:00   2.10 MB/sgmp-6.1.1-1.ta  37% |###########                    | ETA:  0:00:00   2.23 MB/sgmp-6.1.1-1.ta  39% |############                   | ETA:  0:00:00   2.35 MB/sgmp-6.1.1-1.ta  41% |############                   | ETA:  0:00:00   2.27 MB/sgmp-6.1.1-1.ta  44% |#############                  | ETA:  0:00:00   2.38 MB/sgmp-6.1.1-1.ta  46% |##############                 | ETA:  0:00:00   2.49 MB/sgmp-6.1.1-1.ta  48% |###############                | ETA:  0:00:00   2.61 MB/sgmp-6.1.1-1.ta  50% |###############                | ETA:  0:00:00   2.51 MB/sgmp-6.1.1-1.ta  52% |################               | ETA:  0:00:00   2.61 MB/sgmp-6.1.1-1.ta  55% |#################              | ETA:  0:00:00   2.71 MB/sgmp-6.1.1-1.ta  57% |#################              | ETA:  0:00:00   2.81 MB/sgmp-6.1.1-1.ta  59% |##################             | ETA:  0:00:00   2.91 MB/sgmp-6.1.1-1.ta  61% |###################            | ETA:  0:00:00   2.81 MB/sgmp-6.1.1-1.ta  63% |###################            | ETA:  0:00:00   2.90 MB/sgmp-6.1.1-1.ta  66% |####################           | ETA:  0:00:00   2.99 MB/sgmp-6.1.1-1.ta  68% |#####################          | ETA:  0:00:00   3.09 MB/sgmp-6.1.1-1.ta  70% |#####################          | ETA:  0:00:00   3.18 MB/sgmp-6.1.1-1.ta  72% |######################         | ETA:  0:00:00   3.07 MB/sgmp-6.1.1-1.ta  74% |#######################        | ETA:  0:00:00   3.15 MB/sgmp-6.1.1-1.ta  77% |#######################        | ETA:  0:00:00   3.23 MB/sgmp-6.1.1-1.ta  79% |########################       | ETA:  0:00:00   3.32 MB/sgmp-6.1.1-1.ta  81% |#########################      | ETA:  0:00:00   3.40 MB/sgmp-6.1.1-1.ta  83% |#########################      | ETA:  0:00:00   3.48 MB/sgmp-6.1.1-1.ta  85% |##########################     | ETA:  0:00:00   3.57 MB/sgmp-6.1.1-1.ta  88% |###########################    | ETA:  0:00:00   3.47 MB/sgmp-6.1.1-1.ta  90% |###########################    | ETA:  0:00:00   3.54 MB/sgmp-6.1.1-1.ta  92% |############################   | ETA:  0:00:00   3.61 MB/sgmp-6.1.1-1.ta  94% |#############################  | ETA:  0:00:00   3.69 MB/sgmp-6.1.1-1.ta  96% |############################## | ETA:  0:00:00   3.77 MB/sgmp-6.1.1-1.ta  99% |############################## | ETA:  0:00:00   3.84 MB/sgmp-6.1.1-1.ta 100% |###############################| Time: 0:00:00   3.87 MB/s
mpfr-3.1.4-2.t   0% |                              | ETA:  --:--:--   0.00  B/smpfr-3.1.4-2.t   3% |#                              | Time: 0:00:00   1.30 MB/smpfr-3.1.4-2.t   7% |##                             | Time: 0:00:00   1.28 MB/smpfr-3.1.4-2.t  11% |###                            | Time: 0:00:00   1.29 MB/smpfr-3.1.4-2.t  15% |####                           | Time: 0:00:00   1.68 MB/smpfr-3.1.4-2.t  19% |######                         | Time: 0:00:00   1.59 MB/smpfr-3.1.4-2.t  23% |#######                        | Time: 0:00:00   1.89 MB/smpfr-3.1.4-2.t  27% |########                       | Time: 0:00:00   1.75 MB/smpfr-3.1.4-2.t  31% |#########                      | Time: 0:00:00   1.98 MB/smpfr-3.1.4-2.t  35% |###########                    | Time: 0:00:00   1.89 MB/smpfr-3.1.4-2.t  39% |############                   | Time: 0:00:00   2.08 MB/smpfr-3.1.4-2.t  43% |#############                  | Time: 0:00:00   2.28 MB/smpfr-3.1.4-2.t  47% |##############                 | Time: 0:00:00   2.17 MB/smpfr-3.1.4-2.t  51% |################               | Time: 0:00:00   2.33 MB/smpfr-3.1.4-2.t  55% |#################              | Time: 0:00:00   2.50 MB/smpfr-3.1.4-2.t  59% |##################             | Time: 0:00:00   2.67 MB/smpfr-3.1.4-2.t  63% |###################            | Time: 0:00:00   2.52 MB/smpfr-3.1.4-2.t  67% |####################           | Time: 0:00:00   2.66 MB/smpfr-3.1.4-2.t  71% |######################         | Time: 0:00:00   2.81 MB/smpfr-3.1.4-2.t  75% |#######################        | Time: 0:00:00   2.96 MB/smpfr-3.1.4-2.t  79% |########################       | Time: 0:00:00   3.11 MB/smpfr-3.1.4-2.t  83% |#########################      | Time: 0:00:00   2.94 MB/smpfr-3.1.4-2.t  87% |###########################    | Time: 0:00:00   3.07 MB/smpfr-3.1.4-2.t  91% |############################   | Time: 0:00:00   3.20 MB/smpfr-3.1.4-2.t  95% |#############################  | Time: 0:00:00   3.32 MB/smpfr-3.1.4-2.t  99% |############################## | Time: 0:00:00   3.45 MB/smpfr-3.1.4-2.t 100% |###############################| Time: 0:00:00   3.46 MB/smpfr-3.1.4-2.t 100% |###############################| Time: 0:00:00   3.44 MB/s
mpc-1.0.3-1.ta   0% |                              | ETA:  --:--:--   0.00  B/smpc-1.0.3-1.ta  17% |#####                          | Time: 0:00:00   1.31 MB/smpc-1.0.3-1.ta  34% |##########                     | Time: 0:00:00   1.30 MB/smpc-1.0.3-1.ta  51% |################               | Time: 0:00:00   1.27 MB/smpc-1.0.3-1.ta  69% |#####################          | Time: 0:00:00   1.67 MB/smpc-1.0.3-1.ta  86% |##########################     | Time: 0:00:00   1.58 MB/smpc-1.0.3-1.ta 100% |###############################| Time: 0:00:00   1.82 MB/smpc-1.0.3-1.ta 100% |###############################| Time: 0:00:00   1.81 MB/s
symengine-0.2.   0% |                              | ETA:  --:--:--   0.00  B/ssymengine-0.2.   1% |                               | Time: 0:00:00   1.30 MB/ssymengine-0.2.   3% |#                              | Time: 0:00:00   1.26 MB/ssymengine-0.2.   5% |#                              | Time: 0:00:00   1.26 MB/ssymengine-0.2.   7% |##                             | Time: 0:00:00   1.65 MB/ssymengine-0.2.   9% |###                            | Time: 0:00:00   1.57 MB/ssymengine-0.2.  11% |###                            | Time: 0:00:00   1.51 MB/ssymengine-0.2.  13% |####                           | Time: 0:00:00   1.74 MB/ssymengine-0.2.  15% |####                           | Time: 0:00:00   1.68 MB/ssymengine-0.2.  17% |#####                          | Time: 0:00:00   1.81 MB/ssymengine-0.2.  19% |######                         | Time: 0:00:00   1.80 MB/ssymengine-0.2.  21% |######                         | Time: 0:00:00   1.97 MB/ssymengine-0.2.  23% |#######                        | Time: 0:00:00   2.14 MB/ssymengine-0.2.  25% |#######                        | Time: 0:00:00   2.04 MB/ssymengine-0.2.  27% |########                       | Time: 0:00:00   2.18 MB/ssymengine-0.2.  29% |#########                      | Time: 0:00:00   2.32 MB/ssymengine-0.2.  31% |#########                      | Time: 0:00:00   2.24 MB/ssymengine-0.2.  33% |##########                     | Time: 0:00:00   2.37 MB/ssymengine-0.2.  35% |##########                     | Time: 0:00:00   2.50 MB/ssymengine-0.2.  37% |###########                    | Time: 0:00:00   2.64 MB/ssymengine-0.2.  39% |############                   | Time: 0:00:00   2.77 MB/ssymengine-0.2.  41% |############                   | Time: 0:00:00   2.65 MB/ssymengine-0.2.  43% |#############                  | Time: 0:00:00   2.75 MB/ssymengine-0.2.  45% |##############                 | Time: 0:00:00   2.87 MB/ssymengine-0.2.  47% |##############                 | Time: 0:00:00   2.98 MB/ssymengine-0.2.  49% |###############                | Time: 0:00:00   3.10 MB/ssymengine-0.2.  51% |###############                | Time: 0:00:00   2.96 MB/ssymengine-0.2.  53% |################               | Time: 0:00:00   3.06 MB/ssymengine-0.2.  55% |#################              | Time: 0:00:00   3.16 MB/ssymengine-0.2.  57% |#################              | Time: 0:00:00   3.26 MB/ssymengine-0.2.  59% |##################             | Time: 0:00:00   3.37 MB/ssymengine-0.2.  60% |##################             | Time: 0:00:00   3.47 MB/ssymengine-0.2.  62% |###################            | Time: 0:00:00   3.34 MB/ssymengine-0.2.  64% |####################           | Time: 0:00:00   3.42 MB/ssymengine-0.2.  66% |####################           | Time: 0:00:00   3.52 MB/ssymengine-0.2.  68% |#####################          | Time: 0:00:00   3.61 MB/ssymengine-0.2.  70% |#####################          | Time: 0:00:00   3.71 MB/ssymengine-0.2.  72% |######################         | Time: 0:00:00   3.80 MB/ssymengine-0.2.  74% |#######################        | Time: 0:00:00   3.90 MB/ssymengine-0.2.  76% |#######################        | Time: 0:00:00   3.76 MB/ssymengine-0.2.  78% |########################       | Time: 0:00:00   3.84 MB/ssymengine-0.2.  80% |#########################      | Time: 0:00:00   3.92 MB/ssymengine-0.2.  82% |#########################      | Time: 0:00:00   4.01 MB/ssymengine-0.2.  84% |##########################     | Time: 0:00:00   4.09 MB/ssymengine-0.2.  86% |##########################     | Time: 0:00:00   4.18 MB/ssymengine-0.2.  88% |###########################    | Time: 0:00:00   4.26 MB/ssymengine-0.2.  90% |############################   | Time: 0:00:00   4.35 MB/ssymengine-0.2.  92% |############################   | Time: 0:00:00   4.21 MB/ssymengine-0.2.  94% |#############################  | Time: 0:00:00   4.29 MB/ssymengine-0.2.  96% |#############################  | Time: 0:00:00   4.37 MB/ssymengine-0.2.  98% |############################## | Time: 0:00:00   4.45 MB/ssymengine-0.2. 100% |###############################| Time: 0:00:00   4.52 MB/ssymengine-0.2. 100% |###############################| Time: 0:00:00   4.51 MB/s
Extracting packages ...
[                    ]|                                                  |   0%[gmp                 ]|                                                  |   0%[mpfr                ]|############                                      |  25%[mpc                 ]|#########################                         |  50%[symengine           ]|#####################################             |  75%[      COMPLETE      ]|##################################################| 100%
Linking packages ...
[      COMPLETE      ]|                                                  |   0%[gmp                 ]|                                                  |   0%[gmp                 ]|                                                  |   0%[mpfr                ]|############                                      |  25%[mpc                 ]|#########################                         |  50%[symengine           ]|#####################################             |  75%[      COMPLETE      ]|##################################################| 100%
INFO: Building HDF5
INFO: Building ODEInterface
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4678.37:

      CALL BLDFSC ('INITIAL ', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)       
                                     1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4853.40:

         CALL BLDFSC ('ACCEPTED', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)    
                                        1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4678.37:

      CALL BLDFSC ('INITIAL ', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)       
                                     1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)
/home/vagrant/.julia/v0.6/ODEInterface/src/bvpsol.f:4853.40:

         CALL BLDFSC ('ACCEPTED', Y, N, DUMMY, YWGT, YMAX, TOL, ONE)    
                                        1
Warning: Rank mismatch in argument 'yold' at (1) (rank-1 and scalar)


!!! bvpsol: only non commercial use !!!
Please note: bvpsol's license only covers non commercial use!
see using ODEInterface; help_bvpsol_license() for the complete
license text.
INFO: Building Plots
INFO: Cannot find deps/plotly-latest.min.js... downloading latest version.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 1771k  100 1771k    0     0  2133k      0 --:--:-- --:--:-- --:--:-- 2131k
INFO: Building Unitful
INFO: Default units, dimensions, and logic are set in /home/vagrant/.julia/v0.6/Unitful/deps/Defaults.jl
INFO: Testing OrdinaryDiffEq
WARNING: replacing module IterativeSolvers.
  5.088164 seconds (2.94 M allocations: 125.874 MB, 1.30% gc time)
Convergence Test on Linear
Special RKs
Convergence Test on Stiff
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isfinite(::Array{Float64,1}) at ./deprecated.jl:50
 in check_isfinite(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:38
 in trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:91
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::OrdinaryDiffEq.##70#72{Float64,Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in ode_solve(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.ImplicitEuler,Float64,Float64,1,Float64,Float64,Float64,Float64,Float64,DiffEqProblemLibrary.##1#2,OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.#ODE_DEFAULT_CALLBACK,OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/implicit_integrators.jl:14
 in #solve#120(::Rational{Int64}, ::Bool, ::Int64, ::DiffEqBase.ExplicitRKTableau, ::Bool, ::Void, ::Symbol, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Bool, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Void, ::Void, ::Rational{Int64}, ::Bool, ::Void, ::Void, ::Int64, ::Float64, ::Float64, ::Bool, ::OrdinaryDiffEq.#ODE_DEFAULT_NORM, ::OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Int64, ::String, ::Void, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:185
 in (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at ./<missing>:0
 in (::DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.ImplicitEuler})(::Int64) at ./<missing>:0
 in collect(::Base.Generator{UnitRange{Int64},DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.ImplicitEuler}}) at ./array.jl:366
 in #test_convergence#19(::Bool, ::Bool, ::Array{Any,1}, ::Function, ::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler) at /home/vagrant/.julia/v0.6/DiffEqDevTools/src/convergence.jl:44
 in (::DiffEqDevTools.#kw##test_convergence)(::Array{Any,1}, ::DiffEqDevTools.#test_convergence, ::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_convergence_tests.jl:31 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:15 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_convergence_tests.jl, in expression starting on line 14
WARNING: slice is deprecated, use view instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in slice(::Array{Float64,2}, ::Vararg{Any,N}) at ./deprecated.jl:30
 in sumabs2j at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:1 [inlined]
 in trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:105
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::OrdinaryDiffEq.##70#72{Float64,Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in ode_solve(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.ImplicitEuler,Float64,Float64,1,Float64,Float64,Float64,Float64,Float64,DiffEqProblemLibrary.##1#2,OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.#ODE_DEFAULT_CALLBACK,OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/implicit_integrators.jl:14
 in #solve#120(::Rational{Int64}, ::Bool, ::Int64, ::DiffEqBase.ExplicitRKTableau, ::Bool, ::Void, ::Symbol, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Bool, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Void, ::Void, ::Rational{Int64}, ::Bool, ::Void, ::Void, ::Int64, ::Float64, ::Float64, ::Bool, ::OrdinaryDiffEq.#ODE_DEFAULT_NORM, ::OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Int64, ::String, ::Void, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:185
 in (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at ./<missing>:0
 in (::DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.ImplicitEuler})(::Int64) at ./<missing>:0
 in collect(::Base.Generator{UnitRange{Int64},DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.ImplicitEuler}}) at ./array.jl:366
 in #test_convergence#19(::Bool, ::Bool, ::Array{Any,1}, ::Function, ::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler) at /home/vagrant/.julia/v0.6/DiffEqDevTools/src/convergence.jl:44
 in (::DiffEqDevTools.#kw##test_convergence)(::Array{Any,1}, ::DiffEqDevTools.#test_convergence, ::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_convergence_tests.jl:31 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:15 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_convergence_tests.jl, in expression starting on line 14
WARNING: slice is deprecated, use view instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in slice(::Array{Float64,2}, ::Vararg{Any,N}) at ./deprecated.jl:30
 in sumabs2j at /home/vagrant/.julia/v0.6/NLsolve/src/utils.jl:1 [inlined]
 in trust_region_(::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/NLsolve/src/trust_region.jl:145
 in #nlsolve#17(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:24
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::NLsolve.DifferentiableMultivariateFunction, ::Array{Float64,1}) at ./<missing>:0
 in #nlsolve#19(::Symbol, ::Float64, ::Float64, ::Int64, ::Bool, ::Bool, ::Bool, ::Function, ::Float64, ::Bool, ::Bool, ::NLsolve.#nlsolve, ::OrdinaryDiffEq.##70#72{Float64,Float64}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/NLsolve/src/nlsolve_func_defs.jl:70
 in (::NLsolve.#kw##nlsolve)(::Array{Any,1}, ::NLsolve.#nlsolve, ::Function, ::Array{Float64,1}) at ./<missing>:0
 in ode_solve(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.ImplicitEuler,Float64,Float64,1,Float64,Float64,Float64,Float64,Float64,DiffEqProblemLibrary.##1#2,OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.#ODE_DEFAULT_CALLBACK,OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/implicit_integrators.jl:14
 in #solve#120(::Rational{Int64}, ::Bool, ::Int64, ::DiffEqBase.ExplicitRKTableau, ::Bool, ::Void, ::Symbol, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Bool, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Void, ::Void, ::Rational{Int64}, ::Bool, ::Void, ::Void, ::Int64, ::Float64, ::Float64, ::Bool, ::OrdinaryDiffEq.#ODE_DEFAULT_NORM, ::OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Int64, ::String, ::Void, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:185
 in (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at ./<missing>:0
 in (::DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.ImplicitEuler})(::Int64) at ./<missing>:0
 in collect(::Base.Generator{UnitRange{Int64},DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.ImplicitEuler}}) at ./array.jl:366
 in #test_convergence#19(::Bool, ::Bool, ::Array{Any,1}, ::Function, ::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler) at /home/vagrant/.julia/v0.6/DiffEqDevTools/src/convergence.jl:44
 in (::DiffEqDevTools.#kw##test_convergence)(::Array{Any,1}, ::DiffEqDevTools.#test_convergence, ::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.ImplicitEuler) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_convergence_tests.jl:31 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:15 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_convergence_tests.jl, in expression starting on line 14
Special RKs
Convergence Test on Stiff
 30.883945 seconds (17.97 M allocations: 1023.204 MB, 1.14% gc time)
WARNING: Base.drop is deprecated.
  likely near /home/vagrant/.julia/v0.6/Showoff/src/Showoff.jl:6
Solve and Plot
 19.231855 seconds (4.68 M allocations: 203.284 MB, 0.59% gc time)
  2.535628 seconds (1.56 M allocations: 62.255 MB, 1.35% gc time)
[DifferentialEquations.jl] Initializing backend: ODEInterface
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{BigFloat,2}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:18 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_unrolled_comparison_tests.jl, in expression starting on line 288
163.005525 seconds (120.15 M allocations: 4.322 GB, 2.64% gc time)
Solve and Plot
WARNING: J::UniformScaling - x::Number is deprecated, use J.λ - x instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in -(::UniformScaling{Int64}, ::Float64) at ./deprecated.jl:50
 in ode_solve(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rosenbrock32,Float64,Float64,1,Float64,Float64,Float64,Float64,Float64,DiffEqProblemLibrary.##1#2,OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.#ODE_DEFAULT_CALLBACK,OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/rosenbrock_integrators.jl:224
 in #solve#120(::Float64, ::Bool, ::Int64, ::DiffEqBase.ExplicitRKTableau, ::Bool, ::Void, ::Symbol, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Bool, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Void, ::Void, ::Rational{Int64}, ::Bool, ::Void, ::Void, ::Int64, ::Float64, ::Float64, ::Bool, ::OrdinaryDiffEq.#ODE_DEFAULT_NORM, ::OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Int64, ::String, ::Void, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.Rosenbrock32, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:185
 in solve(::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.Rosenbrock32, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:19 (repeats 2 times)
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:19 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_initdt_tests.jl, in expression starting on line 5
Solve and Plot
  1.684426 seconds (649.97 k allocations: 26.948 MB, 2.35% gc time)
WARNING: J::UniformScaling - x::Number is deprecated, use J.λ - x instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in -(::UniformScaling{Int64}, ::Float64) at ./deprecated.jl:50
 in ode_solve(::OrdinaryDiffEq.ODEIntegrator{OrdinaryDiffEq.Rosenbrock23,Float64,Float64,1,Float64,Float64,Float64,Float64,Float64,DiffEqProblemLibrary.##1#2,OrdinaryDiffEq.#ODE_DEFAULT_NORM,OrdinaryDiffEq.#ODE_DEFAULT_CALLBACK,OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/integrators/rosenbrock_integrators.jl:101
 in #solve#120(::Rational{Int64}, ::Bool, ::Int64, ::DiffEqBase.ExplicitRKTableau, ::Bool, ::Void, ::Symbol, ::Bool, ::Bool, ::Array{Float64,1}, ::Array{Float64,1}, ::Bool, ::Float64, ::Rational{Int64}, ::Rational{Int64}, ::Void, ::Void, ::Rational{Int64}, ::Bool, ::Void, ::Void, ::Int64, ::Float64, ::Float64, ::Bool, ::OrdinaryDiffEq.#ODE_DEFAULT_NORM, ::OrdinaryDiffEq.#ODE_DEFAULT_ISOUTOFDOMAIN, ::Bool, ::Int64, ::String, ::Void, ::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.Rosenbrock23, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/src/solve.jl:185
 in (::DiffEqBase.#kw##solve)(::Array{Any,1}, ::DiffEqBase.#solve, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.Rosenbrock23, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}) at ./<missing>:0
 in (::DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.Rosenbrock23})(::Int64) at ./<missing>:0
 in collect(::Base.Generator{UnitRange{Int64},DiffEqDevTools.##20#21{Bool,Bool,Array{Any,1},Array{Rational{Int64},1},DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2},OrdinaryDiffEq.Rosenbrock23}}) at ./array.jl:366
 in #test_convergence#19(::Bool, ::Bool, ::Array{Any,1}, ::Function, ::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.Rosenbrock23) at /home/vagrant/.julia/v0.6/DiffEqDevTools/src/convergence.jl:44
 in test_convergence(::Array{Rational{Int64},1}, ::DiffEqBase.ODETestProblem{Float64,Float64,false,DiffEqProblemLibrary.##1#2}, ::OrdinaryDiffEq.Rosenbrock23) at /home/vagrant/.julia/v0.6/DiffEqDevTools/src/convergence.jl:43
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:20 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_rosenbrock_tests.jl, in expression starting on line 12
  7.838606 seconds (3.39 M allocations: 153.780 MB, 1.17% gc time)
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #19 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##19#20}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 25
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #19 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##19#20}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##19#20}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 25
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #25 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##25#26}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 62
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #25 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##25#26}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##25#26}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 62
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #29 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##29#30}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 82
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #29 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##29#30}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##29#30}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 82
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #33 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##33#34}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 103
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #33 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##33#34}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##33#34}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 103
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #37 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##37#38}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 123
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #37 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##37#38}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##37#38}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 123
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #41 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##41#42}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 144
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #41 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##41#42}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##41#42}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 144
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #45 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##45#46}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 165
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #45 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##45#46}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##45#46}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 165
WARNING: redefining constant linear_bigα
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{BigFloat,1}) at ./deprecated.jl:50
 in #51 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{BigFloat,1},1}, ::Base.Generator{Array{Array{BigFloat,1},1},##51#52}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{BigFloat,1},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 195
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{BigFloat,1}) at ./deprecated.jl:50
 in #51 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{BigFloat,1}, ::Base.Generator{Array{Array{BigFloat,1},1},##51#52}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{BigFloat,1},1}, ::Base.Generator{Array{Array{BigFloat,1},1},##51#52}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{BigFloat,1},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 195
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #55 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##55#56}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 219
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #55 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##55#56}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##55#56}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 219
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #59 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##59#60}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 243
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #59 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##59#60}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##59#60}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 243
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #63 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##63#64}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 267
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #63 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##63#64}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##63#64}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 267
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #67 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##67#68}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 291
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #67 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##67#68}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##67#68}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 291
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #71 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##71#72}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 315
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #71 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##71#72}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##71#72}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 315
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #75 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##75#76}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 339
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #75 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##75#76}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##75#76}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 339
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #79 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##79#80}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:379
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 367
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in #79 at ./<missing>:0 [inlined]
 in next at ./generator.jl:25 [inlined]
 in collect_to!(::Array{Float64,1}, ::Base.Generator{Array{Array{Float64,2},1},##79#80}, ::Int64, ::Int64) at ./array.jl:399
 in _collect(::Array{Array{Float64,2},1}, ::Base.Generator{Array{Array{Float64,2},1},##79#80}, ::Base.EltypeUnknown, ::Base.HasShape) at ./array.jl:380
 in map(::Function, ::Array{Array{Float64,2},1}) at ./abstractarray.jl:1784
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:711 [inlined]
 in macro expansion; at ./util.jl:194 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_dense_tests.jl, in expression starting on line 367
 65.986893 seconds (39.82 M allocations: 1.199 GB, 1.10% gc time)
  0.000383 seconds (1.01 k allocations: 39.516 KB)
  0.000376 seconds (931 allocations: 29.656 KB)
  5.026832 seconds (2.67 M allocations: 888.031 MB, 28.80% gc time)
  8.739553 seconds (5.64 M allocations: 204.925 MB, 2.52% gc time)
WARNING: Method definition event_f(Any, Any) in module Main at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_event_tests.jl:16 overwritten at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_cache_tests.jl:13.
WARNING: Method definition apply_event!(Any, Any) in module Main at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_event_tests.jl:20 overwritten at /home/vagrant/.julia/v0.6/OrdinaryDiffEq/test/ode/ode_cache_tests.jl:17.
OrdinaryDiffEq.Euler
OrdinaryDiffEq.Midpoint
OrdinaryDiffEq.RK4
OrdinaryDiffEq.BS3
OrdinaryDiffEq.BS5
OrdinaryDiffEq.DP5
OrdinaryDiffEq.DP5Threaded
OrdinaryDiffEq.DP8
OrdinaryDiffEq.ExplicitRK
OrdinaryDiffEq.Feagin10
OrdinaryDiffEq.Feagin12
OrdinaryDiffEq.Feagin14
OrdinaryDiffEq.TanYam7
OrdinaryDiffEq.Tsit5
OrdinaryDiffEq.TsitPap8
OrdinaryDiffEq.Vern6
OrdinaryDiffEq.Vern7
OrdinaryDiffEq.Vern8
OrdinaryDiffEq.Vern9
OrdinaryDiffEq.Euler
OrdinaryDiffEq.Midpoint
OrdinaryDiffEq.RK4
OrdinaryDiffEq.BS3
OrdinaryDiffEq.BS5
OrdinaryDiffEq.DP5
OrdinaryDiffEq.DP5Threaded
OrdinaryDiffEq.DP8
OrdinaryDiffEq.ExplicitRK
OrdinaryDiffEq.Feagin10
OrdinaryDiffEq.Feagin12
OrdinaryDiffEq.Feagin14
OrdinaryDiffEq.TanYam7
OrdinaryDiffEq.Tsit5
OrdinaryDiffEq.TsitPap8
OrdinaryDiffEq.Vern6
OrdinaryDiffEq.Vern7
OrdinaryDiffEq.Vern8
OrdinaryDiffEq.Vern9
 57.218508 seconds (30.12 M allocations: 892.819 MB, 0.88% gc time)
  1.766830 seconds (722.11 k allocations: 32.401 MB, 0.68% gc time)
Convergence Test on Linear
Feagin RKs
WARNING: redefining constant linear_bigα
  0.001928 seconds (13.42 k allocations: 681.697 KB)
  0.002659 seconds (20.63 k allocations: 1.020 MB)
  0.007144 seconds (33.91 k allocations: 1.675 MB)
117.275489 seconds (27.04 M allocations: 666.740 MB, 0.54% gc time)
  6.422330 seconds (3.00 M allocations: 123.036 MB, 1.24% gc time)
  5.545720 seconds (3.84 M allocations: 141.999 MB, 1.81% gc time)
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:996
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Unitful/src/Unitful.jl, in expression starting on line 674
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:996
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Unitful/src/Unitful.jl, in expression starting on line 675
Units for Number pass
Units for 2D pass
120.977565 seconds (75.31 M allocations: 2.017 GB, 1.34% gc time)
elapsed time: 621.143287417 seconds
INFO: OrdinaryDiffEq tests passed
INFO: Removing AlgebraicDiffEq v0.1.0
INFO: Removing BinDeps v0.4.5
INFO: Removing Blosc v0.1.7
INFO: Removing ChunkedArrays v0.1.1
INFO: Removing ColorTypes v0.2.12
INFO: Removing Colors v0.6.9
INFO: Removing Conda v0.4.0
INFO: Removing DiffEqDevTools v0.2.1
INFO: Removing DiffEqProblemLibrary v0.3.1
INFO: Removing Distributions v0.11.0
INFO: Removing EllipsisNotation v0.0.2
INFO: Removing FileIO v0.2.0
INFO: Removing FiniteElementDiffEq v0.0.5
INFO: Removing FixedPointNumbers v0.2.1
INFO: Removing FixedSizeArrays v0.2.5
INFO: Removing HDF5 v0.7.0
INFO: Removing IterativeSolvers v0.2.2
INFO: Removing Iterators v0.2.0
INFO: Removing JLD v0.6.6
INFO: Removing LegacyStrings v0.1.1
INFO: Removing Measures v0.0.3
INFO: Removing ODEInterface v0.0.10
INFO: Removing PDMats v0.5.1
INFO: Removing ParameterizedFunctions v0.4.1
INFO: Removing PlotThemes v0.1.0
INFO: Removing PlotUtils v0.2.0
INFO: Removing Plots v0.10.1
INFO: Removing Reexport v0.0.3
INFO: Removing Rmath v0.1.4
INFO: Removing SHA v0.3.0
INFO: Removing Showoff v0.0.7
INFO: Removing StatsBase v0.11.1
INFO: Removing StatsFuns v0.3.1
INFO: Removing SymEngine v0.1.2
INFO: Removing URIParser v0.1.6
INFO: Removing Unitful v0.0.4
INFO: Removing VectorizedRoutines v0.0.2

>>> End of log
