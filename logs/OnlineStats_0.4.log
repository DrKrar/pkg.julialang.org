>>> 'Pkg.add("OnlineStats")' log
INFO: Cloning cache of OnlineStats from git://github.com/joshday/OnlineStats.jl.git
INFO: Installing ArrayViews v0.6.3
INFO: Installing Dates v0.4.4
INFO: Installing Distributions v0.8.4
INFO: Installing Docile v0.5.16
INFO: Installing MultivariateStats v0.2.1
INFO: Installing OnlineStats v0.1.3
INFO: Installing PDMats v0.3.5
INFO: Installing Reexport v0.0.2
INFO: Installing StatsBase v0.7.1
INFO: Installing StatsFuns v0.1.2
INFO: Package database updated

>>> 'Pkg.test("OnlineStats")' log
Julia Version 0.4.0-pre+7097
Commit c4b089f (2015-08-29 13:17 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Computing test dependencies for OnlineStats...
INFO: Installing FactCheck v0.4.0
INFO: Installing GLM v0.4.7
INFO: Installing NumericFuns v0.2.3
INFO: Testing OnlineStats
Common
  > Helper Functions
  > Weighting
  > onlinefit!()
  > Show and print methods
Output here is messy for the sake of getting coverage for show and print
OnlineStat: OnlineStats.Mean{OnlineStats.EqualWeighting}
 *        μ:  0.509801
 *     nobs:  100OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=0.5098008623343027 nobs=100}[OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=0.5098008623343027 nobs=100}, OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=0.5098008623343027 nobs=100}]OnlineStats.BernoulliBootstrap{OnlineStats.OnlineStat}
Online Bootstrap of OnlineStats.Mean{OnlineStats.EqualWeighting} using function: mean()
*  nreplicates = 1000
*         nobs = 0
Online OnlineStats.FitNormal{OnlineStats.EqualWeighting}, nobs:100
Distributions.Normal(μ=-0.14580944281101002, σ=1.0308683583271012)  > Show DistributionStat
  > Bias
104 facts verified.
Mean
  > Mean
  > Means
44 facts verified.
Variance
  > Variance
  > Variances
76 facts verified.
Summary
28 facts verified.
Diff
22 facts verified.
Diffs
24 facts verified.
Extrema
24 facts verified.
Moments
8 facts verified.
FiveNumberSummary
6 facts verified.
Quantiles
  > QuantileSGD
  > QuantileMM
18 facts verified.
Linear Model
  > LinReg
  > StepwiseReg
  > SparseReg
326 facts verified.
sweep!()
10 facts verified.
Quantile Regression
  > QuantRegMM
14 facts verified.
LogReg
  > LogRegSGD2
  > LogRegMM
10 facts verified.
Distributions
  > Bernoulli
  > Beta
  > Binomial
  > Cauchy
  > Dirichlet
  > Exponential
  > Gamma
  > LogNormal
  > Multinomial
  > MvNormal
  > Normal
  > Poisson
Out of 130 total facts:
  Verified: 129
  Pending:  1
NormalMix
  > Offline: emstart() and em()
  > Online: updatebatch!
  > Online: update!
  > Online: other
21 facts verified.
CovarianceMatrix
  > update! vs. updatebatch!
  > PCA
16 facts verified.
OnlinePCA
Out of 1 total fact:
  Pending:  1
Bootstrap
  > BernoulliBootstrap
  > PoissonBootstrap
  > FrozenBootstrap
1 fact verified.
Test OnlineFLS
8 facts verified.
Adagrad
  > L2Regression
  > L1Regression
  > LogisticRegression
  > PoissonRegression
  > QuantileRegression
  > SVMLike
  > HuberRegression
17 facts verified.
SGD
  > L2Regression
  > L1Regression
  > LogisticRegression
  > PoissonRegression
  > QuantileRegression
  > SVMLike
  > HuberRegression
  > LASSO update
65 facts verified.
Momentum
  > L2Regression
  > L1Regression
  > LogisticRegression
  > PoissonRegression
  > QuantileRegression
  > SVMLike
  > HuberRegression
14 facts verified.
$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:
    function ##streamed#14362(INPUT1) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:
        mean(update_get!(mn,abs(diff(update_get!(d,INPUT1)))))
    end # line 253:
    ##streamed#14362
end))
$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:
    function ##streamed#14391(INPUT1) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:
        update_get!(m,diff(update_get!(d,INPUT1)))
    end # line 253:
    ##streamed#14391
end))
$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:
    function ##streamed#14394(INPUT1) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:
        begin  # /home/vagrant/.julia/v0.4/OnlineStats/test/react_test.jl, line 55:
            df = diff(update_get!(d,INPUT1)) # line 56:
            if nobs(d) > 1
                mean(update_get!(m,df))
            else 
                0.0
            end
        end
    end # line 253:
    ##streamed#14394
end))
$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:
    function ##streamed#14399(INPUT1,INPUT2) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:
        update_get!(reg,INPUT1,INPUT2)
    end # line 253:
    ##streamed#14399
end))
$(Expr(:escape, quote  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 250:
    function ##streamed#14401(INPUT1,INPUT2) # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:
        begin 
            ##14411 = update_get!(reg1,INPUT1,INPUT2)
            ##14413 = update_get!(reg2,INPUT1,INPUT2)
            (INPUT2 - predict(##14411,INPUT1),INPUT2 - predict(##14413,INPUT1))
        end
    end # line 253:
    ##streamed#14401
end))
React
  > DiffMean1
d: OnlineStats.Diff{Float64}{diff=-5.0 last=3.0 nobs=3}
m: OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=-0.6666666666666665 nobs=3}
  > DiffMean2
d: OnlineStats.Diff{Float64}{diff=-5.0 last=3.0 nobs=3}
m: OnlineStats.Mean{OnlineStats.EqualWeighting}{μ=-1.0 nobs=2}
  > 1 Arg Stream
  > Regression
OnlineStats.Adagrad{OnlineStats.L2Regression,OnlineStats.NoPenalty}{β=[0.9477148015635526,1.99683987342574,3.071968117216515,3.934568643600549,4.854982159098082] nobs=1000000}
  0.140015 seconds (1000.00 k allocations: 45.776 MB, 5.31% gc time)
  0.737319 seconds (5.00 M allocations: 122.070 MB, 3.16% gc time)
  > Mapping pipe and currying
outval: (-8.561777339984321,-8.743990133008731)
Any[:($(Expr(:lambda, Any[:INPUT1,:INPUT2], Any[Any[Any[:INPUT1,ArrayViews.StridedView{Float64,1,0,Array{Float64,2}},0],Any[:INPUT2,Float64,0],Any[symbol("##14411"),OnlineStats.OnlineStat,18],Any[symbol("##14413"),OnlineStats.OnlineStat,18]],Any[Any[:reg1,Any,19],Any[:reg2,Any,19]],Any[],Any[]], :(begin  # /home/vagrant/.julia/v0.4/OnlineStats/src/react.jl, line 251:
        ##14411 = (OnlineStatsTests.ReactTest.update_get!)(reg1,INPUT1::ArrayViews.StridedView{Float64,1,0,Array{Float64,2}},INPUT2::Float64)::OnlineStats.OnlineStat
        ##14413 = (OnlineStatsTests.ReactTest.update_get!)(reg2,INPUT1::ArrayViews.StridedView{Float64,1,0,Array{Float64,2}},INPUT2::Float64)::OnlineStats.OnlineStat
        return (top(tuple))(INPUT2::Float64 - (OnlineStatsTests.ReactTest.predict)(##14411::OnlineStats.OnlineStat,INPUT1::ArrayViews.StridedView{Float64,1,0,Array{Float64,2}}),INPUT2::Float64 - (OnlineStatsTests.ReactTest.predict)(##14413::OnlineStats.OnlineStat,INPUT1::ArrayViews.StridedView{Float64,1,0,Array{Float64,2}}))::Tuple{Any,Any}
    end::Tuple{Any,Any}))))]
OnlineStats.Adagrad{OnlineStats.L2Regression,OnlineStats.NoPenalty}{β=[1.1194924546454394,1.9940942312724692,2.9011221582286777,4.0017937058225375,4.937502646488384] nobs=1000000}
OnlineStats.SGD{OnlineStats.L2Regression,OnlineStats.NoPenalty}{β=[1.3281793371393387,2.1334972901072313,2.7665295147799087,4.132886888352084,4.534057604702479] nobs=1000000}
  0.341081 seconds (2.00 M allocations: 91.553 MB, 5.22% gc time)
  1.637025 seconds (13.00 M allocations: 274.658 MB, 3.49% gc time)
Out of 15 total facts:
  Verified: 14
  Pending:  1
INFO: OnlineStats tests passed
INFO: Removing FactCheck v0.4.0
INFO: Removing GLM v0.4.7
INFO: Removing NumericFuns v0.2.3

>>> End of log
