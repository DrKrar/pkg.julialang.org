>>> 'Pkg.add("PatternDispatch")' log
INFO: Cloning cache of PatternDispatch from https://github.com/toivoh/PatternDispatch.jl.git
INFO: Installing PatternDispatch v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of PatternDispatch
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("PatternDispatch")' log
Julia Version 0.5.0-dev+3184
Commit fb283c6 (2016-03-17 08:49 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing PatternDispatch
ERROR: LoadError: LoadError: LoadError: StackOverflowError:
 [inlined code] from /home/vagrant/.julia/v0.5/PatternDispatch/src/Nodes.jl:53
 in &(::PatternDispatch.Nodes.Isa, ::PatternDispatch.Nodes.Isa) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Nodes.jl:59
 [inlined code] from ./dict.jl:771
 in intension(::PatternDispatch.Nodes.Isa, ::PatternDispatch.Nodes.Isa, ::Vararg{PatternDispatch.Patterns.Node{Bool}}) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Patterns.jl:57
 [inlined code] from /home/vagrant/.julia/v0.5/PatternDispatch/src/Patterns.jl:63
 in simplify!(::Dict{PatternDispatch.PartialOrder.Node{PatternDispatch.Methods.Method},PatternDispatch.PartialOrder.Node{PatternDispatch.Methods.Method}}, ::PatternDispatch.PartialOrder.Node{PatternDispatch.Methods.Method}, ::PatternDispatch.Patterns.Intension) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Dispatch.jl:62
 in simplify!(::PatternDispatch.PartialOrder.Node{PatternDispatch.Methods.Method}, ::PatternDispatch.Patterns.Intension) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Dispatch.jl:57
 in simplify(::PatternDispatch.PartialOrder.Node{PatternDispatch.Methods.Method}, ::PatternDispatch.Patterns.Intension) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Dispatch.jl:54
 in compile!(::PatternDispatch.Methods.MethodTable, ::Array{PatternDispatch.Methods.Method,1}, ::Tuple{DataType}) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Methods.jl:115
 in compile!(::PatternDispatch.Methods.MethodTable) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Methods.jl:109
 in (::PatternDispatch.Methods.#f#6)(::Int64, ::Vararg{Int64}) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Methods.jl:71
 in (::PatternDispatch.Methods.#f#6)(::Int64, ::Vararg{Int64}) at /home/vagrant/.julia/v0.5/PatternDispatch/src/Methods.jl:72 (repeats 18677 times)
 [inlined code] from ./boot.jl:331
 in ==(::Array{Any,1}, ::Array{Int64,1}) at ./<no file>:4294967295
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/PatternDispatch/test/test_dispatch.jl, in expression starting on line 8
while loading /home/vagrant/.julia/v0.5/PatternDispatch/test/silenttests.jl, in expression starting on line 2
while loading /home/vagrant/.julia/v0.5/PatternDispatch/test/runtests.jl, in expression starting on line 1
===========================[ ERROR: PatternDispatch ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/PatternDispatch/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("PatternDispatch had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::ASCIIString) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#3(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
