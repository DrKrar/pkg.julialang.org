>>> 'Pkg.add("SGDOptim")' log
INFO: Cloning cache of SGDOptim from https://github.com/lindahua/SGDOptim.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing EmpiricalRisks v0.2.4
INFO: Installing Reexport v0.0.3
INFO: Installing SGDOptim v0.2.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SGDOptim
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SGDOptim")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (2352.0078125 MB free)
Uptime: 20537.0 sec
Load Avg:  0.90966796875  0.7783203125  0.86474609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1121181 s       7653 s     119071 s     574621 s         84 s
#2  3499 MHz     395387 s         86 s      68158 s    1516688 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - SGDOptim                      0.2.2
4 additional packages:
 - ArrayViews                    0.6.4
 - Compat                        0.9.2
 - EmpiricalRisks                0.2.4
 - Reexport                      0.0.3
INFO: Testing SGDOptim
  * streams.jl ...
ERROR: LoadError: LoadError: LoadError: LoadError: LoadError: UndefVarError: FloatingPoint not defined
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:415
 in include_from_node1(::String) at ./loading.jl:488
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:415
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/SGDOptim/test/runtests.jl:9 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/EmpiricalRisks/src/common.jl, in expression starting on line 35
while loading /home/vagrant/.julia/v0.5/EmpiricalRisks/src/EmpiricalRisks.jl, in expression starting on line 84
while loading /home/vagrant/.julia/v0.5/SGDOptim/src/SGDOptim.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.5/SGDOptim/test/streams.jl, in expression starting on line 2
while loading /home/vagrant/.julia/v0.5/SGDOptim/test/runtests.jl, in expression starting on line 6
==============================[ ERROR: SGDOptim ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/SGDOptim/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SGDOptim had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
