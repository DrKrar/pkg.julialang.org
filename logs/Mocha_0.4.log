>>> 'Pkg.add("Mocha")' log
INFO: Cloning cache of JLD from git://github.com/JuliaLang/JLD.jl.git
INFO: Cloning cache of Logging from git://github.com/kmsquire/Logging.jl.git
INFO: Cloning cache of Mocha from git://github.com/pluskid/Mocha.jl.git
INFO: Installing BinDeps v0.3.14
INFO: Installing Blosc v0.1.2
INFO: Installing HDF5 v0.5.0
INFO: Installing JLD v0.5.0
INFO: Installing Logging v0.1.1
INFO: Installing Mocha v0.0.9
INFO: Installing SHA v0.0.4
INFO: Installing URIParser v0.0.5
INFO: Building Blosc
INFO: Building HDF5
WARNING: beginswith is deprecated, use startswith instead.
 in depwarn at ./deprecated.jl:63
 in beginswith at deprecated.jl:30
 in available_versions at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:116
 in package_available at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:111
 in can_provide at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:590
 in _find_library at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:451
 in satisfy! at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:720 (repeats 2 times)
 in anonymous at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:775
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:197
 in evalfile at loading.jl:213 (repeats 2 times)
 in anonymous at pkg/entry.jl:652
 in cd at ./file.jl:22
 in build! at pkg/entry.jl:651
 in build at pkg/entry.jl:663
 in resolve at ./pkg/entry.jl:472
 in edit at pkg/entry.jl:26
 in anonymous at task.jl:365
while loading /home/vagrant/.julia/v0.4/HDF5/deps/build.jl, in expression starting on line 24
WARNING: beginswith is deprecated, use startswith instead.
 in depwarn at ./deprecated.jl:63
 in beginswith at deprecated.jl:30
 in available_versions at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:124
 in package_available at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:111
 in can_provide at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:590
 in _find_library at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:451
 in satisfy! at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:720 (repeats 2 times)
 in anonymous at /home/vagrant/.julia/v0.4/BinDeps/src/dependencies.jl:775
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:197
 in evalfile at loading.jl:213 (repeats 2 times)
 in anonymous at pkg/entry.jl:652
 in cd at ./file.jl:22
 in build! at pkg/entry.jl:651
 in build at pkg/entry.jl:663
 in resolve at ./pkg/entry.jl:472
 in edit at pkg/entry.jl:26
 in anonymous at task.jl:365
while loading /home/vagrant/.julia/v0.4/HDF5/deps/build.jl, in expression starting on line 24
INFO: Building Mocha
Running `g++ -fPIC -Wall -O3 -shared -fopenmp -o libmochaext.so im2col.cpp pooling.cpp`
INFO: Package database updated

>>> 'Pkg.test("Mocha")' log
Julia Version 0.4.0-dev+6253
Commit a97b24b (2015-07-26 15:40 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i7-4960HQ CPU @ 2.60GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing Mocha
Configuring Mocha...
 * CUDA       disabled by default
 * Native Ext disabled by default
Mocha configured, continue loading module...
-- Testing network topology with duplicated blobs
26-Jul 23:11:27:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:27:INFO:root:Topological sorting 1 layers...
26-Jul 23:11:27:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:27:INFO:root:Topological sorting 2 layers...
-- Testing network topology with missing blobs
26-Jul 23:11:27:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:27:INFO:root:Topological sorting 1 layers...
-- Testing network topology with circular dependency
26-Jul 23:11:27:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:27:INFO:root:Topological sorting 2 layers...
-- Testing network topology with multiple back-propagate path
    > Good blob sharing
26-Jul 23:11:27:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:27:INFO:root:Topological sorting 5 layers...
26-Jul 23:11:27:INFO:root:Setup layers...
26-Jul 23:11:28:INFO:root:Network constructed!
26-Jul 23:11:28:DEBUG:root:Destroying network net
    > Bad blob sharing
26-Jul 23:11:29:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:29:INFO:root:Topological sorting 6 layers...
26-Jul 23:11:29:INFO:root:Setup layers...
26-Jul 23:11:29:INFO:root:Network constructed!
-- Testing network topology with dangling blob
    > Good case
26-Jul 23:11:29:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:29:INFO:root:Topological sorting 4 layers...
26-Jul 23:11:29:INFO:root:Setup layers...
26-Jul 23:11:29:INFO:root:Network constructed!
26-Jul 23:11:29:DEBUG:root:Destroying network net
    > Bad case
26-Jul 23:11:29:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:29:INFO:root:Topological sorting 4 layers...
26-Jul 23:11:29:INFO:root:Setup layers...
26-Jul 23:11:29:INFO:root:Network constructed!
26-Jul 23:11:29:DEBUG:root:Destroying network net
    > Good case 2
26-Jul 23:11:29:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:29:INFO:root:Topological sorting 5 layers...
26-Jul 23:11:29:INFO:root:Setup layers...
26-Jul 23:11:30:INFO:root:Network constructed!
26-Jul 23:11:30:DEBUG:root:Destroying network net
    > Bad case 2
26-Jul 23:11:30:INFO:root:Constructing net net on Mocha.CPUBackend...
26-Jul 23:11:30:INFO:root:Topological sorting 6 layers...
26-Jul 23:11:30:INFO:root:Setup layers...
26-Jul 23:11:30:INFO:root:Network constructed!
26-Jul 23:11:30:DEBUG:root:Destroying network net
-- Testing gradients on simple network (example for gradient checking code)
26-Jul 23:11:31:INFO:root:Constructing net TEST on Mocha.CPUBackend...
26-Jul 23:11:31:INFO:root:Topological sorting 4 layers...
26-Jul 23:11:31:INFO:root:Setup layers...
26-Jul 23:11:31:INFO:root:Network constructed!
WARNING: could not attach metadata for @simd loop.
WARNING: could not attach metadata for @simd loop.
-- Testing simple reference counting...
-- Testing glob Utilities
-- Testing RawBLAS{Float32} Utilities
-- Testing RawBLAS{Float64} Utilities
-- Testing blob reshape on Mocha.CPUBackend{Float32}...
-- Testing blob reshape on Mocha.CPUBackend{Float64}...
-- Testing ReLU neuron on Mocha.CPUBackend{Float32}...
    > Forward
    > Backward
-- Testing ReLU neuron on Mocha.CPUBackend{Float64}...
    > Forward
    > Backward
-- Testing Sigmoid neuron on Mocha.CPUBackend{Float32}...
    > Forward
    > Backward
-- Testing Sigmoid neuron on Mocha.CPUBackend{Float64}...
    > Forward
    > Backward
-- Testing Tanh neuron on Mocha.CPUBackend{Float32}...
    > Forward
    > Backward
-- Testing Tanh neuron on Mocha.CPUBackend{Float64}...
    > Forward
    > Backward
-- Testing L2 regularizer on Mocha.CPUBackend{Float32}...
-- Testing L2 regularizer on Mocha.CPUBackend{Float64}...
-- Testing L1 regularizer on Mocha.CPUBackend{Float32}...
-- Testing L1 regularizer on Mocha.CPUBackend{Float64}...
-- Testing L2 constraint on Mocha.CPUBackend{Float32}...
-- Testing L2 constraint on Mocha.CPUBackend{Float64}...
-- Testing DataTransformers on Mocha.CPUBackend{Float32}...
    > SubMean
    > Scale
-- Testing DataTransformers on Mocha.CPUBackend{Float64}...
    > SubMean
    > Scale
-- Testing TiedInnerProductLayer on Mocha.CPUBackend{Float32}...
    > Setup
26-Jul 23:11:36:INFO:root:Constructing net test-tied-ip on Mocha.CPUBackend...
26-Jul 23:11:36:INFO:root:Topological sorting 3 layers...
26-Jul 23:11:36:INFO:root:Setup layers...
26-Jul 23:11:36:INFO:root:Network constructed!
26-Jul 23:11:36:DEBUG:root:Init network test-tied-ip
26-Jul 23:11:36:DEBUG:root:Init parameter weight for layer ip1
26-Jul 23:11:36:DEBUG:root:Init parameter bias for layer ip1
26-Jul 23:11:36:DEBUG:root:Init parameter bias for layer ip2
    > Forward
    > Backward
26-Jul 23:11:37:DEBUG:root:Destroying network test-tied-ip
-- Testing TiedInnerProductLayer on Mocha.CPUBackend{Float64}...
    > Setup
26-Jul 23:11:37:INFO:root:Constructing net test-tied-ip on Mocha.CPUBackend...
26-Jul 23:11:37:INFO:root:Topological sorting 3 layers...
26-Jul 23:11:37:INFO:root:Setup layers...
26-Jul 23:11:37:INFO:root:Network constructed!
26-Jul 23:11:37:DEBUG:root:Init network test-tied-ip
26-Jul 23:11:37:DEBUG:root:Init parameter weight for layer ip1
26-Jul 23:11:37:DEBUG:root:Init parameter bias for layer ip1
26-Jul 23:11:37:DEBUG:root:Init parameter bias for layer ip2
    > Forward
    > Backward
26-Jul 23:11:37:DEBUG:root:Destroying network test-tied-ip
-- Testing SquareLossLayer on Mocha.CPUBackend{Float32}...
    > (10,8,9,10)
-- Testing SquareLossLayer on Mocha.CPUBackend{Float64}...
    > (8,11,9)
-- Testing SplitLayer on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
    > Backward
-- Testing SplitLayer on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float64} ...
    > (6,9) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float64} ...
    > (8,8,11,11) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float64} ...
    > (10,7,8,11,7) (operate on dimension 3)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float64} (with weights)...
    > (7,10) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float64} (with weights)...
    > (7,9,6,7) (operate on dimension 3)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float64} (with weights)...
    > (8,9,8,11,9) (operate on dimension 4)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float32} ...
    > (8,8) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float32} ...
    > (7,9,9,7) (operate on dimension 2)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float32} ...
    > (10,9,6,9,8) (operate on dimension 2)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float32} (with weights)...
    > (11,11) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float32} (with weights)...
    > (9,8,9,8) (operate on dimension 3)
    > Forward
    > Backward
-- Testing SoftmaxLossLayer on Mocha.CPUBackend{Float32} (with weights)...
    > (11,10,11,8,7) (operate on dimension 4)
    > Forward
    > Backward
-- Testing SoftmaxLayer on Mocha.CPUBackend{Float64}...
    > 2-dimensional input, normalize along dimension 1
    > Forward
    > Backward
-- Testing SoftmaxLayer on Mocha.CPUBackend{Float64}...
    > 4-dimensional input, normalize along dimension 1
    > Forward
    > Backward
-- Testing SoftmaxLayer on Mocha.CPUBackend{Float64}...
    > 5-dimensional input, normalize along dimension 1
    > Forward
    > Backward
-- Testing SoftmaxLayer on Mocha.CPUBackend{Float32}...
    > 2-dimensional input, normalize along dimension 1
    > Forward
    > Backward
-- Testing SoftmaxLayer on Mocha.CPUBackend{Float32}...
    > 4-dimensional input, normalize along dimension 3
    > Forward
    > Backward
-- Testing SoftmaxLayer on Mocha.CPUBackend{Float32}...
    > 5-dimensional input, normalize along dimension 3
    > Forward
    > Backward
-- Testing SoftlabelSoftmaxLossLayer on Mocha.CPUBackend{Float64}...
    > (11,6) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftlabelSoftmaxLossLayer on Mocha.CPUBackend{Float64}...
    > (10,9,8,10) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftlabelSoftmaxLossLayer on Mocha.CPUBackend{Float64}...
    > (6,11,10,6,7) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftlabelSoftmaxLossLayer on Mocha.CPUBackend{Float32}...
    > (10,9) (operate on dimension 1)
    > Forward
    > Backward
-- Testing SoftlabelSoftmaxLossLayer on Mocha.CPUBackend{Float32}...
    > (7,10,10,9) (operate on dimension 3)
    > Forward
    > Backward
-- Testing SoftlabelSoftmaxLossLayer on Mocha.CPUBackend{Float32}...
    > (8,7,10,9,11) (operate on dimension 1)
    > Forward
    > Backward
-- Testing convolution layer with shared param on Mocha.CPUBackend{Float64}...
26-Jul 23:11:46:INFO:root:Constructing net test-shared-params on Mocha.CPUBackend...
26-Jul 23:11:46:INFO:root:Topological sorting 5 layers...
26-Jul 23:11:46:INFO:root:Setup layers...
26-Jul 23:11:46:DEBUG:root:ConvolutionLayer(conv2): sharing filters and bias
26-Jul 23:11:46:INFO:root:Network constructed!
26-Jul 23:11:46:DEBUG:root:Init network test-shared-params
26-Jul 23:11:46:DEBUG:root:Init parameter filter for layer conv1
26-Jul 23:11:46:DEBUG:root:Init parameter bias for layer conv1
26-Jul 23:11:46:DEBUG:root:Destroying network test-shared-params
-- Testing inner-product layer with shared param on Mocha.CPUBackend{Float64}...
26-Jul 23:11:47:INFO:root:Constructing net test-shared-params on Mocha.CPUBackend...
26-Jul 23:11:47:INFO:root:Topological sorting 5 layers...
26-Jul 23:11:47:INFO:root:Setup layers...
26-Jul 23:11:47:DEBUG:root:InnerProductLayer(ip2): sharing weights and bias
26-Jul 23:11:47:INFO:root:Network constructed!
26-Jul 23:11:47:DEBUG:root:Init network test-shared-params
26-Jul 23:11:47:DEBUG:root:Init parameter weight for layer ip1
26-Jul 23:11:47:DEBUG:root:Init parameter bias for layer ip1
26-Jul 23:11:47:DEBUG:root:Destroying network test-shared-params
-- Testing convolution layer with shared param on Mocha.CPUBackend{Float32}...
26-Jul 23:11:47:INFO:root:Constructing net test-shared-params on Mocha.CPUBackend...
26-Jul 23:11:47:INFO:root:Topological sorting 5 layers...
26-Jul 23:11:47:INFO:root:Setup layers...
26-Jul 23:11:47:DEBUG:root:ConvolutionLayer(conv2): sharing filters and bias
26-Jul 23:11:47:INFO:root:Network constructed!
26-Jul 23:11:47:DEBUG:root:Init network test-shared-params
26-Jul 23:11:47:DEBUG:root:Init parameter filter for layer conv1
26-Jul 23:11:47:DEBUG:root:Init parameter bias for layer conv1
26-Jul 23:11:47:DEBUG:root:Destroying network test-shared-params
-- Testing inner-product layer with shared param on Mocha.CPUBackend{Float32}...
26-Jul 23:11:47:INFO:root:Constructing net test-shared-params on Mocha.CPUBackend...
26-Jul 23:11:47:INFO:root:Topological sorting 5 layers...
26-Jul 23:11:47:INFO:root:Setup layers...
26-Jul 23:11:47:DEBUG:root:InnerProductLayer(ip2): sharing weights and bias
26-Jul 23:11:47:INFO:root:Network constructed!
26-Jul 23:11:47:DEBUG:root:Init network test-shared-params
26-Jul 23:11:47:DEBUG:root:Init parameter weight for layer ip1
26-Jul 23:11:47:DEBUG:root:Init parameter bias for layer ip1
26-Jul 23:11:47:DEBUG:root:Destroying network test-shared-params
-- Testing ReshapeLayer on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
    > Backward
-- Testing ReshapeLayer on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
    > Backward
-- Testing RandomMask on Mocha.CPUBackend{Float64}
    > 3 input blobs with tensor dims [3,2,6]
    > Setup
    > Forward
    > Backward
-- Testing RandomMask on Mocha.CPUBackend{Float32}
    > 3 input blobs with tensor dims [1,3,5]
    > Setup
    > Forward
    > Backward
-- Testing PowerLayer on Mocha.CPUBackend{Float32}...
    > scale=0.59, shift=0.25, power=2, tensor_dim=6
    > scale=0, shift=0.59, power=2, tensor_dim=3
    > scale=0.55, shift=0.23, power=2, tensor_dim=5
    > scale=0.64, shift=0, power=3, tensor_dim=1
    > scale=0.93, shift=0.63, power=4, tensor_dim=6
    > scale=0.77, shift=0.36, power=0, tensor_dim=3
    > scale=0.74, shift=1.0, power=1, tensor_dim=2
    > scale=0.08, shift=0.81, power=-1, tensor_dim=6
-- Testing PowerLayer on Mocha.CPUBackend{Float64}...
    > scale=0.05, shift=0.84, power=2, tensor_dim=6
    > scale=0, shift=0.19, power=4, tensor_dim=3
    > scale=0.76, shift=0.69, power=2, tensor_dim=4
    > scale=0.26, shift=0, power=3, tensor_dim=3
    > scale=0.54, shift=0.02, power=4, tensor_dim=2
    > scale=0.37, shift=0.23, power=0, tensor_dim=3
    > scale=0.3, shift=0.79, power=1, tensor_dim=6
    > scale=0.2, shift=0.46, power=-1, tensor_dim=5
-- Testing Pooling(Mocha.Pooling.Max)  on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
    > Backward
-- Testing Pooling(Mocha.Pooling.Mean)  on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
    > Backward
-- Testing Pooling(Mocha.Pooling.Max) with padding on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
    > Backward
-- Testing Pooling(Mocha.Pooling.Mean) with padding on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
    > Backward
-- Testing Pooling(Mocha.Pooling.Max)  on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
    > Backward
-- Testing Pooling(Mocha.Pooling.Mean)  on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
    > Backward
-- Testing Pooling(Mocha.Pooling.Max) with padding on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
    > Backward
-- Testing Pooling(Mocha.Pooling.Mean) with padding on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
    > Backward
-- Testing MultinomialLogisticLossLayer{equal,local} on Mocha.CPUBackend{Float64}...
    > [10,10] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{equal,local} on Mocha.CPUBackend{Float64}...
    > [9,7,7,8] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{equal,local} on Mocha.CPUBackend{Float64}...
    > [7,6,11,8,7] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{local,local} on Mocha.CPUBackend{Float64}...
    > [8,11] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{local,local} on Mocha.CPUBackend{Float64}...
    > [7,8,11,6] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{local,local} on Mocha.CPUBackend{Float64}...
    > [8,7,6,7,7] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{global,global} on Mocha.CPUBackend{Float64}...
    > [6,9] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{global,global} on Mocha.CPUBackend{Float64}...
    > [7,10,9,6] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{global,global} on Mocha.CPUBackend{Float64}...
    > [8,6,10,7,9] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{global,local} on Mocha.CPUBackend{Float64}...
    > [8,7] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{global,local} on Mocha.CPUBackend{Float64}...
    > [8,10,11,6] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{global,local} on Mocha.CPUBackend{Float64}...
    > [11,9,11,6,7] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{no,no} on Mocha.CPUBackend{Float64}...
    > [7,11] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{no,no} on Mocha.CPUBackend{Float64}...
    > [10,9,10,11] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{no,no} on Mocha.CPUBackend{Float64}...
    > [9,6,6,6,11] (operate on dimension 2)
-- Testing MultinomialLogisticLossLayer{equal,local} on Mocha.CPUBackend{Float32}...
    > [6,8] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{equal,local} on Mocha.CPUBackend{Float32}...
    > [10,9,8,6] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{equal,local} on Mocha.CPUBackend{Float32}...
    > [10,7,11,9,11] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{local,local} on Mocha.CPUBackend{Float32}...
    > [7,10] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{local,local} on Mocha.CPUBackend{Float32}...
    > [9,10,7,7] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{local,local} on Mocha.CPUBackend{Float32}...
    > [11,8,10,6,11] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{global,global} on Mocha.CPUBackend{Float32}...
    > [8,7] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{global,global} on Mocha.CPUBackend{Float32}...
    > [9,6,9,10] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{global,global} on Mocha.CPUBackend{Float32}...
    > [11,8,9,8,9] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{global,local} on Mocha.CPUBackend{Float32}...
    > [10,6] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{global,local} on Mocha.CPUBackend{Float32}...
    > [9,10,9,7] (operate on dimension 3)
-- Testing MultinomialLogisticLossLayer{global,local} on Mocha.CPUBackend{Float32}...
    > [9,11,10,9,11] (operate on dimension 4)
-- Testing MultinomialLogisticLossLayer{no,no} on Mocha.CPUBackend{Float32}...
    > [7,11] (operate on dimension 1)
-- Testing MultinomialLogisticLossLayer{no,no} on Mocha.CPUBackend{Float32}...
    > [7,11,11,8] (operate on dimension 2)
-- Testing MultinomialLogisticLossLayer{no,no} on Mocha.CPUBackend{Float32}...
    > [7,8,10,11,10] (operate on dimension 2)
-- Testing Memory Output Layer on Mocha.CPUBackend{Float32}...
    > (2,7,3)
-- Testing Memory Output Layer on Mocha.CPUBackend{Float64}...
    > (3,6,5,5)
-- Testing Memory Data Layer on Mocha.CPUBackend{Float32}...
    > (6,4,5,5,5,4)
-- Testing Memory Data Layer on Mocha.CPUBackend{Float64}...
    > (2,5,1,6,4)
-- Testing LRN(Mocha.LRNMode.AcrossChannel) on Mocha.CPUBackend{Float32}...
    > Setup with dims (10,7,10,10)
    > Forward
    > Backward
-- Testing LRN(Mocha.LRNMode.WithinChannel) on Mocha.CPUBackend{Float32}...
    > Setup with dims (11,8,10,9)
    > Forward
    > Backward
-- Testing LRN(Mocha.LRNMode.AcrossChannel) on Mocha.CPUBackend{Float64}...
    > Setup with dims (8,8,10,11)
    > Forward
    > Backward
-- Testing LRN(Mocha.LRNMode.WithinChannel) on Mocha.CPUBackend{Float64}...
    > Setup with dims (8,9,7,10)
    > Forward
    > Backward
-- Testing InplaceLayer on Mocha.CPUBackend{Float64}...
    > Setup
26-Jul 23:12:04:INFO:root:Constructing net test-inplace on Mocha.CPUBackend...
26-Jul 23:12:04:INFO:root:Topological sorting 5 layers...
26-Jul 23:12:04:INFO:root:Setup layers...
26-Jul 23:12:04:INFO:root:Network constructed!
26-Jul 23:12:04:DEBUG:root:Init network test-inplace
26-Jul 23:12:04:DEBUG:root:Init parameter weight for layer ip1
26-Jul 23:12:04:DEBUG:root:Init parameter bias for layer ip1
26-Jul 23:12:04:DEBUG:root:Init parameter weight for layer ip2
26-Jul 23:12:04:DEBUG:root:Init parameter bias for layer ip2
    > Forward
    > Backward
26-Jul 23:12:04:DEBUG:root:Destroying network test-inplace
-- Testing InplaceLayer on Mocha.CPUBackend{Float32}...
    > Setup
26-Jul 23:12:04:INFO:root:Constructing net test-inplace on Mocha.CPUBackend...
26-Jul 23:12:04:INFO:root:Topological sorting 5 layers...
26-Jul 23:12:04:INFO:root:Setup layers...
26-Jul 23:12:04:INFO:root:Network constructed!
26-Jul 23:12:04:DEBUG:root:Init network test-inplace
26-Jul 23:12:04:DEBUG:root:Init parameter weight for layer ip1
26-Jul 23:12:04:DEBUG:root:Init parameter bias for layer ip1
26-Jul 23:12:04:DEBUG:root:Init parameter weight for layer ip2
26-Jul 23:12:04:DEBUG:root:Init parameter bias for layer ip2
    > Forward
    > Backward
26-Jul 23:12:04:DEBUG:root:Destroying network test-inplace
-- Testing InnerProductLayer on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
    > Backward
-- Testing InnerProductLayer on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
    > Backward
-- Testing Index2OnehotLayer on Mocha.CPUBackend{Float32}...
    > 2-dimensional input, expanding along dimension 1
-- Testing Index2OnehotLayer on Mocha.CPUBackend{Float32}...
    > 4-dimensional input, expanding along dimension 1
-- Testing Index2OnehotLayer on Mocha.CPUBackend{Float32}...
    > 5-dimensional input, expanding along dimension 3
-- Testing Index2OnehotLayer on Mocha.CPUBackend{Float64}...
    > 2-dimensional input, expanding along dimension 1
-- Testing Index2OnehotLayer on Mocha.CPUBackend{Float64}...
    > 4-dimensional input, expanding along dimension 2
-- Testing Index2OnehotLayer on Mocha.CPUBackend{Float64}...
    > 5-dimensional input, expanding along dimension 1
-- Testing IdentityLayer on Mocha.CPUBackend{Float32}...
    > Setup
    > Forward
-- Testing IdentityLayer on Mocha.CPUBackend{Float64}...
    > Setup
    > Forward
-- Testing HDF5 Output Layer on Mocha.CPUBackend{Float32}...
    > (2,6)
26-Jul 23:12:05:WARNING:root:HDF5OutputLayer: output file '/tmp/Mocha-26394-kaU5pXzwdfn8mW5qL355bugk5j4u18tk.hdf5' already exists, overwriting
-- Testing HDF5 Output Layer on Mocha.CPUBackend{Float64}...
    > (3,1,4,1)
26-Jul 23:12:06:WARNING:root:HDF5OutputLayer: output file '/tmp/Mocha-26394-TzB3bwevlTiuZJ2oTK5VfwLGhjGD076L.hdf5' already exists, overwriting
-- Testing  HDF5 Data Layer on Mocha.CPUBackend{Float32}...
    > (2,4,1)
-- Testing (Async) HDF5 Data Layer on Mocha.CPUBackend{Float32}...
    > (8,3,8)
26-Jul 23:12:07:INFO:root:AsyncHDF5DataLayer: Stopping IO task...
26-Jul 23:12:07:INFO:root:AsyncHDF5DataLayer: IO Task reaching the end...
-- Testing  HDF5 Data Layer on Mocha.CPUBackend{Float64}...
    > (3,1,3,7,8)
-- Testing (Async) HDF5 Data Layer on Mocha.CPUBackend{Float64}...
    > (2,)
26-Jul 23:12:07:INFO:root:AsyncHDF5DataLayer: Stopping IO task...
26-Jul 23:12:07:INFO:root:AsyncHDF5DataLayer: IO Task reaching the end...
-- Testing  HDF5 Data Layer (shuffle,n=6,b=4) on Mocha.CPUBackend{Float32}...
WARNING: mmap_array{T,N}(::Type{T},dims::NTuple{N,Integer},s::IO,offset=position(s)) is deprecated, use Mmap.mmap(s,Array{T,N},dims,offset) instead.
 in depwarn at ./deprecated.jl:63
 in mmap_array at deprecated.jl:49
 in readmmap at /home/vagrant/.julia/v0.4/HDF5/src/plain.jl:1424
 in readmmap at /home/vagrant/.julia/v0.4/HDF5/src/plain.jl:1431
 in map at ./essentials.jl:153
 in call at /home/vagrant/.julia/v0.4/Mocha/src/layers/hdf5-data.jl:53
 in setup at /home/vagrant/.julia/v0.4/Mocha/src/layers/hdf5-data.jl:81
 in test_hdf5_data_layer_shuffle at /home/vagrant/.julia/v0.4/Mocha/test/layers/hdf5-data.jl:102
 in test_hdf5_data_layer at /home/vagrant/.julia/v0.4/Mocha/test/layers/hdf5-data.jl:144
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:197
 in anonymous at /home/vagrant/.julia/v0.4/Mocha/test/runtests.jl:26
 in map_to! at abstractarray.jl:1294
 in map at abstractarray.jl:1316
 in test_dir at /home/vagrant/.julia/v0.4/Mocha/test/runtests.jl:25
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:197
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/Mocha/test/layers/hdf5-data.jl, in expression starting on line 149
-- Testing (Async) HDF5 Data Layer (shuffle,n=6,b=4) on Mocha.CPUBackend{Float32}...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: Stopping IO task...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: IO Task reaching the end...
-- Testing  HDF5 Data Layer (shuffle,n=4,b=6) on Mocha.CPUBackend{Float32}...
-- Testing (Async) HDF5 Data Layer (shuffle,n=4,b=6) on Mocha.CPUBackend{Float32}...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: Stopping IO task...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: IO Task reaching the end...
-- Testing  HDF5 Data Layer (shuffle,n=6,b=4) on Mocha.CPUBackend{Float64}...
WARNING: mmap_array{T,N}(::Type{T},dims::NTuple{N,Integer},s::IO,offset=position(s)) is deprecated, use Mmap.mmap(s,Array{T,N},dims,offset) instead.
 in depwarn at ./deprecated.jl:63
 in mmap_array at deprecated.jl:49
 in readmmap at /home/vagrant/.julia/v0.4/HDF5/src/plain.jl:1424
 in readmmap at /home/vagrant/.julia/v0.4/HDF5/src/plain.jl:1431
 in map at ./essentials.jl:153
 in call at /home/vagrant/.julia/v0.4/Mocha/src/layers/hdf5-data.jl:53
 in setup at /home/vagrant/.julia/v0.4/Mocha/src/layers/hdf5-data.jl:81
 in test_hdf5_data_layer_shuffle at /home/vagrant/.julia/v0.4/Mocha/test/layers/hdf5-data.jl:102
 in test_hdf5_data_layer at /home/vagrant/.julia/v0.4/Mocha/test/layers/hdf5-data.jl:145
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:197
 in anonymous at /home/vagrant/.julia/v0.4/Mocha/test/runtests.jl:26
 in map_to! at abstractarray.jl:1294
 in map at abstractarray.jl:1316
 in test_dir at /home/vagrant/.julia/v0.4/Mocha/test/runtests.jl:25
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:197
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/Mocha/test/layers/hdf5-data.jl, in expression starting on line 149
-- Testing (Async) HDF5 Data Layer (shuffle,n=6,b=4) on Mocha.CPUBackend{Float64}...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: Stopping IO task...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: IO Task reaching the end...
-- Testing  HDF5 Data Layer (shuffle,n=4,b=6) on Mocha.CPUBackend{Float64}...
-- Testing (Async) HDF5 Data Layer (shuffle,n=4,b=6) on Mocha.CPUBackend{Float64}...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: Stopping IO task...
26-Jul 23:12:08:INFO:root:AsyncHDF5DataLayer: IO Task reaching the end...
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Add()} on Mocha.CPUBackend{Float32}...
    > (3,2)
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Subtract()} on Mocha.CPUBackend{Float32}...
    > (8,)
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Multiply()} on Mocha.CPUBackend{Float32}...
    > (8,8,7,1,2)
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Divide()} on Mocha.CPUBackend{Float32}...
    > (4,1,2,6,1,7)
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Add()} on Mocha.CPUBackend{Float64}...
    > (3,4,7,1)
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Subtract()} on Mocha.CPUBackend{Float64}...
    > (5,4)
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Multiply()} on Mocha.CPUBackend{Float64}...
    > (4,5,3,5,8,5)
-- Testing ElementWiseLayer{Mocha.ElementWiseFunctors.Divide()} on Mocha.CPUBackend{Float64}...
    > (1,4,1,6,5)
-- Testing Dropout on Mocha.CPUBackend{Float64}...
    > (3,3,1,3,6)
    > Setup
    > Forward
    > Backward
-- Testing Dropout on Mocha.CPUBackend{Float32}...
    > (2,2,1,5)
    > Setup
    > Forward
    > Backward
-- Testing CropLayer on Mocha.CPUBackend{Float64} ...
    > Setup
    > Forward
-- Testing CropLayer on Mocha.CPUBackend{Float64} with mirror...
    > Setup
    > Forward
-- Testing CropLayer{rnd} on Mocha.CPUBackend{Float64} ...
    > Setup
    > Forward
-- Testing CropLayer{rnd} on Mocha.CPUBackend{Float64} with mirror...
    > Setup
    > Forward
-- Testing CropLayer on Mocha.CPUBackend{Float32} ...
    > Setup
    > Forward
-- Testing CropLayer on Mocha.CPUBackend{Float32} with mirror...
    > Setup
    > Forward
-- Testing CropLayer{rnd} on Mocha.CPUBackend{Float32} ...
    > Setup
    > Forward
-- Testing CropLayer{rnd} on Mocha.CPUBackend{Float32} with mirror...
    > Setup
    > Forward
-- Testing Convolution(frozen=true) on Mocha.CPUBackend{Float64} filter=(3,4)...
    > Setup
    > Forward
    > Backward
-- Testing Convolution(frozen=false) on Mocha.CPUBackend{Float64} filter=(3,4)...
    > Setup
    > Forward
    > Backward
-- Testing Convolution(frozen=true) on Mocha.CPUBackend{Float64} filter=(1,1)...
    > Setup
    > Forward
    > Backward
-- Testing Convolution(frozen=false) on Mocha.CPUBackend{Float64} filter=(1,1)...
    > Setup
    > Forward
    > Backward
-- Testing Convolution(frozen=true) on Mocha.CPUBackend{Float32} filter=(3,4)...
    > Setup
    > Forward
    > Backward
-- Testing Convolution(frozen=false) on Mocha.CPUBackend{Float32} filter=(3,4)...
    > Setup
    > Forward
    > Backward
-- Testing Convolution(frozen=true) on Mocha.CPUBackend{Float32} filter=(1,1)...
    > Setup
    > Forward
    > Backward
-- Testing Convolution(frozen=false) on Mocha.CPUBackend{Float32} filter=(1,1)...
    > Setup
    > Forward
    > Backward
-- Testing ConcatLayer(dim=1) on Mocha.CPUBackend{Float64}...
    > 3-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=2) on Mocha.CPUBackend{Float64}...
    > 3-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=3) on Mocha.CPUBackend{Float64}...
    > 3-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=4) on Mocha.CPUBackend{Float64}...
    > 5-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=5) on Mocha.CPUBackend{Float64}...
    > 6-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=1) on Mocha.CPUBackend{Float32}...
    > 3-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=2) on Mocha.CPUBackend{Float32}...
    > 4-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=3) on Mocha.CPUBackend{Float32}...
    > 6-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=4) on Mocha.CPUBackend{Float32}...
    > 5-dimensional tensor
    > Forward
    > Backward
-- Testing ConcatLayer(dim=5) on Mocha.CPUBackend{Float32}...
    > 5-dimensional tensor
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 1 for 2-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 1 for 3-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 1 for 4-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 1 for 5-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 5 for 6-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 1 for 2-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 1 for 3-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 3 for 4-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 2 for 5-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float32}...
    > Setup (pool along dimension 4 for 6-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 1 for 2-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 1 for 3-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 3 for 4-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 2 for 5-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Max) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 1 for 6-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 1 for 2-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 2 for 3-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 1 for 4-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 3 for 5-D tensors)
    > Forward
    > Backward
-- Testing ChannelPooling(Mocha.Pooling.Mean) on Mocha.CPUBackend{Float64}...
    > Setup (pool along dimension 2 for 6-D tensors)
    > Forward
    > Backward
-- Testing ArgmaxLayer on Mocha.CPUBackend{Float64}...
    > 2-dimensional tensor
    > Setup
    > Forward
-- Testing ArgmaxLayer on Mocha.CPUBackend{Float64}...
    > 4-dimensional tensor
    > Setup
    > Forward
-- Testing ArgmaxLayer on Mocha.CPUBackend{Float64}...
    > 5-dimensional tensor
    > Setup
    > Forward
-- Testing ArgmaxLayer on Mocha.CPUBackend{Float32}...
    > 2-dimensional tensor
    > Setup
    > Forward
-- Testing ArgmaxLayer on Mocha.CPUBackend{Float32}...
    > 4-dimensional tensor
    > Setup
    > Forward
-- Testing ArgmaxLayer on Mocha.CPUBackend{Float32}...
    > 5-dimensional tensor
    > Setup
    > Forward
-- Testing AccuracyLayer on Mocha.CPUBackend{Float32}...
    > (9,9) (operate on dimension 1)
    > Forward
    > Forward Again
    > Forward Again and Again
-- Testing AccuracyLayer on Mocha.CPUBackend{Float32}...
    > (8,8,9,11) (operate on dimension 3)
    > Forward
    > Forward Again
    > Forward Again and Again
-- Testing AccuracyLayer on Mocha.CPUBackend{Float32}...
    > (9,11,8,10,8) (operate on dimension 1)
    > Forward
    > Forward Again
    > Forward Again and Again
-- Testing AccuracyLayer on Mocha.CPUBackend{Float64}...
    > (11,6) (operate on dimension 1)
    > Forward
    > Forward Again
    > Forward Again and Again
-- Testing AccuracyLayer on Mocha.CPUBackend{Float64}...
    > (6,6,6,8) (operate on dimension 3)
    > Forward
    > Forward Again
    > Forward Again and Again
-- Testing AccuracyLayer on Mocha.CPUBackend{Float64}...
    > (11,8,10,6,9) (operate on dimension 1)
    > Forward
    > Forward Again
    > Forward Again and Again
INFO: Mocha tests passed
INFO: No packages to install, update or remove

>>> End of log
