>>> 'Pkg.add("QuantumInfo")' log
INFO: Cloning cache of Cliffords from https://github.com/BBN-Q/Cliffords.jl.git
INFO: Cloning cache of QuantumInfo from https://github.com/BBN-Q/QuantumInfo.jl.git
INFO: Installing Cliffords v0.4.0
INFO: Installing Iterators v0.2.0
INFO: Installing QuantumInfo v0.0.2
INFO: Installing StaticArrays v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of QuantumInfo
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("QuantumInfo")' log
Julia Version 0.6.0-dev.1653
Commit 66ab171 (2016-12-22 07:36 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (820.27734375 MB free)
Uptime: 13861.0 sec
Load Avg:  0.994140625  1.10205078125  1.08349609375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     790822 s        112 s     102732 s     347642 s         34 s
#2  3496 MHz     260269 s         40 s      48657 s    1043435 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - QuantumInfo                   0.0.2
4 additional packages:
 - Cliffords                     0.4.0
 - Compat                        0.9.5
 - Iterators                     0.2.0
 - StaticArrays                  0.1.2
INFO: Testing QuantumInfo
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Complex{Float64},2}) at ./deprecated.jl:50
 in #isapprox#1(::Float64, ::Float64, ::Function, ::Array{Array{Float64,2},1}, ::Array{Array{Complex{Float64},2},1}) at /home/vagrant/.julia/v0.6/QuantumInfo/test/runtests.jl:16
 in (::Base.#kw##isapprox)(::Array{Any,1}, ::Base.#isapprox, ::Array{Array{Float64,2},1}, ::Array{Array{Complex{Float64},2},1}) at ./<missing>:0
 in macro expansion; at /home/vagrant/.julia/v0.6/QuantumInfo/test/runtests.jl:56 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/QuantumInfo/test/runtests.jl, in expression starting on line 33
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in #ispossemidef#10(::Float64, ::Function, ::Array{Complex{Float64},2}) at /home/vagrant/.julia/v0.6/QuantumInfo/src/basics.jl:242
 in macro expansion; at /home/vagrant/.julia/v0.6/QuantumInfo/test/runtests.jl:69 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/QuantumInfo/test/runtests.jl, in expression starting on line 33
INFO: QuantumInfo tests passed

>>> End of log
