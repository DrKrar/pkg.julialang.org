>>> 'Pkg.add("ThreeJS")' log
INFO: Installing Benchmark v0.1.0
INFO: Installing BinDeps v0.3.23
INFO: Installing DataArrays v0.3.6
INFO: Installing DataFrames v0.7.6
INFO: Installing Docile v0.5.23
INFO: Installing FactCheck v0.4.3
INFO: Installing FixedSizeArrays v0.2.2
INFO: Installing FunctionalCollections v0.1.3
INFO: Installing GZip v0.2.19
INFO: Installing GeometryTypes v0.1.6
INFO: Installing Patchwork v0.2.2
INFO: Installing Rmath v0.1.2
INFO: Installing SHA v0.1.2
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.9.0
INFO: Installing StatsFuns v0.3.0
INFO: Installing ThreeJS v0.2.1
INFO: Installing URIParser v0.1.5
INFO: Building Rmath
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
in applicable at /home/vagrant/.julia/v0.5/BinDeps/src/dependencies.jl
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
in can_provide at /home/vagrant/.julia/v0.5/BinDeps/src/dependencies.jl
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
WARNING: Base.OS_NAME is deprecated.
  likely near /home/vagrant/.julia/v0.5/Rmath/deps/build.jl:38
in can_provide at /home/vagrant/.julia/v0.5/BinDeps/src/dependencies.jl
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ThreeJS
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ThreeJS")' log
Julia Version 0.5.0-pre+5606
Commit 5fe9e53 (2016-07-21 19:23 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ThreeJS
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:40
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:40
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:53
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:53
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:53
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:53
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:53
WARNING: Base.ByteString is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:53
WARNING: Method definition (::Type{Patchwork.Elem})(Symbol, Symbol) in module Patchwork at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:109 overwritten at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:114.

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/writers.jl:14
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/writers.jl:14
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/writers.jl:17
WARNING: Base.writemime is deprecated.
  likely near /home/vagrant/.julia/v0.5/Patchwork/src/writers.jl:17
WARNING: readall is deprecated, use readstring instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in readall(::IOStream, ::Vararg{IOStream,N}) at ./deprecated.jl:30
 in load_js_runtime() at /home/vagrant/.julia/v0.5/Patchwork/src/writers.jl:6
 in __init__() at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:226
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:357
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl, in expression starting on line 221
Testing General Functions
  > Testing outerdiv
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::Symbol, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
 in do_fact(::ThreeJSTest.##4#15{ThreeJSTest.##3#14}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::ThreeJSTest.##2#13)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:12
 in context(::ThreeJSTest.##2#13, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:11
 in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, in expression starting on line 10
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::Symbol, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
 in do_fact(::ThreeJSTest.##4#15{ThreeJSTest.##3#14}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::ThreeJSTest.##2#13)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:12
 in context(::ThreeJSTest.##2#13, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:11
 in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, in expression starting on line 10
    Error :: (line:272) :: Testing outerdiv
      Expression: outerdiv() --> Elem(:div,style=Dict(:width => "100%",:height => "600px"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,:div}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::Symbol, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##4#15{ThreeJSTest.##3#14}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##2#13)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:12
       in context(::ThreeJSTest.##2#13, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:11
       in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing outerdiv
      Expression: outerdiv("90%","200px") --> Elem(:div,style=Dict(:width => "90%",:height => "200px"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,:div}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::Symbol, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##6#17, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##2#13)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:17
       in context(::ThreeJSTest.##2#13, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:11
       in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing initscene
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
 in do_fact(::ThreeJSTest.##9#20{ThreeJSTest.##8#19}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::ThreeJSTest.##7#18)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:24
 in context(::ThreeJSTest.##7#18, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:23
 in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, in expression starting on line 10
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
 in do_fact(::ThreeJSTest.##9#20{ThreeJSTest.##8#19}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::ThreeJSTest.##7#18)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:24
 in context(::ThreeJSTest.##7#18, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
 in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:23
 in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, in expression starting on line 10
    Error :: (line:272) :: Testing initscene
      Expression: initscene() --> Elem($(QuoteNode("three-js")),attributes=Dict(:bgcolor => "#FFFFFF"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##9#20{ThreeJSTest.##8#19}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##7#18)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:24
       in context(::ThreeJSTest.##7#18, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:23
       in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing initscene
      Expression: initscene(bgcolor=@colorant_str("black")) --> Elem($(QuoteNode("three-js")),attributes=Dict(:bgcolor => "#000000"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in (::ThreeJS.#kw##initscene)(::Array{Any,1}, ::ThreeJS.#initscene) at ./<missing>:0
       in do_fact(::ThreeJSTest.##11#22, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##7#18)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:28
       in context(::ThreeJSTest.##7#18, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##1#12)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:23
       in facts(::ThreeJSTest.##1#12, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
Out of 4 total facts:
  Errored:  4
Testing Render Elem Outputs
  > Testing mesh
    Error :: (line:272) :: Testing mesh
      Expression: mesh(10.0,10.0,10.0) --> Elem($(QuoteNode("three-js-mesh")),attributes=Dict(:x => 10.0,:y => 10.0,:z => 10.0,:rx => 0.0,:ry => 0.0,:rz => 0.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-mesh")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##26#138{ThreeJSTest.##25#137}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##24#136)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:37
       in context(::ThreeJSTest.##24#136, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:36
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing mesh
      Expression: mesh(10.0,10.0,10.0,rx=20.0,ry=15.0,rz=240.0) --> Elem($(QuoteNode("three-js-mesh")),attributes=Dict(:x => 10.0,:y => 10.0,:z => 10.0,:rx => 20.0,:ry => 15.0,:rz => 240.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-mesh")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #mesh#1(::Float64, ::Float64, ::Float64, ::Function, ::Float64, ::Float64, ::Float64) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:23
       in (::ThreeJS.#kw##mesh)(::Array{Any,1}, ::ThreeJS.#mesh, ::Float64, ::Float64, ::Float64) at ./<missing>:0
       in do_fact(::ThreeJSTest.##28#140, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##24#136)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:49
       in context(::ThreeJSTest.##24#136, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:36
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing geometry tags
    Error :: (line:272) :: Testing geometry tags
      Expression: box(10.0,11.0,12.0) --> Elem($(QuoteNode("three-js-box")),attributes=Dict(:w => 10.0,:h => 11.0,:d => 12.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-box")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##31#143{ThreeJSTest.##30#142}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:63
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: sphere(10.0) --> Elem($(QuoteNode("three-js-sphere")),attributes=Dict(:r => 10.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-sphere")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##33#145, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:68
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: pyramid(10.0,12.0) --> Elem($(QuoteNode("three-js-pyramid")),attributes=Dict(:base => 10.0,:height => 12.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-pyramid")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##35#147, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:70
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: cylinder(10.0,11.0,12.0) --> Elem($(QuoteNode("three-js-cylinder")),attributes=Dict(:top => 10.0,:bottom => 11.0,:height => 12.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-cylinder")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##37#149, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:75
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: torus(12.0,2.0) --> Elem($(QuoteNode("three-js-torus")),attributes=Dict(:r => 12.0,:tube => 2.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-torus")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##39#151, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:80
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: plane(12.0,2.0) --> Elem($(QuoteNode("three-js-plane")),attributes=Dict(:w => 12.0,:h => 2.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-plane")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##41#153, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:82
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: parametric(2,3,0:2,0:3,((x,y)->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 93:
            x + y
        end)) --> Elem($(QuoteNode("three-js-parametric")),attributes=Dict(:slices => 2,:stacks => 3,:x => [0.0 0.0 0.0 0.0;1.0 1.0 1.0 1.0;2.0 2.0 2.0 2.0],:y => ys,:z => [0.0 1.0 2.0 3.0;0.0 1.0 2.0 3.0;0.0 1.0 2.0 3.0],:vertexcolors => hexcolors))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-parametric")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #parametric#13(::Array{ColorTypes.RGB{Float64},1}, ::Function, ::Int64, ::Int64, ::UnitRange{Int64}, ::UnitRange{Int64}, ::ThreeJSTest.##46#158) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:211
       in (::ThreeJSTest.##45#157)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::ThreeJSTest.##45#157, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:93
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: meshlines(2,3,0:2,0:3,((x,y)->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 113:
            x + y
        end)) --> map((x->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 114:
            x << linematerial(Dict(:color => "white",:colorkind => "vertex"))
        end),[line([(0.0,0.0,0.0),(1.0,1.0,0.0),(2.0,2.0,0.0)],vertexcolors=colors[:,1]),line([(0.0,1.0,1.0),(1.0,2.0,1.0),(2.0,3.0,1.0)],vertexcolors=colors[:,2]),line([(0.0,2.0,2.0),(1.0,3.0,2.0),(2.0,4.0,2.0)],vertexcolors=colors[:,3]),line([(0.0,3.0,3.0),(1.0,4.0,3.0),(2.0,5.0,3.0)],vertexcolors=colors[:,4]),line([(0.0,0.0,0.0),(0.0,1.0,1.0),(0.0,2.0,2.0),(0.0,3.0,3.0)],vertexcolors=reshape(transpose(colors[1,:]),4)),line([(1.0,1.0,0.0),(1.0,2.0,1.0),(1.0,3.0,2.0),(1.0,4.0,3.0)],vertexcolors=reshape(transpose(colors[2,:]),4)),line([(2.0,2.0,0.0),(2.0,3.0,1.0),(2.0,4.0,2.0),(2.0,5.0,3.0)],vertexcolors=reshape(transpose(colors[3,:]),4))])
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-line-material")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #meshlines#22(::Array{ColorTypes.RGB{Float64},1}, ::Function, ::Int64, ::Int64, ::UnitRange{Int64}, ::UnitRange{Int64}, ::ThreeJSTest.##52#164) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:254
       in (::ThreeJSTest.##51#163)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272
       in do_fact(::ThreeJSTest.##51#163, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:113
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: dodecahedron(4.0) --> Elem($(QuoteNode("three-js-dodecahedron")),attributes=Dict(:r => 4.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-dodecahedron")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##54#166, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:143
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: icosahedron(4.0) --> Elem($(QuoteNode("three-js-icosahedron")),attributes=Dict(:r => 4.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-icosahedron")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##56#168, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:145
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: octahedron(4.0) --> Elem($(QuoteNode("three-js-octahedron")),attributes=Dict(:r => 4.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-octahedron")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##58#170, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:147
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing geometry tags
      Expression: tetrahedron(4.0) --> Elem($(QuoteNode("three-js-tetrahedron")),attributes=Dict(:r => 4.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-tetrahedron")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##60#172, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##29#141)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:149
       in context(::ThreeJSTest.##29#141, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:62
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing geometry
    Error :: (line:272) :: Testing geometry
      Expression: geometry(verts,faces) --> Elem($(QuoteNode("three-js-geometry")),attributes=Dict(:x => [1.0,2.0,3.0],:y => [1.0,2.0,3.0],:z => [1.0,2.0,3.0],:faces => [0,1,2]))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-geometry")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in geometry(::Array{Tuple{Float64,Float64,Float64},1}, ::Array{Tuple{Int64,Int64,Int64},1}) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:155
       in do_fact(::ThreeJSTest.##65#177{Array{Tuple{Float64,Float64,Float64},1},Array{Tuple{Int64,Int64,Int64},1},ThreeJSTest.##64#176}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##62#174)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:156
       in context(::ThreeJSTest.##62#174, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:153
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing light tags
    Error :: (line:272) :: Testing light tags
      Expression: pointlight(10.0,11.0,12.0) --> Elem($(QuoteNode("three-js-light")),attributes=Dict(:x => 10.0,:y => 11.0,:z => 12.0,:kind => "point",:color => "#FFFFFF",:intensity => 1.0,:distance => 0.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-light")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##68#180{ThreeJSTest.##67#179}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##66#178)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:168
       in context(::ThreeJSTest.##66#178, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:167
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing light tags
      Expression: pointlight(10.0,11.0,12.0,intensity=2.0,distance=1000.0,color=@colorant_str("red")) --> Elem($(QuoteNode("three-js-light")),attributes=Dict(:x => 10.0,:y => 11.0,:z => 12.0,:kind => "point",:color => "#FF0000",:intensity => 2.0,:distance => 1000.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-light")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in (::ThreeJS.#kw##pointlight)(::Array{Any,1}, ::ThreeJS.#pointlight, ::Float64, ::Float64, ::Float64) at ./<missing>:0
       in do_fact(::ThreeJSTest.##70#182, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##66#178)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:179
       in context(::ThreeJSTest.##66#178, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:167
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing light tags
      Expression: spotlight(10.0,11.0,12.0) --> Elem($(QuoteNode("three-js-light")),attributes=Dict(:x => 10.0,:y => 11.0,:z => 12.0,:kind => "spot",:color => "#FFFFFF",:intensity => 1.0,:distance => 0.0,:angle => 60.0,:exponent => 8.0,:shadow => false))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-light")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##72#184, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##66#178)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:192
       in context(::ThreeJSTest.##66#178, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:167
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing light tags
      Expression: spotlight(10.0,11.0,12.0,intensity=2.0,distance=1000.0,color=@colorant_str("red"),angle=45.0,exponent=10.0,shadow=true) --> Elem($(QuoteNode("three-js-light")),attributes=Dict(:x => 10.0,:y => 11.0,:z => 12.0,:kind => "spot",:color => "#FF0000",:intensity => 2.0,:distance => 1000.0,:angle => 45.0,:exponent => 10.0,:shadow => true))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-light")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in (::ThreeJS.#kw##spotlight)(::Array{Any,1}, ::ThreeJS.#spotlight, ::Float64, ::Float64, ::Float64) at ./<missing>:0
       in do_fact(::ThreeJSTest.##74#186, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##66#178)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:206
       in context(::ThreeJSTest.##66#178, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:167
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing light tags
      Expression: ambientlight() --> Elem($(QuoteNode("three-js-light")),attributes=Dict(:kind => "ambient",:color => "#FFFFFF"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-light")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##76#188, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##66#178)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:223
       in context(::ThreeJSTest.##66#178, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:167
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing light tags
      Expression: ambientlight(@colorant_str("red")) --> Elem($(QuoteNode("three-js-light")),attributes=Dict(:kind => "ambient",:color => "#FF0000"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-light")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##78#190, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##66#178)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:228
       in context(::ThreeJSTest.##66#178, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:167
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing camera tag
    Error :: (line:272) :: Testing camera tag
      Expression: camera(10.0,11.0,12.0) --> Elem($(QuoteNode("three-js-camera")),attributes=Dict(:x => 10.0,:y => 11.0,:z => 12.0,:fov => 45.0,:aspect => 16 / 9,:near => 0.1,:far => 10000.0))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-camera")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##81#193{ThreeJSTest.##80#192}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##79#191)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:235
       in context(::ThreeJSTest.##79#191, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:234
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing line
    Error :: (line:272) :: Testing line
      Expression: line(verts,x=10.0,y=10.0,z=10.0,rx=20.0,ry=15.0,rz=240.0,kind="pieces",vertexcolors=colors) --> Elem($(QuoteNode("three-js-line")),attributes=Dict(:kind => "pieces",:x => 10.0,:y => 10.0,:z => 10.0,:rx => 20.0,:ry => 15.0,:rz => 240.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => map((x->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 269:
                            "#" * hex(x)
                        end),colors)))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-line")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #line#37(::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::String, ::Array{ColorTypes.Color,1}, ::ThreeJS.#line, ::Array{Tuple{Float64,Float64,Float64},1}) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:405
       in (::ThreeJS.#kw##line)(::Array{Any,1}, ::ThreeJS.#line, ::Array{Tuple{Float64,Float64,Float64},1}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##89#201{Array{Tuple{Float64,Float64,Float64},1},Array{ColorTypes.Color,1},ThreeJSTest.##85#197{Array{ColorTypes.Color,1}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##82#194)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:253
       in context(::ThreeJSTest.##82#194, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:249
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing line
      Expression: line(vertswithcolors,x=10.0,y=10.0,z=10.0,rx=20.0,ry=15.0,rz=240.0,kind="pieces") --> Elem($(QuoteNode("three-js-line")),attributes=Dict(:kind => "pieces",:x => 10.0,:y => 10.0,:z => 10.0,:rx => 20.0,:ry => 15.0,:rz => 240.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => map((x->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 288:
                            "#" * hex(x)
                        end),colors)))
      MethodError: no method matching line(::Array{Tuple{Float64,Float64,Float64,ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}},1}; x=10.0, y=10.0, z=10.0, rx=20.0, ry=15.0, rz=240.0, kind="pieces")
      Closest candidates are:
        line(!Matched::Array{Tuple{Float64,Float64,Float64,ColorTypes.Color},1}; x, y, z, rx, ry, rz, kind)
        line(!Matched::Array{Tuple{Float64,Float64,Float64},1}; x, y, z, rx, ry, rz, kind, vertexcolors)
       in do_fact(::ThreeJSTest.##94#206{Array{Tuple{Float64,Float64,Float64,ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##82#194)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:272
       in context(::ThreeJSTest.##82#194, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:249
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing line
      Expression: line(verts) --> Elem($(QuoteNode("three-js-line")),attributes=Dict(:kind => "strip",:x => 0.0,:y => 0.0,:z => 0.0,:rx => 0.0,:ry => 0.0,:rz => 0.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => Color[]))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-line")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #line#37(::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::String, ::Array{ColorTypes.Color,1}, ::ThreeJS.#line, ::Array{Tuple{Float64,Float64,Float64},1}) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:405
       in do_fact(::ThreeJSTest.##96#208{Array{Tuple{Float64,Float64,Float64},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##82#194)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:291
       in context(::ThreeJSTest.##82#194, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:249
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing line material
    Error :: (line:272) :: Testing line material
      Expression: linematerial() --> Elem($(QuoteNode("three-js-line-material")),attributes=Dict())
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-line-material")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in linematerial() at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:473
       in do_fact(::ThreeJSTest.##99#211{ThreeJSTest.##98#210}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##97#209)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:310
       in context(::ThreeJSTest.##97#209, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:309
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing line material
      Expression: linematerial(Dict(:kind => "dashed",:color => "red")) --> Elem($(QuoteNode("three-js-line-material")),attributes=Dict(:kind => "dashed",:color => "red"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-line-material")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##101#213, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##97#209)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:311
       in context(::ThreeJSTest.##97#209, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:309
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing pointclouds
    Error :: (line:272) :: Testing pointclouds
      Expression: pointcloud(verts,x=10.0,y=10.0,z=10.0,rx=20.0,ry=15.0,rz=240.0,vertexcolors=colors) --> Elem($(QuoteNode("three-js-points")),attributes=Dict(:x => 10.0,:y => 10.0,:z => 10.0,:rx => 20.0,:ry => 15.0,:rz => 240.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => map((x->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 339:
                            "#" * hex(x)
                        end),colors)))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-points")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #pointcloud#51(::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Array{ColorTypes.Color,1}, ::Function, ::Array{Tuple{Float64,Float64,Float64},1}) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:506
       in (::ThreeJS.#kw##pointcloud)(::Array{Any,1}, ::ThreeJS.#pointcloud, ::Array{Tuple{Float64,Float64,Float64},1}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##109#221{Array{Tuple{Float64,Float64,Float64},1},Array{ColorTypes.Color,1},ThreeJSTest.##105#217{Array{ColorTypes.Color,1}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##102#214)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:324
       in context(::ThreeJSTest.##102#214, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:320
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing pointclouds
      Expression: pointcloud(vertswithcolors,x=10.0,y=10.0,z=10.0,rx=20.0,ry=15.0,rz=240.0) --> Elem($(QuoteNode("three-js-points")),attributes=Dict(:x => 10.0,:y => 10.0,:z => 10.0,:rx => 20.0,:ry => 15.0,:rz => 240.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => map((x->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 357:
                            "#" * hex(x)
                        end),colors)))
      MethodError: no method matching pointcloud(::Array{Tuple{Float64,Float64,Float64,ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}},1}; x=10.0, y=10.0, z=10.0, rx=20.0, ry=15.0, rz=240.0)
      Closest candidates are:
        pointcloud(!Matched::Array{Tuple{Float64,Float64,Float64,ColorTypes.Color},1}; x, y, z, rx, ry, rz)
        pointcloud(!Matched::Array{Tuple{Float64,Float64,Float64},1}; x, y, z, rx, ry, rz, vertexcolors)
       in do_fact(::ThreeJSTest.##114#226{Array{Tuple{Float64,Float64,Float64,ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##102#214)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:342
       in context(::ThreeJSTest.##102#214, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:320
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing pointclouds
      Expression: pointcloud(verts) --> Elem($(QuoteNode("three-js-points")),attributes=Dict(:x => 0.0,:y => 0.0,:z => 0.0,:rx => 0.0,:ry => 0.0,:rz => 0.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => Color[]))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-points")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #pointcloud#51(::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Array{ColorTypes.Color,1}, ::Function, ::Array{Tuple{Float64,Float64,Float64},1}) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:506
       in do_fact(::ThreeJSTest.##116#228{Array{Tuple{Float64,Float64,Float64},1}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##102#214)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:360
       in context(::ThreeJSTest.##102#214, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:320
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing point material
    Error :: (line:272) :: Testing point material
      Expression: pointmaterial() --> Elem($(QuoteNode("three-js-point-material")),attributes=Dict())
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-point-material")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in pointmaterial() at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:563
       in do_fact(::ThreeJSTest.##119#231{ThreeJSTest.##118#230}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##117#229)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:378
       in context(::ThreeJSTest.##117#229, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:377
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing point material
      Expression: pointmaterial(Dict(:color => "red",:size => 10,:attenuation => false,:colorkind => "vertex")) --> Elem($(QuoteNode("three-js-point-material")),attributes=Dict(:colorkind => "vertex",:color => "red",:size => 10,:attenuation => false))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-point-material")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##121#233, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##117#229)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:379
       in context(::ThreeJSTest.##117#229, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:377
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing material
    Error :: (line:272) :: Testing material
      Expression: material() --> Elem($(QuoteNode("three-js-material")),attributes=Dict())
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-material")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in material() at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:270
       in do_fact(::ThreeJSTest.##124#236{ThreeJSTest.##123#235}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##122#234)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:394
       in context(::ThreeJSTest.##122#234, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:393
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing material
      Expression: material(Dict(:kind => "basic",:color => "red")) --> Elem($(QuoteNode("three-js-material")),attributes=Dict(:kind => "basic",:color => "red"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-material")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##126#238, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##122#234)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:395
       in context(::ThreeJSTest.##122#234, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:393
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing grid
    Error :: (line:272) :: Testing grid
      Expression: grid(10.0,1.0) --> Elem($(QuoteNode("three-js-grid")),attributes=Dict(:size => 10.0,:step => 1.0,:x => 0.0,:y => 0.0,:z => 0.0,:rx => 0.0,:ry => 0.0,:rz => 0.0,:colorgrid => "#000000",:colorcenter => "#000000"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-grid")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #grid#65(::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}, ::ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}, ::ThreeJS.#grid, ::Float64, ::Float64) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:588
       in do_fact(::ThreeJSTest.##129#241{ThreeJSTest.##128#240}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##127#239)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:405
       in context(::ThreeJSTest.##127#239, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:404
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
    Error :: (line:272) :: Testing grid
      Expression: grid(10.0,2.0,x=10.0,colorgrid=@colorant_str("red"),colorcenter=@colorant_str("green"),ry=10.0) --> Elem($(QuoteNode("three-js-grid")),attributes=Dict(:size => 10.0,:step => 2.0,:x => 10.0,:y => 0.0,:z => 0.0,:rx => 0.0,:ry => 10.0,:rz => 0.0,:colorgrid => "#FF0000",:colorcenter => "#008000"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-grid")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in #grid#65(::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::Float64, ::ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}, ::ColorTypes.RGB{FixedPointNumbers.UFixed{UInt8,8}}, ::ThreeJS.#grid, ::Float64, ::Float64) at /home/vagrant/.julia/v0.5/ThreeJS/src/render.jl:588
       in (::ThreeJS.#kw##grid)(::Array{Any,1}, ::ThreeJS.#grid, ::Float64, ::Float64) at ./<missing>:0
       in do_fact(::ThreeJSTest.##131#243, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##127#239)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:420
       in context(::ThreeJSTest.##127#239, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:404
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing Text
    Error :: (line:272) :: Testing Text
      Expression: text(0.0,0.0,0.0,"Hello!") --> Elem($(QuoteNode("three-js-text")),attributes=Dict(:x => 0.0,:y => 0.0,:z => 0.0,:content => "Hello!"))
      MethodError: Cannot `convert` an object of type Int64 to an object of type Tuple{Vararg{Int64,N}}
      This may have arisen from a call to the constructor Tuple{Vararg{Int64,N}}(...),
      since type constructors fall back to convert methods.
       in count at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:98 [inlined]
       in Patchwork.Elem{:xhtml,Symbol("three-js-text")}(::Array{Any,1}, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:80
       in (::Core.#kw#Type)(::Array{Any,1}, ::Type{Patchwork.Elem}, ::String, ::FunctionalCollections.PersistentVector{Patchwork.Node}) at ./<missing>:0
       in do_fact(::ThreeJSTest.##134#246{ThreeJSTest.##133#245}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:334
       in macro expansion at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:272 [inlined]
       in (::ThreeJSTest.##132#244)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:440
       in context(::ThreeJSTest.##132#244, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:475
       in (::ThreeJSTest.##23#135)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:439
       in facts(::ThreeJSTest.##23#135, ::String) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:449
       in include_from_node1(::String) at ./loading.jl:426
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
Out of 37 total facts:
  Errored:  37
Testing property helpers
  > Testing meshcolor
  > Testing kinds
  > Testing wireframe
  > Testing visibility
9 facts verified.
ERROR: LoadError: FactCheck finished with 41 non-successful tests.
 in exitstatus() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:568
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, in expression starting on line 467
===============================[ ERROR: ThreeJS ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ThreeJS had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:736
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
