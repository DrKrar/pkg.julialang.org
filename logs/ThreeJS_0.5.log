>>> 'Pkg.add("ThreeJS")' log
INFO: Installing ArrayViews v0.6.4
INFO: Installing Benchmark v0.1.0
INFO: Installing ColorTypes v0.2.1
INFO: Installing Colors v0.6.3
INFO: Installing DataArrays v0.2.20
INFO: Installing DataFrames v0.6.10
INFO: Installing Docile v0.5.23
INFO: Installing FactCheck v0.4.2
INFO: Installing FixedPointNumbers v0.1.2
INFO: Installing FixedSizeArrays v0.0.10
INFO: Installing FunctionalCollections v0.1.3
INFO: Installing GeometryTypes v0.1.2
INFO: Installing Patchwork v0.2.1
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.8.0
INFO: Installing StatsFuns v0.2.0
INFO: Installing ThreeJS v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ThreeJS
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ThreeJS")' log
Julia Version 0.5.0-dev+3184
Commit fb283c6 (2016-03-17 08:49 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing ThreeJS
WARNING: Method definition (::Type{Patchwork.Elem})(Symbol, Symbol) in module Patchwork at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:109 overwritten at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:114.
WARNING: readall is deprecated, use readstring instead.
 [inlined code] from ./error.jl:26
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in readall(::IOStream, ::Vararg{IOStream}) at ./deprecated.jl:30
 [inlined code] from ./expr.jl:8
 in __init__() at /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl:226
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Patchwork/src/Patchwork.jl, in expression starting on line 221
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/GeometryTypes.ji for module GeometryTypes.
Testing General Functions
  > Testing outerdiv
  > Testing initscene
4 facts verified.
Testing Render Elem Outputs
  > Testing mesh
  > Testing geometry tags
  > Testing geometry
  > Testing light tags
  > Testing camera tag
  > Testing line
    Error :: (line:26) :: Testing line
      Expression: line(vertswithcolors,x=10.0,y=10.0,z=10.0,rx=20.0,ry=15.0,rz=240.0,kind="pieces") --> Elem($(QuoteNode("three-js-line")),attributes=Dict(:kind => "pieces",:x => 10.0,:y => 10.0,:z => 10.0,:rx => 20.0,:ry => 15.0,:rz => 240.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => map((x->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 288:
                            "#" * hex(x)
                        end),colors)))
      MethodError: no method matching (::ThreeJS.#kw##line)(::Array{Any,1}, ::ThreeJS.#line, ::Array{Tuple{Any,Any,Any,Any},1})
      Closest candidates are:
        #line(::Array{T,N}, ::ThreeJS.#line, !Matched::Array{Tuple{Float64,Float64,Float64},1})
        #line(::Array{T,N}, ::ThreeJS.#line, !Matched::Array{Tuple{Float64,Float64,Float64,ColorTypes.Color{T,N}},1})
       [inlined code] from ./boot.jl:331
       in (::ThreeJSTest.##90#196)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:271
       in do_fact(::ThreeJSTest.##90#196, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
       [inlined code] from ./boot.jl:331
       in (::ThreeJSTest.##80#186)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:272
       in context(::ThreeJSTest.##80#186, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
       in (::ThreeJSTest.##23#129)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:249
       in facts(::ThreeJSTest.##23#129, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
       in include(::ASCIIString) at ./boot.jl:264
       in include_from_node1(::UTF8String) at ./loading.jl:417
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing line material
  > Testing pointclouds
    Error :: (line:26) :: Testing pointclouds
      Expression: pointcloud(vertswithcolors,x=10.0,y=10.0,z=10.0,rx=20.0,ry=15.0,rz=240.0) --> Elem($(QuoteNode("three-js-points")),attributes=Dict(:x => 10.0,:y => 10.0,:z => 10.0,:rx => 20.0,:ry => 15.0,:rz => 240.0,:xs => [1.0,2.0,3.0],:ys => [1.0,2.0,3.0],:zs => [1.0,2.0,3.0],:vertexcolors => map((x->begin  # /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, line 357:
                            "#" * hex(x)
                        end),colors)))
      MethodError: no method matching (::ThreeJS.#kw##pointcloud)(::Array{Any,1}, ::ThreeJS.#pointcloud, ::Array{Tuple{Any,Any,Any,Any},1})
      Closest candidates are:
        #pointcloud(::Array{T,N}, ::ThreeJS.#pointcloud, !Matched::Array{Tuple{Float64,Float64,Float64},1})
        #pointcloud(::Array{T,N}, ::ThreeJS.#pointcloud, !Matched::Array{Tuple{Float64,Float64,Float64,ColorTypes.Color{T,N}},1})
       [inlined code] from ./boot.jl:331
       in (::ThreeJSTest.##108#214)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:271
       in do_fact(::ThreeJSTest.##108#214, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
       [inlined code] from ./boot.jl:331
       in (::ThreeJSTest.##98#204)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:342
       in context(::ThreeJSTest.##98#204, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
       in (::ThreeJSTest.##23#129)() at /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl:320
       in facts(::ThreeJSTest.##23#129, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
       in include(::ASCIIString) at ./boot.jl:264
       in include_from_node1(::UTF8String) at ./loading.jl:417
       in process_options(::Base.JLOptions) at ./client.jl:262
       in _start() at ./client.jl:318
  > Testing point material
  > Testing material
  > Testing grid
  > Testing Text
Out of 37 total facts:
  Verified: 35
  Errored:  2
Testing property helpers
  > Testing meshcolor
  > Testing kinds
  > Testing wireframe
  > Testing visibility
9 facts verified.
ERROR: LoadError: FactCheck finished with 2 non-successful tests.
 in error(::ASCIIString) at ./error.jl:21
 in exitstatus() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:563
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl, in expression starting on line 467
===============================[ ERROR: ThreeJS ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/ThreeJS/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("ThreeJS had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::ASCIIString) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#3(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
