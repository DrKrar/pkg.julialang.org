>>> 'Pkg.add("PValueAdjust")' log
INFO: Cloning cache of PValueAdjust from https://github.com/dirkschumacher/PValueAdjust.jl.git
INFO: Installing PValueAdjust v2.0.0
INFO: Package database updated

>>> 'Pkg.test("PValueAdjust")' log
Julia Version 0.6.0-dev.1156
Commit 9747250 (2016-10-29 17:44 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (664.59765625 MB free)
Uptime: 13942.0 sec
Load Avg:  1.07763671875  1.0  0.96923828125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3495 MHz     825336 s       6110 s      99018 s     315139 s         24 s
#2  3495 MHz     220283 s         92 s      45871 s    1095847 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - PValueAdjust                  2.0.0
1 additional packages:
 - Compat                        0.9.3
INFO: Testing PValueAdjust
Running tests:
 * bonferroni.jl
WARNING: min{T1 <: Real}(x::Real,y::AbstractArray{T1}) is deprecated, use min.(x,y) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in min(::Int64, ::Array{Float64,1}) at ./deprecated.jl:50
 in #padjust#5(::Symbol, ::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/PValueAdjust/src/padjust.jl:7
 in (::PValueAdjust.#kw##padjust)(::Array{Any,1}, ::PValueAdjust.#padjust, ::Array{Float64,1}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/PValueAdjust/test/runtests.jl:14 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/PValueAdjust/test/bonferroni.jl, in expression starting on line 5
WARNING: min{T1 <: Real}(x::Real,y::AbstractArray{T1}) is deprecated, use min.(x,y) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in min(::Int64, ::Array{Int64,1}) at ./deprecated.jl:50
 in #padjust#5(::Symbol, ::Function, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/PValueAdjust/src/padjust.jl:7
 in (::PValueAdjust.#kw##padjust)(::Array{Any,1}, ::PValueAdjust.#padjust, ::Array{Int64,1}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/PValueAdjust/test/runtests.jl:14 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/PValueAdjust/test/bonferroni.jl, in expression starting on line 8
 * holm.jl
ERROR: LoadError: LoadError: ArgumentError: invalid index: UnitRange{Int64}[1:4]
 in macro expansion at ./multidimensional.jl:315 [inlined]
 in _unsafe_getindex at ./multidimensional.jl:312 [inlined]
 in _getindex at ./multidimensional.jl:291 [inlined]
 in getindex at ./abstractarray.jl:795 [inlined]
 in holm(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/PValueAdjust/src/holm.jl:9
 in #padjust#5(::Symbol, ::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/PValueAdjust/src/padjust.jl:3
 in (::PValueAdjust.#kw##padjust)(::Array{Any,1}, ::PValueAdjust.#padjust, ::Array{Float64,1}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in macro expansion; at /home/vagrant/.julia/v0.6/PValueAdjust/test/runtests.jl:14 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/PValueAdjust/test/holm.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.6/PValueAdjust/test/runtests.jl, in expression starting on line 11
============================[ ERROR: PValueAdjust ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/PValueAdjust/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PValueAdjust had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
