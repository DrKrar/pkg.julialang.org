>>> 'Pkg.add("PolarFact")' log
INFO: Cloning cache of PolarFact from https://github.com/weijianzhang/PolarFact.jl.git
INFO: Installing PolarFact v0.0.6
INFO: Package database updated

>>> 'Pkg.test("PolarFact")' log
Julia Version 0.6.0-dev.1946
Commit f550489 (2017-01-06 00:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (676.9765625 MB free)
Uptime: 12129.0 sec
Load Avg:  0.9130859375  0.94580078125  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     733815 s        522 s      74742 s     263922 s         24 s
#2  3499 MHz     218732 s       6481 s      38521 s     919272 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - PolarFact                     0.0.6
1 additional packages:
 - Compat                        0.10.0
INFO: Testing PolarFact
WARNING: issym is deprecated, use issymmetric instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] issym(::Array{Float64,2}, ::Vararg{Array{Float64,2},N}) at ./deprecated.jl:30
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:308
 [8] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/PolarFact/test/test_newton.jl, in expression starting on line 16
Newton method passed test...
Halley method passed test...
QDWH method passed test...
SVD method passed test...
Hybrid method passed test...
ERROR: LoadError: LoadError: MethodError: no method matching PolarFact.Result{Float32}(::Array{Float32,2}, ::Array{Float64,2}, ::Int64, ::Bool)
Closest candidates are:
  PolarFact.Result{Float32}{T}(::Array{T,2}, !Matched::Array{T,2}, ::Integer, ::Bool) at /home/vagrant/.julia/v0.6/PolarFact/src/common.jl:14
  PolarFact.Result{Float32}{T}(::Any) at sysimg.jl:24
Stacktrace:
 [1] common_iter_scal!(::PolarFact.NewtonUpdater{Float32}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}, ::Int64, ::Bool, ::Float32) at /home/vagrant/.julia/v0.6/PolarFact/src/common.jl:146
 [2] solve!(::PolarFact.NewtonAlg{Float32}, ::Array{Float32,2}, ::Array{Float32,2}, ::Array{Float32,2}) at /home/vagrant/.julia/v0.6/PolarFact/src/newton.jl:36
 [3] #polarfact#11(::Symbol, ::Int64, ::Float32, ::Bool, ::Function, ::Array{Float32,2}) at /home/vagrant/.julia/v0.6/PolarFact/src/PolarFact.jl:44
 [4] (::PolarFact.#kw##polarfact)(::Array{Any,1}, ::PolarFact.#polarfact, ::Array{Float32,2}) at ./<missing>:0
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:308
 [10] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/PolarFact/test/test_f32.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.6/PolarFact/test/runtests.jl, in expression starting on line 8
==============================[ ERROR: PolarFact ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/PolarFact/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: PolarFact had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261

>>> End of log
