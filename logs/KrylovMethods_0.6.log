>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (685.5546875 MB free)
Uptime: 32324.0 sec
Load Avg:  0.78125  0.87255859375  0.94677734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    2138858 s       5508 s     212008 s     699790 s         52 s
#2  3496 MHz     470603 s       2121 s     104427 s    2536622 s          8 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.7.1
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from https://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	1.10e-01
  2	3.35e+00
  3	1.56e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 3.35e+00 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 8. Residual norm is 6.34e-07.
Testing bicgstb for complex matrix
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:7 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:39.
WARNING: Method definition M(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:8 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:40.
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:39 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:9.
WARNING: Method definition M(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:40 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:10.
=== block bicgstb ===
iter	 relres
  1	8.68e-02
  2	2.14e-02
  3	1.98e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 2.14e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 7. Residual norm is 9.36e-07.
Testing BlockBiCGSTAB for complex matrix
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:9 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:41.
WARNING: Method definition M(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:10 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:42.
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.43e-01
cg iterated maxIter (=1) times but reached only residual norm 2.43e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.07e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sqrt(::Array{Float64,1}) at ./deprecated.jl:50
 in computeNorm(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:140
 in #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:60
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 in #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 11
=== blockcg ===
iter	max(relres)
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isfinite(::Array{Float64,1}) at ./deprecated.jl:50
 in getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:148
 in #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 in #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 11
WARNING: scale(x::AbstractVector,A::AbstractMatrix) is deprecated, use Diagonal(x) * A instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in scale(::Array{Float64,1}, ::Array{Float64,2}) at ./deprecated.jl:50
 in getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:149
 in #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 in #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 11
  1	4.60e-15
  2	5.33e-28
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.33e-28.
=== blockcg ===
iter	max(relres)
  1	5.94e-14
blockCG iterated maxIter (=1) times but reached only residual norm 5.94e-14 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.18e-01
  2	2.73e-01
  3	2.08e-01
  4	1.53e-01
  5	1.21e-01
  6	7.44e-02
  7	4.22e-02
  8	2.28e-02
  9	1.15e-02
 10	4.96e-03
 11	2.07e-03
 12	8.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.89e-04.
=== blockcg ===
iter	max(relres)
  1	4.18e-01
  2	2.73e-01
  3	2.08e-01
  4	1.53e-01
  5	1.21e-01
  6	7.44e-02
  7	4.22e-02
  8	2.28e-02
  9	1.15e-02
 10	4.96e-03
 11	2.07e-03
 12	8.89e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.89e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.44e+01	5.11e-01	1.05e+01
  2	4.39e+00	6.29e-01	1.04e+01
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  4.39e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  1.93e-08.
=== CGLS: All tests passed. ===
=== Testing GS ===
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testGS.jl, in expression starting on line 15
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 8.6e-02 2.4e-02 	 2.4e-02
  2	7.1e-03 2.4e-03 5.8e-04 	 5.8e-04
  3	1.6e-04 4.8e-05 1.5e-05 	 1.5e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 3.54e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,1.1398814359584064]
Givens rotation for v=[0.769827838917403,0.0]
Givens rotation for v=[0.5626039014631627,-0.3327596679722438]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 34. Residual norm is 9.81e-03.
ssor achieved desired tolerance at iteration 50. Residual norm is 9.97e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 5.81e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.42e-01
  2	6.36e-02
  3	3.92e-02
ssor iterated maxIter (=3) times but reached only residual norm 3.92e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 15. Residual norm is 9.31e-03.
ssor achieved desired tolerance at iteration 22. Residual norm is 9.54e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 1.14e+00.
WARNING: Method definition Af(Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testCGLS.jl:10 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testLSQR.jl:27.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 1.02e+01.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:41 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:10.
minres iterated maxIter (=1) times but reached only residual norm 3.49e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	3.49e-01	1.39e+00	5.56e+00		1.09e+00
2	3.71e-02	6.74e-02	9.55e+00		1.87e+00
3	4.08e-03	4.65e-03	9.55e+00		2.05e+00
4	2.62e-04	2.30e-04	9.55e+00		2.05e+00
5	1.55e-07	8.91e-10	9.55e+00		2.18e+00
6	2.04e-18	2.42e-28	9.55e+00		2.38e+00
minres converged at iteration 6. |A r_k|=2.42e-28 and |r_k|=2.04e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	1.26e-01	8.34e-01	8.21e+00		1.00e+00
2	6.29e-03	3.28e-03	8.21e+00		1.63e+00
3	7.53e-04	9.58e-04	8.21e+00		1.73e+00
4	5.23e-05	4.89e-05	8.21e+00		1.73e+00
5	4.05e-08	3.08e-10	8.21e+00		1.86e+00
6	1.15e-17	2.95e-26	8.21e+00		2.04e+00
minres converged at iteration 6. |A r_k|=2.95e-26 and |r_k|=1.15e-17.
test stop by condlim
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in fiedler(::Type{Float64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:744
 in fiedler(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:747
 in matrixdepot(::String, ::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:162
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl, in expression starting on line 28
The estimated condition number (=2.12e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=8.09e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:10 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:44.
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
