>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.2.1
INFO: Package database updated

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.6.0-dev.1527
Commit 4dcada1 (2016-12-08 19:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1464.73828125 MB free)
Uptime: 31728.0 sec
Load Avg:  1.06005859375  1.06494140625  1.0283203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1929248 s        918 s     255714 s     652424 s        106 s
#2  3499 MHz     753338 s       5526 s     127486 s    2164426 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - KrylovMethods                 0.2.1
1 additional packages:
 - Compat                        0.9.5
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of LinearOperators from https://github.com/JuliaSmoothOptimizers/LinearOperators.jl.git
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.2.20
INFO: Installing LinearOperators v0.2.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	8.01e-02
  2	7.09e-03
  3	1.78e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 7.09e-03 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 6. Residual norm is 7.24e-07.
Testing bicgstb for complex matrix
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:7 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:39.
WARNING: Method definition M(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:8 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:40.
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:39 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:9.
WARNING: Method definition M(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBICGSTB.jl:40 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:10.
=== block bicgstb ===
iter	 relres
  1	8.73e-02
  2	1.85e-02
  3	3.13e-03
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 1.85e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 1.49e-07.
Testing BlockBiCGSTAB for complex matrix
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:9 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:41.
WARNING: Method definition M(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:10 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:42.
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.47e-01
cg iterated maxIter (=1) times but reached only residual norm 2.47e-01 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 8.76e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
WARNING: sqrt{T <: Number}(x::AbstractArray{T}) is deprecated, use sqrt.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sqrt(::Array{Float64,1}) at ./deprecated.jl:50
 in computeNorm(::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:140
 in #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:60
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 in #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 11
=== blockcg ===
iter	max(relres)
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isfinite(::Array{Float64,1}) at ./deprecated.jl:50
 in getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:148
 in #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 in #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 11
WARNING: scale(x::AbstractVector,A::AbstractMatrix) is deprecated, use Diagonal(x) * A instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in scale(::Array{Float64,1}, ::Array{Float64,2}) at ./deprecated.jl:50
 in getPinv!(::Array{Float64,2}, ::Float64) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:149
 in #blockCG#14(::Array{Float64,2}, ::Base.#identity, ::Int64, ::Float64, ::Bool, ::Float64, ::Int64, ::Bool, ::KrylovMethods.#blockCG, ::KrylovMethods.##12#13{Array{Float64,2}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:86
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Function, ::Array{Float64,2}) at ./<missing>:0
 in #blockCG#11(::Array{Any,1}, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/KrylovMethods/src/blockCG.jl:8
 in (::KrylovMethods.#kw##blockCG)(::Array{Any,1}, ::KrylovMethods.#blockCG, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockCG.jl, in expression starting on line 11
  1	1.05e-15
  2	5.32e-30
blockCG achieved desired tolerance at iteration 2. Residual norm is 5.32e-30.
=== blockcg ===
iter	max(relres)
  1	1.70e-16
blockCG iterated maxIter (=1) times but reached only residual norm 1.70e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	3.94e-01
  2	2.41e-01
  3	1.80e-01
  4	1.19e-01
  5	8.41e-02
  6	5.83e-02
  7	3.22e-02
  8	1.64e-02
  9	6.97e-03
 10	3.24e-03
 11	1.62e-03
 12	8.29e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.29e-04.
=== blockcg ===
iter	max(relres)
  1	3.94e-01
  2	2.41e-01
  3	1.80e-01
  4	1.19e-01
  5	8.41e-02
  6	5.83e-02
  7	3.22e-02
  8	1.64e-02
  9	6.97e-03
 10	3.24e-03
 11	1.62e-03
 12	8.29e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.29e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	6.20e+00	6.31e-01	9.61e+00
  2	1.62e+00	6.75e-01	9.59e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.62e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  6.39e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testGS.jl, in expression starting on line 15
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	3.0e-01 1.0e-01 2.9e-02 	 2.9e-02
  2	9.7e-03 3.4e-03 1.1e-03 	 1.1e-03
  3	3.5e-04 1.1e-04 3.7e-05 	 3.7e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 9.13e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.28432973027746805]
Givens rotation for v=[-0.49144771893862665,0.0]
Givens rotation for v=[0.045097856142676335,2.2432046842793523]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 33. Residual norm is 9.99e-03.
ssor achieved desired tolerance at iteration 50. Residual norm is 9.87e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 54. Residual norm is 6.66e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.65e-02
  3	4.19e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.19e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 17. Residual norm is 9.02e-03.
ssor achieved desired tolerance at iteration 24. Residual norm is 9.90e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 2.02e-01.
WARNING: Method definition Af(Any, Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testCGLS.jl:10 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testLSQR.jl:27.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 9.32e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testBlockBiCGSTB.jl:41 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:10.
minres iterated maxIter (=1) times but reached only residual norm 2.54e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.54e-01	6.32e-01	5.15e+00		1.09e+00
2	3.48e-02	6.43e-02	7.32e+00		1.55e+00
3	4.19e-03	6.34e-03	7.32e+00		1.55e+00
4	2.31e-04	1.21e-04	7.32e+00		1.59e+00
5	1.26e-06	7.09e-08	7.32e+00		1.59e+00
6	1.45e-18	1.39e-29	7.32e+00		1.82e+00
minres converged at iteration 6. |A r_k|=1.39e-29 and |r_k|=1.45e-18.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	7.21e-02	2.86e-01	6.71e+00		1.00e+00
2	8.87e-03	1.08e-02	6.71e+00		1.35e+00
3	4.62e-04	2.97e-04	6.71e+00		1.35e+00
4	8.56e-06	1.44e-06	6.71e+00		1.53e+00
5	2.18e-07	5.79e-08	6.71e+00		1.53e+00
6	7.99e-19	2.46e-29	6.71e+00		1.66e+00
minres converged at iteration 6. |A r_k|=2.46e-29 and |r_k|=7.99e-19.
test stop by condlim
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,2}) at ./deprecated.jl:50
 in fiedler(::Type{Float64}, ::Array{Int64,1}) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:744
 in fiedler(::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/higham.jl:747
 in matrixdepot(::String, ::Int64) at /home/vagrant/.julia/v0.6/MatrixDepot/src/common.jl:162
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl, in expression starting on line 28
The estimated condition number (=2.41e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 15.
test stop by beta
minres stopped because beta (=1.17e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
WARNING: Method definition Af(Any) in module Main at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:10 overwritten at /home/vagrant/.julia/v0.6/KrylovMethods/test/testMINRES.jl:44.
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
invhilb	n=[4,4]	gmres iterated maxIter (=200) times without achieving the desired tolerance.
 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.2.20
INFO: Removing LinearOperators v0.2.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
