>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Installing FixedSizeArrays v0.2.4
INFO: Package database updated

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (737.24609375 MB free)
Uptime: 25834.0 sec
Load Avg:  0.974609375  1.0146484375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    1498354 s         57 s     154493 s     688182 s         48 s
#2  3504 MHz     630323 s       8200 s      86210 s    1777365 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FixedSizeArrays               0.2.4
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for FixedSizeArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing FixedSizeArrays
FixedSizeArrays
  > type inference
  > fsa macro
  > core
    > ndims
    > size_or
    > eltype_or
    > ndims_or
    > similar_type
    > construct_similar
    > nan
  > Array of FixedArrays
    > reduce
    > array ops
    > Show
FixedSizeArrays.Mat{4,4,Float64}[FixedSizeArrays.Mat{4,4,Float64}(
    0.9285244036964868 0.0007951167259236946 0.5270462122081232 0.6166940158768128
    0.11848142688178176 0.05132146064060694 0.9552767728905065 0.6412802288917026
    0.5775402248903252 0.8605570573135943 0.3246327051497149 0.3564017450626784
    0.8325873917071265 0.7841775732572756 0.6697879009690899 0.8621348571944398
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.3867602227715583 0.44492534540556217 0.7589347596816125 0.6922858374399257
    0.40899115173296163 0.6569651794612785 0.3806444332998311 0.4110143599081788
    0.88067801333615 0.9398228373889994 0.12599489522234664 0.3793896418650935
    0.09826208851182461 0.8684068227181954 0.3238526647898776 0.6833017743214664
)
]
2-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(0.72310996,0.12339175,0.11928773)
 RGB(0.7223797,0.7390342,0.6501545)

2-elementArray{FixedSizeArrays.Vec{3,Float32},1}:
 Vec(0.55852735,0.8541776,0.5795735)
 Vec(0.7056925,0.60980654,0.56550276)

Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Randn
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
ERROR: LoadError: generated function body is not pure. this likely means it contains a closure or comprehension.
 in (::FSAtesting.##288#1303)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:331
 in context(::FSAtesting.##288#1303, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##214#1229)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:326
 in context(::FSAtesting.##214#1229, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##1#1016)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:268
 in facts(::FSAtesting.##1#1016, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in test() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl, in expression starting on line 1297
===========================[ ERROR: FixedSizeArrays ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: FixedSizeArrays had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
