>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Installing FixedSizeArrays v0.2.3
INFO: Package database updated

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.6.0-dev.764
Commit de0833f (2016-09-25 00:11 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (567.91796875 MB free)
Uptime: 24042.0 sec
Load Avg:  1.0244140625  1.0146484375  1.03466796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1328785 s       7866 s     165041 s     598189 s         74 s
#2  3499 MHz     692243 s         54 s      92278 s    1479092 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FixedSizeArrays               0.2.3
 - JSON                          0.7.0
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for FixedSizeArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing FixedSizeArrays
FixedSizeArrays
  > type inference
  > fsa macro
  > core
    > ndims
    > size_or
    > eltype_or
    > ndims_or
    > similar_type
    > construct_similar
  > Array of FixedArrays
    > reduce
    > array ops
    > Show
FixedSizeArrays.Mat{4,4,Float64}[FixedSizeArrays.Mat{4,4,Float64}(
    0.9294865056454471 0.12202666125199335 0.9485205454887562 0.47800716088055983
    0.1946100900655856 0.8494748795919276 0.8790059930667944 0.22136225305255297
    0.28140190517208086 0.17349144409606887 0.5824979187724273 0.11487884438407514
    0.8437188136634999 0.49511495923044246 0.04952282407890185 0.4750306576876655
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.09581501085367794 0.02914145282427305 0.06821573799931735 0.42449298676265235
    0.534028720646633 0.016024443684749423 0.9754039972733615 0.8943379940843159
    0.3088306986628089 0.6799902188096922 0.8374129043532237 0.14833677330297945
    0.010783429573021364 0.8880779473946205 0.9072542124329499 0.9773619482190465
)
]
2-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(0.9181869,0.039181232,0.04145825)
 RGB(0.40204751,0.41512144,0.9772445)

2-elementArray{FixedSizeArrays.Vec{3,Float32},1}:
 Vec(0.24356973,0.86679924,0.0007907152)
 Vec(0.91424274,0.8274447,0.6921214)

Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Randn
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
ERROR: LoadError: generated function body is not pure. this likely means it contains a closure or comprehension.
 in (::FSAtesting.##285#1297)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:319
 in context(::FSAtesting.##285#1297, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##211#1223)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:314
 in context(::FSAtesting.##211#1223, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##1#1013)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:256
 in facts(::FSAtesting.##1#1013, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in test() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl, in expression starting on line 1285
===========================[ ERROR: FixedSizeArrays ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: FixedSizeArrays had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
