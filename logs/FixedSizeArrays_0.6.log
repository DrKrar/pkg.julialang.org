>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Installing FixedSizeArrays v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FixedSizeArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (561.4921875 MB free)
Uptime: 22285.0 sec
Load Avg:  1.08837890625  1.06201171875  1.0576171875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1217077 s         70 s     139242 s     605073 s         66 s
#2  3500 MHz     673438 s       6079 s      85706 s    1318183 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FixedSizeArrays               0.2.3
 - JSON                          0.7.0
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for FixedSizeArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing FixedSizeArrays
FixedSizeArrays
  > type inference
  > fsa macro
  > core
    > ndims
    > size_or
    > eltype_or
    > ndims_or
    > similar_type
    > construct_similar
  > Array of FixedArrays
    > reduce
    > array ops
    > Show
FixedSizeArrays.Mat{4,4,Float64}[FixedSizeArrays.Mat{4,4,Float64}(
    0.029716146940637733 0.6935157919733648 0.29513638737921766 0.22366855239088146
    0.33541781303890095 0.6531628878023978 0.8287312974665542 0.28207621917265424
    0.44520695359064755 0.5831782210509204 0.25957170521622386 0.5121721729545152
    0.987749997486091 0.5947542183660945 0.42993316017588556 0.4443272772993183
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.9183191504826846 0.8724303024265152 0.1916057480421547 0.41486345897932786
    0.2880031477966649 0.2589491890695712 0.43115780288260663 0.4475935015978294
    0.1748776227254838 0.1337394643133678 0.28771132247149 0.5667570584567947
    0.48643086652911416 0.8340957931922042 0.7293245346300496 0.5843255240399181
)
]
2-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(0.16517222,0.7117715,0.07686651)
 RGB(0.4552586,0.23434281,0.013634801)

2-elementArray{FixedSizeArrays.Vec{3,Float32},1}:
 Vec(0.24904382,0.1255933,0.40706944)
 Vec(0.9809333,0.2464689,0.6937212)

Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Randn
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
ERROR: LoadError: generated function body is not pure. this likely means it contains a closure or comprehension.
 in (::FSAtesting.##285#1297)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:319
 in context(::FSAtesting.##285#1297, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##211#1223)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:314
 in context(::FSAtesting.##211#1223, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##1#1013)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:256
 in facts(::FSAtesting.##1#1013, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in test() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl, in expression starting on line 1285
===========================[ ERROR: FixedSizeArrays ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: FixedSizeArrays had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
