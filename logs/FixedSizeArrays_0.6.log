>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Installing FixedSizeArrays v0.2.3
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FixedSizeArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.6.0-dev.739
Commit 361161b (2016-09-22 21:53 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (588.125 MB free)
Uptime: 22362.0 sec
Load Avg:  1.11376953125  1.06982421875  1.05615234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1291882 s        137 s     165290 s     499914 s         66 s
#2  3500 MHz     672304 s       6344 s      92670 s    1333051 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FixedSizeArrays               0.2.3
 - JSON                          0.7.0
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for FixedSizeArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing FixedSizeArrays
FixedSizeArrays
  > type inference
  > fsa macro
  > core
    > ndims
    > size_or
    > eltype_or
    > ndims_or
    > similar_type
    > construct_similar
  > Array of FixedArrays
    > reduce
    > array ops
    > Show
FixedSizeArrays.Mat{4,4,Float64}[FixedSizeArrays.Mat{4,4,Float64}(
    0.7390984638758011 0.12167772528231113 0.5134822578923888 0.9386432824256705
    0.9841935914463322 0.8353796664525064 0.007982951567760077 0.6769354390378544
    0.7890200181657299 0.5349415524410626 0.3628308400902325 0.6697214961196161
    0.7794747376088129 0.9854995781341931 0.278000049770887 0.12007594862795457
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.6351318637141401 0.1900546394286915 0.6824129578869698 0.9943596730896629
    0.6256886500022061 0.20832725494750948 0.5773844347113226 0.6153669228727976
    0.4438936159407496 0.7643718491423139 0.9075617541962355 0.00211052947128354
    0.20306879203022143 0.21697301531336066 0.8374746935669304 0.5222122766832318
)
]
2-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(0.84740055,0.5813191,0.39399886)
 RGB(0.10495603,0.9648107,0.95089805)

2-elementArray{FixedSizeArrays.Vec{3,Float32},1}:
 Vec(0.24759948,0.55913854,0.4545499)
 Vec(0.014552593,0.3262086,0.57077813)

Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Randn
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
ERROR: LoadError: generated function body is not pure. this likely means it contains a closure or comprehension.
 in (::FSAtesting.##285#1297)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:319
 in context(::FSAtesting.##285#1297, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##211#1223)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:314
 in context(::FSAtesting.##211#1223, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##1#1013)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:256
 in facts(::FSAtesting.##1#1013, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in test() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl, in expression starting on line 1285
===========================[ ERROR: FixedSizeArrays ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: FixedSizeArrays had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
