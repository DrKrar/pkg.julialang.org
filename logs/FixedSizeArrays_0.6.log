>>> 'Pkg.add("FixedSizeArrays")' log
INFO: Installing FixedSizeArrays v0.2.4
INFO: Package database updated

>>> 'Pkg.test("FixedSizeArrays")' log
Julia Version 0.6.0-dev.787
Commit c71f205 (2016-09-26 16:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (739.22265625 MB free)
Uptime: 22356.0 sec
Load Avg:  0.9765625  0.9677734375  1.0244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1353461 s         16 s     123650 s     512693 s         70 s
#2  3500 MHz     616591 s       5460 s      77121 s    1440739 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - FixedSizeArrays               0.2.4
 - JSON                          0.8.0
1 additional packages:
 - Compat                        0.9.2
INFO: Computing test dependencies for FixedSizeArrays...
INFO: Installing FactCheck v0.4.3
INFO: Testing FixedSizeArrays
FixedSizeArrays
  > type inference
  > fsa macro
  > core
    > ndims
    > size_or
    > eltype_or
    > ndims_or
    > similar_type
    > construct_similar
    > nan
  > Array of FixedArrays
    > reduce
    > array ops
    > Show
FixedSizeArrays.Mat{4,4,Float64}[FixedSizeArrays.Mat{4,4,Float64}(
    0.8241432225149679 0.22305219744882598 0.8294632691428114 0.1441958288392533
    0.2544077154128428 0.1632050584582143 0.7962074559927794 0.5240897736858428
    0.9812660130257482 0.12045453652398153 0.2388104061465508 0.988115905909789
    0.7657331133230909 0.4967407336192313 0.21944303484688144 0.02859273256406647
)
,FixedSizeArrays.Mat{4,4,Float64}(
    0.5515022582313804 0.8815923893399633 0.5438734800281122 0.7535223516050586
    0.03574096410587524 0.2970542321790155 0.7437527893645919 0.7981616788071628
    0.45431421132814265 0.28857883498229264 0.9447180026904538 0.4951559216165833
    0.4927905655727569 0.18576987024293823 0.20772281842087081 0.2775937866683087
)
]
2-elementArray{FSAtesting.RGB{Float32},1}:
 RGB(0.2761066,0.22395194,0.09498823)
 RGB(0.8498275,0.7540245,0.19771683)

2-elementArray{FixedSizeArrays.Vec{3,Float32},1}:
 Vec(0.4483459,0.24925089,0.7449362)
 Vec(0.093810916,0.98913217,0.661621)

Point(1,2,3)  > Constructor FixedVectorNoTuple
    > Float32
    > Float64
    > Int64
    > UInt64
    > UInt32
    > UInt8
  > Constructor 
    > Rand
    > Randn
    > Zero
    > eye
    > one
    > unit
    > construction, conversion, 1
ERROR: LoadError: generated function body is not pure. this likely means it contains a closure or comprehension.
 in (::FSAtesting.##288#1303)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:331
 in context(::FSAtesting.##288#1303, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##214#1229)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:326
 in context(::FSAtesting.##214#1229, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 in (::FSAtesting.##1#1016)() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:268
 in facts(::FSAtesting.##1#1016, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in test() at /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl:50
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:268
 in _start() at ./client.jl:332
while loading /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl, in expression starting on line 1297
===========================[ ERROR: FixedSizeArrays ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/FixedSizeArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing FactCheck v0.4.3
ERROR: FixedSizeArrays had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:245
 in _start() at ./client.jl:332

>>> End of log
