>>> 'Pkg.add("WriteVTK")' log
INFO: Cloning cache of WriteVTK from https://github.com/jipolanco/WriteVTK.jl.git
INFO: Installing BufferedStreams v0.2.0
INFO: Installing Libz v0.2.0
INFO: Installing LightXML v0.4.0
INFO: Installing WriteVTK v0.4.2
INFO: Building LightXML
INFO: Package database updated

>>> 'Pkg.test("WriteVTK")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1930.55078125 MB free)
Uptime: 32790.0 sec
Load Avg:  0.99365234375  0.86376953125  0.73779296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1865776 s       5648 s     214759 s     834104 s        155 s
#2  3499 MHz     592480 s        172 s      99602 s    2485855 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - WriteVTK                      0.4.2
16 additional packages:
 - BufferedStreams               0.2.0
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.10
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - DataStreamsIntegrationTests   0.0.1              e92cc45b (dirty)
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - Libz                          0.2.0
 - LightXML                      0.4.0
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - WeakRefStrings                0.2.0
INFO: Testing WriteVTK
TEST (first run): multiblock.jl
Saved:   multiblock.vtm   multiblock.z01.vts   multiblock.z02.vtr   multiblock.z03.vtu
  2.632952 seconds (3.54 M allocations: 108.969 MB, 7.65% gc time)

TEST (first run): rectilinear.jl
Saved:   rectilinear_2D.vtr   rectilinear_3D.vtr
  1.106492 seconds (2.07 M allocations: 70.938 MB, 1.63% gc time)

TEST (first run): imagedata.jl
Saved:   imagedata.vti
  0.220926 seconds (378.49 k allocations: 11.534 MB)

TEST (first run): structured.jl
Saved:   structured_2D.vts   structured_3D.vts
  0.611289 seconds (380.86 k allocations: 11.114 MB, 0.99% gc time)

TEST (first run): unstructured.jl
Saved:   unstructured_1D.vtu   unstructured_2D.vtu   unstructured_3D.vtu
  0.603873 seconds (749.91 k allocations: 24.905 MB, 1.19% gc time)

TEST (first run): pvdCollection.jl
Saved:   collection.pvd   collection_00.vtr   collection_01.vtr   collection_02.vtr   collection_03.vtr
  0.655620 seconds (1.58 M allocations: 46.542 MB, 1.30% gc time)

============================================================

TEST (second run): multiblock.jl
Saved:   multiblock.vtm   multiblock.z01.vts   multiblock.z02.vtr   multiblock.z03.vtu
  0.831970 seconds (2.21 M allocations: 53.668 MB, 2.17% gc time)

TEST (second run): rectilinear.jl
Saved:   rectilinear_2D.vtr   rectilinear_3D.vtr
  0.729974 seconds (1.08 M allocations: 27.627 MB, 0.77% gc time)

TEST (second run): imagedata.jl
Saved:   imagedata.vti
  0.175222 seconds (258.64 k allocations: 6.221 MB)

TEST (second run): structured.jl
Saved:   structured_2D.vts   structured_3D.vts
  0.473606 seconds (347.66 k allocations: 9.613 MB, 0.84% gc time)

TEST (second run): unstructured.jl
Saved:   unstructured_1D.vtu   unstructured_2D.vtu   unstructured_3D.vtu
  0.488166 seconds (721.87 k allocations: 23.592 MB, 1.45% gc time)

TEST (second run): pvdCollection.jl
Saved:   collection.pvd   collection_00.vtr   collection_01.vtr   collection_02.vtr   collection_03.vtr
  0.554051 seconds (1.20 M allocations: 30.530 MB, 0.82% gc time)

INFO: WriteVTK tests passed

>>> End of log
