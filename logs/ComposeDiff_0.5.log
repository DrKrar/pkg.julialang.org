>>> 'Pkg.add("ComposeDiff")' log
INFO: Cloning cache of ComposeDiff from https://github.com/shashi/ComposeDiff.jl.git
INFO: Cloning cache of Patchwork from https://github.com/shashi/Patchwork.jl.git
INFO: Installing ColorTypes v0.3.0
INFO: Installing Colors v0.7.0
INFO: Installing Compose v0.4.5
INFO: Installing ComposeDiff v0.0.2
INFO: Installing DataStructures v0.5.2
INFO: Installing FixedPointNumbers v0.3.0
INFO: Installing FunctionalCollections v0.3.1
INFO: Installing Iterators v0.2.0
INFO: Installing Measures v0.0.3
INFO: Installing Patchwork v0.3.0
INFO: Installing Reactive v0.3.7
INFO: Installing Reexport v0.0.3
INFO: Installing Requires v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ComposeDiff
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ComposeDiff")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (951.55859375 MB free)
Uptime: 17076.0 sec
Load Avg:  0.88525390625  0.96923828125  1.0546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     947628 s       1511 s      97410 s     453842 s         37 s
#2  3499 MHz     382076 s       5212 s      55144 s    1220478 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - ComposeDiff                   0.0.2
 - JSON                          0.8.2
13 additional packages:
 - ColorTypes                    0.3.0
 - Colors                        0.7.0
 - Compat                        0.15.0
 - Compose                       0.4.5
 - DataStructures                0.5.2
 - FixedPointNumbers             0.3.0
 - FunctionalCollections         0.3.1
 - Iterators                     0.2.0
 - Measures                      0.0.3
 - Patchwork                     0.3.0
 - Reactive                      0.3.7
 - Reexport                      0.0.3
 - Requires                      0.3.0
INFO: Testing ComposeDiff
ERROR: LoadError: LoadError: ArgumentError: Module Cairo not found in current path.
Run `Pkg.add("Cairo")` to install the Cairo package.
 in require(::Symbol) at ./loading.jl:365
 in _include_from_serialized(::String) at ./loading.jl:150
 in _require_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:187
 in _require_search_from_serialized(::Int64, ::Symbol, ::String, ::Bool) at ./loading.jl:217
 in require(::Symbol) at ./loading.jl:371
 in include_from_node1(::String) at ./loading.jl:488
 in eval(::Module, ::Any) at ./boot.jl:234
 in require(::Symbol) at ./loading.jl:415
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ComposeDiff/src/ComposeDiff.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.5/ComposeDiff/test/runtests.jl, in expression starting on line 1
=============================[ ERROR: ComposeDiff ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/ComposeDiff/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ComposeDiff had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
