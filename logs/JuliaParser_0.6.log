>>> 'Pkg.add("JuliaParser")' log
INFO: Installing AbstractTrees v0.0.4
INFO: Installing JuliaParser v0.7.4
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of JuliaParser
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("JuliaParser")' log
Julia Version 0.6.0-dev.1701
Commit d8a5718 (2016-12-26 06:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1539.48828125 MB free)
Uptime: 44213.0 sec
Load Avg:  0.96337890625  1.00830078125  1.03857421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2009218 s        112 s     192483 s    1787203 s        132 s
#2  3500 MHz     582579 s         46 s     135368 s    3570495 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - JuliaParser                   0.7.4
6 additional packages:
 - AbstractTrees                 0.0.4
 - Compat                        0.9.5
 - CompilerTools                 0.2.1
 - DataStructures                0.4.6
 - DocOpt                        0.2.0
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
INFO: Computing test dependencies for JuliaParser...
INFO: Installing FactCheck v0.4.3
INFO: Testing JuliaParser
test skip to end of line
  > no line break in buffer
  > empty buffer
7 facts verified.
test read operator
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::Char, ::Vararg{Char,N}) at ./deprecated.jl:30
 in read_operator(::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Char, ::Void) at /home/vagrant/.julia/v0.6/JuliaParser/src/lexer.jl:404
 in (::##35#40)() at /home/vagrant/.julia/v0.6/JuliaParser/test/lexer.jl:41
 in facts(::##35#40, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/JuliaParser/test/lexer.jl, in expression starting on line 36
2356 facts verified.
test string_to_number
  > NaN
  > Inf
  > float64
  > float32
  > integers
160 facts verified.
test is char hex
23 facts verified.
test is char oct
9 facts verified.
test is char bin
3 facts verified.
test uint neg
2 facts verified.
test sized uint literal
  > hexadecimal
  > octal
  > binary
60 facts verified.
test accum_digits
6 facts verified.
test compare num strings
3 facts verified.
test is oct within uint 128
3 facts verified.
test is within int128
4 facts verified.
test readnumber
  > signed integer
  > decimal
  > floating point exponent
  > leading dot
  > floating point hex
  > binary
  > hex
  > bigint
44 facts verified.
test skipwhitespace
5 facts verified.
test skip comment
  > must start with a comment symbol
5 facts verified.
test skip multiline comment
10 facts verified.
test skip ws and comment
5 facts verified.
test TokenStream constructor
1 fact verified.
test set_token! / last_token
4 facts verified.
test put_back!
2 facts verified.
test peek_token
4 facts verified.
test take_token
4 facts verified.
test require_token
3 facts verified.
test next_token
17 facts verified.
test utf8sizeof
5 facts verified.
test windows style newline
1 fact verified.
test parse IOBuffer
1 fact verified.
test parse IOStream
1 fact verified.
test parse string
1 fact verified.
test special case all whitespace
8 facts verified.
test simple expressions/operators
275 facts verified.
test assignment expressions
4 facts verified.
test parse single operator
1138 facts verified.
test tuple expressions
17 facts verified.
test parse block
3 facts verified.
test range expressions
9 facts verified.
parse symbol / expression quote
3 facts verified.
parse misplaced (=)
1 fact verified.
test char literal expression
5 facts verified.
test string literal expression
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in tostr(::Base.AbstractIOBuffer{Array{UInt8,1}}, ::Bool) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:1745
 in _parse_string_literal(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Symbol, ::Int64, ::Bool) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:1770
 in parse_string_literal(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Bool) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:1831
 in _parse_atom(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2028
 in parse_atom(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2076
 in parse_unary_prefix(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:669
 in parse_call(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:675
 in parse_decl(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:547
 in parse_factorh(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_decl, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:570
 in parse_unary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:607
 in parse_with_chains(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_rational, ::Set{Symbol}, ::Symbol) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:197 (repeats 2 times)
 in parse_range(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:489
 in parse_comparison(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:443
 in parse_and at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:412 [inlined]
 in parse_RtoL(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_and, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:230
 in parse_or(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:403
 in parse_RtoL(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_or, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:230
 in parse_arrow(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:417
 in parse_cond(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:261
 in parse_Nary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_cond, ::Set{Char}, ::Symbol, ::Set{Any}, ::Bool, ::Bool, ::Void) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:298
 in parse_eq at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:385 [inlined]
 in parse_docstring(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_eq) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2114
 in parse_Nary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.##1#2, ::Set{Char}, ::Symbol, ::Set{Char}, ::Bool, ::Bool, ::Void) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:298
 in parse_stmts(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:353
 in #parse#24(::JuliaParser.Parser.#parse_stmts, ::Function, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2149
 in (::JuliaParser.Parser.#kw##parse)(::Array{Any,1}, ::JuliaParser.Parser.#parse, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at ./<missing>:0
 in parse(::String) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2154
 in do_fact(::##1363#1366, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::##1361#1364)() at /home/vagrant/.julia/v0.6/JuliaParser/test/parser.jl:213
 in facts(::##1361#1364, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/JuliaParser/test/parser.jl, in expression starting on line 208
1 fact verified.
test prefixed string literals
3 facts verified.
test cell expressions
9 facts verified.
test cat expressions
9 facts verified.
test generator expressions
2 facts verified.
test macrocall expression
3 facts verified.
test backquote (cmd) expression
3 facts verified.
test quote/begin expression
4 facts verified.
test while expression
2 facts verified.
test for loop expression
4 facts verified.
test if condtion expression
4 facts verified.
test let expression
3 facts verified.
test global/local reserved words
7 facts verified.
test function expressions
6 facts verified.
test function return tuple
2 facts verified.
test array ref
1 fact verified.
test macro expressions
4 facts verified.
test abstract type expression
5 facts verified.
test unary operator expressions
11 facts verified.
test multiply expressions
4 facts verified.
test type assertions
4 facts verified.
test type / immutable expression
16 facts verified.
test try, catch, finally expression
5 facts verified.
test ternary operator
2 facts verified.
test return expression
2 facts verified.
test break / continue expression
4 facts verified.
test const expression
4 facts verified.
test module expressions
5 facts verified.
test export expression
3 facts verified.
test import / using / importall expressions
24 facts verified.
test bitstype expression
2 facts verified.
test typealias expression
3 facts verified.
test ccall expression
2 facts verified.
test string interpolation
4 facts verified.
test parse do
3 facts verified.
test parse formula
3 facts verified.
parse argument list
11 facts verified.
parse test functions
2 facts verified.
parse test module
2 facts verified.
parser failures
WARNING: is is deprecated, use === instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in is(::BigInt, ::Vararg{Any,N}) at ./deprecated.jl:30
 in eof(::BigInt) at /home/vagrant/.julia/v0.6/JuliaParser/src/lexer.jl:331
 in eof(::JuliaParser.Tokens.Token) at /home/vagrant/.julia/v0.6/JuliaParser/src/lexer.jl:330
 in require_token(::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Bool) at /home/vagrant/.julia/v0.6/JuliaParser/src/lexer.jl:924
 in _parse_arglist(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Char, ::JuliaParser.Tokens.Token) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:1369
 in parse_arglist(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Char, ::JuliaParser.Tokens.Token) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:1416
 in parse_call_chain(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Tokens.Token, ::Bool) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:702
 in parse_call(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:679
 in parse_decl(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:547
 in parse_factorh(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_decl, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:570
 in parse_unary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:607
 in parse_with_chains(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_rational, ::Set{Symbol}, ::Symbol) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:197 (repeats 2 times)
 in parse_range(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:489
 in parse_comparison(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:443
 in parse_and at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:412 [inlined]
 in parse_RtoL(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_and, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:230
 in parse_or(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:403
 in parse_RtoL(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_or, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:230
 in parse_arrow(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:417
 in parse_cond(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:261
 in parse_Nary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_cond, ::Set{Char}, ::Symbol, ::Set{Any}, ::Bool, ::Bool, ::Void) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:298
 in parse_eq at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:385 [inlined]
 in parse_docstring(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_eq) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2114
 in parse_Nary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.##1#2, ::Set{Char}, ::Symbol, ::Set{Char}, ::Bool, ::Bool, ::Void) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:298
 in parse_stmts(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:353
 in #parse#24(::JuliaParser.Parser.#parse_stmts, ::Function, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2149
 in (::JuliaParser.Parser.#kw##parse)(::Array{Any,1}, ::JuliaParser.Parser.#parse, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.Token,Base.AbstractIOBuffer{Array{UInt8,1}}}) at ./<missing>:0
 in parse(::String) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2154
 in #1611 at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
 in do_fact(::##1611#1618, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
 in macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
 in (::##1609#1616)() at /home/vagrant/.julia/v0.6/JuliaParser/test/parser.jl:969
 in facts(::##1609#1616, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/JuliaParser/test/parser.jl, in expression starting on line 898
15 facts verified.
misc errors
  > disallow dot error
2 facts verified.
incorrect parsing of hex floats
1 fact verified.
interpolate var in cache block
0 facts verified.
parse two statements
2 facts verified.
misc syntax changes
3 facts verified.
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in _parse_atom(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:1918
 in parse_atom(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2076
 in parse_unary_prefix(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:669
 in parse_call(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:675
 in parse_decl(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:547
 in parse_factorh(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_decl, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:570
 in parse_unary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:607
 in parse_with_chains(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_rational, ::Set{Symbol}, ::Symbol) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:197 (repeats 2 times)
 in parse_range(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:489
 in parse_comparison(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:443
 in parse_and at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:412 [inlined]
 in parse_RtoL(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_and, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:230
 in parse_or(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:403
 in parse_RtoL(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_or, ::Set{Symbol}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:230
 in parse_arrow(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:417
 in parse_cond(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:261
 in parse_Nary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_cond, ::Set{Char}, ::Symbol, ::Set{Any}, ::Bool, ::Bool, ::Void) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:298
 in parse_eq at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:385 [inlined]
 in parse_docstring(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.#parse_eq) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2114
 in parse_Nary(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}, ::JuliaParser.Parser.##1#2, ::Set{Char}, ::Symbol, ::Set{Char}, ::Bool, ::Bool, ::Void) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:298
 in parse_stmts(::JuliaParser.Parser.ParseState, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:353
 in #parse#24(::JuliaParser.Parser.#parse_stmts, ::Function, ::JuliaParser.Lexer.TokenStream{JuliaParser.Tokens.SourceLocToken,Base.AbstractIOBuffer{Array{UInt8,1}}}) at /home/vagrant/.julia/v0.6/JuliaParser/src/parser.jl:2149
 in do_diag_test(::String) at /home/vagrant/.julia/v0.6/JuliaParser/test/diagnostics.jl:9
 in macro expansion; at /home/vagrant/.julia/v0.6/JuliaParser/test/diagnostics.jl:322 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:293
 in _start() at ./client.jl:357
while loading /home/vagrant/.julia/v0.6/JuliaParser/test/diagnostics.jl, in expression starting on line 321
INFO: JuliaParser tests passed
INFO: Removing FactCheck v0.4.3

>>> End of log
