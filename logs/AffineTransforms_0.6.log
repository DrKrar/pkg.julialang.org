>>> 'Pkg.add("AffineTransforms")' log
INFO: Cloning cache of AffineTransforms from https://github.com/timholy/AffineTransforms.jl.git
INFO: Cloning cache of AxisAlgorithms from https://github.com/timholy/AxisAlgorithms.jl.git
INFO: Cloning cache of Interpolations from https://github.com/tlycken/Interpolations.jl.git
INFO: Cloning cache of Ratios from https://github.com/timholy/Ratios.jl.git
INFO: Cloning cache of Requires from https://github.com/MikeInnes/Requires.jl.git
INFO: Cloning cache of WoodburyMatrices from https://github.com/timholy/WoodburyMatrices.jl.git
INFO: Installing AffineTransforms v0.1.4
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing Interpolations v0.3.6
INFO: Installing Ratios v0.0.4
INFO: Installing Requires v0.3.0
INFO: Installing WoodburyMatrices v0.2.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of AffineTransforms
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("AffineTransforms")' log
Julia Version 0.6.0-dev.718
Commit 9f50a2c (2016-09-20 15:35 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (590.515625 MB free)
Uptime: 990.0 sec
Load Avg:  0.95947265625  0.89990234375  0.61083984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz      30772 s         60 s       3617 s      60012 s          2 s
#2  3498 MHz      15669 s         95 s       2506 s      78084 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - AffineTransforms              0.1.4
 - JSON                          0.7.0
6 additional packages:
 - AxisAlgorithms                0.1.5
 - Compat                        0.9.2
 - Interpolations                0.3.6
 - Ratios                        0.0.4
 - Requires                      0.3.0
 - WoodburyMatrices              0.2.0
INFO: Computing test dependencies for AffineTransforms...
INFO: Cloning cache of Calculus from https://github.com/johnmyleswhite/Calculus.jl.git
INFO: Cloning cache of DualNumbers from https://github.com/JuliaDiff/DualNumbers.jl.git
INFO: Cloning cache of NaNMath from https://github.com/mlubin/NaNMath.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing ColorTypes v0.2.6
INFO: Installing ColorVectorSpace v0.1.8
INFO: Installing Colors v0.6.7
INFO: Installing DualNumbers v0.2.2
INFO: Installing FileIO v0.1.2
INFO: Installing FixedPointNumbers v0.1.6
INFO: Installing Graphics v0.1.3
INFO: Installing Images v0.5.10
INFO: Installing NaNMath v0.2.1
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.3
INFO: Installing SHA v0.2.1
INFO: Installing SIUnits v0.0.6
INFO: Installing StatsBase v0.9.0
INFO: Installing StatsFuns v0.3.1
INFO: Installing TexExtensions v0.0.3
INFO: Installing URIParser v0.1.6
INFO: Installing Zlib v0.1.12
INFO: Building Rmath
INFO: Testing AffineTransforms
WARNING: Method definition require(Symbol) in module Base at loading.jl:376 overwritten in module Main at /home/vagrant/.julia/v0.6/Requires/src/require.jl:12.
WARNING: scale(x::AbstractVector,A::AbstractMatrix) is deprecated, use Diagonal(x) * A instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in scale(::Array{Float64,1}, ::Array{Float64,2}) at ./deprecated.jl:50
 in scale; at /home/vagrant/.julia/v0.6/AffineTransforms/src/transform.jl:30 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl:107 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl, in expression starting on line 96
WARNING: scale(A::AbstractMatrix,x::AbstractVector) is deprecated, use A * Diagonal(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in scale(::Array{Float64,2}, ::Array{Float64,1}) at ./deprecated.jl:50
 in scale; at /home/vagrant/.julia/v0.6/AffineTransforms/src/transform.jl:29 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl:108 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl, in expression starting on line 96
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in (::AffineTransforms.##19#20{2})(::Int64) at /home/vagrant/.julia/v0.6/AffineTransforms/src/tformedarrays.jl:112
 in ntuple(::AffineTransforms.##19#20{2}, ::Int64) at ./tuple.jl:79
 in _transform!(...) at /home/vagrant/.julia/v0.6/AffineTransforms/src/tformedarrays.jl:112
 in get_staged(::Core.MethodInstance) at ./inference.jl:187
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1603
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1800
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1674
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1631
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1800
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1674
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1631
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1274
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1745
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1691
 in typeinf_edge(::Method, ::ANY, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Any) at ./inference.jl:1631
 in typeinf_ext(::Core.MethodInstance) at ./inference.jl:1655
 in macro expansion; at /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl:149 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl, in expression starting on line 142
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in (::AffineTransforms.##19#20{2})(::Int64) at /home/vagrant/.julia/v0.6/AffineTransforms/src/tformedarrays.jl:112
 in ntuple(::AffineTransforms.##19#20{2}, ::Int64) at ./tuple.jl:79
 in _transform!(...) at /home/vagrant/.julia/v0.6/AffineTransforms/src/tformedarrays.jl:112
 in get_staged(::Core.MethodInstance) at ./inference.jl:187
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1603
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1800
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1674
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1631
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1800
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1674
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1631
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1274
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1745
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1691
 in typeinf_edge(::Method, ::ANY, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Any) at ./inference.jl:1631
 in typeinf_ext(::Core.MethodInstance) at ./inference.jl:1655
 in macro expansion; at /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl:149 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl, in expression starting on line 142
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::String, ::Vararg{String,N}) at ./deprecated.jl:30
 in (::AffineTransforms.##19#20{2})(::Int64) at /home/vagrant/.julia/v0.6/AffineTransforms/src/tformedarrays.jl:112
 in ntuple(::AffineTransforms.##19#20{2}, ::Int64) at ./tuple.jl:79
 in _transform!(...) at /home/vagrant/.julia/v0.6/AffineTransforms/src/tformedarrays.jl:112
 in get_staged(::Core.MethodInstance) at ./inference.jl:187
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1603
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1800
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1674
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1631
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1800
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1674
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Core.Inference.InferenceState) at ./inference.jl:1631
 in typeinf_edge(::Method, ::Any, ::SimpleVector, ::Core.Inference.InferenceState) at ./inference.jl:1637
 in abstract_call_gf_by_type(::Any, ::Any, ::Core.Inference.InferenceState) at ./inference.jl:916
 in abstract_call(::Any, ::Array{Any,1}, ::Array{Any,1}, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1124
 in abstract_eval_call(::Expr, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1154
 in abstract_eval(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1175
 in abstract_interpret(::Any, ::Array{Any,1}, ::Core.Inference.InferenceState) at ./inference.jl:1274
 in typeinf_frame(::Core.Inference.InferenceState) at ./inference.jl:1745
 in typeinf_loop(::Core.Inference.InferenceState) at ./inference.jl:1691
 in typeinf_edge(::Method, ::ANY, ::SimpleVector, ::Bool, ::Bool, ::Bool, ::Any) at ./inference.jl:1631
 in typeinf_ext(::Core.MethodInstance) at ./inference.jl:1655
 in macro expansion; at /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl:149 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/AffineTransforms/test/runtests.jl, in expression starting on line 142
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in macro expansion; at /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl:6 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:541
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/NaNMath/src/NaNMath.jl, in expression starting on line 4
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:541 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/DualNumbers/src/dual.jl, in expression starting on line 38
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:994
 in include_from_node1(::String) at ./loading.jl:541 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/DualNumbers/src/dual.jl, in expression starting on line 39
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:541 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/DualNumbers/src/dual.jl, in expression starting on line 40
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:541 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/DualNumbers/src/dual.jl, in expression starting on line 41
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:986
 in include_from_node1(::String) at ./loading.jl:541 (repeats 2 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:326
while loading /home/vagrant/.julia/v0.6/DualNumbers/src/dual.jl, in expression starting on line 42
WARNING: Method definition abs2(DualNumbers.Dual4) in module DualNumbers at /home/vagrant/.julia/v0.6/DualNumbers/src/dual_n.jl:78 overwritten at /home/vagrant/.julia/v0.6/DualNumbers/src/dual_n.jl:154.
INFO: AffineTransforms tests passed
INFO: Removing BinDeps v0.4.5
INFO: Removing Calculus v0.1.15
INFO: Removing ColorTypes v0.2.6
INFO: Removing ColorVectorSpace v0.1.8
INFO: Removing Colors v0.6.7
INFO: Removing DualNumbers v0.2.2
INFO: Removing FileIO v0.1.2
INFO: Removing FixedPointNumbers v0.1.6
INFO: Removing Graphics v0.1.3
INFO: Removing Images v0.5.10
INFO: Removing NaNMath v0.2.1
INFO: Removing Reexport v0.0.3
INFO: Removing Rmath v0.1.3
INFO: Removing SHA v0.2.1
INFO: Removing SIUnits v0.0.6
INFO: Removing StatsBase v0.9.0
INFO: Removing StatsFuns v0.3.1
INFO: Removing TexExtensions v0.0.3
INFO: Removing URIParser v0.1.6
INFO: Removing Zlib v0.1.12

>>> End of log
