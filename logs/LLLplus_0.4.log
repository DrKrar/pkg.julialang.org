>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.0-rc1
Commit e5c6964 (2015-09-09 16:07 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.277745 seconds (3.09 M allocations: 1.381 GB, 10.01% gc time)
  1.042884 seconds (2.88 M allocations: 1.372 GB, 11.25% gc time)

Testing LLL on 10x10 complex matrix...
  1.974413 seconds (1.64 M allocations: 74.010 MB, 0.94% gc time)
  0.000432 seconds (2.58 k allocations: 204.359 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.751694 seconds (930.59 k allocations: 42.164 MB, 1.37% gc time)
  0.000227 seconds (499 allocations: 146.078 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.892311 seconds (4.26 M allocations: 221.645 MB, 3.10% gc time)
  0.315644 seconds (3.70 M allocations: 196.817 MB, 6.46% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.059339 seconds (191.90 k allocations: 89.220 MB, 13.31% gc time)
max col-norm of lll-reduced basis is 30.0
  6.840202 seconds (27.81 M allocations: 3.963 GB, 4.68% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
