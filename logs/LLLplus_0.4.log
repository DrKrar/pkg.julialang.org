>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.079792 seconds (3.94 M allocations: 1.788 GB, 15.20% gc time)
  0.894112 seconds (3.72 M allocations: 1.778 GB, 13.90% gc time)

Testing LLL on 10x10 complex matrix...
  1.223073 seconds (1.65 M allocations: 74.649 MB, 1.23% gc time)
  0.000636 seconds (3.47 k allocations: 283.875 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.582405 seconds (942.88 k allocations: 42.720 MB, 2.00% gc time)
  0.000308 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.855160 seconds (4.29 M allocations: 223.321 MB, 2.96% gc time)
  0.278110 seconds (3.70 M allocations: 196.817 MB, 8.35% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.083822 seconds (193.27 k allocations: 89.289 MB, 32.18% gc time)
max col-norm of lll-reduced basis is 30.0
  5.862885 seconds (28.07 M allocations: 4.001 GB, 5.53% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
