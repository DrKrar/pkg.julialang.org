>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages
INFO: Nothing to be done
INFO: METADATA is out-of-date — you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (543.7265625 MB free)
Uptime: 33865.0 sec
Load Avg:  0.814453125  1.10986328125  1.23681640625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1514892 s       2607 s     156388 s    1295636 s         86 s
#2  3499 MHz    1013665 s       1018 s     140031 s    2023598 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.8.6
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.167448 seconds (3.85 M allocations: 2.305 GB, 15.29% gc time)
  0.962156 seconds (3.63 M allocations: 2.296 GB, 17.22% gc time)

Testing LLL on 10x10 complex matrix...
  1.010607 seconds (1.64 M allocations: 74.557 MB, 0.95% gc time)
  0.000412 seconds (2.43 k allocations: 192.594 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.513500 seconds (942.88 k allocations: 42.720 MB, 1.54% gc time)
  0.000221 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.571200 seconds (4.29 M allocations: 223.321 MB, 3.51% gc time)
  0.180248 seconds (3.70 M allocations: 196.817 MB, 9.00% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.064551 seconds (193.27 k allocations: 89.289 MB, 45.35% gc time)
max col-norm of lll-reduced basis is 30.0
  4.452503 seconds (28.07 M allocations: 4.001 GB, 6.10% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
