>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  0.854929 seconds (3.09 M allocations: 1.248 GB, 14.44% gc time)
  0.643737 seconds (2.88 M allocations: 1.238 GB, 15.76% gc time)

Testing LLL on 10x10 complex matrix...
  1.077991 seconds (1.64 M allocations: 74.571 MB, 0.97% gc time)
  0.000446 seconds (2.61 k allocations: 207.969 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.534143 seconds (942.52 k allocations: 42.730 MB, 1.64% gc time)
  0.000357 seconds (499 allocations: 146.078 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.639417 seconds (4.26 M allocations: 222.293 MB, 3.90% gc time)
  0.211490 seconds (3.70 M allocations: 196.817 MB, 9.93% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.067931 seconds (193.27 k allocations: 89.289 MB, 34.44% gc time)
max col-norm of lll-reduced basis is 30.0
  4.562244 seconds (28.07 M allocations: 4.001 GB, 6.21% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
