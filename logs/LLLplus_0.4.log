>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (532.27734375 MB free)
Uptime: 35004.0 sec
Load Avg:  0.8720703125  1.044921875  1.1728515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1616076 s       3903 s     178874 s    1256771 s         82 s
#2  3500 MHz    1070846 s       2482 s     160665 s    2071267 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.8.6
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  0.817516 seconds (3.11 M allocations: 1.139 GB, 14.00% gc time)
  0.697096 seconds (2.90 M allocations: 1.130 GB, 14.72% gc time)

Testing LLL on 10x10 complex matrix...
  1.109915 seconds (1.65 M allocations: 74.678 MB, 0.91% gc time)
  0.000626 seconds (3.94 k allocations: 313.719 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.535375 seconds (942.46 k allocations: 42.695 MB, 1.33% gc time)
  0.000275 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.624579 seconds (4.29 M allocations: 223.321 MB, 3.54% gc time)
  0.191024 seconds (3.70 M allocations: 196.817 MB, 8.24% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.061935 seconds (193.27 k allocations: 89.289 MB, 41.77% gc time)
max col-norm of lll-reduced basis is 30.0
  4.499594 seconds (28.07 M allocations: 4.001 GB, 5.83% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
