>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.0-dev+5624
Commit 2b07246* (2015-06-26 20:21 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
   2.344 seconds      (3266 k allocations: 1949 MB, 9.19% gc time)
   1.689 seconds      (3057 k allocations: 1940 MB, 8.02% gc time)

Testing LLL on 10x10 complex matrix...
   1.835 seconds      (1454 k allocations: 64368 KB, 0.77% gc time)
 828.243 microseconds (3193 allocations: 262 KB)
Testing VBLAST on same 10x10 complex matrix...
 995.172 milliseconds (754 k allocations: 33194 KB, 0.66% gc time)
 157.939 microseconds (463 allocations: 91504 bytes)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
 990.072 milliseconds (4223 k allocations: 219 MB, 2.99% gc time)
 357.131 milliseconds (3698 k allocations: 197 MB, 5.66% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
  82.374 milliseconds (192 k allocations: 91361 KB, 17.09% gc time)
max col-norm of lll-reduced basis is 30.0
   7.288 seconds      (27780 k allocations: 4081 MB, 6.40% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
