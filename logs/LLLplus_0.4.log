>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.0-pre+7097
Commit c4b089f (2015-08-29 13:17 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Sandybridge)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.210295 seconds (3.07 M allocations: 1.330 GB, 9.73% gc time)
  0.910636 seconds (2.87 M allocations: 1.321 GB, 10.31% gc time)

Testing LLL on 10x10 complex matrix...
  1.529848 seconds (1.50 M allocations: 67.571 MB, 0.80% gc time)
  0.000260 seconds (1.26 k allocations: 105.781 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.773751 seconds (844.88 k allocations: 37.887 MB, 0.55% gc time)
  0.000228 seconds (499 allocations: 146.078 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.939467 seconds (4.25 M allocations: 221.166 MB, 2.85% gc time)
  0.343391 seconds (3.70 M allocations: 196.817 MB, 5.69% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
  0.060716 seconds (191.90 k allocations: 89.220 MB, 19.28% gc time)
max col-norm of lll-reduced basis is 30.0
  6.760933 seconds (27.60 M allocations: 3.954 GB, 4.86% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
