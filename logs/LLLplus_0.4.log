>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.504511 seconds (3.69 M allocations: 1.870 GB, 15.37% gc time)
  0.945284 seconds (3.48 M allocations: 1.861 GB, 16.01% gc time)

Testing LLL on 10x10 complex matrix...
  1.162975 seconds (1.64 M allocations: 74.497 MB, 1.18% gc time)
  0.000553 seconds (2.51 k allocations: 189.750 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.676934 seconds (942.93 k allocations: 42.753 MB, 1.07% gc time)
  0.000395 seconds (499 allocations: 146.078 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  1.131110 seconds (4.26 M allocations: 222.293 MB, 2.65% gc time)
  0.378341 seconds (3.70 M allocations: 196.817 MB, 5.78% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.077533 seconds (191.90 k allocations: 89.220 MB, 21.52% gc time)
max col-norm of lll-reduced basis is 30.0
  5.595290 seconds (28.07 M allocations: 4.001 GB, 5.16% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
