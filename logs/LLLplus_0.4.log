>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.0-dev+5846
Commit 0503f2a (2015-07-08 02:04 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E5-2650 0 @ 2.00GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
   2.859 seconds      (3999 k allocations: 2787 MB, 11.62% gc time)
   2.328 seconds      (3790 k allocations: 2778 MB, 9.91% gc time)

Testing LLL on 10x10 complex matrix...
   1.780 seconds      (1473 k allocations: 65576 KB, 0.62% gc time)
 379.829 microseconds (1905 allocations: 160 KB)
Testing VBLAST on same 10x10 complex matrix...
 732.059 milliseconds (770 k allocations: 34115 KB, 1.02% gc time)
 333.478 microseconds (463 allocations: 91504 bytes)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
 992.067 milliseconds (4226 k allocations: 220 MB, 1.88% gc time)
 367.017 milliseconds (3698 k allocations: 197 MB, 5.42% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
  90.868 milliseconds (192 k allocations: 91361 KB, 22.20% gc time)
max col-norm of lll-reduced basis is 30.0
   7.588 seconds      (27827 k allocations: 4083 MB, 6.53% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed
INFO: No packages to install, update or remove

>>> End of log
