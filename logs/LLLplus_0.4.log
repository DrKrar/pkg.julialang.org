>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.0-dev+6661
Commit 9c3cb36 (2015-08-12 03:21 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i7-4960HQ CPU @ 2.60GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Haswell)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  0.952211 seconds (3.74 M allocations: 1.846 GB, 11.14% gc time)
  0.733802 seconds (3.54 M allocations: 1.837 GB, 10.75% gc time)

Testing LLL on 10x10 complex matrix...
  0.935660 seconds (1.40 M allocations: 63.818 MB, 1.22% gc time)
  0.000285 seconds (1.50 k allocations: 123.016 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.418155 seconds (736.66 k allocations: 33.154 MB, 0.92% gc time)
  0.000199 seconds (463 allocations: 89.375 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.586173 seconds (4.22 M allocations: 220.310 MB, 3.88% gc time)
  0.202194 seconds (3.70 M allocations: 196.817 MB, 8.40% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910193
  0.038530 seconds (191.90 k allocations: 89.220 MB, 20.31% gc time)
max col-norm of lll-reduced basis is 30.0
  3.930343 seconds (27.67 M allocations: 3.977 GB, 7.12% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
