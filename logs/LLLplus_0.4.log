>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (607.421875 MB free)
Uptime: 39032.0 sec
Load Avg:  1.09814453125  1.12646484375  1.27197265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1960608 s       3540 s     192102 s    1313080 s        215 s
#2  3499 MHz    1180033 s       4118 s     176740 s    2364459 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.9.4
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  1.806345 seconds (5.32 M allocations: 3.793 GB, 16.87% gc time)
  1.569702 seconds (5.11 M allocations: 3.784 GB, 15.15% gc time)

Testing LLL on 10x10 complex matrix...
  1.125443 seconds (1.65 M allocations: 74.810 MB, 1.29% gc time)
  0.000593 seconds (5.08 k allocations: 409.422 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.544728 seconds (942.45 k allocations: 42.693 MB, 1.38% gc time)
  0.000253 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.625479 seconds (4.29 M allocations: 223.317 MB, 4.27% gc time)
  0.183941 seconds (3.70 M allocations: 196.817 MB, 12.25% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.052132 seconds (191.90 k allocations: 89.220 MB, 29.60% gc time)
max col-norm of lll-reduced basis is 30.0
  4.604839 seconds (28.07 M allocations: 4.001 GB, 7.02% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
