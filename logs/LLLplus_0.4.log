>>> 'Pkg.add("LLLplus")' log
INFO: Cloning cache of LLLplus from git://github.com/christianpeel/LLLplus.jl.git
INFO: Installing LLLplus v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of LLLplus
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("LLLplus")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (657.0390625 MB free)
Uptime: 37773.0 sec
Load Avg:  0.93408203125  1.0771484375  1.1875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz    1878624 s       5888 s     170399 s    1302258 s        177 s
#2  3496 MHz    1138722 s         86 s     151120 s    2319252 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - LLLplus                       0.1.1
1 additional packages:
 - Compat                        0.9.2
INFO: Testing LLLplus
tests with small matrices...
...done

In all the following tests, the first time includes the JIT compilation; 
for the second execution the compilation is already done and the time
should be faster.

Testing LLL on 1000x1000 real matrix...
  0.838609 seconds (2.88 M allocations: 1.056 GB, 12.78% gc time)
  0.592754 seconds (2.67 M allocations: 1.047 GB, 12.55% gc time)

Testing LLL on 10x10 complex matrix...
  1.145696 seconds (1.64 M allocations: 74.476 MB, 1.00% gc time)
  0.000556 seconds (1.34 k allocations: 113.656 KB)
Testing VBLAST on same 10x10 complex matrix...
  0.545058 seconds (942.87 k allocations: 42.719 MB, 1.61% gc time)
  0.000298 seconds (499 allocations: 146.391 KB)

Testing sphere decoder on 100000 samples of 2x2 BPSK system...
  0.692179 seconds (4.29 M allocations: 223.317 MB, 4.06% gc time)
  0.181791 seconds (3.70 M allocations: 196.817 MB, 12.93% gc time)
Error Rate is 0.0. It should be zero or very small.

Testing now with 200x200 matrix from latticechallenge.org.
All the column norms should be 30.
max col-norm of input is 233.24879420910196
  0.070179 seconds (193.27 k allocations: 89.289 MB, 34.31% gc time)
max col-norm of lll-reduced basis is 30.0
  4.387151 seconds (28.07 M allocations: 4.001 GB, 7.48% gc time)
max column norm of seysen-reduced basis is 30.0
INFO: LLLplus tests passed

>>> End of log
