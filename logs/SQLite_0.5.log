>>> 'Pkg.add("SQLite")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing CategoricalArrays v0.1.0
INFO: Installing DataArrays v0.3.10
INFO: Installing DataFrames v0.8.4
INFO: Installing DataStreams v0.1.2
INFO: Installing FileIO v0.2.0
INFO: Installing GZip v0.2.20
INFO: Installing LegacyStrings v0.1.1
INFO: Installing NullableArrays v0.0.10
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.2.1
INFO: Installing SQLite v0.4.1
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.11.1
INFO: Installing URIParser v0.1.6
INFO: Installing WeakRefStrings v0.2.0
INFO: Building SQLite
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SQLite
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SQLite")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1248.64453125 MB free)
Uptime: 24743.0 sec
Load Avg:  0.99267578125  0.98974609375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1426911 s       5821 s     160611 s     598696 s        103 s
#2  3500 MHz     446984 s       1564 s      80987 s    1867089 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - SQLite                        0.4.1
16 additional packages:
 - BinDeps                       0.4.5
 - CategoricalArrays             0.1.0
 - Compat                        0.9.3
 - DataArrays                    0.3.10
 - DataFrames                    0.8.4
 - DataStreams                   0.1.2
 - FileIO                        0.2.0
 - GZip                          0.2.20
 - LegacyStrings                 0.1.1
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
 - SHA                           0.2.1
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.11.1
 - URIParser                     0.1.6
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for SQLite...
INFO: Installing DataStreamsIntegrationTests v0.0.1
INFO: Testing SQLite
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:298 overwritten in module Main at /home/vagrant/.julia/v0.5/SQLite/test/datastreams.jl:26.
[2016-11-06T11:14:57.875]: Test high-level to sink from source; e.g. CSV.write
[2016-11-06T11:14:57.987]: Sink: SQLite.Sink args => Source: DataFrame args
[2016-11-06T11:14:59.16]: Sink: SQLite.Sink args => Source: DataFrame args + append
[2016-11-06T11:14:59.274]: Sink: SQLite.Sink args => Source: DataFrame args + transforms
[2016-11-06T11:15:00.339]: Sink: SQLite.Sink args => Source: DataFrame args + append + transforms
[2016-11-06T11:15:00.382]: Sink: SQLite.Sink => Source: DataFrame args
[2016-11-06T11:15:00.481]: Sink: SQLite.Sink => Source: DataFrame args + append
[2016-11-06T11:15:00.59]: Sink: SQLite.Sink => Source: DataFrame args + transforms
[2016-11-06T11:15:00.626]: Sink: SQLite.Sink => Source: DataFrame args + append + transforms`
[2016-11-06T11:15:00.659]: Sink: SQLite.Sink args => Source: DataFrame
[2016-11-06T11:15:00.704]: Sink: SQLite.Sink args => Source: DataFrame + append
[2016-11-06T11:15:00.778]: Sink: SQLite.Sink args => Source: DataFrame + transforms
[2016-11-06T11:15:00.889]: Sink: SQLite.Sink args => Source: DataFrame + append + transforms
[2016-11-06T11:15:00.915]: Sink: SQLite.Sink => Source: DataFrame
[2016-11-06T11:15:01.011]: Sink: SQLite.Sink => Source: DataFrame + append
[2016-11-06T11:15:01.083]: Sink: SQLite.Sink => Source: DataFrame + transforms
[2016-11-06T11:15:01.101]: Sink: SQLite.Sink => Source: DataFrame + append + transforms
[2016-11-06T11:15:01.155]: finished...
[2016-11-06T11:15:01.169]: Test high-level from source to sink; e.g. CSV.read
[2016-11-06T11:15:01.169]: Source: SQLite.Source args => Sink: DataFrame args
[2016-11-06T11:15:01.591]: Source: SQLite.Source args => Sink: DataFrame args + append
[2016-11-06T11:15:01.673]: Source: SQLite.Source args => Sink: DataFrame args + transforms
[2016-11-06T11:15:01.951]: Source: SQLite.Source args => Sink: DataFrame args + append + transforms
[2016-11-06T11:15:01.961]: Source: SQLite.Source args => Sink: DataFrame
[2016-11-06T11:15:02.048]: Source: SQLite.Source args => Sink: DataFrame + append
[2016-11-06T11:15:02.161]: Source: SQLite.Source args => Sink: DataFrame + transforms
[2016-11-06T11:15:02.199]: Source: SQLite.Source args => Sink: DataFrame + append + transforms`
[2016-11-06T11:15:02.208]: Source: SQLite.Source => Sink: DataFrame args
[2016-11-06T11:15:02.234]: Source: SQLite.Source => Sink: DataFrame args + append
[2016-11-06T11:15:02.296]: Source: SQLite.Source => Sink: DataFrame args + transforms
[2016-11-06T11:15:02.311]: Source: SQLite.Source => Sink: DataFrame args + append + transforms
[2016-11-06T11:15:02.318]: Source: SQLite.Source => Sink: DataFrame
[2016-11-06T11:15:02.339]: Source: SQLite.Source => Sink: DataFrame + append
[2016-11-06T11:15:02.392]: Source: SQLite.Source => Sink: DataFrame + transforms
[2016-11-06T11:15:02.407]: Source: SQLite.Source => Sink: DataFrame + append + transforms
[2016-11-06T11:15:02.42]: Test high-level from source to sink; e.g. CSV.read
[2016-11-06T11:15:02.42]: Source: SQLite.Source args => Sink: SQLite.Sink args
[2016-11-06T11:15:02.705]: Source: SQLite.Source args => Sink: SQLite.Sink args + append
[2016-11-06T11:15:02.81]: Source: SQLite.Source args => Sink: SQLite.Sink args + transforms
[2016-11-06T11:15:03.018]: Source: SQLite.Source args => Sink: SQLite.Sink args + append + transforms
[2016-11-06T11:15:03.068]: Source: SQLite.Source args => Sink: SQLite.Sink
[2016-11-06T11:15:03.135]: Source: SQLite.Source args => Sink: SQLite.Sink + append
[2016-11-06T11:15:03.252]: Source: SQLite.Source args => Sink: SQLite.Sink + transforms
[2016-11-06T11:15:03.303]: Source: SQLite.Source args => Sink: SQLite.Sink + append + transforms`
[2016-11-06T11:15:03.338]: Source: SQLite.Source => Sink: SQLite.Sink args
[2016-11-06T11:15:03.391]: Source: SQLite.Source => Sink: SQLite.Sink args + append
[2016-11-06T11:15:03.624]: Source: SQLite.Source => Sink: SQLite.Sink args + transforms
[2016-11-06T11:15:03.691]: Source: SQLite.Source => Sink: SQLite.Sink args + append + transforms
[2016-11-06T11:15:03.751]: Source: SQLite.Source => Sink: SQLite.Sink
[2016-11-06T11:15:03.779]: Source: SQLite.Source => Sink: SQLite.Sink + append
[2016-11-06T11:15:03.841]: Source: SQLite.Source => Sink: SQLite.Sink + transforms
[2016-11-06T11:15:03.866]: Source: SQLite.Source => Sink: SQLite.Sink + append + transforms
[2016-11-06T11:15:03.937]: Test high-level to sink from source; e.g. CSV.write
[2016-11-06T11:15:03.938]: Sink: SQLite.Sink args => Source: SQLite.Source args
[2016-11-06T11:15:04.133]: Sink: SQLite.Sink args => Source: SQLite.Source args + append
[2016-11-06T11:15:04.234]: Sink: SQLite.Sink args => Source: SQLite.Source args + transforms
[2016-11-06T11:15:04.373]: Sink: SQLite.Sink args => Source: SQLite.Source args + append + transforms
[2016-11-06T11:15:04.449]: Sink: SQLite.Sink => Source: SQLite.Source args
[2016-11-06T11:15:04.53]: Sink: SQLite.Sink => Source: SQLite.Source args + append
[2016-11-06T11:15:04.626]: Sink: SQLite.Sink => Source: SQLite.Source args + transforms
[2016-11-06T11:15:04.682]: Sink: SQLite.Sink => Source: SQLite.Source args + append + transforms`
[2016-11-06T11:15:04.716]: Sink: SQLite.Sink args => Source: SQLite.Source
[2016-11-06T11:15:04.771]: Sink: SQLite.Sink args => Source: SQLite.Source + append
[2016-11-06T11:15:04.834]: Sink: SQLite.Sink args => Source: SQLite.Source + transforms
[2016-11-06T11:15:04.908]: Sink: SQLite.Sink args => Source: SQLite.Source + append + transforms
[2016-11-06T11:15:04.95]: Sink: SQLite.Sink => Source: SQLite.Source
[2016-11-06T11:15:05.04]: Sink: SQLite.Sink => Source: SQLite.Source + append
[2016-11-06T11:15:05.102]: Sink: SQLite.Sink => Source: SQLite.Source + transforms
[2016-11-06T11:15:05.124]: Sink: SQLite.Sink => Source: SQLite.Source + append + transforms
[2016-11-06T11:15:05.152]: finished...
INFO: SQLite tests passed
INFO: No packages to install, update or remove

>>> End of log
