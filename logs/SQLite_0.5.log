>>> 'Pkg.add("SQLite")' log
INFO: Installing BinDeps v0.4.7
INFO: Installing CategoricalArrays v0.1.2
INFO: Installing DataArrays v0.3.12
INFO: Installing DataFrames v0.9.0
INFO: Installing DataStreams v0.1.2
INFO: Installing DataStructures v0.5.3
INFO: Installing FileIO v0.3.0
INFO: Installing GZip v0.2.20
INFO: Installing LegacyStrings v0.2.0
INFO: Installing NullableArrays v0.1.0
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.3.2
INFO: Installing SQLite v0.4.2
INFO: Installing SortingAlgorithms v0.1.1
INFO: Installing SpecialFunctions v0.1.1
INFO: Installing StatsBase v0.13.1
INFO: Installing URIParser v0.1.8
INFO: Installing WeakRefStrings v0.2.0
INFO: Building SQLite
INFO: Package database updated

>>> 'Pkg.test("SQLite")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1090.2109375 MB free)
Uptime: 31581.0 sec
Load Avg:  0.95703125  1.01318359375  1.037109375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1880136 s       1265 s     154799 s     722629 s        127 s
#2  3500 MHz     576940 s       5341 s      81749 s    2392359 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - SQLite                        0.4.2
18 additional packages:
 - BinDeps                       0.4.7
 - CategoricalArrays             0.1.2
 - Compat                        0.20.0
 - DataArrays                    0.3.12
 - DataFrames                    0.9.0
 - DataStreams                   0.1.2
 - DataStructures                0.5.3
 - FileIO                        0.3.0
 - GZip                          0.2.20
 - LegacyStrings                 0.2.0
 - NullableArrays                0.1.0
 - Reexport                      0.0.3
 - SHA                           0.3.2
 - SortingAlgorithms             0.1.1
 - SpecialFunctions              0.1.1
 - StatsBase                     0.13.1
 - URIParser                     0.1.8
 - WeakRefStrings                0.2.0
INFO: Computing test dependencies for SQLite...
INFO: Installing DataStreamsIntegrationTests v0.0.1
INFO: Testing SQLite
WARNING: Method definition (::Type{DataFrames.DataFrame})(Any, DataStreams.Data.Schema, Type{DataStreams.Data.Field}, Bool, Array{UInt8, 1}) in module Data at /home/vagrant/.julia/v0.5/DataStreams/src/DataStreams.jl:298 overwritten in module Main at /home/vagrant/.julia/v0.5/SQLite/test/datastreams.jl:26.
[2017-03-13T13:08:46.795]: Test high-level to sink from source; e.g. CSV.write
[2017-03-13T13:08:46.928]: Sink: SQLite.Sink args => Source: DataFrame args
[2017-03-13T13:08:48.013]: Sink: SQLite.Sink args => Source: DataFrame args + append
[2017-03-13T13:08:48.086]: Sink: SQLite.Sink args => Source: DataFrame args + transforms
[2017-03-13T13:08:48.949]: Sink: SQLite.Sink args => Source: DataFrame args + append + transforms
[2017-03-13T13:08:48.971]: Sink: SQLite.Sink => Source: DataFrame args
[2017-03-13T13:08:49.018]: Sink: SQLite.Sink => Source: DataFrame args + append
[2017-03-13T13:08:49.086]: Sink: SQLite.Sink => Source: DataFrame args + transforms
[2017-03-13T13:08:49.154]: Sink: SQLite.Sink => Source: DataFrame args + append + transforms`
[2017-03-13T13:08:49.175]: Sink: SQLite.Sink args => Source: DataFrame
[2017-03-13T13:08:49.222]: Sink: SQLite.Sink args => Source: DataFrame + append
[2017-03-13T13:08:49.299]: Sink: SQLite.Sink args => Source: DataFrame + transforms
[2017-03-13T13:08:49.354]: Sink: SQLite.Sink args => Source: DataFrame + append + transforms
[2017-03-13T13:08:49.393]: Sink: SQLite.Sink => Source: DataFrame
[2017-03-13T13:08:49.419]: Sink: SQLite.Sink => Source: DataFrame + append
[2017-03-13T13:08:49.493]: Sink: SQLite.Sink => Source: DataFrame + transforms
[2017-03-13T13:08:49.511]: Sink: SQLite.Sink => Source: DataFrame + append + transforms
[2017-03-13T13:08:49.53]: finished...
[2017-03-13T13:08:49.535]: Test high-level from source to sink; e.g. CSV.read
[2017-03-13T13:08:49.535]: Source: SQLite.Source args => Sink: DataFrame args
[2017-03-13T13:08:49.906]: Source: SQLite.Source args => Sink: DataFrame args + append
[2017-03-13T13:08:49.982]: Source: SQLite.Source args => Sink: DataFrame args + transforms
[2017-03-13T13:08:50.266]: Source: SQLite.Source args => Sink: DataFrame args + append + transforms
[2017-03-13T13:08:50.272]: Source: SQLite.Source args => Sink: DataFrame
[2017-03-13T13:08:50.343]: Source: SQLite.Source args => Sink: DataFrame + append
[2017-03-13T13:08:50.446]: Source: SQLite.Source args => Sink: DataFrame + transforms
[2017-03-13T13:08:50.475]: Source: SQLite.Source args => Sink: DataFrame + append + transforms`
[2017-03-13T13:08:50.487]: Source: SQLite.Source => Sink: DataFrame args
[2017-03-13T13:08:50.507]: Source: SQLite.Source => Sink: DataFrame args + append
[2017-03-13T13:08:50.551]: Source: SQLite.Source => Sink: DataFrame args + transforms
[2017-03-13T13:08:50.562]: Source: SQLite.Source => Sink: DataFrame args + append + transforms
[2017-03-13T13:08:50.569]: Source: SQLite.Source => Sink: DataFrame
[2017-03-13T13:08:50.586]: Source: SQLite.Source => Sink: DataFrame + append
[2017-03-13T13:08:50.633]: Source: SQLite.Source => Sink: DataFrame + transforms
[2017-03-13T13:08:50.641]: Source: SQLite.Source => Sink: DataFrame + append + transforms
[2017-03-13T13:08:50.649]: Test high-level from source to sink; e.g. CSV.read
[2017-03-13T13:08:50.65]: Source: SQLite.Source args => Sink: SQLite.Sink args
[2017-03-13T13:08:51.041]: Source: SQLite.Source args => Sink: SQLite.Sink args + append
[2017-03-13T13:08:51.167]: Source: SQLite.Source args => Sink: SQLite.Sink args + transforms
[2017-03-13T13:08:51.347]: Source: SQLite.Source args => Sink: SQLite.Sink args + append + transforms
[2017-03-13T13:08:51.379]: Source: SQLite.Source args => Sink: SQLite.Sink
[2017-03-13T13:08:51.476]: Source: SQLite.Source args => Sink: SQLite.Sink + append
[2017-03-13T13:08:51.576]: Source: SQLite.Source args => Sink: SQLite.Sink + transforms
[2017-03-13T13:08:51.652]: Source: SQLite.Source args => Sink: SQLite.Sink + append + transforms`
[2017-03-13T13:08:51.675]: Source: SQLite.Source => Sink: SQLite.Sink args
[2017-03-13T13:08:51.725]: Source: SQLite.Source => Sink: SQLite.Sink args + append
[2017-03-13T13:08:51.777]: Source: SQLite.Source => Sink: SQLite.Sink args + transforms
[2017-03-13T13:08:51.818]: Source: SQLite.Source => Sink: SQLite.Sink args + append + transforms
[2017-03-13T13:08:51.842]: Source: SQLite.Source => Sink: SQLite.Sink
[2017-03-13T13:08:51.874]: Source: SQLite.Source => Sink: SQLite.Sink + append
[2017-03-13T13:08:51.945]: Source: SQLite.Source => Sink: SQLite.Sink + transforms
[2017-03-13T13:08:51.97]: Source: SQLite.Source => Sink: SQLite.Sink + append + transforms
[2017-03-13T13:08:51.993]: Test high-level to sink from source; e.g. CSV.write
[2017-03-13T13:08:51.994]: Sink: SQLite.Sink args => Source: SQLite.Source args
[2017-03-13T13:08:52.082]: Sink: SQLite.Sink args => Source: SQLite.Source args + append
[2017-03-13T13:08:52.153]: Sink: SQLite.Sink args => Source: SQLite.Source args + transforms
[2017-03-13T13:08:52.198]: Sink: SQLite.Sink args => Source: SQLite.Source args + append + transforms
[2017-03-13T13:08:52.221]: Sink: SQLite.Sink => Source: SQLite.Source args
[2017-03-13T13:08:52.26]: Sink: SQLite.Sink => Source: SQLite.Source args + append
[2017-03-13T13:08:52.304]: Sink: SQLite.Sink => Source: SQLite.Source args + transforms
[2017-03-13T13:08:52.328]: Sink: SQLite.Sink => Source: SQLite.Source args + append + transforms`
[2017-03-13T13:08:52.363]: Sink: SQLite.Sink args => Source: SQLite.Source
[2017-03-13T13:08:52.485]: Sink: SQLite.Sink args => Source: SQLite.Source + append
[2017-03-13T13:08:52.528]: Sink: SQLite.Sink args => Source: SQLite.Source + transforms
[2017-03-13T13:08:52.582]: Sink: SQLite.Sink args => Source: SQLite.Source + append + transforms
[2017-03-13T13:08:52.623]: Sink: SQLite.Sink => Source: SQLite.Source
[2017-03-13T13:08:52.719]: Sink: SQLite.Sink => Source: SQLite.Source + append
[2017-03-13T13:08:52.808]: Sink: SQLite.Sink => Source: SQLite.Source + transforms
[2017-03-13T13:08:52.831]: Sink: SQLite.Sink => Source: SQLite.Source + append + transforms
[2017-03-13T13:08:52.859]: finished...
INFO: SQLite tests passed
INFO: Removing DataStreamsIntegrationTests v0.0.1

>>> End of log
