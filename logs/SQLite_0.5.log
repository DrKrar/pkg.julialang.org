>>> 'Pkg.add("SQLite")' log
INFO: Cloning cache of CSV from https://github.com/JuliaDB/CSV.jl.git
INFO: Cloning cache of DataStreams from https://github.com/JuliaDB/DataStreams.jl.git
INFO: Cloning cache of SQLite from https://github.com/quinnj/SQLite.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing BufferedStreams v0.0.2
INFO: Installing CSV v0.0.4
INFO: Installing DataStreams v0.0.3
INFO: Installing Libz v0.0.2
INFO: Installing NullableArrays v0.0.2
INFO: Installing Reexport v0.0.3
INFO: Installing SHA v0.1.2
INFO: Installing SQLite v0.3.1
INFO: Installing URIParser v0.1.3
INFO: Building SQLite
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SQLite
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SQLite")' log
Julia Version 0.5.0-dev+3184
Commit fb283c6 (2016-03-17 08:49 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing SQLite

WARNING: deprecated syntax "call(::Type{NullableArray{T,N}}, ...)".
Use "(::Type{NullableArray{T,N}})(...)" instead.

WARNING: deprecated syntax "call(::Base.MinFun, ...)".
Use "(::Base.MinFun)(...)" instead.

WARNING: deprecated syntax "call(::Base.MaxFun, ...)".
Use "(::Base.MaxFun)(...)" instead.
WARNING: Method definition (::Type{CSV.Options})() in module CSV at /home/vagrant/.julia/v0.5/CSV/src/CSV.jl:49 overwritten at /home/vagrant/.julia/v0.5/CSV/src/CSV.jl:50.
WARNING: Method definition read(Base.AbstractIOBuffer, Type{UInt8}) in module Base at iobuffer.jl:84 overwritten in module CSV at /home/vagrant/.julia/v0.5/CSV/src/Source.jl:13.
WARNING: Method definition sqliteprepare(Any, Any, Any, Any) in module SQLite at /home/vagrant/.julia/v0.5/SQLite/src/SQLite.jl:82 overwritten at /home/vagrant/.julia/v0.5/SQLite/src/old_ui.jl:58.
WARNING: Method definition regexp(Ptr{Void}, Int32, Ptr{Ptr{Void}}) in module SQLite at /home/vagrant/.julia/v0.5/SQLite/src/UDF.jl:46 overwritten at /home/vagrant/.julia/v0.5/SQLite/src/UDF.jl:46.
WARNING: Method definition regexp(Ptr{Void}, Int32, Ptr{Ptr{Void}}) in module SQLite at /home/vagrant/.julia/v0.5/SQLite/src/UDF.jl:46 overwritten at /home/vagrant/.julia/v0.5/SQLite/src/UDF.jl:46.
WARNING: Method definition regexp(Ptr{Void}, Int32, Ptr{Ptr{Void}}) in module SQLite at /home/vagrant/.julia/v0.5/SQLite/src/UDF.jl:46 overwritten at /home/vagrant/.julia/v0.5/SQLite/src/UDF.jl:46.
ERROR: LoadError: MethodError: no method matching cfunction(::Void, ::Type{Void}, ::Tuple{DataType,DataType,DataType})
Closest candidates are:
  cfunction(!Matched::Function, ::Any, ::Any)
 in #register#1(::Int64, ::ASCIIString, ::Bool, ::Any, ::SQLite.DB, ::Any) at /home/vagrant/.julia/v0.5/SQLite/src/UDF.jl:198
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/SQLite/test/runtests.jl, in expression starting on line 184
===============================[ ERROR: SQLite ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/SQLite/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("SQLite had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::ASCIIString) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#3(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
