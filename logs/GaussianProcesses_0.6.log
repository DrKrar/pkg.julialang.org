>>> 'Pkg.add("GaussianProcesses")' log
INFO: Cloning cache of GaussianProcesses from https://github.com/STOR-i/GaussianProcesses.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing DiffBase v0.0.2
INFO: Installing Distances v0.3.2
INFO: Installing ForwardDiff v0.3.3
INFO: Installing GaussianProcesses v0.4.0
INFO: Installing LineSearches v0.1.2
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.3
INFO: Installing PDMats v0.5.2
INFO: Installing PositiveFactorizations v0.0.3
INFO: Installing ScikitLearnBase v0.2.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of GaussianProcesses
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("GaussianProcesses")' log
Julia Version 0.6.0-dev.1662
Commit f27c6f3 (2016-12-23 02:28 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1776.11328125 MB free)
Uptime: 30654.0 sec
Load Avg:  0.98779296875  0.9853515625  0.97607421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1319791 s       1522 s     155280 s    1295757 s        106 s
#2  3499 MHz     515111 s       4457 s     121220 s    2338875 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - GaussianProcesses             0.4.0
 - JSON                          0.8.0
11 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - DiffBase                      0.0.2
 - Distances                     0.3.2
 - ForwardDiff                   0.3.3
 - LineSearches                  0.1.2
 - NaNMath                       0.2.2
 - Optim                         0.7.3
 - PDMats                        0.5.2
 - PositiveFactorizations        0.0.3
 - ScikitLearnBase               0.2.1
INFO: Computing test dependencies for GaussianProcesses...
INFO: No packages to install, update or remove
INFO: Testing GaussianProcesses
Running test_utils.jl...
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in exp(::Array{Float64,1}) at ./deprecated.jl:50
 in GaussianProcesses.SEArd(::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/se_ard.jl:15
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_utils.jl, in expression starting on line 9
Running test_GP.jl...
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sin(::Array{Float64,1}) at ./deprecated.jl:50
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 8
WARNING: sumabs2(A,region) is deprecated, use sum(abs2,A,region) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,2}, ::Int64) at ./deprecated.jl:50
 in pairwise!(::Array{Float64,2}, ::Distances.SqEuclidean, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distances/src/metrics.jl:301
 in pairwise(::Distances.SqEuclidean, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distances/src/generic.jl:121
 in cov(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/stationary.jl:18
 in _predict(::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:223
 in #predict#17(::Bool, ::Function, ::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:209
 in predict(::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:201
 in test_pred_matches_obs(::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl:17
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 21
WARNING: sumabs2(A,region) is deprecated, use sum(abs2,A,region) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,2}, ::Int64) at ./deprecated.jl:50
 in pairwise!(::Array{Float64,2}, ::Distances.SqEuclidean, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distances/src/metrics.jl:302
 in pairwise(::Distances.SqEuclidean, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distances/src/generic.jl:121
 in cov(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/stationary.jl:18
 in _predict(::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:223
 in #predict#17(::Bool, ::Function, ::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:209
 in predict(::GaussianProcesses.GP, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:201
 in test_pred_matches_obs(::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl:17
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 21
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in abs(::Array{Float64,1}) at ./deprecated.jl:50
 in test_pred_matches_obs(::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl:18
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_GP.jl, in expression starting on line 21
Running test_optim.jl...
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in exp(::Array{Float64,1}) at ./deprecated.jl:50
 in set_params!(::GaussianProcesses.SEIso, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/se_iso.jl:18
 in #set_params!#20(::Bool, ::Bool, ::Bool, ::Function, ::GaussianProcesses.GP, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:277
 in (::GaussianProcesses.#kw##set_params!)(::Array{Any,1}, ::GaussianProcesses.#set_params!, ::GaussianProcesses.GP, ::Array{Float64,1}) at ./<missing>:0
 in (::GaussianProcesses.#mll_and_dmll!#24{Bool,Bool,Bool,GaussianProcesses.GP,Array{Float64,2},Array{Float64,2}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:51
 in initial_state(::Optim.ConjugateGradient{Void,Optim.##29#31,LineSearches.#hagerzhang!}, ::Optim.Options{Void}, ::Optim.DifferentiableFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Optim/src/cg.jl:103
 in optimize(::Optim.DifferentiableFunction, ::Array{Float64,1}, ::Optim.ConjugateGradient{Void,Optim.##29#31,LineSearches.#hagerzhang!}, ::Optim.Options{Void}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:176
 in #optimize#77(::Array{Any,1}, ::Function, ::Optim.DifferentiableFunction, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Optim/src/optimize.jl:33
 in (::Optim.#kw##optimize)(::Array{Any,1}, ::Optim.#optimize, ::Optim.DifferentiableFunction, ::Array{Float64,1}) at ./<missing>:0
 in #optimize!#21(::Bool, ::Bool, ::Bool, ::Optim.ConjugateGradient{Void,Optim.##29#31,LineSearches.#hagerzhang!}, ::Array{Any,1}, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:19
 in test_optim(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl, in expression starting on line 19
ERROR: LoadError: LoadError: MethodError: no method matching set_params!(::GaussianProcesses.GP, ::Float64; noise=true, mean=true, kern=true)
Closest candidates are:
  set_params!(::GaussianProcesses.GP, !Matched::Array{Float64,1}; noise, mean, kern) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/GP.jl:275
  set_params!{K<:GaussianProcesses.Kernel}(!Matched::GaussianProcesses.Masked{K<:GaussianProcesses.Kernel}, ::Any) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/kernels/masked_kernel.jl:55 got unsupported keyword arguments "noise", "mean", "kern"
 in #optimize!#21(::Bool, ::Bool, ::Bool, ::Optim.ConjugateGradient{Void,Optim.##29#31,LineSearches.#hagerzhang!}, ::Array{Any,1}, ::Function, ::GaussianProcesses.GP) at /home/vagrant/.julia/v0.6/GaussianProcesses/src/optimize.jl:20
 in test_optim(::GaussianProcesses.SEIso, ::Array{Float64,2}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/test_optim.jl, in expression starting on line 19
while loading /home/vagrant/.julia/v0.6/GaussianProcesses/test/runtests.jl, in expression starting on line 12
==========================[ ERROR: GaussianProcesses ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/GaussianProcesses/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: GaussianProcesses had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356

>>> End of log
