>>> 'Pkg.add("Distributions")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing Distributions v0.11.1
INFO: Installing PDMats v0.5.2
INFO: Installing Rmath v0.1.5
INFO: Installing SHA v0.3.0
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Building Rmath
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/Rmath/deps/build.jl, in expression starting on line 39
INFO: Package database updated

>>> 'Pkg.test("Distributions")' log
Julia Version 0.6.0-dev.1591
Commit 56c009e (2016-12-17 00:02 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1480.734375 MB free)
Uptime: 17408.0 sec
Load Avg:  1.32568359375  1.1005859375  1.1240234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3506 MHz     945199 s       6058 s     134436 s     486426 s         46 s
#2  3506 MHz     388439 s         92 s      85564 s    1209761 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Distributions                 0.11.1
 - JSON                          0.8.0
9 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.9.5
 - PDMats                        0.5.2
 - Rmath                         0.1.5
 - SHA                           0.3.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
INFO: Computing test dependencies for Distributions...
INFO: Installing DiffBase v0.0.2
INFO: Installing ForwardDiff v0.3.3
INFO: Installing NaNMath v0.2.2
INFO: Testing Distributions
Running tests:
	From worker 2:	    testing Distributions.CategoricalDirectSampler
	From worker 2:	    testing Distributions.AliasTable
	From worker 2:	    testing Distributions.BinomialGeomSampler
	From worker 2:	    testing Distributions.BinomialTPESampler
	From worker 2:	    testing Distributions.BinomialPolySampler
	From worker 2:	    testing Distributions.BinomialAliasSampler
	From worker 3:	    testing Distributions.Categorical{Float64}(K=2, p=[0.5,0.5])
	From worker 3:	    testing Distributions.Categorical{Float64}(K=4, p=[0.1,0.3,0.2,0.4])
	From worker 2:	    testing Distributions.PoissonCountSampler
	From worker 3:	    testing Distributions.Categorical{Float64}(K=3, p=[0.15,0.25,0.6])
	From worker 3:	    [Discrete]
	From worker 3:	    ------------
	From worker 2:	    testing Distributions.PoissonADSampler
	From worker 3:	    testing Bernoulli()
	From worker 2:	    testing Distributions.PoissBinAliasSampler
	From worker 3:	    testing Bernoulli(0.25)
	From worker 3:	    testing Bernoulli(0.75)
	From worker 3:	    testing Binomial()
	From worker 3:	    testing Binomial(3)
	From worker 2:	    testing Distributions.ExponentialSampler
	From worker 3:	    testing Binomial(5, 0.4)
	From worker 3:	    testing Binomial(6, 0.8)
	From worker 3:	    testing Binomial(100, 0.1)
	From worker 3:	    testing Binomial(100, 0.9)
	From worker 3:	    testing DiscreteUniform(6)
	From worker 2:	    testing Distributions.GammaGDSampler
	From worker 3:	    testing DiscreteUniform(0, 4)
	From worker 3:	    testing DiscreteUniform(2, 8)
	From worker 2:	    testing Distributions.GammaMTSampler
	From worker 3:	    testing Geometric()
	From worker 2:	    testing Distributions.GammaGSSampler
	From worker 3:	    testing Geometric(0.02)
	From worker 3:	    testing Geometric(0.1)
	From worker 2:	    testing Distributions.GammaIPSampler{S<:Distributions.Sampleable{Distributions.Univariate,Distributions.Continuous}}
	From worker 3:	    testing Geometric(0.5)
	From worker 3:	    testing Geometric(0.9)
	From worker 3:	    testing Hypergeometric(2, 2, 2)
	From worker 2:	    -----
	From worker 3:	    testing Hypergeometric(3, 2, 2)
	From worker 3:	    testing Hypergeometric(3, 2, 0)
	From worker 3:	    testing Hypergeometric(3, 2, 5)
	From worker 3:	    testing Hypergeometric(4, 5, 6)
	From worker 3:	    testing Hypergeometric(60, 80, 100)
	From worker 3:	    testing NegativeBinomial()
	From worker 2:	    testing Distributions.Biweight{Float64}(μ=0.0, σ=1.0)
	From worker 3:	    testing NegativeBinomial(6)
	From worker 2:	    testing Distributions.Biweight{Float64}(μ=1.0, σ=3.0)
	From worker 3:	    testing NegativeBinomial(1, 0.5)
	From worker 2:	    testing Distributions.Epanechnikov{Float64}(μ=0.0, σ=1.0)
	From worker 3:	    testing NegativeBinomial(5, 0.6)
	From worker 3:	    testing NegativeBinomial(0.5, 0.5)
	From worker 3:	    testing Poisson()
	From worker 2:	    testing Distributions.Epanechnikov{Float64}(μ=1.0, σ=3.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=0.5, θ=1.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=3.0, θ=1.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=20.0, θ=1.0)
	From worker 3:	    testing Poisson(0.0)
	From worker 3:	    testing Poisson(0.5)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=120.0, θ=1.0)
	From worker 3:	    testing Poisson(2.0)
	From worker 3:	    testing Poisson(10.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=0.5, θ=2.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=3.0, θ=2.0)
	From worker 3:	    testing Poisson(80.0)
	From worker 3:	    testing Skellam()
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.0, σ=1.0, ξ=1.0)
	From worker 3:	    testing Skellam(2.0)
	From worker 3:	    testing Skellam(2.0, 3.0)
	From worker 3:	    testing Skellam(3.2, 1.8)
	From worker 3:	
	From worker 3:	    [Continuous]
	From worker 3:	    ------------
	From worker 3:	    testing Arcsine()
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.0, σ=1.0, ξ=1.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=1.0, σ=1.0, ξ=1.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.1, σ=2.0, ξ=0.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.0, σ=0.5, ξ=0.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=-1.5, σ=0.5, ξ=2.0)
	From worker 2:	    testing Distributions.InverseGaussian{Float64}(μ=1.0, λ=1.0)
	From worker 3:	    testing Arcsine(2.0)
	From worker 3:	    testing Arcsine(1.0, 2.5)
	From worker 3:	    testing Beta(2.0, 2.0)
	From worker 2:	    testing Distributions.InverseGaussian{Float64}(μ=2.0, λ=7.0)
	From worker 2:	    testing Distributions.Levy{Float64}(μ=0.0, σ=1.0)
	From worker 2:	    testing Distributions.Levy{Float64}(μ=2.0, σ=8.0)
	From worker 2:	    testing Distributions.Levy{Float64}(μ=3.0, σ=3.0)
	From worker 2:	    testing Distributions.LogNormal{Float64}(μ=0.0, σ=1.0)
	From worker 3:	    testing Beta(3.0, 4.0)
	From worker 3:	    testing Beta(17.0, 13.0)
	From worker 2:	    testing Distributions.LogNormal{Float64}(μ=0.0, σ=2.0)
	From worker 2:	    testing Distributions.LogNormal{Float64}(μ=3.0, σ=0.5)
	From worker 2:	    testing Distributions.LogNormal{Float64}(μ=3.0, σ=1.0)
	From worker 2:	    testing Distributions.LogNormal{Float64}(μ=3.0, σ=2.0)
	From worker 2:	    testing Distributions.NoncentralBeta{Float64}(α=2.0, β=2.0, λ=0.0)
	From worker 3:	    testing BetaPrime(3.0, 3.0)
	From worker 2:	    testing Distributions.NoncentralBeta{Float64}(α=2.0, β=6.0, λ=5.0)
	From worker 3:	    testing BetaPrime(3.0, 5.0)
	From worker 3:	    testing BetaPrime(5.0, 3.0)
	From worker 2:	    testing Distributions.NoncentralChisq{Float64}(ν=2.0, λ=2.0)
	From worker 3:	    testing Cauchy()
	From worker 3:	    testing Cauchy(2.0)
	From worker 3:	    testing Cauchy(0.0, 1.0)
	From worker 3:	    testing Cauchy(10.0, 1.0)
	From worker 3:	    testing Cauchy(2.0, 10.0)
	From worker 3:	    testing Chi(1)
	From worker 2:	    testing Distributions.NoncentralChisq{Float64}(ν=2.0, λ=5.0)
	From worker 3:	    testing Chi(2)
	From worker 3:	    testing Chi(3)
	From worker 3:	    testing Chi(12)
	From worker 3:	    testing Chisq(1)
	From worker 3:	    testing Chisq(8)
	From worker 3:	    testing Chisq(20)
	From worker 3:	    testing Cosine()
	From worker 2:	    testing Distributions.NoncentralF{Float64}(ν1=2.0, ν2=2.0, λ=2.0)
	From worker 3:	    testing Cosine(1.5)
	From worker 2:	    testing Distributions.NoncentralF{Float64}(ν1=8.0, ν2=10.0, λ=5.0)
	From worker 3:	    testing Cosine(2.0, 2.8)
	From worker 3:	    testing Erlang(1, 1.0)
	From worker 2:	    testing Distributions.NoncentralT{Float64}(ν=2.0, λ=2.0)
	From worker 3:	    testing Erlang(3, 1.0)
	From worker 3:	    testing Erlang(5, 2.0)
	From worker 2:	    testing Distributions.NoncentralT{Float64}(ν=10.0, λ=2.0)
	From worker 3:	    testing Exponential()
	From worker 2:	    testing Distributions.Triweight{Float64}(μ=0.0, σ=1.0)
	From worker 3:	    testing Exponential(2.0)
	From worker 3:	    testing Exponential(6.5)
	From worker 3:	    testing FDist(6.0, 8.0)
	From worker 2:	    testing Distributions.Triweight{Float64}(μ=2.0, σ=1.0)
	From worker 2:	    testing Distributions.Triweight{Float64}(μ=1.0, σ=3.0)
	From worker 2:	    testing Distributions.Triweight{Float64}(μ=1.0, σ=1.0)
	From worker 3:	    testing FDist(8.0, 6.0)
	From worker 3:	    testing Gamma()
	From worker 3:	    testing Gamma(2.0)
	From worker 3:	    testing Gamma(1.0, 1.0)
	From worker 3:	    testing Gamma(3.0, 1.0)
	From worker 3:	    testing Gamma(3.0, 2.0)
	From worker 3:	    testing GeneralizedPareto()
	From worker 3:	    testing GeneralizedPareto(1.0, 1.0)
	From worker 3:	    testing GeneralizedPareto(1.0, 1.0, 1.0)
	From worker 3:	    testing GeneralizedPareto(0.1, 2.0, 0.0)
	From worker 3:	    testing GeneralizedPareto(-1.5, 0.5, 2.0)
	From worker 3:	    testing Gumbel()
	From worker 3:	    testing Gumbel(3.0)
	From worker 3:	    testing Gumbel(3.0, 5.0)
	From worker 2:	   testing PoissonBinomial p=0.8, n=6
	From worker 3:	    testing Gumbel(5.0, 3.0)
	From worker 3:	    testing InverseGamma()
	From worker 2:	   testing PoissonBinomial p=0.5, n=10
	From worker 2:	   testing PoissonBinomial p=0.04, n=20
	From worker 2:	   testing PoissonBinomial [10 × 0.1, 10 × 0.5, 10 × 0.9]
	From worker 2:	   testing PoissonBinomial [1 × 0.99, 10 × 0.1, 100 × 0.05]
	From worker 2:	   testing PoissonBinomial [5 × 0.01, 1 × 0.99, 3 × 0.999]
	From worker 2:	   testing PoissonBinomial [10 × 0.0, 7 × 0.9, 10 × 0.5]
	From worker 3:	    testing InverseGamma(2.0)
	From worker 3:	    testing InverseGamma(1.0, 1.0)
	From worker 3:	    testing InverseGamma(1.0, 2.0)
	From worker 3:	    testing InverseGamma(2.0, 1.0)
WARNING: sumabs(x) is deprecated, use sum(abs,x) instead.
 in depwarn(	From worker 3:	    testing InverseGamma(2.0, 3.0)
::String, ::Symbol) at ./deprecated.jl:64
 in sumabs(::Array{Float64,1}) at ./deprecated.jl:50
 in 	From worker 3:	    testing InverseGaussian()
Distributions.DirichletMultinomial{Float64}(::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/dirichletmultinomial.jl:7
 in Distributions.DirichletMultinomial{T<:Real}(::Int64, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/dirichletmultinomial.jl:13
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/dirichletmultinomial.jl, in expression starting on line 11
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 in #fit_mle#30(::Float64, ::Int64, ::Function, ::Type{Distributions.DirichletMultinomial}, ::Distributions.DirichletMultinomialStats) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/dirichletmultinomial.jl:123
 in fit(::Type{Distributions.DirichletMultinomial}, ::Array{Int64,2}) at /home/vagrant/.julia/v0.6/Distributions/src/genericfit.jl:14
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/dirichletmultinomial.jl, in expression starting on line 33
	From worker 3:	    testing InverseGaussian(0.8)
	From worker 3:	    testing InverseGaussian(2.0)
	From worker 3:	    testing Laplace()
WARNING: gamma{T <: Number}(x::AbstractArray{T}) is deprecated, use gamma.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in gamma(::Array{Float64,1}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/dirichletmultinomial.jl:47 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/dirichletmultinomial.jl, in expression starting on line 46
WARNING: lgamma{T <: Number}(x::AbstractArray{T}) is deprecated, use lgamma.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in lgamma(::Array{Float64,1}) at ./deprecated.jl:50
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/dirichletmultinomial.jl:51 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/dirichletmultinomial.jl, in expression starting on line 46
	From worker 3:	    testing Laplace(2.0)
	From worker 3:	    testing Laplace(0.0, 1.0)
	From worker 3:	    testing Laplace(5.0, 1.0)
	From worker 3:	    testing Laplace(5.0, 1.5)
	From worker 3:	    testing Logistic()
	From worker 3:	    testing Logistic(2.0)
	From worker 3:	    testing Logistic(0.0, 1.0)
	From worker 3:	    testing Logistic(5.0, 1.0)
	From worker 3:	    testing Logistic(5.0, 1.5)
	From worker 3:	    testing LogNormal()
	From worker 3:	    testing LogNormal(0.0)
	From worker 3:	    testing LogNormal(0.0, 2.0)
	From worker 3:	    testing Normal(0.0, 1.0)
	From worker 2:	    testing IsoNormal
	From worker 3:	    testing Normal(-3.0, 2.0)
	From worker 3:	    testing Normal(1.0, 10.0)
	From worker 3:	    testing NormalCanon()
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in test_mvnormal(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:49
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139
 in _logpdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44 [inlined]
 in logpdf(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in test_mvnormal(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:55
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
	From worker 2:	    testing ZeroMeanIsoNormal
	From worker 3:	    testing NormalCanon(0.0, 1.0)
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in test_mvnormal(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:49
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl	From worker 3:	    testing NormalCanon(-1.0, 2.5)
:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in _logpdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44 [inlined]
 in logpdf(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in test_mvnormal(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:55
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}	From worker 3:	    testing NormalCanon(2.0, 0.8)
}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
	From worker 2:	    testing DiagNormal
	From worker 3:	    testing Pareto()
	From worker 2:	    testing ZeroMeanDiagNormal
	From worker 2:	    testing FullNormal
	From worker 3:	    testing Pareto(2.0)
	From worker 3:	    testing Pareto(2.0, 1.5)
	From worker 3:	    testing Pareto(3.0, 2.0)
	From worker 3:	    testing Rayleigh()
	From worker 2:	    testing ZeroMeanFullNormal
	From worker 2:	    testing IsoNormalCanon
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in quad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:71 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormalcanon.jl:99 [inlined]
 in test_mvnormal(::Distributions.MvNormalCanon{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:49
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in quad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:71 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormalcanon.jl:99 [inlined]
 in _logpdf(::Distributions.MvNormalCanon{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44
 in logpdf(::Distributions.MvNormalCanon{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in test_mvnormal(::Distributions.MvNormalCanon{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:55
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
	From worker 2:	    testing ZeroMeanIsoNormalCanon
	From worker 3:	    testing Rayleigh(3.0)
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in quad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:71 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormalcanon.jl:99 [inlined]
 in test_mvnormal(::Distributions.MvNormalCanon{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:49
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in quad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:71 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormalcanon.jl:99 [inlined]
 in _logpdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44 [inlined]
 in logpdf(::Distributions.MvNormalCanon{Float64,PDMats.ScalMat{Float64	From worker 3:	    testing Rayleigh(8.0)
},Distributions.ZeroVector{Float64}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in test_mvnormal(::Distributions.MvNormalCanon{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:55
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl:91 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvnormal.jl, in expression starting on line 71
	From worker 2:	    testing DiagNormalCanon
	From worker 3:	    testing SymTriangularDist()
	From worker 2:	    testing ZeroMeanDiagormalCanon
	From worker 2:	    testing FullNormalCanon
	From worker 2:	    testing ZeroMeanFullNormalCanon
	From worker 3:	    testing SymTriangularDist(3.0)
	From worker 3:	    testing SymTriangularDist(3.0, 0.5)
	From worker 2:	    testing fit_mle
	From worker 3:	    testing SymTriangularDist(3.0, 2.0)
	From worker 3:	    testing SymTriangularDist(10.0, 8.0)
	From worker 3:	    testing TDist(1.2)
	From worker 2:	    comparing results from MvLogNormal with univariate LogNormal
	From worker 3:	    testing TDist(5.0)
	From worker 3:	    testing TDist(28.0)
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.PDMat{Float64,Array{Float64,2}},Array{Float64,1}} with normal distribution FullNormal
	From worker 3:	    testing TriangularDist(0, 5)
	From worker 3:	    testing TriangularDist(-7, 2)
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.PDiagMat{Float64,Array{Float64,1}},Distributions.ZeroVector{Float64}} with normal distribution ZeroMeanDiagNormal
	From worker 3:	    testing TriangularDist(-4, 14, 3)
	From worker 3:	    testing TriangularDist(2, 2000, 500)
	From worker 3:	    testing TriangularDist(1, 3, 2)
	From worker 3:	    testing TruncatedNormal(0, 1, -2, 2)
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}} with normal distribution IsoNormal
	From worker 3:	    testing TruncatedNormal(3, 10, 7, 8)
	From worker 3:	    testing TruncatedNormal(27, 3, 0, Inf)
	From worker 3:	    testing TruncatedNormal(-5, 1, -Inf, -10)
	From worker 3:	    testing TruncatedNormal(1.8, 1.2, -Inf, 0)
	From worker 3:	    testing Uniform(0.0, 1.0)
	From worker 3:	    testing Uniform(3.0, 17.0)
	From worker 3:	    testing Uniform(3.0, 3.1)
	From worker 3:	    testing VonMises()
	From worker 3:	    testing VonMises(4.0)
	From worker 3:	    testing VonMises(1.1, 2.5)
	From worker 3:	    testing Weibull()
	From worker 3:	    testing Weibull(0.5)
	From worker 3:	    testing Weibull(5.0)
	From worker 3:	    testing Weibull(20.0, 1.0)
	From worker 3:	    testing Weibull(1.0, 2.0)
	From worker 3:	    testing Weibull(5.0, 2.0)
	From worker 3:	
	From worker 3:	    [Discrete_hand_coded]
	From worker 3:	    ------------
	From worker 3:	    testing BetaBinomial(2, 0.2, 0.25)
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}} with normal distribution ZeroMeanIsoNormal
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in _logpdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44 [inlined]
 in _logpdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvlognormal.jl:153
 in logpdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in test_mvlognormal(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:58
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:120 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl, in expression starting on line 106
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in _logpdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44 [inlined]
 in _pdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:60 [inlined]
 in _pdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvlognormal.jl:154
 in pdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:71
 in test_mvlognormal(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:58
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:120 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl, in expression starting on line 106
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in _logpdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44 [inlined]
 in _logpdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvlognormal.jl:153
 in logpdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in _logpdf!(::Array{Float64,1}, ::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:76
 in logpdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:104
 in test_mvlognormal(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:60
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:120 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl, in expression starting on line 106
	From worker 3:	
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in _logpdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44 [inlined]
 in _pdf at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:60 [inlined]
 in _pdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvlognormal.jl:154
 in pdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:71
 in _pdf!(::Array{Float64,1}, ::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:83
 in pdf(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:111
 in test_mvlognormal(::Distributions.MvLogNormal{Float64,PDMats.ScalMat{Float64},Distributions.ZeroVector{Float64}}, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:60
 in macro expansion; at /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl:120 [inlined]
 in anonymous at ./<missing>:?
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mvlognormal.jl, in expression starting on line 106
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.PDiagMat{Float64,Array{Float64,1}},Array{Float64,1}} with normal distribution DiagNormal
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.PDiagMat{Float64,Array{Float64,1}},Distributions.ZeroVector{Float64}} with normal distribution ZeroMeanDiagNormal
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.PDMat{Float64,Array{Float64,2}},Array{Float64,1}} with normal distribution FullNormal
	From worker 2:	    testing Distributions.MvLogNormal{Float64,PDMats.PDMat{Float64,Array{Float64,2}},Distributions.ZeroVector{Float64}} with normal distribution ZeroMeanFullNormal
	From worker 2:	    testing UnivariateMixture
	From worker 3:	    [Discrete]
	From worker 3:	    ------------
	From worker 3:	    testing Truncated(Bernoulli(),3,5)
	From worker 3:	    testing Truncated(Bernoulli(0.25),3,5)
	From worker 3:	    testing Truncated(Bernoulli(0.75),3,5)
	From worker 3:	    testing Truncated(Binomial(),3,5)
	From worker 3:	    testing Truncated(Binomial(3),3,5)
	From worker 3:	    testing Truncated(Binomial(5, 0.4),3,5)
	From worker 3:	    testing Truncated(Binomial(6, 0.8),3,5)
	From worker 3:	    testing Truncated(Binomial(100, 0.1),3,5)
	From worker 3:	    testing Truncated(Binomial(100, 0.9),3,5)
	From worker 3:	    testing Truncated(DiscreteUniform(6),3,5)
	From worker 2:	    testing MultivariateMixture
	From worker 3:	    testing Truncated(DiscreteUniform(0, 4),3,5)
	From worker 3:	    testing Truncated(DiscreteUniform(2, 8),3,5)
	From worker 3:	    testing Truncated(Geometric(),3,5)
	From worker 3:	    testing Truncated(Geometric(0.02),3,5)
	From worker 3:	    testing Truncated(Geometric(0.1),3,5)
	From worker 3:	    testing Truncated(Geometric(0.5),3,5)
	From worker 3:	    testing Truncated(Geometric(0.9),3,5)
	From worker 3:	    testing Truncated(Hypergeometric(2, 2, 2),3,5)
	From worker 3:	    testing Truncated(Hypergeometric(3, 2, 2),3,5)
	From worker 3:	    testing Truncated(Hypergeometric(3, 2, 0),3,5)
	From worker 3:	    testing Truncated(Hypergeometric(3, 2, 5),3,5)
	From worker 3:	    testing Truncated(Hypergeometric(4, 5, 6),3,5)
	From worker 3:	    testing Truncated(Hypergeometric(60, 80, 100),3,5)
	From worker 3:	    testing Truncated(NegativeBinomial(),3,5)
	From worker 3:	    testing Truncated(NegativeBinomial(6),3,5)
	From worker 3:	    testing Truncated(NegativeBinomial(1, 0.5),3,5)
	From worker 3:	    testing Truncated(NegativeBinomial(5, 0.6),3,5)
	From worker 3:	    testing Truncated(NegativeBinomial(0.5, 0.5),3,5)
	From worker 3:	    testing Truncated(Poisson(),3,5)
	From worker 3:	    testing Truncated(Poisson(0.0),3,5)
	From worker 3:	    testing Truncated(Poisson(0.5),3,5)
	From worker 3:	    testing Truncated(Poisson(2.0),3,5)
	From worker 3:	    testing Truncated(Poisson(10.0),3,5)
	From worker 3:	    testing Truncated(Poisson(80.0),3,5)
	From worker 3:	    testing Truncated(Skellam(),3,5)
	From worker 3:	    testing Truncated(Skellam(2.0),3,5)
	From worker 3:	    testing Truncated(Skellam(2.0, 3.0),3,5)
	From worker 3:	    testing Truncated(Skellam(3.2, 1.8),3,5)
	From worker 3:	
	From worker 3:	    [Continuous]
	From worker 3:	    ------------
	From worker 3:	    testing Truncated(Arcsine(),3,5)
	From worker 3:	    testing Truncated(Arcsine(2.0),3,5)
	From worker 3:	    testing Truncated(Arcsine(1.0, 2.5),3,5)
	From worker 3:	    testing Truncated(Beta(2.0, 2.0),3,5)
	From worker 3:	    testing Truncated(Beta(3.0, 4.0),3,5)
	From worker 3:	    testing Truncated(Beta(17.0, 13.0),3,5)
	From worker 3:	    testing Truncated(BetaPrime(3.0, 3.0),3,5)
	From worker 3:	    testing Truncated(BetaPrime(3.0, 5.0),3,5)
	From worker 3:	    testing Truncated(BetaPrime(5.0, 3.0),3,5)
	From worker 3:	    testing Truncated(Cauchy(),3,5)
	From worker 3:	    testing Truncated(Cauchy(2.0),3,5)
	From worker 3:	    testing Truncated(Cauchy(0.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Cauchy(10.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Cauchy(2.0, 10.0),3,5)
	From worker 3:	    testing Truncated(Chi(1),3,5)
	From worker 3:	    testing Truncated(Chi(2),3,5)
	From worker 3:	    testing Truncated(Chi(3),3,5)
	From worker 3:	    testing Truncated(Chi(12),3,5)
	From worker 3:	    testing Truncated(Chisq(1),3,5)
	From worker 3:	    testing Truncated(Chisq(8),3,5)
	From worker 3:	    testing Truncated(Chisq(20),3,5)
	From worker 3:	    testing Truncated(Cosine(),3,5)
	From worker 3:	    testing Truncated(Cosine(1.5),3,5)
	From worker 3:	    testing Truncated(Cosine(2.0, 2.8),3,5)
	From worker 3:	    testing Truncated(Erlang(1, 1.0),3,5)
	From worker 3:	    testing Truncated(Erlang(3, 1.0),3,5)
	From worker 3:	    testing Truncated(Erlang(5, 2.0),3,5)
	From worker 3:	    testing Truncated(Exponential(),3,5)
	From worker 3:	    testing Truncated(Exponential(2.0),3,5)
	From worker 3:	    testing Truncated(Exponential(6.5),3,5)
	From worker 3:	    testing Truncated(FDist(6.0, 8.0),3,5)
	From worker 3:	    testing Truncated(FDist(8.0, 6.0),3,5)
	From worker 3:	    testing Truncated(Gamma(),3,5)
	From worker 3:	    testing Truncated(Gamma(2.0),3,5)
	From worker 3:	    testing Truncated(Gamma(1.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Gamma(3.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Gamma(3.0, 2.0),3,5)
	From worker 3:	    testing Truncated(GeneralizedPareto(),3,5)
	From worker 3:	    testing Truncated(GeneralizedPareto(1.0, 1.0),3,5)
	From worker 3:	    testing Truncated(GeneralizedPareto(1.0, 1.0, 1.0),3,5)
	From worker 3:	    testing Truncated(GeneralizedPareto(0.1, 2.0, 0.0),3,5)
	From worker 3:	    testing Truncated(GeneralizedPareto(-1.5, 0.5, 2.0),3,5)
	From worker 3:	    testing Truncated(Gumbel(),3,5)
	From worker 3:	    testing Truncated(Gumbel(3.0),3,5)
	From worker 3:	    testing Truncated(Gumbel(3.0, 5.0),3,5)
	From worker 3:	    testing Truncated(Gumbel(5.0, 3.0),3,5)
	From worker 3:	    testing Truncated(InverseGamma(),3,5)
	From worker 3:	    testing Truncated(InverseGamma(2.0),3,5)
	From worker 3:	    testing Truncated(InverseGamma(1.0, 1.0),3,5)
	From worker 3:	    testing Truncated(InverseGamma(1.0, 2.0),3,5)
	From worker 3:	    testing Truncated(InverseGamma(2.0, 1.0),3,5)
	From worker 3:	    testing Truncated(InverseGamma(2.0, 3.0),3,5)
	From worker 3:	    testing Truncated(InverseGaussian(),3,5)
	From worker 3:	    testing Truncated(InverseGaussian(0.8),3,5)
	From worker 3:	    testing Truncated(InverseGaussian(2.0),3,5)
	From worker 3:	    testing Truncated(Laplace(),3,5)
	From worker 3:	    testing Truncated(Laplace(2.0),3,5)
	From worker 3:	    testing Truncated(Laplace(0.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Laplace(5.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Laplace(5.0, 1.5),3,5)
	From worker 3:	    testing Truncated(Logistic(),3,5)
	From worker 3:	    testing Truncated(Logistic(2.0),3,5)
	From worker 3:	    testing Truncated(Logistic(0.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Logistic(5.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Logistic(5.0, 1.5),3,5)
	From worker 3:	    testing Truncated(LogNormal(),3,5)
	From worker 3:	    testing Truncated(LogNormal(0.0),3,5)
	From worker 3:	    testing Truncated(LogNormal(0.0, 2.0),3,5)
	From worker 3:	    testing Truncated(Normal(0.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Normal(-3.0, 2.0),3,5)
	From worker 3:	    testing Truncated(Normal(1.0, 10.0),3,5)
	From worker 3:	    testing Truncated(NormalCanon(),3,5)
	From worker 3:	    testing Truncated(NormalCanon(0.0, 1.0),3,5)
	From worker 3:	    testing Truncated(NormalCanon(-1.0, 2.5),3,5)
	From worker 3:	    testing Truncated(NormalCanon(2.0, 0.8),3,5)
	From worker 3:	    testing Truncated(Pareto(),3,5)
	From worker 3:	    testing Truncated(Pareto(2.0),3,5)
	From worker 3:	    testing Truncated(Pareto(2.0, 1.5),3,5)
	From worker 3:	    testing Truncated(Pareto(3.0, 2.0),3,5)
	From worker 3:	    testing Truncated(Rayleigh(),3,5)
	From worker 3:	    testing Truncated(Rayleigh(3.0),3,5)
	From worker 3:	    testing Truncated(Rayleigh(8.0),3,5)
	From worker 3:	    testing Truncated(SymTriangularDist(),3,5)
	From worker 3:	    testing Truncated(SymTriangularDist(3.0),3,5)
	From worker 3:	    testing Truncated(SymTriangularDist(3.0, 0.5),3,5)
	From worker 3:	    testing Truncated(SymTriangularDist(3.0, 2.0),3,5)
	From worker 3:	    testing Truncated(SymTriangularDist(10.0, 8.0),3,5)
	From worker 3:	    testing Truncated(TDist(1.2),3,5)
	From worker 3:	    testing Truncated(TDist(5.0),3,5)
	From worker 3:	    testing Truncated(TDist(28.0),3,5)
	From worker 3:	    testing Truncated(TriangularDist(0, 5),3,5)
	From worker 3:	    testing Truncated(TriangularDist(-7, 2),3,5)
	From worker 3:	    testing Truncated(TriangularDist(-4, 14, 3),3,5)
	From worker 3:	    testing Truncated(TriangularDist(2, 2000, 500),3,5)
	From worker 3:	    testing Truncated(TriangularDist(1, 3, 2),3,5)
	From worker 3:	    testing Truncated(TruncatedNormal(0, 1, -2, 2),3,5)
	From worker 3:	    testing Truncated(TruncatedNormal(3, 10, 7, 8),3,5)
	From worker 3:	    testing Truncated(TruncatedNormal(27, 3, 0, Inf),3,5)
	From worker 3:	    testing Truncated(TruncatedNormal(-5, 1, -Inf, -10),3,5)
	From worker 3:	    testing Truncated(TruncatedNormal(1.8, 1.2, -Inf, 0),3,5)
	From worker 3:	    testing Truncated(Uniform(0.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Uniform(3.0, 17.0),3,5)
	From worker 3:	    testing Truncated(Uniform(3.0, 3.1),3,5)
	From worker 3:	    testing Truncated(VonMises(),3,5)
	From worker 3:	    testing Truncated(VonMises(4.0),3,5)
	From worker 3:	    testing Truncated(VonMises(1.1, 2.5),3,5)
	From worker 3:	    testing Truncated(Weibull(),3,5)
	From worker 3:	    testing Truncated(Weibull(0.5),3,5)
	From worker 3:	    testing Truncated(Weibull(5.0),3,5)
	From worker 3:	    testing Truncated(Weibull(20.0, 1.0),3,5)
	From worker 3:	    testing Truncated(Weibull(1.0, 2.0),3,5)
	From worker 3:	    testing Truncated(Weibull(5.0, 2.0),3,5)
	From worker 3:	
WARNING: sumabs2(x) is deprecated, use sum(abs2,x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in sumabs2(::Array{Float64,1}) at ./deprecated.jl:50
 in invquad at /home/vagrant/.julia/v0.6/PDMats/src/scalmat.jl:72 [inlined]
 in sqmahal at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:139 [inlined]
 in _logpdf(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariate/mvnormal.jl:44
 in logpdf(::Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in _mixlogpdf1(::Distributions.MixtureModel{Distributions.Multivariate,Distributions.Continuous,Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/mixtures/mixturemodel.jl:248
 in logpdf(::Distributions.MixtureModel{Distributions.Multivariate,Distributions.Continuous,Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}}, ::SubArray{Float64,1,Array{Float64,2},Tuple{Colon,Int64},true}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:65
 in _logpdf!(::Array{Float64,1}, ::Distributions.MixtureModel{Distributions.Multivariate,Distributions.Continuous,Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:76
 in logpdf(::Distributions.MixtureModel{Distributions.Multivariate,Distributions.Continuous,Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.6/Distributions/src/multivariates.jl:104
 in test_mixture(::Distributions.MixtureModel{Distributions.Multivariate,Distributions.Continuous,Distributions.MvNormal{Float64,PDMats.ScalMat{Float64},Array{Float64,1}}}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/Distributions/test/mixture.jl:112
 in include_string(::String, ::String) at ./loading.jl:478
 in include_from_node1(::String) at ./loading.jl:535
 in include(::String) at ./sysimg.jl:14
 in (::Base.Serializer.__deserialized_types__.##17#18)(::String) at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in (::Base.##628#630{Base.CallMsg{:call_fetch}})() at ./multi.jl:1455
 in run_work_thunk(::Base.##628#630{Base.CallMsg{:call_fetch}}, ::Bool) at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in (::Base.##627#629{Base.CallMsg{:call_fetch},Base.MsgHeader,TCPSocket})() at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mixture.jl, in expression starting on line 163
ERROR: LoadError: On worker 2:
LoadError: assertion failed: |cov(Xs,2) - cov(g)| <= 0.01
  cov(Xs,2) = [1.55874 0.532043; 0.532043 4.519]
  cov(g) = [1.5605 0.53; 0.53 4.508]
  difference = 0.010997341907718727 > 0.01
 in test_approx_eq at ./test.jl:904
 in test_mixture at /home/vagrant/.julia/v0.6/Distributions/test/mixture.jl:121
 in include_string at ./loading.jl:478
 in include_from_node1 at ./loading.jl:535
 in include at ./sysimg.jl:14
 in #17 at /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl:52
 in #628 at ./multi.jl:1455
 in run_work_thunk at ./multi.jl:1004
 in macro expansion at ./multi.jl:1455 [inlined]
 in #627 at ./event.jl:66
while loading /home/vagrant/.julia/v0.6/Distributions/test/mixture.jl, in expression starting on line 163
 in #969 at ./asyncmap.jl:178 [inlined]
 in foreach(::Base.##969#971, ::Array{Any,1}) at ./abstractarray.jl:1666
 in maptwice(::Function, ::Channel{Any}, ::Array{Any,1}, ::Array{String,1}, ::Vararg{Array{String,1},N}) at ./asyncmap.jl:178
 in wrap_n_exec_twice(::Channel{Any}, ::Array{Any,1}, ::Base.##1008#1012, ::Function, ::Array{String,1}, ::Vararg{Array{String,1},N}) at ./asyncmap.jl:154
 in #async_usemap#954(::Function, ::Void, ::Function, ::Base.##717#719, ::Array{String,1}, ::Vararg{Array{String,1},N}) at ./asyncmap.jl:103
 in (::Base.#kw##async_usemap)(::Array{Any,1}, ::Base.#async_usemap, ::Function, ::Array{String,1}, ::Vararg{Array{String,1},N}) at ./<missing>:0
 in (::Base.#kw##asyncmap)(::Array{Any,1}, ::Base.#asyncmap, ::Function, ::Array{String,1}) at ./<missing>:0
 in #pmap#1006(::Bool, ::Int64, ::Void, ::Int64, ::Float64, ::Function, ::Void, ::Void, ::Void, ::Base.#pmap, ::WorkerPool, ::##17#18, ::Array{String,1}) at ./pmap.jl:120
 in pmap(::WorkerPool, ::Function, ::Array{String,1}) at ./pmap.jl:79
 in #pmap#1018(::Array{Any,1}, ::Function, ::Function, ::Array{String,1}) at ./pmap.jl:144
 in pmap(::Function, ::Array{String,1}) at ./pmap.jl:144
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:292
 in _start() at ./client.jl:356
while loading /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl, in expression starting on line 51
============================[ ERROR: Distributions ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DiffBase v0.0.2
INFO: Removing ForwardDiff v0.3.3
INFO: Removing NaNMath v0.2.2
ERROR: Distributions had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 in eval(::Module, ::Any) at ./boot.jl:236
 in process_options(::Base.JLOptions) at ./client.jl:269
 in _start() at ./client.jl:356

>>> End of log
