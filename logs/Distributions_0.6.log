>>> 'Pkg.add("Distributions")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.2.0
INFO: Installing DataStructures v0.5.2
INFO: Installing Distributions v0.12.0
INFO: Installing PDMats v0.5.4
INFO: Installing QuadGK v0.1.1
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.1
INFO: Installing StatsBase v0.13.0
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Building Rmath
WARNING: Array{T}(::Type{T}, m::Int) is deprecated, use Array{T}(m) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] Array(::Type{Tuple{BinDeps.DependencyProvider,Dict{Symbol,Any}}}, ::Int64) at ./deprecated.jl:51
 [3] #_library_dependency#21(::Array{Any,1}, ::Function, ::BinDeps.PackageContext, ::String) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:60
 [4] (::BinDeps.#kw##_library_dependency)(::Array{Any,1}, ::BinDeps.#_library_dependency, ::BinDeps.PackageContext, ::String) at ./<missing>:0
 [5] #library_dependency#1(::Array{Any,1}, ::Function, ::String, ::Vararg{String,N} where N) at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:86
 [6] (::__anon__.#kw##library_dependency)(::Array{Any,1}, ::__anon__.#library_dependency, ::String, ::Vararg{String,N} where N) at ./<missing>:0
 [7] include_from_node1(::String) at ./loading.jl:539
 [8] include(::String) at ./sysimg.jl:14
 [9] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [10] cd(::##2#4, ::String) at ./file.jl:69
 [11] (::##1#3)(::IOStream) at ./none:12
 [12] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [13] eval(::Module, ::Any) at ./boot.jl:235
 [14] process_options(::Base.JLOptions) at ./client.jl:286
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Rmath/deps/build.jl, in expression starting on line 5
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:51
 [3] macro expansion at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:539
 [6] include(::String) at ./sysimg.jl:14
 [7] evalfile(::String, ::Array{String,1}) at ./loading.jl:573 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:12
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:235
 [12] process_options(::Base.JLOptions) at ./client.jl:286
 [13] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Rmath/deps/build.jl, in expression starting on line 43
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of Distributions
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Distributions")' log
Julia Version 0.6.0-dev.2788
Commit 8341444 (2017-02-12 23:04 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (885.05078125 MB free)
Uptime: 15640.0 sec
Load Avg:  1.021484375  1.0146484375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     860777 s        756 s      80467 s     457927 s         32 s
#2  3500 MHz     268780 s       6120 s      41689 s    1209841 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Distributions                 0.12.0
 - JSON                          0.8.3
11 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.2.0
 - Compat                        0.17.0
 - DataStructures                0.5.2
 - PDMats                        0.5.4
 - QuadGK                        0.1.1
 - Rmath                         0.1.6
 - SHA                           0.3.1
 - StatsBase                     0.13.0
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
INFO: Computing test dependencies for Distributions...
INFO: Installing DiffBase v0.0.4
INFO: Installing ForwardDiff v0.3.4
INFO: Installing NaNMath v0.2.2
INFO: Testing Distributions
Running tests:
	From worker 2:	    testing Distributions.CategoricalDirectSampler
	From worker 2:	    testing Distributions.AliasTable
	From worker 2:	    testing Distributions.BinomialGeomSampler
	From worker 2:	    testing Distributions.BinomialTPESampler
	From worker 2:	    testing Distributions.BinomialPolySampler
	From worker 3:	    testing Distributions.Categorical{Float64}(K=2, p=[0.5, 0.5])
	From worker 2:	    testing Distributions.BinomialAliasSampler
	From worker 2:	    testing Distributions.PoissonCountSampler
	From worker 3:	    testing Distributions.Categorical{Float64}(K=4, p=[0.1, 0.3, 0.2, 0.4])
	From worker 3:	    testing Distributions.Categorical{Float64}(K=3, p=[0.15, 0.25, 0.6])
	From worker 2:	    testing Distributions.PoissonADSampler
	From worker 2:	    testing Distributions.PoissBinAliasSampler
	From worker 3:	    [Discrete]
	From worker 3:	    ------------
	From worker 2:	    testing Distributions.ExponentialSampler
	From worker 3:	    testing Bernoulli()
	From worker 2:	    testing Distributions.GammaGDSampler
	From worker 2:	    testing Distributions.GammaMTSampler
	From worker 3:	    testing Bernoulli(0.25)
	From worker 3:	    testing Bernoulli(0.75)
	From worker 3:	    testing Binomial()
	From worker 2:	    testing Distributions.GammaGSSampler
	From worker 3:	    testing Binomial(3)
	From worker 3:	    testing Binomial(5, 0.4)
	From worker 3:	    testing Binomial(6, 0.8)
	From worker 3:	    testing Binomial(100, 0.1)
	From worker 2:	    testing Distributions.GammaIPSampler
	From worker 3:	    testing Binomial(100, 0.9)
	From worker 3:	    testing DiscreteUniform(6)
	From worker 2:	    -----
	From worker 3:	    testing DiscreteUniform(0, 4)
	From worker 3:	    testing DiscreteUniform(2, 8)
	From worker 3:	    testing Geometric()
	From worker 2:	    testing Distributions.Biweight{Float64}(μ=0.0, σ=1.0)
	From worker 3:	    testing Geometric(0.02)
	From worker 3:	    testing Geometric(0.1)
	From worker 3:	    testing Geometric(0.5)
	From worker 3:	    testing Geometric(0.9)
	From worker 3:	    testing Hypergeometric(2, 2, 2)
	From worker 2:	    testing Distributions.Biweight{Float64}(μ=1.0, σ=3.0)
	From worker 2:	    testing Distributions.Epanechnikov{Float64}(μ=0.0, σ=1.0)
	From worker 3:	    testing Hypergeometric(3, 2, 2)
	From worker 3:	    testing Hypergeometric(3, 2, 0)
	From worker 3:	    testing Hypergeometric(3, 2, 5)
	From worker 3:	    testing Hypergeometric(4, 5, 6)
	From worker 3:	    testing Hypergeometric(60, 80, 100)
	From worker 3:	    testing NegativeBinomial()
	From worker 2:	    testing Distributions.Epanechnikov{Float64}(μ=1.0, σ=3.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=0.5, θ=1.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=3.0, θ=1.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=20.0, θ=1.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=120.0, θ=1.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=0.5, θ=2.0)
	From worker 2:	    testing Distributions.Frechet{Float64}(α=3.0, θ=2.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.0, σ=1.0, ξ=1.0)
	From worker 3:	    testing NegativeBinomial(6)
	From worker 3:	    testing NegativeBinomial(1, 0.5)
	From worker 3:	    testing NegativeBinomial(5, 0.6)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.0, σ=1.0, ξ=1.0)
	From worker 3:	    testing NegativeBinomial(0.5, 0.5)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=1.0, σ=1.0, ξ=1.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.1, σ=2.0, ξ=0.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=0.0, σ=0.5, ξ=0.0)
	From worker 2:	    testing Distributions.GeneralizedPareto{Float64}(μ=-1.5, σ=0.5, ξ=2.0)
	From worker 2:	    testing Distributions.InverseGaussian{Float64}(μ=1.0, λ=1.0)
	From worker 3:	    testing Poisson()
ERROR: LoadError: 	From worker 3:	    testing Poisson(0.0)RemoteException(2, CapturedException(LoadError("/home/vagrant/.julia/v0.6/Distributions/test/continuous.jl", 27, ErrorException("erfc(0.8959774761298385,) has been moved to the package SpecialFunctions.jl.\nRun Pkg.add(\"SpecialFunctions\") to install SpecialFunctions on Julia v0.6 and later,\nand then run `using SpecialFunctions`.")), Any[(cdf at inversegaussian.jl:100, 1), (quantile_newton at quantilealgs.jl:34, 1), (get_evalsamples at testutils.jl:259, 1), (test_distr at testutils.jl:47, 1), (macro expansion at continuous.jl:68 [inlined], 1), (anonymous at <missing>:?, 1), (include_string at loading.jl:485, 1), (include_from_node1 at loading.jl:542, 1), (include at sysimg.jl:14, 1), (#17 at runtests.jl:52, 1), (#96 at process_messages.jl:268, 1), (run_work_thunk at process_messages.jl:56, 1), (macro expansion at process_messages.jl:268 [inlined], 1), (#95 at event.jl:73, 1)]))

Stacktrace:	From worker 3:	    testing Poisson(0.5)

 [1] 	From worker 3:	    testing Poisson(2.0)#547
 at 	From worker 3:	    testing Poisson(10.0)./asyncmap.jl:178
 [inlined]	From worker 3:	    testing Poisson(80.0)

 [2] 	From worker 3:	    testing Skellam()foreach
(::Base.##547#549, ::Array{Any,1}) at ./abstractarray.jl:1621
 [3] maptwice(::Function, ::Channel{Any}, ::Array{Any,1}, ::Array{String,1}, ::Vararg{Array{String,1},N} where N) at ./asyncmap.jl:178
 [4] wrap_n_exec_twice(::Channel{Any}, ::Array{Any,1}, ::Base.Parallel.##192#195{WorkerPool}, ::Function, ::Array{String,1}, ::Vararg{Array{String,1},N} where N) at ./asyncmap.jl:154
 [5] #async_usemap#532(::Function, ::Void, ::Function, ::Base.Parallel.##176#178, ::Array{String,1}, ::Vararg{Array{String,1},N} where N) at ./asyncmap.jl:103
 [6] (::Base.#kw##async_usemap)(::Array{Any,1}, ::Base.#async_usemap, ::Function, ::Array{String,1}, ::Vararg{Array{String,1},N} where N) at ./<missing>:0
 [7] (::Base.#kw##asyncmap)(::Array{Any,1}, ::Base.#asyncmap, ::Function, ::Array{String,1}) at ./<missing>:0
 [8] #pmap#191(::Bool, ::Int64, ::Void, ::Array{Any,1}, ::Void, ::Function, ::WorkerPool, ::Function, ::Array{String,1}) at ./parallel/pmap.jl:126
 [9] pmap(::WorkerPool, ::Function, ::Array{String,1}) at ./parallel/pmap.jl:101
 [10] #pmap#201(::Array{Any,1}, ::Function, ::Function, ::Array{String,1}) at ./parallel/pmap.jl:156
 [11] pmap(::Function, ::Array{String,1}) at ./parallel/pmap.jl:156
 [12] include_from_node1(::String) at ./loading.jl:539
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:305
 [15] _start() at ./client.jl:371
while loading /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl, in expression starting on line 51
============================[ ERROR: Distributions ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Distributions/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DiffBase v0.0.4
INFO: Removing ForwardDiff v0.3.4
INFO: Removing NaNMath v0.2.2
ERROR: Distributions had test errors

>>> End of log
