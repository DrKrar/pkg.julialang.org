>>> 'Pkg.add("SimpleTasks")' log
INFO: Cloning cache of AWS from https://github.com/JuliaCloud/AWS.jl.git
INFO: Cloning cache of SimpleTasks from https://github.com/seung-lab/SimpleTasks.jl.git
INFO: Installing AWS v0.2.0
INFO: Installing BinDeps v0.4.5
INFO: Installing BufferedStreams v0.2.0
INFO: Installing Codecs v0.2.0
INFO: Installing HttpCommon v0.2.6
INFO: Installing HttpParser v0.2.0
INFO: Installing Libz v0.2.0
INFO: Installing LightXML v0.4.0
INFO: Installing MbedTLS v0.3.0
INFO: Installing Requests v0.3.11
INFO: Installing SHA v0.2.1
INFO: Installing SimpleTasks v0.0.12
INFO: Installing URIParser v0.1.6
INFO: Building HttpParser
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/HttpParser/deps/downloads
INFO: Directory /home/vagrant/.julia/v0.6/HttpParser/deps/downloads already created
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/HttpParser/deps/downloads
INFO: Directory /home/vagrant/.julia/v0.6/HttpParser/deps/downloads already created
INFO: Downloading file https://github.com/nodejs/http-parser/archive/v2.7.1.zip
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
curl: (60) SSL certificate problem: unable to get local issuer certificate
More details here: http://curl.haxx.se/docs/sslcerts.html

curl performs SSL certificate verification by default, using a "bundle"
 of Certificate Authority (CA) public keys (CA certs). If the default
 bundle file isn't adequate, you can specify an alternate file
 using the --cacert option.
If this HTTPS server uses a certificate signed by a CA represented in
 the bundle, the certificate verification probably failed due to a
 problem with the certificate (it might be expired, or the name might
 not match the domain name in the URL).
If you'd like to turn off curl's verification of the certificate, use
 the -k (or --insecure) option.
=============================[ ERROR: HttpParser ]==============================

LoadError: failed process: Process(`curl -f -o /home/vagrant/.julia/v0.6/HttpParser/deps/downloads/v2.7.1.zip -L https://github.com/nodejs/http-parser/archive/v2.7.1.zip`, ProcessExited(60)) [60]
while loading /home/vagrant/.julia/v0.6/HttpParser/deps/build.jl, in expression starting on line 71

================================================================================
INFO: Building MbedTLS
INFO: Attempting to Create directory /home/vagrant/.julia/v0.6/MbedTLS/deps/downloads
INFO: Directory /home/vagrant/.julia/v0.6/MbedTLS/deps/downloads already created
INFO: Downloading file https://cache.julialang.org/https://tls.mbed.org/download/mbedtls-2.1.1-apache.tgz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
curl: (60) SSL certificate problem: unable to get local issuer certificate
More details here: http://curl.haxx.se/docs/sslcerts.html

curl performs SSL certificate verification by default, using a "bundle"
 of Certificate Authority (CA) public keys (CA certs). If the default
 bundle file isn't adequate, you can specify an alternate file
 using the --cacert option.
If this HTTPS server uses a certificate signed by a CA represented in
 the bundle, the certificate verification probably failed due to a
 problem with the certificate (it might be expired, or the name might
 not match the domain name in the URL).
If you'd like to turn off curl's verification of the certificate, use
 the -k (or --insecure) option.
===============================[ ERROR: MbedTLS ]===============================

LoadError: failed process: Process(`curl -f -o /home/vagrant/.julia/v0.6/MbedTLS/deps/downloads/mbedtls-2.1.1-apache.tgz -L https://cache.julialang.org/https://tls.mbed.org/download/mbedtls-2.1.1-apache.tgz`, ProcessExited(60)) [60]
while loading /home/vagrant/.julia/v0.6/MbedTLS/deps/build.jl, in expression starting on line 74

================================================================================
INFO: Building LightXML
INFO: Building AWS
WARNING: `@windows_only` is deprecated, use `@static if is_windows()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @windows_only(::ANY) at ./deprecated.jl:486
 in include_from_node1(::String) at ./loading.jl:532
 in include(::SubString{String}) at ./sysimg.jl:14
 in evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 in cd(::##2#4, ::String) at ./file.jl:69
 in (::##1#3)(::IOStream) at ./none:13
 in open(::##1#3, ::String, ::String) at ./iostream.jl:152
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/AWS/deps/build.jl, in expression starting on line 5

================================[ BUILD ERRORS ]================================

WARNING: HttpParser and MbedTLS had build errors.

 - packages with build errors remain installed in /home/vagrant/.julia/v0.6
 - build the package(s) and all dependencies with `Pkg.build("HttpParser", "MbedTLS")`
 - build a single package by running its `deps/build.jl` script

================================================================================
INFO: Package database updated

>>> 'Pkg.test("SimpleTasks")' log
Julia Version 0.6.0-dev.994
Commit 1ea0de1 (2016-10-17 12:32 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (729.08203125 MB free)
Uptime: 34014.0 sec
Load Avg:  0.44482421875  0.20263671875  0.234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     825866 s         75 s     133632 s    2294148 s         27 s
#2  3499 MHz     228858 s         77 s      49462 s    3083585 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - JSON                          0.8.0
 - SimpleTasks                   0.0.12
13 additional packages:
 - AWS                           0.2.0
 - BinDeps                       0.4.5
 - BufferedStreams               0.2.0
 - Codecs                        0.2.0
 - Compat                        0.9.2
 - HttpCommon                    0.2.6
 - HttpParser                    0.2.0
 - Libz                          0.2.0
 - LightXML                      0.4.0
 - MbedTLS                       0.3.0
 - Requests                      0.3.11
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing SimpleTasks
ERROR: LoadError: HttpParser not properly installed. Please run
Pkg.build("HttpParser")
 in error(::String, ::String, ::Vararg{String,N}) at ./error.jl:22
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/HttpParser/src/HttpParser.jl, in expression starting on line 9
ERROR: LoadError: Failed to precompile HttpParser to /home/vagrant/.julia/lib/v0.6/HttpParser.ji.
 in compilecache(::String) at ./loading.jl:672
 in require(::Symbol) at ./loading.jl:424
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/Requests/src/Requests.jl, in expression starting on line 21
ERROR: LoadError: Failed to precompile Requests to /home/vagrant/.julia/lib/v0.6/Requests.ji.
 in compilecache(::String) at ./loading.jl:672
 in require(::Symbol) at ./loading.jl:424
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in anonymous at ./<missing>:2
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/AWS/src/AWS.jl, in expression starting on line 4
ERROR: LoadError: LoadError: LoadError: LoadError: Failed to precompile AWS to /home/vagrant/.julia/lib/v0.6/AWS.ji.
 in compilecache(::String) at ./loading.jl:672
 in require(::Symbol) at ./loading.jl:453
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in eval(::Module, ::Any) at ./boot.jl:238
 in require(::Symbol) at ./loading.jl:446
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/SimpleTasks/src/services/awscliprovider.jl, in expression starting on line 5
while loading /home/vagrant/.julia/v0.6/SimpleTasks/src/services/include.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.6/SimpleTasks/src/SimpleTasks.jl, in expression starting on line 6
while loading /home/vagrant/.julia/v0.6/SimpleTasks/test/runtests.jl, in expression starting on line 1
=============================[ ERROR: SimpleTasks ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/SimpleTasks/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SimpleTasks had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:238
 in process_options(::Base.JLOptions) at ./client.jl:248
 in _start() at ./client.jl:335

>>> End of log
