>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.2
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1076.69140625 MB free)
Uptime: 13922.0 sec
Load Avg:  0.97216796875  0.99609375  0.9765625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3497 MHz     624510 s       2732 s      57822 s     529761 s         37 s
#2  3497 MHz     399216 s       2906 s      49711 s     877058 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.2
 - Compat                        0.8.8
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1010	 ParSpMatVec=0.0250	 speedup=4.0461
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1010	 ParSpMatVec=0.0104	 speedup=9.7465
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1010	 ParSpMatVec=0.0123	 speedup=8.1980
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1010	 ParSpMatVec=0.0117	 speedup=8.6486
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1010	 ParSpMatVec=0.0061	 speedup=16.4594
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0769	 ParSpMatVec=0.0258	 speedup=2.9768
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0769	 ParSpMatVec=0.0125	 speedup=6.1450
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0769	 ParSpMatVec=0.0149	 speedup=5.1627
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0769	 ParSpMatVec=0.0125	 speedup=6.1535
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0769	 ParSpMatVec=0.0142	 speedup=5.4232

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0402	 ParSpMatVec=0.0188	 speedup=2.1406
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0402	 ParSpMatVec=0.0112	 speedup=3.5905
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0402	 ParSpMatVec=0.0131	 speedup=3.0625
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0402	 ParSpMatVec=0.0112	 speedup=3.5807
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0402	 ParSpMatVec=0.0137	 speedup=2.9385

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0326	 ParSpMatVec=0.0244	 speedup=1.3387
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0326	 ParSpMatVec=0.0021	 speedup=15.2402
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0326	 ParSpMatVec=0.0022	 speedup=14.7942
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0326	 ParSpMatVec=0.0017	 speedup=18.8226
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0326	 ParSpMatVec=0.0015	 speedup=22.4053

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0060	 ParSpMatVec=0.0455	 speedup=0.1318
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0060	 ParSpMatVec=0.0038	 speedup=1.5625
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0060	 ParSpMatVec=0.0029	 speedup=2.0745
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0060	 ParSpMatVec=0.0024	 speedup=2.4769
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0060	 ParSpMatVec=0.0018	 speedup=3.3977

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0411	 ParSpMatVec=0.0268	 speedup=1.5301
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0411	 ParSpMatVec=0.0033	 speedup=12.4038
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0411	 ParSpMatVec=0.0018	 speedup=23.3337
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0411	 ParSpMatVec=0.0025	 speedup=16.2747
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0411	 ParSpMatVec=0.0023	 speedup=17.5228

INFO: ParSpMatVec tests passed

>>> End of log
