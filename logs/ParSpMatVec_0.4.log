>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1194.94140625 MB free)
Uptime: 13636.0 sec
Load Avg:  1.23291015625  1.0576171875  1.01953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     591796 s       3914 s      53310 s     569892 s         30 s
#2  3500 MHz     392341 s       2941 s      48701 s     866954 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1197	 ParSpMatVec=0.0182	 speedup=6.5658
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1197	 ParSpMatVec=0.0096	 speedup=12.4985
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1197	 ParSpMatVec=0.0123	 speedup=9.7632
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1197	 ParSpMatVec=0.0101	 speedup=11.7956
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1197	 ParSpMatVec=0.0117	 speedup=10.1959
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0897	 ParSpMatVec=0.0452	 speedup=1.9868
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0897	 ParSpMatVec=0.0123	 speedup=7.3217
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0897	 ParSpMatVec=0.0083	 speedup=10.8228
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0897	 ParSpMatVec=0.0088	 speedup=10.2040
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0897	 ParSpMatVec=0.0106	 speedup=8.4356

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0517	 ParSpMatVec=0.0175	 speedup=2.9510
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0517	 ParSpMatVec=0.0122	 speedup=4.2555
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0517	 ParSpMatVec=0.0079	 speedup=6.5499
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0517	 ParSpMatVec=0.0105	 speedup=4.9322
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0517	 ParSpMatVec=0.0113	 speedup=4.5691

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0416	 ParSpMatVec=0.0551	 speedup=0.7554
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0416	 ParSpMatVec=0.0023	 speedup=17.8555
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0416	 ParSpMatVec=0.0029	 speedup=14.5117
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0416	 ParSpMatVec=0.0013	 speedup=32.1844
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0416	 ParSpMatVec=0.0018	 speedup=22.7576

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0458	 speedup=0.1878
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0072	 speedup=1.1953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0022	 speedup=3.8844
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0072	 speedup=1.1897
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0021	 speedup=4.0620

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0531	 ParSpMatVec=0.0356	 speedup=1.4933
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0531	 ParSpMatVec=0.0035	 speedup=15.0639
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0531	 ParSpMatVec=0.0021	 speedup=24.7743
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0531	 ParSpMatVec=0.0033	 speedup=16.0104
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0531	 ParSpMatVec=0.0031	 speedup=17.2384

INFO: ParSpMatVec tests passed

>>> End of log
