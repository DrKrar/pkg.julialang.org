>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1248	 ParSpMatVec=0.0178	 speedup=7.0178
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1248	 ParSpMatVec=0.0091	 speedup=13.6588
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1248	 ParSpMatVec=0.0149	 speedup=8.3703
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1248	 ParSpMatVec=0.0104	 speedup=12.0451
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1248	 ParSpMatVec=0.0120	 speedup=10.4083
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0997	 ParSpMatVec=0.0348	 speedup=2.8639
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0997	 ParSpMatVec=0.0138	 speedup=7.2449
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0997	 ParSpMatVec=0.0141	 speedup=7.0782
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0997	 ParSpMatVec=0.0175	 speedup=5.6857
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0997	 ParSpMatVec=0.0167	 speedup=5.9634

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0462	 ParSpMatVec=0.0232	 speedup=1.9881
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0462	 ParSpMatVec=0.0131	 speedup=3.5209
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0462	 ParSpMatVec=0.0165	 speedup=2.7944
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0462	 ParSpMatVec=0.0131	 speedup=3.5145
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0462	 ParSpMatVec=0.0158	 speedup=2.9332

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0442	 ParSpMatVec=0.0386	 speedup=1.1441
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0442	 ParSpMatVec=0.0027	 speedup=16.1710
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0442	 ParSpMatVec=0.0029	 speedup=15.0954
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0442	 ParSpMatVec=0.0021	 speedup=20.6317
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0442	 ParSpMatVec=0.0018	 speedup=24.1652

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0088	 ParSpMatVec=0.0445	 speedup=0.1978
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0088	 ParSpMatVec=0.0033	 speedup=2.6382
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0088	 ParSpMatVec=0.0022	 speedup=4.0731
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0088	 ParSpMatVec=0.0047	 speedup=1.8876
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0088	 ParSpMatVec=0.0023	 speedup=3.8208

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0294	 ParSpMatVec=0.0455	 speedup=0.6452
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0294	 ParSpMatVec=0.0033	 speedup=8.8520
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0294	 ParSpMatVec=0.0022	 speedup=13.3824
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0294	 ParSpMatVec=0.0025	 speedup=11.9912
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0294	 ParSpMatVec=0.0028	 speedup=10.3209

INFO: ParSpMatVec tests passed

>>> End of log
