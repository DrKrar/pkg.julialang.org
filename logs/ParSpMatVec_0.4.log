>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1112	 ParSpMatVec=0.0232	 speedup=4.8042
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1112	 ParSpMatVec=0.0093	 speedup=11.9221
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1112	 ParSpMatVec=0.0125	 speedup=8.9096
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1112	 ParSpMatVec=0.0111	 speedup=10.0436
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1112	 ParSpMatVec=0.0115	 speedup=9.6897
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0953	 ParSpMatVec=0.0249	 speedup=3.8325
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0953	 ParSpMatVec=0.0128	 speedup=7.4321
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0953	 ParSpMatVec=0.0143	 speedup=6.6630
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0953	 ParSpMatVec=0.0141	 speedup=6.7591
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0953	 ParSpMatVec=0.0154	 speedup=6.2058

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0434	 ParSpMatVec=0.0293	 speedup=1.4804
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0434	 ParSpMatVec=0.0119	 speedup=3.6550
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0434	 ParSpMatVec=0.0124	 speedup=3.4873
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0434	 ParSpMatVec=0.0128	 speedup=3.3871
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0434	 ParSpMatVec=0.0149	 speedup=2.9049

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0298	 ParSpMatVec=0.0281	 speedup=1.0608
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0298	 ParSpMatVec=0.0014	 speedup=21.9092
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0298	 ParSpMatVec=0.0023	 speedup=13.0797
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0298	 ParSpMatVec=0.0021	 speedup=13.8874
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0298	 ParSpMatVec=0.0016	 speedup=18.1755

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0058	 ParSpMatVec=0.0346	 speedup=0.1686
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0058	 ParSpMatVec=0.0053	 speedup=1.0928
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0058	 ParSpMatVec=0.0025	 speedup=2.3137
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0058	 ParSpMatVec=0.0035	 speedup=1.6515
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0058	 ParSpMatVec=0.0027	 speedup=2.1748

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0531	 ParSpMatVec=0.0509	 speedup=1.0434
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0531	 ParSpMatVec=0.0036	 speedup=14.6575
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0531	 ParSpMatVec=0.0033	 speedup=16.3095
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0531	 ParSpMatVec=0.0039	 speedup=13.6036
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0531	 ParSpMatVec=0.0025	 speedup=21.2219

INFO: ParSpMatVec tests passed

>>> End of log
