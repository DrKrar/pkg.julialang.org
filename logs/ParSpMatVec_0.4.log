>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1082	 ParSpMatVec=0.0281	 speedup=3.8519
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1082	 ParSpMatVec=0.0119	 speedup=9.1146
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1082	 ParSpMatVec=0.0108	 speedup=10.0390
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1082	 ParSpMatVec=0.0091	 speedup=11.8554
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1082	 ParSpMatVec=0.0095	 speedup=11.4094
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0719	 ParSpMatVec=0.0328	 speedup=2.1919
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0719	 ParSpMatVec=0.0125	 speedup=5.7724
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0719	 ParSpMatVec=0.0153	 speedup=4.7109
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0719	 ParSpMatVec=0.0114	 speedup=6.2948
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0719	 ParSpMatVec=0.0106	 speedup=6.7749

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0290	 ParSpMatVec=0.0169	 speedup=1.7134
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0290	 ParSpMatVec=0.0113	 speedup=2.5737
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0290	 ParSpMatVec=0.0336	 speedup=0.8621
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0290	 ParSpMatVec=0.0127	 speedup=2.2794
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0290	 ParSpMatVec=0.0232	 speedup=1.2498

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0353	 ParSpMatVec=0.0325	 speedup=1.0849
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0353	 ParSpMatVec=0.0027	 speedup=12.9939
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0353	 ParSpMatVec=0.0029	 speedup=12.0719
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0353	 ParSpMatVec=0.0015	 speedup=22.8768
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0353	 ParSpMatVec=0.0022	 speedup=16.0284

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0085	 ParSpMatVec=0.0371	 speedup=0.2276
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0085	 ParSpMatVec=0.0038	 speedup=2.2324
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0085	 ParSpMatVec=0.0024	 speedup=3.4900
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0085	 ParSpMatVec=0.0047	 speedup=1.8093
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0085	 ParSpMatVec=0.0046	 speedup=1.8511

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0353	 ParSpMatVec=0.0386	 speedup=0.9145
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0353	 ParSpMatVec=0.0037	 speedup=9.6286
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0353	 ParSpMatVec=0.0025	 speedup=14.3138
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0353	 ParSpMatVec=0.0026	 speedup=13.7050
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0353	 ParSpMatVec=0.0021	 speedup=16.6048

INFO: ParSpMatVec tests passed

>>> End of log
