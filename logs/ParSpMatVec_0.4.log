>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (538.7890625 MB free)
Uptime: 14285.0 sec
Load Avg:  1.900390625  1.46533203125  1.30322265625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     741908 s       4594 s      62010 s     530698 s         22 s
#2  3499 MHz     346488 s       2068 s      53643 s     959918 s          6 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.1
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1634	 ParSpMatVec=0.0292	 speedup=5.6057
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1634	 ParSpMatVec=0.0088	 speedup=18.4712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1634	 ParSpMatVec=0.0159	 speedup=10.2799
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1634	 ParSpMatVec=0.0094	 speedup=17.3003
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1634	 ParSpMatVec=0.0122	 speedup=13.4009
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1263	 ParSpMatVec=0.0450	 speedup=2.8064
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1263	 ParSpMatVec=0.0132	 speedup=9.5741
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1263	 ParSpMatVec=0.0142	 speedup=8.9292
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1263	 ParSpMatVec=0.0136	 speedup=9.3223
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1263	 ParSpMatVec=0.0125	 speedup=10.1478

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0535	 ParSpMatVec=0.0357	 speedup=1.4964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0535	 ParSpMatVec=0.0197	 speedup=2.7216
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0535	 ParSpMatVec=0.0179	 speedup=2.9868
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0535	 ParSpMatVec=0.0181	 speedup=2.9519
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0535	 ParSpMatVec=0.0168	 speedup=3.1847

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0491	 ParSpMatVec=0.0368	 speedup=1.3334
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0491	 ParSpMatVec=0.0017	 speedup=28.4573
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0491	 ParSpMatVec=0.0055	 speedup=8.9250
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0491	 ParSpMatVec=0.0016	 speedup=29.9696
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0491	 ParSpMatVec=0.0023	 speedup=21.0040

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0109	 ParSpMatVec=0.0613	 speedup=0.1782
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0109	 ParSpMatVec=0.0043	 speedup=2.5426
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0109	 ParSpMatVec=0.0027	 speedup=4.0698
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0109	 ParSpMatVec=0.0087	 speedup=1.2580
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0109	 ParSpMatVec=0.0103	 speedup=1.0638

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0589	 ParSpMatVec=0.0474	 speedup=1.2431
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0589	 ParSpMatVec=0.0039	 speedup=15.2856
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0589	 ParSpMatVec=0.0041	 speedup=14.2104
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0589	 ParSpMatVec=0.0021	 speedup=27.4414
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0589	 ParSpMatVec=0.0509	 speedup=1.1578

INFO: ParSpMatVec tests passed

>>> End of log
