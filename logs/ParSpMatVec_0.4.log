>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1203.58203125 MB free)
Uptime: 13188.0 sec
Load Avg:  1.08935546875  1.04296875  0.9814453125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     629719 s       6570 s      52026 s     501407 s         24 s
#2  3499 MHz     406417 s         60 s      45055 s     826887 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.3
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1402	 ParSpMatVec=0.0264	 speedup=5.3201
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1402	 ParSpMatVec=0.0092	 speedup=15.3143
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1402	 ParSpMatVec=0.0120	 speedup=11.7189
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1402	 ParSpMatVec=0.0091	 speedup=15.3722
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1402	 ParSpMatVec=0.0087	 speedup=16.1218
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1265	 ParSpMatVec=0.0402	 speedup=3.1489
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1265	 ParSpMatVec=0.0138	 speedup=9.1661
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1265	 ParSpMatVec=0.0109	 speedup=11.6439
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1265	 ParSpMatVec=0.0108	 speedup=11.7511
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1265	 ParSpMatVec=0.0108	 speedup=11.7592

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0412	 ParSpMatVec=0.0290	 speedup=1.4208
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0412	 ParSpMatVec=0.0139	 speedup=2.9659
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0412	 ParSpMatVec=0.0135	 speedup=3.0428
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0412	 ParSpMatVec=0.0086	 speedup=4.8116
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0412	 ParSpMatVec=0.0115	 speedup=3.5827

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0463	 ParSpMatVec=0.0375	 speedup=1.2338
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0463	 ParSpMatVec=0.0021	 speedup=21.9426
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0463	 ParSpMatVec=0.0062	 speedup=7.4432
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0463	 ParSpMatVec=0.0022	 speedup=21.0427
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0463	 ParSpMatVec=0.0135	 speedup=3.4272

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0095	 ParSpMatVec=0.0485	 speedup=0.1949
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0095	 ParSpMatVec=0.0045	 speedup=2.0998
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0095	 ParSpMatVec=0.0030	 speedup=3.1578
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0095	 ParSpMatVec=0.0035	 speedup=2.7255
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0095	 ParSpMatVec=0.0234	 speedup=0.4048

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0462	 ParSpMatVec=0.0450	 speedup=1.0269
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0462	 ParSpMatVec=0.0039	 speedup=11.7520
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0462	 ParSpMatVec=0.0020	 speedup=23.5390
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0462	 ParSpMatVec=0.0048	 speedup=9.7089
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0462	 ParSpMatVec=0.0020	 speedup=23.1030

INFO: ParSpMatVec tests passed

>>> End of log
