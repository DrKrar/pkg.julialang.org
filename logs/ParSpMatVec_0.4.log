>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/lruthotto/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.2
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.1) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.3
Commit a2f713d (2016-01-12 21:37 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0947	 ParSpMatVec=0.0164	 speedup=5.7778
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0947	 ParSpMatVec=0.0084	 speedup=11.2912
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0947	 ParSpMatVec=0.0112	 speedup=8.4843
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0947	 ParSpMatVec=0.0110	 speedup=8.6301
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0947	 ParSpMatVec=0.0097	 speedup=9.7481
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1172	 ParSpMatVec=0.0350	 speedup=3.3516
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1172	 ParSpMatVec=0.0136	 speedup=8.5994
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1172	 ParSpMatVec=0.0149	 speedup=7.8570
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1172	 ParSpMatVec=0.0149	 speedup=7.8846
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1172	 ParSpMatVec=0.0115	 speedup=10.2188

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0463	 ParSpMatVec=0.0313	 speedup=1.4795
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0463	 ParSpMatVec=0.0137	 speedup=3.3929
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0463	 ParSpMatVec=0.0152	 speedup=3.0450
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0463	 ParSpMatVec=0.0130	 speedup=3.5712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0463	 ParSpMatVec=0.0127	 speedup=3.6521

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0326	 ParSpMatVec=0.0454	 speedup=0.7187
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0326	 ParSpMatVec=0.0024	 speedup=13.7394
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0326	 ParSpMatVec=0.0024	 speedup=13.7565
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0326	 ParSpMatVec=0.0016	 speedup=20.6475
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0326	 ParSpMatVec=0.0015	 speedup=22.3684

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0057	 ParSpMatVec=0.0289	 speedup=0.1959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0057	 ParSpMatVec=0.0024	 speedup=2.3987
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0057	 ParSpMatVec=0.0024	 speedup=2.3726
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0057	 ParSpMatVec=0.0027	 speedup=2.1026
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0057	 ParSpMatVec=0.0022	 speedup=2.5611

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0423	 ParSpMatVec=0.0466	 speedup=0.9071
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0423	 ParSpMatVec=0.0093	 speedup=4.5401
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0423	 ParSpMatVec=0.0031	 speedup=13.7604
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0423	 ParSpMatVec=0.0042	 speedup=10.0639
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0423	 ParSpMatVec=0.0026	 speedup=16.3758

INFO: ParSpMatVec tests passed

>>> End of log
