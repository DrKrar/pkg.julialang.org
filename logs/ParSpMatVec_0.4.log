>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1259	 ParSpMatVec=0.0420	 speedup=2.9980
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1259	 ParSpMatVec=0.0200	 speedup=6.3026
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1259	 ParSpMatVec=0.0118	 speedup=10.6616
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1259	 ParSpMatVec=0.0117	 speedup=10.7370
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1259	 ParSpMatVec=0.0111	 speedup=11.3501
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1156	 ParSpMatVec=0.0380	 speedup=3.0378
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1156	 ParSpMatVec=0.0229	 speedup=5.0396
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1156	 ParSpMatVec=0.0238	 speedup=4.8521
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1156	 ParSpMatVec=0.0125	 speedup=9.2368
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1156	 ParSpMatVec=0.0126	 speedup=9.1972

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0491	 ParSpMatVec=0.0287	 speedup=1.7109
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0491	 ParSpMatVec=0.0135	 speedup=3.6524
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0491	 ParSpMatVec=0.0155	 speedup=3.1792
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0491	 ParSpMatVec=0.0106	 speedup=4.6417
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0491	 ParSpMatVec=0.0121	 speedup=4.0503

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0432	 ParSpMatVec=0.0417	 speedup=1.0364
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0432	 ParSpMatVec=0.0025	 speedup=17.5722
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0432	 ParSpMatVec=0.0016	 speedup=26.6688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0432	 ParSpMatVec=0.0022	 speedup=19.3182
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0432	 ParSpMatVec=0.0030	 speedup=14.2038

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0096	 ParSpMatVec=0.0239	 speedup=0.4001
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0096	 ParSpMatVec=0.0034	 speedup=2.8565
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0096	 ParSpMatVec=0.0016	 speedup=6.0967
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0096	 ParSpMatVec=0.0019	 speedup=5.0179
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0096	 ParSpMatVec=0.0023	 speedup=4.0956

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0263	 ParSpMatVec=0.0396	 speedup=0.6657
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0263	 ParSpMatVec=0.0034	 speedup=7.6661
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0263	 ParSpMatVec=0.0017	 speedup=15.6938
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0263	 ParSpMatVec=0.0020	 speedup=12.8576
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0263	 ParSpMatVec=0.0037	 speedup=7.1800

INFO: ParSpMatVec tests passed

>>> End of log
