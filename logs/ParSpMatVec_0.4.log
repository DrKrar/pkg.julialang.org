>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1226	 ParSpMatVec=0.0271	 speedup=4.5221
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1226	 ParSpMatVec=0.0088	 speedup=14.0080
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1226	 ParSpMatVec=0.0124	 speedup=9.8954
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1226	 ParSpMatVec=0.0101	 speedup=12.1687
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1226	 ParSpMatVec=0.0114	 speedup=10.7458
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1184	 ParSpMatVec=0.0265	 speedup=4.4621
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1184	 ParSpMatVec=0.0129	 speedup=9.1947
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1184	 ParSpMatVec=0.0141	 speedup=8.3874
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1184	 ParSpMatVec=0.0124	 speedup=9.5743
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1184	 ParSpMatVec=0.0138	 speedup=8.5796

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0427	 ParSpMatVec=0.0303	 speedup=1.4097
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0427	 ParSpMatVec=0.0120	 speedup=3.5629
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0427	 ParSpMatVec=0.0144	 speedup=2.9738
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0427	 ParSpMatVec=0.0131	 speedup=3.2561
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0427	 ParSpMatVec=0.0167	 speedup=2.5573

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0378	 ParSpMatVec=0.0394	 speedup=0.9604
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0378	 ParSpMatVec=0.0028	 speedup=13.4760
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0378	 ParSpMatVec=0.0046	 speedup=8.2254
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0378	 ParSpMatVec=0.0020	 speedup=18.8032
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0378	 ParSpMatVec=0.0019	 speedup=20.4148

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0092	 ParSpMatVec=0.0452	 speedup=0.2034
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0092	 ParSpMatVec=0.0040	 speedup=2.3058
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0092	 ParSpMatVec=0.0025	 speedup=3.6737
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0092	 ParSpMatVec=0.0024	 speedup=3.8496
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0092	 ParSpMatVec=0.0026	 speedup=3.5725

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0469	 ParSpMatVec=0.0458	 speedup=1.0235
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0469	 ParSpMatVec=0.0045	 speedup=10.4632
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0469	 ParSpMatVec=0.0019	 speedup=24.3587
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0469	 ParSpMatVec=0.0029	 speedup=16.1323
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0469	 ParSpMatVec=0.0027	 speedup=17.5891

INFO: ParSpMatVec tests passed

>>> End of log
