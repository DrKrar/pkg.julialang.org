>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1202	 ParSpMatVec=0.0157	 speedup=7.6381
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1202	 ParSpMatVec=0.0082	 speedup=14.5867
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1202	 ParSpMatVec=0.0103	 speedup=11.6643
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1202	 ParSpMatVec=0.0060	 speedup=19.9749
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1202	 ParSpMatVec=0.0103	 speedup=11.6954
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1148	 ParSpMatVec=0.0354	 speedup=3.2448
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1148	 ParSpMatVec=0.0128	 speedup=8.9939
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1148	 ParSpMatVec=0.0076	 speedup=15.0369
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1148	 ParSpMatVec=0.0095	 speedup=12.0737
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1148	 ParSpMatVec=0.0123	 speedup=9.3535

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0308	 ParSpMatVec=0.0207	 speedup=1.4908
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0308	 ParSpMatVec=0.0105	 speedup=2.9266
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0308	 ParSpMatVec=0.0077	 speedup=4.0078
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0308	 ParSpMatVec=0.0096	 speedup=3.1964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0308	 ParSpMatVec=0.0132	 speedup=2.3334

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0417	 ParSpMatVec=0.0341	 speedup=1.2216
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0417	 ParSpMatVec=0.0028	 speedup=14.7368
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0417	 ParSpMatVec=0.0018	 speedup=23.5086
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0417	 ParSpMatVec=0.0016	 speedup=25.8059
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0417	 ParSpMatVec=0.0020	 speedup=20.9744

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0093	 ParSpMatVec=0.0465	 speedup=0.2000
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0093	 ParSpMatVec=0.0042	 speedup=2.2313
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0093	 ParSpMatVec=0.0062	 speedup=1.4962
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0093	 ParSpMatVec=0.0033	 speedup=2.7805
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0093	 ParSpMatVec=0.0026	 speedup=3.6278

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0464	 ParSpMatVec=0.0435	 speedup=1.0671
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0464	 ParSpMatVec=0.0045	 speedup=10.2967
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0464	 ParSpMatVec=0.0020	 speedup=23.4772
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0464	 ParSpMatVec=0.0043	 speedup=10.8075
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0464	 ParSpMatVec=0.0033	 speedup=14.2360

INFO: ParSpMatVec tests passed

>>> End of log
