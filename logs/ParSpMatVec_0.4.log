>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (1178.5625 MB free)
Uptime: 13592.0 sec
Load Avg:  1.021484375  1.048828125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz     644510 s       2019 s      59331 s     531730 s         21 s
#2  3505 MHz     406735 s       4317 s      53511 s     858216 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.4
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1293	 ParSpMatVec=0.0159	 speedup=8.1367
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1293	 ParSpMatVec=0.0088	 speedup=14.6155
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1293	 ParSpMatVec=0.0106	 speedup=12.1748
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1293	 ParSpMatVec=0.0106	 speedup=12.1985
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1293	 ParSpMatVec=0.0094	 speedup=13.7759
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1019	 ParSpMatVec=0.0230	 speedup=4.4236
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1019	 ParSpMatVec=0.0132	 speedup=7.7084
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1019	 ParSpMatVec=0.0147	 speedup=6.9357
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1019	 ParSpMatVec=0.0147	 speedup=6.9382
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1019	 ParSpMatVec=0.0174	 speedup=5.8636

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0446	 ParSpMatVec=0.0305	 speedup=1.4618
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0446	 ParSpMatVec=0.0144	 speedup=3.0958
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0446	 ParSpMatVec=0.0162	 speedup=2.7475
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0446	 ParSpMatVec=0.0127	 speedup=3.5112
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0446	 ParSpMatVec=0.0133	 speedup=3.3438

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0424	 ParSpMatVec=0.0396	 speedup=1.0688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0424	 ParSpMatVec=0.0024	 speedup=17.8644
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0424	 ParSpMatVec=0.0025	 speedup=17.2810
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0424	 ParSpMatVec=0.0021	 speedup=20.5288
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0424	 ParSpMatVec=0.0020	 speedup=21.2056

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0460	 speedup=0.1721
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0044	 speedup=1.8062
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0025	 speedup=3.1734
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0027	 speedup=2.9154
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0029	 speedup=2.7441

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0473	 ParSpMatVec=0.0277	 speedup=1.7056
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0473	 ParSpMatVec=0.0032	 speedup=14.6240
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0473	 ParSpMatVec=0.0021	 speedup=22.3865
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0473	 ParSpMatVec=0.0035	 speedup=13.6015
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0473	 ParSpMatVec=0.0025	 speedup=19.0094

INFO: ParSpMatVec tests passed

>>> End of log
