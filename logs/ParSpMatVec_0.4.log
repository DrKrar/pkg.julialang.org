>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0829	 ParSpMatVec=0.0247	 speedup=3.3590
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0829	 ParSpMatVec=0.0080	 speedup=10.3374
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0829	 ParSpMatVec=0.0149	 speedup=5.5619
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0829	 ParSpMatVec=0.0115	 speedup=7.2108
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0829	 ParSpMatVec=0.0112	 speedup=7.3780
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1154	 ParSpMatVec=0.0385	 speedup=2.9964
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1154	 ParSpMatVec=0.0132	 speedup=8.7237
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1154	 ParSpMatVec=0.0163	 speedup=7.0712
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1154	 ParSpMatVec=0.0137	 speedup=8.4344
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1154	 ParSpMatVec=0.0161	 speedup=7.1655

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0618	 ParSpMatVec=0.0297	 speedup=2.0812
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0618	 ParSpMatVec=0.0123	 speedup=5.0321
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0618	 ParSpMatVec=0.0186	 speedup=3.3224
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0618	 ParSpMatVec=0.0131	 speedup=4.7248
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0618	 ParSpMatVec=0.0138	 speedup=4.4733

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0318	 ParSpMatVec=0.0225	 speedup=1.4126
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0318	 ParSpMatVec=0.0018	 speedup=17.8206
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0318	 ParSpMatVec=0.0019	 speedup=16.7533
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0318	 ParSpMatVec=0.0017	 speedup=18.1960
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0318	 ParSpMatVec=0.0019	 speedup=16.8224

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0075	 ParSpMatVec=0.0298	 speedup=0.2522
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0075	 ParSpMatVec=0.0032	 speedup=2.3385
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0075	 ParSpMatVec=0.0018	 speedup=4.1634
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0075	 ParSpMatVec=0.0043	 speedup=1.7438
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0075	 ParSpMatVec=0.0023	 speedup=3.2207

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0356	 ParSpMatVec=0.0445	 speedup=0.8010
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0356	 ParSpMatVec=0.0037	 speedup=9.5358
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0356	 ParSpMatVec=0.0020	 speedup=18.2429
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0356	 ParSpMatVec=0.0022	 speedup=15.8288
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0356	 ParSpMatVec=0.0024	 speedup=14.9317

INFO: ParSpMatVec tests passed

>>> End of log
