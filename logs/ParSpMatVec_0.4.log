>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1152	 ParSpMatVec=0.0279	 speedup=4.1324
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1152	 ParSpMatVec=0.0083	 speedup=13.8140
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1152	 ParSpMatVec=0.0136	 speedup=8.4435
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1152	 ParSpMatVec=0.0102	 speedup=11.2820
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1152	 ParSpMatVec=0.0084	 speedup=13.7101
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0949	 ParSpMatVec=0.0376	 speedup=2.5263
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0949	 ParSpMatVec=0.0127	 speedup=7.4675
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0949	 ParSpMatVec=0.0179	 speedup=5.2987
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0949	 ParSpMatVec=0.0155	 speedup=6.1050
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0949	 ParSpMatVec=0.0128	 speedup=7.3937

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0450	 ParSpMatVec=0.0281	 speedup=1.6009
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0450	 ParSpMatVec=0.0133	 speedup=3.3820
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0450	 ParSpMatVec=0.0176	 speedup=2.5536
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0450	 ParSpMatVec=0.0147	 speedup=3.0663
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0450	 ParSpMatVec=0.0122	 speedup=3.7012

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0347	 ParSpMatVec=0.0265	 speedup=1.3068
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0347	 ParSpMatVec=0.0021	 speedup=16.2294
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0347	 ParSpMatVec=0.0025	 speedup=13.6380
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0347	 ParSpMatVec=0.0014	 speedup=25.2147
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0347	 ParSpMatVec=0.0031	 speedup=11.1733

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0077	 ParSpMatVec=0.0435	 speedup=0.1757
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0077	 ParSpMatVec=0.0041	 speedup=1.8633
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0077	 ParSpMatVec=0.0033	 speedup=2.3489
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0077	 ParSpMatVec=0.0021	 speedup=3.6098
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0077	 ParSpMatVec=0.0024	 speedup=3.1733

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0420	 ParSpMatVec=0.0283	 speedup=1.4809
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0420	 ParSpMatVec=0.0026	 speedup=16.4172
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0420	 ParSpMatVec=0.0016	 speedup=26.0356
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0420	 ParSpMatVec=0.0032	 speedup=13.0394
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0420	 ParSpMatVec=0.0022	 speedup=18.8097

INFO: ParSpMatVec tests passed

>>> End of log
