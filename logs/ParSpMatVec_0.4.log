>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0739	 ParSpMatVec=0.0235	 speedup=3.1381
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0739	 ParSpMatVec=0.0101	 speedup=7.2967
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0739	 ParSpMatVec=0.0094	 speedup=7.8299
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0739	 ParSpMatVec=0.0071	 speedup=10.3961
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0739	 ParSpMatVec=0.0095	 speedup=7.7653
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1159	 ParSpMatVec=0.0377	 speedup=3.0767
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1159	 ParSpMatVec=0.0134	 speedup=8.6653
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1159	 ParSpMatVec=0.0093	 speedup=12.4105
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1159	 ParSpMatVec=0.0097	 speedup=11.8931
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1159	 ParSpMatVec=0.0133	 speedup=8.7057

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0426	 ParSpMatVec=0.0278	 speedup=1.5295
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0426	 ParSpMatVec=0.0131	 speedup=3.2588
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0426	 ParSpMatVec=0.0083	 speedup=5.1216
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0426	 ParSpMatVec=0.0090	 speedup=4.7435
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0426	 ParSpMatVec=0.0107	 speedup=3.9622

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0341	 ParSpMatVec=0.0219	 speedup=1.5577
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0341	 ParSpMatVec=0.0014	 speedup=25.0022
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0341	 ParSpMatVec=0.0011	 speedup=31.0088
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0341	 ParSpMatVec=0.0008	 speedup=44.5452
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0341	 ParSpMatVec=0.0013	 speedup=26.7794

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0074	 ParSpMatVec=0.0391	 speedup=0.1905
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0074	 ParSpMatVec=0.0039	 speedup=1.9180
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0074	 ParSpMatVec=0.0026	 speedup=2.8916
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0074	 ParSpMatVec=0.0020	 speedup=3.7132
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0074	 ParSpMatVec=0.0024	 speedup=3.0587

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0418	 ParSpMatVec=0.0437	 speedup=0.9566
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0418	 ParSpMatVec=0.0035	 speedup=12.0777
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0418	 ParSpMatVec=0.0024	 speedup=17.1018
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0418	 ParSpMatVec=0.0030	 speedup=14.0300
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0418	 ParSpMatVec=0.0025	 speedup=17.0223

INFO: ParSpMatVec tests passed

>>> End of log
