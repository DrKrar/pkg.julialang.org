>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.22
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1382	 ParSpMatVec=0.0313	 speedup=4.4150
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1382	 ParSpMatVec=0.0097	 speedup=14.2601
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1382	 ParSpMatVec=0.0093	 speedup=14.8840
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1382	 ParSpMatVec=0.0068	 speedup=20.3087
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1382	 ParSpMatVec=0.0065	 speedup=21.1617
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1482	 ParSpMatVec=0.0514	 speedup=2.8814
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1482	 ParSpMatVec=0.0185	 speedup=8.0222
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1482	 ParSpMatVec=0.0109	 speedup=13.5424
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1482	 ParSpMatVec=0.0145	 speedup=10.1914
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1482	 ParSpMatVec=0.0132	 speedup=11.1979

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0389	 ParSpMatVec=0.0386	 speedup=1.0061
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0389	 ParSpMatVec=0.0163	 speedup=2.3892
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0389	 ParSpMatVec=0.0104	 speedup=3.7422
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0389	 ParSpMatVec=0.0107	 speedup=3.6343
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0389	 ParSpMatVec=0.0109	 speedup=3.5814

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0457	 ParSpMatVec=0.0487	 speedup=0.9385
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0457	 ParSpMatVec=0.0050	 speedup=9.0903
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0457	 ParSpMatVec=0.0025	 speedup=18.5044
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0457	 ParSpMatVec=0.0019	 speedup=24.2271
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0457	 ParSpMatVec=0.0022	 speedup=20.5174

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0089	 ParSpMatVec=0.0552	 speedup=0.1607
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0089	 ParSpMatVec=0.0034	 speedup=2.6026
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0089	 ParSpMatVec=0.0022	 speedup=4.0539
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0089	 ParSpMatVec=0.0038	 speedup=2.3441
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0089	 ParSpMatVec=0.0035	 speedup=2.5466

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0434	 ParSpMatVec=0.0492	 speedup=0.8811
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0434	 ParSpMatVec=0.0048	 speedup=9.0174
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0434	 ParSpMatVec=0.1075	 speedup=0.4034
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0434	 ParSpMatVec=0.0026	 speedup=16.5709
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0434	 ParSpMatVec=0.0055	 speedup=7.9470

INFO: ParSpMatVec tests passed

>>> End of log
