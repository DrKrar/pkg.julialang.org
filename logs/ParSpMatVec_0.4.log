>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0970	 ParSpMatVec=0.0164	 speedup=5.9266
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0970	 ParSpMatVec=0.0079	 speedup=12.2091
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0970	 ParSpMatVec=0.0132	 speedup=7.3301
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0970	 ParSpMatVec=0.0080	 speedup=12.1849
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0970	 ParSpMatVec=0.0107	 speedup=9.0637
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0756	 ParSpMatVec=0.0289	 speedup=2.6162
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0756	 ParSpMatVec=0.0118	 speedup=6.4233
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0756	 ParSpMatVec=0.0117	 speedup=6.4415
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0756	 ParSpMatVec=0.0134	 speedup=5.6491
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0756	 ParSpMatVec=0.0123	 speedup=6.1435

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0469	 ParSpMatVec=0.0288	 speedup=1.6247
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0469	 ParSpMatVec=0.0129	 speedup=3.6234
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0469	 ParSpMatVec=0.0128	 speedup=3.6624
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0469	 ParSpMatVec=0.0143	 speedup=3.2783
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0469	 ParSpMatVec=0.0167	 speedup=2.7984

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0435	 ParSpMatVec=0.0374	 speedup=1.1633
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0435	 ParSpMatVec=0.0028	 speedup=15.8035
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0435	 ParSpMatVec=0.0031	 speedup=13.9781
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0435	 ParSpMatVec=0.0020	 speedup=22.1865
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0435	 ParSpMatVec=0.0020	 speedup=21.7631

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0419	 speedup=0.2054
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0040	 speedup=2.1406
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0021	 speedup=4.1130
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0025	 speedup=3.4475
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0023	 speedup=3.7377

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0488	 ParSpMatVec=0.0396	 speedup=1.2314
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0488	 ParSpMatVec=0.0034	 speedup=14.2399
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0488	 ParSpMatVec=0.0026	 speedup=18.8825
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0488	 ParSpMatVec=0.0032	 speedup=15.3966
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0488	 ParSpMatVec=0.0024	 speedup=20.2970

INFO: ParSpMatVec tests passed

>>> End of log
