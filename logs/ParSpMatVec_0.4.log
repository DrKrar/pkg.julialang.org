>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1389	 ParSpMatVec=0.0304	 speedup=4.5672
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1389	 ParSpMatVec=0.0098	 speedup=14.1666
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1389	 ParSpMatVec=0.0118	 speedup=11.7507
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1389	 ParSpMatVec=0.0089	 speedup=15.5710
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1389	 ParSpMatVec=0.0089	 speedup=15.6024
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1296	 ParSpMatVec=0.0427	 speedup=3.0359
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1296	 ParSpMatVec=0.0125	 speedup=10.3371
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1296	 ParSpMatVec=0.0091	 speedup=14.2284
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1296	 ParSpMatVec=0.0097	 speedup=13.3082
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1296	 ParSpMatVec=0.0108	 speedup=12.0144

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0480	 ParSpMatVec=0.0294	 speedup=1.6301
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0480	 ParSpMatVec=0.0135	 speedup=3.5408
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0480	 ParSpMatVec=0.0087	 speedup=5.5424
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0480	 ParSpMatVec=0.0088	 speedup=5.4290
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0480	 ParSpMatVec=0.0103	 speedup=4.6592

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0333	 ParSpMatVec=0.0380	 speedup=0.8761
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0333	 ParSpMatVec=0.0030	 speedup=11.0118
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0333	 ParSpMatVec=0.0013	 speedup=24.9861
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0333	 ParSpMatVec=0.0017	 speedup=19.4552
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0333	 ParSpMatVec=0.0015	 speedup=21.6214

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0083	 ParSpMatVec=0.0257	 speedup=0.3224
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0083	 ParSpMatVec=0.0037	 speedup=2.2204
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0083	 ParSpMatVec=0.0022	 speedup=3.8369
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0083	 ParSpMatVec=0.0028	 speedup=2.9683
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0083	 ParSpMatVec=0.0022	 speedup=3.7931

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0294	 ParSpMatVec=0.0300	 speedup=0.9778
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0294	 ParSpMatVec=0.0026	 speedup=11.2168
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0294	 ParSpMatVec=0.0017	 speedup=17.5880
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0294	 ParSpMatVec=0.0012	 speedup=24.9927
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0294	 ParSpMatVec=0.0032	 speedup=9.1918

INFO: ParSpMatVec tests passed

>>> End of log
