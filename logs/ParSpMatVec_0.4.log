>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1279	 ParSpMatVec=0.0150	 speedup=8.5035
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1279	 ParSpMatVec=0.0101	 speedup=12.6931
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1279	 ParSpMatVec=0.0115	 speedup=11.0994
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1279	 ParSpMatVec=0.0087	 speedup=14.6355
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1279	 ParSpMatVec=0.0070	 speedup=18.3155
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0817	 ParSpMatVec=0.0281	 speedup=2.9040
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0817	 ParSpMatVec=0.0133	 speedup=6.1251
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0817	 ParSpMatVec=0.0173	 speedup=4.7187
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0817	 ParSpMatVec=0.0155	 speedup=5.2679
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0817	 ParSpMatVec=0.0154	 speedup=5.3116

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0576	 ParSpMatVec=0.0335	 speedup=1.7206
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0576	 ParSpMatVec=0.0192	 speedup=2.9947
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0576	 ParSpMatVec=0.0230	 speedup=2.5016
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0576	 ParSpMatVec=0.0131	 speedup=4.4003
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0576	 ParSpMatVec=0.0178	 speedup=3.2439

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0360	 ParSpMatVec=0.0486	 speedup=0.7398
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0360	 ParSpMatVec=0.0027	 speedup=13.3691
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0360	 ParSpMatVec=0.0029	 speedup=12.2802
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0360	 ParSpMatVec=0.0018	 speedup=19.6246
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0360	 ParSpMatVec=0.0016	 speedup=22.7381

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0092	 ParSpMatVec=0.0467	 speedup=0.1962
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0092	 ParSpMatVec=0.0034	 speedup=2.6788
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0092	 ParSpMatVec=0.0026	 speedup=3.5066
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0092	 ParSpMatVec=0.0053	 speedup=1.7352
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0092	 ParSpMatVec=0.0040	 speedup=2.2649

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0507	 ParSpMatVec=0.0325	 speedup=1.5598
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0507	 ParSpMatVec=0.0045	 speedup=11.2923
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0507	 ParSpMatVec=0.0033	 speedup=15.1848
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0507	 ParSpMatVec=0.0060	 speedup=8.3820
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0507	 ParSpMatVec=0.0028	 speedup=18.4095

INFO: ParSpMatVec tests passed

>>> End of log
