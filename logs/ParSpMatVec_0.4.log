>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0815	 ParSpMatVec=0.0157	 speedup=5.2023
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0815	 ParSpMatVec=0.0084	 speedup=9.7275
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0815	 ParSpMatVec=0.0153	 speedup=5.3315
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0815	 ParSpMatVec=0.0117	 speedup=6.9965
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0815	 ParSpMatVec=0.0077	 speedup=10.5891
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1012	 ParSpMatVec=0.0414	 speedup=2.4431
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1012	 ParSpMatVec=0.0126	 speedup=8.0064
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1012	 ParSpMatVec=0.0133	 speedup=7.6144
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1012	 ParSpMatVec=0.0141	 speedup=7.2031
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1012	 ParSpMatVec=0.0164	 speedup=6.1817

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0503	 ParSpMatVec=0.0294	 speedup=1.7118
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0503	 ParSpMatVec=0.0163	 speedup=3.0778
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0503	 ParSpMatVec=0.0148	 speedup=3.3919
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0503	 ParSpMatVec=0.0172	 speedup=2.9201
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0503	 ParSpMatVec=0.0167	 speedup=3.0078

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0325	 ParSpMatVec=0.0226	 speedup=1.4392
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0325	 ParSpMatVec=0.0021	 speedup=15.3795
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0325	 ParSpMatVec=0.0018	 speedup=18.3043
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0325	 ParSpMatVec=0.0023	 speedup=13.9553
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0325	 ParSpMatVec=0.0018	 speedup=18.3249

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0083	 ParSpMatVec=0.0433	 speedup=0.1926
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0083	 ParSpMatVec=0.0029	 speedup=2.8388
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0083	 ParSpMatVec=0.0018	 speedup=4.6116
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0083	 ParSpMatVec=0.0024	 speedup=3.5222
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0083	 ParSpMatVec=0.0023	 speedup=3.6739

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0287	 ParSpMatVec=0.0278	 speedup=1.0324
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0287	 ParSpMatVec=0.0040	 speedup=7.2454
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0287	 ParSpMatVec=0.0022	 speedup=12.8111
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0287	 ParSpMatVec=0.0029	 speedup=9.8630
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0287	 ParSpMatVec=0.0024	 speedup=11.8027

INFO: ParSpMatVec tests passed

>>> End of log
