>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages
INFO: Nothing to be done
INFO: METADATA is out-of-date — you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1059.32421875 MB free)
Uptime: 13749.0 sec
Load Avg:  0.99560546875  0.95947265625  0.92919921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     562480 s        390 s      57866 s     591312 s         27 s
#2  3500 MHz     415735 s       4754 s      48607 s     839455 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.0
 - Compat                        0.8.6
 - SHA                           0.1.2
 - URIParser                     0.1.5
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1454	 ParSpMatVec=0.0265	 speedup=5.4914
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1454	 ParSpMatVec=0.0102	 speedup=14.2660
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1454	 ParSpMatVec=0.0132	 speedup=10.9892
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1454	 ParSpMatVec=0.0108	 speedup=13.4515
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1454	 ParSpMatVec=0.0118	 speedup=12.3403
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1351	 ParSpMatVec=0.0357	 speedup=3.7836
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1351	 ParSpMatVec=0.0115	 speedup=11.7195
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1351	 ParSpMatVec=0.0145	 speedup=9.3437
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1351	 ParSpMatVec=0.0130	 speedup=10.4202
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1351	 ParSpMatVec=0.0120	 speedup=11.2527

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0428	 ParSpMatVec=0.0243	 speedup=1.7573
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0428	 ParSpMatVec=0.0129	 speedup=3.3216
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0428	 ParSpMatVec=0.0151	 speedup=2.8296
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0428	 ParSpMatVec=0.0126	 speedup=3.4016
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0428	 ParSpMatVec=0.0133	 speedup=3.2080

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0409	 ParSpMatVec=0.0278	 speedup=1.4725
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0409	 ParSpMatVec=0.0032	 speedup=12.6837
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0409	 ParSpMatVec=0.0024	 speedup=16.9959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0409	 ParSpMatVec=0.0024	 speedup=17.2157
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0409	 ParSpMatVec=0.0034	 speedup=12.1470

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0468	 speedup=0.1833
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0042	 speedup=2.0539
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0024	 speedup=3.5109
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0028	 speedup=3.0473
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0025	 speedup=3.3911

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0504	 ParSpMatVec=0.0533	 speedup=0.9453
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0504	 ParSpMatVec=0.0047	 speedup=10.7558
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0504	 ParSpMatVec=0.0020	 speedup=24.9079
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0504	 ParSpMatVec=0.0027	 speedup=18.9878
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0504	 ParSpMatVec=0.0034	 speedup=14.6702

INFO: ParSpMatVec tests passed

>>> End of log
