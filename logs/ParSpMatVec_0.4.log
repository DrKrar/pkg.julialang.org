>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1376	 ParSpMatVec=0.0251	 speedup=5.4846
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1376	 ParSpMatVec=0.0094	 speedup=14.6567
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1376	 ParSpMatVec=0.0116	 speedup=11.8377
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1376	 ParSpMatVec=0.0131	 speedup=10.5082
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1376	 ParSpMatVec=0.0079	 speedup=17.3331
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1237	 ParSpMatVec=0.0365	 speedup=3.3900
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1237	 ParSpMatVec=0.0124	 speedup=9.9505
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1237	 ParSpMatVec=0.0124	 speedup=9.9374
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1237	 ParSpMatVec=0.0135	 speedup=9.1922
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1237	 ParSpMatVec=0.0139	 speedup=8.9127

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0373	 ParSpMatVec=0.0242	 speedup=1.5384
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0373	 ParSpMatVec=0.0126	 speedup=2.9617
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0373	 ParSpMatVec=0.0143	 speedup=2.5980
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0373	 ParSpMatVec=0.0140	 speedup=2.6562
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0373	 ParSpMatVec=0.0165	 speedup=2.2647

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0411	 ParSpMatVec=0.0392	 speedup=1.0505
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0411	 ParSpMatVec=0.0027	 speedup=15.1722
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0411	 ParSpMatVec=0.0021	 speedup=19.4200
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0411	 ParSpMatVec=0.0021	 speedup=19.5348
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0411	 ParSpMatVec=0.0022	 speedup=18.6625

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0372	 speedup=0.2190
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0119	 speedup=0.6851
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0061	 speedup=1.3258
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0027	 speedup=2.9629
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0033	 speedup=2.4513

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0445	 ParSpMatVec=0.0435	 speedup=1.0227
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0445	 ParSpMatVec=0.0038	 speedup=11.7445
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0445	 ParSpMatVec=0.0025	 speedup=18.1248
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0445	 ParSpMatVec=0.0029	 speedup=15.5053
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0445	 ParSpMatVec=0.0027	 speedup=16.5560

INFO: ParSpMatVec tests passed

>>> End of log
