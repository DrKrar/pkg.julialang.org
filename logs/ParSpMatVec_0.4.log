>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1304	 ParSpMatVec=0.0273	 speedup=4.7737
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1304	 ParSpMatVec=0.0088	 speedup=14.8303
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1304	 ParSpMatVec=0.0117	 speedup=11.1753
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1304	 ParSpMatVec=0.0098	 speedup=13.3502
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1304	 ParSpMatVec=0.0104	 speedup=12.5263
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1326	 ParSpMatVec=0.0434	 speedup=3.0532
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1326	 ParSpMatVec=0.0167	 speedup=7.9559
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1326	 ParSpMatVec=0.0154	 speedup=8.5858
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1326	 ParSpMatVec=0.0138	 speedup=9.6079
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1326	 ParSpMatVec=0.0176	 speedup=7.5532

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0478	 ParSpMatVec=0.0299	 speedup=1.5979
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0478	 ParSpMatVec=0.0163	 speedup=2.9258
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0478	 ParSpMatVec=0.0146	 speedup=3.2652
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0478	 ParSpMatVec=0.0125	 speedup=3.8145
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0478	 ParSpMatVec=0.0131	 speedup=3.6508

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0405	 ParSpMatVec=0.0357	 speedup=1.1344
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0405	 ParSpMatVec=0.0019	 speedup=21.4505
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0405	 ParSpMatVec=0.0035	 speedup=11.6628
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0405	 ParSpMatVec=0.0021	 speedup=19.6271
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0405	 ParSpMatVec=0.0016	 speedup=25.8536

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0080	 ParSpMatVec=0.0429	 speedup=0.1866
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0080	 ParSpMatVec=0.0037	 speedup=2.1608
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0080	 ParSpMatVec=0.0027	 speedup=2.9970
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0080	 ParSpMatVec=0.0031	 speedup=2.5791
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0080	 ParSpMatVec=0.0028	 speedup=2.8219

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0286	 ParSpMatVec=0.0280	 speedup=1.0207
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0286	 ParSpMatVec=0.0028	 speedup=10.1706
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0286	 ParSpMatVec=0.0022	 speedup=12.9048
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0286	 ParSpMatVec=0.0022	 speedup=13.1572
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0286	 ParSpMatVec=0.0030	 speedup=9.5800

INFO: ParSpMatVec tests passed

>>> End of log
