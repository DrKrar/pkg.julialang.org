>>> 'Pkg.add("ParSpMatVec")' log
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1168.1484375 MB free)
Uptime: 48014.0 sec
Load Avg:  0.99462890625  0.9853515625  1.02734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1305068 s       2636 s     156656 s    2871785 s        243 s
#2  3499 MHz     882816 s       3702 s     139039 s    3499106 s          4 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.7.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1383	 ParSpMatVec=0.0265	 speedup=5.2286
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1383	 ParSpMatVec=0.0084	 speedup=16.3959
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1383	 ParSpMatVec=0.0117	 speedup=11.8049
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1383	 ParSpMatVec=0.0088	 speedup=15.7440
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1383	 ParSpMatVec=0.0097	 speedup=14.2115
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1211	 ParSpMatVec=0.0365	 speedup=3.3146
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1211	 ParSpMatVec=0.0135	 speedup=8.9520
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1211	 ParSpMatVec=0.0154	 speedup=7.8881
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1211	 ParSpMatVec=0.0175	 speedup=6.9270
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1211	 ParSpMatVec=0.0107	 speedup=11.3060

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0299	 ParSpMatVec=0.0192	 speedup=1.5552
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0299	 ParSpMatVec=0.0128	 speedup=2.3292
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0299	 ParSpMatVec=0.0147	 speedup=2.0319
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0299	 ParSpMatVec=0.0125	 speedup=2.3894
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0299	 ParSpMatVec=0.0142	 speedup=2.0983

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0380	 ParSpMatVec=0.0361	 speedup=1.0544
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0380	 ParSpMatVec=0.0019	 speedup=19.8962
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0380	 ParSpMatVec=0.0025	 speedup=15.4330
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0380	 ParSpMatVec=0.0017	 speedup=22.4423
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0380	 ParSpMatVec=0.0019	 speedup=19.5141

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0399	 speedup=0.2029
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0033	 speedup=2.4182
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0017	 speedup=4.8889
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0039	 speedup=2.0783
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0020	 speedup=4.0320

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0483	 ParSpMatVec=0.0516	 speedup=0.9355
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0483	 ParSpMatVec=0.0032	 speedup=15.0380
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0483	 ParSpMatVec=0.0022	 speedup=22.0479
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0483	 ParSpMatVec=0.0022	 speedup=21.9111
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0483	 ParSpMatVec=0.0025	 speedup=19.5715

INFO: ParSpMatVec tests passed

>>> End of log
