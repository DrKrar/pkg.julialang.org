>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1338	 ParSpMatVec=0.0255	 speedup=5.2461
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1338	 ParSpMatVec=0.0084	 speedup=15.8840
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1338	 ParSpMatVec=0.0115	 speedup=11.6216
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1338	 ParSpMatVec=0.0124	 speedup=10.7898
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1338	 ParSpMatVec=0.0076	 speedup=17.6314
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1201	 ParSpMatVec=0.0421	 speedup=2.8525
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1201	 ParSpMatVec=0.0136	 speedup=8.8364
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1201	 ParSpMatVec=0.0115	 speedup=10.4453
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1201	 ParSpMatVec=0.0147	 speedup=8.1702
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1201	 ParSpMatVec=0.0126	 speedup=9.5214

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0430	 ParSpMatVec=0.0312	 speedup=1.3788
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0430	 ParSpMatVec=0.0134	 speedup=3.2185
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0430	 ParSpMatVec=0.0146	 speedup=2.9525
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0430	 ParSpMatVec=0.0104	 speedup=4.1295
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0430	 ParSpMatVec=0.0134	 speedup=3.2204

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0296	 ParSpMatVec=0.0237	 speedup=1.2470
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0296	 ParSpMatVec=0.0027	 speedup=11.1276
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0296	 ParSpMatVec=0.0022	 speedup=13.1684
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0296	 ParSpMatVec=0.0017	 speedup=16.9825
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0296	 ParSpMatVec=0.0020	 speedup=14.5375

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0055	 ParSpMatVec=0.0368	 speedup=0.1492
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0055	 ParSpMatVec=0.0035	 speedup=1.5774
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0055	 ParSpMatVec=0.0014	 speedup=3.8436
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0055	 ParSpMatVec=0.0018	 speedup=2.9901
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0055	 ParSpMatVec=0.0023	 speedup=2.4340

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0302	 ParSpMatVec=0.0381	 speedup=0.7916
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0302	 ParSpMatVec=0.0036	 speedup=8.3471
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0302	 ParSpMatVec=0.0021	 speedup=14.3916
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0302	 ParSpMatVec=0.0025	 speedup=11.9801
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0302	 ParSpMatVec=0.0022	 speedup=13.7552

INFO: ParSpMatVec tests passed

>>> End of log
