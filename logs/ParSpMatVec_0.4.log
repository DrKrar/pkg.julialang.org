>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1041	 ParSpMatVec=0.0251	 speedup=4.1377
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1041	 ParSpMatVec=0.0091	 speedup=11.4120
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1041	 ParSpMatVec=0.0124	 speedup=8.3617
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1041	 ParSpMatVec=0.0110	 speedup=9.4881
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1041	 ParSpMatVec=0.0099	 speedup=10.5061
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0817	 ParSpMatVec=0.0456	 speedup=1.7926
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0817	 ParSpMatVec=0.0128	 speedup=6.3680
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0817	 ParSpMatVec=0.0133	 speedup=6.1222
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0817	 ParSpMatVec=0.0119	 speedup=6.8413
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0817	 ParSpMatVec=0.0135	 speedup=6.0466

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0451	 ParSpMatVec=0.0288	 speedup=1.5671
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0451	 ParSpMatVec=0.0134	 speedup=3.3676
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0451	 ParSpMatVec=0.0145	 speedup=3.1082
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0451	 ParSpMatVec=0.0138	 speedup=3.2749
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0451	 ParSpMatVec=0.0170	 speedup=2.6503

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0266	 ParSpMatVec=0.0243	 speedup=1.0943
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0266	 ParSpMatVec=0.0022	 speedup=11.8960
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0266	 ParSpMatVec=0.0023	 speedup=11.7637
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0266	 ParSpMatVec=0.0024	 speedup=11.1715
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0266	 ParSpMatVec=0.0049	 speedup=5.4376

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0436	 speedup=0.1859
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0042	 speedup=1.9529
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0033	 speedup=2.4704
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0048	 speedup=1.6741
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0037	 speedup=2.2085

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0338	 ParSpMatVec=0.0476	 speedup=0.7101
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0338	 ParSpMatVec=0.0038	 speedup=8.8488
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0338	 ParSpMatVec=0.0018	 speedup=19.0898
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0338	 ParSpMatVec=0.0024	 speedup=14.1201
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0338	 ParSpMatVec=0.0031	 speedup=10.8985

INFO: ParSpMatVec tests passed

>>> End of log
