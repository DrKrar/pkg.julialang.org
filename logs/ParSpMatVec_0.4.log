>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0902	 ParSpMatVec=0.0156	 speedup=5.7657
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0902	 ParSpMatVec=0.0085	 speedup=10.5585
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0902	 ParSpMatVec=0.0158	 speedup=5.7244
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0902	 ParSpMatVec=0.0088	 speedup=10.2206
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0902	 ParSpMatVec=0.0079	 speedup=11.4598
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0802	 ParSpMatVec=0.0326	 speedup=2.4593
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0802	 ParSpMatVec=0.0130	 speedup=6.1673
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0802	 ParSpMatVec=0.0148	 speedup=5.4301
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0802	 ParSpMatVec=0.0186	 speedup=4.3240
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0802	 ParSpMatVec=0.0109	 speedup=7.3525

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0424	 ParSpMatVec=0.0281	 speedup=1.5060
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0424	 ParSpMatVec=0.0148	 speedup=2.8624
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0424	 ParSpMatVec=0.0085	 speedup=4.9594
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0424	 ParSpMatVec=0.0093	 speedup=4.5341
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0424	 ParSpMatVec=0.0106	 speedup=4.0083

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0412	 ParSpMatVec=0.0350	 speedup=1.1775
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0412	 ParSpMatVec=0.0021	 speedup=19.2742
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0412	 ParSpMatVec=0.0016	 speedup=25.2861
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0412	 ParSpMatVec=0.0016	 speedup=26.3751
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0412	 ParSpMatVec=0.0016	 speedup=25.7300

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0077	 ParSpMatVec=0.0416	 speedup=0.1842
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0077	 ParSpMatVec=0.0035	 speedup=2.1941
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0077	 ParSpMatVec=0.0015	 speedup=5.2249
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0077	 ParSpMatVec=0.0042	 speedup=1.8260
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0077	 ParSpMatVec=0.0032	 speedup=2.3682

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0425	 ParSpMatVec=0.0548	 speedup=0.7749
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0425	 ParSpMatVec=0.0028	 speedup=15.2798
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0425	 ParSpMatVec=0.0030	 speedup=14.1957
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0425	 ParSpMatVec=0.0024	 speedup=18.0067
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0425	 ParSpMatVec=0.0036	 speedup=11.9523

INFO: ParSpMatVec tests passed

>>> End of log
