>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1363	 ParSpMatVec=0.0258	 speedup=5.2917
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1363	 ParSpMatVec=0.0090	 speedup=15.0849
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1363	 ParSpMatVec=0.0086	 speedup=15.8227
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1363	 ParSpMatVec=0.0071	 speedup=19.2000
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1363	 ParSpMatVec=0.0077	 speedup=17.7273
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1198	 ParSpMatVec=0.0422	 speedup=2.8354
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1198	 ParSpMatVec=0.0133	 speedup=9.0367
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1198	 ParSpMatVec=0.0098	 speedup=12.2303
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1198	 ParSpMatVec=0.0094	 speedup=12.7628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1198	 ParSpMatVec=0.0133	 speedup=8.9781

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0422	 ParSpMatVec=0.0296	 speedup=1.4266
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0422	 ParSpMatVec=0.0128	 speedup=3.2934
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0422	 ParSpMatVec=0.0079	 speedup=5.3666
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0422	 ParSpMatVec=0.0105	 speedup=4.0041
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0422	 ParSpMatVec=0.0111	 speedup=3.7964

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0406	 ParSpMatVec=0.0376	 speedup=1.0783
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0406	 ParSpMatVec=0.0024	 speedup=16.6103
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0406	 ParSpMatVec=0.0038	 speedup=10.6233
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0406	 ParSpMatVec=0.0018	 speedup=23.0271
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0406	 ParSpMatVec=0.0018	 speedup=22.2725

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0074	 ParSpMatVec=0.0415	 speedup=0.1785
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0074	 ParSpMatVec=0.0036	 speedup=2.0575
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0074	 ParSpMatVec=0.0017	 speedup=4.2476
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0074	 ParSpMatVec=0.0029	 speedup=2.5401
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0074	 ParSpMatVec=0.0022	 speedup=3.3880

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0352	 ParSpMatVec=0.0295	 speedup=1.1937
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0352	 ParSpMatVec=0.0026	 speedup=13.4148
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0352	 ParSpMatVec=0.0018	 speedup=19.9878
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0352	 ParSpMatVec=0.0024	 speedup=14.4474
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0352	 ParSpMatVec=0.0024	 speedup=14.5201

INFO: ParSpMatVec tests passed

>>> End of log
