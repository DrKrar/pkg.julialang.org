>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0814	 ParSpMatVec=0.0163	 speedup=4.9843
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0814	 ParSpMatVec=0.0072	 speedup=11.2508
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0814	 ParSpMatVec=0.0118	 speedup=6.8888
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0814	 ParSpMatVec=0.0124	 speedup=6.5558
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0814	 ParSpMatVec=0.0111	 speedup=7.3186
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0738	 ParSpMatVec=0.0261	 speedup=2.8238
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0738	 ParSpMatVec=0.0132	 speedup=5.6109
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0738	 ParSpMatVec=0.0145	 speedup=5.1026
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0738	 ParSpMatVec=0.0135	 speedup=5.4548
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0738	 ParSpMatVec=0.0155	 speedup=4.7529

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0342	 ParSpMatVec=0.0175	 speedup=1.9562
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0342	 ParSpMatVec=0.0122	 speedup=2.8019
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0342	 ParSpMatVec=0.0141	 speedup=2.4332
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0342	 ParSpMatVec=0.0135	 speedup=2.5392
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0342	 ParSpMatVec=0.0153	 speedup=2.2376

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0336	 ParSpMatVec=0.0224	 speedup=1.4976
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0336	 ParSpMatVec=0.0028	 speedup=11.8571
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0336	 ParSpMatVec=0.0024	 speedup=14.0741
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0336	 ParSpMatVec=0.0031	 speedup=10.8198
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0336	 ParSpMatVec=0.0047	 speedup=7.1873

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0058	 ParSpMatVec=0.0261	 speedup=0.2231
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0058	 ParSpMatVec=0.0031	 speedup=1.8639
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0058	 ParSpMatVec=0.0024	 speedup=2.4127
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0058	 ParSpMatVec=0.0025	 speedup=2.2953
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0058	 ParSpMatVec=0.0027	 speedup=2.1656

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0323	 ParSpMatVec=0.0381	 speedup=0.8474
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0323	 ParSpMatVec=0.0036	 speedup=9.0498
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0323	 ParSpMatVec=0.0018	 speedup=17.5550
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0323	 ParSpMatVec=0.0023	 speedup=13.9937
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0323	 ParSpMatVec=0.0030	 speedup=10.8355

INFO: ParSpMatVec tests passed

>>> End of log
