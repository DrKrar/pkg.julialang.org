>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0992	 ParSpMatVec=0.0153	 speedup=6.5049
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0992	 ParSpMatVec=0.0092	 speedup=10.7841
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0992	 ParSpMatVec=0.0115	 speedup=8.6579
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0992	 ParSpMatVec=0.0107	 speedup=9.3149
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0992	 ParSpMatVec=0.0081	 speedup=12.3054
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1180	 ParSpMatVec=0.0450	 speedup=2.6246
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1180	 ParSpMatVec=0.0129	 speedup=9.1568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1180	 ParSpMatVec=0.0288	 speedup=4.0979
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1180	 ParSpMatVec=0.0128	 speedup=9.2386
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1180	 ParSpMatVec=0.0140	 speedup=8.4302

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0469	 ParSpMatVec=0.0318	 speedup=1.4758
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0469	 ParSpMatVec=0.0124	 speedup=3.7825
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0469	 ParSpMatVec=0.0148	 speedup=3.1685
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0469	 ParSpMatVec=0.0112	 speedup=4.1941
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0469	 ParSpMatVec=0.0147	 speedup=3.1920

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0278	 ParSpMatVec=0.0261	 speedup=1.0636
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0278	 ParSpMatVec=0.0026	 speedup=10.6155
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0278	 ParSpMatVec=0.0029	 speedup=9.5538
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0278	 ParSpMatVec=0.0023	 speedup=12.1282
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0278	 ParSpMatVec=0.0014	 speedup=19.3631

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0083	 ParSpMatVec=0.0464	 speedup=0.1787
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0083	 ParSpMatVec=0.0040	 speedup=2.0699
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0083	 ParSpMatVec=0.0021	 speedup=3.8695
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0083	 ParSpMatVec=0.0025	 speedup=3.3277
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0083	 ParSpMatVec=0.0032	 speedup=2.6162

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0519	 ParSpMatVec=0.0514	 speedup=1.0103
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0519	 ParSpMatVec=0.0040	 speedup=12.9826
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0519	 ParSpMatVec=0.0022	 speedup=23.8576
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0519	 ParSpMatVec=0.0044	 speedup=11.7721
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0519	 ParSpMatVec=0.0028	 speedup=18.2426

INFO: ParSpMatVec tests passed

>>> End of log
