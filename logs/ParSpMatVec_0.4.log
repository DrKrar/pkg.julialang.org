>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.1
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.9392929077148438 GB (1190.828125 MB free)
Uptime: 14084.0 sec
Load Avg:  1.0302734375  1.0556640625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     651334 s       3655 s      56524 s     559860 s         29 s
#2  3500 MHz     408213 s       4658 s      50357 s     902966 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.2
 - SHA                           0.2.1
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1134	 ParSpMatVec=0.0235	 speedup=4.8178
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1134	 ParSpMatVec=0.0090	 speedup=12.5505
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1134	 ParSpMatVec=0.0106	 speedup=10.7068
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1134	 ParSpMatVec=0.0080	 speedup=14.2480
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1134	 ParSpMatVec=0.0074	 speedup=15.3343
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1292	 ParSpMatVec=0.0388	 speedup=3.3345
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1292	 ParSpMatVec=0.0127	 speedup=10.1681
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1292	 ParSpMatVec=0.0214	 speedup=6.0414
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1292	 ParSpMatVec=0.0167	 speedup=7.7593
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1292	 ParSpMatVec=0.0150	 speedup=8.6241

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0458	 ParSpMatVec=0.0324	 speedup=1.4160
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0458	 ParSpMatVec=0.0136	 speedup=3.3697
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0458	 ParSpMatVec=0.0175	 speedup=2.6139
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0458	 ParSpMatVec=0.0137	 speedup=3.3565
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0458	 ParSpMatVec=0.0128	 speedup=3.5789

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0460	 ParSpMatVec=0.0643	 speedup=0.7154
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0460	 ParSpMatVec=0.0020	 speedup=22.9470
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0460	 ParSpMatVec=0.0034	 speedup=13.5729
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0460	 ParSpMatVec=0.0013	 speedup=35.1856
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0460	 ParSpMatVec=0.0041	 speedup=11.3007

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0077	 ParSpMatVec=0.0306	 speedup=0.2514
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0077	 ParSpMatVec=0.0038	 speedup=2.0296
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0077	 ParSpMatVec=0.0021	 speedup=3.6348
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0077	 ParSpMatVec=0.0038	 speedup=2.0143
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0077	 ParSpMatVec=0.0038	 speedup=2.0383

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0487	 ParSpMatVec=0.0478	 speedup=1.0187
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0487	 ParSpMatVec=0.0043	 speedup=11.2897
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0487	 ParSpMatVec=0.0047	 speedup=10.2481
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0487	 ParSpMatVec=0.0035	 speedup=13.7635
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0487	 ParSpMatVec=0.0022	 speedup=21.7375

INFO: ParSpMatVec tests passed

>>> End of log
