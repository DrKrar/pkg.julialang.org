>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1068	 ParSpMatVec=0.0238	 speedup=4.4782
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1068	 ParSpMatVec=0.0095	 speedup=11.2931
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1068	 ParSpMatVec=0.0152	 speedup=7.0100
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1068	 ParSpMatVec=0.0091	 speedup=11.7871
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1068	 ParSpMatVec=0.0092	 speedup=11.5726
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0913	 ParSpMatVec=0.0248	 speedup=3.6771
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0913	 ParSpMatVec=0.0125	 speedup=7.2771
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0913	 ParSpMatVec=0.0109	 speedup=8.3433
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0913	 ParSpMatVec=0.0126	 speedup=7.2543
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0913	 ParSpMatVec=0.0150	 speedup=6.0839

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0462	 ParSpMatVec=0.0277	 speedup=1.6689
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0462	 ParSpMatVec=0.0128	 speedup=3.6064
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0462	 ParSpMatVec=0.0155	 speedup=2.9880
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0462	 ParSpMatVec=0.0142	 speedup=3.2486
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0462	 ParSpMatVec=0.0121	 speedup=3.8129

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0342	 ParSpMatVec=0.0240	 speedup=1.4210
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0342	 ParSpMatVec=0.0024	 speedup=14.3964
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0342	 ParSpMatVec=0.0025	 speedup=13.7075
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0342	 ParSpMatVec=0.0342	 speedup=0.9997
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0342	 ParSpMatVec=0.0027	 speedup=12.7445

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0074	 ParSpMatVec=0.0455	 speedup=0.1616
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0074	 ParSpMatVec=0.0044	 speedup=1.6687
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0074	 ParSpMatVec=0.0022	 speedup=3.3284
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0074	 ParSpMatVec=0.0049	 speedup=1.4890
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0074	 ParSpMatVec=0.0029	 speedup=2.5677

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0354	 ParSpMatVec=0.0484	 speedup=0.7321
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0354	 ParSpMatVec=0.0040	 speedup=8.8223
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0354	 ParSpMatVec=0.0021	 speedup=16.7760
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0354	 ParSpMatVec=0.0034	 speedup=10.4548
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0354	 ParSpMatVec=0.0031	 speedup=11.4838

INFO: ParSpMatVec tests passed

>>> End of log
