>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0782	 ParSpMatVec=0.0173	 speedup=4.5128
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0782	 ParSpMatVec=0.0095	 speedup=8.2232
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0782	 ParSpMatVec=0.0105	 speedup=7.4327
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0782	 ParSpMatVec=0.0083	 speedup=9.3901
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0782	 ParSpMatVec=0.0081	 speedup=9.6821
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1206	 ParSpMatVec=0.0429	 speedup=2.8129
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1206	 ParSpMatVec=0.0131	 speedup=9.2199
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1206	 ParSpMatVec=0.0153	 speedup=7.8628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1206	 ParSpMatVec=0.0150	 speedup=8.0587
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1206	 ParSpMatVec=0.0160	 speedup=7.5148

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0476	 ParSpMatVec=0.0340	 speedup=1.3994
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0476	 ParSpMatVec=0.0129	 speedup=3.6894
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0476	 ParSpMatVec=0.0146	 speedup=3.2550
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0476	 ParSpMatVec=0.0124	 speedup=3.8272
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0476	 ParSpMatVec=0.0135	 speedup=3.5347

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0345	 ParSpMatVec=0.0454	 speedup=0.7598
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0345	 ParSpMatVec=0.0027	 speedup=12.9915
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0345	 ParSpMatVec=0.0024	 speedup=14.2259
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0345	 ParSpMatVec=0.0018	 speedup=19.2423
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0345	 ParSpMatVec=0.0017	 speedup=20.8332

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0079	 ParSpMatVec=0.0485	 speedup=0.1627
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0079	 ParSpMatVec=0.0043	 speedup=1.8445
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0079	 ParSpMatVec=0.0021	 speedup=3.7284
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0079	 ParSpMatVec=0.0026	 speedup=3.0167
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0079	 ParSpMatVec=0.0027	 speedup=2.9311

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0486	 ParSpMatVec=0.0447	 speedup=1.0874
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0486	 ParSpMatVec=0.0044	 speedup=10.9353
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0486	 ParSpMatVec=0.0044	 speedup=11.1700
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0486	 ParSpMatVec=0.0038	 speedup=12.6969
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0486	 ParSpMatVec=0.0030	 speedup=16.2176

INFO: ParSpMatVec tests passed

>>> End of log
