>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1294	 ParSpMatVec=0.0257	 speedup=5.0357
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1294	 ParSpMatVec=0.0088	 speedup=14.7394
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1294	 ParSpMatVec=0.0125	 speedup=10.3876
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1294	 ParSpMatVec=0.0114	 speedup=11.3225
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1294	 ParSpMatVec=0.0328	 speedup=3.9415
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1204	 ParSpMatVec=0.0457	 speedup=2.6328
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1204	 ParSpMatVec=0.0128	 speedup=9.3774
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1204	 ParSpMatVec=0.0083	 speedup=14.5698
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1204	 ParSpMatVec=0.0096	 speedup=12.4820
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1204	 ParSpMatVec=0.0110	 speedup=10.8947

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0476	 ParSpMatVec=0.0301	 speedup=1.5804
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0476	 ParSpMatVec=0.0110	 speedup=4.3237
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0476	 ParSpMatVec=0.0075	 speedup=6.3425
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0476	 ParSpMatVec=0.0085	 speedup=5.6383
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0476	 ParSpMatVec=0.0083	 speedup=5.7572

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0443	 ParSpMatVec=0.0247	 speedup=1.7941
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0443	 ParSpMatVec=0.0023	 speedup=19.6653
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0443	 ParSpMatVec=0.0012	 speedup=37.2826
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0443	 ParSpMatVec=0.0014	 speedup=31.8410
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0443	 ParSpMatVec=0.0016	 speedup=28.4258

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0073	 ParSpMatVec=0.0263	 speedup=0.2762
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0073	 ParSpMatVec=0.0031	 speedup=2.3601
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0073	 ParSpMatVec=0.0018	 speedup=4.0288
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0073	 ParSpMatVec=0.0019	 speedup=3.7812
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0073	 ParSpMatVec=0.0037	 speedup=1.9511

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0498	 ParSpMatVec=0.0493	 speedup=1.0099
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0498	 ParSpMatVec=0.0044	 speedup=11.3680
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0498	 ParSpMatVec=0.0025	 speedup=20.0194
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0498	 ParSpMatVec=0.0028	 speedup=17.7516
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0498	 ParSpMatVec=0.0028	 speedup=17.5808

INFO: ParSpMatVec tests passed

>>> End of log
