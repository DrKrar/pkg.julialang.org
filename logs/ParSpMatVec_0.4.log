>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1300	 ParSpMatVec=0.0204	 speedup=6.3822
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1300	 ParSpMatVec=0.0080	 speedup=16.3124
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1300	 ParSpMatVec=0.0117	 speedup=11.0748
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1300	 ParSpMatVec=0.0095	 speedup=13.7151
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1300	 ParSpMatVec=0.0095	 speedup=13.7536
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1210	 ParSpMatVec=0.0455	 speedup=2.6614
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1210	 ParSpMatVec=0.0097	 speedup=12.4950
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1210	 ParSpMatVec=0.0135	 speedup=8.9668
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1210	 ParSpMatVec=0.0129	 speedup=9.4074
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1210	 ParSpMatVec=0.0169	 speedup=7.1444

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0480	 ParSpMatVec=0.0337	 speedup=1.4244
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0480	 ParSpMatVec=0.0137	 speedup=3.5027
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0480	 ParSpMatVec=0.0145	 speedup=3.3106
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0480	 ParSpMatVec=0.0134	 speedup=3.5914
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0480	 ParSpMatVec=0.0131	 speedup=3.6675

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0423	 ParSpMatVec=0.0389	 speedup=1.0882
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0423	 ParSpMatVec=0.0027	 speedup=15.8758
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0423	 ParSpMatVec=0.0025	 speedup=16.6347
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0423	 ParSpMatVec=0.0021	 speedup=20.1366
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0423	 ParSpMatVec=0.0028	 speedup=15.0590

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0440	 speedup=0.1850
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0043	 speedup=1.9111
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0027	 speedup=3.0454
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0024	 speedup=3.3644
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0027	 speedup=2.9902

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0481	 ParSpMatVec=0.0482	 speedup=0.9969
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0481	 ParSpMatVec=0.0039	 speedup=12.2060
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0481	 ParSpMatVec=0.0019	 speedup=25.0918
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0481	 ParSpMatVec=0.0058	 speedup=8.3584
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0481	 ParSpMatVec=0.0024	 speedup=19.7020

INFO: ParSpMatVec tests passed

>>> End of log
