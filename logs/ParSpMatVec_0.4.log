>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0901	 ParSpMatVec=0.0236	 speedup=3.8241
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0901	 ParSpMatVec=0.0064	 speedup=14.1497
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0901	 ParSpMatVec=0.0088	 speedup=10.2012
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0901	 ParSpMatVec=0.0053	 speedup=16.9543
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0901	 ParSpMatVec=0.0074	 speedup=12.2278
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1406	 ParSpMatVec=0.0412	 speedup=3.4170
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1406	 ParSpMatVec=0.0143	 speedup=9.8235
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1406	 ParSpMatVec=0.0082	 speedup=17.1735
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1406	 ParSpMatVec=0.0135	 speedup=10.4493
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1406	 ParSpMatVec=0.0138	 speedup=10.2189

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0565	 ParSpMatVec=0.0330	 speedup=1.7104
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0565	 ParSpMatVec=0.0139	 speedup=4.0709
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0565	 ParSpMatVec=0.0115	 speedup=4.9292
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0565	 ParSpMatVec=0.0112	 speedup=5.0363
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0565	 ParSpMatVec=0.0131	 speedup=4.3026

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0437	 ParSpMatVec=0.0397	 speedup=1.0997
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0437	 ParSpMatVec=0.0025	 speedup=17.5456
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0437	 ParSpMatVec=0.0016	 speedup=27.7308
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0437	 ParSpMatVec=0.0015	 speedup=29.3336
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0437	 ParSpMatVec=0.0016	 speedup=27.2250

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0087	 ParSpMatVec=0.0412	 speedup=0.2105
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0087	 ParSpMatVec=0.0043	 speedup=1.9970
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0087	 ParSpMatVec=0.0020	 speedup=4.2976
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0087	 ParSpMatVec=0.0049	 speedup=1.7655
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0087	 ParSpMatVec=0.0030	 speedup=2.9092

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0555	 ParSpMatVec=0.0430	 speedup=1.2884
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0555	 ParSpMatVec=0.0042	 speedup=13.0597
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0555	 ParSpMatVec=0.0028	 speedup=19.6654
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0555	 ParSpMatVec=0.0037	 speedup=15.1719
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0555	 ParSpMatVec=0.0030	 speedup=18.2804

INFO: ParSpMatVec tests passed

>>> End of log
