>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0924	 ParSpMatVec=0.0276	 speedup=3.3485
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0924	 ParSpMatVec=0.0083	 speedup=11.1668
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0924	 ParSpMatVec=0.0120	 speedup=7.6739
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0924	 ParSpMatVec=0.0095	 speedup=9.7690
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0924	 ParSpMatVec=0.0070	 speedup=13.1822
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0831	 ParSpMatVec=0.0265	 speedup=3.1373
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0831	 ParSpMatVec=0.0125	 speedup=6.6703
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0831	 ParSpMatVec=0.0154	 speedup=5.3989
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0831	 ParSpMatVec=0.0129	 speedup=6.4459
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0831	 ParSpMatVec=0.0164	 speedup=5.0563

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0484	 ParSpMatVec=0.0311	 speedup=1.5580
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0484	 ParSpMatVec=0.0100	 speedup=4.8389
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0484	 ParSpMatVec=0.0139	 speedup=3.4854
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0484	 ParSpMatVec=0.0115	 speedup=4.2012
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0484	 ParSpMatVec=0.0102	 speedup=4.7518

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0461	 ParSpMatVec=0.0357	 speedup=1.2906
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0461	 ParSpMatVec=0.0027	 speedup=17.2806
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0461	 ParSpMatVec=0.0026	 speedup=17.6523
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0461	 ParSpMatVec=0.0022	 speedup=21.0688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0461	 ParSpMatVec=0.0021	 speedup=22.2333

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0086	 ParSpMatVec=0.0440	 speedup=0.1959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0086	 ParSpMatVec=0.0042	 speedup=2.0341
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0086	 ParSpMatVec=0.0053	 speedup=1.6320
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0086	 ParSpMatVec=0.0033	 speedup=2.5828
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0086	 ParSpMatVec=0.0029	 speedup=2.9327

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0494	 ParSpMatVec=0.0238	 speedup=2.0785
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0494	 ParSpMatVec=0.0052	 speedup=9.4438
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0494	 ParSpMatVec=0.0021	 speedup=23.9321
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0494	 ParSpMatVec=0.0029	 speedup=17.3144
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0494	 ParSpMatVec=0.0030	 speedup=16.7291

INFO: ParSpMatVec tests passed

>>> End of log
