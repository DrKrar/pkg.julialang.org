>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1871	 ParSpMatVec=0.0249	 speedup=7.5233
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1871	 ParSpMatVec=0.0112	 speedup=16.6939
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1871	 ParSpMatVec=0.0135	 speedup=13.8231
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1871	 ParSpMatVec=0.0123	 speedup=15.2002
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1871	 ParSpMatVec=0.0065	 speedup=28.9792
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0758	 ParSpMatVec=0.0425	 speedup=1.7831
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0758	 ParSpMatVec=0.0133	 speedup=5.7162
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0758	 ParSpMatVec=0.0151	 speedup=5.0051
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0758	 ParSpMatVec=0.0126	 speedup=6.0372
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0758	 ParSpMatVec=0.0144	 speedup=5.2711

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0472	 ParSpMatVec=0.0319	 speedup=1.4802
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0472	 ParSpMatVec=0.0136	 speedup=3.4703
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0472	 ParSpMatVec=0.0152	 speedup=3.1166
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0472	 ParSpMatVec=0.0134	 speedup=3.5214
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0472	 ParSpMatVec=0.0156	 speedup=3.0238

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0426	 ParSpMatVec=0.0423	 speedup=1.0072
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0426	 ParSpMatVec=0.0024	 speedup=17.6340
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0426	 ParSpMatVec=0.0027	 speedup=15.9075
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0426	 ParSpMatVec=0.0017	 speedup=25.2832
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0426	 ParSpMatVec=0.0027	 speedup=15.5787

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0108	 ParSpMatVec=0.0429	 speedup=0.2509
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0108	 ParSpMatVec=0.0042	 speedup=2.5882
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0108	 ParSpMatVec=0.0053	 speedup=2.0428
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0108	 ParSpMatVec=0.0025	 speedup=4.3094
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0108	 ParSpMatVec=0.0023	 speedup=4.6483

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0325	 ParSpMatVec=0.0291	 speedup=1.1170
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0325	 ParSpMatVec=0.0031	 speedup=10.5477
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0325	 ParSpMatVec=0.0020	 speedup=16.6385
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0325	 ParSpMatVec=0.0028	 speedup=11.7997
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0325	 ParSpMatVec=0.0029	 speedup=11.0319

INFO: ParSpMatVec tests passed

>>> End of log
