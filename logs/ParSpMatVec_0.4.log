>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0850	 ParSpMatVec=0.0160	 speedup=5.3146
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0850	 ParSpMatVec=0.0086	 speedup=9.8362
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0850	 ParSpMatVec=0.0161	 speedup=5.2965
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0850	 ParSpMatVec=0.0133	 speedup=6.4001
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0850	 ParSpMatVec=0.0084	 speedup=10.1184
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0850	 ParSpMatVec=0.0279	 speedup=3.0479
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0850	 ParSpMatVec=0.0132	 speedup=6.4572
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0850	 ParSpMatVec=0.0147	 speedup=5.7896
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0850	 ParSpMatVec=0.0138	 speedup=6.1796
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0850	 ParSpMatVec=0.0148	 speedup=5.7599

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0503	 ParSpMatVec=0.0319	 speedup=1.5792
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0503	 ParSpMatVec=0.0141	 speedup=3.5787
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0503	 ParSpMatVec=0.0170	 speedup=2.9649
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0503	 ParSpMatVec=0.0141	 speedup=3.5792
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0503	 ParSpMatVec=0.0155	 speedup=3.2495

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0501	 ParSpMatVec=0.0453	 speedup=1.1056
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0501	 ParSpMatVec=0.0024	 speedup=20.5991
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0501	 ParSpMatVec=0.0024	 speedup=20.8975
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0501	 ParSpMatVec=0.0018	 speedup=27.3274
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0501	 ParSpMatVec=0.0018	 speedup=27.7698

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0096	 ParSpMatVec=0.0471	 speedup=0.2044
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0096	 ParSpMatVec=0.0045	 speedup=2.1321
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0096	 ParSpMatVec=0.0024	 speedup=4.0785
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0096	 ParSpMatVec=0.0031	 speedup=3.0925
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0096	 ParSpMatVec=0.0038	 speedup=2.5080

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0464	 ParSpMatVec=0.0484	 speedup=0.9601
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0464	 ParSpMatVec=0.0044	 speedup=10.4651
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0464	 ParSpMatVec=0.0023	 speedup=20.1734
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0464	 ParSpMatVec=0.0026	 speedup=17.9342
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0464	 ParSpMatVec=0.0021	 speedup=22.3716

INFO: ParSpMatVec tests passed

>>> End of log
