>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1405	 ParSpMatVec=0.0159	 speedup=8.8417
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1405	 ParSpMatVec=0.0062	 speedup=22.6853
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1405	 ParSpMatVec=0.0130	 speedup=10.7938
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1405	 ParSpMatVec=0.0103	 speedup=13.5829
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1405	 ParSpMatVec=0.0085	 speedup=16.4406
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1186	 ParSpMatVec=0.0348	 speedup=3.4101
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1186	 ParSpMatVec=0.0161	 speedup=7.3651
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1186	 ParSpMatVec=0.0169	 speedup=6.9997
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1186	 ParSpMatVec=0.0180	 speedup=6.5979
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1186	 ParSpMatVec=0.0136	 speedup=8.7430

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0544	 ParSpMatVec=0.0291	 speedup=1.8663
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0544	 ParSpMatVec=0.0128	 speedup=4.2476
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0544	 ParSpMatVec=0.0143	 speedup=3.7926
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0544	 ParSpMatVec=0.0166	 speedup=3.2724
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0544	 ParSpMatVec=0.0142	 speedup=3.8277

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0408	 ParSpMatVec=0.0231	 speedup=1.7698
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0408	 ParSpMatVec=0.0025	 speedup=16.3081
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0408	 ParSpMatVec=0.0023	 speedup=17.7187
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0408	 ParSpMatVec=0.0168	 speedup=2.4361
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0408	 ParSpMatVec=0.0058	 speedup=7.0174

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0072	 ParSpMatVec=0.0331	 speedup=0.2174
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0072	 ParSpMatVec=0.0041	 speedup=1.7612
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0072	 ParSpMatVec=0.0055	 speedup=1.3035
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0072	 ParSpMatVec=0.0024	 speedup=2.9762
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0072	 ParSpMatVec=0.0033	 speedup=2.1561

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0269	 ParSpMatVec=0.0284	 speedup=0.9480
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0269	 ParSpMatVec=0.0035	 speedup=7.7229
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0269	 ParSpMatVec=0.0039	 speedup=6.8296
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0269	 ParSpMatVec=0.0033	 speedup=8.1770
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0269	 ParSpMatVec=0.0023	 speedup=11.9633

INFO: ParSpMatVec tests passed

>>> End of log
