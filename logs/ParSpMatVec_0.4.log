>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0730	 ParSpMatVec=0.0252	 speedup=2.8980
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0730	 ParSpMatVec=0.0078	 speedup=9.3126
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0730	 ParSpMatVec=0.0109	 speedup=6.7115
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0730	 ParSpMatVec=0.0086	 speedup=8.4848
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0730	 ParSpMatVec=0.0075	 speedup=9.6980
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1225	 ParSpMatVec=0.0444	 speedup=2.7569
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1225	 ParSpMatVec=0.0134	 speedup=9.1467
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1225	 ParSpMatVec=0.0310	 speedup=3.9461
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1225	 ParSpMatVec=0.0127	 speedup=9.6831
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1225	 ParSpMatVec=0.0146	 speedup=8.3981

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0300	 ParSpMatVec=0.0187	 speedup=1.6029
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0300	 ParSpMatVec=0.0113	 speedup=2.6544
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0300	 ParSpMatVec=0.0150	 speedup=1.9980
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0300	 ParSpMatVec=0.0140	 speedup=2.1402
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0300	 ParSpMatVec=0.0138	 speedup=2.1814

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0544	 ParSpMatVec=0.0371	 speedup=1.4655
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0544	 ParSpMatVec=0.0023	 speedup=23.3404
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0544	 ParSpMatVec=0.0025	 speedup=21.5702
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0544	 ParSpMatVec=0.0021	 speedup=25.5449
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0544	 ParSpMatVec=0.0021	 speedup=25.4778

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0056	 ParSpMatVec=0.0275	 speedup=0.2032
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0056	 ParSpMatVec=0.0031	 speedup=1.8161
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0056	 ParSpMatVec=0.0017	 speedup=3.2231
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0056	 ParSpMatVec=0.0031	 speedup=1.8162
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0056	 ParSpMatVec=0.0024	 speedup=2.3412

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0265	 ParSpMatVec=0.0266	 speedup=0.9964
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0265	 ParSpMatVec=0.0043	 speedup=6.1840
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0265	 ParSpMatVec=0.0040	 speedup=6.5698
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0265	 ParSpMatVec=0.0034	 speedup=7.6936
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0265	 ParSpMatVec=0.0022	 speedup=11.9849

INFO: ParSpMatVec tests passed

>>> End of log
