>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.4
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0745	 ParSpMatVec=0.0155	 speedup=4.8149
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0745	 ParSpMatVec=0.0080	 speedup=9.3726
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0745	 ParSpMatVec=0.0118	 speedup=6.3155
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0745	 ParSpMatVec=0.0090	 speedup=8.2628
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0745	 ParSpMatVec=0.0112	 speedup=6.6776
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0978	 ParSpMatVec=0.0300	 speedup=3.2558
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0978	 ParSpMatVec=0.0132	 speedup=7.3788
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0978	 ParSpMatVec=0.0136	 speedup=7.2123
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0978	 ParSpMatVec=0.0112	 speedup=8.6933
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0978	 ParSpMatVec=0.0139	 speedup=7.0096

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0440	 ParSpMatVec=0.0199	 speedup=2.2139
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0440	 ParSpMatVec=0.0128	 speedup=3.4440
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0440	 ParSpMatVec=0.0153	 speedup=2.8798
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0440	 ParSpMatVec=0.0162	 speedup=2.7225
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0440	 ParSpMatVec=0.0152	 speedup=2.8925

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0480	 ParSpMatVec=0.0435	 speedup=1.1057
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0480	 ParSpMatVec=0.0025	 speedup=19.4258
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0480	 ParSpMatVec=0.0024	 speedup=19.9893
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0480	 ParSpMatVec=0.0019	 speedup=25.3804
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0480	 ParSpMatVec=0.0018	 speedup=26.6785

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0116	 ParSpMatVec=0.0450	 speedup=0.2576
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0116	 ParSpMatVec=0.0043	 speedup=2.6750
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0116	 ParSpMatVec=0.0016	 speedup=7.2956
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0116	 ParSpMatVec=0.0024	 speedup=4.7774
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0116	 ParSpMatVec=0.0027	 speedup=4.3647

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0454	 ParSpMatVec=0.0463	 speedup=0.9801
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0454	 ParSpMatVec=0.0034	 speedup=13.1657
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0454	 ParSpMatVec=0.0017	 speedup=27.1006
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0454	 ParSpMatVec=0.0032	 speedup=14.0818
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0454	 ParSpMatVec=0.0025	 speedup=18.4686

INFO: ParSpMatVec tests passed

>>> End of log
