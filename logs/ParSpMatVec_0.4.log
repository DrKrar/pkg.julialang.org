>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.7
Commit ae26b25 (2016-09-18 16:17 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1193.234375 MB free)
Uptime: 14352.0 sec
Load Avg:  0.96484375  0.97021484375  0.96484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     655082 s       6518 s      60062 s     569575 s         46 s
#2  3499 MHz     403056 s         81 s      52804 s     924238 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.8.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.9.5
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1247	 ParSpMatVec=0.0269	 speedup=4.6290
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1247	 ParSpMatVec=0.0096	 speedup=13.0200
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1247	 ParSpMatVec=0.0109	 speedup=11.3897
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1247	 ParSpMatVec=0.0130	 speedup=9.5719
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1247	 ParSpMatVec=0.0111	 speedup=11.2199
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1236	 ParSpMatVec=0.0385	 speedup=3.2095
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1236	 ParSpMatVec=0.0135	 speedup=9.1344
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1236	 ParSpMatVec=0.0199	 speedup=6.2153
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1236	 ParSpMatVec=0.0140	 speedup=8.8410
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1236	 ParSpMatVec=0.0130	 speedup=9.4992

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0412	 ParSpMatVec=0.0249	 speedup=1.6530
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0412	 ParSpMatVec=0.0132	 speedup=3.1105
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0412	 ParSpMatVec=0.0147	 speedup=2.7966
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0412	 ParSpMatVec=0.0165	 speedup=2.4912
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0412	 ParSpMatVec=0.0178	 speedup=2.3200

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0429	 ParSpMatVec=0.0858	 speedup=0.5003
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0429	 ParSpMatVec=0.0028	 speedup=15.1155
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0429	 ParSpMatVec=0.0351	 speedup=1.2226
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0429	 ParSpMatVec=0.0022	 speedup=19.5567
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0429	 ParSpMatVec=0.0038	 speedup=11.2589

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0093	 ParSpMatVec=0.0418	 speedup=0.2215
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0093	 ParSpMatVec=0.0040	 speedup=2.3400
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0093	 ParSpMatVec=0.0042	 speedup=2.1843
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0093	 ParSpMatVec=0.0039	 speedup=2.3877
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0093	 ParSpMatVec=0.0059	 speedup=1.5588

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0488	 ParSpMatVec=0.0285	 speedup=1.7101
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0488	 ParSpMatVec=0.0035	 speedup=14.0339
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0488	 ParSpMatVec=0.0016	 speedup=30.8184
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0488	 ParSpMatVec=0.0035	 speedup=13.8257
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0488	 ParSpMatVec=0.0045	 speedup=10.7785

INFO: ParSpMatVec tests passed

>>> End of log
