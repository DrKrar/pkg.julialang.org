>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0928	 ParSpMatVec=0.0286	 speedup=3.2419
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0928	 ParSpMatVec=0.0086	 speedup=10.7737
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0928	 ParSpMatVec=0.0095	 speedup=9.7675
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0928	 ParSpMatVec=0.0074	 speedup=12.5236
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0928	 ParSpMatVec=0.0069	 speedup=13.4026
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1313	 ParSpMatVec=0.0448	 speedup=2.9307
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1313	 ParSpMatVec=0.0133	 speedup=9.8616
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1313	 ParSpMatVec=0.0087	 speedup=15.1350
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1313	 ParSpMatVec=0.0109	 speedup=12.0764
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1313	 ParSpMatVec=0.0150	 speedup=8.7695

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0443	 ParSpMatVec=0.0303	 speedup=1.4637
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0443	 ParSpMatVec=0.0132	 speedup=3.3510
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0443	 ParSpMatVec=0.0154	 speedup=2.8785
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0443	 ParSpMatVec=0.0126	 speedup=3.5013
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0443	 ParSpMatVec=0.0132	 speedup=3.3451

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0418	 ParSpMatVec=0.0233	 speedup=1.7908
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0418	 ParSpMatVec=0.0016	 speedup=26.2404
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0418	 ParSpMatVec=0.0017	 speedup=24.0924
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0418	 ParSpMatVec=0.0013	 speedup=31.8760
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0418	 ParSpMatVec=0.0014	 speedup=29.1293

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0058	 ParSpMatVec=0.0428	 speedup=0.1352
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0058	 ParSpMatVec=0.0038	 speedup=1.5180
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0058	 ParSpMatVec=0.0022	 speedup=2.6163
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0058	 ParSpMatVec=0.0031	 speedup=1.8959
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0058	 ParSpMatVec=0.0032	 speedup=1.8156

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0336	 ParSpMatVec=0.0255	 speedup=1.3179
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0336	 ParSpMatVec=0.0028	 speedup=12.0688
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0336	 ParSpMatVec=0.0016	 speedup=21.6095
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0336	 ParSpMatVec=0.0024	 speedup=14.2759
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0336	 ParSpMatVec=0.0023	 speedup=14.7347

INFO: ParSpMatVec tests passed

>>> End of log
