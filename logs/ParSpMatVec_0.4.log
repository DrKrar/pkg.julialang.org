>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0757	 ParSpMatVec=0.0157	 speedup=4.8196
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0757	 ParSpMatVec=0.0077	 speedup=9.8777
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0757	 ParSpMatVec=0.0120	 speedup=6.3208
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0757	 ParSpMatVec=0.0076	 speedup=9.9450
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0757	 ParSpMatVec=0.0099	 speedup=7.6878
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0784	 ParSpMatVec=0.0287	 speedup=2.7327
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0784	 ParSpMatVec=0.0098	 speedup=7.9735
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0784	 ParSpMatVec=0.0135	 speedup=5.8107
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0784	 ParSpMatVec=0.0131	 speedup=5.9682
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0784	 ParSpMatVec=0.0136	 speedup=5.7638

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0462	 ParSpMatVec=0.0282	 speedup=1.6410
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0462	 ParSpMatVec=0.0134	 speedup=3.4634
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0462	 ParSpMatVec=0.0142	 speedup=3.2574
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0462	 ParSpMatVec=0.0152	 speedup=3.0496
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0462	 ParSpMatVec=0.0131	 speedup=3.5187

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0403	 ParSpMatVec=0.0278	 speedup=1.4466
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0403	 ParSpMatVec=0.0018	 speedup=22.6970
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0403	 ParSpMatVec=0.0018	 speedup=22.3918
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0403	 ParSpMatVec=0.0008	 speedup=51.5666
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0403	 ParSpMatVec=0.0020	 speedup=19.6670

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0440	 speedup=0.1729
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0036	 speedup=2.0889
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0018	 speedup=4.1990
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0022	 speedup=3.4533
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0023	 speedup=3.3498

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0473	 ParSpMatVec=0.0427	 speedup=1.1079
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0473	 ParSpMatVec=0.0040	 speedup=11.7717
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0473	 ParSpMatVec=0.0036	 speedup=13.2743
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0473	 ParSpMatVec=0.0025	 speedup=18.5718
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0473	 ParSpMatVec=0.0023	 speedup=20.6381

INFO: ParSpMatVec tests passed

>>> End of log
