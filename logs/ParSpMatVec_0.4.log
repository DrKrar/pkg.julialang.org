>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParSpMatVec
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1407	 ParSpMatVec=0.0233	 speedup=6.0366
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1407	 ParSpMatVec=0.0082	 speedup=17.2304
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1407	 ParSpMatVec=0.0123	 speedup=11.4331
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1407	 ParSpMatVec=0.0105	 speedup=13.4603
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1407	 ParSpMatVec=0.0103	 speedup=13.7113
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1292	 ParSpMatVec=0.0440	 speedup=2.9337
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1292	 ParSpMatVec=0.0135	 speedup=9.5684
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1292	 ParSpMatVec=0.0149	 speedup=8.6542
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1292	 ParSpMatVec=0.0129	 speedup=10.0241
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1292	 ParSpMatVec=0.0163	 speedup=7.9490

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0291	 ParSpMatVec=0.0186	 speedup=1.5600
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0291	 ParSpMatVec=0.0102	 speedup=2.8622
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0291	 ParSpMatVec=0.0126	 speedup=2.3098
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0291	 ParSpMatVec=0.0144	 speedup=2.0193
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0291	 ParSpMatVec=0.0116	 speedup=2.5022

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0278	 ParSpMatVec=0.0241	 speedup=1.1499
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0278	 ParSpMatVec=0.0026	 speedup=10.8216
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0278	 ParSpMatVec=0.0026	 speedup=10.5216
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0278	 ParSpMatVec=0.0018	 speedup=15.3733
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0278	 ParSpMatVec=0.0016	 speedup=16.9801

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0071	 ParSpMatVec=0.0256	 speedup=0.2756
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0071	 ParSpMatVec=0.0032	 speedup=2.2267
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0071	 ParSpMatVec=0.0031	 speedup=2.2401
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0071	 ParSpMatVec=0.0030	 speedup=2.3538
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0071	 ParSpMatVec=0.0027	 speedup=2.6604

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0270	 ParSpMatVec=0.0273	 speedup=0.9892
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0270	 ParSpMatVec=0.0030	 speedup=8.8969
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0270	 ParSpMatVec=0.0028	 speedup=9.4727
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0270	 ParSpMatVec=0.0039	 speedup=6.9305
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0270	 ParSpMatVec=0.0035	 speedup=7.6228

INFO: ParSpMatVec tests passed

>>> End of log
