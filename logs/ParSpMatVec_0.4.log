>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0936	 ParSpMatVec=0.0170	 speedup=5.4927
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0936	 ParSpMatVec=0.0088	 speedup=10.6867
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0936	 ParSpMatVec=0.0114	 speedup=8.2414
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0936	 ParSpMatVec=0.0107	 speedup=8.7742
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0936	 ParSpMatVec=0.0104	 speedup=8.9757
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1156	 ParSpMatVec=0.0379	 speedup=3.0467
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1156	 ParSpMatVec=0.0123	 speedup=9.4041
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1156	 ParSpMatVec=0.0160	 speedup=7.2351
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1156	 ParSpMatVec=0.0126	 speedup=9.1775
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1156	 ParSpMatVec=0.0158	 speedup=7.3109

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0458	 ParSpMatVec=0.0336	 speedup=1.3627
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0458	 ParSpMatVec=0.0131	 speedup=3.5073
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0458	 ParSpMatVec=0.0124	 speedup=3.6803
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0458	 ParSpMatVec=0.0110	 speedup=4.1751
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0458	 ParSpMatVec=0.0135	 speedup=3.3985

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0271	 ParSpMatVec=0.0246	 speedup=1.1008
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0271	 ParSpMatVec=0.0018	 speedup=15.2985
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0271	 ParSpMatVec=0.0019	 speedup=14.5253
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0271	 ParSpMatVec=0.0015	 speedup=17.8008
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0271	 ParSpMatVec=0.0016	 speedup=16.9014

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0084	 ParSpMatVec=0.0452	 speedup=0.1849
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0084	 ParSpMatVec=0.0043	 speedup=1.9464
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0084	 ParSpMatVec=0.0041	 speedup=2.0272
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0084	 ParSpMatVec=0.0037	 speedup=2.2471
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0084	 ParSpMatVec=0.0033	 speedup=2.5689

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0421	 ParSpMatVec=0.0466	 speedup=0.9040
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0421	 ParSpMatVec=0.0038	 speedup=11.1414
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0421	 ParSpMatVec=0.0024	 speedup=17.5845
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0421	 ParSpMatVec=0.0228	 speedup=1.8433
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0421	 ParSpMatVec=0.0025	 speedup=17.0449

INFO: ParSpMatVec tests passed

>>> End of log
