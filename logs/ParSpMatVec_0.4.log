>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1129	 ParSpMatVec=0.0152	 speedup=7.4314
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1129	 ParSpMatVec=0.0086	 speedup=13.1903
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1129	 ParSpMatVec=0.0126	 speedup=8.9685
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1129	 ParSpMatVec=0.0083	 speedup=13.6620
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1129	 ParSpMatVec=0.0074	 speedup=15.2079
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1064	 ParSpMatVec=0.0431	 speedup=2.4685
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1064	 ParSpMatVec=0.0124	 speedup=8.5567
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1064	 ParSpMatVec=0.0154	 speedup=6.8995
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1064	 ParSpMatVec=0.0134	 speedup=7.9391
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1064	 ParSpMatVec=0.0129	 speedup=8.2663

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0510	 ParSpMatVec=0.0279	 speedup=1.8304
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0510	 ParSpMatVec=0.0127	 speedup=4.0301
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0510	 ParSpMatVec=0.0152	 speedup=3.3648
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0510	 ParSpMatVec=0.0127	 speedup=4.0294
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0510	 ParSpMatVec=0.0137	 speedup=3.7235

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0423	 ParSpMatVec=0.0369	 speedup=1.1461
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0423	 ParSpMatVec=0.0028	 speedup=15.1212
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0423	 ParSpMatVec=0.0030	 speedup=14.0240
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0423	 ParSpMatVec=0.0019	 speedup=22.5660
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0423	 ParSpMatVec=0.0022	 speedup=19.4019

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0082	 ParSpMatVec=0.0491	 speedup=0.1664
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0082	 ParSpMatVec=0.0050	 speedup=1.6419
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0082	 ParSpMatVec=0.0023	 speedup=3.6293
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0082	 ParSpMatVec=0.0031	 speedup=2.6152
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0082	 ParSpMatVec=0.0027	 speedup=3.0111

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0539	 ParSpMatVec=0.0444	 speedup=1.2131
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0539	 ParSpMatVec=0.0036	 speedup=15.1685
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0539	 ParSpMatVec=0.0020	 speedup=26.4920
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0539	 ParSpMatVec=0.0026	 speedup=20.9261
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0539	 ParSpMatVec=0.0024	 speedup=22.7389

INFO: ParSpMatVec tests passed

>>> End of log
