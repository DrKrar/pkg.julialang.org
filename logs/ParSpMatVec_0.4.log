>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1256	 ParSpMatVec=0.0280	 speedup=4.4910
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1256	 ParSpMatVec=0.0093	 speedup=13.5665
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1256	 ParSpMatVec=0.0123	 speedup=10.1733
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1256	 ParSpMatVec=0.0095	 speedup=13.2151
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1256	 ParSpMatVec=0.0087	 speedup=14.4781
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0902	 ParSpMatVec=0.0422	 speedup=2.1396
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0902	 ParSpMatVec=0.0100	 speedup=8.9897
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0902	 ParSpMatVec=0.0105	 speedup=8.6265
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0902	 ParSpMatVec=0.0105	 speedup=8.6035
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0902	 ParSpMatVec=0.0107	 speedup=8.4282

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0478	 ParSpMatVec=0.0330	 speedup=1.4481
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0478	 ParSpMatVec=0.0119	 speedup=4.0360
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0478	 ParSpMatVec=0.0145	 speedup=3.3039
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0478	 ParSpMatVec=0.0148	 speedup=3.2358
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0478	 ParSpMatVec=0.0152	 speedup=3.1434

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0402	 ParSpMatVec=0.0424	 speedup=0.9488
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0402	 ParSpMatVec=0.0026	 speedup=15.5492
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0402	 ParSpMatVec=0.0019	 speedup=21.4231
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0402	 ParSpMatVec=0.0016	 speedup=24.6192
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0402	 ParSpMatVec=0.0016	 speedup=25.7385

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0087	 ParSpMatVec=0.0443	 speedup=0.1967
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0087	 ParSpMatVec=0.0038	 speedup=2.2827
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0087	 ParSpMatVec=0.0018	 speedup=4.7748
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0087	 ParSpMatVec=0.0022	 speedup=3.8906
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0087	 ParSpMatVec=0.0025	 speedup=3.4346

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0479	 ParSpMatVec=0.0503	 speedup=0.9517
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0479	 ParSpMatVec=0.0037	 speedup=12.8372
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0479	 ParSpMatVec=0.0029	 speedup=16.4104
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0479	 ParSpMatVec=0.0033	 speedup=14.6939
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0479	 ParSpMatVec=0.0025	 speedup=19.4745

INFO: ParSpMatVec tests passed

>>> End of log
