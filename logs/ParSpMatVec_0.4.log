>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1310	 ParSpMatVec=0.0274	 speedup=4.7842
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1310	 ParSpMatVec=0.0083	 speedup=15.7174
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1310	 ParSpMatVec=0.0092	 speedup=14.2566
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1310	 ParSpMatVec=0.0064	 speedup=20.5590
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1310	 ParSpMatVec=0.0107	 speedup=12.1983
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1105	 ParSpMatVec=0.0401	 speedup=2.7565
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1105	 ParSpMatVec=0.0139	 speedup=7.9568
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1105	 ParSpMatVec=0.0115	 speedup=9.5975
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1105	 ParSpMatVec=0.0103	 speedup=10.7408
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1105	 ParSpMatVec=0.0136	 speedup=8.1075

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0283	 ParSpMatVec=0.0192	 speedup=1.4771
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0283	 ParSpMatVec=0.0121	 speedup=2.3468
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0283	 ParSpMatVec=0.0100	 speedup=2.8401
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0283	 ParSpMatVec=0.0114	 speedup=2.4844
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0283	 ParSpMatVec=0.0116	 speedup=2.4314

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0326	 ParSpMatVec=0.0272	 speedup=1.2018
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0326	 ParSpMatVec=0.0012	 speedup=27.0835
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0326	 ParSpMatVec=0.0018	 speedup=18.2454
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0326	 ParSpMatVec=0.0016	 speedup=20.2015
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0326	 ParSpMatVec=0.0025	 speedup=13.1605

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0081	 ParSpMatVec=0.0497	 speedup=0.1632
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0081	 ParSpMatVec=0.0049	 speedup=1.6587
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0081	 ParSpMatVec=0.0027	 speedup=2.9581
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0081	 ParSpMatVec=0.0032	 speedup=2.5577
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0081	 ParSpMatVec=0.0023	 speedup=3.5208

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0510	 ParSpMatVec=0.0495	 speedup=1.0304
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0510	 ParSpMatVec=0.0039	 speedup=12.9179
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0510	 ParSpMatVec=0.0026	 speedup=19.5458
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0510	 ParSpMatVec=0.0030	 speedup=17.0009
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0510	 ParSpMatVec=0.0028	 speedup=17.8894

INFO: ParSpMatVec tests passed

>>> End of log
