>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1256	 ParSpMatVec=0.0264	 speedup=4.7600
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1256	 ParSpMatVec=0.0091	 speedup=13.7409
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1256	 ParSpMatVec=0.0098	 speedup=12.8283
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1256	 ParSpMatVec=0.0059	 speedup=21.4308
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1256	 ParSpMatVec=0.0061	 speedup=20.7438
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1123	 ParSpMatVec=0.0267	 speedup=4.2070
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1123	 ParSpMatVec=0.0119	 speedup=9.4602
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1123	 ParSpMatVec=0.0092	 speedup=12.1480
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1123	 ParSpMatVec=0.0090	 speedup=12.4593
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1123	 ParSpMatVec=0.0109	 speedup=10.3278

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0311	 ParSpMatVec=0.0296	 speedup=1.0499
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0311	 ParSpMatVec=0.0127	 speedup=2.4529
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0311	 ParSpMatVec=0.0077	 speedup=4.0084
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0311	 ParSpMatVec=0.0417	 speedup=0.7447
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0311	 ParSpMatVec=0.0096	 speedup=3.2220

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0374	 ParSpMatVec=0.0353	 speedup=1.0599
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0374	 ParSpMatVec=0.0024	 speedup=15.3433
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0374	 ParSpMatVec=0.0014	 speedup=25.8594
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0374	 ParSpMatVec=0.0020	 speedup=19.0258
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0374	 ParSpMatVec=0.0019	 speedup=19.8230

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0084	 ParSpMatVec=0.0419	 speedup=0.2009
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0084	 ParSpMatVec=0.0036	 speedup=2.3143
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0084	 ParSpMatVec=0.0039	 speedup=2.1489
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0084	 ParSpMatVec=0.0059	 speedup=1.4262
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0084	 ParSpMatVec=0.0058	 speedup=1.4417

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0325	 ParSpMatVec=0.0304	 speedup=1.0698
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0325	 ParSpMatVec=0.0030	 speedup=10.9980
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0325	 ParSpMatVec=0.0018	 speedup=17.7638
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0325	 ParSpMatVec=0.0023	 speedup=14.3107
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0325	 ParSpMatVec=0.0022	 speedup=14.6757

INFO: ParSpMatVec tests passed

>>> End of log
