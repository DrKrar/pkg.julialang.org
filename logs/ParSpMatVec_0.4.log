>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1327	 ParSpMatVec=0.0252	 speedup=5.2620
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1327	 ParSpMatVec=0.0136	 speedup=9.7843
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1327	 ParSpMatVec=0.0122	 speedup=10.8631
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1327	 ParSpMatVec=0.0118	 speedup=11.2846
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1327	 ParSpMatVec=0.0229	 speedup=5.8000
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1145	 ParSpMatVec=0.0250	 speedup=4.5873
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1145	 ParSpMatVec=0.0130	 speedup=8.8125
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1145	 ParSpMatVec=0.0143	 speedup=8.0180
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1145	 ParSpMatVec=0.0124	 speedup=9.2186
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1145	 ParSpMatVec=0.0129	 speedup=8.8659

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0304	 ParSpMatVec=0.0159	 speedup=1.9104
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0304	 ParSpMatVec=0.0127	 speedup=2.3883
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0304	 ParSpMatVec=0.0152	 speedup=2.0018
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0304	 ParSpMatVec=0.0133	 speedup=2.2887
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0304	 ParSpMatVec=0.0127	 speedup=2.3897

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0443	 ParSpMatVec=0.0381	 speedup=1.1641
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0443	 ParSpMatVec=0.0032	 speedup=13.8741
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0443	 ParSpMatVec=0.0021	 speedup=20.8184
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0443	 ParSpMatVec=0.0024	 speedup=18.2411
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0443	 ParSpMatVec=0.0019	 speedup=23.9245

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0076	 ParSpMatVec=0.0410	 speedup=0.1844
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0076	 ParSpMatVec=0.0036	 speedup=2.0763
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0076	 ParSpMatVec=0.0020	 speedup=3.8446
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0076	 ParSpMatVec=0.0028	 speedup=2.6864
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0076	 ParSpMatVec=0.0033	 speedup=2.3217

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0445	 ParSpMatVec=0.0458	 speedup=0.9720
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0445	 ParSpMatVec=0.0036	 speedup=12.1981
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0445	 ParSpMatVec=0.0024	 speedup=18.9353
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0445	 ParSpMatVec=0.0032	 speedup=13.7532
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0445	 ParSpMatVec=0.0026	 speedup=17.0086

INFO: ParSpMatVec tests passed

>>> End of log
