>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.3.21
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.1.2
INFO: Installing URIParser v0.1.3
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.5
Commit 2ac304d (2016-03-18 00:58 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1105	 ParSpMatVec=0.0255	 speedup=4.3430
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1105	 ParSpMatVec=0.0093	 speedup=11.9087
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1105	 ParSpMatVec=0.0088	 speedup=12.5445
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1105	 ParSpMatVec=0.0080	 speedup=13.7767
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1105	 ParSpMatVec=0.0080	 speedup=13.8817
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1100	 ParSpMatVec=0.0280	 speedup=3.9301
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1100	 ParSpMatVec=0.0123	 speedup=8.9514
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1100	 ParSpMatVec=0.0114	 speedup=9.6362
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1100	 ParSpMatVec=0.0099	 speedup=11.1557
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1100	 ParSpMatVec=0.0132	 speedup=8.3201

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0281	 ParSpMatVec=0.0289	 speedup=0.9742
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0281	 ParSpMatVec=0.0133	 speedup=2.1192
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0281	 ParSpMatVec=0.0084	 speedup=3.3328
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0281	 ParSpMatVec=0.0097	 speedup=2.9159
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0281	 ParSpMatVec=0.0103	 speedup=2.7330

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0270	 ParSpMatVec=0.0251	 speedup=1.0735
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0270	 ParSpMatVec=0.0023	 speedup=11.6202
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0270	 ParSpMatVec=0.0009	 speedup=31.6638
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0270	 ParSpMatVec=0.0017	 speedup=15.6137
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0270	 ParSpMatVec=0.0018	 speedup=14.8011

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0090	 ParSpMatVec=0.0427	 speedup=0.2098
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0090	 ParSpMatVec=0.0038	 speedup=2.3770
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0090	 ParSpMatVec=0.0018	 speedup=5.0146
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0090	 ParSpMatVec=0.0024	 speedup=3.7616
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0090	 ParSpMatVec=0.0024	 speedup=3.6826

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0391	 ParSpMatVec=0.0371	 speedup=1.0557
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0391	 ParSpMatVec=0.0025	 speedup=15.4619
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0391	 ParSpMatVec=0.0015	 speedup=25.5909
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0391	 ParSpMatVec=0.0020	 speedup=19.4890
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0391	 ParSpMatVec=0.0023	 speedup=17.0201

INFO: ParSpMatVec tests passed

>>> End of log
