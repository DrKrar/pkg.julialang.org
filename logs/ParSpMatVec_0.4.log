>>> 'Pkg.add("ParSpMatVec")' log
INFO: Cloning cache of ParSpMatVec from git://github.com/JuliaInv/ParSpMatVec.jl.git
INFO: Installing BinDeps v0.4.0
INFO: Installing ParSpMatVec v0.0.1
INFO: Installing SHA v0.2.0
INFO: Installing URIParser v0.1.5
INFO: Building ParSpMatVec
=== Building ParSpMatVec ===
depsdir  = /home/vagrant/.julia/v0.4/ParSpMatVec/deps
builddir = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/builds
srcdir   = /home/vagrant/.julia/v0.4/ParSpMatVec/deps/src
useIntel = false
creating build directory
fortran version
GNU Fortran (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4
Copyright (C) 2013 Free Software Foundation, Inc.

GNU Fortran comes with NO WARRANTY, to the extent permitted by law.
You may redistribute copies of GNU Fortran
under the terms of the GNU General Public License.
For more information about these matters, see the file named COPYING

INFO: Package database updated
INFO: Nothing to be done

>>> 'Pkg.test("ParSpMatVec")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1067.703125 MB free)
Uptime: 13496.0 sec
Load Avg:  1.0234375  0.9853515625  0.9921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3501 MHz     592015 s       5842 s      57825 s     528533 s         34 s
#2  3501 MHz     383816 s        791 s      49202 s     854309 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - ParSpMatVec                   0.0.1
4 additional packages:
 - BinDeps                       0.4.0
 - Compat                        0.8.6
 - SHA                           0.2.0
 - URIParser                     0.1.5
INFO: Testing ParSpMatVec
Real
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1252	 ParSpMatVec=0.0275	 speedup=4.5591
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1252	 ParSpMatVec=0.0091	 speedup=13.6969
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1252	 ParSpMatVec=0.0122	 speedup=10.2891
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1252	 ParSpMatVec=0.0074	 speedup=16.9869
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1252	 ParSpMatVec=0.0108	 speedup=11.6114
Complex Scalars, Real Matrix
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.1319	 ParSpMatVec=0.0480	 speedup=2.7449
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.1319	 ParSpMatVec=0.0134	 speedup=9.8785
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.1319	 ParSpMatVec=0.0159	 speedup=8.2968
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.1319	 ParSpMatVec=0.0127	 speedup=10.3721
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.1319	 ParSpMatVec=0.0147	 speedup=8.9472

Complex
y = beta*y + alpha * A*x
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0335	 ParSpMatVec=0.0184	 speedup=1.8234
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0335	 ParSpMatVec=0.0131	 speedup=2.5612
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0335	 ParSpMatVec=0.0153	 speedup=2.1894
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0335	 ParSpMatVec=0.0130	 speedup=2.5725
ParSpMatVec.A_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0335	 ParSpMatVec=0.0120	 speedup=2.7920

Real
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0281	 ParSpMatVec=0.0270	 speedup=1.0402
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0281	 ParSpMatVec=0.0015	 speedup=18.3136
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0281	 ParSpMatVec=0.0030	 speedup=9.3829
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0281	 ParSpMatVec=0.0025	 speedup=11.0952
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0281	 ParSpMatVec=0.0029	 speedup=9.5557

Complex Scalars, Real matrix
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0065	 ParSpMatVec=0.0287	 speedup=0.2270
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0065	 ParSpMatVec=0.0033	 speedup=1.9476
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0065	 ParSpMatVec=0.0026	 speedup=2.5476
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0065	 ParSpMatVec=0.0044	 speedup=1.4866
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0065	 ParSpMatVec=0.0051	 speedup=1.2767

Complex
y = beta*y + alpha * A'*x
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,0)
Base=0.0338	 ParSpMatVec=0.0288	 speedup=1.1706
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,1)
Base=0.0338	 ParSpMatVec=0.0032	 speedup=10.4012
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,2)
Base=0.0338	 ParSpMatVec=0.0032	 speedup=10.5258
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,3)
Base=0.0338	 ParSpMatVec=0.0020	 speedup=17.3003
ParSpMatVec.Ac_mul_B!( alpha, A, x, beta, y3,4)
Base=0.0338	 ParSpMatVec=0.0025	 speedup=13.7735

INFO: ParSpMatVec tests passed

>>> End of log
