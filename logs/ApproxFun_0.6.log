>>> 'Pkg.add("ApproxFun")' log
INFO: Cloning cache of ApproxFun from https://github.com/JuliaApproximation/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/JuliaMatrices/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of FixedSizeArrays from https://github.com/SimonDanisch/FixedSizeArrays.jl.git
INFO: Cloning cache of Measures from https://github.com/JuliaGraphics/Measures.jl.git
INFO: Cloning cache of PlotThemes from https://github.com/JuliaPlots/PlotThemes.jl.git
INFO: Cloning cache of PlotUtils from https://github.com/JuliaPlots/PlotUtils.jl.git
INFO: Cloning cache of Plots from https://github.com/tbreloff/Plots.jl.git
INFO: Cloning cache of Showoff from https://github.com/JuliaGraphics/Showoff.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/JuliaMatrices/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.4.1
INFO: Installing BandedMatrices v0.1.2
INFO: Installing Calculus v0.1.15
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing DualNumbers v0.2.3
INFO: Installing FastGaussQuadrature v0.1.0
INFO: Installing FastTransforms v0.0.7
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing Iterators v0.2.0
INFO: Installing Measures v0.0.3
INFO: Installing NaNMath v0.2.2
INFO: Installing PlotThemes v0.1.0
INFO: Installing PlotUtils v0.2.0
INFO: Installing Plots v0.10.2
INFO: Installing RecipesBase v0.1.0
INFO: Installing Reexport v0.0.3
INFO: Installing Showoff v0.0.7
INFO: Installing StatsBase v0.11.1
INFO: Installing ToeplitzMatrices v0.1.1
INFO: Building Plots
INFO: Cannot find deps/plotly-latest.min.js... downloading latest version.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 51 1872k   51  959k    0     0   597k      0  0:00:03  0:00:01  0:00:02  597k100 1872k  100 1872k    0     0  1016k      0  0:00:01  0:00:01 --:--:-- 1016k
INFO: Package database updated

>>> 'Pkg.test("ApproxFun")' log
Julia Version 0.6.0-dev.1836
Commit 1539061 (2017-01-01 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (319.953125 MB free)
Uptime: 2542.0 sec
Load Avg:  0.6953125  0.85986328125  0.82177734375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz      97858 s         58 s      22692 s     111205 s          8 s
#2  3500 MHz      65523 s         90 s      16971 s     162826 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ApproxFun                     0.4.1
 - JSON                          0.8.0
21 additional packages:
 - BandedMatrices                0.1.2
 - Calculus                      0.1.15
 - ColorTypes                    0.2.12
 - Colors                        0.6.9
 - Compat                        0.10.0
 - DualNumbers                   0.2.3
 - FastGaussQuadrature           0.1.0
 - FastTransforms                0.0.7
 - FixedPointNumbers             0.2.1
 - FixedSizeArrays               0.2.5
 - Iterators                     0.2.0
 - Measures                      0.0.3
 - NaNMath                       0.2.2
 - PlotThemes                    0.1.0
 - PlotUtils                     0.2.0
 - Plots                         0.10.2
 - RecipesBase                   0.1.0
 - Reexport                      0.0.3
 - Showoff                       0.0.7
 - StatsBase                     0.11.1
 - ToeplitzMatrices              0.1.1
INFO: Testing ApproxFun
Julia Version 0.6.0-dev.1836
Commit 1539061 (2017-01-01 02:10 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .\(...)".
Use "function Base.broadcast(::typeof(\), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .==(...)".
Use "function Base.broadcast(::typeof(==), ...)" instead.

WARNING: deprecated syntax "function .!=(...)".
Use "function Base.broadcast(::typeof(!=), ...)" instead.

WARNING: deprecated syntax "function .!=(...)".
Use "function Base.broadcast(::typeof(!=), ...)" instead.

WARNING: deprecated syntax "function .!=(...)".
Use "function Base.broadcast(::typeof(!=), ...)" instead.

WARNING: deprecated syntax "function .!=(...)".
Use "function Base.broadcast(::typeof(!=), ...)" instead.

WARNING: deprecated syntax "function .!=(...)".
Use "function Base.broadcast(::typeof(!=), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<(...)".
Use "function Base.broadcast(::typeof(<), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .<=(...)".
Use "function Base.broadcast(::typeof(<=), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>(...)".
Use "function Base.broadcast(::typeof(>), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .>=(...)".
Use "function Base.broadcast(::typeof(>=), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.
WARNING: Base.drop is deprecated.
  likely near /home/vagrant/.julia/v0.6/Showoff/src/Showoff.jl:6

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.
WARNING: `@vectorize_2arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_2arg`'ing function `f` and calling `f(arg1, arg2)`, call `f.(arg1,arg2)`. 
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_2arg(::ANY, ::ANY) at ./deprecated.jl:975
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:236
 [9] process_options(::Base.JLOptions) at ./client.jl:275
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/FastTransforms/src/specialfunctions.jl, in expression starting on line 27
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:236
 [9] process_options(::Base.JLOptions) at ./client.jl:275
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/FastTransforms/src/specialfunctions.jl, in expression starting on line 99
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] anonymous at ./<missing>:2
 [8] eval(::Module, ::Any) at ./boot.jl:236
 [9] process_options(::Base.JLOptions) at ./client.jl:275
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/FastTransforms/src/specialfunctions.jl, in expression starting on line 155

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/src/Domains/Ray.jl, in expression starting on line 85
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/src/Domains/Ray.jl, in expression starting on line 86
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/src/Domains/Ray.jl, in expression starting on line 87
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/src/Domains/Ray.jl, in expression starting on line 88

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .+(...)".
Use "function Base.broadcast(::typeof(+), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .-(...)".
Use "function Base.broadcast(::typeof(-), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .*(...)".
Use "function Base.broadcast(::typeof(*), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function ./(...)".
Use "function Base.broadcast(::typeof(/), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.

WARNING: deprecated syntax "function .^(...)".
Use "function Base.broadcast(::typeof(^), ...)" instead.
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl, in expression starting on line 676
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl, in expression starting on line 677
WARNING: `@vectorize_1arg` is deprecated in favor of compact broadcast syntax. Instead of `@vectorize_1arg`'ing function `f` and calling `f(arg)`, call `f.(arg)`.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] @vectorize_1arg(::ANY, ::ANY) at ./deprecated.jl:967
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] anonymous at ./<missing>:2
 [10] eval(::Module, ::Any) at ./boot.jl:236
 [11] process_options(::Base.JLOptions) at ./client.jl:275
 [12] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl, in expression starting on line 678
Helper tests
Domain tests
  3.915798 seconds (2.20 M allocations: 93.107 MB, 1.07% gc time)
Fun tests
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] zerocfsFun(::ApproxFun.##101#102{ApproxFun.##93#95,ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64},Int64}, ::ApproxFun.Chebyshev{ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Fun/constructors.jl:147
 [4] #Fun#112(::String, ::Type{T}, ::Function, ::ApproxFun.Chebyshev{ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Fun/constructors.jl:207
 [5] #Fun#116(::Array{Any,1}, ::Type{T}, ::Function, ::ApproxFun.Segment{Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Fun/constructors.jl:215
 [6] broadcast(::Base.#^, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::Int64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Fun/Fun.jl:308
 [7] norm(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::Int64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Fun/Fun.jl:363
 [8] norm(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Fun/Fun.jl:349
 [9] #testcalculus#952(::Bool, ::Function, ::ApproxFun.Chebyshev{ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/testing.jl:45
 [10] (::ApproxFun.#kw##testcalculus)(::Array{Any,1}, ::ApproxFun.#testcalculus, ::ApproxFun.Chebyshev{ApproxFun.Segment{Float64}}) at ./<missing>:0
 [11] testspace(::ApproxFun.Chebyshev{ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/testing.jl:53
 [12] macro expansion; at /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl:5 [inlined]
 [13] anonymous at ./<missing>:?
 [14] include_from_node1(::String) at ./loading.jl:532
 [15] include(::String) at ./sysimg.jl:14
 [16] include_from_node1(::String) at ./loading.jl:532
 [17] include(::String) at ./sysimg.jl:14
 [18] process_options(::Base.JLOptions) at ./client.jl:298
 [19] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 4
WARNING: exp{T <: Number}(x::AbstractArray{T}) is deprecated, use exp.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] exp(::Array{Float64,1}) at ./deprecated.jl:50
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 31
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 31
WARNING: cos{T <: Number}(x::AbstractArray{T}) is deprecated, use cos.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] cos(::Array{Float64,1}) at ./deprecated.jl:50
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 32
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] ApproxFun.ConcreteMultiplication{D<:ApproxFun.Space,S<:ApproxFun.Space,T}(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Chebyshev{ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/banded/Multiplication.jl:16
 [4] broadcast(::Base.#*, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/banded/Multiplication.jl:118
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 35
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] PruneOptions(::Array{Complex{Float64},1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:167
 [4] rootsunit_coeffs(::Array{Float64,1}, ::Float64, ::ApproxFun.ClenshawPlan{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:215
 [5] rootsunit_coeffs(::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:177
 [6] roots(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:104
 [7] broadcast(::Base.#/, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:77
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:298
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 39
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] PruneOptions(::Array{Complex{Float64},1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:169
 [4] rootsunit_coeffs(::Array{Float64,1}, ::Float64, ::ApproxFun.ClenshawPlan{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:215
 [5] rootsunit_coeffs(::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:177
 [6] roots(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:104
 [7] broadcast(::Base.#/, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:77
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:298
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 39
WARNING: max{T1 <: Real}(x::AbstractArray{T1},y::Real) is deprecated, use max.(x,y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] max(::Array{Float64,1}, ::Int64) at ./deprecated.jl:50
 [3] PruneOptions(::Array{Complex{Float64},1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:171
 [4] rootsunit_coeffs(::Array{Float64,1}, ::Float64, ::ApproxFun.ClenshawPlan{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:215
 [5] rootsunit_coeffs(::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:177
 [6] roots(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:104
 [7] broadcast(::Base.#/, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:77
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:298
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 39
WARNING: min{T1 <: Real}(x::AbstractArray{T1},y::Real) is deprecated, use min.(x,y) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] min(::Array{Float64,1}, ::Int64) at ./deprecated.jl:50
 [3] PruneOptions(::Array{Complex{Float64},1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:171
 [4] rootsunit_coeffs(::Array{Float64,1}, ::Float64, ::ApproxFun.ClenshawPlan{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:215
 [5] rootsunit_coeffs(::Array{Float64,1}, ::Float64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:177
 [6] roots(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/roots.jl:104
 [7] broadcast(::Base.#/, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:77
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:298
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 39
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Tuple{Float64,Float64}) at ./deprecated.jl:50
 [3] specialfunctionnormalizationpoint(::Base.#exp, ::ApproxFun.#real, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:286
 [4] exp(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:315
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 132
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Tuple{Float64,Float64}) at ./deprecated.jl:50
 [3] besselj(::Int64, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:453
 [4] include_from_node1(::String) at ./loading.jl:532
 [5] include(::String) at ./sysimg.jl:14
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] process_options(::Base.JLOptions) at ./client.jl:298
 [9] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 133
WARNING: maxabs(x) is deprecated, use maximum(abs,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] maxabs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] ApproxFun.ConcreteMultiplication{D<:ApproxFun.Space,S<:ApproxFun.Space,T}(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/banded/Multiplication.jl:16
 [4] ApproxFun.Multiplication{D,S,T}(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Spaces/Ultraspherical/UltrasphericalOperators.jl:38
 [5] *(::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}, ::ApproxFun.ConcreteDerivative{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Int64,Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/general/algebra.jl:492
 [6] * at ./operators.jl:273 [inlined]
 [7] besselj(::Int64, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:461
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] process_options(::Base.JLOptions) at ./client.jl:298
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 133
Error During Test
  Test threw an exception of type MethodError
  Expression: norm(besselj.(1,f) - besselj(1,f)) < 100 * eps()
  MethodError: Cannot `convert` an object of type Int64 to an object of type ApproxFun.Infinity{Bool}
  This may have arisen from a call to the constructor ApproxFun.Infinity{Bool}(...),
  since type constructors fall back to convert methods.
  Stacktrace:
   [1] mapfoldl_impl(::Base.#length, ::Base.#+, ::ApproxFun.Infinity{Bool}, ::Tuple{ApproxFun.ZeroRepeated{Int64}}, ::Int64) at ./reduce.jl:40
   [2] mapfoldl(::Base.#length, ::Function, ::Tuple{ApproxFun.ZeroRepeated{Int64}}) at ./reduce.jl:73
   [3] done at /home/vagrant/.julia/v0.6/ApproxFun/src/LinearAlgebra/helper.jl:862 [inlined]
   [4] isempty(::ApproxFun.Flatten{Tuple{ApproxFun.ZeroRepeated{Int64}}}) at ./essentials.jl:231
   [5] +(::ApproxFun.Flatten{Tuple{ApproxFun.ZeroRepeated{Int64}}}, ::ApproxFun.Flatten{Tuple{ApproxFun.ZeroRepeated{Int64}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/LinearAlgebra/helper.jl:958
   [6] +(::ApproxFun.Flatten{Tuple{Array{Bool,1},ApproxFun.ZeroRepeated{Int64}}}, ::ApproxFun.Flatten{Tuple{Array{Bool,1},ApproxFun.ZeroRepeated{Int64}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/LinearAlgebra/helper.jl:966
   [7] _mapreduce(::ApproxFun.##482#483{ApproxFun.Infinity{Bool}}, ::Base.#+, ::Base.LinearFast, ::Array{Any,1}) at ./reduce.jl:236
   [8] blockstop(::ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1}, ::Int64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Multivariate/TensorSpace.jl:134
   [9] colstop(::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}, ::Int64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/general/InterlaceOperator.jl:237
   [10] colstop(::ApproxFun.SubOperator{Float64,ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}, ::Int64) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/SubOperator.jl:111
   [11] rzeros(::ApproxFun.SubOperator{Float64,ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/Operator.jl:601
   [12] convert(::Type{ApproxFun.RaggedMatrix}, ::ApproxFun.SubOperator{Float64,ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/general/InterlaceOperator.jl:339
   [13] convert(::Type{AbstractArray{T,2}}, ::ApproxFun.SubOperator{Float64,ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}},Tuple{UnitRange{Int64},UnitRange{Int64}},Tuple{Int64,Int64},Tuple{Int64,Int64}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/Operator.jl:668
   [14] getindex(::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}, ::UnitRange{Int64}, ::UnitRange{Int64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/Operator.jl:181
   [15] #CachedOperator#787(::Bool, ::Type{T}, ::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Caching/almostbanded.jl:52
   [16] (::Core.#kw#Type)(::Array{Any,1}, ::Type{ApproxFun.CachedOperator}, ::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}) at ./<missing>:0
   [17] #cache#400(::Array{Any,1}, ::Function, ::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/general/CachedOperator.jl:55
   [18] (::ApproxFun.#kw##cache)(::Array{Any,1}, ::ApproxFun.#cache, ::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}) at ./<missing>:0
   [19] #qrfact#451(::Int64, ::Function, ::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/qrfact.jl:85
   [20] #A_ldiv_B_coefficients#363(::Array{Any,1}, ::Function, ::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/A_ldiv_B.jl:41
   [21] #\#359(::Array{Any,1}, ::Function, ::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/A_ldiv_B.jl:11
   [22] \(::ApproxFun.InterlaceOperator{Float64,1,ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},ApproxFun.TupleSpace{Tuple{ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.ConstantSpace{ApproxFun.Point{Float64}},ApproxFun.Ultraspherical{Int64,ApproxFun.Segment{Float64}}},ApproxFun.RealBasis,ApproxFun.Point{Float64},1},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Void},Tuple{Int64}}},ApproxFun.CachedIterator{Tuple{Int64,Int64},ApproxFun.BlockInterlacer{Tuple{Array{Bool,1},Array{Bool,1},ApproxFun.Repeated{Bool}}},Tuple{Int64,Int64,Tuple{Int64,Int64,Void},Tuple{Int64,Int64,Int64}}},Tuple{ApproxFun.Infinity{Bool},ApproxFun.Infinity{Bool}}}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/A_ldiv_B.jl:4
   [23] #\#364(::Array{Any,1}, ::Function, ::Array{ApproxFun.Operator{Float64},1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/A_ldiv_B.jl:47
   [24] \(::Array{ApproxFun.Operator{Float64},1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Operators/A_ldiv_B.jl:47
   [25] besselj(::Int64, ::ApproxFun.Fun{ApproxFun.Chebyshev{ApproxFun.Segment{Float64}},Float64}) at /home/vagrant/.julia/v0.6/ApproxFun/src/Extras/specialfunctions.jl:461
   [26] include_from_node1(::String) at ./loading.jl:532
   [27] include(::String) at ./sysimg.jl:14
   [28] include_from_node1(::String) at ./loading.jl:532
   [29] include(::String) at ./sysimg.jl:14
   [30] process_options(::Base.JLOptions) at ./client.jl:298
   [31] _start() at ./client.jl:364
ERROR: LoadError: LoadError: There was an error during testing
Stacktrace:
 [1] record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:401
 [2] do_test(::Base.Test.Threw, ::Expr) at ./test.jl:284
 [3] include_from_node1(::String) at ./loading.jl:532
 [4] include(::String) at ./sysimg.jl:14
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:298
 [8] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/ChebyshevTest.jl, in expression starting on line 133
while loading /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl, in expression starting on line 194
==============================[ ERROR: ApproxFun ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ApproxFun/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: ApproxFun had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:259
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
