>>> 'Pkg.add("FactCheck")' log
INFO: Installing FactCheck v0.4.2
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FactCheck
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FactCheck")' log
Julia Version 0.4.1
Commit cbe1bee* (2015-11-08 10:33 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing FactCheck
Testing Result counting and printing, not actual errors!
Test error pathways
  Success :: (line:-1) :: I will never be seen :: fact was true
    Expression: 1 --> 1
      Expected: 1
      Occurred: 1
  Failure :: (line:-1) :: one doesn't equal two! :: fact was false
    Expression: 1 --> 2
      Expected: 2
      Occurred: 1
  Error :: (line:-1) :: domains are tricky
    Expression: 2 ^ -1 --> 0.5
    DomainError:
    Cannot raise an integer x to a negative power -n. 
    Make x a float by adding a zero decimal (e.g. 2.0^-n instead of 2^-n), or write 1/x^n, float(x)^-n, or (x//1)^-n.
     in power_by_squaring at ./intfuncs.jl:82
     in ^ at ./intfuncs.jl:106
     in anonymous at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:271
     in do_fact at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:333
     [inlined code] from /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:271
     in anonymous at /home/vagrant/.julia/v0.4/FactCheck/test/runtests.jl:21
     in facts at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:448
     in include at ./boot.jl:261
     in include_from_node1 at ./loading.jl:304
     in process_options at ./client.jl:280
     in _start at ./client.jl:378
  Pending
Out of 4 total facts:
  Verified: 1
  Failed:   1
  Errored:  1
  Pending:  1
Done, begin actual FactCheck tests
Testing core functionality
13 facts verified.
Testing invalid @fact_throws macro
3 facts verified.
Testing 'context'
  > context will increase LEVEL and set contexts
  > 
  > nested context
    > inner
'facts' doesn't increase LEVEL
1 fact verified.
  > will execute the function which is passed to the 'context'
    > Run f
  > indent by current LEVEL
12 facts verified.
FactCheck assertion helper functions
  > `not` works for values and functions
  > `exactly` can be used to check object equality
  > `roughly` compares numbers... roughly
  > `roughly` compares matrixes... roughly
  > `anyof` compares with all arguments
  > `anyof` works for functions
  > less_than
  > less_than_or_equal
  > greater_than
  > greater_than_or_equal
27 facts verified.
INFO: FactCheck tests passed

>>> End of log
