>>> 'Pkg.add("FactCheck")' log
INFO: Installing FactCheck v0.3.1
INFO: Package database updated

>>> 'Pkg.test("FactCheck")' log
Julia Version 0.4.0-dev+6661
Commit 9c3cb36 (2015-08-12 03:21 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i7-4960HQ CPU @ 2.60GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Haswell)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing FactCheck
Testing Result counting and printing, not actual errors!
Test error pathways
  Success :: 1 --> 1
  Failure   :: (line:-1) :: one doesn't equal two! :: Expected: 1 => 2
    1 --> 2
  Error   :: (line:-1) :: domains are tricky
    2 ^ -1 --> 0.5
DomainError:
Cannot raise an integer x to a negative power -n. Make x a float by adding
a zero decimal (e.g. 2.0^-n instead of 2^-n), or write 1/x^n, float(x)^-n, or (x//1)^-n
 in power_by_squaring at ./intfuncs.jl:82
 in ^ at ./intfuncs.jl:106
 in anonymous at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:218
 in do_fact at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:277
 in anonymous at /home/vagrant/.julia/v0.4/FactCheck/test/runtests.jl:218
 in facts at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:391
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:264
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
  Pending
Out of 4 total facts:
  Verified: 1
  Failed:   1
  Errored:  1
  Pending:  1
Done, begin actual FactCheck tests
WARNING: module TestFactCheck should explicitly import == from Base
WARNING: the `=>` syntax is deprecated, use `-->` instead
Testing core functionality
11 facts verified.
Testing invalid @fact_throws macro
3 facts verified.
Testing 'context'
     - context will increase LEVEL and set contexts
     - nested context
       - inner
'facts' doesn't increase LEVEL
1 fact verified.
     - will execute the function which is passed to the 'context'
     - indent by current LEVEL
12 facts verified.
FactCheck assertion helper functions
     - `not` works for values and functions
     - `truthy` is anything other than nothing or false (which is 0)
     - `anything` is always true
     - `exactly` can be used to check object equality
     - `roughly` compares numbers... roughly
     - `roughly` compares matrixes... roughly
  Failure   :: (line:-1) :: `roughly` compares matrixes... roughly :: Expected: [1.1 1.2
 2.1 2.2] â‰… [1.1 1.2000009999999999
 2.09999651 2.2000100000000002]
    X --> roughly(Y)
     - `anyof` compares with all arguments
     - less_than
     - less_than_or_equal
     - greater_than
     - greater_than_or_equal
Out of 34 total facts:
  Verified: 33
  Failed:   1
ERROR: LoadError: FactCheck finished with 1 non-successful tests.
 in error at ./error.jl:21
 in exitstatus at /home/vagrant/.julia/v0.4/FactCheck/src/FactCheck.jl:500
 in include at ./boot.jl:254
 in include_from_node1 at ./loading.jl:264
 in process_options at ./client.jl:308
 in _start at ./client.jl:411
while loading /home/vagrant/.julia/v0.4/FactCheck/test/runtests.jl, in expression starting on line 207
==============================[ ERROR: FactCheck ]==============================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.4/FactCheck/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: FactCheck had test errors
 in error at ./error.jl:21
 in test at pkg/entry.jl:746
 in anonymous at pkg/dir.jl:31
 in cd at file.jl:22
 in cd at pkg/dir.jl:31
 in test at pkg.jl:71
 in process_options at ./client.jl:284
 in _start at ./client.jl:411

>>> End of log
