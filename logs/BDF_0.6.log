>>> 'Pkg.add("BDF")' log
INFO: Cloning cache of BDF from https://github.com/sam81/BDF.jl.git
INFO: Installing BDF v0.2.0
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing Docile v0.5.23
INFO: Installing HDF5 v0.7.2
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Blosc
INFO: Building HDF5
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::SubString{String}) at ./sysimg.jl:14
 [7] evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:13
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:236
 [12] process_options(::Base.JLOptions) at ./client.jl:275
 [13] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of BDF
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("BDF")' log
Julia Version 0.6.0-dev.1897
Commit 8563fc5 (2017-01-04 09:23 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (841.140625 MB free)
Uptime: 5247.0 sec
Load Avg:  0.904296875  0.94873046875  1.0869140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     275999 s         55 s      41800 s     155945 s          8 s
#2  3500 MHz     130342 s         87 s      30288 s     347684 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - BDF                           0.2.0
 - JSON                          0.8.0
7 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - Compat                        0.10.0
 - Docile                        0.5.23
 - HDF5                          0.7.2
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing BDF
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int32}, ::Array{Float32,2}) at ./deprecated.jl:50
 [3] #writeBDF#14(::String, ::String, ::String, ::String, ::String, ::Array{String,1}, ::Array{String,1}, ::Array{String,1}, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{String,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:751
 [4] (::BDF.#kw##writeBDF)(::Array{Any,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at ./<missing>:0
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/BDF/test/test_read_write.jl, in expression starting on line 8
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int16}, ::Array{Int16,1}) at ./deprecated.jl:50
 [3] #writeBDF#14(::String, ::String, ::String, ::String, ::String, ::Array{String,1}, ::Array{String,1}, ::Array{String,1}, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{String,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:752
 [4] (::BDF.#kw##writeBDF)(::Array{Any,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at ./<missing>:0
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/BDF/test/test_read_write.jl, in expression starting on line 8
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int16}, ::Array{Int16,1}) at ./deprecated.jl:50
 [3] #writeBDF#14(::String, ::String, ::String, ::String, ::String, ::Array{String,1}, ::Array{String,1}, ::Array{String,1}, ::Array{Int32,1}, ::Array{Int32,1}, ::Array{String,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:753
 [4] (::BDF.#kw##writeBDF)(::Array{Any,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at ./<missing>:0
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/BDF/test/test_read_write.jl, in expression starting on line 8
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int64}, ::Array{Int64,1}) at ./deprecated.jl:50
 [3] #splitBDFAtTrigger#59(::Int64, ::Int64, ::Function, ::String, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:805
 [4] splitBDFAtTrigger(::String, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:796
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/BDF/test/test_split_trigger.jl, in expression starting on line 24
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int32}, ::Array{Float32,2}) at ./deprecated.jl:50
 [3] #writeBDF#14(::String, ::String, ::String, ::String, ::String, ::Array{String,1}, ::Array{String,1}, ::Array{String,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{String,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:751
 [4] writeBDF(::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:444
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/BDF/test/test_split_trigger.jl, in expression starting on line 28
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int16}, ::Array{Int16,1}) at ./deprecated.jl:50
 [3] #writeBDF#14(::String, ::String, ::String, ::String, ::String, ::Array{String,1}, ::Array{String,1}, ::Array{String,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{String,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:752
 [4] writeBDF(::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:444
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/BDF/test/test_split_trigger.jl, in expression starting on line 28
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int16}, ::Array{Int16,1}) at ./deprecated.jl:50
 [3] #writeBDF#14(::String, ::String, ::String, ::String, ::String, ::Array{String,1}, ::Array{String,1}, ::Array{String,1}, ::Array{Int64,1}, ::Array{Int64,1}, ::Array{String,1}, ::BDF.#writeBDF, ::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:753
 [4] writeBDF(::String, ::Array{Float32,2}, ::Array{Int16,1}, ::Array{Int16,1}, ::Int64) at /home/vagrant/.julia/v0.6/BDF/src/BDF.jl:444
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:298
 [10] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/BDF/test/test_split_trigger.jl, in expression starting on line 28
INFO: BDF tests passed

>>> End of log
