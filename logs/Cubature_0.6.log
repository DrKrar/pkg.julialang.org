>>> 'Pkg.add("Cubature")' log
INFO: Cloning cache of Cubature from https://github.com/stevengj/Cubature.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Cubature v1.2.0
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Cubature
INFO: Installing Cubature 1.0.2 library...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  3 14.5M    3  515k    0     0  2344k      0  0:00:06 --:--:--  0:00:06 2344k 43 14.5M   43 6492k    0     0  5322k      0  0:00:02  0:00:01  0:00:01 5321k 83 14.5M   83 12.1M    0     0  5615k      0  0:00:02  0:00:02 --:--:-- 5615k100 14.5M  100 14.5M    0     0  5697k      0  0:00:02  0:00:02 --:--:-- 5697k
Compiling hcubature.c...
Compiling pcubature.c...
Linking libcubature...
INFO: Package database updated

>>> 'Pkg.test("Cubature")' log
Julia Version 0.6.0-dev.1946
Commit f550489 (2017-01-06 00:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (752.453125 MB free)
Uptime: 14912.0 sec
Load Avg:  0.9453125  0.998046875  1.0107421875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz     791182 s       2064 s      78431 s     467137 s         28 s
#2  3498 MHz     289837 s       3976 s      45346 s    1116681 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - Cubature                      1.2.0
 - JSON                          0.8.0
4 additional packages:
 - BinDeps                       0.4.5
 - Compat                        0.10.0
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Testing Cubature
WARNING: sin{T <: Number}(x::AbstractArray{T}) is deprecated, use sin.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sin(::UnitRange{Int64}) at ./deprecated.jl:50
 [3] macro expansion; at /home/vagrant/.julia/v0.6/Cubature/test/runtests.jl:14 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::String) at ./sysimg.jl:14
 [7] process_options(::Base.JLOptions) at ./client.jl:308
 [8] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/Cubature/test/runtests.jl, in expression starting on line 11
ERROR: LoadError: MethodError: no method matching quad_tst1(::Array{Float64,1})
The applicable method may be too new: running in world age 20516, while current world is 20517.
Closest candidates are:
  quad_tst1(::Any) at /home/vagrant/.julia/v0.6/Cubature/test/runtests.jl:10 (method too new to be called from this world context.)
Stacktrace:
 [1] (::Cubature.##17#18{Bool,Bool,Int64,Float64,Float64,Int64,Int32,Int64})() at /home/vagrant/.julia/v0.6/Cubature/src/Cubature.jl:208
 [2] disable_sigint at ./c.jl:326 [inlined]
 [3] cubature(::Bool, ::Bool, ::Bool, ::Bool, ::Int64, ::Function, ::Array{Float64,1}, ::UnitRange{Int64}, ::Float64, ::Float64, ::Int64, ::Int32) at /home/vagrant/.julia/v0.6/Cubature/src/Cubature.jl:162
 [4] #hcubature#22(::Float64, ::Float64, ::Int64, ::Function, ::Function, ::Array{Float64,1}, ::UnitRange{Int64}) at /home/vagrant/.julia/v0.6/Cubature/src/Cubature.jl:223
 [5] (::Cubature.#kw##hcubature)(::Array{Any,1}, ::Cubature.#hcubature, ::Function, ::Array{Float64,1}, ::UnitRange{Int64}) at ./<missing>:0
 [6] macro expansion; at /home/vagrant/.julia/v0.6/Cubature/test/runtests.jl:15 [inlined]
 [7] anonymous at ./<missing>:?
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:308
 [11] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/Cubature/test/runtests.jl, in expression starting on line 11
==============================[ ERROR: Cubature ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/Cubature/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Cubature had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261

>>> End of log
