>>> 'Pkg.add("ContMechTensors")' log
INFO: Cloning cache of ContMechTensors from https://github.com/KristofferC/ContMechTensors.jl.git
INFO: Installing Calculus v0.2.0
INFO: Installing ContMechTensors v0.3.0
INFO: Installing DiffBase v0.0.4
INFO: Installing ForwardDiff v0.3.4
INFO: Installing NaNMath v0.2.2
INFO: Installing StaticArrays v0.1.4
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of ContMechTensors
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ContMechTensors")' log
Julia Version 0.6.0-dev.2584
Commit 509c775 (2017-02-04 00:17 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (2080.609375 MB free)
Uptime: 13650.0 sec
Load Avg:  1.08740234375  1.0556640625  1.07958984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     624297 s       4249 s      78648 s     511749 s         37 s
#2  3499 MHz     222484 s       2668 s      59959 s    1027076 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ContMechTensors               0.3.0
 - JSON                          0.8.2
6 additional packages:
 - Calculus                      0.2.0
 - Compat                        0.14.0
 - DiffBase                      0.0.4
 - ForwardDiff                   0.3.4
 - NaNMath                       0.2.2
 - StaticArrays                  0.1.4
INFO: Computing test dependencies for ContMechTensors...
INFO: Installing DocStringExtensions v0.3.1
INFO: Installing Documenter v0.9.0
INFO: Testing ContMechTensors

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> zero(Tensor{1, 2})
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.0
 0.0
```

> Subexpression:

    zero(Tensor{1, 2})

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.0
 0.0ERROR: MethodError: convert(::Type{StaticArrays.SVector{2,Float64}}, ::StaticArrays.SVector{2,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] zero(::Type{ContMechTensors.Tensor{1,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> zero(SymmetricTensor{4, 2, Float32})
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float32,9}:
[:, :, 1, 1] =
 0.0  0.0
 0.0  0.0

[:, :, 2, 1] =
 0.0  0.0
 0.0  0.0

[:, :, 1, 2] =
 0.0  0.0
 0.0  0.0

[:, :, 2, 2] =
 0.0  0.0
 0.0  0.0
```

> Subexpression:

    zero(SymmetricTensor{4, 2, Float32})

> Output Diff (REQUIRES COLOR):

2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float32,9}:
[:, :, 1, 1] =
 0.0  0.0
 0.0  0.0

[:, :, 2, 1] =
 0.0  0.0
 0.0  0.0

[:, :, 1, 2] =
 0.0  0.0
 0.0  0.0

[:, :, 2, 2] =
 0.0  0.0
 0.0  ERROR: MethodError: convert(::Type{StaticArrays.SVector{9,Float32}}, ::StaticArrays.SVector{9,Float32}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] zero(::Type{ContMechTensors.SymmetricTensor{4,2,Float32,M} where M}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:186

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> ones(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.0  1.0
 1.0  1.0
```

> Subexpression:

    ones(Tensor{2,2})

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.0  1.0
 1.0  1.ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ones(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> ones(Vec{3,Float32})
3-element ContMechTensors.Tensor{1,3,Float32,3}:
 1.0
 1.0
 1.0
```

> Subexpression:

    ones(Vec{3,Float32})

> Output Diff (REQUIRES COLOR):

3-element ContMechTensors.Tensor{1,3,Float32,3}:
 1.0
 1.0
 1.0ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float32}}, ::StaticArrays.SVector{3,Float32}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ones(::Type{ContMechTensors.Tensor{1,3,Float32,3}}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:183

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> rand(Tensor{2, 3})
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.246837
```

> Subexpression:

    rand(Tensor{2, 3})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.24683ERROR: MethodError: convert(::Type{StaticArrays.SVector{9,Float64}}, ::StaticArrays.SVector{9,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> rand(SymmetricTensor{2,3,Float32})
3×3 ContMechTensors.SymmetricTensor{2,3,Float32,6}:
 0.0107703  0.305865  0.2082
 0.305865   0.405684  0.257278
 0.2082     0.257278  0.958491
```

> Subexpression:

    rand(SymmetricTensor{2,3,Float32})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.SymmetricTensor{2,3,Float32,6}:
 0.0107703  0.305865  0.2082
 0.305865   0.405684  0.257278
 0.2082     0.257278  0.95849ERROR: MethodError: convert(::Type{StaticArrays.SVector{6,Float32}}, ::StaticArrays.SVector{6,Float32}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,3,Float32,M} where M}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:186

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> one(SymmetricTensor{2, 2})
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 1.0  0.0
 0.0  1.0
```

> Subexpression:

    one(SymmetricTensor{2, 2})

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 1.0  0.0
 0.0  1.ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:234 [inlined]
 [2] one at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:222 [inlined]
 [3] one(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:217

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> Tensor{1,2}([1.0,2.0])
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 1.0
 2.0
```

> Subexpression:

    Tensor{1,2}([1.0,2.0])

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 1.0
 2.0ERROR: MethodError: convert(::Type{StaticArrays.SVector{2,Float64}}, ::StaticArrays.SVector{2,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:263 [inlined]
 [2] ContMechTensors.Tensor{1,2,T,M} where M where T<:Real(::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:257

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> SymmetricTensor{2,2}((1.0,2.0,3.0))
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 1.0  2.0
 2.0  3.0
```

> Subexpression:

    SymmetricTensor{2,2}((1.0,2.0,3.0))

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 1.0  2.0
 2.0  3.ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real(::Tuple{Float64,Float64,Float64}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:113

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> SymmetricTensor{2,2,Float64}((i,j) -> i + j)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 2.0  3.0
 3.0  4.0
```

> Subexpression:

    SymmetricTensor{2,2,Float64}((i,j) -> i + j)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 2.0  3.0
 3.0  4.ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Int64}}, ::StaticArrays.SVector{3,Int64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ContMechTensors.SymmetricTensor{2,2,Float64,M} where M(::##1#2) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:135

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> diagm(Tensor{2,2}, 2.0)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 2.0  0.0
 0.0  2.0

julia> diagm(SymmetricTensor{2,3}, [1.0, 2.0, 3.0])
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 1.0  0.0  0.0
 0.0  2.0  0.0
 0.0  0.0  3.0
```

> Subexpression:

    diagm(Tensor{2,2}, 2.0)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 2.0  0.0
 0.0  2.ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:234 [inlined]
 [2] one at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:222 [inlined]
 [3] diagm(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}, ::Float64) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:210

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> diagm(Tensor{2,2}, 2.0)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 2.0  0.0
 0.0  2.0

julia> diagm(SymmetricTensor{2,3}, [1.0, 2.0, 3.0])
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 1.0  0.0  0.0
 0.0  2.0  0.0
 0.0  0.0  3.0
```

> Subexpression:

    diagm(SymmetricTensor{2,3}, [1.0, 2.0, 3.0])

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 1.0  0.0  0.0
 0.0  2.0  0.0
 0.0  0.0  3.ERROR: MethodError: convert(::Type{StaticArrays.SVector{6,Float64}}, ::StaticArrays.SVector{6,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:206 [inlined]
 [2] diagm(::Type{ContMechTensors.SymmetricTensor{2,3,T,M} where M where T<:Real}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:201

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/constructing_tensors.md

> Code block:

```jldoctest
julia> data = rand(2, 5)
2×5 Array{Float64,2}:
 0.590845  0.566237  0.794026  0.200586  0.246837
 0.766797  0.460085  0.854147  0.298614  0.579672

julia> tensor_data = reinterpret(Vec{2, Float64}, data, (5,))
5-element Array{ContMechTensors.Tensor{1,2,Float64,2},1}:
 [0.590845,0.766797]
 [0.566237,0.460085]
 [0.794026,0.854147]
 [0.200586,0.298614]
 [0.246837,0.579672]
```

> Subexpression:

    tensor_data = reinterpret(Vec{2, Float64}, data, (5,))

> Output Diff (REQUIRES COLOR):

5-element Array{ContMechTensors.Tensor{1,2,Float64,2},1}:
 [0.590845,0.766797]
 [0.566237,0.460085]
 [0.794026,0.854147]
 [0.200586,0.298614]
 [0.246837,0.579672][0.590845, 0.766797]
 [0.566237, 0.460085]
 [0.794026, 0.854147]
 [0.200586, 0.298614]
 [0.246837, 0.579672]

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{1, 2})
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.794026
 0.854147

julia> dot(A, B)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184

julia> A ⋅ B
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184
```

> Subexpression:

    A = rand(Tensor{2, 2})

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.46008ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{1, 2})
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.794026
 0.854147

julia> dot(A, B)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184

julia> A ⋅ B
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184
```

> Subexpression:

    B = rand(Tensor{1, 2})

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.794026
 0.854147ERROR: MethodError: convert(::Type{StaticArrays.SVector{2,Float64}}, ::StaticArrays.SVector{2,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{1,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{1, 2})
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.794026
 0.854147

julia> dot(A, B)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184

julia> A ⋅ B
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184
```

> Subexpression:

    dot(A, B)

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{1, 2})
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.794026
 0.854147

julia> dot(A, B)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184

julia> A ⋅ B
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184
```

> Subexpression:

    A ⋅ B

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.952796
 1.00184ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> B = rand(SymmetricTensor{2, 2});

julia> dcontract(A,B)
1.9732018397544984

julia> A ⊡ B
1.9732018397544984
```

> Subexpression:

    A = rand(SymmetricTensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> B = rand(SymmetricTensor{2, 2});

julia> dcontract(A,B)
1.9732018397544984

julia> A ⊡ B
1.9732018397544984
```

> Subexpression:

    B = rand(SymmetricTensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> B = rand(SymmetricTensor{2, 2});

julia> dcontract(A,B)
1.9732018397544984

julia> A ⊡ B
1.9732018397544984
```

> Subexpression:

    dcontract(A,B)

> Output Diff (REQUIRES COLOR):

1.9732018397544984ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> B = rand(SymmetricTensor{2, 2});

julia> dcontract(A,B)
1.9732018397544984

julia> A ⊡ B
1.9732018397544984
```

> Subexpression:

    A ⊡ B

> Output Diff (REQUIRES COLOR):

1.9732018397544984ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> B = rand(SymmetricTensor{2, 2});

julia> A ⊗ B
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
 0.271839  0.352792
 0.352792  0.260518

[:, :, 2, 1] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 1, 2] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 2, 2] =
 0.504668  0.654957
 0.654957  0.48365
```

> Subexpression:

    A = rand(SymmetricTensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> B = rand(SymmetricTensor{2, 2});

julia> A ⊗ B
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
 0.271839  0.352792
 0.352792  0.260518

[:, :, 2, 1] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 1, 2] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 2, 2] =
 0.504668  0.654957
 0.654957  0.48365
```

> Subexpression:

    B = rand(SymmetricTensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> B = rand(SymmetricTensor{2, 2});

julia> A ⊗ B
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
 0.271839  0.352792
 0.352792  0.260518

[:, :, 2, 1] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 1, 2] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 2, 2] =
 0.504668  0.654957
 0.654957  0.48365
```

> Subexpression:

    A ⊗ B

> Output Diff (REQUIRES COLOR):

2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
 0.271839  0.352792
 0.352792  0.260518

[:, :, 2, 1] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 1, 2] =
 0.469146  0.608857
 0.608857  0.449607

[:, :, 2, 2] =
 0.504668  0.654957
 0.654957  0.48ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇f = gradient(norm, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.434906  0.56442
 0.56442   0.416793

julia> ∇f, f = gradient(norm, A, :all);
```

> Subexpression:

    A = rand(SymmetricTensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇f = gradient(norm, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.434906  0.56442
 0.56442   0.416793

julia> ∇f, f = gradient(norm, A, :all);
```

> Subexpression:

    ∇f = gradient(norm, A)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.434906  0.56442
 0.56442   0.41679ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇f = gradient(norm, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.434906  0.56442
 0.56442   0.416793

julia> ∇f, f = gradient(norm, A, :all);
```

> Subexpression:

    ∇f, f = gradient(norm, A, :all);

> Output Diff (REQUIRES COLOR):

ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇∇f = hessian(norm, A)
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
  0.596851  -0.180684
 -0.180684  -0.133425

[:, :, 2, 1] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 1, 2] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 2, 2] =
 -0.133425  -0.173159
 -0.173159   0.608207

julia> ∇∇f, ∇f, f = hessian(norm, A, :all);
```

> Subexpression:

    A = rand(SymmetricTensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇∇f = hessian(norm, A)
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
  0.596851  -0.180684
 -0.180684  -0.133425

[:, :, 2, 1] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 1, 2] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 2, 2] =
 -0.133425  -0.173159
 -0.173159   0.608207

julia> ∇∇f, ∇f, f = hessian(norm, A, :all);
```

> Subexpression:

    ∇∇f = hessian(norm, A)

> Output Diff (REQUIRES COLOR):

2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
  0.596851  -0.180684
 -0.180684  -0.133425

[:, :, 2, 1] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 1, 2] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 2, 2] =
 -0.133425  -0.173159
 -0.173159   0.608ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2, 2});

julia> ∇∇f = hessian(norm, A)
2×2×2×2 ContMechTensors.SymmetricTensor{4,2,Float64,9}:
[:, :, 1, 1] =
  0.596851  -0.180684
 -0.180684  -0.133425

[:, :, 2, 1] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 1, 2] =
 -0.180684   0.133546
  0.133546  -0.173159

[:, :, 2, 2] =
 -0.133425  -0.173159
 -0.173159   0.608207

julia> ∇∇f, ∇f, f = hessian(norm, A, :all);
```

> Subexpression:

    ∇∇f, ∇f, f = hessian(norm, A, :all);

> Output Diff (REQUIRES COLOR):

ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> x = rand(Vec{2});

julia> gradient(norm, x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124

julia> x / norm(x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124
```

> Subexpression:

    x = rand(Vec{2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{2,Float64}}, ::StaticArrays.SVector{2,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{1,2,T,2} where T}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:191

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> x = rand(Vec{2});

julia> gradient(norm, x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124

julia> x / norm(x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124
```

> Subexpression:

    gradient(norm, x)

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124ERROR: UndefVarError: x not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> x = rand(Vec{2});

julia> gradient(norm, x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124

julia> x / norm(x)
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124
```

> Subexpression:

    x / norm(x)

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.61036
 0.792124ERROR: UndefVarError: x not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,2});

julia> gradient(det, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845

julia> inv(A)' * det(A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845
```

> Subexpression:

    A = rand(SymmetricTensor{2,2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,2});

julia> gradient(det, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845

julia> inv(A)' * det(A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845
```

> Subexpression:

    gradient(det, A)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.59084ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,2});

julia> gradient(det, A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845

julia> inv(A)' * det(A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.590845
```

> Subexpression:

    inv(A)' * det(A)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
  0.566237  -0.766797
 -0.766797   0.59084ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    E = rand(Tensor{4,2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{16,Float64}}, ::StaticArrays.SVector{16,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{4,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    E_sym = hessian(ψ, rand(Tensor{2,2}));

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    norm(majorsymmetric(E) - E_sym)

> Output Diff (REQUIRES COLOR):

0.0ERROR: UndefVarError: E not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2});

julia> A[1, 2]
0.5662374165061859

julia> B = rand(SymmetricTensor{4, 2});

julia> B[1, 2, 1, 2]
0.24683718661000897
```

> Subexpression:

    A = rand(Tensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2});

julia> A[1, 2]
0.5662374165061859

julia> B = rand(SymmetricTensor{4, 2});

julia> B[1, 2, 1, 2]
0.24683718661000897
```

> Subexpression:

    A[1, 2]

> Output Diff (REQUIRES COLOR):

0.5662374165061859ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2});

julia> A[1, 2]
0.5662374165061859

julia> B = rand(SymmetricTensor{4, 2});

julia> B[1, 2, 1, 2]
0.24683718661000897
```

> Subexpression:

    B = rand(SymmetricTensor{4, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{9,Float64}}, ::StaticArrays.SVector{9,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{4,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2});

julia> A[1, 2]
0.5662374165061859

julia> B = rand(SymmetricTensor{4, 2});

julia> B[1, 2, 1, 2]
0.24683718661000897
```

> Subexpression:

    B[1, 2, 1, 2]

> Output Diff (REQUIRES COLOR):

0.24683718661000897ERROR: UndefVarError: B not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2});

julia> A[:, 1]
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.590845
 0.766797
```

> Subexpression:

    A = rand(Tensor{2, 2});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> A = rand(Tensor{2, 2});

julia> A[:, 1]
2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.590845
 0.766797
```

> Subexpression:

    A[:, 1]

> Output Diff (REQUIRES COLOR):

2-element ContMechTensors.Tensor{1,2,Float64,2}:
 0.590845
 0.766797ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> Tensor{2, 2}((i,j) -> i == 1 && j == 2 ? 1.0 : 0.0)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.0  1.0
 0.0  0.0
```

> Subexpression:

    Tensor{2, 2}((i,j) -> i == 1 && j == 2 ? 1.0 : 0.0)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.0  1.0
 0.0  0.ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ContMechTensors.Tensor{2,2,T,M} where M where T<:Real(::##1#2) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:242

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> SymmetricTensor{2, 2}((i,j) -> i == 1 && j == 2 ? 1.0 : 0.0)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.0  0.0
 0.0  0.0

julia> SymmetricTensor{2, 2}((i,j) -> i == 2 && j == 1 ? 1.0 : 0.0)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.0  1.0
 1.0  0.0
```

> Subexpression:

    SymmetricTensor{2, 2}((i,j) -> i == 1 && j == 2 ? 1.0 : 0.0)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.0  0.0
 0.0  0.ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real(::##1#2) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:242

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/indexing.md

> Code block:

```jldoctest
julia> SymmetricTensor{2, 2}((i,j) -> i == 1 && j == 2 ? 1.0 : 0.0)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.0  0.0
 0.0  0.0

julia> SymmetricTensor{2, 2}((i,j) -> i == 2 && j == 1 ? 1.0 : 0.0)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.0  1.0
 1.0  0.0
```

> Subexpression:

    SymmetricTensor{2, 2}((i,j) -> i == 2 && j == 1 ? 1.0 : 0.0)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.0  1.0
 1.0  0.ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ContMechTensors.SymmetricTensor{2,2,T,M} where M where T<:Real(::##3#4) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:242

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.794026  0.200586
 0.854147  0.298614

julia> tdot(A,B)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967

julia> A'⋅B
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967
```

> Subexpression:

    A = rand(Tensor{2,2})

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.46008ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.794026  0.200586
 0.854147  0.298614

julia> tdot(A,B)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967

julia> A'⋅B
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967
```

> Subexpression:

    B = rand(Tensor{2,2})

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.794026  0.200586
 0.854147  0.29861ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.794026  0.200586
 0.854147  0.298614

julia> tdot(A,B)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967

julia> A'⋅B
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967
```

> Subexpression:

    tdot(A,B)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.25096ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> B = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.794026  0.200586
 0.854147  0.298614

julia> tdot(A,B)
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967

julia> A'⋅B
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.250967
```

> Subexpression:

    A'⋅B

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 1.1241    0.347492
 0.842587  0.25096ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3})
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.246837

julia> tdot(A)
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 1.2577   1.36435   0.48726
 1.36435  1.57172   0.540229
 0.48726  0.540229  0.190334
```

> Subexpression:

    A = rand(Tensor{2,3})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.24683ERROR: MethodError: convert(::Type{StaticArrays.SVector{9,Float64}}, ::StaticArrays.SVector{9,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3})
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.246837

julia> tdot(A)
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 1.2577   1.36435   0.48726
 1.36435  1.57172   0.540229
 0.48726  0.540229  0.190334
```

> Subexpression:

    tdot(A)

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 1.2577   1.36435   0.48726
 1.36435  1.57172   0.540229
 0.48726  0.540229  0.19033ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3})
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.246837

julia> norm(A)
1.7377443667834922
```

> Subexpression:

    A = rand(Tensor{2,3})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.24683ERROR: MethodError: convert(::Type{StaticArrays.SVector{9,Float64}}, ::StaticArrays.SVector{9,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3})
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.246837

julia> norm(A)
1.7377443667834922
```

> Subexpression:

    norm(A)

> Output Diff (REQUIRES COLOR):

1.7377443667834922ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> trace(A)
1.9050765715072775
```

> Subexpression:

    A = rand(SymmetricTensor{2,3})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.85414ERROR: MethodError: convert(::Type{StaticArrays.SVector{6,Float64}}, ::StaticArrays.SVector{6,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> trace(A)
1.9050765715072775
```

> Subexpression:

    trace(A)

> Output Diff (REQUIRES COLOR):

1.9050765715072775ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> det(A)
-0.1005427219925894
```

> Subexpression:

    A = rand(SymmetricTensor{2,3})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.85414ERROR: MethodError: convert(::Type{StaticArrays.SVector{6,Float64}}, ::StaticArrays.SVector{6,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> det(A)
-0.1005427219925894
```

> Subexpression:

    det(A)

> Output Diff (REQUIRES COLOR):

-0.1005427219925894ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3})
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.246837

julia> inv(A)
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  19.7146   -19.2802    7.30384
   6.73809  -10.7687    7.55198
 -68.541     81.4917  -38.8361
```

> Subexpression:

    A = rand(Tensor{2,3})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.24683ERROR: MethodError: convert(::Type{StaticArrays.SVector{9,Float64}}, ::StaticArrays.SVector{9,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3})
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.460085  0.200586
 0.766797  0.794026  0.298614
 0.566237  0.854147  0.246837

julia> inv(A)
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  19.7146   -19.2802    7.30384
   6.73809  -10.7687    7.55198
 -68.541     81.4917  -38.8361
```

> Subexpression:

    inv(A)

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  19.7146   -19.2802    7.30384
   6.73809  -10.7687    7.55198
 -68.541     81.4917  -38.836ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/transpose.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> A'
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.766797
 0.566237  0.460085
```

> Subexpression:

    A = rand(Tensor{2,2})

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.46008ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/transpose.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> A'
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.766797
 0.566237  0.460085
```

> Subexpression:

    A'

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.766797
 0.566237  0.46008ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/symmetric.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> symmetric(A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.590845  0.666517
 0.666517  0.460085
```

> Subexpression:

    A = rand(Tensor{2,2})

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.46008ERROR: MethodError: convert(::Type{StaticArrays.SVector{4,Float64}}, ::StaticArrays.SVector{4,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,2,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/symmetric.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,2})
2×2 ContMechTensors.Tensor{2,2,Float64,4}:
 0.590845  0.566237
 0.766797  0.460085

julia> symmetric(A)
2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.590845  0.666517
 0.666517  0.460085
```

> Subexpression:

    symmetric(A)

> Output Diff (REQUIRES COLOR):

2×2 ContMechTensors.SymmetricTensor{2,2,Float64,3}:
 0.590845  0.666517
 0.666517  0.46008ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3});

julia> dev(A)
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.0469421  0.460085   0.200586
 0.766797   0.250123   0.298614
 0.566237   0.854147  -0.297065

julia> trace(dev(A))
0.0
```

> Subexpression:

    A = rand(Tensor{2,3});

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: convert(::Type{StaticArrays.SVector{9,Float64}}, ::StaticArrays.SVector{9,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3});

julia> dev(A)
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.0469421  0.460085   0.200586
 0.766797   0.250123   0.298614
 0.566237   0.854147  -0.297065

julia> trace(dev(A))
0.0
```

> Subexpression:

    dev(A)

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.0469421  0.460085   0.200586
 0.766797   0.250123   0.298614
 0.566237   0.854147  -0.29706ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(Tensor{2,3});

julia> dev(A)
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.0469421  0.460085   0.200586
 0.766797   0.250123   0.298614
 0.566237   0.854147  -0.297065

julia> trace(dev(A))
0.0
```

> Subexpression:

    trace(dev(A))

> Output Diff (REQUIRES COLOR):

0.0ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> a = rand(Vec{3})
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.590845
 0.766797
 0.566237

julia> b = rand(Vec{3})
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.460085
 0.794026
 0.854147

julia> a × b
3-element ContMechTensors.Tensor{1,3,Float64,3}:
  0.20535
 -0.24415
  0.116354
```

> Subexpression:

    a = rand(Vec{3})

> Output Diff (REQUIRES COLOR):

3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.590845
 0.766797
 0.566237ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{1,3,T,3} where T}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:191

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> a = rand(Vec{3})
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.590845
 0.766797
 0.566237

julia> b = rand(Vec{3})
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.460085
 0.794026
 0.854147

julia> a × b
3-element ContMechTensors.Tensor{1,3,Float64,3}:
  0.20535
 -0.24415
  0.116354
```

> Subexpression:

    b = rand(Vec{3})

> Output Diff (REQUIRES COLOR):

3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.460085
 0.794026
 0.854147ERROR: MethodError: convert(::Type{StaticArrays.SVector{3,Float64}}, ::StaticArrays.SVector{3,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.Tensor{1,3,T,3} where T}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:191

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl

> Code block:

```jldoctest
julia> a = rand(Vec{3})
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.590845
 0.766797
 0.566237

julia> b = rand(Vec{3})
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 0.460085
 0.794026
 0.854147

julia> a × b
3-element ContMechTensors.Tensor{1,3,Float64,3}:
  0.20535
 -0.24415
  0.116354
```

> Subexpression:

    a × b

> Output Diff (REQUIRES COLOR):

3-element ContMechTensors.Tensor{1,3,Float64,3}:
  0.20535
 -0.24415
  0.116354ERROR: UndefVarError: a not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    A = rand(SymmetricTensor{2,3})

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.85414ERROR: MethodError: convert(::Type{StaticArrays.SVector{6,Float64}}, ::StaticArrays.SVector{6,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] rand(::Type{ContMechTensors.SymmetricTensor{2,3,T,M} where M where T<:Real}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:182

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Λ, Φ = eig(A);

> Output Diff (REQUIRES COLOR):

ERROR: UndefVarError: A not defined

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Λ

> Output Diff (REQUIRES COLOR):

3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075ERROR: UndefVarError: Λ not define

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Φ

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.62495ERROR: UndefVarError: Φ not define

=====[End Error]===============================
=====[Test Error]==============================

> File: /home/vagrant/.julia/v0.6/ContMechTensors/src/math_ops.jl

> Code block:

```jldoctest
julia> A = rand(SymmetricTensor{2,3})
3×3 ContMechTensors.SymmetricTensor{2,3,Float64,6}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147

julia> Λ, Φ = eig(A);

julia> Λ
3-element ContMechTensors.Tensor{1,3,Float64,3}:
 -0.312033
  0.15636
  2.06075

julia> Φ
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
  0.492843  -0.684993  0.536554
 -0.811724  -0.139855  0.567049
  0.313385   0.715     0.624952

julia> Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A
3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.854147
```

> Subexpression:

    Φ ⋅ diagm(Tensor{2,3}, Λ) ⋅ inv(Φ) # Same as A

> Output Diff (REQUIRES COLOR):

3×3 ContMechTensors.Tensor{2,3,Float64,9}:
 0.590845  0.766797  0.566237
 0.766797  0.460085  0.794026
 0.566237  0.794026  0.85414ERROR: UndefVarError: Φ not define

=====[End Error]===============================
ERROR: LoadError: LoadError: MethodError: convert(::Type{StaticArrays.SVector{9,Float64}}, ::StaticArrays.SVector{9,Float64}) is ambiguous. Candidates:
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, sa::StaticArrays.StaticArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:69
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, a::AbstractArray) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:72
  convert{SA<:StaticArrays.StaticArray}(::Type{SA}, x1) in StaticArrays at /home/vagrant/.julia/v0.6/StaticArrays/src/core.jl:66
  convert{T}(::Type{T}, x::T) in Base at essentials.jl:29
Stacktrace:
 [1] ContMechTensors.SymmetricTensor{4,2,T,M} where M where T<:Real(::NTuple{9,Float64}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:113
 [2] ContMechTensors.SymmetricTensor{4,2,T,M} where M where T<:Real(::##doctest-#321.##1#2) at /home/vagrant/.julia/v0.6/ContMechTensors/src/ContMechTensors.jl:242
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl, in expression starting on line 2
===========================[ ERROR: ContMechTensors ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DocStringExtensions v0.3.1
INFO: Removing Documenter v0.9.0
ERROR: ContMechTensors had test errors

>>> End of log
