>>> 'Pkg.add("ContMechTensors")' log
INFO: Cloning cache of ContMechTensors from https://github.com/KristofferC/ContMechTensors.jl.git
INFO: Installing Calculus v0.1.15
INFO: Installing ContMechTensors v0.3.0
INFO: Installing DiffBase v0.0.2
INFO: Installing ForwardDiff v0.3.3
INFO: Installing NaNMath v0.2.2
INFO: Installing StaticArrays v0.1.3
INFO: Package database updated

>>> 'Pkg.test("ContMechTensors")' log
Julia Version 0.6.0-dev.1847
Commit 8f9036a (2017-01-02 23:39 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (991.3828125 MB free)
Uptime: 11003.0 sec
Load Avg:  0.84375  0.734375  0.763671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3508 MHz     511498 s       6404 s      52813 s     429335 s          7 s
#2  3508 MHz     153869 s         90 s      22647 s     907561 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - ContMechTensors               0.3.0
 - JSON                          0.8.0
6 additional packages:
 - Calculus                      0.1.15
 - Compat                        0.10.0
 - DiffBase                      0.0.2
 - ForwardDiff                   0.3.3
 - NaNMath                       0.2.2
 - StaticArrays                  0.1.3
INFO: Computing test dependencies for ContMechTensors...
INFO: Installing DocStringExtensions v0.3.1
INFO: Installing Documenter v0.8.9
INFO: Testing ContMechTensors

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..+(...)".
Use "function Base.broadcast(::typeof(Base.+), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..-(...)".
Use "function Base.broadcast(::typeof(Base.-), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base..*(...)".
Use "function Base.broadcast(::typeof(Base.*), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.

WARNING: deprecated syntax "function Base../(...)".
Use "function Base.broadcast(::typeof(Base./), ...)" instead.
Documenter: setting up build directory.
Documenter: expanding markdown templates.
Documenter: building cross-references.
Documenter: running document checks.
 > checking for missing docstrings.
 > running doctests.
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    E_sym = hessian(ψ, rand(Tensor{2,2}));

> Output Diff (REQUIRES COLOR):

ERROR: MethodError: Cannot `convert` an object of type Int64 to an object of type ForwardDiff.Dual{4,ForwardDiff.Dual{4,Float64}}
The applicable method may be too new: running in world age 20456, while current world is 20481.
This may have arisen from a call to the constructor ForwardDiff.Dual{4,ForwardDiff.Dual{4,Float64}}(...),
since type constructors fall back to convert methods.
Stacktrace:
 [1] promote_matprod(::Type{Float64}, ::Type{ForwardDiff.Dual{4,ForwardDiff.Dual{4,Float64}}}) at /home/vagrant/.julia/v0.6/StaticArrays/src/matrix_multiply.jl:7
 [2] *(...) at /home/vagrant/.julia/v0.6/StaticArrays/src/matrix_multiply.jl:135
 [3] macro expansion at /home/vagrant/.julia/v0.6/StaticArrays/src/matrix_multiply.jl:21 [inlined]
 [4] Ac_mul_B at /home/vagrant/.julia/v0.6/StaticArrays/src/matrix_multiply.jl:19 [inlined]
 [5] dcontract(::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{4,ForwardDiff.Dual{4,Float64}},4}, ::ContMechTensors.Tensor{4,2,Float64,16}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/tensor_products.jl:39
 [6] ψ(::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{4,ForwardDiff.Dual{4,Float64}},4}) at ./none:1
 [7] gradient(::#ψ, ::ContMechTensors.Tensor{2,2,ForwardDiff.Dual{4,Float64},4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:314 (repeats 2 times)
 [8] hessian(::#ψ, ::ContMechTensors.Tensor{2,2,Float64,4}) at /home/vagrant/.julia/v0.6/ContMechTensors/src/automatic_differentiation.jl:

=====[End Error]===============================
=====[Test Error]==============================

> File: src/man/automatic_differentiation.md

> Code block:

```jldoctest
julia> E = rand(Tensor{4,2});

julia> ψ(ϵ) = 1/2 * ϵ ⊡ E ⊡ ϵ;

julia> E_sym = hessian(ψ, rand(Tensor{2,2}));

julia> norm(majorsymmetric(E) - E_sym)
0.0
```

> Subexpression:

    norm(majorsymmetric(E) - E_sym)

> Output Diff (REQUIRES COLOR):

0.0ERROR: UndefVarError: E_sym not defined

=====[End Error]===============================
 > checking footnote links.
Documenter: populating indices.
ERROR: LoadError: LoadError: `makedocs` encountered an error. Terminating build
Stacktrace:
 [1] runner(::Type{Documenter.Builder.RenderDocument}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.6/Documenter/src/Builder.jl:202
 [2] dispatch(::Type{Documenter.Builder.DocumentPipeline}, ::Documenter.Documents.Document) at /home/vagrant/.julia/v0.6/Documenter/src/Selectors.jl:164
 [3] cd(::Documenter.##2#3{Documenter.Documents.Document}, ::String) at ./file.jl:69
 [4] #makedocs#1(::Bool, ::Array{Any,1}, ::Function) at /home/vagrant/.julia/v0.6/Documenter/src/Documenter.jl:159
 [5] (::Documenter.#kw##makedocs)(::Array{Any,1}, ::Documenter.#makedocs) at ./<missing>:0
 [6] include_from_node1(::String) at ./loading.jl:532
 [7] include(::String) at ./sysimg.jl:14
 [8] include_from_node1(::String) at ./loading.jl:532
 [9] include(::String) at ./sysimg.jl:14
 [10] process_options(::Base.JLOptions) at ./client.jl:298
 [11] _start() at ./client.jl:364
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/../docs/make.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl, in expression starting on line 2
===========================[ ERROR: ContMechTensors ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/ContMechTensors/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing DocStringExtensions v0.3.1
INFO: Removing Documenter v0.8.9
ERROR: ContMechTensors had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [9] eval(::Module, ::Any) at ./boot.jl:236
 [10] process_options(::Base.JLOptions) at ./client.jl:275
 [11] _start() at ./client.jl:364

>>> End of log
