>>> 'Pkg.add("KernelDensity")' log
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.2.0
INFO: Installing DiffBase v0.0.4
INFO: Installing Distributions v0.12.0
INFO: Installing ForwardDiff v0.3.4
INFO: Installing Interpolations v0.3.6
INFO: Installing KernelDensity v0.3.0
INFO: Installing LineSearches v0.1.5
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.4
INFO: Installing PDMats v0.5.4
INFO: Installing PositiveFactorizations v0.0.4
INFO: Installing QuadGK v0.1.1
INFO: Installing Ratios v0.0.4
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.0
INFO: Installing StatsBase v0.13.0
INFO: Installing StatsFuns v0.4.0
INFO: Installing URIParser v0.1.8
INFO: Installing WoodburyMatrices v0.2.1
INFO: Building Rmath
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of KernelDensity
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KernelDensity")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1369.96875 MB free)
Uptime: 44073.0 sec
Load Avg:  0.87451171875  0.93359375  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    2697006 s       7304 s     213648 s     909061 s         60 s
#2  3500 MHz     834429 s        769 s     110684 s    3349902 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.2
 - KernelDensity                 0.3.0
25 additional packages:
 - AxisAlgorithms                0.1.5
 - BinDeps                       0.4.5
 - Calculus                      0.2.0
 - Compat                        0.14.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.2
 - DiffBase                      0.0.4
 - Distributions                 0.12.0
 - DocOpt                        0.2.0
 - ForwardDiff                   0.3.4
 - Interpolations                0.3.6
 - LineSearches                  0.1.5
 - NaNMath                       0.2.2
 - Optim                         0.7.4
 - PDMats                        0.5.4
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - PositiveFactorizations        0.0.4
 - QuadGK                        0.1.1
 - Ratios                        0.0.4
 - Rmath                         0.1.6
 - SHA                           0.3.0
 - StatsBase                     0.13.0
 - StatsFuns                     0.4.0
 - URIParser                     0.1.8
 - WoodburyMatrices              0.2.1
INFO: Testing KernelDensity
Running tests:
 * univariate.jl
ERROR: LoadError: LoadError: ArgumentError: Normal: the condition σ > zero(σ) is not satisfied.
 in macro expansion at /home/vagrant/.julia/v0.5/Distributions/src/utils.jl:6 [inlined]
 in Type at /home/vagrant/.julia/v0.5/Distributions/src/univariate/continuous/normal.jl:28 [inlined]
 in Type at /home/vagrant/.julia/v0.5/Distributions/src/univariate/continuous/normal.jl:32 [inlined]
 in kernel_dist(::Type{Distributions.Normal}, ::Float64) at /home/vagrant/.julia/v0.5/KernelDensity/src/univariate.jl:8
 in #kde_lscv#4(::Type{T}, ::Tuple{Float64,Float64}, ::Function, ::Array{Float64,1}, ::FloatRange{Float64}) at /home/vagrant/.julia/v0.5/KernelDensity/src/univariate.jl:178
 in (::KernelDensity.#kw##kde_lscv)(::Array{Any,1}, ::KernelDensity.#kde_lscv, ::Array{Float64,1}, ::FloatRange{Float64}) at ./<missing>:0
 in #kde_lscv#7(::Tuple{Float64,Float64}, ::Int64, ::Type{T}, ::Tuple{Float64,Float64}, ::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/KernelDensity/src/univariate.jl:200
 in macro expansion; at /home/vagrant/.julia/v0.5/KernelDensity/test/univariate.jl:50 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/KernelDensity/test/runtests.jl:12 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/KernelDensity/test/univariate.jl, in expression starting on line 17
while loading /home/vagrant/.julia/v0.5/KernelDensity/test/runtests.jl, in expression starting on line 9
============================[ ERROR: KernelDensity ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/KernelDensity/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: KernelDensity had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
