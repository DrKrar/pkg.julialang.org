>>> 'Pkg.add("ASTInterpreter")' log
INFO: Cloning cache of ASTInterpreter from https://github.com/Keno/ASTInterpreter.jl.git
INFO: Cloning cache of JuliaParser from https://github.com/JuliaLang/JuliaParser.jl.git
INFO: Installing ASTInterpreter v0.0.3
INFO: Installing AbstractTrees v0.0.3
INFO: Installing JuliaParser v0.7.3
INFO: Package database updated

>>> 'Pkg.test("ASTInterpreter")' log
Julia Version 0.5.0-dev+5081
Commit e5b5a09* (2016-07-02 00:34 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for ASTInterpreter...
INFO: Cloning cache of Reactive from https://github.com/JuliaLang/Reactive.jl.git
INFO: Cloning cache of TerminalUI from https://github.com/Keno/TerminalUI.jl.git
INFO: Cloning cache of VT100 from https://github.com/Keno/VT100.jl.git
INFO: Installing ColorTypes v0.2.3
INFO: Installing Colors v0.6.5
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing Reactive v0.3.3
INFO: Installing Reexport v0.0.3
INFO: Installing TerminalUI v0.0.1
INFO: Installing VT100 v0.0.1
INFO: Testing ASTInterpreter
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/VT100/src/VT100.jl:114
WARNING: Base.UTF8String is deprecated, use String instead.
  likely near /home/vagrant/.julia/v0.5/VT100/src/VT100.jl:227
WARNING: `@unix_only` is deprecated, use `@static if is_unix()` instead
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in @unix_only(::Any) at ./deprecated.jl:532
 in include_from_node1(::String) at ./loading.jl:426
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/VT100/src/VT100.jl, in expression starting on line 481

WARNING: deprecated syntax "call(::Type{Signal{T}}, ...)".
Use "(::Type{Signal{T}})(...)" instead.
WARNING: could not import REPL.MIRepl into TerminalUI

WARNING: deprecated syntax "[a=>b for (a,b) in c]".
Use "Dict(a=>b for (a,b) in c)" instead.
[1m[31mERROR: LoadError: LoadError: MethodError: no method matching ASTInterpreter.InterpreterState(::ASTInterpreter.Interpreter, ::ASTInterpreter.Interpreter, ::Int64, ::DummyState)[0m
Closest candidates are:
  ASTInterpreter.InterpreterState(::Any, ::Any, ::Any, ::Any, [1m[31m::Any[0m, [1m[31m::Any[0m)
  ASTInterpreter.InterpreterState{T}(::Any)[0m
 in step_through(::ASTInterpreter.Interpreter) at /home/vagrant/.julia/v0.5/ASTInterpreter/test/stepping.jl:8
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ASTInterpreter/test/stepping.jl, in expression starting on line 15
while loading /home/vagrant/.julia/v0.5/ASTInterpreter/test/runtests.jl, in expression starting on line 6
[0m===========================[ ERROR: ASTInterpreter ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/ASTInterpreter/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing ColorTypes v0.2.3
INFO: Removing Colors v0.6.5
INFO: Removing FixedPointNumbers v0.1.3
INFO: Removing Reactive v0.3.3
INFO: Removing Reexport v0.0.3
INFO: Removing TerminalUI v0.0.1
INFO: Removing VT100 v0.0.1
ERROR: ASTInterpreter had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
