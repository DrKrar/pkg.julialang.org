>>> 'Pkg.add("FinancialMarkets")' log
INFO: Cloning cache of FinancialMarkets from https://github.com/imanuelcostigan/FinancialMarkets.jl.git
INFO: Installing ArrayViews v0.6.4
INFO: Installing DataArrays v0.2.20
INFO: Installing DataFrames v0.6.10
INFO: Installing Dates v0.4.4
INFO: Installing Docile v0.5.23
INFO: Installing FinancialMarkets v0.1.1
INFO: Installing GZip v0.2.18
INFO: Installing Reexport v0.0.3
INFO: Installing SortingAlgorithms v0.0.6
INFO: Installing StatsBase v0.7.4
INFO: Installing StatsFuns v0.2.0
INFO: Package database updated

>>> 'Pkg.test("FinancialMarkets")' log
Julia Version 0.5.0-dev+2440
Commit 2bb94d6 (2016-02-01 02:22 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing FinancialMarkets
WARNING: requiring "Dates" in module "Main" did not define a corresponding module.
WARNING: New definition 
    write(GZip.GZipStream, Array{#T<:Any, N<:Any}) at /home/vagrant/.julia/v0.5/GZip/src/GZip.jl:456
is ambiguous with: 
    write(Base.IO, Array{UInt8, N<:Any}) at io.jl:154.
To fix, define 
    write(GZip.GZipStream, Array{UInt8, N<:Any})
before the new definition.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/constants.jl:11.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/constants.jl:27.
Use "Dict(a=>b, ...)" instead.
WARNING: module FinancialMarkets should explicitly import + from Base
WARNING: module FinancialMarkets should explicitly import * from Base
WARNING: module FinancialMarkets should explicitly import - from Base
WARNING: module FinancialMarkets should explicitly import / from Base
WARNING: module FinancialMarkets should explicitly import == from Base
WARNING: module FinancialMarkets should explicitly import != from Base
WARNING: module FinancialMarkets should explicitly import < from Base
WARNING: module FinancialMarkets should explicitly import < from Base
WARNING: module FinancialMarkets should explicitly import <= from Base
WARNING: module FinancialMarkets should explicitly import > from Base
WARNING: module FinancialMarkets should explicitly import >= from Base

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/currencies.jl:55.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/instruments/futures.jl:17.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/instruments/futures.jl:18.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/instruments/futures.jl:19.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/instruments/futures.jl:20.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/instruments/futures.jl:21.
Use "Dict(a=>b, ...)" instead.

WARNING: deprecated syntax "[a=>b, ...]" at /home/vagrant/.julia/v0.5/FinancialMarkets/src/instruments/futures.jl:22.
Use "Dict(a=>b, ...)" instead.
WARNING: 
    Using non-boolean collections with all(itr) is deprecated, use reduce(&, itr) instead.
    If you are using all(map(f, itr)) or all([f(x) for x in itr]), use all(f, itr) instead.
 in depwarn(Base.#depwarn, ASCIIString, Symbol) at ./deprecated.jl:64
 in nonboolean_all(Base.#nonboolean_all, Array{Any,1}) at ./deprecated.jl:814
 in all(Base.#all, Array{Any,1}) at ./reduce.jl:370
 [inlined code] from ./boot.jl:331
 in isgood(FinancialMarkets.#isgood, Date, FinancialMarkets.JointFCalendar) at /home/vagrant/.julia/v0.5/FinancialMarkets/src/calendars.jl:33
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in process_options at ./client.jl:244
 in _start at ./client.jl:300
while loading /home/vagrant/.julia/v0.5/FinancialMarkets/test/test_calendars.jl, in expression starting on line 34
WARNING: 
    Using non-boolean collections with any(itr) is deprecated, use reduce(|, itr) instead.
    If you are using any(map(f, itr)) or any([f(x) for x in itr]), use any(f, itr) instead.
 in depwarn(Base.#depwarn, ASCIIString, Symbol) at ./deprecated.jl:64
 in nonboolean_any(Base.#nonboolean_any, Array{Any,1}) at ./deprecated.jl:808
 in any(Base.#any, Array{Any,1}) at ./reduce.jl:363
 [inlined code] from ./boot.jl:331
 in isgood(FinancialMarkets.#isgood, Date, FinancialMarkets.JointFCalendar) at /home/vagrant/.julia/v0.5/FinancialMarkets/src/calendars.jl:33
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in process_options at ./client.jl:244
 in _start at ./client.jl:300
while loading /home/vagrant/.julia/v0.5/FinancialMarkets/test/test_calendars.jl, in expression starting on line 35
WARNING: both FinancialMarkets and Dates export "adjust"; uses of it in module Main must be qualified
Error During Test
  Test threw an exception of type UndefVarError
  Expression: adjust(Date(2011,8,18),Unadjusted()) == Date(2011,8,18)
  UndefVarError: adjust not defined
   in include at ./boot.jl:264
   in include_from_node1 at ./loading.jl:417
   in include at ./boot.jl:264
   in include_from_node1 at ./loading.jl:417
   in process_options at ./client.jl:244
   in _start at ./client.jl:300
ERROR: LoadError: LoadError: There was an error during testing
 in record(Base.Test.#record, Base.Test.FallbackTestSet, Base.Test.Error) at ./test.jl:317
 in do_test(Base.Test.#do_test, Base.Test.Threw, Expr) at ./test.jl:215
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in include at ./boot.jl:264
 in include_from_node1 at ./loading.jl:417
 in process_options at ./client.jl:244
 in _start at ./client.jl:300
while loading /home/vagrant/.julia/v0.5/FinancialMarkets/test/test_business_day_conventions.jl, in expression starting on line 3
while loading /home/vagrant/.julia/v0.5/FinancialMarkets/test/runtests.jl, in expression starting on line 15
==========================[ ERROR: FinancialMarkets ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/FinancialMarkets/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("FinancialMarkets had test errors")
 in #test#55(Base.Pkg.Entry.##test#55, Bool, Any, Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in #2(Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}) at ./pkg/dir.jl:31
 in cd(Base.Filesystem.#cd, Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, UTF8String) at ./file.jl:47
 in #cd#1(Base.Pkg.Dir.##cd#1, Array{Any,1}, Any, Any, Array{AbstractString,1}, Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(Base.Pkg.##test#4, Bool, Any, ASCIIString, Vararg{ASCIIString}) at ./pkg.jl:228
 in eval at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options at ./client.jl:221
 in _start at ./client.jl:300

>>> End of log
