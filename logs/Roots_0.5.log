>>> 'Pkg.add("Roots")' log
INFO: Installing Calculus v0.2.2
INFO: Installing Combinatorics v0.4.0
INFO: Installing DiffBase v0.1.0
INFO: Installing ForwardDiff v0.4.1
INFO: Installing Iterators v0.3.0
INFO: Installing NaNMath v0.2.4
INFO: Installing PolynomialFactors v0.0.4
INFO: Installing Polynomials v0.1.4
INFO: Installing Primes v0.1.3
INFO: Installing Roots v0.3.0
INFO: Installing SpecialFunctions v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Roots
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Roots")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1048.78125 MB free)
Uptime: 25740.0 sec
Load Avg:  1.0439453125  1.28173828125  1.1845703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1499790 s       3530 s     138962 s     630386 s         81 s
#2  3499 MHz     511945 s       3191 s      73214 s    1908896 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - Roots                         0.3.0
11 additional packages:
 - Calculus                      0.2.2
 - Combinatorics                 0.4.0
 - Compat                        0.21.0
 - DiffBase                      0.1.0
 - ForwardDiff                   0.4.1
 - Iterators                     0.3.0
 - NaNMath                       0.2.4
 - PolynomialFactors             0.0.4
 - Polynomials                   0.1.4
 - Primes                        0.1.3
 - SpecialFunctions              0.1.1
INFO: Testing Roots
ERROR: LoadError: LoadError: MethodError: no method matching Polynomials.Poly{T}(::Array{Polynomials.Poly{Float64},1}, ::Symbol)
Closest candidates are:
  Polynomials.Poly{T}{T<:Number}(!Matched::AbstractArray{T<:Number,1}, ::Union{AbstractString,Char,Symbol}) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:78
  Polynomials.Poly{T}(!Matched::Number, ::Union{AbstractString,Char,Symbol}) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:88
  Polynomials.Poly{T}{T}(::Any) at sysimg.jl:53
 in poly(::Array{Polynomials.Poly{Float64},1}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:124
 in precondition(::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.5/Roots/src/Polys/agcd.jl:74
 in #agcd#40(::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.5/Roots/src/Polys/agcd.jl:241
 in (::Roots.#kw##agcd)(::Array{Any,1}, ::Roots.#agcd, ::Polynomials.Poly{Float64}, ::Polynomials.Poly{Float64}) at ./<missing>:0
 in #multroot#52(::Float64, ::Float64, ::Float64, ::Float64, ::Function, ::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.5/Roots/src/Polys/multroot.jl:168
 in multroot(::Polynomials.Poly{Float64}) at /home/vagrant/.julia/v0.5/Roots/src/Polys/multroot.jl:151
 in #multroot#54(::Array{Any,1}, ::Function, ::Function) at /home/vagrant/.julia/v0.5/Roots/src/Polys/multroot.jl:225
 in multroot(::Function) at /home/vagrant/.julia/v0.5/Roots/src/Polys/multroot.jl:219
 in include_from_node1(::String) at ./loading.jl:488 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:265
 in _start() at ./client.jl:321
while loading /home/vagrant/.julia/v0.5/Roots/test/./tests_multroot.jl, in expression starting on line 7
while loading /home/vagrant/.julia/v0.5/Roots/test/runtests.jl, in expression starting on line 9
================================[ ERROR: Roots ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Roots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Roots had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:749
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:242
 in _start() at ./client.jl:321

>>> End of log
