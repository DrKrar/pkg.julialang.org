>>> 'Pkg.add("Roots")' log
INFO: Installing Docile v0.5.23
INFO: Installing Polynomials v0.0.5
INFO: Installing Roots v0.1.26
INFO: Package database updated

>>> 'Pkg.test("Roots")' log
Julia Version 0.5.0-pre+5637
Commit f578be3 (2016-07-22 22:32 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing Roots
WARNING: symbol is deprecated, use Symbol instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in symbol(::Symbol, ::Vararg{Symbol,N}) at ./deprecated.jl:30
 in Polynomials.Poly{Float64}(::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:71
 in poly(::Array{Float64,1}, ::Symbol) at /home/vagrant/.julia/v0.5/Polynomials/src/Polynomials.jl:100
 in fzeros(::##83#84) at /home/vagrant/.julia/v0.5/Roots/src/Roots.jl:196
 in #fzeros#111(::Array{Any,1}, ::Function, ::Function, ::Array{Float64,1}) at /home/vagrant/.julia/v0.5/Roots/src/Roots.jl:236
 in #fzeros#114(::Array{Any,1}, ::Function, ::Function, ::Int64, ::Irrational{:π}) at /home/vagrant/.julia/v0.5/Roots/src/Roots.jl:242
 in fzeros(::Function, ::Int64, ::Irrational{:π}) at /home/vagrant/.julia/v0.5/Roots/src/Roots.jl:242
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Roots/test/./test_fzero.jl, in expression starting on line 140
ERROR: LoadError: LoadError: UndefVarError: derivative not defined
 in D(::Base.#sin, ::Int64) at /home/vagrant/.julia/v0.5/Roots/src/adiff.jl:21
 in #newton#45(::Array{Any,1}, ::Function, ::Function, ::Int64) at /home/vagrant/.julia/v0.5/Roots/src/newton.jl:79
 in newton(::Function, ::Int64) at /home/vagrant/.julia/v0.5/Roots/src/newton.jl:79
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Roots/test/./test_newton.jl, in expression starting on line 18
while loading /home/vagrant/.julia/v0.5/Roots/test/runtests.jl, in expression starting on line 7
================================[ ERROR: Roots ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Roots/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Roots had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:736
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
