>>> 'Pkg.add("ProtoBuf")' log
INFO: Cloning cache of ProtoBuf from git://github.com/tanmaykm/ProtoBuf.jl.git
INFO: Installing ProtoBuf v0.1.1
INFO: Package database updated

>>> 'Pkg.test("ProtoBuf")' log
Julia Version 0.4.0-dev+6477
Commit dce9d18* (2015-08-02 23:54 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Core(TM) i7-4960HQ CPU @ 2.60GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
INFO: Testing ProtoBuf
WARNING: module ProtoBufTestCodec should explicitly import == from Base
testing enum...
testing int32...
testing int64...
testing uint32...
testing uint64...
testing sint32...
testing sint64...
testing fixed64...
testing sfixed64...
testing fixed32...
testing sfixed32...
testing bool...
testing double...
testing float...
testing string...
testing repeated int64...
testing testing repeated and packed int64...
testing testing repeated string...
testing testing optional fields...
testing testing nested types...
testing testing default values...
testing testing misc functionality...
testing testing enums...
_metacache has 3 items
ObjectIdDict(Any=>ProtoMeta for Any
ProtoBuf.ProtoMetaAttribs[]
,ProtoBufTestCodec.TestStr=>ProtoMeta for ProtoBufTestCodec.TestStr
[ProtoBuf.ProtoMetaAttribs(1,:val,:string,0,false,ASCIIString[""],nothing)]
,ProtoBufTestCodec.TestFilled=>ProtoMeta for ProtoBufTestCodec.TestFilled
[ProtoBuf.ProtoMetaAttribs(1,:fld1,:obj,1,false,Any[],ProtoMeta for ProtoBufTestCodec.TestType
[ProtoBuf.ProtoMetaAttribs(1,:val,:obj,0,false,Any[],ProtoMeta for Any
ProtoBuf.ProtoMetaAttribs[]
)]
),ProtoBuf.ProtoMetaAttribs(2,:fld2,:obj,0,false,Any[],ProtoMeta for ProtoBufTestCodec.TestType
[ProtoBuf.ProtoMetaAttribs(1,:val,:obj,0,false,Any[],ProtoMeta for Any
ProtoBuf.ProtoMetaAttribs[]
)]
)]
)
_fillcache has 0 items
Dict{UInt64,Array{Symbol,1}}()
testing serialization across type versions...
testing utility api methods...
INFO: ProtoBuf tests passed

>>> End of log
