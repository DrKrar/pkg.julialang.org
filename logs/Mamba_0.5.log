>>> 'Pkg.add("Mamba")' log
INFO: Cloning cache of Cairo from https://github.com/JuliaGraphics/Cairo.jl.git
INFO: Cloning cache of Graphs from https://github.com/JuliaArchive/Graphs.jl.git
INFO: Cloning cache of Mamba from https://github.com/brian-j-smith/Mamba.jl.git
INFO: Installing AxisAlgorithms v0.1.5
INFO: Installing BinDeps v0.4.5
INFO: Installing Cairo v0.2.35
INFO: Installing Calculus v0.1.15
INFO: Installing ColorTypes v0.2.12
INFO: Installing Colors v0.6.9
INFO: Installing Compose v0.4.4
INFO: Installing Contour v0.2.0
INFO: Installing DataArrays v0.3.10
INFO: Installing DataFrames v0.8.5
INFO: Installing DataStructures v0.5.0
INFO: Installing DiffBase v0.0.2
INFO: Installing Distances v0.3.2
INFO: Installing Distributions v0.11.1
INFO: Installing FileIO v0.2.1
INFO: Installing FixedPointNumbers v0.2.1
INFO: Installing FixedSizeArrays v0.2.5
INFO: Installing ForwardDiff v0.3.3
INFO: Installing GZip v0.2.20
INFO: Installing Gadfly v0.5.2
INFO: Installing Graphics v0.1.3
INFO: Installing Graphs v0.7.1
INFO: Installing Hexagons v0.0.4
INFO: Installing Hiccup v0.1.1
INFO: Installing Interpolations v0.3.6
INFO: Installing Iterators v0.2.0
INFO: Installing Juno v0.2.5
INFO: Installing KernelDensity v0.3.0
INFO: Installing LineSearches v0.1.3
INFO: Installing Loess v0.1.0
INFO: Installing MacroTools v0.3.4
INFO: Installing Mamba v0.10.0
INFO: Installing Measures v0.0.3
INFO: Installing Media v0.2.4
INFO: Installing NaNMath v0.2.2
INFO: Installing Optim v0.7.3
INFO: Installing PDMats v0.5.2
INFO: Installing PositiveFactorizations v0.0.3
INFO: Installing Ratios v0.0.4
INFO: Installing Reexport v0.0.3
INFO: Installing Rmath v0.1.6
INFO: Installing SHA v0.3.0
INFO: Installing Showoff v0.0.7
INFO: Installing SortingAlgorithms v0.1.0
INFO: Installing StatsBase v0.12.0
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Installing WoodburyMatrices v0.2.1
INFO: Building Cairo
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("Mamba")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (675.125 MB free)
Uptime: 1207.0 sec
Load Avg:  0.9814453125  0.8359375  0.498046875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz      43243 s         69 s       5767 s      60956 s          2 s
#2  3499 MHz       8982 s         82 s       2703 s     107504 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - Mamba                         0.10.0
48 additional packages:
 - AxisAlgorithms                0.1.5
 - BinDeps                       0.4.5
 - Cairo                         0.2.35
 - Calculus                      0.1.15
 - ColorTypes                    0.2.12
 - Colors                        0.6.9
 - Compat                        0.10.0
 - Compose                       0.4.4
 - Contour                       0.2.0
 - DataArrays                    0.3.10
 - DataFrames                    0.8.5
 - DataStructures                0.5.0
 - DiffBase                      0.0.2
 - Distances                     0.3.2
 - Distributions                 0.11.1
 - FileIO                        0.2.1
 - FixedPointNumbers             0.2.1
 - FixedSizeArrays               0.2.5
 - ForwardDiff                   0.3.3
 - GZip                          0.2.20
 - Gadfly                        0.5.2
 - Graphics                      0.1.3
 - Graphs                        0.7.1
 - Hexagons                      0.0.4
 - Hiccup                        0.1.1
 - Interpolations                0.3.6
 - Iterators                     0.2.0
 - Juno                          0.2.5
 - KernelDensity                 0.3.0
 - LineSearches                  0.1.3
 - Loess                         0.1.0
 - MacroTools                    0.3.4
 - Measures                      0.0.3
 - Media                         0.2.4
 - NaNMath                       0.2.2
 - Optim                         0.7.3
 - PDMats                        0.5.2
 - PositiveFactorizations        0.0.3
 - Ratios                        0.0.4
 - Reexport                      0.0.3
 - Rmath                         0.1.6
 - SHA                           0.3.0
 - Showoff                       0.0.7
 - SortingAlgorithms             0.1.0
 - StatsBase                     0.12.0
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
 - WoodburyMatrices              0.2.1
INFO: Testing Mamba
Running tests:

>>> Testing ../doc/tutorial/line.jl

WARNING: Method definition (::Type{Graphs.KeyVertex})(Int64, #K<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:12 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:16.
WARNING: Method definition (::Type{Graphs.Edge})(Int64, #V<:Any, #V<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:54 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:60.
WARNING: Method definition (::Type{Graphs.ExEdge})(Int64, #V<:Any, #V<:Any, Base.Dict{String, Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:72 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:83.
WARNING: Method definition (::Type{Graphs.TargetIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:123 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:127.
WARNING: Method definition (::Type{Graphs.SourceIterator})(#G<:Graphs.AbstractGraph, #EList<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:141 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:145.
WARNING: Method definition edge_property_requirement(Graphs.AbstractEdgePropertyInspector{#T<:Any}, Graphs.AbstractGraph{#V<:Any, E<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:164 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/common.jl:179.
WARNING: Method definition vertex_index(#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, Graphs.GenericGraph{#V<:Union{Graphs.ExVertex, Graphs.KeyVertex}, E<:Any, VList<:Any, EList<:Any, IncList<:Any}) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:65 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/graph.jl:67.
WARNING: Method definition (::Type{Graphs.GDistanceVisitor})(#G<:Graphs.AbstractGraph, #DMap<:Any) in module Graphs at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:107 overwritten at /home/vagrant/.julia/v0.5/Graphs/src/breadth_first_visit.jl:111.
digraph Mamba.Model {
	"y" [shape="ellipse", style="filled", fillcolor="gray85"];
	"mu" [shape="diamond", style="filled", fillcolor="gray85"];
		"mu" -> "y";
	"s2" [shape="ellipse"];
		"s2" -> "y";
	"beta" [shape="ellipse"];
		"beta" -> "mu";
	"xmat" [shape="box", style="filled", fillcolor="gray85"];
		"xmat" -> "mu";
}
MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:29:48 of 0:29:50 remaining]
Chain 1:  10% [0:00:45 of 0:00:51 remaining]
Chain 1:  20% [0:00:30 of 0:00:38 remaining]
Chain 1:  30% [0:00:22 of 0:00:31 remaining]
Chain 1:  40% [0:00:17 of 0:00:28 remaining]
Chain 1:  50% [0:00:14 of 0:00:27 remaining]
Chain 1:  60% [0:00:10 of 0:00:26 remaining]
Chain 1:  70% [0:00:08 of 0:00:25 remaining]
Chain 1:  80% [0:00:05 of 0:00:24 remaining]
Chain 1:  90% [0:00:02 of 0:00:24 remaining]
Chain 1: 100% [0:00:00 of 0:00:24 remaining]

Chain 2:   0% [0:00:16 of 0:00:16 remaining]
Chain 2:  10% [0:00:14 of 0:00:15 remaining]
Chain 2:  20% [0:00:13 of 0:00:16 remaining]
Chain 2:  30% [0:00:11 of 0:00:15 remaining]
Chain 2:  40% [0:00:09 of 0:00:15 remaining]
Chain 2:  50% [0:00:08 of 0:00:17 remaining]
Chain 2:  60% [0:00:07 of 0:00:17 remaining]
Chain 2:  70% [0:00:05 of 0:00:17 remaining]
Chain 2:  80% [0:00:03 of 0:00:16 remaining]
Chain 2:  90% [0:00:02 of 0:00:17 remaining]
Chain 2: 100% [0:00:00 of 0:00:18 remaining]

Chain 3:   0% [0:00:10 of 0:00:10 remaining]
Chain 3:  10% [0:00:13 of 0:00:15 remaining]
Chain 3:  20% [0:00:10 of 0:00:13 remaining]
Chain 3:  30% [0:00:09 of 0:00:13 remaining]
Chain 3:  40% [0:00:08 of 0:00:13 remaining]
Chain 3:  50% [0:00:07 of 0:00:14 remaining]
Chain 3:  60% [0:00:06 of 0:00:14 remaining]
Chain 3:  70% [0:00:04 of 0:00:15 remaining]
Chain 3:  80% [0:00:03 of 0:00:15 remaining]
Chain 3:  90% [0:00:01 of 0:00:14 remaining]
Chain 3: 100% [0:00:00 of 0:00:15 remaining]

MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:00:52 of 0:00:52 remaining]
Chain 1:  10% [0:00:27 of 0:00:30 remaining]
Chain 1:  20% [0:00:22 of 0:00:27 remaining]
Chain 1:  30% [0:00:18 of 0:00:26 remaining]
Chain 1:  40% [0:00:16 of 0:00:26 remaining]
Chain 1:  50% [0:00:13 of 0:00:26 remaining]
Chain 1:  60% [0:00:10 of 0:00:26 remaining]
Chain 1:  70% [0:00:08 of 0:00:25 remaining]
Chain 1:  80% [0:00:05 of 0:00:25 remaining]
Chain 1:  90% [0:00:02 of 0:00:24 remaining]
Chain 1: 100% [0:00:00 of 0:00:24 remaining]

Chain 2:   0% [0:00:29 of 0:00:29 remaining]
Chain 2:  10% [0:00:26 of 0:00:29 remaining]
Chain 2:  20% [0:00:24 of 0:00:30 remaining]
Chain 2:  30% [0:00:21 of 0:00:30 remaining]
Chain 2:  40% [0:00:17 of 0:00:28 remaining]
Chain 2:  50% [0:00:14 of 0:00:27 remaining]
Chain 2:  60% [0:00:11 of 0:00:26 remaining]
Chain 2:  70% [0:00:08 of 0:00:27 remaining]
Chain 2:  80% [0:00:05 of 0:00:26 remaining]
Chain 2:  90% [0:00:03 of 0:00:26 remaining]
Chain 2: 100% [0:00:00 of 0:00:26 remaining]

Chain 3:   0% [0:00:33 of 0:00:33 remaining]
Chain 3:  10% [0:00:15 of 0:00:17 remaining]
Chain 3:  20% [0:00:12 of 0:00:15 remaining]
Chain 3:  30% [0:00:10 of 0:00:15 remaining]
Chain 3:  40% [0:00:09 of 0:00:15 remaining]
Chain 3:  50% [0:00:08 of 0:00:16 remaining]
Chain 3:  60% [0:00:06 of 0:00:16 remaining]
Chain 3:  70% [0:00:05 of 0:00:16 remaining]
Chain 3:  80% [0:00:03 of 0:00:15 remaining]
Chain 3:  90% [0:00:02 of 0:00:15 remaining]
Chain 3: 100% [0:00:00 of 0:00:15 remaining]

MCMC Simulation of 10000 Iterations x 3 Chains...

Chain 1:   0% [0:25:37 of 0:25:38 remaining]
Chain 1:  10% [0:00:15 of 0:00:16 remaining]
Chain 1:  20% [0:00:07 of 0:00:09 remaining]
Chain 1:  30% [0:00:04 of 0:00:06 remaining]
Chain 1:  40% [0:00:03 of 0:00:05 remaining]
Chain 1:  50% [0:00:02 of 0:00:04 remaining]
Chain 1:  60% [0:00:02 of 0:00:04 remaining]
Chain 1:  70% [0:00:01 of 0:00:04 remaining]
Chain 1:  80% [0:00:01 of 0:00:04 remaining]
Chain 1:  90% [0:00:00 of 0:00:03 remaining]
Chain 1: 100% [0:00:00 of 0:00:03 remaining]

Chain 2:   0% [0:00:01 of 0:00:01 remaining]
Chain 2:  10% [0:00:01 of 0:00:01 remaining]
Chain 2:  20% [0:00:01 of 0:00:02 remaining]
Chain 2:  30% [0:00:01 of 0:00:02 remaining]
Chain 2:  40% [0:00:01 of 0:00:02 remaining]
Chain 2:  50% [0:00:01 of 0:00:02 remaining]
Chain 2:  60% [0:00:01 of 0:00:02 remaining]
Chain 2:  70% [0:00:01 of 0:00:02 remaining]
Chain 2:  80% [0:00:00 of 0:00:02 remaining]
Chain 2:  90% [0:00:00 of 0:00:02 remaining]
Chain 2: 100% [0:00:00 of 0:00:02 remaining]

Chain 3:   0% [0:00:02 of 0:00:02 remaining]
Chain 3:  10% [0:00:02 of 0:00:02 remaining]
Chain 3:  20% [0:00:02 of 0:00:02 remaining]
Chain 3:  30% [0:00:01 of 0:00:02 remaining]
Chain 3:  40% [0:00:01 of 0:00:02 remaining]
Chain 3:  50% [0:00:01 of 0:00:02 remaining]
Chain 3:  60% [0:00:01 of 0:00:02 remaining]
Chain 3:  70% [0:00:01 of 0:00:02 remaining]
Chain 3:  80% [0:00:00 of 0:00:02 remaining]
Chain 3:  90% [0:00:00 of 0:00:02 remaining]
Chain 3: 100% [0:00:00 of 0:00:02 remaining]

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Gelman, Rubin, and Brooks Diagnostic:
              PSRF 97.5%
     beta[1] 1.009 1.010
     beta[2] 1.009 1.010
          s2 1.008 1.016
Multivariate 1.006   NaN

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Geweke Diagnostic:
First Window Fraction = 0.1
Second Window Fraction = 0.5

        Z-score p-value
beta[1]   1.237  0.2162
beta[2]  -1.568  0.1168
     s2   1.710  0.0872

        Z-score p-value
beta[1]  -1.457  0.1452
beta[2]   1.752  0.0797
     s2  -1.428  0.1534

        Z-score p-value
beta[1]   0.550  0.5824
beta[2]  -0.440  0.6597
     s2   0.583  0.5596

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Heidelberger and Welch Diagnostic:
Target Halfwidth Ratio = 0.1
Alpha = 0.05

        Burn-in Stationarity p-value    Mean     Halfwidth  Test
beta[1]     251            1  0.0680 0.57366275 0.053311283    1
beta[2]     738            1  0.0677 0.81285744 0.015404173    1
     s2     738            1  0.0700 1.00825202 0.094300432    1

        Burn-in Stationarity p-value    Mean     Halfwidth  Test
beta[1]     251            1  0.1356  0.6293320 0.065092099    0
beta[2]     251            1  0.0711  0.7934633 0.019215278    1
     s2     251            1  0.4435  1.4635400 0.588158612    0

        Burn-in Stationarity p-value    Mean     Halfwidth  Test
beta[1]     251            1  0.0515  0.5883602 0.058928034    0
beta[2]    1225            1  0.1479  0.8086080 0.018478999    1
     s2     251            1  0.6664  0.9942853 0.127959523    0

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Raftery and Lewis Diagnostic:
Quantile (q) = 0.025
Accuracy (r) = 0.005
Probability (s) = 0.95

        Thinning Burn-in    Total   Nmin Dependence Factor
beta[1]        2     267      17897 3746         4.7776295
beta[2]        2     267      17897 3746         4.7776295
     s2        2     257       8689 3746         2.3195408

        Thinning Burn-in    Total   Nmin Dependence Factor
beta[1]        4     271 2.1759×10⁴ 3746         5.8085958
beta[2]        4     275 2.8795×10⁴ 3746         7.6868660
     s2        2     257 8.3450×10³ 3746         2.2277096

        Thinning Burn-in    Total   Nmin Dependence Factor
beta[1]        2     269 2.0647×10⁴ 3746         5.5117459
beta[2]        2     263 1.4523×10⁴ 3746         3.8769354
     s2        2     255 7.8770×10³ 3746         2.1027763

Iterations = 252:10000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 4875

Empirical Posterior Estimates:
           Mean       SD       Naive SE       MCSE       ESS   
beta[1] 0.5971183 1.14894446 0.0095006014 0.016925598 4607.9743
beta[2] 0.8017036 0.34632566 0.0028637608 0.004793345 4875.0000
     s2 1.2203777 2.00876760 0.0166104638 0.101798287  389.3843

Quantiles:
            2.5%       25.0%       50.0%     75.0%     97.5%  
beta[1] -1.74343373 0.026573102 0.59122696 1.1878720 2.8308472
beta[2]  0.12168742 0.628297573 0.80357822 0.9719441 1.5051573
     s2  0.17091385 0.383671702 0.65371989 1.2206381 6.0313970

         95% Lower  95% Upper
beta[1] -1.75436235 2.8109571
beta[2]  0.09721501 1.4733163
     s2  0.08338409 3.8706865

           beta[1]      beta[2]        s2     
beta[1]  1.000000000 -0.905245029  0.027467317
beta[2] -0.905245029  1.000000000 -0.024489462
     s2  0.027467317 -0.024489462  1.000000000

           Lag 2       Lag 10        Lag 20       Lag 100   
beta[1] 0.24521566  -0.021411797 -0.0077424153  -0.044989417
beta[2] 0.20402485  -0.019107846  0.0033980453  -0.053869216
     s2 0.85931351   0.568056917  0.3248136852   0.024157524

           Lag 2       Lag 10        Lag 20       Lag 100   
beta[1] 0.28180489  -0.031007672    0.03930888  0.0394895028
beta[2] 0.25905976  -0.017946010    0.03613043  0.0227758214
     s2 0.92905843   0.761339226    0.58455868  0.0050215824

           Lag 2       Lag 10        Lag 20       Lag 100   
beta[1] 0.38634357 -0.0029361782  -0.032310111  0.0028806786
beta[2] 0.32822879 -0.0056670786  -0.020100663 -0.0062622517
     s2 0.68812720  0.2420402859   0.080495078 -0.0290205896

             Change Rate
     beta[1]       0.844
     beta[2]       0.844
          s2       1.000
Multivariate       1.000

MCMC Processing of 4875 Iterations x 3 Chains...

Chain 1:   0% [0:02:11 of 0:02:12 remaining]
Chain 1:  10% [0:00:03 of 0:00:03 remaining]
Chain 1:  20% [0:00:01 of 0:00:02 remaining]
Chain 1:  30% [0:00:01 of 0:00:01 remaining]
Chain 1:  40% [0:00:01 of 0:00:01 remaining]
Chain 1:  50% [0:00:00 of 0:00:01 remaining]
Chain 1:  60% [0:00:00 of 0:00:01 remaining]
Chain 1:  70% [0:00:00 of 0:00:01 remaining]
Chain 1:  80% [0:00:00 of 0:00:01 remaining]
Chain 1:  90% [0:00:00 of 0:00:01 remaining]
Chain 1: 100% [0:00:00 of 0:00:01 remaining]

Chain 2:   0% [0:04:10 of 0:04:11 remaining]
Chain 2:  10% [0:00:05 of 0:00:05 remaining]
Chain 2:  20% [0:00:02 of 0:00:03 remaining]
Chain 2:  30% [0:00:01 of 0:00:02 remaining]
Chain 2:  40% [0:00:01 of 0:00:02 remaining]
Chain 2:  50% [0:00:01 of 0:00:01 remaining]
Chain 2:  60% [0:00:00 of 0:00:01 remaining]
Chain 2:  70% [0:00:00 of 0:00:01 remaining]
Chain 2:  80% [0:00:00 of 0:00:01 remaining]
Chain 2:  90% [0:00:00 of 0:00:01 remaining]
Chain 2: 100% [0:00:00 of 0:00:01 remaining]

Chain 3:   0% [0:06:15 of 0:06:15 remaining]
Chain 3:  10% [0:00:07 of 0:00:08 remaining]
Chain 3:  20% [0:00:03 of 0:00:04 remaining]
Chain 3:  30% [0:00:02 of 0:00:03 remaining]
Chain 3:  40% [0:00:01 of 0:00:02 remaining]
Chain 3:  50% [0:00:01 of 0:00:02 remaining]
Chain 3:  60% [0:00:01 of 0:00:02 remaining]
Chain 3:  70% [0:00:00 of 0:00:01 remaining]
Chain 3:  80% [0:00:00 of 0:00:01 remaining]
Chain 3:  90% [0:00:00 of 0:00:01 remaining]
Chain 3: 100% [0:00:00 of 0:00:01 remaining]

      DIC    Effective Parameters
pD 13.828540            1.1661193
pV 22.624104            5.5639015

Iterations = 1000:5000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 2001

Empirical Posterior Estimates:
           Mean        SD      Naive SE      MCSE       ESS   
beta[1] 0.62445845 1.0285709 0.013275474 0.023818436 1864.8416
beta[2] 0.79392648 0.3096614 0.003996712 0.006516677 2001.0000

Quantiles:
            2.5%       25.0%       50.0%     75.0%     97.5%  
beta[1] -1.53050898 0.076745702 0.61120944 1.2174641 2.6906753
beta[2]  0.18846617 0.618849048 0.79323126 0.9619767 1.4502109

MCMC Simulation of 5000 Iterations x 3 Chains...

Chain 1:   0% [0:00:14 of 0:00:14 remaining]
Chain 1:  10% [0:00:09 of 0:00:10 remaining]
Chain 1:  20% [0:00:08 of 0:00:10 remaining]
Chain 1:  30% [0:00:07 of 0:00:10 remaining]
Chain 1:  40% [0:00:06 of 0:00:10 remaining]
Chain 1:  50% [0:00:05 of 0:00:10 remaining]
Chain 1:  60% [0:00:04 of 0:00:10 remaining]
Chain 1:  70% [0:00:03 of 0:00:10 remaining]
Chain 1:  80% [0:00:02 of 0:00:09 remaining]
Chain 1:  90% [0:00:01 of 0:00:09 remaining]
Chain 1: 100% [0:00:00 of 0:00:10 remaining]

Chain 2:   0% [0:00:16 of 0:00:16 remaining]
Chain 2:  10% [0:00:09 of 0:00:10 remaining]
Chain 2:  20% [0:00:07 of 0:00:09 remaining]
Chain 2:  30% [0:00:06 of 0:00:09 remaining]
Chain 2:  40% [0:00:06 of 0:00:09 remaining]
Chain 2:  50% [0:00:05 of 0:00:09 remaining]
Chain 2:  60% [0:00:03 of 0:00:09 remaining]
Chain 2:  70% [0:00:02 of 0:00:08 remaining]
Chain 2:  80% [0:00:02 of 0:00:08 remaining]
Chain 2:  90% [0:00:01 of 0:00:08 remaining]
Chain 2: 100% [0:00:00 of 0:00:08 remaining]

Chain 3:   0% [0:00:03 of 0:00:03 remaining]
Chain 3:  10% [0:00:05 of 0:00:05 remaining]
Chain 3:  20% [0:00:04 of 0:00:05 remaining]
Chain 3:  30% [0:00:04 of 0:00:05 remaining]
Chain 3:  40% [0:00:04 of 0:00:06 remaining]
Chain 3:  50% [0:00:03 of 0:00:06 remaining]
Chain 3:  60% [0:00:03 of 0:00:07 remaining]
Chain 3:  70% [0:00:02 of 0:00:07 remaining]
Chain 3:  80% [0:00:01 of 0:00:07 remaining]
Chain 3:  90% [0:00:01 of 0:00:08 remaining]
Chain 3: 100% [0:00:00 of 0:00:07 remaining]

Iterations = 252:15000
Thinning interval = 2
Chains = 1,2,3
Samples per chain = 7375

Empirical Posterior Estimates:
           Mean        SD      Naive SE       MCSE        ESS   
beta[1] 0.59655228 1.1225920 0.0075471034 0.014053505 6380.79199
beta[2] 0.80144540 0.3395731 0.0022829250 0.003954871 7372.28048
     s2 1.18366563 1.8163096 0.0122109158 0.070481708  664.08995

Quantiles:
            2.5%       25.0%       50.0%     75.0%     97.5%  
beta[1] -1.70512374 0.031582137 0.58989089 1.1783924 2.8253668
beta[2]  0.12399073 0.630638800 0.80358526 0.9703569 1.4939817
     s2  0.17075261 0.382963160 0.65372440 1.2210168 5.7449800

ERROR: LoadError: LoadError: MethodError: no method matching push!(::Gadfly.Guide.##86#91, ::Tuple{Array{Compose.Context,1},Int64})
Closest candidates are:
  push!(::Any, ::Any, !Matched::Any) at abstractarray.jl:1715
  push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at abstractarray.jl:1716
  push!(!Matched::Array{Any,1}, ::ANY) at array.jl:486
  ...
 in layout_guides(::Compose.Context, ::Gadfly.Coord.Cartesian, ::Gadfly.Theme, ::Gadfly.Guide.PositionedGuide, ::Vararg{Gadfly.Guide.PositionedGuide,N}) at /home/vagrant/.julia/v0.5/Gadfly/src/guide.jl:1119
 in #render_prepared#111(::Bool, ::Bool, ::Function, ::Gadfly.Plot, ::Gadfly.Coord.Cartesian, ::Gadfly.Aesthetics, ::Array{Gadfly.Aesthetics,1}, ::Array{Array{Gadfly.StatisticElement,1},1}, ::Array{Array{Gadfly.Aesthetics,1},1}, ::Array{Array{Gadfly.Data,1},1}, ::Dict{Symbol,Gadfly.ScaleElement}, ::Array{Gadfly.GuideElement,1}) at /home/vagrant/.julia/v0.5/Gadfly/src/Gadfly.jl:901
 in render_prepared(::Gadfly.Plot, ::Gadfly.Coord.Cartesian, ::Gadfly.Aesthetics, ::Array{Gadfly.Aesthetics,1}, ::Array{Array{Gadfly.StatisticElement,1},1}, ::Array{Array{Gadfly.Aesthetics,1},1}, ::Array{Array{Gadfly.Data,1},1}, ::Dict{Symbol,Gadfly.ScaleElement}, ::Array{Gadfly.GuideElement,1}) at /home/vagrant/.julia/v0.5/Gadfly/src/Gadfly.jl:875
 in render(::Gadfly.Plot) at /home/vagrant/.julia/v0.5/Gadfly/src/Gadfly.jl:821
 in #draw#121(::Symbol, ::String, ::Measures.Length{:mm,Float64}, ::Measures.Length{:mm,Float64}, ::Int64, ::Int64, ::Bool, ::Bool, ::Compose.#draw, ::Array{Gadfly.Plot,2}) at /home/vagrant/.julia/v0.5/Mamba/src/output/plot.jl:45
 in (::Compose.#kw##draw)(::Array{Any,1}, ::Compose.#draw, ::Array{Gadfly.Plot,2}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/Mamba/test/utils.jl:5 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/Mamba/test/runtests.jl:35 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Mamba/test/../doc/tutorial/line.jl, in expression starting on line 156
while loading /home/vagrant/.julia/v0.5/Mamba/test/runtests.jl, in expression starting on line 33
================================[ ERROR: Mamba ]================================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/Mamba/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Mamba had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
