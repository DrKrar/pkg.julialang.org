>>> 'Pkg.add("COBRA")' log
INFO: Cloning cache of COBRA from https://github.com/opencobra/COBRA.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing BufferedStreams v0.2.0
INFO: Installing COBRA v0.0.3
INFO: Installing Cbc v0.3.0
INFO: Installing Clp v0.3.0
INFO: Installing HDF5 v0.7.0
INFO: Installing Libz v0.2.0
INFO: Installing MAT v0.3.1
INFO: Installing MathProgBase v0.5.8
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Blosc
INFO: Building HDF5
INFO: Building Cbc
INFO: Package database updated

>>> 'Pkg.test("COBRA")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (931.29296875 MB free)
Uptime: 13623.0 sec
Load Avg:  0.91796875  0.98681640625  1.03271484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     750492 s       1153 s      87928 s     363055 s         23 s
#2  3500 MHz     283683 s       5694 s      50162 s     977744 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - COBRA                         0.0.3
 - JSON                          0.8.0
12 additional packages:
 - BinDeps                       0.4.5
 - Blosc                         0.1.7
 - BufferedStreams               0.2.0
 - Cbc                           0.3.0
 - Clp                           0.3.0
 - Compat                        0.9.5
 - HDF5                          0.7.0
 - Libz                          0.2.0
 - MAT                           0.3.1
 - MathProgBase                  0.5.8
 - SHA                           0.3.0
 - URIParser                     0.1.6
INFO: Computing test dependencies for COBRA...
INFO: Cloning cache of GLPK from https://github.com/JuliaOpt/GLPK.jl.git
INFO: Cloning cache of GLPKMathProgInterface from https://github.com/JuliaOpt/GLPKMathProgInterface.jl.git
INFO: Installing GLPK v0.3.0
INFO: Installing GLPKMathProgInterface v0.2.3
INFO: Building GLPK
INFO: Attempting to Create directory /home/vagrant/.julia/v0.5/GLPK/deps/downloads
INFO: Downloading file http://ftp.gnu.org/gnu/glpk/glpk-4.52.tar.gz
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:00:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:02 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:03 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:04 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:05 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:06 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:07 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:08 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:09 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:10 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:11 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:12 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:13 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:14 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:15 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:16 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:17 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:18 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:19 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:20 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:21 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:22 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:23 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:24 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:25 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:26 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:27 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:28 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:29 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:30 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:31 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:32 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:33 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:34 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:35 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:36 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:37 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:38 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:39 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:40 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:41 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:42 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:43 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:44 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:45 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:46 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:47 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:48 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:49 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:50 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:51 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:52 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:53 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:54 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:55 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:56 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:57 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:58 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:01:59 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:00 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:01 --:--:--     0  0     0    0     0    0     0      0      0 --:--:--  0:02:01 --:--:--     0
curl: (28) Operation too slow. Less than 1 bytes/sec transferred the last 120 seconds
================================[ ERROR: GLPK ]=================================

LoadError: failed process: Process(`curl -f -o /home/vagrant/.julia/v0.5/GLPK/deps/downloads/glpk-4.52.tar.gz -L http://ftp.gnu.org/gnu/glpk/glpk-4.52.tar.gz`, ProcessExited(28)) [28]
while loading /home/vagrant/.julia/v0.5/GLPK/deps/build.jl, in expression starting on line 62

================================================================================

================================[ BUILD ERRORS ]================================

WARNING: GLPK had build errors.

 - packages with build errors remain installed in /home/vagrant/.julia/v0.5
 - build the package(s) and all dependencies with `Pkg.build("GLPK")`
 - build a single package by running its `deps/build.jl` script

================================================================================
INFO: Testing COBRA

 >> Checking the system's configuration ...

Clp is installed.
Package GLPKMathProgInterface is installed but couldn't be loaded. You may need to run `Pkg.build("GLPKMathProgInterface")`
Package Gurobi is not installed. In order to use Gurobi, you must first run `Pkg.add("Gurobi")`
Package CPLEX is not installed. In order to use CPLEX, you must first run `Pkg.add("CPLEX")`
Package Mosek is not installed. In order to use Mosek, you must first run `Pkg.add("Mosek")`
Package Xpress is not installed. In order to use Xpress, you must first run `Pkg.add("Xpress")`

 >> Done. 1 solvers are installed and ready to use.
INFO: Parallel version - Connecting the 4 workers ...
4 local workers are connected. (+1) on host: vagrant-ubuntu-trusty-64
WARNING: Method definition redirect_stdin(Function, Any) in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1600 overwritten in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1600.
WARNING: Method definition isnull(Any) in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1678 overwritten in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1678.
WARNING: Method definition take!(Main.Base.AbstractIOBuffer) in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1698 overwritten in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1698.
WARNING: Method definition redirect_stderr(Function, Any) in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1600 overwritten in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1600.
WARNING: Method definition redirect_stdout(Function, Any) in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1600 overwritten in module Compat at /home/vagrant/.julia/v0.5/Compat/src/Compat.jl:1600.


 -- Running 9 tests using the Clp solver. -- 


Running p_all.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Spliting strategy is 0.
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/p_all.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.93588573354241
 Maximum of minFlux:          32.25826051520999
 Minimum of minFlux:          -35.9848248054978
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           8.08135986328125
 Number of workers:           4
 Solver:                      Clp

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Spliting strategy is 1.
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/p_all.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.93588573354241
 Maximum of minFlux:          32.25826051521
 Minimum of minFlux:          -35.984824805497794
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.8618049621582031
 Number of workers:           4
 Solver:                      Clp

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Spliting strategy is 2.
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [26/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [26/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [26/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [26/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [26/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [26/95].

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/p_all.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.93588573354241
 Maximum of minFlux:          32.25826051521
 Minimum of minFlux:          -35.984824805497794
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.11655497550964355
 Number of workers:           4
 Solver:                      Clp

 >> Size of stoichiometric matrix: (75, 95)

The optPercentage is higher than 90. The solution process might take longer than expected.

preFBA! [osenseStr = max]: objValue = 0.873921, norm(fbaSol) = 106.83731553000719, optPercentage = 100.0.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Spliting strategy is 0.
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
Saving minFlux...Done.
Saving maxFlux...Done.
Saving optSol...Done.
Saving fbaSol...Done.
Saving fvamin...Done.
Saving fvamax...Done.
All available variables saved to /home/vagrant/.julia/v0.5/COBRA/test/testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/p_all.jl
 Original FBA obj.val         0.873921
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -29.175778648733363
 Maximum of minFlux:          29.175845016899988
 Minimum of minFlux:          -45.51380110984009
 Norm of maxFlux:             1414.6680343082185
 Norm of minFlux:             106.83702877970775
 Solution time [s]:           0.1347959041595459
 Number of workers:           4
 Solver:                      Clp

Running p_distinct.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> All 95 reactions of the model will be solved (100 %).

Average load per worker: 24 reactions (4 workers).
Spliting strategy is 0.
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [24/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [24/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [24/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [24/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [23/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [24/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [24/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [23/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Spliting strategy is 0.
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> Only 6 reactions of 95 will be solved (~ 6.315789473684211 %).

Average load per worker: 2 reactions (4 workers).
Spliting strategy is 0.
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [2/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [2/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [1/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [2/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [1/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [2/95].
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [2/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [2/95].
Saving minFlux...Done.
Saving maxFlux...Done.
Saving optSol...Done.
Saving fbaSol...Done.
Saving fvamin...Done.
Saving fvamax...Done.
Saving statussolmin...Done.
Saving statussolmax...Done.
All available variables saved to /home/vagrant/.julia/v0.5/COBRA/test/testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/p_distinct.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          59.38111493729245
 Minimum of maxFlux:          -9.046606133498623
 Maximum of minFlux:          10.0
 Minimum of minFlux:          -34.825579290520025
 Norm of maxFlux:             60.72125242585733
 Norm of minFlux:             36.61982875700649
 Solution time [s]:           0.07788801193237305
 Number of workers:           4
 Solver:                      Clp

Running p_range.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> Only 30 reactions of 95 will be solved (~ 31.57894736842105 %).

Average load per worker: 8 reactions (4 workers).
Spliting strategy is 0.
	From worker 2:	 -- Minimization (iRound = 0). Block 2 [8/95].
	From worker 3:	 -- Minimization (iRound = 0). Block 3 [8/95].
	From worker 4:	 -- Minimization (iRound = 0). Block 4 [8/95].
	From worker 5:	 -- Minimization (iRound = 0). Block 5 [6/95].
	From worker 4:	 -- Maximization (iRound = 1). Block 4 [8/95].
	From worker 3:	 -- Maximization (iRound = 1). Block 3 [8/95].
	From worker 5:	 -- Maximization (iRound = 1). Block 5 [6/95].
	From worker 2:	 -- Maximization (iRound = 1). Block 2 [8/95].
Saving minFlux...Done.
Saving maxFlux...Done.
Saving optSol...Done.
Saving fbaSol...Done.
Saving fvamin...Done.
Saving fvamax...Done.
Saving statussolmin...Done.
Saving statussolmax...Done.
All available variables saved to /home/vagrant/.julia/v0.5/COBRA/test/testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/p_range.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          59.38111493729245
 Minimum of maxFlux:          -15.206494614382432
 Maximum of minFlux:          26.528869396049977
 Minimum of minFlux:          -35.9848248054978
 Norm of maxFlux:             94.10828443271767
 Norm of minFlux:             61.235954976951696
 Solution time [s]:           0.05357098579406738
 Number of workers:           4
 Solver:                      Clp

Running s_all.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux...Done.
Saving maxFlux...Done.
Saving optSol...Done.
Saving fbaSol...Done.
Saving fvamin...Done.
Saving fvamax...Done.
Saving statussolmin...Done.
Saving statussolmax...Done.
All available variables saved to /home/vagrant/.julia/v0.5/COBRA/test/testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_all.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.935885733541852
 Maximum of minFlux:          32.25826051521001
 Minimum of minFlux:          -35.9848248054978
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.3397049903869629
 Number of workers:           1
 Solver:                      Clp

Running s_core.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].
Saving minFlux...Done.
Saving maxFlux...Done.
Saving optSol...Done.
Saving fbaSol...Done.
Saving fvamin...Done.
Saving fvamax...Done.
Saving statussolmin...Done.
Saving statussolmax...Done.
All available variables saved to /home/vagrant/.julia/v0.5/COBRA/test/testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_core.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          1000.0000000000002
 Minimum of maxFlux:          -20.935885733541852
 Maximum of minFlux:          32.25826051521001
 Minimum of minFlux:          -35.9848248054978
 Norm of maxFlux:             1427.0738873421196
 Norm of minFlux:             93.66619388260716
 Solution time [s]:           0.13010191917419434
 Number of workers:           1
 Solver:                      Clp

Running s_distinct.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> All 95 reactions of the model will be solved (100 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].

 >> Size of stoichiometric matrix: (74, 95)

preFBA! [osenseStr = max]: objValue = 0.7865289, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

 >> Only 17 reactions of 95 will be solved (~ 17.894736842105264 %).

 -- Minimization (iRound = 0). Block 1 [17/95].
 -- Maximization (iRound = 1). Block 1 [17/95].
Saving minFlux...Done.
Saving maxFlux...Done.
Saving optSol...Done.
Saving fbaSol...Done.
Saving fvamin...Done.
Saving fvamax...Done.
Saving statussolmin...Done.
Saving statussolmax...Done.
All available variables saved to /home/vagrant/.julia/v0.5/COBRA/test/testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_distinct.jl
 Original FBA obj.val         0.7865289
 Maximum of maxFlux:          26.528869396049977
 Minimum of maxFlux:          -9.046606133498623
 Maximum of minFlux:          10.0
 Minimum of minFlux:          -15.206494614382432
 Norm of maxFlux:             37.02464689377639
 Norm of minFlux:             22.004433713470988
 Solution time [s]:           0.031968116760253906
 Number of workers:           1
 Solver:                      Clp

Running s_fba.jl ...

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_fba.jl
 Original FBA obj.val         0.0
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.6373269557952881
 Number of workers:           1
 Solver:                      Clp
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_fba.jl
 Original FBA obj.val         0.0
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.0013878345489501953
 Number of workers:           1
 Solver:                      Clp
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_fba.jl
 Original FBA obj.val         0.0
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.0029659271240234375
 Number of workers:           1
 Solver:                      Clp
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

 -- Maximization (iRound = 1). Block 1 [1/95].

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_fba.jl
 Original FBA obj.val         0.0
 Maximum of maxFlux:          0.8739215069684304
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.8739215069684304
 Norm of minFlux:             0.0
 Solution time [s]:           0.0047359466552734375
 Number of workers:           1
 Solver:                      Clp
Original FBA. No additional constraints have been added.
 >> Only 1 reaction of 95 will be solved (~ 1.0526315789473684 %).

Saving minFlux...Done.
Saving maxFlux...Done.
Saving optSol...Done.
Saving fbaSol...Done.
Saving fvamin...Done.
Saving fvamax...Done.
Saving statussolmin...Done.
Saving statussolmax...Done.
All available variables saved to /home/vagrant/.julia/v0.5/COBRA/test/testFile.mat.

-- Solution summary --

/home/vagrant/.julia/v0.5/COBRA/test/s_fba.jl
 Original FBA obj.val         0.0
 Maximum of maxFlux:          0.0
 Minimum of maxFlux:          0.0
 Maximum of minFlux:          0.0
 Minimum of minFlux:          0.0
 Norm of maxFlux:             0.0
 Norm of minFlux:             0.0
 Solution time [s]:           0.0014948844909667969
 Number of workers:           1
 Solver:                      Clp

Running z_all.jl ...


>> The following tests might throw warning messages. <<

INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
INFO: Sequential version - Depending on the model size, expect long execution times.
INFO: Parallel version - Connecting the 8 workers ...
INFO: Connecting SSH nodes ...
 >> Connecting 8 workers on first.last@server1.com
INFO: Parallel version - Connecting the 4 workers ...
4 workers already connected. No further workers to connect.
INFO: Parallel version - Connecting the 2 workers ...
2 workers already connected. No further workers to connect.
INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.

 >> Size of stoichiometric matrix: (72, 95)

preFBA! [osenseStr = min]: objValue = 0.7865298, norm(fbaSol) = 106.83731553000719, optPercentage = 90.0.

WARNING: The `rxnsList` has more reactions than in the model. `rxnsList` shorted to the maximum number of reactions.
 >> Only 96 reactions of 95 will be solved (~ 101.05263157894737 %).

 -- Minimization (iRound = 0). Block 1 [95/95].
 -- Maximization (iRound = 1). Block 1 [95/95].

 >> Size of stoichiometric matrix: (73, 95)

preFBA! [osenseStr = min]: objValue = 0.707877, norm(fbaSol) = 100.12976651459746, optPercentage = 90.0.


 >> Size of stoichiometric matrix: (74, 95)

No objective set (`c` is zero). objValue and fbaSol not defined. optPercentage = 90.0.

INFO: The model objective is set to be maximized.
INFO: All constraints assumed equality constaints.
 -- Minimization (iRound = 0). Block 1 [1/2].
 -- Maximization (iRound = 1). Block 1 [1/2].

 -- All tests passed. -- 

INFO: COBRA tests passed
INFO: Removing GLPK v0.3.0
INFO: Removing GLPKMathProgInterface v0.2.3

>>> End of log
