>>> 'Pkg.add("ParserCombinator")' log
INFO: Installing AutoHashEquals v0.0.9
INFO: Installing ParserCombinator v1.7.8
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of ParserCombinator
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("ParserCombinator")' log
Julia Version 0.5.0-dev+5081
Commit e5b5a09* (2016-07-02 00:34 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for ParserCombinator...
INFO: Installing ZipFile v0.2.6
INFO: Installing Zlib v0.1.12
INFO: Testing ParserCombinator
sources ok
 1  = 1
 - 1  = -1
 1 + 1  = 2
 1 - 1  = 0
 - 1 - 1  = -2
fix ok
WARNING: x.(i) is deprecated; use getfield(x, i) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in broadcast at ./deprecated.jl:0 [inlined]
 in (::ParserCombinator.#producer#63{ParserCombinator.Seq,Set{ParserCombinator.Matcher}})() at /home/vagrant/.julia/v0.5/ParserCombinator/src/core/print.jl:22
while loading /home/vagrant/.julia/v0.5/ParserCombinator/test/core/print.jl, in expression starting on line 2
Seq
WARNING: x.(i) is deprecated; use getfield(x, i) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in broadcast at ./deprecated.jl:0 [inlined]
 in (::ParserCombinator.#producer#63{ParserCombinator.Seq,Set{ParserCombinator.Matcher}})() at /home/vagrant/.julia/v0.5/ParserCombinator/src/core/print.jl:22
while loading /home/vagrant/.julia/v0.5/ParserCombinator/test/core/print.jl, in expression starting on line 3
Transform
+-Alt
| +-[1]:Seq
| | +-[1]:Equal
| | | `-"a"
| | `-[2]:Drop
| |   `-Equal
| |     `-"b"
| `-[2]:Pattern
|   +-text="c"
|   +-regex=r"^(?:c)(.??)"
|   `-groups
`-f
print ok
names ok
Error During Test
  Test threw an exception of type TypeError
  Expression: collect(parse_all("b",Trace(Alt(Epsilon(),Repeat(@e_str("b"),0,1))))) == Array[[],["b"],[]]
  TypeError: #call#23: in new, expected Array{Tuple{ParserCombinator.Matcher,ParserCombinator.State,Tuple{ParserCombinator.Matcher,ParserCombinator.State,Any}},1}, got Array{Tuple{ParserCombinator.Matcher,ParserCombinator.State,Tuple{ParserCombinator.Matcher,ParserCombinator.State,Int64}},1}
   in (::ParserCombinator.##call#23#24)(::Array{Any,1}, ::Type{ParserCombinator.Cache{String,Int64}}, ::String) at /home/vagrant/.julia/v0.5/ParserCombinator/src/core/parsers.jl:57
   in (::Core.#kw#Type)(::Array{Any,1}, ::Type{ParserCombinator.Cache{String,Int64}}, ::String) at ./<missing>:0
   in #make#26(::Bool, ::Array{Any,1}, ::Function, ::DataType, ::String, ::ParserCombinator.Trace) at /home/vagrant/.julia/v0.5/ParserCombinator/src/core/parsers.jl:170
   in (::ParserCombinator.##multiple_results#30#32{Array{Any,1},DataType})(::Array{Any,1}, ::Function, ::String, ::ParserCombinator.Trace) at /home/vagrant/.julia/v0.5/ParserCombinator/src/core/parsers.jl:177
   in (::ParserCombinator.#multiple_results#31)(::String, ::ParserCombinator.Trace) at /home/vagrant/.julia/v0.5/ParserCombinator/src/core/parsers.jl:176
   in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
   in process_options(::Base.JLOptions) at ./client.jl:266
   in _start() at ./client.jl:322
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:399
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:282
 in include_from_node1(::String) at ./loading.jl:426 (repeats 2 times)
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/ParserCombinator/test/core/tests.jl, in expression starting on line 38
while loading /home/vagrant/.julia/v0.5/ParserCombinator/test/runtests.jl, in expression starting on line 23
==========================[ ERROR: ParserCombinator ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/ParserCombinator/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing ZipFile v0.2.6
INFO: Removing Zlib v0.1.12
ERROR: ParserCombinator had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
