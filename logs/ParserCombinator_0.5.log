>>> 'Pkg.add("ParserCombinator")' log
INFO: Installing ParserCombinator v1.7.7
INFO: Package database updated

>>> 'Pkg.test("ParserCombinator")' log
Julia Version 0.5.0-dev+2918
Commit 1eacbbb (2016-02-28 16:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Computing test dependencies for ParserCombinator...
INFO: Installing ZipFile v0.2.6
INFO: Installing Zlib v0.1.12
INFO: Testing ParserCombinator
sources ok
 1  = 1
 - 1  = -1
 1 + 1  = 2
 1 - 1  = 0
 - 1 - 1  = -2
fix ok
Seq
Transform
+-Alt
| +-[1]:Seq
| | +-[1]:Equal
| | | `-"a"
| | `-[2]:Drop
| |   `-Equal
| |     `-"b"
| `-[2]:Pattern
|   +-text="c"
|   +-regex=r"^(?:c)(.??)"
|   `-groups
`-f
print ok
names ok
0 0  r"a{0,0}"
2 4 aaa r"a{2,4}?"
0 1 aaa r"a{0,1}"
1 2 aaaa r"a{1,2}?"
2 4  r"a{2,4}"
0 2 aa r"a{0,2}?"
3 4 aa r"a{3,4}"
3 3 aaaa r"a{3,3}?"
2 4 aaa r"a{2,4}"
2 4  r"a{2,4}?"
0 0 aa r"a{0,0}"
0 1 a r"a{0,1}?"
2 3 aaa r"a{2,3}"
2 2 a r"a{2,2}?"
2 2 aaa r"a{2,2}"
3 4 aaaa r"a{3,4}?"
0 0 a r"a{0,0}"
1 2 aa r"a{1,2}?"
1 1 aaaa r"a{1,1}"
1 1  r"a{1,1}?"
tests ok
greedy true
ParserCombinator.NoCache{S,I}
  0.028058 seconds (19.24 k allocations: 941.463 KB)
  0.011238 seconds (9.07 k allocations: 471.078 KB, 60.22% gc time)
n results: 35
max depth: 5
max iter: 4
n calls: 323
ParserCombinator.Cache{S,I}
  0.128181 seconds (57.13 k allocations: 2.048 MB)
  0.009398 seconds (29.86 k allocations: 697.094 KB)
n results: 35
max depth: 4
max iter: 4
n calls: 198
slow ok
  1:foo        00 Trace->Case
  1:foo        01  Case->Pattern
  4:           01  Case<-["foo"]
  4:           00 Trace<-["Foo"]
case ok
WARNING: Method definition signed_prod(Any) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:5 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:3.
WARNING: Method definition signed_sum(Any) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:6 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:4.
WARNING: Method definition ==(CoreTest.Node, CoreTest.Node) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:9 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:7.
WARNING: Method definition calc(Float64) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:10 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:8.
WARNING: Method definition (::Type{CoreTest.Inv})(Any) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:11 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:9.
WARNING: Method definition calc(CoreTest.Inv) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:12 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:10.
WARNING: Method definition (::Type{CoreTest.Prd})(Any) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:13 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:11.
WARNING: Method definition calc(CoreTest.Prd) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:14 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:12.
WARNING: Method definition (::Type{CoreTest.Neg})(Any) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:15 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:13.
WARNING: Method definition calc(CoreTest.Neg) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:16 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:14.
WARNING: Method definition (::Type{CoreTest.Sum})(Any) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:17 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:15.
WARNING: Method definition calc(CoreTest.Sum) in module CoreTest at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/fix.jl:18 overwritten at /home/vagrant/.julia/v0.5/ParserCombinator/test/core/calc.jl:16.
all
+-[1]:sum
| `-Transform
|   +-Seq
|   | +-[1]:prd
|   | | +-Seq
|   | | | +-[1]:neg
|   | | | | `-Alt
|   | | | |   +-[1]:Seq
|   | | | |   | +-[1]:Drop
|   | | | |   | | `-Equal
|   | | | |   | |   `-"("
|   | | | |   | +-[2]:sum...
|   | | | |   | `-[3]:Drop
|   | | | |   |   `-Equal
|   | | | |   |     `-")"
|   | | | |   +-[2]:Transform
|   | | | |   | +-Pattern
|   | | | |   | | +-text="-?(\d*\.?\d+|\d+\.\d*)([eE]\d+)?"
|   | | | |   | | +-regex=r"^(?:-?(\d*\.?\d+|\d+\.\d*)([eE]\d+)?)(.??)"
|   | | | |   | | `-groups
|   | | | |   | `-f
|   | | | |   `-[3]:Transform
|   | | | |     +-Seq
|   | | | |     | +-[1]:Drop
|   | | | |     | | `-Equal
|   | | | |     | |   `-"-"
|   | | | |     | `-[2]:neg...
|   | | | |     `-f
|   | | | `-[2]:Depth
|   | | |   +-Alt
|   | | |   | +-[1]:mul
|   | | |   | | +-[1]:Drop
|   | | |   | | | `-Equal
|   | | |   | | |   `-"*"
|   | | |   | | `-[2]:neg...
|   | | |   | `-[2]:div
|   | | |   |   +-Seq
|   | | |   |   | +-[1]:Drop
|   | | |   |   | | `-Equal
|   | | |   |   | |   `-"/"
|   | | |   |   | `-[2]:neg...
|   | | |   |   `-f
|   | | |   +-lo=0
|   | | |   +-hi=9223372036854775807
|   | | |   `-flatten=true
|   | | `-f
|   | `-[2]:Depth
|   |   +-Alt
|   |   | +-[1]:add
|   |   | | +-[1]:Drop
|   |   | | | `-Equal
|   |   | | |   `-"+"
|   |   | | `-[2]:prd...
|   |   | `-[2]:sub
|   |   |   +-Seq
|   |   |   | +-[1]:Drop
|   |   |   | | `-Equal
|   |   |   | |   `-"-"
|   |   |   | `-[2]:prd...
|   |   |   `-f
|   |   +-lo=0
|   |   +-hi=9223372036854775807
|   |   `-flatten=true
|   `-f
`-[2]:Eos
  1:1+2*3/4    00 Trace->all
  1:1+2*3/4    01  all->sum
  1:1+2*3/4    02   Transform->Seq
  1:1+2*3/4    03    Seq->prd
  1:1+2*3/4    04     prd->Seq
  1:1+2*3/4    05      Seq->neg
  1:1+2*3/4    06       Alt->Seq
  1:1+2*3/4    07        Seq->Drop
  1:1+2*3/4    08         Drop->Equal
   :           08         Drop<-!!!
   :           07        Seq<-!!!
   :           06       Alt<-!!!
  1:1+2*3/4    06       Alt->Transform
  1:1+2*3/4    07        Transform->Pattern
  2:+2*3/4     07        Transform<-["1"]
  2:+2*3/4     06       Alt<-[1.0]
  2:+2*3/4     05      Seq<-[1.0]
  2:+2*3/4     05      Seq->Depth
  2:+2*3/4     06       Depth->Alt
  2:+2*3/4     07        Alt->mul
  2:+2*3/4     08         mul->Drop
  2:+2*3/4     09          Drop->Equal
   :           09          Drop<-!!!
   :           08         mul<-!!!
   :           07        Alt<-!!!
  2:+2*3/4     07        Alt->div
  2:+2*3/4     08         div->Seq
  2:+2*3/4     09          Seq->Drop
  2:+2*3/4     10 Drop->Equal
   :           10 Drop<-!!!
   :           09          Seq<-!!!
   :           08         div<-!!!
   :           07        Alt<-!!!
   :           06       Depth<-!!!
  2:+2*3/4     05      Seq<-[]
  2:+2*3/4     04     prd<-[1.0]
  2:+2*3/4     03    Seq<-[CoreTest.Prd(Any[1.0])]
  2:+2*3/4     03    Seq->Depth
  2:+2*3/4     04     Depth->Alt
  2:+2*3/4     05      Alt->add
  2:+2*3/4     06       add->Drop
  2:+2*3/4     07        Drop->Equal
  3:2*3/4      07        Drop<-["+"]
  3:2*3/4      06       add<-[]
  3:2*3/4      06       add->prd
  3:2*3/4      07        prd->Seq
  3:2*3/4      08         Seq->neg
  3:2*3/4      09          Alt->Seq
  3:2*3/4      10 Seq->Drop
  3:2*3/4      11  Drop->Equal
   :           11  Drop<-!!!
   :           10 Seq<-!!!
   :           09          Alt<-!!!
  3:2*3/4      09          Alt->Transform
  3:2*3/4      10 Transform->Pattern
  4:*3/4       10 Transform<-["2"]
  4:*3/4       09          Alt<-[2.0]
  4:*3/4       08         Seq<-[2.0]
  4:*3/4       08         Seq->Depth
  4:*3/4       09          Depth->Alt
  4:*3/4       10 Alt->mul
  4:*3/4       11  mul->Drop
  4:*3/4       12   Drop->Equal
  5:3/4        12   Drop<-["*"]
  5:3/4        11  mul<-[]
  5:3/4        11  mul->neg
  5:3/4        12   Alt->Seq
  5:3/4        13    Seq->Drop
  5:3/4        14     Drop->Equal
   :           14     Drop<-!!!
   :           13    Seq<-!!!
   :           12   Alt<-!!!
  5:3/4        12   Alt->Transform
  5:3/4        13    Transform->Pattern
  6:/4         13    Transform<-["3"]
  6:/4         12   Alt<-[3.0]
  6:/4         11  mul<-[3.0]
  6:/4         10 Alt<-[3.0]
  6:/4         09          Depth<-[3.0]
  6:/4         09          Depth->Alt
  6:/4         10 Alt->mul
  6:/4         11  mul->Drop
  6:/4         12   Drop->Equal
   :           12   Drop<-!!!
   :           11  mul<-!!!
   :           10 Alt<-!!!
  6:/4         10 Alt->div
  6:/4         11  div->Seq
  6:/4         12   Seq->Drop
  6:/4         13    Drop->Equal
  7:4          13    Drop<-["/"]
  7:4          12   Seq<-[]
  7:4          12   Seq->neg
  7:4          13    Alt->Seq
  7:4          14     Seq->Drop
  7:4          15      Drop->Equal
   :           15      Drop<-!!!
   :           14     Seq<-!!!
   :           13    Alt<-!!!
  7:4          13    Alt->Transform
  7:4          14     Transform->Pattern
  8:           14     Transform<-["4"]
  8:           13    Alt<-[4.0]
  8:           12   Seq<-[4.0]
  8:           11  div<-[4.0]
  8:           10 Alt<-[CoreTest.Inv(4.0)]
  8:           09          Depth<-[CoreTest.Inv(4.0)]
  8:           09          Depth->Alt
  8:           10 Alt->mul
  8:           11  mul->Drop
  8:           12   Drop->Equal
   :           12   Drop<-!!!
   :           11  mul<-!!!
   :           10 Alt<-!!!
  8:           10 Alt->div
  8:           11  div->Seq
  8:           12   Seq->Drop
  8:           13    Drop->Equal
   :           13    Drop<-!!!
   :           12   Seq<-!!!
   :           11  div<-!!!
   :           10 Alt<-!!!
   :           09          Depth<-!!!
  8:           08         Seq<-[3.0,CoreTest.Inv(4.0)]
  8:           07        prd<-[2.0,3.0,CoreTest.Inv(4.0)]
  8:           06       add<-[CoreTest.Prd(Any[2.0,3.0,CoreTest.Inv(4.0)])]
  8:           05      Alt<-[CoreTest.Prd(Any[2.0,3.0,CoreTest.Inv(4.0)])]
  8:           04     Depth<-[CoreTest.Prd(Any[2.0,3.0,CoreTest.Inv(4.0)])]
  8:           04     Depth->Alt
  8:           05      Alt->add
  8:           06       add->Drop
  8:           07        Drop->Equal
   :           07        Drop<-!!!
   :           06       add<-!!!
   :           05      Alt<-!!!
  8:           05      Alt->sub
  8:           06       sub->Seq
  8:           07        Seq->Drop
  8:           08         Drop->Equal
   :           08         Drop<-!!!
   :           07        Seq<-!!!
   :           06       sub<-!!!
   :           05      Alt<-!!!
   :           04     Depth<-!!!
  8:           03    Seq<-[CoreTest.Prd(Any[2.0,3.0,CoreTest.Inv(4.0)])]
  8:           02   Transform<-[CoreTest.Prd(Any[1.0]),CoreTes...Test.Inv(4.0)])]
  8:           01  all<-[CoreTest.Sum(Any[CoreTest.Prd(...st.Inv(4.0)])])]
  8:           01  all->Eos
  8:           01  all<-[]
  8:           00 Trace<-[CoreTest.Sum(Any[CoreTest.Prd(...st.Inv(4.0)])])]
1 = 1
-1 = -1
1+1 = 2
1-1 = 0
-1-1 = -2
1.0 = 1.0
-1.0 = -1.0
--1.0 = 1.0
1+2 = 3.0
1+2*3/4 = 2.5
CoreTest.Neg(CoreTest.Prd(Any[7.0,CoreTest.Inv(0.0),CoreTest.Inv(2.0),CoreTest.Inv(CoreTest.Neg(0.0))])) Inf Inf
CoreTest.Inv(CoreTest.Neg(0.0)) -Inf
CoreTest.Inv(CoreTest.Prd(Any[CoreTest.Neg(CoreTest.Sum(Any[CoreTest.Prd(Any[0.0])]))])) -Inf
CoreTest.Inv(CoreTest.Sum(Any[CoreTest.Prd(Any[CoreTest.Neg(CoreTest.Sum(Any[CoreTest.Prd(Any[0.0])]))])])) -Inf
CoreTest.Neg(CoreTest.Prd(Any[7.0,CoreTest.Inv(0.0),CoreTest.Inv(2.0),CoreTest.Inv(CoreTest.Sum(Any[CoreTest.Prd(Any[CoreTest.Neg(CoreTest.Sum(Any[CoreTest.Prd(Any[0.0])]))])])),3.0])) Inf Inf
Inf CoreTest.Sum(Any[CoreTest.Prd(Any[-9.0]),CoreTest.Neg(CoreTest.Prd(Any[7.0,CoreTest.Inv(0.0),CoreTest.Inv(2.0),CoreTest.Inv(CoreTest.Sum(Any[CoreTest.Prd(Any[CoreTest.Neg(CoreTest.Sum(Any[CoreTest.Prd(Any[0.0])]))])])),3.0])),CoreTest.Neg(CoreTest.Prd(Any[7.0,CoreTest.Inv(CoreTest.Neg(CoreTest.Sum(Any[CoreTest.Prd(Any[9.0]),CoreTest.Prd(Any[5.0])])))])),CoreTest.Prd(Any[5.0]),CoreTest.Neg(CoreTest.Prd(Any[7.0]))]) Inf
expr -0.0*5.0/2.0
-0.0 -0.0
expr 3.0/2.0-8.0*7.0/4.0/1.0*4.0+6.0+9.0+((6.0)-0.0+8.0)+-8.0+1.0
-32.5 -32.5
expr ((6.0+8.0))+9.0*6.0*3.0*2.0*4.0*1.0+9.0+5.0-0.0+(8.0)/6.0-2.0
1323.3333333333333 1323.3333333333333
expr 8.0/7.0-7.0+2.0*-(1.0)*8.0/4.0/0.0+2.0/5.0*3.0
-Inf -Inf
expr -3.0-9.0*(0.0)+9.0*4.0
33.0 33.0
expr 5.0/6.0
0.8333333333333334 0.8333333333333333
expr 0.0+0.0+6.0-9.0/((-6.0)/3.0)*6.0+5.0+0.0-4.0+5.0/3.0*6.0-7.0+1.0
38.0 38.0
expr (0.0)
0.0 0.0
expr (-8.0+2.0-7.0)-3.0+9.0/-5.0/0.0*4.0/6.0/(7.0)-2.0/4.0+2.0-9.0
-Inf -Inf
expr (8.0)+1.0*-(8.0)/-0.0*8.0*2.0
Inf Inf
expr ((-4.0+4.0)*5.0)
0.0 0.0
expr (2.0+5.0*5.0+1.0+6.0)
34.0 34.0
expr (2.0-7.0)*6.0*2.0+9.0/1.0/8.0-9.0/9.0-0.0+(2.0)-(((6.0/9.0)*2.0))
-59.208333333333336 -59.208333333333336
expr (7.0+3.0)-0.0-0.0*1.0/8.0-4.0+9.0*9.0*7.0*(5.0/7.0/5.0)/2.0*-6.0/4.0+7.0
-47.75 -47.75
expr -2.0/1.0-8.0/3.0-1.0-4.0
-9.666666666666666 -9.666666666666666
expr 0.0*4.0/0.0-6.0+-0.0-9.0
NaN NaN
expr 4.0*9.0
36.0 36.0
expr 2.0-5.0*7.0/7.0*-8.0*4.0+8.0/1.0
170.0 170.0
expr (-(8.0))/(1.0/9.0+9.0*4.0)+(6.0)+0.0
5.7784615384615385 5.7784615384615385
expr (3.0*2.0/0.0)/7.0+3.0*3.0+9.0
Inf Inf
calc ok
one level
  1:ab         00 Trace->Dot
  2:b          00 Trace<-['a']
multiple
  2:b          00 Trace->Depth
  2:b          01  Depth->Dot
  3:           01  Depth<-['b']
  3:           01  Depth->Dot
   :           01  Depth<-!!!
  3:           00 Trace<-['b']
  2:b          00 Trace->Depth
  2:b          01  Depth->Dot
   :           01  Depth<-!!!
  2:b          00 Trace<-[]
Test Failed
  Expression: once(task)
    Expected: Exception
      Thrown: ParserCombinator.ParserException
ERROR: LoadError: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Fail) at ./test.jl:317
 in do_test_throws(::Base.Test.Threw, ::Expr, ::Type{T}) at ./test.jl:251
 in include(::UTF8String) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/ParserCombinator/test/core/debug.jl, in expression starting on line 21
while loading /home/vagrant/.julia/v0.5/ParserCombinator/test/runtests.jl, in expression starting on line 19
==========================[ ERROR: ParserCombinator ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/ParserCombinator/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing ZipFile v0.2.6
INFO: Removing Zlib v0.1.12
ERROR: Base.Pkg.PkgError("ParserCombinator had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::UTF8String) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
