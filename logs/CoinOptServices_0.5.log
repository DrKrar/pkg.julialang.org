>>> 'Pkg.add("CoinOptServices")' log
INFO: Installing Cbc v0.2.0
INFO: Installing Clp v0.2.0
INFO: Installing CoinOptServices v0.1.0
INFO: Installing Ipopt v0.2.1
INFO: Installing LightXML v0.2.1
INFO: Installing MathProgBase v0.4.2
INFO: Building Cbc
INFO: Building Ipopt
INFO: Building LightXML
INFO: Building CoinOptServices
WARNING: Method definition @checked_lib(ANY<:Any, ANY<:Any) in module __anon__ at /home/vagrant/.julia/v0.5/Cbc/deps/deps.jl:7 overwritten at /home/vagrant/.julia/v0.5/Ipopt/deps/deps.jl:7.
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of CoinOptServices
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("CoinOptServices")' log
Julia Version 0.5.0-dev+3184
Commit fb283c6 (2016-03-17 08:49 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Computing test dependencies for CoinOptServices...
INFO: Installing Calculus v0.1.14
INFO: Installing DataStructures v0.4.3
INFO: Installing FactCheck v0.4.2
INFO: Installing ForwardDiff v0.1.6
INFO: Installing JuMP v0.12.2
INFO: Installing Lazy v0.10.1
INFO: Installing MacroTools v0.3.0
INFO: Installing NaNMath v0.2.1
INFO: Installing ReverseDiffSparse v0.5.5
INFO: Testing CoinOptServices


******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

[print] JuMPContainer{Variable}
  > bound printing
  > index set printing
  > category printing
  > Empty JuMPContainer printing (#124)
108 facts verified.
[print] JuMPContainer{Number}
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Cbc.ji for module Cbc.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.5/Clp.ji for module Clp.
6 facts verified.
[print] SOS constraints
6 facts verified.
[print] Model
8 facts verified.
[print] changing variable categories
2 facts verified.
[print] expressions
9 facts verified.
[print] Variable
32 facts verified.
[print] User-created Array{Variable}
6 facts verified.
[variable] constructors
11 facts verified.
[variable] get and set bounds
14 facts verified.
[variable] get and set values
3 facts verified.
[variable] get and set category
2 facts verified.
[variable] repeated elements in index set (issue #199)
1 fact verified.
[variable] condition in indexing
3 facts verified.
[variable] @defVar returning Array{Variable}
WARNING: Variable value not defined for component of x. Check that the model was properly solved.
WARNING: Variable value not defined for component of z. Check that the model was properly solved.
6 facts verified.
[variable] getValue on empty things
5 facts verified.
[variable] Slices of JuMPArray (#684)
  Failure :: (line:26) :: fact was false
    Expression: x[1,:,:] --> sliceof(x,1,1:4,1:2,0,0,0)
      Expected: 1x4x2 Array{JuMP.Variable,3}:
[:, :, 1] =
 x[1,1,1]  x[1,2,1]  x[1,3,1]  x[1,4,1]

[:, :, 2] =
 x[1,1,2]  x[1,2,2]  x[1,3,2]  x[1,4,2]
      Occurred: 4x2 Array{JuMP.Variable,2}:
 x[1,1,1]  x[1,1,2]
 x[1,2,1]  x[1,2,2]
 x[1,3,1]  x[1,3,2]
 x[1,4,1]  x[1,4,2]
  Failure :: (line:26) :: fact was false
    Expression: x[1,:,2] --> sliceof(x,1,1:4,2,0,0,0)
      Expected: 1x4 Array{JuMP.Variable,2}:
 x[1,1,2]  x[1,2,2]  x[1,3,2]  x[1,4,2]
      Occurred: [x[1,1,2],x[1,2,2],x[1,3,2],x[1,4,2]]
  Failure :: (line:26) :: fact was false
    Expression: y[1,:,:] --> sliceof(y,1,1:4,1:2,0,-2,2)
      Expected: 1x4x2 Array{JuMP.Variable,3}:
[:, :, 1] =
 y[1,-1,3]  y[1,0,3]  y[1,1,3]  y[1,2,3]

[:, :, 2] =
 y[1,-1,4]  y[1,0,4]  y[1,1,4]  y[1,2,4]
      Occurred: 4x2 Array{JuMP.Variable,2}:
 y[1,-1,3]  y[1,-1,4]
 y[1,0,3]   y[1,0,4] 
 y[1,1,3]   y[1,1,4] 
 y[1,2,3]   y[1,2,4] 
  Failure :: (line:26) :: fact was false
    Expression: y[1,:,4] --> sliceof(y,1,1:4,2,0,-2,2)
      Expected: 1x4 Array{JuMP.Variable,2}:
 y[1,-1,4]  y[1,0,4]  y[1,1,4]  y[1,2,4]
      Occurred: [y[1,-1,4],y[1,0,4],y[1,1,4],y[1,2,4]]
  Failure :: (line:26) :: fact was false
    Expression: z[:,1,:] --> sliceof(z,1:3,3,1:2,0,-2,2)
      Expected: 3x1x2 Array{JuMP.Variable,3}:
[:, :, 1] =
 z[1,1,3]
 z[2,1,3]
 z[3,1,3]

[:, :, 2] =
 z[1,1,4]
 z[2,1,4]
 z[3,1,4]
      Occurred: 3x2 Array{JuMP.Variable,2}:
 z[1,1,3]  z[1,1,4]
 z[2,1,3]  z[2,1,4]
 z[3,1,3]  z[3,1,4]
  Failure :: (line:26) :: fact was false
    Expression: z[1,1,:] --> sliceof(z,1,3,1:2,0,-2,2)
      Expected: 1x1x2 Array{JuMP.Variable,3}:
[:, :, 1] =
 z[1,1,3]

[:, :, 2] =
 z[1,1,4]
      Occurred: [z[1,1,3],z[1,1,4]]
  Failure :: (line:26) :: fact was false
    Expression: z[1:2,1,:] --> sliceof(z,1:2,3,1:2,0,-2,2)
      Expected: 2x1x2 Array{JuMP.Variable,3}:
[:, :, 1] =
 z[1,1,3]
 z[2,1,3]

[:, :, 2] =
 z[1,1,4]
 z[2,1,4]
      Occurred: 2x2 Array{JuMP.Variable,2}:
 z[1,1,3]  z[1,1,4]
 z[2,1,3]  z[2,1,4]
  Failure :: (line:26) :: fact was false
    Expression: z[1:2,1,3:4] --> sliceof(z,1:2,3,1:2,0,-2,2)
      Expected: 2x1x2 Array{JuMP.Variable,3}:
[:, :, 1] =
 z[1,1,3]
 z[2,1,3]

[:, :, 2] =
 z[1,1,4]
 z[2,1,4]
      Occurred: 2x2 Array{JuMP.Variable,2}:
 z[1,1,3]  z[1,1,4]
 z[2,1,3]  z[2,1,4]
  Failure :: (line:26) :: fact was false
    Expression: w[1,:,"blue"] --> sliceof(w,1,1:4,["blue"],0,-2)
      Expected: 1x4 Array{JuMP.Variable,2}:
 w[1,-1,blue]  w[1,0,blue]  w[1,1,blue]  w[1,2,blue]
      Occurred: [w[1,-1,blue],w[1,0,blue],w[1,1,blue],w[1,2,blue]]
  Failure :: (line:26) :: fact was false
    Expression: w[1,:,:red] --> sliceof(w,1,1:4,[:red],0,-2)
      Expected: 1x4 Array{JuMP.Variable,2}:
 w[1,-1,red]  w[1,0,red]  w[1,1,red]  w[1,2,red]
      Occurred: [w[1,-1,red],w[1,0,red],w[1,1,red],w[1,2,red]]
Out of 33 total facts:
  Verified: 23
  Failed:   10
[expr] Test expression construction
  > AffExpr
  > QuadExpr
8 facts verified.
[expr] Test getValue(expr)
2 facts verified.
[expr] Test expression iterators
4 facts verified.
[operator] Testing basic operator overloads
  > Number--???
  > Variable--???
  > Norm--???
  > AffExpr--???
  > QuadExpr--???
  > SOCExpr--???
290 facts verified.
[operator] Higher-level operators
  > sum
  > dot
18 facts verified.
Vectorized operations
  > Transpose
  > Vectorized arithmetic
  > Dot-ops
  > Vectorized comparisons
86 facts verified.
[operator] JuMPArray concatenation
9 facts verified.
[macros] Check Julia expression parsing
17 facts verified.
[macros] Check @addConstraint basics
11 facts verified.
[macros] Checking @defVar with reverse direction bounds
2 facts verified.
[macros] sum{}
5 facts verified.
[macros] Problem modification
4 facts verified.
[macros] Using pre-built affine is OK in macro
4 facts verified.
[macros] Test ranges in @defVar
10 facts verified.
[macros] Unicode comparisons
9 facts verified.
[macros] Three argument @addConstraint
3 facts verified.
[macros] @addConstraints
4 facts verified.
[macros] @addNLConstraints
5 facts verified.
[macros] Vectors in nonlinear expressions
2 facts verified.
[macros] @setObjective with quadratic
1 fact verified.
[macros] @addConstraint with quadratic
13 facts verified.
[macros] Triangular indexing, iteration
158 facts verified.
[macros] Multidimensional indexing
1 fact verified.
WARNING: The two-argument version of @defExpr is deprecated. The corresponding JuMP model is now required as the first argument. The new syntax is @defExpr(<JuMP model>, <name of expression(s)>, <expression>)
WARNING: The one-argument version of @defExpr is deprecated. The corresponding JuMP model is now required as the first argument, and a name for the expression or collection of expressions is required as the second argument. The new syntax is @defExpr(<JuMP model>, <name of expression(s)>, <expression>)
[macros] @defExpr
6 facts verified.
[macros] Conditions in constraint indexing
7 facts verified.
[macros] Test changes in condition parsing
4 facts verified.
[macros] Norm parsing
5 facts verified.
[macros] Extraneous terms in QuadExpr (#535)
1 fact verified.
[macros] Special-case binary multiplication in addToExpression_reorder (#537)
3 facts verified.
[macros] Indices in macros don't leak out of scope (#582)
25 facts verified.
[macros] Issue #621
1 fact verified.
[fuzzer] Check macros for expression construction
[model] Check error cases
WARNING: Variable value not defined for errVar. Check that the model was properly solved.
WARNING: Variable value not defined for x. Check that the model was properly solved.
6 facts verified.
[model] Performance warnings
WARNING: The addition operator has been used on JuMP expressions a large number of times. This warning is safe to ignore but may indicate that model generation is slower than necessary. For performance reasons, you should not add expressions in a loop. Instead of x += y, use append!(x,y) to modify x in place. If y is a single variable, you may also use push!(x, coef, y) in place of x += coef*y.
0 facts verified.
[model] Test printing a model
Warning, MPS does not support maximization sense. Flipping objective coefficients.
65 facts verified.
[model] Quadratic MPS writer
20 facts verified.
[model] Test solving a MILP
  > With solver Cbc.CbcMathProgSolverInterface.CbcSolver
  > With solver CoinOptServices.OsilSolver

20 facts verified.
[model] Test solving an LP (Min)
  > With solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With solver Ipopt.IpoptSolver

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

  > With solver CoinOptServices.OsilSolver

57 facts verified.
[model] Test solving an LP (Max)
  > With solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

57 facts verified.
[model] Test binary variable handling
  > With solver Cbc.CbcMathProgSolverInterface.CbcSolver
  > With solver CoinOptServices.OsilSolver

4 facts verified.
[model] Test model copying
28 facts verified.
[model] Test variable/model 'hygiene'
  > Linear constraint
  > Linear objective
  > Quadratic constraint
  > Affine in quadratic constraint
  > Quadratic objective
5 facts verified.
[model] Test NaN checking
3 facts verified.
[model] Test column-wise modeling
9 facts verified.
[model] Test all MPS paths
Warning, MPS does not support maximization sense. Flipping objective coefficients.
0 facts verified.
[model] Test all LP paths
1 fact verified.
[model] Test semi-continuous variables
0 facts verified.
[model] Test semi-integer variables
0 facts verified.
[model] Test fixed variables don't leak through MPB
  > With solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

  > With solver Cbc.CbcMathProgSolverInterface.CbcSolver
WARNING: Ignoring partial starting solution. Cbc requires a feasible value to be specified for all variables.
  > With solver CoinOptServices.OsilSolver
17 facts verified.
[model] Test SOS constraints
  > With solver Cbc.CbcMathProgSolverInterface.CbcSolver
Cbc3007W No integer variables - nothing to do
Cbc3007W No integer variables - nothing to do
10 facts verified.
[model] Test vectorized model creation
2 facts verified.
[model] Test MIQP vectorization





NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT -7639415.2        8 0.03726
NLP0014I             2      INFEAS 1       13 0.040665
Coin0506I Presolve 49 (-1) rows, 18 (-5) columns and 124 (-19) elements
Clp0006I 0  Obj -5.7204592e+08 Primal inf 44942.181 (19) Dual inf 416619.86 (4)
Clp0006I 6  Obj -7.4747283e+08
Clp0000I Optimal - objective value -7.4747283e+08
Clp0032I Optimal objective -747472832.6 - 6 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value -7.4747283e+08
Couenne: new cutoff value 6.9896992684e-09 (7.6663 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -7.4747283e+08
Optimality Based BT: Couenne: new cutoff value -3.7947771136e-07 (7.6663 seconds)
0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value -3.5143102592e+06 (7.87636 seconds)
Couenne: new cutoff value -4.9832192005e+06 (8.02353 seconds)
Couenne: new cutoff value -6.3172319400e+06 (8.25407 seconds)
Couenne: new cutoff value -7.6295948429e+06 (8.35006 seconds)
Couenne: new cutoff value -7.6295948429e+06 (8.53183 seconds)
Couenne: new cutoff value -7.6295948429e+06 (8.95445 seconds)

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT -7639415.2        8 0.03408
NLP0014I             2      INFEAS 1       13 0.089934
Coin0506I Presolve 49 (-1) rows, 18 (-5) columns and 124 (-19) elements
Clp0006I 0  Obj -5.7204592e+08 Primal inf 44942.181 (19) Dual inf 416619.86 (4)
Clp0006I 6  Obj -7.4747283e+08
Clp0000I Optimal - objective value -7.4747283e+08
Clp0032I Optimal objective -747472832.6 - 6 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value -7.4747283e+08
Couenne: new cutoff value 6.9896992684e-09 (7.04194 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -7.4747283e+08
Optimality Based BT: Couenne: new cutoff value -3.7947771136e-07 (7.04194 seconds)
0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value -3.5143102592e+06 (7.29677 seconds)
Couenne: new cutoff value -4.9832192005e+06 (7.49532 seconds)
Couenne: new cutoff value -6.3172319400e+06 (7.73552 seconds)
Couenne: new cutoff value -7.6295948429e+06 (7.81177 seconds)
Couenne: new cutoff value -7.6295948429e+06 (8.06139 seconds)
Couenne: new cutoff value -7.6295948429e+06 (8.65629 seconds)
8 facts verified.
[model] Test setSolver

16 facts verified.
[model] Setting solve hook
2 facts verified.
[model] Setting print hook
1 fact verified.
[model] Test getLinearIndex
5 facts verified.
[model] Test LinearConstraint from ConstraintRef
1 fact verified.
[model] Test getValue on OneIndexedArrays
2 facts verified.
[model] Relaxation keyword argument to solve
24 facts verified.
[model] Unrecognized keyword argument to solve
1 fact verified.
[probmod] Testing problem modification basics
  > With solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With solver Ipopt.IpoptSolver
WARNING: Solver does not appear to support adding variables to an existing model. Hot-start is disabled.
WARNING: Solver does not appear to support hot-starts. Model will be built from scratch.
  > With solver CoinOptServices.OsilSolver



39 facts verified.
[probmod] Testing problem modification part two
  > With solver Cbc.CbcMathProgSolverInterface.CbcSolver
Presolve 0 (-1) rows, 0 (-3) columns and 0 (-3) elements
Optimal - objective value 3.3
After Postsolve, objective 3.3, infeasibilities - dual 0.9999999 (1), primal 0 (0)
Presolved model was optimal, full model needs cleaning up
0  Obj 3.3 Dual inf 0.9999999 (1)
1  Obj 3.3
Optimal - objective value 3.3
Optimal objective 3.3 - 1 iterations time 0.002, Presolve 0.00
Cbc0045I Solution with objective value -3.3 saved
WARNING: Solver does not appear to support adding constraints to an existing model. Hot-start is disabled.
Presolve 0 (-3) rows, 0 (-3) columns and 0 (-7) elements
Optimal - objective value 2.2
After Postsolve, objective 2.2, infeasibilities - dual 0 (0), primal 0 (0)
Optimal objective 2.2 - 0 iterations time 0.002, Presolve 0.00
Cbc0045I Solution with objective value -2.2 saved
  > With solver CoinOptServices.OsilSolver






36 facts verified.
[probmod] Test adding a range constraint and modifying it
1 fact verified.
[probmod] Test adding a 'decoupled' variable (#205)
  > With solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With solver Ipopt.IpoptSolver
Presolve 0 (-3) rows, 0 (-3) columns and 0 (-7) elements
Optimal - objective value 101.1
After Postsolve, objective 101.1, infeasibilities - dual 0 (0), primal 0 (0)
Optimal objective 101.1 - 0 iterations time 0.002, Presolve 0.00
Cbc0045I Solution with objective value -101.1 saved
  > With solver CoinOptServices.OsilSolver


6 facts verified.
[probmod] Test buildInternalModel
  > With solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

24 facts verified.
[probmod] Test buildInternalModel with MIP
  > With solver Cbc.CbcMathProgSolverInterface.CbcSolver
  > With solver CoinOptServices.OsilSolver

12 facts verified.
[probmod] Test adding empty constraints
  > With solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver


6 facts verified.
[probmod] Test bound modification on binaries
  > With solver Cbc.CbcMathProgSolverInterface.CbcSolver
Optimal - objective value 1
Optimal objective 1 - 0 iterations time 0.002
Cbc0045I Solution with objective value -1 saved
Optimal - objective value 0
Optimal objective 0 - 0 iterations time 0.002
Cbc0045I Solution with objective value 0 saved
  > With solver CoinOptServices.OsilSolver

WARNING: Setting upper bound for binary variable x[1] to 1.0 (was 2.0)

WARNING: Modifying initial conditions to satisfy bounds


WARNING: Setting lower bound for binary variable x[1] to 0.0 (was -1.0)

WARNING: Modifying initial conditions to satisfy bounds

12 facts verified.
[probmod] Applicable regressions
  > Clp
  > Cbc
30 facts verified.
[callback] Test lazy constraints
0 facts verified.
[callback] Test user cuts
0 facts verified.
[callback] Test heuristics
0 facts verified.
[callback] Test informational callback
0 facts verified.
WARNING: Callback tests not run!
[qcqpmodel] Test quad objective (discrete)
  > With solver CoinOptServices.OsilSolver






  > With solver CoinOptServices.OsilSolver

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 247        6 0.002841
Couenne: new cutoff value 2.4700000000e+02 (0.012683 seconds)
Coin0506I Presolve 0 (-4) rows, 0 (-8) columns and 0 (-10) elements
Clp0000I Optimal - objective value 247
Clp0032I Optimal objective 247 - 0 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 247
NLP Heuristic: NLP0014I             2         OPT 247        0 0
no solution.
Clp0000I Optimal - objective value 247

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 247        6 0.000239
Couenne: new cutoff value 2.4700000000e+02 (0.013946 seconds)
Coin0506I Presolve 0 (-4) rows, 0 (-8) columns and 0 (-10) elements
Clp0000I Optimal - objective value 247
Clp0032I Optimal objective 247 - 0 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 247
NLP Heuristic: NLP0014I             2         OPT 247        0 0
no solution.
Clp0000I Optimal - objective value 247

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 247        7 0
Couenne: new cutoff value 2.4700000000e+02 (0.013143 seconds)
Coin0506I Presolve 0 (-4) rows, 0 (-8) columns and 0 (-10) elements
Clp0000I Optimal - objective value 247
Clp0032I Optimal objective 247 - 0 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 247
NLP Heuristic: NLP0014I             2         OPT 247        0 0
no solution.
Clp0000I Optimal - objective value 247

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 247        6 0.004454
Couenne: new cutoff value 2.4700000000e+02 (0.007798 seconds)
Coin0506I Presolve 0 (-4) rows, 0 (-8) columns and 0 (-10) elements
Clp0000I Optimal - objective value 247
Clp0032I Optimal objective 247 - 0 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 247
NLP Heuristic: NLP0014I             2         OPT 247        0 0
no solution.
Clp0000I Optimal - objective value 247

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 247        7 0.005007
Couenne: new cutoff value 2.4700000000e+02 (0.014412 seconds)
Coin0506I Presolve 0 (-4) rows, 0 (-8) columns and 0 (-10) elements
Clp0000I Optimal - objective value 247
Clp0032I Optimal objective 247 - 0 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 247
NLP Heuristic: NLP0014I             2         OPT 247        0 0
no solution.
Clp0000I Optimal - objective value 247

NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 247        6 0.003306
Couenne: new cutoff value 2.4700000000e+02 (0.009143 seconds)
Coin0506I Presolve 0 (-4) rows, 0 (-8) columns and 0 (-10) elements
Clp0000I Optimal - objective value 247
Clp0032I Optimal objective 247 - 0 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 247
NLP Heuristic: NLP0014I             2         OPT 247        0 0
no solution.
Clp0000I Optimal - objective value 247
36 facts verified.
[qcqpmodel] Test quad objective (continuous)
  > With solver CoinOptServices.OsilSolver



  > With solver Ipopt.IpoptSolver
18 facts verified.
[qcqpmodel] Test quad constraints (continuous)
  > With solver CoinOptServices.OsilSolver



  > With solver Ipopt.IpoptSolver
38 facts verified.
[qcqpmodel] Test SOC constraints (continuous)
  > With solver CoinOptServices.OsilSolver



WARNING: Variable type not provided for variables 4:6, assuming Continuous

WARNING: Variable type not provided for variables 4:6, assuming Continuous

16 facts verified.
[qcqpmodel] Test SOC duals
  > With solver CoinOptServices.OsilSolver


10 facts verified.
[qcqpmodel] Test quad constraints (discrete)
  > With solver CoinOptServices.OsilSolver

  > With solver CoinOptServices.OsilSolver

Couenne: new cutoff value 0.0000000000e+00 (0.008472 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT -3.3094011       14 0.000256
Couenne: new cutoff value -2.0000000000e+00 (0.009643 seconds)
NLP0014I             2         OPT -2        0 0
Coin0506I Presolve 9 (0) rows, 6 (-1) columns and 22 (-1) elements
Clp0006I 0  Obj -2 Primal inf 1.999999 (1) Dual inf 0.999999 (1)
Clp0006I 5  Obj -4
Clp0000I Optimal - objective value -4
Clp0032I Optimal objective -4 - 5 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value -4
NLP Heuristic: NLP0014I             3         OPT -3.3094011        9 0.003239
no solution.
Clp0000I Optimal - objective value -4
Optimality Based BT: 2 improved bounds
Probing: 1 improved bounds
NLP Heuristic: Couenne: new cutoff value -3.0000000000e+00 (0.012882 seconds)
no solution.
Optimality Based BT: 0 improved bounds
6 facts verified.
[qcqpmodel] Test simple normed problem
  > With solver CoinOptServices.OsilSolver
WARNING: Variable type not provided for variables 4:7, assuming Continuous

3 facts verified.
[qcqpmodel] Test quad problem modification
  > With solver CoinOptServices.OsilSolver




  > With solver Ipopt.IpoptSolver
20 facts verified.
[qcqpmodel] Rotated second-order cones
0 facts verified.
[nonlinear] Test getValue on arrays
5 facts verified.
[nonlinear] Test HS071 solves correctly
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

6 facts verified.
[nonlinear] Test HS071 solves correctly, epigraph
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

4 facts verified.
[nonlinear] Test ifelse
  > With solver Ipopt.IpoptSolver
2 facts verified.
[nonlinear] Accepting fixed variables
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true




  > With solver CoinOptServices.OsilSolver, simplify = false




16 facts verified.
[nonlinear] Test QP solve through NL pathway
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver


16 facts verified.
[nonlinear] Test quad con solve through NL pathway
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

6 facts verified.
[nonlinear] Test resolve with parameter
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true


  > With solver CoinOptServices.OsilSolver, simplify = false


16 facts verified.
[nonlinear] Test two-sided nonlinear constraints
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver


8 facts verified.
[nonlinear] Quadratic equality constraints
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

4 facts verified.
[nonlinear] Test mixed integer nonlinear problems
  > With solver CoinOptServices.OsilSolver

  > With solver CoinOptServices.OsilSolver

Couenne: new cutoff value 1.0000000000e+01 (0.015872 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 0.75928418        9 0.003633
NLP0014I             2      INFEAS 0.99999999       14 0.011844
Coin0506I Presolve 20 (-2) rows, 10 (-7) columns and 53 (-8) elements
Clp0006I 0  Obj 10.0011 Primal inf 2.4306479 (3) Dual inf 19.199999 (1)
Clp0006I 12  Obj 0.50999604
Clp0000I Optimal - objective value 0.50999604
Clp0032I Optimal objective 0.5099960377 - 12 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 0.50999604
NLP Heuristic: NLP0014I             3         OPT 9.9999997       13 0.00371
Couenne: new cutoff value 9.9999997410e+00 (0.036283 seconds)
solution found, obj. 10
Clp0000I Optimal - objective value 0.50999604
Optimality Based BT: Couenne: new cutoff value 8.2249788040e+00 (0.036442 seconds)
Couenne: new cutoff value 7.9066440576e+00 (0.036442 seconds)
5 improved bounds
Probing: 0 improved bounds
NLP Heuristic: Couenne: new cutoff value 6.0097589010e+00 (0.04727 seconds)
solution found, obj. 6.00976
Optimality Based BT: 8 improved bounds
8 facts verified.
[nonlinear] Test continuous relaxation of minlp test problem
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

10 facts verified.
[nonlinear] Test maximization objective
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

6 facts verified.
WARNING: in @defNLExpr(quadexpr2,x + x ^ 2 + x * y + y ^ 2): three arguments are required.
Note that the syntax of @defNLExpr has recently changed:
The first argument should be the model to which the expression is attached.
The second is the name of the expression (or collection of expressions).
The third is the expression itself.
Example:
@defNLExpr(m, my_expr, x^2/y)
@defNLExpr(m, my_expr_collection[i=1:2], sin(z[i])^2)
Support for the old syntax (with the model omitted) will be removed in an upcoming release.
WARNING: in @defNLExpr(x + x ^ 2 + x * y + y ^ 2): three arguments are required.
Note that the syntax of @defNLExpr has recently changed:
The first argument should be the model to which the expression is attached.
The second is the name of the expression (or collection of expressions).
The third is the expression itself.
Example:
@defNLExpr(m, my_expr, x^2/y)
@defNLExpr(m, my_expr_collection[i=1:2], sin(z[i])^2)
Support for the old syntax (with the model omitted) will be removed in an upcoming release.
[nonlinear] Test maximization objective (embedded expressions)
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true

  > With solver CoinOptServices.OsilSolver, simplify = false

24 facts verified.
[nonlinear] Test infeasibility detection
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

2 facts verified.
[nonlinear] Test unboundedness detection
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

2 facts verified.
[nonlinear] Test entropy maximization
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

4 facts verified.
[nonlinear] Test entropy maximization (reformulation)
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

8 facts verified.
[nonlinear] Test derivatives of x^4, x < 0
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

4 facts verified.
[nonlinear] Test nonlinear duals
  > With solver Ipopt.IpoptSolver, simplify = true
  > With solver Ipopt.IpoptSolver, simplify = false
  > With solver CoinOptServices.OsilSolver, simplify = true

  > With solver CoinOptServices.OsilSolver, simplify = false

76 facts verified.
[nonlinear] Test nonlinear duals (Max)
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

38 facts verified.
[nonlinear] Test Hessian chunking code
  > With solver Ipopt.IpoptSolver
  > With solver CoinOptServices.OsilSolver

4 facts verified.
[nonlinear] Test NL MPB interface (-1.0 * x[1] + 1.0 * x[2])
11 facts verified.
[nonlinear] Test NL MPB interface (x[1] ^ x[2])
11 facts verified.
[nonlinear] Expression graph for linear problem
1 fact verified.
[nonlinear] Hessians through MPB
3 facts verified.
[nonlinear] Hess-vec through MPB
1 fact verified.
[nonlinear] Error on NLP resolve
2 facts verified.
[nonlinear] User-defined functions
10 facts verified.
[sdp] Test simple SDP
0 facts verified.
[sdp] Nonsensical SDPs
WARNING: issym is deprecated, use issymmetric instead.
 [inlined code] from ./error.jl:26
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in issym(::Array{Float64,2}) at ./deprecated.jl:30
 [inlined code] from ./boot.jl:333
 in (::##4806#4821)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:308
 in do_fact(::##4806#4821, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
 [inlined code] from ./boot.jl:331
 in (::##4794#4809)() at /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl:136
 in facts(::##4794#4809, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl, in expression starting on line 127
WARNING: issym is deprecated, use issymmetric instead.
 [inlined code] from ./error.jl:26
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in issym(::Array{Float64,2}) at ./deprecated.jl:30
 [inlined code] from ./boot.jl:333
 in (::##4807#4822)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:308
 in do_fact(::##4807#4822, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
 [inlined code] from ./boot.jl:331
 in (::##4794#4809)() at /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl:137
 in facts(::##4794#4809, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl, in expression starting on line 127
WARNING: issym is deprecated, use issymmetric instead.
 [inlined code] from ./error.jl:26
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in issym(::Array{Float64,2}) at ./deprecated.jl:30
 [inlined code] from ./boot.jl:333
 in (::##4807#4822)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:308
 in do_fact(::##4807#4822, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
 [inlined code] from ./boot.jl:331
 in (::##4794#4809)() at /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl:137
 in facts(::##4794#4809, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl, in expression starting on line 127
WARNING: issym is deprecated, use issymmetric instead.
 [inlined code] from ./error.jl:26
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in issym(::Array{Float64,2}) at ./deprecated.jl:30
 [inlined code] from ./random.jl:329
 in (::##4808#4823)() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:308
 in do_fact(::##4808#4823, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
 [inlined code] from ./boot.jl:331
 in (::##4794#4809)() at /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl:138
 in facts(::##4794#4809, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/JuMP/test/sdp.jl, in expression starting on line 127
9 facts verified.
[sdp] SDP with quadratics
0 facts verified.
[sdp] Test problem #2
0 facts verified.
[sdp] Test problem #3
0 facts verified.
[sdp] Test problem #4
0 facts verified.
[sdp] Test problem #5
0 facts verified.
[sdp] Test problem #6
0 facts verified.
[sdp] Test problem #7
0 facts verified.
[sdp] Test problem #8
0 facts verified.
[sdp] Test problem #9
0 facts verified.
[sdp] Correlation example
0 facts verified.
[sdp] Robust uncertainty example
0 facts verified.
[sdp] Robust uncertainty example (with norms)
0 facts verified.
[sdp] Can't mix SDP and QP (#665)
0 facts verified.
[sdp] Just another SDP
0 facts verified.
WARNING: Semidefinite tests not run!
[socduals] SOC dual
0 facts verified.
[socduals] LP dual vs SOC dual (Max)
  > With LP solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With LP solver Ipopt.IpoptSolver
  > With LP solver CoinOptServices.OsilSolver

9 facts verified.
[socduals] LP vs SOC dual (Min)
  > With LP solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With LP solver Ipopt.IpoptSolver
  > With LP solver CoinOptServices.OsilSolver

9 facts verified.
[socduals] LP vs SOC reduced costs
  > With LP solver Clp.ClpMathProgSolverInterface.ClpSolver
  > With LP solver Ipopt.IpoptSolver
  > With LP solver CoinOptServices.OsilSolver



30 facts verified.
[socduals] SOC infeasibility ray test
0 facts verified.
WARNING: Conic solvers with duals tests not run!
ERROR: LoadError: LoadError: FactCheck finished with 10 non-successful tests.
 in error(::ASCIIString) at ./error.jl:21
 in exitstatus() at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:563
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/JuMP/test/runtests.jl, in expression starting on line 41
while loading /home/vagrant/.julia/v0.5/CoinOptServices/test/runtests.jl, in expression starting on line 26
===========================[ ERROR: CoinOptServices ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/CoinOptServices/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing Calculus v0.1.14
INFO: Removing DataStructures v0.4.3
INFO: Removing FactCheck v0.4.2
INFO: Removing ForwardDiff v0.1.6
INFO: Removing JuMP v0.12.2
INFO: Removing Lazy v0.10.1
INFO: Removing MacroTools v0.3.0
INFO: Removing NaNMath v0.2.1
INFO: Removing ReverseDiffSparse v0.5.5
ERROR: Base.Pkg.PkgError("CoinOptServices had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::ASCIIString) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#3(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
