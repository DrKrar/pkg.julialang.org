>>> 'Pkg.add("RobustShortestPath")' log
INFO: Cloning cache of RobustShortestPath from git://github.com/chkwon/RobustShortestPath.jl.git
INFO: Installing AutoHashEquals v0.0.9
INFO: Installing BinDeps v0.4.0
INFO: Installing Blosc v0.1.5
INFO: Installing Clustering v0.6.0
INFO: Installing Distributions v0.10.0
INFO: Installing FileIO v0.1.0
INFO: Installing GZip v0.2.19
INFO: Installing HDF5 v0.6.3
INFO: Installing JLD v0.6.3
INFO: Installing LegacyStrings v0.1.1
INFO: Installing LightGraphs v0.5.7
INFO: Installing LightXML v0.2.1
INFO: Installing MacroTools v0.3.0
INFO: Installing PDMats v0.4.2
INFO: Installing ParserCombinator v1.7.9
INFO: Installing Requires v0.2.2
INFO: Installing Rmath v0.1.2
INFO: Installing RobustShortestPath v0.2.3
INFO: Installing SHA v0.1.2
INFO: Installing StatsBase v0.9.0
INFO: Installing StatsFuns v0.3.0
INFO: Installing URIParser v0.1.5
INFO: Building Blosc
INFO: Building Rmath
INFO: Building HDF5
INFO: Building LightXML
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of RobustShortestPath
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("RobustShortestPath")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (670.33984375 MB free)
Uptime: 19549.0 sec
Load Avg:  0.9296875  0.9521484375  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     853812 s       4882 s      79209 s     780639 s         37 s
#2  3500 MHz     551514 s         47 s      69630 s    1220780 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - JSON                          0.6.0
 - RobustShortestPath            0.2.3
31 additional packages:
 - AutoHashEquals                0.0.9
 - BinDeps                       0.4.0
 - Blosc                         0.1.5
 - Calculus                      0.1.15
 - Clustering                    0.6.0
 - Compat                        0.8.6
 - Distances                     0.3.1
 - Distributions                 0.10.0
 - DualNumbers                   0.2.2
 - FileIO                        0.1.0
 - ForwardDiff                   0.2.2
 - GZip                          0.2.19
 - HDF5                          0.6.3
 - JLD                           0.6.3
 - LegacyStrings                 0.1.1
 - LightGraphs                   0.5.7
 - LightXML                      0.2.1
 - MacroTools                    0.3.0
 - NLsolve                       0.7.2              bc5bbedf (dirty)
 - NaNMath                       0.2.1
 - OCCA                          0.0.1              f9fb1c0c (dirty)
 - Optim                         0.5.0
 - PDMats                        0.4.2
 - ParserCombinator              1.7.9
 - PositiveFactorizations        0.0.1
 - Requires                      0.2.2
 - Rmath                         0.1.2
 - SHA                           0.1.2
 - StatsBase                     0.9.0
 - StatsFuns                     0.3.0
 - URIParser                     0.1.5
INFO: Testing RobustShortestPath
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/HDF5.ji for module HDF5.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/JLD.ji for module JLD.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/LightGraphs.ji for module LightGraphs.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Rmath.ji for module Rmath.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/StatsBase.ji for module StatsBase.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/StatsFuns.ji for module StatsFuns.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Distributions.ji for module Distributions.
INFO: Recompiling stale cache file /home/vagrant/.julia/lib/v0.4/Clustering.ji for module Clustering.
Origin=1, Destination=15
----------------------------------------------------
Single Coefficient Case
Gamma=0: Robust Path is [1 2 4 3 8 12 14 15] and the worst-case cost is 6060.0.
Gamma=1: Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 15024.0.
Gamma=2: Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 20864.0.
Gamma=3: Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 26604.0.
Gamma=4: Robust Path is [1 4 3 7 12 15] and the worst-case cost is 31293.0.
Gamma=5: Robust Path is [1 4 3 8 12 15] and the worst-case cost is 32291.0.
----------------------------------------------------
Two Coefficient Case
(Gamma_u,Gamma_v)=(1,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 15024.0.
(Gamma_u,Gamma_v)=(1,2): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 19474.0.
(Gamma_u,Gamma_v)=(1,3): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 20650.0.
(Gamma_u,Gamma_v)=(1,4): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 21590.0.
(Gamma_u,Gamma_v)=(1,5): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 22020.0.
(Gamma_u,Gamma_v)=(2,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 17070.0.
(Gamma_u,Gamma_v)=(2,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 21822.0.
(Gamma_u,Gamma_v)=(2,3): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 25314.0.
(Gamma_u,Gamma_v)=(2,4): Robust Path is [1 4 3 7 12 14 15] and the worst-case cost is 26490.0.
(Gamma_u,Gamma_v)=(2,5): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 27067.0.
(Gamma_u,Gamma_v)=(3,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 18870.0.
(Gamma_u,Gamma_v)=(3,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 23622.0.
(Gamma_u,Gamma_v)=(3,3): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 27662.0.
(Gamma_u,Gamma_v)=(3,4): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 29013.0.
(Gamma_u,Gamma_v)=(3,5): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 29953.0.
(Gamma_u,Gamma_v)=(4,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 19554.0.
(Gamma_u,Gamma_v)=(4,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 24610.0.
(Gamma_u,Gamma_v)=(4,3): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 28650.0.
(Gamma_u,Gamma_v)=(4,4): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 31293.0.
(Gamma_u,Gamma_v)=(4,5): Robust Path is [1 4 3 8 12 15] and the worst-case cost is 31619.0.
(Gamma_u,Gamma_v)=(5,1): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 20162.0.
(Gamma_u,Gamma_v)=(5,2): Robust Path is [1 4 3 8 12 14 15] and the worst-case cost is 25294.0.
(Gamma_u,Gamma_v)=(5,3): Robust Path is [1 4 3 8 12 15] and the worst-case cost is 29315.0.
(Gamma_u,Gamma_v)=(5,4): Robust Path is [1 4 3 7 12 15] and the worst-case cost is 31965.0.
(Gamma_u,Gamma_v)=(5,5): Robust Path is [1 4 3 8 12 15] and the worst-case cost is 32291.0.
32291.0
INFO: RobustShortestPath tests passed

>>> End of log
