>>> 'Pkg.add("Formatting")' log
INFO: Installing Formatting v0.1.5
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of Formatting
INFO: Use `Pkg.update()` to get the latest versions of your packages
INFO: Nothing to be done
INFO: METADATA is out-of-date — you may not have the latest version of Formatting
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Formatting")' log
Julia Version 0.4.6
Commit 2e358ce (2016-06-19 17:16 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.4 LTS
  uname: Linux 3.13.0-92-generic #139-Ubuntu SMP Tue Jun 28 20:42:26 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (574.7890625 MB free)
Uptime: 21580.0 sec
Load Avg:  0.9501953125  0.9716796875  1.01513671875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     906044 s       2607 s      97786 s     902632 s         39 s
#2  3499 MHz     652818 s       1015 s      88870 s    1286185 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.3
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.4
2 required packages:
 - Formatting                    0.1.5
 - JSON                          0.6.0
1 additional packages:
 - Compat                        0.8.6
INFO: Testing Formatting
test cformat equality...
...Done
  1.493674 seconds (4.56 M allocations: 175.900 MB, 7.84% gc time)

Test speed
integer @sprintf speed
  0.153528 seconds (1.31 M allocations: 58.549 MB, 3.66% gc time)
integer sprintf speed
  0.180590 seconds (1.50 M allocations: 61.104 MB, 3.77% gc time)
integer sprintf speed, bypass repeated lookup
  0.146659 seconds (1.50 M allocations: 61.138 MB, 4.19% gc time)

float64 @sprintf speed
  0.202289 seconds (1.61 M allocations: 70.831 MB, 3.46% gc time)
float64 sprintf speed
  0.159545 seconds (1.80 M allocations: 73.373 MB, 2.64% gc time)
float64 sprintf speed, bypass repeated lookup
  0.176310 seconds (1.80 M allocations: 73.405 MB, 4.88% gc time)

test commas...
test format...
INFO: Formatting tests passed

>>> End of log
