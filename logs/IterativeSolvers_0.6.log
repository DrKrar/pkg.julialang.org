>>> 'Pkg.add("IterativeSolvers")' log
INFO: Installing IterativeSolvers v0.2.2
INFO: Package database updated

>>> 'Pkg.test("IterativeSolvers")' log
Julia Version 0.6.0-dev.1946
Commit f550489 (2017-01-06 00:37 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-106-generic #153-Ubuntu SMP Tue Dec 6 15:44:32 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (2059.80078125 MB free)
Uptime: 37053.0 sec
Load Avg:  0.97412109375  0.98193359375  1.0146484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3498 MHz    1982595 s       2071 s     194410 s    1134815 s        106 s
#2  3498 MHz     662598 s       3976 s     126508 s    2808291 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - IterativeSolvers              0.2.2
 - JSON                          0.8.0
5 additional packages:
 - Compat                        0.10.0
 - CompilerTools                 0.2.1
 - DataStructures                0.4.6
 - DocOpt                        0.2.0
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
INFO: Computing test dependencies for IterativeSolvers...
INFO: Cloning cache of MatrixMarket from https://github.com/JuliaSparse/MatrixMarket.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Blosc v0.1.7
INFO: Installing BufferedStreams v0.2.0
INFO: Installing FactCheck v0.4.3
INFO: Installing HDF5 v0.7.2
INFO: Installing Libz v0.2.1
INFO: Installing MAT v0.3.1
INFO: Installing MatrixMarket v0.1.0
INFO: Installing SHA v0.3.0
INFO: Installing URIParser v0.1.6
INFO: Building Blosc
INFO: Building HDF5
WARNING: takebuf_string(b) is deprecated, use String(take!(b)) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] takebuf_string(::Base.AbstractIOBuffer{Array{UInt8,1}}) at ./deprecated.jl:50
 [3] macro expansion; at /home/vagrant/.julia/v0.6/BinDeps/src/dependencies.jl:887 [inlined]
 [4] anonymous at ./<missing>:?
 [5] include_from_node1(::String) at ./loading.jl:532
 [6] include(::SubString{String}) at ./sysimg.jl:14
 [7] evalfile(::SubString{String}, ::Array{String,1}) at ./loading.jl:572 (repeats 2 times)
 [8] cd(::##2#4, ::String) at ./file.jl:69
 [9] (::##1#3)(::IOStream) at ./none:13
 [10] open(::##1#3, ::String, ::String) at ./iostream.jl:152
 [11] eval(::Module, ::Any) at ./boot.jl:236
 [12] process_options(::Base.JLOptions) at ./client.jl:285
 [13] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/HDF5/deps/build.jl, in expression starting on line 27
INFO: Testing IterativeSolvers
WARNING: replacing module IterativeSolvers.
Basic operations
  > Adivtype
  > Linear operator defined as a function
WARNING: the no-op `transpose` for non-numeric arrays is deprecated, and no specific `transpose` method for IterativeSolvers.MatrixFcn{Int64} exists. Use `permutedims(x, (2, 1))` for matrices and `reshape(x, 1, length(x))` for vectors, or write a specific `transpose(x::IterativeSolvers.MatrixFcn{Int64})` method if appropriate.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] transpose(::IterativeSolvers.MatrixFcn{Int64}) at ./deprecated.jl:748
 [3] ctranspose at ./operators.jl:498 [inlined]
 [4] Ac_mul_B(::IterativeSolvers.MatrixFcn{Int64}, ::Array{Float32,1}) at ./operators.jl:508
 [5] (::##21#62{Array{Float32,1},##20#61{Array{Float32,1}}})() at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272
 [6] do_fact(::##21#62{Array{Float32,1},##20#61{Array{Float32,1}}}, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:334
 [7] macro expansion at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:272 [inlined]
 [8] (::##5#44)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/common.jl:47
 [9] context(::##5#44, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [10] (::##1#40)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/common.jl:12
 [11] facts(::##1#40, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [12] include_from_node1(::String) at ./loading.jl:532
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:532
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:308
 [17] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/common.jl, in expression starting on line 4
18 facts verified.
Stationary solvers
  > Float32
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float32,1}) at ./deprecated.jl:50
 [3] (::##82#100)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:21
 [4] context(::##82#100, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [5] (::##81#99)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:16
 [6] facts(::##81#99, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:308
 [10] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl, in expression starting on line 14
  > Float64
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] (::##82#100)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:21
 [4] context(::##82#100, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [5] (::##81#99)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:16
 [6] facts(::##81#99, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:308
 [10] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl, in expression starting on line 14
  > Complex{Float32}
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Complex{Float32},1}) at ./deprecated.jl:50
 [3] (::##82#100)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:21
 [4] context(::##82#100, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [5] (::##81#99)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:16
 [6] facts(::##81#99, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:308
 [10] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl, in expression starting on line 14
  > Complex{Float64}
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Complex{Float64},1}) at ./deprecated.jl:50
 [3] (::##82#100)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:21
 [4] context(::##82#100, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [5] (::##81#99)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl:16
 [6] facts(::##81#99, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [7] include_from_node1(::String) at ./loading.jl:532
 [8] include(::String) at ./sysimg.jl:14
 [9] process_options(::Base.JLOptions) at ./client.jl:308
 [10] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl, in expression starting on line 14
64 facts verified.
cg
  > Small full system
  > Sparse Laplacian
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int64}, ::Array{Float64,1}) at ./deprecated.jl:50
 [3] spdiags(::Array{Float64,2}, ::Array{Int64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/test/getDivGrad.jl:36
 [4] getDivGrad(::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/test/getDivGrad.jl:4
 [5] (::##127#163)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/cg.jl:30
 [6] context(::##127#163, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [7] (::##117#153)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/cg.jl:29
 [8] facts(::##117#153, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:532
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:308
 [14] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/cg.jl, in expression starting on line 6
WARNING: round{T}(::Type{T},x::AbstractArray) is deprecated, use round.(T,x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] round(::Type{Int64}, ::Array{Float64,1}) at ./deprecated.jl:50
 [3] spdiags(::Array{Float64,2}, ::Array{Int64,1}, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/test/getDivGrad.jl:36
 [4] getDivGrad(::Int64, ::Int64, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/test/getDivGrad.jl:4
 [5] (::##127#163)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/cg.jl:30
 [6] context(::##127#163, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [7] (::##117#153)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/cg.jl:29
 [8] facts(::##117#153, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [9] include_from_node1(::String) at ./loading.jl:532
 [10] include(::String) at ./sysimg.jl:14
 [11] include_from_node1(::String) at ./loading.jl:532
 [12] include(::String) at ./sysimg.jl:14
 [13] process_options(::Base.JLOptions) at ./client.jl:308
 [14] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/cg.jl, in expression starting on line 6
    > matrix
    > function
    > function with specified starting guess
15 facts verified.
gmres
  > Matrix{Float32}
  > Matrix{Float64}
  > Matrix{Complex{Float32}}
  > Matrix{Complex{Float64}}
  > SparseMatrixCSC{Float64}
  > SparseMatrixCSC{Complex{Float64}}
36 facts verified.
idrs
  > Matrix{Float32}
  > Matrix{Float64}
  > Matrix{Complex{Float32}}
  > Matrix{Complex{Float64}}
  > SparseMatrixCSC{Float64}
  > SparseMatrixCSC{Complex{Float64}}
12 facts verified.
Chebyshev
  > Matrix{Float32}
  > Matrix{Float64}
  > Matrix{Complex{Float32}}
  > Matrix{Complex{Float64}}
8 facts verified.
simple eigensolvers
  > Matrix{Float32}
    > Power iteration
    > Inverse iteration
  > Matrix{Float64}
    > Power iteration
    > Inverse iteration
  > Matrix{Complex{Float32}}
    > Power iteration
    > Inverse iteration
  > Matrix{Complex{Float64}}
    > Power iteration
    > Inverse iteration
8 facts verified.
eigvals_lanczos
  > Matrix{Float32}
  > Op{Float32}
  > Matrix{Float64}
  > Op{Float64}
8 facts verified.
svdl
  > Thick restart with method=ritz
    > Diagonal Matrix{Float32}
WARNING: sub is deprecated, use view instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sub(::Array{Float32,2}, ::Vararg{Any,N}) at ./deprecated.jl:30
 [3] extend!(::Array{Float32,2}, ::IterativeSolvers.PartialFactorization{Float32,Float32}, ::Int64, ::Bool, ::Bool, ::Float64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:612
 [4] build(::Array{Float32,2}, ::Array{Float32,1}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:410
 [5] #svdl#42(::Int64, ::Int64, ::Array{Float32,1}, ::Int64, ::Float64, ::Float64, ::Bool, ::Symbol, ::Bool, ::Symbol, ::Bool, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:200
 [6] (::IterativeSolvers.#kw##svdl)(::Array{Any,1}, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at ./<missing>:0
 [7] (::##321#338)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:15
 [8] context(::##321#338, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [9] (::##320#337)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:8
 [10] context(::##320#337, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [11] (::##319#336)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:6
 [12] facts(::##319#336, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [13] include_from_node1(::String) at ./loading.jl:532
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:532
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:308
 [18] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl, in expression starting on line 4
WARNING: sub is deprecated, use view instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] sub(::Array{Float32,2}, ::Vararg{Any,N}) at ./deprecated.jl:30
 [3] extend!(::Array{Float32,2}, ::IterativeSolvers.PartialFactorization{Float32,Float32}, ::Int64, ::Bool, ::Bool, ::Float64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:612
 [4] build(::Array{Float32,2}, ::Array{Float32,1}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:410
 [5] #svdl#42(::Int64, ::Int64, ::Array{Float32,1}, ::Int64, ::Float64, ::Float64, ::Bool, ::Symbol, ::Bool, ::Symbol, ::Bool, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:200
 [6] (::IterativeSolvers.#kw##svdl)(::Array{Any,1}, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at ./<missing>:0
 [7] (::##321#338)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:15
 [8] context(::##321#338, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [9] (::##320#337)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:8
 [10] context(::##320#337, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [11] (::##319#336)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:6
 [12] facts(::##319#336, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [13] include_from_node1(::String) at ./loading.jl:532
 [14] include(::String) at ./sysimg.jl:14
 [15] include_from_node1(::String) at ./loading.jl:532
 [16] include(::String) at ./sysimg.jl:14
 [17] process_options(::Base.JLOptions) at ./client.jl:308
 [18] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl, in expression starting on line 4
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float32,1}) at ./deprecated.jl:50
 [3] isconverged(::IterativeSolvers.PartialFactorization{Float32,Float32}, ::Base.LinAlg.SVD{Float32,Float32,Array{Float32,2}}, ::Int64, ::Float64, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:345
 [4] #svdl#42(::Int64, ::Int64, ::Array{Float32,1}, ::Int64, ::Float64, ::Float64, ::Bool, ::Symbol, ::Bool, ::Symbol, ::Bool, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:229
 [5] (::IterativeSolvers.#kw##svdl)(::Array{Any,1}, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at ./<missing>:0
 [6] (::##321#338)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:15
 [7] context(::##321#338, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [8] (::##320#337)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:8
 [9] context(::##320#337, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [10] (::##319#336)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:6
 [11] facts(::##319#336, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [12] include_from_node1(::String) at ./loading.jl:532
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:532
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:308
 [17] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl, in expression starting on line 4
    > Rectangular Matrix{Float32}
    > Diagonal Matrix{Float64}
WARNING: abs{T <: Number}(x::AbstractArray{T}) is deprecated, use abs.(x) instead.
Stacktrace:
 [1] depwarn(::String, ::Symbol) at ./deprecated.jl:64
 [2] abs(::Array{Float64,1}) at ./deprecated.jl:50
 [3] isconverged(::IterativeSolvers.PartialFactorization{Float64,Float64}, ::Base.LinAlg.SVD{Float64,Float64,Array{Float64,2}}, ::Int64, ::Float64, ::Float64, ::Bool) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:345
 [4] #svdl#42(::Int64, ::Int64, ::Array{Float64,1}, ::Int64, ::Float64, ::Float64, ::Bool, ::Symbol, ::Bool, ::Symbol, ::Bool, ::IterativeSolvers.#svdl, ::Array{Float64,2}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:229
 [5] (::IterativeSolvers.#kw##svdl)(::Array{Any,1}, ::IterativeSolvers.#svdl, ::Array{Float64,2}, ::Int64) at ./<missing>:0
 [6] (::##321#338)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:15
 [7] context(::##321#338, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [8] (::##320#337)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:8
 [9] context(::##320#337, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [10] (::##319#336)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:6
 [11] facts(::##319#336, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [12] include_from_node1(::String) at ./loading.jl:532
 [13] include(::String) at ./sysimg.jl:14
 [14] include_from_node1(::String) at ./loading.jl:532
 [15] include(::String) at ./sysimg.jl:14
 [16] process_options(::Base.JLOptions) at ./client.jl:308
 [17] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl, in expression starting on line 4
    > Rectangular Matrix{Float64}
  > Thick restart with method=harmonic
    > Diagonal Matrix{Float32}
ERROR: LoadError: LoadError: MethodError: no method matching *(::Array{Float32,1}, ::SubArray{Float32,1,Array{Float32,2},Tuple{Int64,Colon},true})
Closest candidates are:
  *(::Any, ::Any, !Matched::Any, !Matched::Any...) at operators.jl:273
  *{T<:Union{Complex{Float32},Complex{Float64},Float32,Float64},S}(!Matched::Union{Base.ReshapedArray{T<:Union{Complex{Float32},Complex{Float64},Float32,Float64},2,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N}}},DenseArray{T<:Union{Complex{Float32},Complex{Float64},Float32,Float64},2},SubArray{T<:Union{Complex{Float32},Complex{Float64},Float32,Float64},2,A<:Union{Base.ReshapedArray{T,N,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N}}},DenseArray},I<:Tuple{Vararg{Union{Base.AbstractCartesianIndex,Colon,Int64,Range{Int64}},N}},L}}, ::Union{Base.ReshapedArray{S,1,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N}}},DenseArray{S,1},SubArray{S,1,A<:Union{Base.ReshapedArray{T,N,A<:DenseArray,MI<:Tuple{Vararg{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},N}}},DenseArray},I<:Tuple{Vararg{Union{Base.AbstractCartesianIndex,Colon,Int64,Range{Int64}},N}},L}}) at linalg/matmul.jl:78
  *(!Matched::Base.LinAlg.AbstractTriangular{T,S<:AbstractArray{T,2}}, ::AbstractArray{T,1}) at linalg/triangular.jl:1556
  ...
Stacktrace:
 [1] harmonicrestart!(::Array{Float32,2}, ::IterativeSolvers.PartialFactorization{Float32,Float32}, ::Base.LinAlg.SVD{Float32,Float32,Array{Float32,2}}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:502
 [2] #svdl#42(::Int64, ::Int64, ::Array{Float32,1}, ::Int64, ::Float64, ::Float64, ::Bool, ::Symbol, ::Bool, ::Symbol, ::Bool, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at /home/vagrant/.julia/v0.6/IterativeSolvers/src/svdl.jl:220
 [3] (::IterativeSolvers.#kw##svdl)(::Array{Any,1}, ::IterativeSolvers.#svdl, ::Array{Float32,2}, ::Int64) at ./<missing>:0
 [4] (::##321#338)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:15
 [5] context(::##321#338, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [6] (::##320#337)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:8
 [7] context(::##320#337, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:475
 [8] (::##319#336)() at /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl:6
 [9] facts(::##319#336, ::String) at /home/vagrant/.julia/v0.6/FactCheck/src/FactCheck.jl:449
 [10] include_from_node1(::String) at ./loading.jl:532
 [11] include(::String) at ./sysimg.jl:14
 [12] include_from_node1(::String) at ./loading.jl:532
 [13] include(::String) at ./sysimg.jl:14
 [14] process_options(::Base.JLOptions) at ./client.jl:308
 [15] _start() at ./client.jl:374
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/svdl.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl, in expression starting on line 261
==========================[ ERROR: IterativeSolvers ]===========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/IterativeSolvers/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: Removing BinDeps v0.4.5
INFO: Removing Blosc v0.1.7
INFO: Removing BufferedStreams v0.2.0
INFO: Removing FactCheck v0.4.3
INFO: Removing HDF5 v0.7.2
INFO: Removing Libz v0.2.1
INFO: Removing MAT v0.3.1
INFO: Removing MatrixMarket v0.1.0
INFO: Removing SHA v0.3.0
INFO: Removing URIParser v0.1.6
ERROR: IterativeSolvers had test errors
Stacktrace:
 [1] #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:754
 [2] (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 [3] (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 [4] cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:69
 [5] #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 [6] (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 [7] #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261
 [8] test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:261

>>> End of log
