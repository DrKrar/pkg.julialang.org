>>> 'Pkg.add("Lexicon")' log
INFO: Installing Lexicon v0.1.18
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of Lexicon
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("Lexicon")' log
Julia Version 0.5.0-dev+2918
Commit 1eacbbb (2016-02-28 16:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Computing test dependencies for Lexicon...
INFO: Installing FactCheck v0.4.2
INFO: Testing Lexicon
Query parsing.
  > Functions.
Docile: updating package list...
WARNING: isgeneric(f) is deprecated, use isa(f,Function) instead.
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in isgeneric(::Any) at ./deprecated.jl:50
 in includedfiles(::Module, ::Set{UTF8String}) at /home/vagrant/.julia/v0.5/Docile/src/Collector/search.jl:30
 [inlined code] from ./dict.jl:816
 in (::Docile.Collector.##call#5#8)(::Array{Any,1}, ::Type{T}, ::Module, ::ASCIIString, ::Set{UTF8String}, ::Dict{UTF8String,Expr}) at /home/vagrant/.julia/v0.5/Docile/src/Collector/types.jl:97
 in findpackages(::Set{UTF8String}) at /home/vagrant/.julia/v0.5/Docile/src/Collector/utilities.jl:287
 in update!(::Docile.Cache.GlobalCache) at /home/vagrant/.julia/v0.5/Docile/src/Cache/types.jl:66
 [inlined code] from /home/vagrant/.julia/v0.5/Docile/src/Cache/types.jl:76
 in Lexicon.Query(::Array{Any,1}, ::Int64) at /home/vagrant/.julia/v0.5/Lexicon/src/query.jl:19
 in do_fact(::LexiconTests.##4#130, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
 [inlined code] from ./boot.jl:331
 in (::LexiconTests.##2#128)() at /home/vagrant/.julia/v0.5/Lexicon/test/facts/query-parsing.jl:4
 in context(::LexiconTests.##2#128, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
 in (::LexiconTests.##1#127)() at /home/vagrant/.julia/v0.5/Lexicon/test/facts/query-parsing.jl:2
 in facts(::LexiconTests.##1#127, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include(::UTF8String) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Lexicon/test/facts/query-parsing.jl, in expression starting on line 1
WARNING: readall is deprecated, use readstring instead.
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in readall(::UTF8String, ::Vararg{UTF8String}) at ./deprecated.jl:30
 in parsefile(::UTF8String) at /home/vagrant/.julia/v0.5/Docile/src/Utilities.jl:71
 [inlined code] from ./operators.jl:37
 in findpackages(::Set{UTF8String}) at /home/vagrant/.julia/v0.5/Docile/src/Collector/utilities.jl:283
 in update!(::Docile.Cache.GlobalCache) at /home/vagrant/.julia/v0.5/Docile/src/Cache/types.jl:66
 [inlined code] from /home/vagrant/.julia/v0.5/Docile/src/Cache/types.jl:76
 in Lexicon.Query(::Array{Any,1}, ::Int64) at /home/vagrant/.julia/v0.5/Lexicon/src/query.jl:19
 in do_fact(::LexiconTests.##4#130, ::Expr, ::Symbol, ::FactCheck.ResultMetadata) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:333
 [inlined code] from ./boot.jl:331
 in (::LexiconTests.##2#128)() at /home/vagrant/.julia/v0.5/Lexicon/test/facts/query-parsing.jl:4
 in context(::LexiconTests.##2#128, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
 in (::LexiconTests.##1#127)() at /home/vagrant/.julia/v0.5/Lexicon/test/facts/query-parsing.jl:2
 in facts(::LexiconTests.##1#127, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include(::UTF8String) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Lexicon/test/facts/query-parsing.jl, in expression starting on line 1
  > Methods.
  > Macros.
  > Types.
  > Globals.
60 facts verified.
Query results.
  > Functions.
Docile: caching 80 modules from 'Base'.
Docile: caching 3 modules from 'Compat'.
Docile: caching 1 module from 'FactCheck'.
Docile: caching 9 modules from 'Docile'.
Docile: caching 4 modules from 'LexiconTests'.
Docile: caching 1 module from 'Lexicon'.
WARNING: readall is deprecated, use readstring instead.
 in depwarn(::ASCIIString, ::Symbol) at ./deprecated.jl:64
 in readall(::ASCIIString, ::Vararg{ASCIIString}) at ./deprecated.jl:30
 in findexternal(::ASCIIString) at /home/vagrant/.julia/v0.5/Docile/src/Collector/utilities.jl:244
 in get_docs!(::Docile.Collector.Output, ::Docile.Collector.ModuleData, ::Docile.Runner.State, ::UTF8String, ::Array{Any,1}) at /home/vagrant/.julia/v0.5/Docile/src/Collector/docstrings.jl:131
 in process!(::Docile.Collector.Output, ::Docile.Collector.ModuleData, ::Docile.Runner.State, ::UTF8String, ::Expr) at /home/vagrant/.julia/v0.5/Docile/src/Collector/docstrings.jl:54
 [inlined code] from ./essentials.jl:25
 in cd(::Docile.Collector.##9#10{Docile.Collector.Output,Docile.Collector.ModuleData,UTF8String,Expr}, ::ASCIIString) at ./file.jl:48
 [inlined code] from ./tuple.jl:8
 in docstrings(::Docile.Collector.ModuleData) at /home/vagrant/.julia/v0.5/Docile/src/Collector/docstrings.jl:40
 in initdocs!(::Docile.Cache.GlobalCache, ::Module) at /home/vagrant/.julia/v0.5/Docile/src/Cache/storage.jl:46
 [inlined code] from ./operators.jl:37
 in getdocs(::Docile.Cache.GlobalCache, ::Module) at /home/vagrant/.julia/v0.5/Docile/src/Cache/storage.jl:54
 in Docile.Legacy.Metadata(::Module) at /home/vagrant/.julia/v0.5/Docile/src/Legacy/types.jl:66
 in #metadata#1(::Bool, ::Any, ::Module) at /home/vagrant/.julia/v0.5/Docile/src/Interface/legacy.jl:40
 in run(::Lexicon.Query) at /home/vagrant/.julia/v0.5/Lexicon/src/query.jl:177
 in test_query(::Lexicon.Query, ::ASCIIString) at /home/vagrant/.julia/v0.5/Lexicon/test/facts/querying-results.jl:2
 in (::LexiconTests.##270#291)() at /home/vagrant/.julia/v0.5/Lexicon/test/facts/querying-results.jl:19
 in context(::LexiconTests.##270#291, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:474
 in (::LexiconTests.##269#290)() at /home/vagrant/.julia/v0.5/Lexicon/test/facts/querying-results.jl:17
 in facts(::LexiconTests.##269#290, ::ASCIIString) at /home/vagrant/.julia/v0.5/FactCheck/src/FactCheck.jl:448
 in include(::UTF8String) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Lexicon/test/facts/querying-results.jl, in expression starting on line 16
  > Methods.
  > Macros.
  > Types.
  > Globals.
  > Partial signature matching.
  > Full text search.
  > REPL Help.
270 facts verified.
===============================[ ERROR: Lexicon ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Lexicon/test/runtests.jl`, ProcessSignaled(9)) [0]

================================================================================
INFO: Removing FactCheck v0.4.2
ERROR: Base.Pkg.PkgError("Lexicon had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::UTF8String) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
