>>> 'Pkg.add("FlexibleArrays")' log
INFO: Cloning cache of FlexibleArrays from https://github.com/eschnett/FlexibleArrays.jl.git
INFO: Installing FlexibleArrays v0.1.1
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of FlexibleArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("FlexibleArrays")' log
Julia Version 0.5.0-dev+2918
Commit 1eacbbb (2016-02-28 16:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing FlexibleArrays
T = ()

WARNING: deprecated syntax "call(::Type{FlexArrayImpl{T}}, ...)".
Use "(::Type{FlexArrayImpl{T}})(...)" instead.
T = ((true,true),)

WARNING: deprecated syntax "call(::Type{FlexArrayImpl11{lbnd1,ubnd1,T}}, ...)".
Use "(::Type{FlexArrayImpl11{lbnd1,ubnd1,T}})(...)" instead.
T = ((true,true),)
T = ((true,false),)

WARNING: deprecated syntax "call(::Type{FlexArrayImpl10{lbnd1,T}}, ...)".
Use "(::Type{FlexArrayImpl10{lbnd1,T}})(...)" instead.
T = ((true,false),)
T = ((false,false),)

WARNING: deprecated syntax "call(::Type{FlexArrayImpl00{T}}, ...)".
Use "(::Type{FlexArrayImpl00{T}})(...)" instead.
T = ((false,false),)
T = ((true,true),(true,true))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl1111{lbnd1,ubnd1,lbnd2,ubnd2,T}}, ...)".
Use "(::Type{FlexArrayImpl1111{lbnd1,ubnd1,lbnd2,ubnd2,T}})(...)" instead.
T = ((true,true),(true,true))
T = ((true,true),(true,false))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl1110{lbnd1,ubnd1,lbnd2,T}}, ...)".
Use "(::Type{FlexArrayImpl1110{lbnd1,ubnd1,lbnd2,T}})(...)" instead.
T = ((true,true),(true,false))
T = ((true,true),(false,false))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl1100{lbnd1,ubnd1,T}}, ...)".
Use "(::Type{FlexArrayImpl1100{lbnd1,ubnd1,T}})(...)" instead.
T = ((true,true),(false,false))
T = ((true,false),(true,true))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl1011{lbnd1,lbnd2,ubnd2,T}}, ...)".
Use "(::Type{FlexArrayImpl1011{lbnd1,lbnd2,ubnd2,T}})(...)" instead.
T = ((true,false),(true,true))
T = ((true,false),(true,false))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl1010{lbnd1,lbnd2,T}}, ...)".
Use "(::Type{FlexArrayImpl1010{lbnd1,lbnd2,T}})(...)" instead.
T = ((true,false),(true,false))
T = ((true,false),(false,false))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl1000{lbnd1,T}}, ...)".
Use "(::Type{FlexArrayImpl1000{lbnd1,T}})(...)" instead.
T = ((true,false),(false,false))
T = ((false,false),(true,true))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl0011{lbnd2,ubnd2,T}}, ...)".
Use "(::Type{FlexArrayImpl0011{lbnd2,ubnd2,T}})(...)" instead.
T = ((false,false),(true,true))
T = ((false,false),(true,false))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl0010{lbnd2,T}}, ...)".
Use "(::Type{FlexArrayImpl0010{lbnd2,T}})(...)" instead.
T = ((false,false),(true,false))
T = ((false,false),(false,false))

WARNING: deprecated syntax "call(::Type{FlexArrayImpl0000{T}}, ...)".
Use "(::Type{FlexArrayImpl0000{T}})(...)" instead.
T = ((false,false),(false,false))
Error During Test
  Test threw an exception of type MethodError
  Expression: length(Arr1_fix) === 10
  MethodError: no method matching length(::Type{FlexibleArrays.FlexArrayImpl11{1,10,Float64}})
   in include(::ASCIIString) at ./boot.jl:264
   in include_from_node1(::UTF8String) at ./loading.jl:417
   in process_options(::Base.JLOptions) at ./client.jl:262
   in _start() at ./client.jl:318
ERROR: LoadError: There was an error during testing
 in record(::Base.Test.FallbackTestSet, ::Base.Test.Error) at ./test.jl:317
 in do_test(::Base.Test.Threw, ::Expr) at ./test.jl:215
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/FlexibleArrays/test/runtests.jl, in expression starting on line 67
===========================[ ERROR: FlexibleArrays ]============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/FlexibleArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("FlexibleArrays had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::UTF8String) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
