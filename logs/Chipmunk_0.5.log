>>> 'Pkg.add("Chipmunk")' log
INFO: Cloning cache of Chipmunk from https://github.com/zyedidia/Chipmunk.jl.git
INFO: Cloning cache of SFML from https://github.com/zyedidia/SFML.jl.git
INFO: Installing Chipmunk v0.0.5
INFO: Installing SFML v0.1.0
INFO: Building SFML
Downloading SFML...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   168  100   168    0     0    237      0 --:--:-- --:--:-- --:--:--   237
  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0  9 1951k    9  188k    0     0  97501      0  0:00:20  0:00:01  0:00:19  200k 24 1951k   24  475k    0     0   159k      0  0:00:12  0:00:02  0:00:10  244k 39 1951k   39  771k    0     0   193k      0  0:00:10  0:00:03  0:00:07  261k 59 1951k   59 1162k    0     0   228k      0  0:00:08  0:00:05  0:00:03  287k 82 1951k   82 1612k    0     0   267k      0  0:00:07  0:00:06  0:00:01  323k100 1951k  100 1951k    0     0   297k      0  0:00:06  0:00:06 --:--:--  384k
Downloading CSFML...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100   168  100   168    0     0    825      0 --:--:-- --:--:-- --:--:--   827
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 1515k  100 1515k    0     0  1316k      0  0:00:01  0:00:01 --:--:-- 2090k
Successfully built SFML.jl!
INFO: Building Chipmunk
Checking dependencies...
/usr/bin/cmake
Good...
Cloning Chipmunk source...
Cloning into 'Chipmunk2D'...
Note: checking out 'Chipmunk-7.0.0'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 079a859... Finish the build scripts.
HEAD is now at 079a859... Finish the build scripts.
-- The C compiler identification is GNU 4.8.4
-- The CXX compiler identification is GNU 4.8.4
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
Configuring Chipmunk2D version 7.0.0
-- Configuring done
-- Generating done
-- Build files have been written to: /home/vagrant/.julia/v0.5/Chipmunk/deps/Chipmunk2D
Scanning dependencies of target chipmunk
[  1%] Building C object src/CMakeFiles/chipmunk.dir/cpHashSet.c.o
[  3%] Building C object src/CMakeFiles/chipmunk.dir/cpSimpleMotor.c.o
[  4%] Building C object src/CMakeFiles/chipmunk.dir/cpSpatialIndex.c.o
[  6%] Building C object src/CMakeFiles/chipmunk.dir/cpSpaceComponent.c.o
[  8%] Building C object src/CMakeFiles/chipmunk.dir/cpBody.c.o
[  9%] Building C object src/CMakeFiles/chipmunk.dir/cpSpace.c.o
[ 11%] Building C object src/CMakeFiles/chipmunk.dir/cpArray.c.o
[ 12%] Building C object src/CMakeFiles/chipmunk.dir/cpSpaceHash.c.o
[ 14%] Building C object src/CMakeFiles/chipmunk.dir/cpArbiter.c.o
[ 16%] Building C object src/CMakeFiles/chipmunk.dir/cpBBTree.c.o
[ 17%] Building C object src/CMakeFiles/chipmunk.dir/cpGrooveJoint.c.o
[ 19%] Building C object src/CMakeFiles/chipmunk.dir/chipmunk.c.o
[ 20%] Building C object src/CMakeFiles/chipmunk.dir/cpSpaceDebug.c.o
[ 22%] Building C object src/CMakeFiles/chipmunk.dir/cpGearJoint.c.o
[ 24%] Building C object src/CMakeFiles/chipmunk.dir/cpSweep1D.c.o
[ 25%] Building C object src/CMakeFiles/chipmunk.dir/cpPinJoint.c.o
[ 27%] Building C object src/CMakeFiles/chipmunk.dir/cpDampedRotarySpring.c.o
[ 29%] Building C object src/CMakeFiles/chipmunk.dir/cpRatchetJoint.c.o
[ 30%] Building C object src/CMakeFiles/chipmunk.dir/cpPivotJoint.c.o
[ 32%] Building C object src/CMakeFiles/chipmunk.dir/cpDampedSpring.c.o
[ 33%] Building C object src/CMakeFiles/chipmunk.dir/cpHastySpace.c.o
[ 35%] Building C object src/CMakeFiles/chipmunk.dir/cpPolyline.c.o
[ 37%] Building C object src/CMakeFiles/chipmunk.dir/cpConstraint.c.o
[ 38%] Building C object src/CMakeFiles/chipmunk.dir/cpMarch.c.o
[ 40%] Building C object src/CMakeFiles/chipmunk.dir/cpSpaceStep.c.o
[ 41%] Building C object src/CMakeFiles/chipmunk.dir/cpCollision.c.o
[ 43%] Building C object src/CMakeFiles/chipmunk.dir/cpSpaceQuery.c.o
[ 45%] Building C object src/CMakeFiles/chipmunk.dir/cpShape.c.o
[ 46%] Building C object src/CMakeFiles/chipmunk.dir/cpRotaryLimitJoint.c.o
[ 48%] Building C object src/CMakeFiles/chipmunk.dir/cpSlideJoint.c.o
[ 50%] Building C object src/CMakeFiles/chipmunk.dir/cpPolyShape.c.o
Linking C shared library libchipmunk.so
[ 50%] Built target chipmunk
Scanning dependencies of target chipmunk_static
[ 51%] Building C object src/CMakeFiles/chipmunk_static.dir/cpHashSet.c.o
[ 53%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSimpleMotor.c.o
[ 54%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSpatialIndex.c.o
[ 56%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSpaceComponent.c.o
[ 58%] Building C object src/CMakeFiles/chipmunk_static.dir/cpBody.c.o
[ 59%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSpace.c.o
[ 61%] Building C object src/CMakeFiles/chipmunk_static.dir/cpArray.c.o
[ 62%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSpaceHash.c.o
[ 64%] Building C object src/CMakeFiles/chipmunk_static.dir/cpArbiter.c.o
[ 66%] Building C object src/CMakeFiles/chipmunk_static.dir/cpBBTree.c.o
[ 67%] Building C object src/CMakeFiles/chipmunk_static.dir/cpGrooveJoint.c.o
[ 69%] Building C object src/CMakeFiles/chipmunk_static.dir/chipmunk.c.o
[ 70%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSpaceDebug.c.o
[ 72%] Building C object src/CMakeFiles/chipmunk_static.dir/cpGearJoint.c.o
[ 74%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSweep1D.c.o
[ 75%] Building C object src/CMakeFiles/chipmunk_static.dir/cpPinJoint.c.o
[ 77%] Building C object src/CMakeFiles/chipmunk_static.dir/cpDampedRotarySpring.c.o
[ 79%] Building C object src/CMakeFiles/chipmunk_static.dir/cpRatchetJoint.c.o
[ 80%] Building C object src/CMakeFiles/chipmunk_static.dir/cpPivotJoint.c.o
[ 82%] Building C object src/CMakeFiles/chipmunk_static.dir/cpDampedSpring.c.o
[ 83%] Building C object src/CMakeFiles/chipmunk_static.dir/cpHastySpace.c.o
[ 85%] Building C object src/CMakeFiles/chipmunk_static.dir/cpPolyline.c.o
[ 87%] Building C object src/CMakeFiles/chipmunk_static.dir/cpConstraint.c.o
[ 88%] Building C object src/CMakeFiles/chipmunk_static.dir/cpMarch.c.o
[ 90%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSpaceStep.c.o
[ 91%] Building C object src/CMakeFiles/chipmunk_static.dir/cpCollision.c.o
[ 93%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSpaceQuery.c.o
[ 95%] Building C object src/CMakeFiles/chipmunk_static.dir/cpShape.c.o
[ 96%] Building C object src/CMakeFiles/chipmunk_static.dir/cpRotaryLimitJoint.c.o
[ 98%] Building C object src/CMakeFiles/chipmunk_static.dir/cpSlideJoint.c.o
[100%] Building C object src/CMakeFiles/chipmunk_static.dir/cpPolyShape.c.o
Linking C static library libchipmunk.a
[100%] Built target chipmunk_static
Successfully built Chipmunk.jl!
INFO: Package database updated

>>> 'Pkg.test("Chipmunk")' log
Julia Version 0.5.0-dev+2918
Commit 1eacbbb (2016-02-28 16:56 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1
INFO: Testing Chipmunk
WARNING: Method definition (::Type{SFML.Texture})(Integer, Integer) in module SFML at /home/vagrant/.julia/v0.5/SFML/src/julia/Graphics/texture.jl:12 overwritten at /home/vagrant/.julia/v0.5/SFML/src/julia/Graphics/texture.jl:24.
WARNING: Method definition set_texture(SFML.RectangleShape, SFML.Texture) in module SFML at /home/vagrant/.julia/v0.5/SFML/src/julia/Graphics/rectangleShape.jl:41 overwritten at /home/vagrant/.julia/v0.5/SFML/src/julia/Graphics/rectangleShape.jl:53.
ERROR: LoadError: LoadError: syntax: unhandled expr (ccall libcsfml_graphics (inert sfVertexArray_getPrimitiveType))
 in include(::UTF8String) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/SFML/src/julia/Graphics/vertexArray.jl, in expression starting on line 63
while loading /home/vagrant/.julia/v0.5/SFML/src/SFML.jl, in expression starting on line 122
ERROR: LoadError: LoadError: Failed to precompile SFML to /home/vagrant/.julia/lib/v0.5/SFML.ji
 in error(::ASCIIString) at ./error.jl:21
 in compilecache(::ASCIIString) at ./loading.jl:496
 in require(::Symbol) at ./loading.jl:355
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::ASCIIString) at ./loading.jl:417
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in require(::Symbol) at ./loading.jl:348
 in include(::ASCIIString) at ./boot.jl:264
 in include_from_node1(::UTF8String) at ./loading.jl:417
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/Chipmunk/src/Chipmunk.jl, in expression starting on line 4
while loading /home/vagrant/.julia/v0.5/Chipmunk/test/runtests.jl, in expression starting on line 1
==============================[ ERROR: Chipmunk ]===============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/Chipmunk/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: Base.Pkg.PkgError("Chipmunk had test errors")
 in #test#55(::Bool, ::Any, ::Array{AbstractString,1}) at ./pkg/entry.jl:671
 [inlined code] from ./boot.jl:331
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::UTF8String) at ./file.jl:48
 in #cd#1(::Array{Any,1}, ::Any, ::Any, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1}}) at ./pkg/dir.jl:31
 [inlined code] from ./boot.jl:331
 in #test#4(::Bool, ::Any, ::ASCIIString, ::Vararg{ASCIIString}) at ./pkg.jl:228
 in eval(::Module, ::Any) at ./boot.jl:267
 [inlined code] from ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
