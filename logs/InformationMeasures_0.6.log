>>> 'Pkg.add("InformationMeasures")' log
INFO: Cloning cache of InformationMeasures from https://github.com/Tchanders/InformationMeasures.jl.git
INFO: Installing DataArrays v0.3.10
INFO: Installing Discretizers v0.3.1
INFO: Installing InformationMeasures v0.0.1
INFO: Installing Reexport v0.0.3
INFO: Installing StatsBase v0.11.1
INFO: Package database updated

>>> 'Pkg.test("InformationMeasures")' log
Julia Version 0.6.0-dev.1527
Commit 4dcada1 (2016-12-08 19:58 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (2374.6953125 MB free)
Uptime: 28307.0 sec
Load Avg:  0.9375  0.9853515625  1.08740234375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1715362 s        916 s     230461 s     593784 s        100 s
#2  3499 MHz     704193 s       5526 s     119299 s    1889390 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - InformationMeasures           0.0.1
 - JSON                          0.8.0
5 additional packages:
 - Compat                        0.9.5
 - DataArrays                    0.3.10
 - Discretizers                  0.3.1
 - Reexport                      0.0.3
 - StatsBase                     0.11.1
INFO: Testing InformationMeasures
Discretize values with 1 array passed.
Discretize values with 2 arrays passed.
Discretize values with 3 arrays passed.
Discretize values with >3 arrays passed.
Discretize values with uniform width passed.
Discretize values with uniform count passed.
Discretize values with number of bins passed.
Discretize values with get number of bins passed.
WARNING: log{T1 <: Number}(x::Number,y::AbstractArray{T1}) is deprecated, use log.(x,y) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in log(::Int64, ::Array{Float64,2}) at ./deprecated.jl:50
 in apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 in #get_entropy#7(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 in get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isnan(::Array{Float64,2}) at ./deprecated.jl:50
 in apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 in #get_entropy#7(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 in get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 7
Entropy with 1 array passed.
Entropy with 2 arrays passed.
WARNING: log{T1 <: Number}(x::Number,y::AbstractArray{T1}) is deprecated, use log.(x,y) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:50
 in apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 in #get_entropy#7(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 in get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
WARNING: isnan{T <: Number}(x::AbstractArray{T}) is deprecated, use isnan.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isnan(::Array{Float64,3}) at ./deprecated.jl:50
 in apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:20 [inlined]
 in #get_entropy#7(::String, ::Int64, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 in get_entropy(::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:80
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 15
Entropy with 3 arrays passed.
Entropy with uniform width passed.
Entropy with uniform count passed.
Entropy with number of bins passed.
Entropy with get number of bins passed.
Entropy with maximum likelihood passed.
Entropy with shrinkage passed.
Entropy with shrinkage and lambda passed.
Entropy with Dirichlet passed.
Entropy with Dirichlet and prior passed.
Entropy with Miller-Madow passed.
WARNING: log{T1 <: Number}(x::Number,y::AbstractArray{T1}) is deprecated, use log.(x,y) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in log(::Irrational{:e}, ::Array{Float64,2}) at ./deprecated.jl:50
 in apply_entropy_formula at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Formulae.jl:19 [inlined]
 in #get_entropy#7(::String, ::Irrational{:e}, ::String, ::Int64, ::Function, ::Bool, ::Void, ::Int64, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:86
 in (::#kw##get_entropy)(::Array{Any,1}, ::#get_entropy, ::Array{Float64,1}, ::Vararg{Array{Float64,1},N}) at ./<missing>:0
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testEntropy.jl, in expression starting on line 63
Entropy with change of base passed.
Entropy with discretized input passed.
Conditional entropy with 1 array passed.
Conditional entropy formula passed.
Mutual information formula passed.
Conditional mutual information formula passed.
Interaction information formula passed.
Total correlation formula passed.
WARNING: log{T1 <: Number}(x::Number,y::AbstractArray{T1}) is deprecated, use log.(x,y) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in log(::Int64, ::Array{Float64,3}) at ./deprecated.jl:50
 in (::#get_specific_information#21{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Float64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:405
 in (::#get_redundancy#20{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Int64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:415
 in #get_partial_information_decomposition#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:506
 in (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 in get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
WARNING: isfinite{T <: Number}(x::AbstractArray{T}) is deprecated, use isfinite.(x) instead.
 in depwarn(::String, ::Symbol) at ./deprecated.jl:64
 in isfinite(::Array{Float64,3}) at ./deprecated.jl:50
 in (::#get_specific_information#21{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Float64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:406
 in (::#get_redundancy#20{Int64})(::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Array{Float64,3}, ::Int64) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:415
 in #get_partial_information_decomposition#19(::String, ::Int64, ::Bool, ::Void, ::Int64, ::Bool, ::Bool, ::Bool, ::#get_partial_information_decomposition, ::Array{Int64,3}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:506
 in (::#kw##get_partial_information_decomposition)(::Array{Any,1}, ::#get_partial_information_decomposition, ::Array{Int64,3}) at ./<missing>:0
 in get_partial_information_decomposition(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/vagrant/.julia/v0.6/InformationMeasures/test/../src/Measures.jl:380
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in include_from_node1(::String) at ./loading.jl:532
 in include(::String) at ./sysimg.jl:14
 in process_options(::Base.JLOptions) at ./client.jl:271
 in _start() at ./client.jl:335
while loading /home/vagrant/.julia/v0.6/InformationMeasures/test/testPartialInformationDecomposition.jl, in expression starting on line 5
Partial information decomposition with AND gate passed.
Partial information decomposition with AND gate (all orientations) passed.
INFO: InformationMeasures tests passed

>>> End of log
