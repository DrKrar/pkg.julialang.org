>>> 'Pkg.add("KrylovMethods")' log
INFO: Cloning cache of KrylovMethods from https://github.com/lruthotto/KrylovMethods.jl.git
INFO: Installing KrylovMethods v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of KrylovMethods
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("KrylovMethods")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1262.8125 MB free)
Uptime: 47852.0 sec
Load Avg:  1.0029296875  1.03125  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3504 MHz    2967366 s         75 s     264542 s     988651 s        168 s
#2  3504 MHz    1160355 s         94 s     139055 s    3333332 s          5 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - KrylovMethods                 0.3.0
6 additional packages:
 - Compat                        0.21.0
 - CompilerTools                 0.2.1
 - DataStructures                0.5.3
 - DocOpt                        0.2.1
 - ParallelAccelerator           0.2.2              6da2e374 (dirty)
 - tmp                           0.0.0-             non-repo (unregistered)
INFO: Computing test dependencies for KrylovMethods...
INFO: Cloning cache of MatrixDepot from https://github.com/weijianzhang/MatrixDepot.jl.git
INFO: Installing GZip v0.3.0
INFO: Installing LinearOperators v0.3.0
INFO: Installing MatrixDepot v0.5.6
INFO: Testing KrylovMethods
=== Testing bicgstb for real matrix === 
=== bicgstb ===
iter	 relres
  1	9.82e-02
  2	2.38e-02
  3	1.39e-03
bicgstb iterated maxIter (=3) times but reached only residual norm 2.38e-02 instead of tol=1.00e-06.
bcgstb achieved desired tolerance at iteration 7. Residual norm is 3.36e-07.
Testing bicgstb for complex matrix
=== BICGSTB: All tests passed ===
=== Testing blockBiCGSTB for real matrix === 
=== block bicgstb ===
iter	 relres
  1	8.19e-02
  2	5.69e-02
  3	3.02e-01
blockBiCGSTB iterated maxIter (=3) times but reached only residual norm 5.69e-02 instead of tol=1.00e-06.
blockBiCGSTB achieved desired tolerance at iteration 6.5. Residual norm is 4.28e-07.
Testing BlockBiCGSTAB for complex matrix
=== BlockBiCGSTAB: All tests passed ===
=== Testing CG ===
=== cg ===
iter	 relres
  1	0.00e+00
cg achieved desired tolerance at iteration 1. Residual norm is 0.00e+00.
=== cg ===
iter	 relres
  1	2.33e-02
cg iterated maxIter (=1) times but reached only residual norm 2.33e-02 instead of tol=1.00e-15.
Matrix A in cg has to be positive definite.
cg achieved desired tolerance at iteration 24. Residual norm is 9.23e-06.
=== CG : All tests passed. ====
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing blockCG ===
=== blockcg ===
iter	max(relres)
  1	8.91e-16
blockCG achieved desired tolerance at iteration 1. Residual norm is 8.91e-16.
=== blockcg ===
iter	max(relres)
  1	2.27e-16
blockCG iterated maxIter (=1) times but reached only residual norm 2.27e-16 instead of tol=1.00e-30.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.38e-01
  3	1.63e-01
  4	1.24e-01
  5	9.23e-02
  6	6.18e-02
  7	3.71e-02
  8	2.04e-02
  9	1.10e-02
 10	5.23e-03
 11	2.15e-03
 12	8.40e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.40e-04.
=== blockcg ===
iter	max(relres)
  1	4.01e-01
  2	2.38e-01
  3	1.63e-01
  4	1.24e-01
  5	9.23e-02
  6	6.18e-02
  7	3.71e-02
  8	2.04e-02
  9	1.10e-02
 10	5.23e-03
 11	2.15e-03
 12	8.40e-04
blockCG achieved desired tolerance at iteration 12. Residual norm is 8.40e-04.
=== Testing CLGS ===
=== cgls ===
iter	   |A'r|	 norm(r)	 norm(x)
  1	2.81e+01	7.51e-01	9.09e+00
  2	1.86e+00	8.81e-01	9.02e+00
cgls iterated maxIter (=2) times witout reaching tolerance. Returned result has residual norm  1.86e+00.
cgls relative gradient norm below desired tolerance at iteration 10. Returned result has residual norm  2.33e-10.
=== CGLS: All tests passed. ===
=== Testing GS ===
=== GS: All tests passed. ===
=== Testing gmres for real matrix === 
=== gmres ===
iter	 relres

  1	2.8e-01 9.0e-02 3.2e-02 	 3.2e-02
  2	1.0e-02 3.5e-03 1.0e-03 	 1.0e-03
  3	3.2e-04 9.2e-05 2.9e-05 	 2.9e-05
gmres iterated maxIter (=3) times without achieving the desired tolerance.
gmres achieved desired tolerance at iteration 3. Residual norm is 8.33e-07.
=== Testing gmres for complex matrix === 
=== GMRES: All tests passed. ===
=== Testing Lanczos helpers ===
Givens rotation for v=[0.0,0.9029159690031003]
Givens rotation for v=[1.2741695452529638,0.0]
Givens rotation for v=[1.1218586239838906,-0.2639880419529305]
=== Testing Lanczos Bidiagonalization ===
=== Testing Lanczos Tridiagonalization ===
=== Lanczos: All tests passed. ===
WARNING: Method definition getDivGrad(Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:4.
WARNING: Method definition ddx(Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:14.
WARNING: Method definition spdiags(Any, Any, Any, Any) in module Main at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20 overwritten at /home/vagrant/.julia/v0.5/KrylovMethods/test/getDivGrad.jl:20.
=== Testing SSOR for real matrix ===
ssor achieved desired tolerance at iteration 28. Residual norm is 9.88e-03.
ssor achieved desired tolerance at iteration 42. Residual norm is 9.84e-03.
=== Testing SSOR as Preconditioner ===
cg achieved desired tolerance at iteration 53. Residual norm is 9.90e-13.
=== Testing SSOR for complex matrix ===
=== sor ===
iter	 relres

  1	1.45e-01
  2	6.59e-02
  3	4.10e-02
ssor iterated maxIter (=3) times but reached only residual norm 4.10e-02 instead of tol=1.00e-02.
ssor achieved desired tolerance at iteration 16. Residual norm is 9.42e-03.
ssor achieved desired tolerance at iteration 23. Residual norm is 9.99e-03.
=== SSOR : All tests passed. ====
=== Testing LSQR ===
iter	|r_k|		|A'*r_k|	|A|		cond(A)		STOP
001	4.629e-01	4.792e-01	1.673e+00	1.000e+00	[0,0,0]
002	2.979e-16	4.965e-16	2.000e+00	2.309e+00	[1,0,0]
lsqr achieved desired tolerance at iteration 2. The system should be compatible. Residual norm is 2.98e-16.
lsqr achieved desired tolerance at iteration 2. The system should be incompatible. Gradient norm is 5.59e-01.
lsqr achieved desired tolerance at iteration 10. The system should be incompatible. Gradient norm is 8.97e+00.
=== LSQR: All tests passed. ===
=== Testing MINRES ===
minres iterated maxIter (=1) times but reached only residual norm 2.57e-01 instead of tol=1.00e-12.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	2.57e-01	8.15e-01	5.25e+00		1.17e+00
2	7.28e-02	5.99e-01	1.17e+01		2.60e+00
3	6.94e-03	1.21e-02	1.17e+01		2.60e+00
4	1.62e-04	4.57e-05	1.17e+01		2.65e+00
5	7.41e-06	4.12e-06	1.17e+01		2.65e+00
6	2.82e-08	1.27e-09	1.17e+01		2.70e+00
7	4.77e-16	8.94e-23	1.17e+01		2.90e+00
minres converged at iteration 7. |A r_k|=8.94e-23 and |r_k|=4.77e-16.
=== minres ===
iter	|r_k|		|A*r_k|		|A|			cond(A)
1	9.50e-02	1.05e+00	1.09e+01		1.00e+00
2	2.26e-02	7.95e-02	1.09e+01		1.89e+00
3	4.63e-04	1.38e-04	1.09e+01		2.01e+00
4	9.36e-06	2.24e-06	1.09e+01		2.55e+00
5	8.35e-08	8.62e-09	1.09e+01		2.61e+00
6	3.51e-09	1.84e-09	1.09e+01		2.61e+00
7	3.15e-16	3.18e-22	1.09e+01		2.68e+00
minres converged at iteration 7. |A r_k|=3.18e-22 and |r_k|=3.15e-16.
test stop by condlim
The estimated condition number (=3.15e+02) in minres is bigger than the tolerance (=2.00e+02) at iteration 16.
test stop by beta
minres stopped because beta (=2.31e-13) became smaller than the tolerance (btol=1.00e-10) at iteration 5.
test if anything is done for zero right hand side
=== MINRES : All tests passed. ====
Tests for symmetric and positive definite A
hilb	n=[5,5]	gmres iterated maxIter (=250) times without achieving the desired tolerance.
 gmres is OK cg is OK
cauchy	n=[4,4]	 gmres is OK cg is OK
invhilb	n=[4,4]	 gmres is OK cg is OK
moler	n=[7,7]	 gmres is OK cg is OK
pascal	n=[6,6]	 gmres is OK cg is OK
pei	n=[100,100]	 gmres is OK cg is OK
tridiag	n=[100,100]	 gmres is OK cg is OK
lehmer	n=[100,100]	gmres iterated maxIter (=5000) times without achieving the desired tolerance.
 gmres is OK cg is OK
poisson	n=[144,144]	 gmres is OK cg is OK
wathen	n=[341,341]	gmres iterated maxIter (=17050) times without achieving the desired tolerance.
 gmres is OK cg is OK
INFO: KrylovMethods tests passed
INFO: Removing GZip v0.3.0
INFO: Removing LinearOperators v0.3.0
INFO: Removing MatrixDepot v0.5.6

>>> End of log
