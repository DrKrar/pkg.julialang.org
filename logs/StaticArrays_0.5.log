>>> 'Pkg.add("StaticArrays")' log
INFO: Installing StaticArrays v0.0.9
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of StaticArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("StaticArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (1008.078125 MB free)
Uptime: 23269.0 sec
Load Avg:  1.0068359375  1.02685546875  1.00341796875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz    1287772 s       5328 s     141414 s     625858 s        133 s
#2  3499 MHz     472934 s       1048 s      72847 s    1691941 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - StaticArrays                  0.0.9
1 additional packages:
 - Compat                        0.9.2
INFO: Testing StaticArrays
Problem size: 1 x 1. Matrix type: StaticArrays.MMatrix{1,1,T,L}. Element type: Float64: Test Failed
  Expression: m(A) \ v(b) ≈ A \ b
   Evaluated: [NaN] isapprox [NaN]
 in record(::Base.Test.DefaultTestSet, ::Base.Test.Fail) at ./test.jl:428
 in do_test(::Base.Test.Returned, ::Expr) at ./test.jl:281
 in macro expansion; at /home/vagrant/.julia/v0.5/StaticArrays/test/solve.jl:9 [inlined]
 in macro expansion; at ./test.jl:733 [inlined]
 in macro expansion; at /home/vagrant/.julia/v0.5/StaticArrays/test/solve.jl:3 [inlined]
 in macro expansion; at ./test.jl:672 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in macro expansion; at /home/vagrant/.julia/v0.5/StaticArrays/test/runtests.jl:21 [inlined]
 in macro expansion; at ./test.jl:672 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
Test Summary:                                                                              | Pass  Fail  Total
  StaticArrays                                                                             |  575     1    576
  SVector                                                                                  |   41           41
  MVector                                                                                  |   38           38
  SMatrix                                                                                  |   54           54
  MMatrix                                                                                  |   55           55
  SArray                                                                                   |   58           58
  MArray                                                                                   |   61           61
  FieldVector                                                                              |   21           21
  Scalar                                                                                   |    3            3
  Core definitions and constructors                                                        |   15           15
  AbstractArray interface                                                                  |   41           41
  Indexing                                                                                 |   44           44
  Map, reduce, mapreduce, broadcast                                                        |   18           18
  Array math                                                                               |   37           37
  Linear algebra                                                                           |   31           31
  Matrix multiplication                                                                    |   37           37
  Solving linear system                                                                    |   15     1     16
  Problem size: 1 x 1. Matrix type: StaticArrays.SMatrix{1,1,T,L}. Element type: Float64   |    1            1
  Problem size: 1 x 1. Matrix type: StaticArrays.SMatrix{1,1,T,L}. Element type: Int64     |    1            1
  Problem size: 1 x 1. Matrix type: StaticArrays.MMatrix{1,1,T,L}. Element type: Float64   |          1      1
  Problem size: 1 x 1. Matrix type: StaticArrays.MMatrix{1,1,T,L}. Element type: Int64     |    1            1
  Problem size: 2 x 2. Matrix type: StaticArrays.SMatrix{2,2,T,L}. Element type: Float64   |    1            1
  Problem size: 2 x 2. Matrix type: StaticArrays.SMatrix{2,2,T,L}. Element type: Int64     |    1            1
  Problem size: 2 x 2. Matrix type: StaticArrays.MMatrix{2,2,T,L}. Element type: Float64   |    1            1
  Problem size: 2 x 2. Matrix type: StaticArrays.MMatrix{2,2,T,L}. Element type: Int64     |    1            1
  Problem size: 3 x 3. Matrix type: StaticArrays.SMatrix{3,3,T,L}. Element type: Float64   |    1            1
  Problem size: 3 x 3. Matrix type: StaticArrays.SMatrix{3,3,T,L}. Element type: Int64     |    1            1
  Problem size: 3 x 3. Matrix type: StaticArrays.MMatrix{3,3,T,L}. Element type: Float64   |    1            1
  Problem size: 3 x 3. Matrix type: StaticArrays.MMatrix{3,3,T,L}. Element type: Int64     |    1            1
  Problem size: 4 x 4. Matrix type: StaticArrays.SMatrix{4,4,T,L}. Element type: Float64   |    1            1
  Problem size: 4 x 4. Matrix type: StaticArrays.SMatrix{4,4,T,L}. Element type: Int64     |    1            1
  Problem size: 4 x 4. Matrix type: StaticArrays.MMatrix{4,4,T,L}. Element type: Float64   |    1            1
  Problem size: 4 x 4. Matrix type: StaticArrays.MMatrix{4,4,T,L}. Element type: Int64     |    1            1
  Push, pop, shift, unshift, etc                                                           |    6            6
ERROR: LoadError: Some tests did not pass: 575 passed, 1 failed, 0 errored, 0 broken.
 in finish(::Base.Test.DefaultTestSet) at ./test.jl:495
 in macro expansion; at ./test.jl:679 [inlined]
 in anonymous at ./<missing>:?
 in include_from_node1(::String) at ./loading.jl:488
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/StaticArrays/test/runtests.jl, in expression starting on line 4
============================[ ERROR: StaticArrays ]=============================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/StaticArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: StaticArrays had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
