>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1666.8984375 MB free)
Uptime: 26582.0 sec
Load Avg:  0.99462890625  0.99755859375  1.029296875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1570932 s       1224 s     138968 s     667805 s         54 s
#2  3500 MHz     723450 s       5413 s      84902 s    1754791 s          2 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.20.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 67047.027   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 2.99394e-12  final value -22.4237      factorizations 20
  5.915749 seconds (1.66 M allocations: 166.700 MB, 0.70% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           49.755      24.2        24.2        0.107       0.0         
2           25.5587     10.9        10.9        0.0844      -0.2        
3           14.6321     5.78        5.78        0.0897      -0.6        
4           8.84876     2.89        2.89        0.104       -1.2        
5           5.95815     1.27        1.27        0.159       -2.0        
6           4.69009     0.324       0.324       0.182       -3.1        
7           4.36568     0.0218      0.0218      0.0591      -4.3        
8           4.34383     2.55e-05    2.55e-05    0.00219     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   4.343806    

            final grad:   3.464971e-06

            final lambda: 4.4841551e-08

            time / iter:  172   ms

            total time:   1.55  seconds, of which

            derivs:     2.7 %

            back pass:  66.4%

            fwd pass:   7.4 %

            other:      23.4% (graphics etc.)
 =========== end iLQG ===========
 11.236127 seconds (6.25 M allocations: 428.842 MB, 1.49% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
