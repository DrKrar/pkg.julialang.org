>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-110-generic #157-Ubuntu SMP Mon Feb 20 11:54:05 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (1684.32421875 MB free)
Uptime: 30084.0 sec
Load Avg:  0.8798828125  0.94482421875  0.99169921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz    1744447 s       6905 s     141342 s     802093 s         97 s
#2  3500 MHz     792128 s        105 s      88006 s    2031204 s          3 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.3
2 additional packages:
 - Compat                        0.19.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61267.483   
RESULT: Gradient norm smaller than tolerance.
iterations 17  gradient 3.50519e-12  final value -41.4683      factorizations 16
  5.976507 seconds (1.66 M allocations: 141.316 MB, 0.67% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           50.1259     12.5        12.5        0.0783      0.0         
2           37.5887     10.4        10.4        0.087       -0.2        
3           27.1917     9.18        9.18        0.122       -0.6        
4           18.0075     5.93        5.93        0.178       -1.2        
5           12.0755     3.03        3.03        0.268       -2.0        
6           9.04343     1.04        1.04        0.333       -3.1        
7           8.00343     0.0657      0.0657      0.093       -4.3        
8           7.93777     7.35e-05    7.35e-05    0.00331     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   7.937696    

            final grad:   5.02476e-06

            final lambda: 4.4841551e-08

            time / iter:  246   ms

            total time:   2.21  seconds, of which

            derivs:     3.1 %

            back pass:  70.0%

            fwd pass:   6.9 %

            other:      19.9% (graphics etc.)
 =========== end iLQG ===========
 15.606845 seconds (6.94 M allocations: 444.288 MB, 1.63% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
