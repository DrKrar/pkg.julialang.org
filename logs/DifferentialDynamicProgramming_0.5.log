>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.1.0
INFO: Installing Requires v0.3.0
INFO: Package database updated

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-107-generic #154-Ubuntu SMP Tue Dec 20 09:57:27 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (1659.06640625 MB free)
Uptime: 25078.0 sec
Load Avg:  1.00341796875  0.98193359375  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3505 MHz    1460280 s       2510 s     151476 s     587668 s         76 s
#2  3505 MHz     504950 s       5801 s      78828 s    1843076 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.1.0
 - JSON                          0.8.2
2 additional packages:
 - Compat                        0.14.0
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:345 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 58729.533   
RESULT: Gradient norm smaller than tolerance.
iterations 18  gradient 3.02956e-12  final value -27.2571      factorizations 17
  5.858291 seconds (1.66 M allocations: 151.544 MB, 0.62% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

---------- begin iLQG ----------
iteration     cost    reduction     expected    gradient    log10(lambda)
1           48.5596     26          26          0.113       0.0         
2           22.5805     10.8        10.8        0.0851      -0.2        
3           11.7897     4.76        4.76        0.0761      -0.6        
4           7.02774     2.71        2.71        0.0932      -1.2        
5           4.31659     1.36        1.36        0.147       -2.0        
6           2.95976     0.354       0.354       0.157       -3.1        
7           2.60533     0.0213      0.0213      0.0605      -4.3        
8           2.58402     2.43e-05    2.43e-05    0.00229     -5.7        

SUCCESS: gradient norm < tolGrad

 iterations:   9  

            final cost:   2.583994    

            final grad:   3.879037e-06

            final lambda: 4.4841551e-08

            time / iter:  181   ms

            total time:   1.63  seconds, of which

            derivs:     2.4 %

            back pass:  63.7%

            fwd pass:   8.0 %

            other:      25.9% (graphics etc.)
 =========== end iLQG ===========
 14.208613 seconds (6.94 M allocations: 444.288 MB, 1.34% gc time)
Install package Plots.jl to plot results in the end of demo_linear
INFO: DifferentialDynamicProgramming tests passed

>>> End of log
