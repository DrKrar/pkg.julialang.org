>>> 'Pkg.add("DifferentialDynamicProgramming")' log
INFO: Cloning cache of DifferentialDynamicProgramming from https://github.com/baggepinnen/DifferentialDynamicProgramming.jl.git
INFO: Installing DifferentialDynamicProgramming v0.0.1
INFO: Installing Requires v0.3.0
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of DifferentialDynamicProgramming
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("DifferentialDynamicProgramming")' log
Julia Version 0.5.0-rc2+0
Commit 0350e57 (2016-08-12 11:25 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-93-generic #140-Ubuntu SMP Mon Jul 18 21:21:05 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (1710.1484375 MB free)
Uptime: 16803.0 sec
Load Avg:  1.00048828125  1.01318359375  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     835044 s        106 s      98023 s     516053 s         32 s
#2  3499 MHz     320094 s       6772 s      48055 s    1242895 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - DifferentialDynamicProgramming 0.0.1
 - JSON                          0.6.0
2 additional packages:
 - Compat                        0.8.7
 - Requires                      0.3.0
INFO: Testing DifferentialDynamicProgramming
WARNING: Method definition require(Symbol) in module Base at loading.jl:317 overwritten in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/Requires/src/require.jl:12.
WARNING: Method definition back_pass(Any, Any, Array{#T<:Any, 2}, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any, Any) in module DifferentialDynamicProgramming at /home/vagrant/.julia/v0.5/DifferentialDynamicProgramming/src/iLQG.jl:532 overwritten at /home/vagrant/.julia/v0.5/DifferentialDynamicProgramming/src/iLQG.jl:633.
INFO: Compile time is high for this package, this is expected and is not an error.
==========
Starting box-QP, dimension 500, initial value: 61273.427   
RESULT: Gradient norm smaller than tolerance.
iterations 21  gradient 2.74656e-12  final value -23.7605      factorizations 20
  4.775489 seconds (1.67 M allocations: 168.792 MB, 0.49% gc time)
Running linear demo function for DifferentialDynamicProgramming.jl

=========== begin iLQG ===========
iteration     cost    reduction     expected    gradient    log10(lambda)
1           NO STEP     0           0           0           13.5        

EXIT: lambda > lambdaMax
ERROR: LoadError: Failure: no iterations completed, something is wrong.
 in #iLQG#3(::Array{Any,1}, ::Array{Float64,1}, ::Float64, ::Float64, ::Int64, ::Int64, ::Int64, ::Float64, ::Float64, ::Float64, ::Int64, ::Int64, ::Array{Any,1}, ::Int64, ::Int64, ::DifferentialDynamicProgramming.##34#43, ::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::DifferentialDynamicProgramming.#f#40, ::DifferentialDynamicProgramming.#fT#41, ::DifferentialDynamicProgramming.#df#42, ::Array{Float64,2}, ::Array{Float64,2}) at /home/vagrant/.julia/v0.5/DifferentialDynamicProgramming/src/iLQG.jl:381
 in (::DifferentialDynamicProgramming.#kw##iLQG)(::Array{Any,1}, ::DifferentialDynamicProgramming.#iLQG, ::Function, ::Function, ::Function, ::Array{Float64,2}, ::Array{Float64,2}) at ./<missing>:0
 in macro expansion at ./util.jl:184 [inlined]
 in demo_linear() at /home/vagrant/.julia/v0.5/DifferentialDynamicProgramming/src/demo_linear.jl:73
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:262
 in _start() at ./client.jl:318
while loading /home/vagrant/.julia/v0.5/DifferentialDynamicProgramming/test/runtests.jl, in expression starting on line 7
===================[ ERROR: DifferentialDynamicProgramming ]====================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.5/DifferentialDynamicProgramming/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: DifferentialDynamicProgramming had test errors
 in #test#61(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:740
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:258
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:239
 in _start() at ./client.jl:318

>>> End of log
