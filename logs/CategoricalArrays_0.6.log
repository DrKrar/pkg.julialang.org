>>> 'Pkg.add("CategoricalArrays")' log
INFO: Installing CategoricalArrays v0.1.0
INFO: Installing NullableArrays v0.0.10
INFO: Installing Reexport v0.0.3
INFO: Package database updated

>>> 'Pkg.test("CategoricalArrays")' log
Julia Version 0.6.0-dev.2628
Commit 8d657c4 (2017-02-06 22:35 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (845.6640625 MB free)
Uptime: 9244.0 sec
Load Avg:  0.98828125  0.52587890625  0.45751953125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3493 MHz     379274 s       5600 s      59740 s     390548 s         23 s
#2  3493 MHz     185878 s       1380 s      45097 s     658603 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.9.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.6
2 required packages:
 - CategoricalArrays             0.1.0
 - JSON                          0.8.2
3 additional packages:
 - Compat                        0.15.0
 - NullableArrays                0.0.10
 - Reexport                      0.0.3
INFO: Computing test dependencies for CategoricalArrays...
INFO: No packages to install, update or remove
INFO: Testing CategoricalArrays
WARNING: Method definition ==(Base.Nullable{S}, Base.Nullable{T}) in module Base at nullable.jl:244 overwritten in module NullableArrays at /home/vagrant/.julia/v0.6/NullableArrays/src/operators.jl:130.
Running tests:
	[1m[31mFAILED[0m: 01_typedef.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{String,UInt32}}, ::CategoricalArrays.CategoricalValue{String,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/01_typedef.jl, in expression starting on line 6
	[1m[31mFAILED[0m: 02_buildorder.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{String,UInt32}}, ::CategoricalArrays.CategoricalValue{String,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/02_buildorder.jl, in expression starting on line 6
	[1m[31mFAILED[0m: 03_buildfields.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{String,UInt32}}, ::CategoricalArrays.CategoricalValue{String,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/03_buildfields.jl, in expression starting on line 20
	[1m[31mFAILED[0m: 03_constructors.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{String,UInt32}}, ::CategoricalArrays.CategoricalValue{String,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/03_constructors.jl, in expression starting on line 29
	[1m[31mFAILED[0m: 05_convert.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/05_convert.jl, in expression starting on line 5
	[1m[31mFAILED[0m: 06_show.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{String,UInt32}}, ::CategoricalArrays.CategoricalValue{String,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/06_show.jl, in expression starting on line 5
	[1m[31mFAILED[0m: 06_length.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/06_length.jl, in expression starting on line 5
	[1m[31mFAILED[0m: 07_levels.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/07_levels.jl, in expression starting on line 6
	[1m[31mFAILED[0m: 08_equality.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/08_equality.jl, in expression starting on line 5
	[1m[31mFAILED[0m: 09_hash.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/09_hash.jl, in expression starting on line 5
	[1m[31mFAILED[0m: 10_isless.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/10_isless.jl, in expression starting on line 5
WARNING: imported binding for compact overwritten in module TestArray
	[1m[31mFAILED[0m: 11_array.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{String,UInt32}}, ::CategoricalArrays.CategoricalValue{String,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/11_array.jl, in expression starting on line 10
WARNING: imported binding for compact overwritten in module TestNullableArray
	[1m[31mFAILED[0m: 12_nullablearray.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{String,UInt32}}, ::CategoricalArrays.CategoricalValue{String,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/12_nullablearray.jl, in expression starting on line 14
	[1m[31mFAILED[0m: 13_arraycommon.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/13_arraycommon.jl, in expression starting on line 70
	[1m[31mFAILED[0m: 14_view.jl
LoadError: MethodError: convert(::Type{CategoricalArrays.CategoricalValue{Int64,UInt32}}, ::CategoricalArrays.CategoricalValue{Int64,UInt32}) is ambiguous. Candidates:
  convert{S, T}(::Type{S}, x::CategoricalArrays.CategoricalValue{T,R} where R<:Integer) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:22
  convert{T, R}(::Type{CategoricalArrays.CategoricalValue{T,R}}, x::CategoricalArrays.CategoricalValue{T,R}) in CategoricalArrays at /home/vagrant/.julia/v0.6/CategoricalArrays/src/value.jl:5
Stacktrace:
 [1] macro expansion at /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl:43 [inlined]
 [2] anonymous at ./<missing>:?
 [3] include_from_node1(::String) at ./loading.jl:539
 [4] include(::String) at ./sysimg.jl:14
 [5] process_options(::Base.JLOptions) at ./client.jl:300
 [6] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/14_view.jl, in expression starting on line 10
ERROR: LoadError: "Tests failed"
Stacktrace:
 [1] include_from_node1(::String) at ./loading.jl:539
 [2] include(::String) at ./sysimg.jl:14
 [3] process_options(::Base.JLOptions) at ./client.jl:300
 [4] _start() at ./client.jl:366
while loading /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl, in expression starting on line 50
==========================[ ERROR: CategoricalArrays ]==========================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no --compilecache=yes /home/vagrant/.julia/v0.6/CategoricalArrays/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
INFO: No packages to install, update or remove
ERROR: CategoricalArrays had test errors

>>> End of log
