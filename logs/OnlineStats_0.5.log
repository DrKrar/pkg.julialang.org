>>> 'Pkg.add("OnlineStats")' log
INFO: Cloning cache of OnlineStats from https://github.com/joshday/OnlineStats.jl.git
INFO: Installing BinDeps v0.4.5
INFO: Installing Calculus v0.1.15
INFO: Installing Distributions v0.11.0
INFO: Installing OnlineStats v0.7.0
INFO: Installing PDMats v0.5.1
INFO: Installing RecipesBase v0.1.0
INFO: Installing Rmath v0.1.4
INFO: Installing SHA v0.3.0
INFO: Installing StatsBase v0.11.1
INFO: Installing StatsFuns v0.3.1
INFO: Installing URIParser v0.1.6
INFO: Building Rmath
INFO: Package database updated

>>> 'Pkg.test("OnlineStats")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (444.78515625 MB free)
Uptime: 10505.0 sec
Load Avg:  0.9697265625  0.9853515625  0.95703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     580896 s       3015 s      58003 s     300122 s         20 s
#2  3500 MHz     154341 s       3862 s      26903 s     844303 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - OnlineStats                   0.7.0
11 additional packages:
 - BinDeps                       0.4.5
 - Calculus                      0.1.15
 - Compat                        0.9.4
 - Distributions                 0.11.0
 - PDMats                        0.5.1
 - RecipesBase                   0.1.0
 - Rmath                         0.1.4
 - SHA                           0.3.0
 - StatsBase                     0.11.1
 - StatsFuns                     0.3.1
 - URIParser                     0.1.6
INFO: Computing test dependencies for OnlineStats...
INFO: Installing GLM v0.6.1
INFO: Installing Reexport v0.0.3
INFO: Building Rmath
INFO: Testing OnlineStats
■ Mean{EqualWeight}
  >     value: 0.051869141759871035
  >      nobs: 500
■ Means{EqualWeight}
  >     value: [-0.0740181,0.0518691]
  >      nobs: 500
■ Variance{EqualWeight}
  >     value: 1.012244916344887
  >      nobs: 500
■ Variances{EqualWeight}
  >     value: [1.13142,1.01224]
  >      nobs: 500
■ CovMatrix{EqualWeight}
  >     value: [1.13142 -0.0758357; -0.0758357 1.01224]
  >      nobs: 500
■ Extrema
  >     value: (-2.7543088363793315,2.6844996372198615)
  >      nobs: 500
■ QuantileSGD, τ = [0.25,0.5,0.75]
  >     value: [-0.608938,0.0359818,0.669433]
  >      nobs: 500
■ QuantileMM, τ = [0.25,0.5,0.75]
  >     value: [-0.609337,0.0831495,0.699355]
  >      nobs: 500
■ Moments
  >      mean: 0.051869141759871035
  >       var: 1.0122449163448888
  >  skewness: -0.08050932110660045
  >  kurtosis: -0.2933560685456258
  >      nobs: 500
■ QuantRegMM
  >     value: [0.0,0.0,0.0,0.0,0.0]
  >         τ: 0.5
  >      nobs: 0
■ KMeans
  >     value: [-0.722387 -1.18623 0.120417 1.56298; 2.13012 1.15543 0.685984 1.67915; 1.3272 0.36237 0.454461 -0.00731997; 0.182327 0.341167 -0.281953 1.46403; -0.0630884 -0.835258 -0.29783 2.15432]
  >         K: 1
  >      nobs: 0
■ NormalMix (k = 4)
  >     value: MixtureModel{Distributions.Normal{Float64}}(K = 4)
components[1] (prior = 0.2500): Distributions.Normal{Float64}(μ=1.0, σ=3.1622776601683795)
components[2] (prior = 0.2500): Distributions.Normal{Float64}(μ=2.0, σ=3.1622776601683795)
components[3] (prior = 0.2500): Distributions.Normal{Float64}(μ=3.0, σ=3.1622776601683795)
components[4] (prior = 0.2500): Distributions.Normal{Float64}(μ=4.0, σ=3.1622776601683795)

  >      nobs: 0
■ FitCategorical (0 levels)
  >     value: nothing
  >    labels: Any[]
  >      nobs: 0
■ FitBeta{EqualWeight}
  >     value: nothing
  >      nobs: 0
■ OnlineStats.BernoulliBootstrap{OnlineStats.OnlineStat{OnlineStats.ScalarInput}}
  >Boostrap of: OnlineStats.Mean{OnlineStats.EqualWeight}
  >  function: mean
  >nreplicates: 1000
  >      nobs: 0
■ StatLearn
  > Intercept: 0.0
  >         β: [0.0,0.0,0.0,0.0]
  >     Model: OnlineStats.LinearRegression()
  >   Penalty: OnlineStats.NoPenalty()
  > Algorithm: OnlineStats.SGD()
  >         η: 1.0
  >    Weight: OnlineStats.LearningRate
  >      Nobs: 0
    > SGD(), NoPenalty(), LinearRegression()
    > SGD(), NoPenalty(), L1Regression()
    > SGD(), NoPenalty(), LogisticRegression()
    > SGD(), NoPenalty(), PoissonRegression()
    > SGD(), NoPenalty(), QuantileRegression(0.5)
    > SGD(), NoPenalty(), SVMLike()
    > SGD(), NoPenalty(), HuberRegression(2.0)
    > SGD(), RidgePenalty(0.1), LinearRegression()
    > SGD(), RidgePenalty(0.1), L1Regression()
    > SGD(), RidgePenalty(0.1), LogisticRegression()
    > SGD(), RidgePenalty(0.1), PoissonRegression()
    > SGD(), RidgePenalty(0.1), QuantileRegression(0.5)
    > SGD(), RidgePenalty(0.1), SVMLike()
    > SGD(), RidgePenalty(0.1), HuberRegression(2.0)
    > SGD(), LassoPenalty(0.1), LinearRegression()
    > SGD(), LassoPenalty(0.1), L1Regression()
    > SGD(), LassoPenalty(0.1), LogisticRegression()
    > SGD(), LassoPenalty(0.1), PoissonRegression()
    > SGD(), LassoPenalty(0.1), QuantileRegression(0.5)
    > SGD(), LassoPenalty(0.1), SVMLike()
    > SGD(), LassoPenalty(0.1), HuberRegression(2.0)
    > SGD(), ElasticNetPenalty(0.1,0.5), LinearRegression()
    > SGD(), ElasticNetPenalty(0.1,0.5), L1Regression()
    > SGD(), ElasticNetPenalty(0.1,0.5), LogisticRegression()
    > SGD(), ElasticNetPenalty(0.1,0.5), PoissonRegression()
    > SGD(), ElasticNetPenalty(0.1,0.5), QuantileRegression(0.5)
    > SGD(), ElasticNetPenalty(0.1,0.5), SVMLike()
    > SGD(), ElasticNetPenalty(0.1,0.5), HuberRegression(2.0)
    > AdaGrad(), NoPenalty(), LinearRegression()
    > AdaGrad(), NoPenalty(), L1Regression()
    > AdaGrad(), NoPenalty(), LogisticRegression()
    > AdaGrad(), NoPenalty(), PoissonRegression()
    > AdaGrad(), NoPenalty(), QuantileRegression(0.5)
    > AdaGrad(), NoPenalty(), SVMLike()
    > AdaGrad(), NoPenalty(), HuberRegression(2.0)
    > AdaGrad(), RidgePenalty(0.1), LinearRegression()
    > AdaGrad(), RidgePenalty(0.1), L1Regression()
    > AdaGrad(), RidgePenalty(0.1), LogisticRegression()
    > AdaGrad(), RidgePenalty(0.1), PoissonRegression()
    > AdaGrad(), RidgePenalty(0.1), QuantileRegression(0.5)
    > AdaGrad(), RidgePenalty(0.1), SVMLike()
    > AdaGrad(), RidgePenalty(0.1), HuberRegression(2.0)
    > AdaGrad(), LassoPenalty(0.1), LinearRegression()
    > AdaGrad(), LassoPenalty(0.1), L1Regression()
    > AdaGrad(), LassoPenalty(0.1), LogisticRegression()
    > AdaGrad(), LassoPenalty(0.1), PoissonRegression()
    > AdaGrad(), LassoPenalty(0.1), QuantileRegression(0.5)
    > AdaGrad(), LassoPenalty(0.1), SVMLike()
    > AdaGrad(), LassoPenalty(0.1), HuberRegression(2.0)
    > AdaGrad(), ElasticNetPenalty(0.1,0.5), LinearRegression()
    > AdaGrad(), ElasticNetPenalty(0.1,0.5), L1Regression()
    > AdaGrad(), ElasticNetPenalty(0.1,0.5), LogisticRegression()
    > AdaGrad(), ElasticNetPenalty(0.1,0.5), PoissonRegression()
    > AdaGrad(), ElasticNetPenalty(0.1,0.5), QuantileRegression(0.5)
    > AdaGrad(), ElasticNetPenalty(0.1,0.5), SVMLike()
    > AdaGrad(), ElasticNetPenalty(0.1,0.5), HuberRegression(2.0)
    > AdaGrad2(), NoPenalty(), LinearRegression()
    > AdaGrad2(), NoPenalty(), L1Regression()
    > AdaGrad2(), NoPenalty(), LogisticRegression()
    > AdaGrad2(), NoPenalty(), PoissonRegression()
    > AdaGrad2(), NoPenalty(), QuantileRegression(0.5)
    > AdaGrad2(), NoPenalty(), SVMLike()
    > AdaGrad2(), NoPenalty(), HuberRegression(2.0)
    > AdaGrad2(), RidgePenalty(0.1), LinearRegression()
    > AdaGrad2(), RidgePenalty(0.1), L1Regression()
    > AdaGrad2(), RidgePenalty(0.1), LogisticRegression()
    > AdaGrad2(), RidgePenalty(0.1), PoissonRegression()
    > AdaGrad2(), RidgePenalty(0.1), QuantileRegression(0.5)
    > AdaGrad2(), RidgePenalty(0.1), SVMLike()
    > AdaGrad2(), RidgePenalty(0.1), HuberRegression(2.0)
    > AdaGrad2(), LassoPenalty(0.1), LinearRegression()
    > AdaGrad2(), LassoPenalty(0.1), L1Regression()
    > AdaGrad2(), LassoPenalty(0.1), LogisticRegression()
    > AdaGrad2(), LassoPenalty(0.1), PoissonRegression()
    > AdaGrad2(), LassoPenalty(0.1), QuantileRegression(0.5)
    > AdaGrad2(), LassoPenalty(0.1), SVMLike()
    > AdaGrad2(), LassoPenalty(0.1), HuberRegression(2.0)
    > AdaGrad2(), ElasticNetPenalty(0.1,0.5), LinearRegression()
    > AdaGrad2(), ElasticNetPenalty(0.1,0.5), L1Regression()
    > AdaGrad2(), ElasticNetPenalty(0.1,0.5), LogisticRegression()
    > AdaGrad2(), ElasticNetPenalty(0.1,0.5), PoissonRegression()
    > AdaGrad2(), ElasticNetPenalty(0.1,0.5), QuantileRegression(0.5)
    > AdaGrad2(), ElasticNetPenalty(0.1,0.5), SVMLike()
    > AdaGrad2(), ElasticNetPenalty(0.1,0.5), HuberRegression(2.0)
    > AdaDelta(0.001), NoPenalty(), LinearRegression()
    > AdaDelta(0.001), NoPenalty(), L1Regression()
    > AdaDelta(0.001), NoPenalty(), LogisticRegression()
    > AdaDelta(0.001), NoPenalty(), PoissonRegression()
    > AdaDelta(0.001), NoPenalty(), QuantileRegression(0.5)
    > AdaDelta(0.001), NoPenalty(), SVMLike()
    > AdaDelta(0.001), NoPenalty(), HuberRegression(2.0)
    > AdaDelta(0.001), RidgePenalty(0.1), LinearRegression()
    > AdaDelta(0.001), RidgePenalty(0.1), L1Regression()
    > AdaDelta(0.001), RidgePenalty(0.1), LogisticRegression()
    > AdaDelta(0.001), RidgePenalty(0.1), PoissonRegression()
    > AdaDelta(0.001), RidgePenalty(0.1), QuantileRegression(0.5)
    > AdaDelta(0.001), RidgePenalty(0.1), SVMLike()
    > AdaDelta(0.001), RidgePenalty(0.1), HuberRegression(2.0)
    > AdaDelta(0.001), LassoPenalty(0.1), LinearRegression()
    > AdaDelta(0.001), LassoPenalty(0.1), L1Regression()
    > AdaDelta(0.001), LassoPenalty(0.1), LogisticRegression()
    > AdaDelta(0.001), LassoPenalty(0.1), PoissonRegression()
    > AdaDelta(0.001), LassoPenalty(0.1), QuantileRegression(0.5)
    > AdaDelta(0.001), LassoPenalty(0.1), SVMLike()
    > AdaDelta(0.001), LassoPenalty(0.1), HuberRegression(2.0)
    > AdaDelta(0.001), ElasticNetPenalty(0.1,0.5), LinearRegression()
    > AdaDelta(0.001), ElasticNetPenalty(0.1,0.5), L1Regression()
    > AdaDelta(0.001), ElasticNetPenalty(0.1,0.5), LogisticRegression()
    > AdaDelta(0.001), ElasticNetPenalty(0.1,0.5), PoissonRegression()
    > AdaDelta(0.001), ElasticNetPenalty(0.1,0.5), QuantileRegression(0.5)
    > AdaDelta(0.001), ElasticNetPenalty(0.1,0.5), SVMLike()
    > AdaDelta(0.001), ElasticNetPenalty(0.1,0.5), HuberRegression(2.0)
    > ADAM(0.01,0.01), NoPenalty(), LinearRegression()
    > ADAM(0.01,0.01), NoPenalty(), L1Regression()
    > ADAM(0.01,0.01), NoPenalty(), LogisticRegression()
    > ADAM(0.01,0.01), NoPenalty(), PoissonRegression()
    > ADAM(0.01,0.01), NoPenalty(), QuantileRegression(0.5)
    > ADAM(0.01,0.01), NoPenalty(), SVMLike()
    > ADAM(0.01,0.01), NoPenalty(), HuberRegression(2.0)
    > ADAM(0.01,0.01), RidgePenalty(0.1), LinearRegression()
    > ADAM(0.01,0.01), RidgePenalty(0.1), L1Regression()
    > ADAM(0.01,0.01), RidgePenalty(0.1), LogisticRegression()
    > ADAM(0.01,0.01), RidgePenalty(0.1), PoissonRegression()
    > ADAM(0.01,0.01), RidgePenalty(0.1), QuantileRegression(0.5)
    > ADAM(0.01,0.01), RidgePenalty(0.1), SVMLike()
    > ADAM(0.01,0.01), RidgePenalty(0.1), HuberRegression(2.0)
    > ADAM(0.01,0.01), LassoPenalty(0.1), LinearRegression()
    > ADAM(0.01,0.01), LassoPenalty(0.1), L1Regression()
    > ADAM(0.01,0.01), LassoPenalty(0.1), LogisticRegression()
    > ADAM(0.01,0.01), LassoPenalty(0.1), PoissonRegression()
    > ADAM(0.01,0.01), LassoPenalty(0.1), QuantileRegression(0.5)
    > ADAM(0.01,0.01), LassoPenalty(0.1), SVMLike()
    > ADAM(0.01,0.01), LassoPenalty(0.1), HuberRegression(2.0)
    > ADAM(0.01,0.01), ElasticNetPenalty(0.1,0.5), LinearRegression()
    > ADAM(0.01,0.01), ElasticNetPenalty(0.1,0.5), L1Regression()
    > ADAM(0.01,0.01), ElasticNetPenalty(0.1,0.5), LogisticRegression()
    > ADAM(0.01,0.01), ElasticNetPenalty(0.1,0.5), PoissonRegression()
    > ADAM(0.01,0.01), ElasticNetPenalty(0.1,0.5), QuantileRegression(0.5)
    > ADAM(0.01,0.01), ElasticNetPenalty(0.1,0.5), SVMLike()
    > ADAM(0.01,0.01), ElasticNetPenalty(0.1,0.5), HuberRegression(2.0)
Test Summary: | 
  show methods | No tests
Test Summary: | Pass  Total
  fit! methods |    7      7
Test Summary: | Pass  Total
  Multivariate |    2      2
Test Summary: | Pass  Total
  Summary     |   59     59
Test Summary: | Pass  Total
  Weighting   |   13     13
Test Summary: | Pass  Total
  Distributions |   27     27
Test Summary: | Pass  Total
  Modeling    |   27     27
Test Summary: | Pass  Total
  StatLearn   |    8      8
Test Summary: | Pass  Total
  StreamStats |    2      2
INFO: OnlineStats tests passed
INFO: Removing GLM v0.6.1
INFO: Removing Reexport v0.0.3

>>> End of log
