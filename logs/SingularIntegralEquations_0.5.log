>>> 'Pkg.add("SingularIntegralEquations")' log
INFO: Cloning cache of ApproxFun from https://github.com/ApproxFun/ApproxFun.jl.git
INFO: Cloning cache of BandedMatrices from https://github.com/ApproxFun/BandedMatrices.jl.git
INFO: Cloning cache of FastGaussQuadrature from https://github.com/ajt60gaibb/FastGaussQuadrature.jl.git
INFO: Cloning cache of FastTransforms from https://github.com/MikaelSlevinsky/FastTransforms.jl.git
INFO: Cloning cache of SingularIntegralEquations from https://github.com/ApproxFun/SingularIntegralEquations.jl.git
INFO: Cloning cache of ToeplitzMatrices from https://github.com/andreasnoack/ToeplitzMatrices.jl.git
INFO: Installing ApproxFun v0.2.1
INFO: Installing ArrayViews v0.6.4
INFO: Installing BandedMatrices v0.0.5
INFO: Installing ColorTypes v0.2.3
INFO: Installing Colors v0.6.5
INFO: Installing FastGaussQuadrature v0.0.3
INFO: Installing FastTransforms v0.0.4
INFO: Installing FixedPointNumbers v0.1.3
INFO: Installing FixedSizeArrays v0.2.2
INFO: Installing Measures v0.0.2
INFO: Installing Plots v0.7.5
INFO: Installing RecipesBase v0.0.6
INFO: Installing Reexport v0.0.3
INFO: Installing SingularIntegralEquations v0.1.2
INFO: Installing StatsBase v0.8.2
INFO: Installing StatsFuns v0.2.2
INFO: Installing ToeplitzMatrices v0.1.1
INFO: Building Plots
INFO: Package database updated
INFO: METADATA is out-of-date â€” you may not have the latest version of SingularIntegralEquations
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("SingularIntegralEquations")' log
Julia Version 0.5.0-dev+5146
Commit 3e1878b* (2016-07-04 02:26 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
INFO: Testing SingularIntegralEquations
WARNING: Method definition (::Type{SingularIntegralEquations.ConcreteHilbert})(ApproxFun.Space, Any) in module SingularIntegralEquations at /home/vagrant/.julia/v0.5/ApproxFun/src/Operators/banded/CalculusOperator.jl:29 overwritten at /home/vagrant/.julia/v0.5/SingularIntegralEquations/src/Operators/Hilbert.jl:94.
WARNING: Method definition (::Type{SingularIntegralEquations.ConcreteSingularIntegral})(ApproxFun.Space, Any) in module SingularIntegralEquations at /home/vagrant/.julia/v0.5/ApproxFun/src/Operators/banded/CalculusOperator.jl:29 overwritten at /home/vagrant/.julia/v0.5/SingularIntegralEquations/src/Operators/Hilbert.jl:99.
ERROR: LoadError: LoadError: LoadError: syntax: numeric constant "1." cannot be implicitly multiplied because it ends with "."
 in include_from_node1(::String) at ./loading.jl:426 (repeats 3 times)
 in macro expansion; at ./none:2 [inlined]
 in anonymous at ./<missing>:?
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/SingularIntegralEquations/src/Operators/Hilbert.jl, in expression starting on line 194
while loading /home/vagrant/.julia/v0.5/SingularIntegralEquations/src/Operators/Operators.jl, in expression starting on line 1
while loading /home/vagrant/.julia/v0.5/SingularIntegralEquations/src/SingularIntegralEquations.jl, in expression starting on line 62
ERROR: LoadError: Failed to precompile SingularIntegralEquations to /home/vagrant/.julia/lib/v0.5/SingularIntegralEquations.ji
 in compilecache(::String) at ./loading.jl:505
 in require(::Symbol) at ./loading.jl:364
 in include_from_node1(::String) at ./loading.jl:426
 in process_options(::Base.JLOptions) at ./client.jl:266
 in _start() at ./client.jl:322
while loading /home/vagrant/.julia/v0.5/SingularIntegralEquations/test/runtests.jl, in expression starting on line 1
======================[ ERROR: SingularIntegralEquations ]======================

failed process: Process(`/home/vagrant/julia/bin/julia -Cx86-64 -J/home/vagrant/julia/lib/julia/sys.so --compile=yes --depwarn=yes --check-bounds=yes --code-coverage=none --color=no /home/vagrant/.julia/v0.5/SingularIntegralEquations/test/runtests.jl`, ProcessExited(1)) [1]

================================================================================
ERROR: SingularIntegralEquations had test errors
 in #test#51(::Bool, ::Function, ::Array{AbstractString,1}) at ./pkg/entry.jl:720
 in (::Base.Pkg.Entry.#kw##test)(::Array{Any,1}, ::Base.Pkg.Entry.#test, ::Array{AbstractString,1}) at ./<missing>:0
 in (::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}})() at ./pkg/dir.jl:31
 in cd(::Base.Pkg.Dir.##2#3{Array{Any,1},Base.Pkg.Entry.#test,Tuple{Array{AbstractString,1}}}, ::String) at ./file.jl:59
 in #cd#1(::Array{Any,1}, ::Function, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./pkg/dir.jl:31
 in (::Base.Pkg.Dir.#kw##cd)(::Array{Any,1}, ::Base.Pkg.Dir.#cd, ::Function, ::Array{AbstractString,1}, ::Vararg{Array{AbstractString,1},N}) at ./<missing>:0
 in #test#3(::Bool, ::Function, ::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in test(::String, ::Vararg{String,N}) at ./pkg/pkg.jl:255
 in eval(::Module, ::Any) at ./boot.jl:234
 in process_options(::Base.JLOptions) at ./client.jl:243
 in _start() at ./client.jl:322

>>> End of log
