>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.4
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (721.4140625 MB free)
Uptime: 8181.0 sec
Load Avg:  1.05859375  1.0283203125  1.05078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     446125 s        118 s      44756 s     230180 s         12 s
#2  3500 MHz     121786 s       6517 s      20816 s     647858 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.4
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.6499551841773366	0.3898279010576189	0.35561937540430955	0.15702947737552408
two	0.45562151832574815	0.29507657879045945	0.9101040613219358	0.5007946307095916
a	95
b	27
c	72
d	82
e	3
f	96
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.315873  0.734579  0.205999
b           │ 0.140522  0.579433  0.138054 0.31587273795278503 0.31587273795278503
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.315873  0.734579  0.205999
b     │ 0.140522  0.579433  0.138054
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.315873  0.734579  0.205999
b           │ 0.140522  0.579433  0.138054
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.315873  0.734579  0.205999
b     │ 0.140522  0.579433  0.138054
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.689029   0.586855   0.415136   0.330918
二              │  0.757383  0.0655237   0.192319   0.825772
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140389701468896
0-element Named Array{Any,1}

[0.155941 0.586201 0.0307035 0.122631; 0.744666 0.259147 0.26518 0.963865]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.155941   0.586201  0.0307035   0.122631
two   │  0.744666   0.259147    0.26518   0.9638652×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.155941   0.586201  0.0307035   0.122631
two   │  0.744666   0.259147    0.26518   0.9638652×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     -1.67993       1.12382  …       1.24548       1.52531
2     │     0.755666       0.86187  …       2.04442     -0.4775411000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │     1.03898       1.0184
2     │   0.0917506    -0.357041
3     │   0.0225703      1.40571
4     │    -1.29589    0.0334451
5     │  -0.0962382     0.386172
6     │   -0.902294     0.210764
7     │    0.951987  -0.00827917
8     │   -0.185974    -0.387258
9     │    -0.42031     -1.61026
⋮                 ⋮            ⋮
992   │     1.79953    -0.036862
993   │    -1.27097    0.0320077
994   │    -1.19788      1.31656
995   │     1.46252    -0.351037
996   │   0.0781262     -1.26366
997   │    -2.08709   -0.0635207
998   │    0.454854      1.44223
999   │     1.95567    0.0121072
1000  │   -0.567167    -0.4841691000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.551852
2    │  -0.431742
3    │    1.73141
4    │   -1.17012
5    │  -0.151359
6    │  -0.142394
7    │  -0.273754
8    │  -0.144932
9    │   -1.07151
⋮               ⋮
992  │  -0.238944
993  │ -0.0570269
994  │  -0.347008
995  │    1.83602
996  │  -0.512396
997  │  -0.343068
998  │   -1.10561
999  │  -0.152173
1000 │    1.293072×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.859928  0.312127
1           │ 0.835853  0.359705

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.623659  0.045378
1           │ 0.940713  0.395221
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.940496
2  │ 0.819294
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.774484  0.863909
2     │  0.14895  0.446177
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.973679  0.656875
2     │ 0.352699  0.848516

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.108275  0.605735
2     │ 0.825108  0.378994
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.588305  0.618001
2     │ 0.245357  0.890895

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.422542  0.223035
2     │ 0.673826  0.676606

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.845612   0.72002
2     │ 0.474621  0.412419

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.39982   0.978498
2     │  0.399659  0.0328649
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.427291  0.563785
2     │ 0.388151   0.97021

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.440064  0.746556
2     │ 0.383275  0.327591

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.981621  0.889408
2     │ 0.563637  0.214875
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.312184  0.466786

[:, :, C=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00197563    0.132944
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.35585
2     │ 0.659368

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.99653
2     │ 0.381322
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.399109  0.894545
2     │ 0.558015  0.269143
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[15240003619098155971,  6564272639106249010]  =  0.592223793001968
	[11496001657944805140,  1703847331300677320]  =  0.9329856200705058
	[5839463014734961202 ,  4247719799217886270]  =  0.8066811138250463
	[5188033427577448982 , 18443816037252674910]  =  0.2861732957494638
	[9815398096560962926 ,  4976045735032000325]  =  0.5329106739327008
	[12378274853958980878, 16246598853062742192]  =  0.2729813354142221
	[13093952135199384747,  6065204439534692180]  =  0.7668357506568486
	[13427473630495641040,  4302721723742542942]  =  0.784488069507093
	                                              ⋮
	[140805053905483200  ,  3014575823142358933]  =  0.3541388443699902
	[15362413774630394309,  9526342322394325946]  =  0.0776657350675043
	[11868935393991040875, 11711005111088208244]  =  0.5113666679074487
	[17742935406460696265, 10024080200852233627]  =  0.46293194143799976
	[14258322255812091301, 16069635275006911712]  =  0.27712936574337954
	[4099991848953537601 , 13970367575607681105]  =  0.18098742434518722
	[13413762311091243877, 16840404209865735426]  =  0.5336302697582413
	[14178850942406463629,  9133170895916704973]  =  0.5585824144295823
	[772560554181343720  , 14599810768241287016]  =  0.5093283864159335Timing named index: 0.001356032, array index: 0.000590694, named key: 0.113263707
Timing sum large sparse array: 0.022784617, named: 0.026206422
done!
INFO: NamedArrays tests passed

>>> End of log
