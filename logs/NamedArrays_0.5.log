>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (784.42578125 MB free)
Uptime: 6383.0 sec
Load Avg:  1.01318359375  0.9501953125  1.0478515625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     349030 s       2772 s      41753 s     182279 s         12 s
#2  3499 MHz      82826 s       6103 s      17118 s     518169 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.39523097430472753	0.9417509123410661	0.9981978983461042	0.8273778290904736
two	0.3814148512408364	0.354231315750293	0.06389715701664511	0.045192938966272855
a	39
b	27
c	60
d	8
e	73
f	81
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.888741    0.33002   0.655068
b           │  0.719281   0.488181  0.0788484 0.8887405820473193 0.8887405820473193
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.888741    0.33002   0.655068
b     │  0.719281   0.488181  0.0788484
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.888741    0.33002   0.655068
b           │  0.719281   0.488181  0.0788484
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.888741    0.33002   0.655068
b     │  0.719281   0.488181  0.0788484
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.280006   0.541733   0.748396   0.497875
二              │  0.358594  0.0632498   0.631639    0.14053
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139804316908320
0-element Named Array{Any,1}

[0.18488 0.0213243 0.280135 0.370263; 0.851591 0.0334299 0.581707 0.603918]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.18488  0.0213243   0.280135   0.370263
two   │  0.851591  0.0334299   0.581707   0.6039182×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │   0.18488  0.0213243   0.280135   0.370263
two   │  0.851591  0.0334299   0.581707   0.6039182×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.315241     -0.10832  …     0.388382    -0.977699
2     │    0.259111      2.30228  …     -1.39759     0.3047841000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.205936     0.76615
2     │    1.19754    0.207832
3     │    2.17732     1.72917
4     │   -0.10986     1.08407
5     │   0.905791   -0.416955
6     │   -0.78866   -0.698057
7     │ -0.0162376   -0.136228
8     │    1.23482   -0.207454
9     │    1.66903     1.12241
⋮                ⋮           ⋮
992   │    -1.4534    0.490268
993   │ -0.0202687    -0.62081
994   │  -0.225613    0.767153
995   │   -0.56548    -2.32588
996   │   -2.11808    -2.47578
997   │    1.48864    -1.56479
998   │   -1.17312    -1.03508
999   │ -0.0256675    0.336701
1000  │   0.448046     1.080721000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │    1.2736
2    │  0.606874
3    │   1.75249
4    │ -0.731129
5    │    1.2342
6    │  0.370943
7    │   1.03874
8    │  0.156209
9    │ -0.130384
⋮              ⋮
992  │  0.305525
993  │  -1.75859
994  │ -0.814207
995  │   1.35656
996  │ -0.789242
997  │ -0.778414
998  │   2.20642
999  │ -0.301014
1000 │  0.6864642×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │   0.66584   0.956503
1           │  0.217575  0.0558786

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.563193  0.849165
1           │ 0.961816  0.445617
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.438146
2  │ 0.308679
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.883391  0.371806
2     │ 0.805484  0.438228
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.164568  0.954759
2     │ 0.896411  0.883265

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.509883  0.520795
2     │ 0.721218  0.708739
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.659813   0.690275
2     │ 0.0416336    0.39639

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.363312  0.595509
2     │ 0.448972  0.634316

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.757461  0.415136
2     │ 0.503419  0.686821

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.729408  0.0257484
2     │  0.563451  0.0683543
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.159407  0.191817
2     │ 0.231562   0.54096

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.759153  0.199546
2     │ 0.649596  0.111687

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.555515  0.133051
2     │ 0.161361  0.529092
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.621074  0.960305

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.316954   0.24457
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.541975
2     │ 0.965602

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.475574
2     │ 0.843269
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.752703  0.953627
2     │ 0.506292  0.370269
1000×1000 Named sparse matrix with 84 Float64 nonzero entries:
	[9222155262524552208 ,   397394769374478572]  =  0.9530873277358363
	[16208673231642956787,  1703847331300677320]  =  0.5520831232010783
	[4620553278458169351 , 17095493447719212504]  =  0.6126409256516356
	[1389137670392774052 , 14066869468942639955]  =  0.1420157053540494
	[18053734596154680288,  2849690884155085581]  =  0.818286368451161
	[8225434152398798479 ,  4786699431706339713]  =  0.6637393549972319
	[12720131311000364147, 17678211741433686062]  =  0.17680249463526865
	[3428368603158593878 ,  5723128691850249417]  =  0.7286095793537688
	                                              ⋮
	[17742935406460696265, 11791379751769019020]  =  0.43815251426995094
	[1656903684371133098 ,  8357516066305821252]  =  0.37191131247636555
	[3065944537250428989 , 16243515418520287792]  =  0.6199164283909262
	[12901330087571726961, 17401827539426951865]  =  0.4514611572143912
	[10698461782340713109, 15717097331822026300]  =  0.8730854879444319
	[5647414292592918739 ,  6468689935112619700]  =  0.9190931700535789
	[15589056775630200950, 18148906667482527649]  =  0.807452575628492
	[6566196097100363524 , 11711005111088208244]  =  0.728897862401447
	[2713027948549010671 , 10370911177498520402]  =  0.4863774447432343Timing named index: 0.001440734, array index: 0.000562907, named key: 0.126390153
Timing sum large sparse array: 0.013932934, named: 0.038982498
done!
INFO: NamedArrays tests passed

>>> End of log
