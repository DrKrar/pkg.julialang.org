>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (861.359375 MB free)
Uptime: 6037.0 sec
Load Avg:  1.06982421875  0.99609375  1.01318359375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     318900 s        438 s      43966 s     171820 s         34 s
#2  3500 MHz      85907 s       6638 s      20407 s     469012 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.7324000172987151	0.8475722163967707	0.8213838881489399	0.9977480294069798
two	0.3574020757980687	0.7065391171384534	0.2546476922987566	0.3965153072946235
a	28
b	5
c	82
d	92
e	82
f	97
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.801867   0.751269   0.658312
b           │   0.96924   0.488441  0.0913293 0.8018671560845745 0.8018671560845745
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.801867   0.751269   0.658312
b     │   0.96924   0.488441  0.0913293
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.801867   0.751269   0.658312
b           │   0.96924   0.488441  0.0913293
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.801867   0.751269   0.658312
b     │   0.96924   0.488441  0.0913293
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │  0.53853  0.321981  0.178111  0.498701
二              │ 0.629081    0.9669  0.711759  0.130769
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140021540477616
0-element Named Array{Any,1}

[0.0496123 0.688026 0.478921 0.874081; 0.174672 0.942329 0.999235 0.918059]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0496123   0.688026   0.478921   0.874081
two   │  0.174672   0.942329   0.999235   0.9180592×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0496123   0.688026   0.478921   0.874081
two   │  0.174672   0.942329   0.999235   0.9180592×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │  -0.0217235      1.67917  …      1.55431    -0.491526
2     │   -0.426609     0.518399  …     0.519696      1.478991000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.471101   0.403588
2     │ -0.975457     2.6833
3     │ -0.773768    0.71375
4     │ -0.215586  -0.804746
5     │ -0.681138   0.790601
6     │   1.51144  -0.227897
7     │  0.857134  -0.179851
8     │ -0.514698   0.731886
9     │   1.27924    1.70628
⋮               ⋮          ⋮
992   │  -1.20379   0.673522
993   │   1.09749    2.28724
994   │ -0.641843  0.0936401
995   │   1.62453  -0.378564
996   │  0.346824  -0.112481
997   │  -1.56379  -0.667998
998   │   0.79588  -0.556024
999   │  0.437679    1.30696
1000  │  -2.32311   0.1887011000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -2.07544
2    │  -1.29603
3    │  0.557009
4    │  0.178614
5    │    1.3879
6    │   1.38981
7    │  0.433536
8    │ -0.959486
9    │ -0.370961
⋮              ⋮
992  │  -1.01768
993  │  0.672131
994  │ -0.156743
995  │  0.477214
996  │   0.37014
997  │ -0.540848
998  │  -1.43378
999  │   -1.6277
1000 │  0.4760332×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.591199  0.368505
1           │ 0.895573  0.234701

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.999542   0.24666
1           │ 0.311682  0.384711
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.206009
2  │ 0.0663217
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.625257  0.376186
2     │ 0.275727  0.317929
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.460912  0.546899
2     │ 0.999332  0.107237

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.934509  0.0742686
2     │  0.868221    0.92522
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.451056  0.629914
2     │ 0.644033  0.576603

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.456897  0.368373
2     │ 0.443492  0.385263

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.777763  0.734023
2     │ 0.112024  0.125087

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.31531  0.133915
2     │ 0.656381  0.329833
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.123278  0.829116
2     │ 0.429228  0.586732

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0179708    0.44159
2     │  0.737962   0.670964

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.624094  0.321995
2     │ 0.737068  0.737386
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0560603   0.553031

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.410562  0.212333
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0434959
2     │  0.911538

[:, :, C=2] =
A ╲ B │       1
──────┼────────
1     │ 0.76737
2     │ 0.14287
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.645001  0.595551
2     │ 0.406321  0.799982
1000×1000 Named sparse matrix with 86 Float64 nonzero entries:
	[13538132892370992970,  4400785119912308702]  =  0.46609232517887755
	[11488343865249833965,   592365234179887848]  =  0.7425631347339046
	[9474715557068018910 , 16246598853062742192]  =  0.5256887048738741
	[5071406905266041170 ,   281356413667926651]  =  0.44102093481391313
	[7841950699682704949 ,  2725232909516991235]  =  0.24230271872086018
	[10338346681654797567,  5490184849613505398]  =  0.6943093684453023
	[2267379803219259174 ,  6880785002993049943]  =  0.44059232115166447
	[273396578563598247  , 11052831234341989908]  =  0.10191545193178042
	                                              ⋮
	[13494041442472679795, 11711005111088208244]  =  0.8909821860712164
	[14033074738777421392, 16069635275006911712]  =  0.7822517193689473
	[6134978669850253296 , 14835807873575694564]  =  0.8999382810594203
	[16633641293030664246,  2758171916068192631]  =  0.561055486544406
	[4420061231740490028 ,  4047135350800189603]  =  0.2137377335609365
	[16365943061271568709, 13950575499123628905]  =  0.25542398101844
	[17675853527817706269,  6565262192402102057]  =  0.31008686734310364
	[140805053905483200  ,  9133170895916704973]  =  0.7828788503520563
	[10626898038408744182,  9133170895916704973]  =  0.27267175302788504Timing named index: 0.001480572, array index: 0.000740035, named key: 0.132102
Timing sum large sparse array: 0.005741977, named: 0.012560915
done!
INFO: NamedArrays tests passed

>>> End of log
