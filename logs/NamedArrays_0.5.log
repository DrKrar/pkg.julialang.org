>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (960.82421875 MB free)
Uptime: 8139.0 sec
Load Avg:  1.10546875  0.974609375  1.0166015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     477956 s        775 s      43982 s     194861 s         18 s
#2  3499 MHz     116194 s       5852 s      20944 s     653143 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.18.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.6168418257392521	0.27958878204725046	0.692941238355689	0.4053926681048423
two	0.9458762095122464	0.901632488404978	0.049066357036654074	0.5264088417839474
a	48
b	48
c	73
d	8
e	43
f	18
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.105777  0.0254679     0.9415
b           │  0.277264   0.810085   0.355789 0.1057769879871091 0.1057769879871091
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.105777  0.0254679     0.9415
b     │  0.277264   0.810085   0.355789
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.105777  0.0254679     0.9415
b           │  0.277264   0.810085   0.355789
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.105777  0.0254679     0.9415
b     │  0.277264   0.810085   0.355789
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.346884   0.464278   0.641504  0.0984039
二              │  0.100545   0.443005   0.840772   0.714991
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.347335 0.511787 0.402518 0.11695; 0.167304 0.459073 0.145321 0.3689]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.347335  0.511787  0.402518   0.11695
two   │ 0.167304  0.459073  0.145321    0.36892×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.347335  0.511787  0.402518   0.11695
two   │ 0.167304  0.459073  0.145321    0.36892×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.947131     -0.185864  …     -0.442903     0.0884206
2     │    -0.110431       1.08543  …      0.428453       1.192131000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.842946     1.19971
2     │  -0.950839    -1.72473
3     │  -0.280999    -1.17039
4     │    1.06713  -0.0732539
5     │   -0.40889  -0.0617657
6     │    1.13024   -0.413431
7     │  -0.232442    0.599282
8     │    0.38817     1.80421
9     │    1.09039    0.196511
⋮                ⋮           ⋮
992   │ -0.0845111    -1.07827
993   │  -0.290704   -0.347645
994   │   -2.73033     2.06368
995   │   0.228773    -1.30034
996   │   0.440032   -0.390989
997   │ -0.0356885     -0.6576
998   │   -1.44548   -0.175498
999   │   -1.20896    0.427681
1000  │   -1.41034     1.262981000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   -1.3245
2    │  0.140656
3    │   1.33911
4    │    0.9119
5    │  0.243568
6    │  -1.76874
7    │  -2.14432
8    │  -1.73332
9    │ -0.492309
⋮              ⋮
992  │  0.492141
993  │ -0.810155
994  │ -0.474741
995  │ 0.0597282
996  │  0.962589
997  │ -0.108846
998  │  -0.93917
999  │  0.225306
1000 │  -2.086282×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.785063  0.0510644
1           │  0.481999    0.43079

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.569338  0.143925
1           │ 0.970564  0.293178
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.19553
2  │ 0.147256
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.298343  0.599735
2     │ 0.689336  0.404881
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.472368  0.215269
2     │  0.77752  0.976636

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.451719  0.527076
2     │ 0.717677  0.461064
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.81177   0.596597
2     │  0.884431  0.0152533

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0132722   0.430809
2     │  0.924448   0.918492

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.796118  0.986764
2     │ 0.559572  0.584213

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.606606  0.885416
2     │  0.86602  0.153678
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.110492  0.475636
2     │ 0.791469   0.30182

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.322151  0.680178
2     │ 0.218342  0.660654

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0155984  0.0287109
2     │  0.163017   0.330093
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.344151  0.847311

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.269453   0.74852
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.476561
2     │ 0.527907

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.430538
2     │ 0.884428
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.198025   0.961864
2     │ 0.0817128   0.620429
1000×1000 Named sparse matrix with 89 Float64 nonzero entries:
	[17795748529514954214,   144428425607543167]  =  0.45175297927055125
	[3328880625782563796 , 13789993170142104254]  =  0.5868993434298304
	[13617136782637692591, 17095493447719212504]  =  0.8835799425930988
	[16449765671153982371, 14066869468942639955]  =  0.07384887287786657
	[16221828541365357577,   273396578563598247]  =  0.21113322168980697
	[13882698648709482562, 15465980046630820984]  =  0.5115548506215342
	[18332040070485059392,  8644598584148197739]  =  0.4786751189290983
	[8340722336334766600 , 14956803718882296446]  =  0.22472468749793206
	                                              ⋮
	[15389785613949122466, 11604119926906451644]  =  0.604817796029415
	[5337699408644063394 ,  8471876845144429043]  =  0.7339815655140101
	[12288543705408635880,  2318046236442875673]  =  0.6288930882696575
	[10932896149891808656, 15436097664388839821]  =  0.0833783201281586
	[5392016834065508343 , 11993454575275700781]  =  0.2586236414962966
	[12372524185508789598, 11527542315164007414]  =  0.7515651901532534
	[2202644137930953607 , 15240003619098155971]  =  0.7095882734566508
	[10080555958650725266, 14599810768241287016]  =  0.9276004778389155
	[5927176887743683346 ,  7519919299137062942]  =  0.4351613937462342Timing named index: 0.001050371, array index: 0.000421589, named key: 0.071699338
Timing sum large sparse array: 0.016028893, named: 0.015709431
done!
INFO: NamedArrays tests passed

>>> End of log
