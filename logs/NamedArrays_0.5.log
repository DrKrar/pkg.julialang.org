>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (855.859375 MB free)
Uptime: 6131.0 sec
Load Avg:  0.98486328125  1.0107421875  1.0703125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     348954 s         72 s      46924 s     151867 s         10 s
#2  3500 MHz     101136 s       6860 s      20297 s     471376 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.10.0
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.7420752389994711	0.29201547035810904	0.6327284810784299	0.7127090819049218
two	0.4324521766966607	0.25109616356409337	0.8016865300531191	0.8845905681669621
a	54
b	17
c	12
d	56
e	48
f	1
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.818148   0.335393   0.573964
b           │  0.624442   0.331527  0.0387393 0.8181478520706682 0.8181478520706682
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.818148   0.335393   0.573964
b     │  0.624442   0.331527  0.0387393
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.818148   0.335393   0.573964
b           │  0.624442   0.331527  0.0387393
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.818148   0.335393   0.573964
b     │  0.624442   0.331527  0.0387393
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.721137  0.209802   0.66008  0.986901
二              │ 0.516957  0.370244  0.201802  0.157873
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139819421623088
0-element Named Array{Any,1}

[0.0478922 0.132023 0.222337 0.106089; 0.158245 0.513285 0.722821 0.319714]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0478922   0.132023   0.222337   0.106089
two   │  0.158245   0.513285   0.722821   0.3197142×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0478922   0.132023   0.222337   0.106089
two   │  0.158245   0.513285   0.722821   0.3197142×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    0.0878128      0.271205  …     -0.114021     -0.134758
2     │     0.257684    -0.0184592  …      0.455702     -0.3524891000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   -1.03829    0.112466
2     │  -0.414841   -0.634793
3     │   0.272634    0.460913
4     │   0.715325   -0.421728
5     │    1.46104   -0.642148
6     │ 0.00789942    0.175519
7     │    1.73853   -0.259018
8     │  -0.526395    0.158703
9     │   0.290044    0.338209
⋮                ⋮           ⋮
992   │    1.31102    0.401711
993   │   0.181238  -0.0558261
994   │  -0.869537   -0.704878
995   │   0.221411   0.0089241
996   │   -1.51662   -0.227624
997   │   0.367731    -1.69651
998   │    1.19982     2.60279
999   │   -1.56706     -1.4953
1000  │   -1.11498    -1.307391000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.33337
2    │ 0.0269132
3    │   0.13513
4    │   3.57261
5    │ -0.744814
6    │  -1.44427
7    │ -0.289576
8    │  0.881932
9    │  0.331211
⋮              ⋮
992  │  0.166978
993  │   1.42555
994  │  0.362921
995  │  0.259613
996  │   1.17115
997  │  -1.64973
998  │  0.430681
999  │   1.23566
1000 │   -1.58042×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.396635  0.945674
1           │ 0.558015  0.565174

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.507699   0.55807
1           │ 0.615568  0.248663
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.725096
2  │ 0.723625
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.151424  0.037972
2     │  0.17796  0.726109
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.769497    0.704803
2     │ 0.00152904    0.641878

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.541177   0.78344
2     │ 0.819554  0.812586
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.702291  0.928235
2     │ 0.662857  0.129692

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.168889   0.383464
2     │  0.793149  0.0695132

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.509662   0.748922
2     │  0.475766  0.0874561

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.807118  0.687602
2     │ 0.438985  0.771034
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.458106   0.920315
2     │   0.44083  0.0872816

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.900959  0.269337
2     │ 0.513119  0.677962

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.266772  0.505955
2     │ 0.874681  0.355869
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.48863  0.482872

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.616682  0.422833
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.956065
2     │ 0.490398

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.976855
2     │ 0.987467
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.577981  0.873635
2     │ 0.943453  0.927881
1000×1000 Named sparse matrix with 112 Float64 nonzero entries:
	[12876006501778729182,   144428425607543167]  =  0.9364051824839172
	[16208673231642956787,   397394769374478572]  =  0.8700796758902938
	[14951403058635497631,   397394769374478572]  =  0.066295722035695
	[16544335554558850098, 13888991764943741743]  =  0.24908147314625473
	[4620553278458169351 , 15422846019410515149]  =  0.21442397573996508
	[17850470016925415361,  2849690884155085581]  =  0.8920690725711014
	[8629498292780771804 ,  4394159825732135742]  =  0.65422926123507
	[15078133678202242611, 12295598998729798629]  =  0.6910969258411637
	                                              ⋮
	[13576140399322980841,  5983786778458205040]  =  0.8196423793786842
	[13440552775821083551,  1526691723863411160]  =  0.484802512776096
	[12590458817397224361, 11993454575275700781]  =  0.8803899062754379
	[2117445326293199079 ,   372001016642560619]  =  0.5116850844098717
	[16157048171714034010, 17737936919457265947]  =  0.110456935183463
	[9187579804086460617 ,  1523061068178304284]  =  0.5372799055301085
	[8830415785437611716 , 12624682912995533025]  =  0.04998289421809865
	[6134978669850253296 ,  3279378535085980212]  =  0.48230834571235004
	[13576140399322980841,  2588469222286953884]  =  0.12386886340094971Timing named index: 0.001501522, array index: 0.000681301, named key: 0.112608176
Timing sum large sparse array: 0.009522721, named: 0.020783703
done!
INFO: NamedArrays tests passed

>>> End of log
