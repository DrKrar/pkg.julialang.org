>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-112-generic #159-Ubuntu SMP Fri Mar 3 15:26:07 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (727.84375 MB free)
Uptime: 8320.0 sec
Load Avg:  0.974609375  1.0029296875  1.0458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     440298 s       1135 s      43808 s     246735 s         22 s
#2  3499 MHz     128338 s       4993 s      19467 s     661041 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.3077297568018389	0.9128288565498102	0.9373732905847145	0.5390249966791398
two	0.3103417571732141	0.600734179675009	0.8286358322022065	0.3234949450850544
a	79
b	64
c	39
d	65
e	30
f	95
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.476146  0.836451  0.588022
b           │ 0.464923  0.379945     0.867 0.476145856948724 0.476145856948724
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.476146  0.836451  0.588022
b     │ 0.464923  0.379945     0.867
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.476146  0.836451  0.588022
b           │ 0.464923  0.379945     0.867
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.476146  0.836451  0.588022
b     │ 0.464923  0.379945     0.867
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.887984   0.218336   0.776412   0.824656
二              │ 0.0838832   0.904035    0.48431   0.258777
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140465525834448
0-element Named Array{Any,1}

[0.00430916 0.530261 0.521584 0.884837; 0.33019 0.210896 0.396512 0.616738]
2×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │ 0.00430916    0.530261    0.521584    0.884837
two   │    0.33019    0.210896    0.396512    0.6167382×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │ 0.00430916    0.530261    0.521584    0.884837
two   │    0.33019    0.210896    0.396512    0.6167382×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.478929     -0.60461  …    -0.876793      1.47933
2     │    -1.07603      0.71088  …     0.343596      1.369141000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │     1.0605   -0.959959
2     │   0.757433    -1.24535
3     │ -0.0754916    -1.28418
4     │  -0.364497    -1.07185
5     │   -2.02062    -1.15276
6     │    3.29865   -0.435795
7     │   0.862435   -0.364205
8     │   -1.20692   -0.451511
9     │   -1.37928     1.08306
⋮                ⋮           ⋮
992   │    1.24422    0.119409
993   │    0.37446     0.39559
994   │   0.530355    0.972703
995   │  -0.764567   -0.240303
996   │   0.782786  -0.0101058
997   │   0.359215    -1.42064
998   │  -0.692317   0.0292828
999   │   0.107415   -0.168866
1000  │  -0.553582    0.8421161000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.811391
2    │  -1.69667
3    │ -0.131851
4    │  0.876956
5    │  -1.28011
6    │  0.726082
7    │  0.824218
8    │  0.379673
9    │ -0.425135
⋮              ⋮
992  │ -0.987195
993  │  0.752492
994  │ -0.126175
995  │  -0.81986
996  │  0.841221
997  │  -1.61372
998  │  0.363124
999  │ -0.898716
1000 │   0.494192×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.285015  0.722991
1           │ 0.573796  0.994188

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.235017   0.732832
1           │  0.167223  0.0602863
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │  0.19809
2  │ 0.789502
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0920374   0.833977
2     │  0.707298   0.629388
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.824378  0.789084
2     │ 0.901404  0.496301

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.866075  0.529785
2     │ 0.173907  0.353937
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.386981  0.108236
2     │ 0.363918  0.357859

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.790173    0.97088
2     │  0.910909  0.0906096

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.44239  0.225276
2     │ 0.245288  0.288176

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.423573  0.0294867
2     │   0.57155  0.0710857
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.824269  0.187021
2     │ 0.502076  0.320921

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.326574  0.345832
2     │ 0.579892  0.997591

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.108226  0.994943
2     │ 0.965363  0.991514
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.786314   0.42999

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.22849  0.611015
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.494567
2     │  0.26926

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.225628
2     │ 0.220901
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │ 0.000738853   0.00547119
2     │    0.651457     0.307868
1000×1000 Named sparse matrix with 95 Float64 nonzero entries:
	[11681839584861684795, 13789993170142104254]  =  0.5188360529564502
	[16077031779703164343, 15422846019410515149]  =  0.9204847064472228
	[10924666096879366607,  6134978669850253296]  =  0.43878121287236316
	[7369566324703660862 ,   113574861176001527]  =  0.3766363201530194
	[8969053341726467224 , 14517667374310463124]  =  0.2653474033052021
	[11594286046942303904, 10601912832305821454]  =  0.9805183005723941
	[172966917720799643  ,  8629498292780771804]  =  0.06154240410880707
	[1203336841330469213 ,  4394159825732135742]  =  0.2262476601036525
	                                              ⋮
	[2836200141957565154 ,  7630593249633640373]  =  0.6011345010257112
	[7946303620992373940 ,  7630593249633640373]  =  0.20164361641748463
	[7528617485284887424 ,  6468689935112619700]  =  0.9135597068680881
	[8568476733645628391 , 15436097664388839821]  =  0.7823799215362386
	[11581210425696274532, 10370911177498520402]  =  0.678789585069941
	[14839428249571644385, 10370911177498520402]  =  0.9609630233597817
	[14024883472771630530, 14835807873575694564]  =  0.14187729381708292
	[17850470016925415361, 11527542315164007414]  =  0.29928168083103346
	[17813916387369881   , 13950575499123628905]  =  0.4454591157992489Timing named index: 0.0008201, array index: 0.000416525, named key: 0.071042564
Timing sum large sparse array: 0.015235253, named: 0.014763677
done!
INFO: NamedArrays tests passed

>>> End of log
