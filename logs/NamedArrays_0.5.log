>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (849.70703125 MB free)
Uptime: 5791.0 sec
Load Avg:  1.14697265625  1.07373046875  1.11767578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     309554 s       8282 s      39976 s     160356 s         10 s
#2  3499 MHz      89441 s       6477 s      18590 s     450637 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.2598151116486396	0.7102328295773475	0.24294233657115716	0.44880729192231406
two	0.5413930287360582	0.8100690809167188	0.36727765831658843	0.8333971254864896
a	6
b	1
c	16
d	26
e	69
f	17
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.252323  0.817415  0.567405
b           │ 0.417081   0.28537  0.830458 0.2523230045754803 0.2523230045754803
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.252323  0.817415  0.567405
b     │ 0.417081   0.28537  0.830458
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.252323  0.817415  0.567405
b           │ 0.417081   0.28537  0.830458
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.252323  0.817415  0.567405
b     │ 0.417081   0.28537  0.830458
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.843813   0.469442   0.612705  0.0752727
二              │  0.529653   0.494787  0.0326796   0.104681
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.396254 0.256942 0.846542 0.407798; 0.155234 0.426289 0.0809144 0.00617783]
2×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.396254    0.256942    0.846542    0.407798
two   │   0.155234    0.426289   0.0809144  0.006177832×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.396254    0.256942    0.846542    0.407798
two   │   0.155234    0.426289   0.0809144  0.006177832×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.283248    -0.924843  …     0.957193     -1.64568
2     │    0.377107     -0.38536  …      1.56887     -1.673311000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.869746   0.0994732
2     │    1.00001   -0.399569
3     │   -1.56212     0.52809
4     │   0.509899     1.33037
5     │  -0.221249   -0.948159
6     │    1.47437    0.715738
7     │   0.442423     1.55097
8     │ -0.0472207   -0.141618
9     │   0.909926     1.67038
⋮                ⋮           ⋮
992   │  -0.398856    -1.66183
993   │  -0.062249   -0.921125
994   │   0.499346    0.165067
995   │  -0.958203    0.990117
996   │  0.0394584     1.03364
997   │   0.181236   0.0542483
998   │   -1.93505    0.247928
999   │    1.16758     1.05597
1000  │  -0.709667     1.444731000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.943619
2    │  -0.662375
3    │ -0.0444735
4    │   0.283036
5    │   0.480407
6    │   0.932174
7    │  -0.625712
8    │   -1.40459
9    │    -1.0307
⋮               ⋮
992  │    2.14814
993  │  -0.586153
994  │   0.274638
995  │  -0.970692
996  │   0.196511
997  │   -1.08141
998  │    1.21083
999  │    1.66674
1000 │   0.3637922×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.170783  0.710149
1           │ 0.586937  0.340893

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.58982  0.650538
1           │  0.46158  0.418416
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.767746
2  │ 0.279554
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.921891  0.592959
2     │ 0.208963  0.445239
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.539914  0.384598
2     │ 0.394811  0.452466

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.160224   0.770995
2     │ 0.0437497   0.128303
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.184896  0.830118
2     │   0.2593  0.857377

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.858185  0.711303
2     │ 0.373883  0.659433

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.106339    0.833086
2     │ 0.00767988    0.133737

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.280625  0.0521052
2     │  0.292144   0.627796
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.449193  0.209563
2     │ 0.495776  0.203138

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.968974  0.228227
2     │ 0.569118  0.528664

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.375787  0.688506
2     │ 0.453338  0.473721
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.671875  0.348715

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.377147  0.700063
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.383162
2     │ 0.916459

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.576046
2     │ 0.758041
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.053477  0.0116927
2     │   0.49833   0.345756
1000×1000 Named sparse matrix with 104 Float64 nonzero entries:
	[16246598853062742192,  6134978669850253296]  =  0.5498609808520365
	[16252401167029097910,  2849690884155085581]  =  0.22459663425467835
	[12532031314284117913,  8069307267129313135]  =  0.4196621436584178
	[14135817040960565167, 10601912832305821454]  =  0.028339731295322634
	[13544680138434484894,  4786699431706339713]  =  0.3560385479667625
	[10923390679270416228, 15774366784000975931]  =  0.16907060655931083
	[11581210425696274532, 15362413774630394309]  =  0.09710956835222162
	[8720304024814141479 ,  9892445672491709286]  =  0.27071579564308834
	                                              ⋮
	[6295185824851981085 , 14169799449801373117]  =  0.801266358433518
	[10361072080411987344, 10647878191897777347]  =  0.056070188837753054
	[5141712520566156359 , 14944477062144183931]  =  0.5295740433084684
	[14757494119953341947, 16243515418520287792]  =  0.15844676585458162
	[8037924722734667669 ,  4682100877033407764]  =  0.38391293390088865
	[10369386120472232477, 11382910810432795234]  =  0.7370464147062723
	[9133170895916704973 ,  2520040687452014961]  =  0.19809617603538454
	[592365234179887848  , 17737936919457265947]  =  0.6295272183737295
	[11250402503384658013, 13970367575607681105]  =  0.22869655990257542Timing named index: 0.001645154, array index: 0.000630359, named key: 0.096649271
Timing sum large sparse array: 0.008099593, named: 0.017835501
done!
INFO: NamedArrays tests passed

>>> End of log
