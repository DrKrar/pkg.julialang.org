>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (844.31640625 MB free)
Uptime: 5598.0 sec
Load Avg:  0.94873046875  0.962890625  1.00244140625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3507 MHz     327784 s         53 s      37830 s     128550 s          9 s
#2  3507 MHz      74095 s         95 s      16729 s     457784 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.21496319862861446	0.38152437349782864	0.06903976095968267	0.6306379616938771
two	0.6178263734144016	0.8409052465195237	0.7740925776059375	0.3820142923432901
a	47
b	76
c	52
d	26
e	11
f	97
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.893727  0.926986  0.105946
b           │  0.93184  0.407144  0.327484 0.8937269574663171 0.8937269574663171
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.893727  0.926986  0.105946
b     │  0.93184  0.407144  0.327484
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.893727  0.926986  0.105946
b           │  0.93184  0.407144  0.327484
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.893727  0.926986  0.105946
b     │  0.93184  0.407144  0.327484
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │         一          二          三          四
────────────────┼───────────────────────────────────────────
一              │   0.331249  0.00121243    0.852157    0.274159
二              │   0.279421    0.282038    0.641954    0.477593
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.171373 0.808692 0.377382 0.595677; 0.512133 0.3326 0.654365 0.419583]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.171373  0.808692  0.377382  0.595677
two   │ 0.512133    0.3326  0.654365  0.4195832×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.171373  0.808692  0.377382  0.595677
two   │ 0.512133    0.3326  0.654365  0.4195832×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.40905    0.0465481  …     0.235793    0.0957801
2     │    0.210331     0.787491  …      1.36483       3.18541000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.57167     -1.0143
2     │  -0.784189    0.526498
3     │   0.460506   -0.373493
4     │  -0.725809    -1.16999
5     │   -2.11891   -0.197298
6     │    1.56118    -2.12941
7     │  -0.926887     1.36916
8     │  -0.342811     1.55157
9     │   0.307005      1.4878
⋮                ⋮           ⋮
992   │    1.14368    0.353033
993   │   -1.10248    0.729943
994   │  -0.190769      1.8626
995   │ -0.0873449     1.06887
996   │   -0.90156   -0.647679
997   │   -1.52789   0.0347938
998   │   0.465384    0.275753
999   │    1.21774   -0.937237
1000  │   -1.62968    0.6687271000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │     1.02739
2    │    0.426097
3    │    -0.74315
4    │  -0.0641574
5    │   -0.437744
6    │    0.587066
7    │   0.0436581
8    │    -1.07975
9    │    -1.18668
⋮                ⋮
992  │    -1.25141
993  │    0.466654
994  │     1.39614
995  │   -0.879439
996  │  -0.0758166
997  │    -1.99407
998  │    0.959648
999  │ 0.000608289
1000 │    -0.486822×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0829258   0.423777
1           │  0.160065   0.864491

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.55601  0.299654
1           │ 0.596912  0.603872
2-element Named Array{Float64,1}
A  │ 
───┼───────────
1  │   0.208663
2  │ 0.00591459
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.953574  0.433845
2     │ 0.486694   0.67679
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.960367  0.933916
2     │ 0.711959  0.363965

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.297029  0.502368
2     │ 0.544004  0.359601
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.799539    0.30082
2     │ 0.0938275   0.643032

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.908992  0.163003
2     │ 0.590145  0.845571

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.764085  0.013975
2     │ 0.116052  0.775449

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0313525   0.161112
2     │  0.487219   0.690405
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.799314   0.413605
2     │  0.931978  0.0642451

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │     0.454   0.525334
2     │ 0.0183633   0.594315

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.241242  0.400516
2     │ 0.824399  0.740941
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.506841  0.483965

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.600973  0.583513
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.974831
2     │ 0.881038

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │  0.58573
2     │ 0.485063
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.43175   0.29216
2     │ 0.344649  0.478991
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[9980399998304487033 , 14304565767364922256]  =  0.5854712062620031
	[17928760137377702946, 14343632987770563929]  =  0.42482279880648854
	[2792481481398066916 , 17822619313291261357]  =  0.8205932890881855
	[5726055407873363885 ,  8629498292780771804]  =  0.38466415617260186
	[14944477062144183931,  3253468397832770835]  =  0.23709777844847513
	[10213422356137903131, 18168544338330653462]  =  0.8402916150089068
	[1095814029099585013 , 16408863325498676967]  =  0.33619781267250626
	[2886272574986834222 , 16112569381171233070]  =  0.7954098812532511
	                                              ⋮
	[16083059188908835467,  7630593249633640373]  =  0.827428362000574
	[13459572381615104428,  6468689935112619700]  =  0.10019320196997517
	[13268306687392746585,  5597731276780160114]  =  0.6180816516292056
	[12419957900638875901, 11711005111088208244]  =  0.25196640785538005
	[14475185020288943568, 17718833055079784125]  =  0.33523518001190955
	[11641483179283066996,   372001016642560619]  =  0.2653485284222963
	[3929618674436644774 , 11314283927973801071]  =  0.7163756699853201
	[15791483600865970897,  3279378535085980212]  =  0.07364714946727324
	[2886272574986834222 ,  3733926995351842633]  =  0.5681566963664919Timing named index: 0.000958835, array index: 0.000492981, named key: 0.079844966
Timing sum large sparse array: 0.007047337, named: 0.013805091
done!
INFO: NamedArrays tests passed

>>> End of log
