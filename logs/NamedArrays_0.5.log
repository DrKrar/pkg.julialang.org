>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-103-generic #150-Ubuntu SMP Thu Nov 24 10:34:17 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (823.69921875 MB free)
Uptime: 5556.0 sec
Load Avg:  0.98779296875  0.990234375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     333198 s       2202 s      37691 s     120296 s         14 s
#2  3499 MHz      78990 s       4540 s      17573 s     440892 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.39157641948392174	0.7512322936865787	0.30720587685881195	0.17345289713928969
two	0.9243954586066598	0.04287625440654019	0.13149264116365367	0.6393262821413368
a	67
b	82
c	84
d	20
e	75
f	72
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.360705  0.891121  0.607166
b           │ 0.858637  0.675468  0.535243 0.36070463857543245 0.36070463857543245
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.360705  0.891121  0.607166
b     │ 0.858637  0.675468  0.535243
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.360705  0.891121  0.607166
b           │ 0.858637  0.675468  0.535243
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.360705  0.891121  0.607166
b     │ 0.858637  0.675468  0.535243
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.936832   0.222615   0.560752  0.0251166
二              │  0.944137   0.783319   0.487896   0.456805
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139670981072000
0-element Named Array{Any,1}

[0.743301 0.532825 0.86519 0.299414; 0.588403 0.828188 0.839321 0.574331]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.743301  0.532825   0.86519  0.299414
two   │ 0.588403  0.828188  0.839321  0.5743312×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.743301  0.532825   0.86519  0.299414
two   │ 0.588403  0.828188  0.839321  0.5743312×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.226445      -1.61833  …       1.82471     -0.074398
2     │     0.292472     -0.435889  …      0.560571      -1.974651000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.201822     2.04654
2     │   0.684055  -0.0293243
3     │  -0.679547     1.48888
4     │    1.77259   0.0495116
5     │   -1.58358   -0.219503
6     │    1.19176    0.164463
7     │  0.0385102   0.0272157
8     │    1.15417     1.13703
9     │   0.421046   -0.251925
⋮                ⋮           ⋮
992   │   -1.15817     -0.1699
993   │   0.601692   -0.285939
994   │  -0.392573    0.977885
995   │ -0.0611102    -1.03825
996   │   -0.40387  -0.0812242
997   │    -0.8906     1.18718
998   │    0.73541    0.137482
999   │   0.227848    0.341055
1000  │   0.468724     2.062981000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.00088
2    │   0.715445
3    │   0.241785
4    │   0.476465
5    │    -0.3327
6    │   -1.69935
7    │ -0.0754319
8    │    1.29989
9    │  -0.627116
⋮               ⋮
992  │    1.68295
993  │  -0.169937
994  │  -0.021202
995  │ -0.0608513
996  │   0.447319
997  │   -1.25489
998  │  -0.703186
999  │    1.27107
1000 │   0.5817432×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.703319  0.776901
1           │ 0.530514  0.953188

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.243384    0.740128
1           │   0.790283  0.00314837
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.924813
2  │ 0.101218
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.441968  0.263668
2     │ 0.577036  0.296346
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.329449  0.153692
2     │ 0.485426  0.767351

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.903665  0.641371
2     │ 0.558369  0.979757
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.964278  0.745612
2     │ 0.359182  0.148193

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.643185  0.734122
2     │ 0.868424  0.297004

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0769977   0.737194
2     │  0.529993   0.714588

[:, :, C=2, D=2] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.102631  0.000548642
2     │   0.0697024     0.243767
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.385755    0.906135
2     │   0.320887  0.00895664

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.992443  0.245212
2     │ 0.359543  0.138289

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.563924   0.877165
2     │ 0.0817261   0.164522
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.914462  0.792354

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.190707  0.936543
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.725965
2     │ 0.842582

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.899566
2     │ 0.428072
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.333213  0.680185
2     │ 0.957912  0.205228
1000×1000 Named sparse matrix with 101 Float64 nonzero entries:
	[17498567691103755585, 13888991764943741743]  =  0.36442313084434197
	[17131895616600668418,  6046649976662626325]  =  0.5446817145738556
	[7608520278977511969 , 16544335554558850098]  =  0.9129791801385181
	[16825537159737453803,  9283096199793891681]  =  0.14874056886850862
	[10698461782340713109, 10601912832305821454]  =  0.016790707204041855
	[15422846019410515149,  4394159825732135742]  =  0.17890253713241955
	[11177662065610013630,  3253468397832770835]  =  0.3868280182654269
	[10384179111032293919, 18168544338330653462]  =  0.45622329030097974
	                                              ⋮
	[13290028645952656732,  8357516066305821252]  =  0.5636275798914459
	[6526988131186142725 , 16267926292325351807]  =  0.6590802928858364
	[10924666096879366607,  8586548853081112102]  =  0.030777535313857518
	[13710539999002292266,  2344064818992981444]  =  0.5358320020464351
	[6413456663738881847 ,  3014575823142358933]  =  0.9671521874820528
	[1566360107212290167 ,  3014575823142358933]  =  0.14557641718190895
	[9896174471843564741 ,  2520040687452014961]  =  0.32056319216689055
	[4682100877033407764 , 11711005111088208244]  =  0.1897682125954847
	[16069635275006911712, 13950575499123628905]  =  0.20799835004386602Timing named index: 0.001444506, array index: 0.000588747, named key: 0.129806258
Timing sum large sparse array: 0.007867582, named: 0.022196746
done!
INFO: NamedArrays tests passed

>>> End of log
