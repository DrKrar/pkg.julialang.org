>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (838.51171875 MB free)
Uptime: 6050.0 sec
Load Avg:  0.97021484375  0.9853515625  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     334480 s       3339 s      35424 s     164003 s          7 s
#2  3499 MHz      92842 s       2584 s      14466 s     480906 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.8799188108093727	0.3920829643370487	0.997558514249272	0.6137274288413688
two	8676765209547632e-20	0.863292660722814	0.3997792470701569	0.13852972218072623
a	25
b	56
c	20
d	43
e	47
f	35
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.532707  0.789821   0.21996
b           │ 0.688328  0.278547  0.874271 0.532706639356715 0.532706639356715
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.532707  0.789821   0.21996
b     │ 0.688328  0.278547  0.874271
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.532707  0.789821   0.21996
b           │ 0.688328  0.278547  0.874271
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.532707  0.789821   0.21996
b     │ 0.688328  0.278547  0.874271
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.682142   0.840778   0.242675     0.5526
二              │ 0.0432829   0.632445   0.784781   0.947825
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140310938709840
0-element Named Array{Any,1}

[0.763591 0.607556 0.373869 0.126631; 0.916897 0.845525 0.151931 0.0733599]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.763591   0.607556   0.373869   0.126631
two   │  0.916897   0.845525   0.151931  0.07335992×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.763591   0.607556   0.373869   0.126631
two   │  0.916897   0.845525   0.151931  0.07335992×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.214715     -0.486297  …    -0.0581012      -2.05582
2     │    -0.454858       1.26997  …     0.0457922      0.3454261000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.251951    1.26537
2     │  -1.55171   0.382901
3     │ -0.250982   -1.68674
4     │   0.51633    2.04981
5     │    1.2184  -0.935534
6     │ -0.356678  -0.928774
7     │   1.21459  0.0450826
8     │   1.02616    1.32268
9     │  0.359503    0.28227
⋮               ⋮          ⋮
992   │   1.13588   0.118344
993   │  0.711483   -1.83324
994   │  0.520377   0.355239
995   │  -1.38231   -1.59581
996   │  0.519909  -0.666727
997   │  -1.30256   0.500734
998   │ -0.670816    1.20043
999   │ -0.706561      1.897
1000  │ -0.975528  -0.1543571000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  0.323893
2    │   1.67784
3    │  0.665098
4    │  0.100376
5    │  0.876864
6    │   0.63177
7    │ -0.993312
8    │ -0.523396
9    │   1.76316
⋮              ⋮
992  │ -0.700918
993  │  0.479608
994  │   0.26826
995  │  0.209177
996  │  0.472258
997  │  0.404747
998  │ -0.213887
999  │ -0.080967
1000 │ 0.03049932×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.374669  0.0736429
1           │ 0.0868821   0.348738

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.856278   0.47235
1           │ 0.234474  0.224172
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │ 0.0663662
2  │  0.723586
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.838857  0.386586
2     │ 0.185488  0.328987
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.24792   0.951752
2     │ 0.0285956   0.608221

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.929615   0.328138
2     │  0.803006  0.0303042
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.524604  0.0442292
2     │ 0.0418933    0.99953

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.67185  0.284016
2     │ 0.786809  0.494172

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.770496  0.381402
2     │ 0.880789  0.345745

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0533791    0.85371
2     │  0.875075   0.817636
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.460565  0.906351
2     │ 0.732067  0.799682

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.158823  0.745354
2     │ 0.613759  0.087784

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.76343  0.957197
2     │  0.47897  0.433632
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.770069   0.43173

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.127443  0.262262
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.524078
2     │ 0.784272

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.971258
2     │ 0.978325
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0385166  0.0849122
2     │  0.257153   0.649983
1000×1000 Named sparse matrix with 97 Float64 nonzero entries:
	[3253468397832770835 ,  6526988131186142725]  =  0.33995638020516705
	[8430133805019144520 ,  3929618674436644774]  =  0.04530269396563669
	[5733908175048446366 ,  5312631360709731698]  =  0.2575920903039164
	[3648183837903989091 , 15422846019410515149]  =  0.14658346621615093
	[15905894300834924909, 16462243977607957471]  =  0.2118806977341945
	[5122894113285174381 ,  2849690884155085581]  =  0.14956023903050752
	[4041377447322807123 , 18443816037252674910]  =  0.3074401817167167
	[4207351995360724518 ,  4976045735032000325]  =  0.16638741195188733
	                                              ⋮
	[9559487157531389543 , 14944477062144183931]  =  0.5188073577504824
	[2318046236442875673 , 14944477062144183931]  =  0.6914733983534727
	[11394354523540829904,  7630593249633640373]  =  0.7882854170166114
	[7379076729609959571 , 16655780295490676025]  =  0.045703680859182416
	[8097707444526576530 , 11641483179283066996]  =  0.5245280785998032
	[312622336801724658  , 15857670694969494589]  =  0.0324656519803479
	[975384116789271147  , 10655964431342481635]  =  0.4336804437734225
	[10066988524776738469,  1203336841330469213]  =  0.06409073556361311
	[1166092285267503990 , 11527542315164007414]  =  0.8320347938397334Timing named index: 0.001471087, array index: 0.000640416, named key: 0.121711422
Timing sum large sparse array: 0.011497459, named: 0.034136734
done!
INFO: NamedArrays tests passed

>>> End of log
