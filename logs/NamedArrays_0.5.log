>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (841.953125 MB free)
Uptime: 6009.0 sec
Load Avg:  1.0029296875  0.96337890625  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     309627 s         59 s      45119 s     165655 s         10 s
#2  3500 MHz      70226 s         86 s      19004 s     493149 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.274709  0.826108  0.786325
b           │ 0.871675  0.249927  0.378952 0.27470850820578496 0.27470850820578496
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.274709  0.826108  0.786325
b     │ 0.871675  0.249927  0.378952
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.274709  0.826108  0.786325
b           │ 0.871675  0.249927  0.378952
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.274709  0.826108  0.786325
b     │ 0.871675  0.249927  0.378952
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0146861   0.341836   0.627326   0.849339
two   │  0.687068   0.835395   0.888527   0.205939
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.871199   0.70717
1           │ 0.289824  0.427952

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.727073  0.0520195
1           │   0.94763    0.69494
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.499593
2 │ 0.158922
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.133035  0.186771
2     │ 0.608675  0.564944
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.913041  0.225569
2     │ 0.984957  0.927373

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.532897  0.708165
2     │ 0.395366  0.845818
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.687727   0.846067
2     │  0.352617  0.0357923

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.364485  0.838403
2     │ 0.904041  0.113028

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.731487  0.372672
2     │ 0.340859  0.855697

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.777618    0.2302
2     │ 0.230674  0.614265
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.882704  0.849606
2     │ 0.594215  0.995437

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.784425  0.0856049
2     │  0.978423   0.231023

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0199453   0.324095
2     │  0.370655   0.461171

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.649653   0.015913
2     │ 0.0958952    0.17331

[:, :, C=1, D=1, E=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.535278  0.00988029
2     │   0.808283    0.115268

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.876272  0.0251984
2     │  0.480119   0.471058

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.811128   0.387891
2     │ 0.0951609   0.140659

[:, :, C=2, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.193625   0.451807
2     │  0.106549  0.0518949
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │           1            2
──────┼─────────────────────────
1     │ 0.000733184     0.545803

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.528761  0.752299
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.979879
2     │ 0.812535

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.662818
2     │ 0.0163351
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.840924  0.531082
2     │ 0.779305   0.47864
done!
Timing named index: 0.000674989, array index: 0.000420615, named key: 0.070745384
Timing sum large sparse array: 0.016649762, named: 0.016496514
INFO: NamedArrays tests passed

>>> End of log
