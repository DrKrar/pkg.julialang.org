>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (828.53125 MB free)
Uptime: 5759.0 sec
Load Avg:  1.01708984375  0.99169921875  1.05419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     332511 s        109 s      44034 s     135162 s         11 s
#2  3500 MHz      78557 s       6237 s      18323 s     459130 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.6974050349094021	0.37983329655014275	0.3214844811460045	0.5110339223168154
two	0.13265712700794863	0.4009729586766537	0.02681271062783308	0.7368161198037946
a	66
b	99
c	10
d	14
e	11
f	23
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.779016   0.172882    0.56048
b           │  0.674078  0.0142535   0.254543 0.7790161614915918 0.7790161614915918
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.779016   0.172882    0.56048
b     │  0.674078  0.0142535   0.254543
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.779016   0.172882    0.56048
b           │  0.674078  0.0142535   0.254543
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.779016   0.172882    0.56048
b     │  0.674078  0.0142535   0.254543
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.931643   0.276032   0.357485  0.0502852
二              │  0.710368   0.129075   0.258545   0.788903
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140435478454896
0-element Named Array{Any,1}

[0.392837 0.0236715 0.37856 0.101989; 0.392605 0.053638 0.0936681 0.583896]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.392837  0.0236715    0.37856   0.101989
two   │  0.392605   0.053638  0.0936681   0.5838962×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.392837  0.0236715    0.37856   0.101989
two   │  0.392605   0.053638  0.0936681   0.5838962×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.825697     -1.85098  …    -0.138837    -0.142721
2     │    -1.08013      2.40879  …    -0.799826    -0.3689131000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.586039     -1.3795
2     │   -1.91636     1.04741
3     │  -0.193552    0.133538
4     │   -2.35669   -0.476005
5     │   0.930292   -0.658029
6     │   -2.36534   -0.164902
7     │   0.571272    0.574818
8     │  -0.153983    -1.82809
9     │   0.662107     1.07926
⋮                ⋮           ⋮
992   │    1.36647    0.832031
993   │    1.42335    -1.95973
994   │    1.04964   -0.271717
995   │   -2.89791    -2.15779
996   │  -0.570542   -0.115784
997   │    1.79902    -1.71295
998   │   -0.33614   -0.676484
999   │  -0.680355     3.35343
1000  │   0.233402  -0.01985081000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    0.77239
2    │   -1.33848
3    │    1.02769
4    │   0.882374
5    │   0.896657
6    │    1.31549
7    │    1.41644
8    │  -0.286392
9    │  -0.575329
⋮               ⋮
992  │  -0.637711
993  │   0.318177
994  │   0.851602
995  │  -0.691173
996  │    1.83975
997  │   -1.14534
998  │   0.042815
999  │    -1.8027
1000 │ 0.002887492×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0625251   0.245076
1           │  0.853228   0.620842

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.425644    0.84717
1           │ 0.0167807   0.701706
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.555194
2  │ 0.0294195
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.493157  0.478494
2     │  0.53267  0.629381
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.984339   0.67626
2     │ 0.841364  0.432249

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.962999  0.0832765
2     │  0.857663   0.833022
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.815908   0.592187
2     │  0.318886  0.0947237

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.439493  0.889628
2     │ 0.308878  0.214937

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.336875  0.892501
2     │ 0.474053  0.352704

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.960951   0.35965
2     │ 0.854693  0.914121
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.38784  0.739026
2     │ 0.119582  0.169852

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.150194  0.271312
2     │ 0.951486  0.101498

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.322479  0.0941735
2     │  0.428169   0.615752
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.70565  0.659724

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.608229  0.347408
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0124104
2     │  0.733441

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.555276
2     │ 0.665409
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.580691  0.344426
2     │ 0.461044  0.963574
1000×1000 Named sparse matrix with 123 Float64 nonzero entries:
	[8340722336334766600 ,  3929618674436644774]  =  0.8748283647510644
	[10981095045923005722,   397394769374478572]  =  0.3201377790611766
	[13494041442472679795,  5647414292592918739]  =  0.8269131949812367
	[1082833487325258643 , 15422846019410515149]  =  0.056440326934763085
	[8856745381828013443 ,  8058121953372963805]  =  0.644265807334985
	[9301010200713812034 ,  4247719799217886270]  =  0.7416292457282849
	[4207351995360724518 , 10106592262940987645]  =  0.5670431594169119
	[8699474171918181750 ,  5062864901616737721]  =  0.5115593828138099
	                                              ⋮
	[16208673231642956787,  2695040152261095162]  =  0.18374435210625717
	[3684962664704690986 ,  9051203263452778593]  =  0.2588336624600085
	[8586548853081112102 , 11033897610157224162]  =  0.5651379374492504
	[7375983855684575809 , 15717097331822026300]  =  0.40267289487978486
	[2773759897603617072 , 16655780295490676025]  =  0.7177882583510873
	[8827948915134371496 ,  4214085865611670439]  =  0.873242198162284
	[18209667852355918066, 11551291857879764225]  =  0.9986126452894302
	[5688850749322968570 , 14057278280866812536]  =  0.39705519976902526
	[10369386120472232477, 12624682912995533025]  =  0.29652381077756806Timing named index: 0.001357972, array index: 0.000648971, named key: 0.093950963
Timing sum large sparse array: 0.01199485, named: 0.026426191
done!
INFO: NamedArrays tests passed

>>> End of log
