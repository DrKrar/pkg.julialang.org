>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (844.7890625 MB free)
Uptime: 5986.0 sec
Load Avg:  0.888671875  0.94384765625  1.025390625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     324863 s       5644 s      41441 s     162879 s          8 s
#2  3499 MHz      87577 s        172 s      18570 s     479447 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.5255314864179363	0.45607850511627657	0.4625169793476287	0.9990229733825784
two	0.16235358962611457	0.6293855461911153	0.5838598488315558	0.6484708149645111
a	85
b	67
c	42
d	63
e	22
f	26
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.557261  0.0985921   0.422971
b           │  0.335414   0.787935   0.660701 0.5572607540151668 0.5572607540151668
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.557261  0.0985921   0.422971
b     │  0.335414   0.787935   0.660701
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.557261  0.0985921   0.422971
b           │  0.335414   0.787935   0.660701
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.557261  0.0985921   0.422971
b     │  0.335414   0.787935   0.660701
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.341552  0.0625144   0.589773   0.209946
二              │  0.171121   0.543002   0.363526   0.787941
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139708589646816
0-element Named Array{Any,1}

[0.524524 0.226541 0.514902 0.411429; 0.974143 0.26164 0.0875657 0.899618]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.524524   0.226541   0.514902   0.411429
two   │  0.974143    0.26164  0.0875657   0.8996182×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.524524   0.226541   0.514902   0.411429
two   │  0.974143    0.26164  0.0875657   0.8996182×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.739145    -0.764272  …     0.629222    -0.735577
2     │    -1.31358    -0.525418  …    -0.200954     0.3107951000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.896326     1.64935
2     │   0.702925    -2.09506
3     │   -1.34743   -0.524953
4     │   0.497702    0.104001
5     │  -0.090422     0.17592
6     │   -1.68121    -1.19256
7     │  -0.204264     1.57705
8     │   -1.22056   -0.748052
9     │   -1.16794   -0.622276
⋮                ⋮           ⋮
992   │ 0.00404373    0.718619
993   │   -1.05693    0.736052
994   │  -0.029946   -0.798873
995   │   0.735535   -0.122363
996   │     2.4019   -0.282012
997   │     1.0869   -0.112148
998   │   0.303704   -0.298627
999   │    1.15343      -1.268
1000  │   -0.55174   -0.8376871000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │  -1.47036
2    │  0.455649
3    │  0.648823
4    │ -0.252875
5    │   -1.0053
6    │  0.611757
7    │  0.378622
8    │   -0.7128
9    │  -2.13442
⋮              ⋮
992  │ 0.0530446
993  │  0.822906
994  │  0.118305
995  │ -0.272141
996  │   1.32987
997  │ -0.287103
998  │ -0.511131
999  │   1.89341
1000 │   2.258642×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.627267  0.704984
1           │ 0.293073   0.38322

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │ 0.00565426    0.377786
1           │   0.733273    0.276557
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.235434
2  │ 0.918218
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0127586   0.918896
2     │ 0.0305713   0.958037
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.333556  0.981351
2     │ 0.350013   0.14891

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.154488   0.934519
2     │   0.22978  0.0831031
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.709979  0.0996979
2     │  0.588958   0.201414

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.585382  0.375733
2     │ 0.279513  0.136584

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.919873  0.0988027
2     │  0.377319    0.46142

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.633557  0.404177
2     │ 0.055238  0.908253
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.668464  0.971898
2     │ 0.534905    0.1801

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.890186  0.659183
2     │ 0.105988  0.659828

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00188428    0.450113
2     │   0.931956    0.451318
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.589877  0.605288

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.946074  0.699604
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.546171
2     │ 0.674612

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.779293
2     │ 0.633548
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.692689   0.91422
2     │ 0.639727  0.753725
1000×1000 Named sparse matrix with 91 Float64 nonzero entries:
	[3822203247414266444 , 13888991764943741743]  =  0.004533819703182562
	[11496001657944805140,  6134978669850253296]  =  0.6515660380176438
	[14475185020288943568, 18443816037252674910]  =  0.2826073693592548
	[14117127041272093201,  8069307267129313135]  =  0.20281464650625747
	[14169799449801373117,  4981387750669837953]  =  0.5893792779641771
	[13427473630495641040, 17211410618634043162]  =  0.8548968310481795
	[16097006782209161274, 15774366784000975931]  =  0.36608123337679976
	[8248225090216742074 ,  2001767177420584454]  =  0.009252187150371238
	                                              ⋮
	[12819963352506822510, 11033897610157224162]  =  0.5849316638086892
	[7242692203416363180 ,  8471876845144429043]  =  0.5183564060496753
	[14066869468942639955,     1348625733340586]  =  0.8661860440650346
	[16207601408309432074, 15717097331822026300]  =  0.22242130714964325
	[14258322255812091301,  2117445326293199079]  =  0.7144011512636137
	[14464695094339742775, 10655964431342481635]  =  0.5639128454913198
	[4878460211641475699 ,  7989582431359101293]  =  0.4608348871119641
	[12532031314284117913, 11314283927973801071]  =  0.2664495227985053
	[6947860236989419941 ,  1842419535934980543]  =  0.25858954801145995Timing named index: 0.000724026, array index: 0.000418121, named key: 0.078410611
Timing sum large sparse array: 0.011220454, named: 0.033977401
done!
INFO: NamedArrays tests passed

>>> End of log
