>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (854.08203125 MB free)
Uptime: 5659.0 sec
Load Avg:  0.888671875  0.9248046875  1.00146484375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     310283 s        191 s      37132 s     149978 s          7 s
#2  3499 MHz      80105 s          0 s      16609 s     455327 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.707853  0.0610598    0.72483
b           │  0.679202   0.803943   0.720735 0.7078533341954338 0.7078533341954338
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.707853  0.0610598    0.72483
b     │  0.679202   0.803943   0.720735
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.707853  0.0610598    0.72483
b           │  0.679202   0.803943   0.720735
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.707853  0.0610598    0.72483
b     │  0.679202   0.803943   0.720735
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.406719  0.0480425   0.922953     0.3349
two   │  0.919565   0.292799   0.747976    0.53303
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.789016  0.685764
1           │ 0.404502  0.904198

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.019426  0.149088
1           │ 0.330594  0.549451
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.230667
2 │ 0.491179
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.692718  0.154101
2     │ 0.308899  0.729231
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.59425  0.0745563
2     │  0.554309   0.424763

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.577476  0.939497
2     │ 0.707727  0.535379
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.324045  0.217353
2     │ 0.473497   0.39038

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.850501   0.95949
2     │ 0.476063  0.471215

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.479171   0.903566
2     │  0.362997  0.0325014

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.569548   0.926035
2     │ 0.0858771    0.16881
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.271888  0.275057
2     │ 0.384581  0.392331

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │   0.8757  0.211801
2     │ 0.419748   0.95874

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.705717  0.141186
2     │ 0.796745  0.686841

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.185472  0.036473
2     │ 0.188004  0.200594

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.560208  0.797962
2     │ 0.868263  0.893109

[:, :, C=2, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0110501   0.693818
2     │ 0.0387223   0.228838

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.108039  0.488171
2     │ 0.196019  0.995388

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.602842  0.108544
2     │ 0.128847  0.878021
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.579039  0.767462

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.552724   0.36739
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.387387
2     │ 0.0123591

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.190075
2     │ 0.346386
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.827554     0.5735
2     │ 0.0778908   0.115129
done!
Timing named index: 0.001246781, array index: 0.000551323, named key: 0.087227418
Timing sum large sparse array: 0.021276775, named: 0.027913904
INFO: NamedArrays tests passed

>>> End of log
