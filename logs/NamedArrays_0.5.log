>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.5
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0-rc3+0
Commit e6f843b (2016-08-22 23:43 UTC)
Platform Info:
  System: Linux (x86_64-unknown-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-95-generic #142-Ubuntu SMP Fri Aug 12 17:00:09 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (828.203125 MB free)
Uptime: 7397.0 sec
Load Avg:  0.9580078125  0.96923828125  0.95458984375
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     309916 s         98 s      38216 s     309476 s          6 s
#2  3499 MHz     108532 s         38 s      15702 s     596004 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.0
 - DataStructures                0.4.5
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.498792    0.390819  0.00851704
b           │   0.952904    0.800907    0.382847 0.49879193425837354 0.49879193425837354
2×3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.498792    0.390819  0.00851704
b     │   0.952904    0.800907    0.382847
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │          c           d           e
────────────┼───────────────────────────────────
a           │   0.498792    0.390819  0.00851704
b           │   0.952904    0.800907    0.382847
2×3 Named Array{Float64,2}
A ╲ B │          c           d           e
──────┼───────────────────────────────────
a     │   0.498792    0.390819  0.00851704
b     │   0.952904    0.800907    0.382847
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.155583  0.796826  0.678716  0.705724
two   │  0.82527  0.396695  0.301248  0.200594
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.909945  0.853764
1           │ 0.837805  0.430424

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.300699   0.117152
1           │ 0.0268509   0.462786
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.786617
2 │ 0.284318
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.771695   0.359467
2     │  0.995971  0.0231076
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.637034  0.366559
2     │ 0.201672  0.291457

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.889157  0.0228788
2     │  0.038082   0.622513
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.666105   0.622254
2     │ 0.0410027    0.72871

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.400084  0.825131
2     │ 0.029029  0.321191

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.298213  0.387738
2     │ 0.421519  0.589168

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.996559  0.832393
2     │   0.8739  0.519941
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.709288  0.255594
2     │ 0.505154  0.119239

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.349998  0.107944
2     │ 0.782059   0.58429

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.827436  0.981174
2     │ 0.373036  0.339563

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.334825   0.14365
2     │ 0.667266  0.383926

[:, :, C=1, D=1, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.514256  0.0527315
2     │  0.632398   0.367578

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.378136  0.782377
2     │   0.5705  0.073783

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.10577  0.705412
2     │ 0.864315  0.174298

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.467374  0.680315
2     │ 0.936298  0.554431
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.182042  0.512235

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.075556  0.188191
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │  0.12548
2     │ 0.227828

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.292374
2     │ 0.641492
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.779582   0.836631
2     │ 0.0907187   0.594214
done!
Timing named index: 0.001684617, array index: 0.000855978, named key: 0.116237439
Timing sum large sparse array: 0.013178743, named: 0.031231051
INFO: NamedArrays tests passed

>>> End of log
