>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.4.0
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.4
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-115-generic #162-Ubuntu SMP Fri Mar 24 16:03:51 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (951.3046875 MB free)
Uptime: 8131.0 sec
Load Avg:  0.962890625  0.95654296875  1.00830078125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3499 MHz     447085 s         63 s      42747 s     224334 s         11 s
#2  3499 MHz     118692 s         70 s      19440 s     656419 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.4.0
 - Compat                        0.21.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.4
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.9974629379386637	0.9371804664091599	0.9454491147611375	0.4197371511950454
two	0.27950941415345554	0.5149585243413033	0.5446909469188774	0.3691253748321972
a	10
b	33
c	97
d	72
e	79
f	86
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.903331  0.561398  0.391632
b           │ 0.102098  0.196821  0.784041 0.9033311061549063 0.9033311061549063
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.903331  0.561398  0.391632
b     │ 0.102098  0.196821  0.784041
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.903331  0.561398  0.391632
b           │ 0.102098  0.196821  0.784041
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.903331  0.561398  0.391632
b     │ 0.102098  0.196821  0.784041
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.280362  0.456822   0.51152  0.888192
二              │ 0.108522   0.20898  0.750586  0.955284
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140359641447856
0-element Named Array{Any,1}

[0.0111951 0.618207 0.0739232 0.757281; 0.917608 0.352477 0.284395 0.514641]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0111951   0.618207  0.0739232   0.757281
two   │  0.917608   0.352477   0.284395   0.5146412×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0111951   0.618207  0.0739232   0.757281
two   │  0.917608   0.352477   0.284395   0.5146412×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.167538    -0.802943  …      2.31931     -1.46451
2     │    -0.38008      0.81113  …   0.00288811    -0.8256861000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │    1.64811    -0.25862
2     │  -0.658031     1.35928
3     │  -0.095189    0.892847
4     │ 0.00679901    -1.08691
5     │  -0.117483   -0.958199
6     │    -1.5871     1.35262
7     │   -2.01981    0.816056
8     │  -0.810376     1.13178
9     │   0.345371    -2.16264
⋮                ⋮           ⋮
992   │   -1.70863     1.47283
993   │    0.61343    0.375376
994   │  0.0386573   -0.693034
995   │  0.0125241   -0.604045
996   │   -1.81628   -0.711108
997   │ -0.0753715    0.530798
998   │  0.0409684    0.603472
999   │   -0.70937    0.727937
1000  │    1.26167     1.723891000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │   -1.02225
2    │  -0.792028
3    │   -0.52126
4    │  -0.443396
5    │   0.443146
6    │   0.783193
7    │ 0.00783368
8    │   0.647794
9    │   -1.61421
⋮               ⋮
992  │ -0.0875191
993  │   0.550368
994  │  -0.900139
995  │   0.405957
996  │     1.1527
997  │    1.06046
998  │   0.606247
999  │  -0.152418
1000 │    1.195662×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.710171     0.4741
1           │ 0.0909244   0.648864

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.309776  0.729116
1           │ 0.582386  0.610127
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.329001
2  │ 0.583635
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.582473  0.605095
2     │ 0.317273  0.579366
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.195964  0.583396
2     │ 0.294533  0.876172

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.70051  0.0386363
2     │ 0.0940867   0.288689
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.312417  0.635412
2     │ 0.662635  0.902794

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.463114  0.572778
2     │ 0.139182  0.261447

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.603547  0.477488
2     │ 0.763578  0.117305

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.898545   0.88309
2     │ 0.082037  0.677153
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.239976   0.215922
2     │ 0.0255176   0.884682

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.970691  0.334396
2     │ 0.480318  0.305964

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.32887   0.552263
2     │  0.607937  0.0766155
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.637203  0.211353

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.927364  0.0364825
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.308764
2     │ 0.0541648

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │  0.880104
2     │ 0.0353049
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.252533   0.206168
2     │  0.357282  0.0424389
1000×1000 Named sparse matrix with 96 Float64 nonzero entries:
	[14679805967366726614,  9690422262975321697]  =  0.5139574953083077
	[6541875071455544977 ,   397394769374478572]  =  0.6025992289919722
	[4005702914804719925 , 15422846019410515149]  =  0.5055680322513705
	[4005702914804719925 ,  2230070772219402886]  =  0.8486036064313387
	[4515533440070525328 , 15774366784000975931]  =  0.43487424418766074
	[140805053905483200  , 15774366784000975931]  =  0.07676470373194078
	[11394354523540829904,  8097707444526576530]  =  0.9667500944626508
	[11373711686711023476, 12876006501778729182]  =  0.1330335763563859
	                                              ⋮
	[17742935406460696265,  5567682937376679626]  =  0.7682435076300185
	[2773759897603617072 ,  5567682937376679626]  =  0.623167818349982
	[15518036295308090568, 12901330087571726961]  =  0.4696160265804321
	[15093605664292761005, 15717097331822026300]  =  0.15314598829746595
	[16784990760345090389, 10361974346531339474]  =  0.761055156344774
	[9210596506099025992 , 10361974346531339474]  =  0.9771396537344326
	[7580984277293214809 ,  4788923618671962983]  =  0.23245936099254894
	[13751323505310026437, 12169815624147734794]  =  0.35987012777698024
	[4174785917342603289 ,  1842419535934980543]  =  0.5198101390752912Timing named index: 0.001611705, array index: 0.000656515, named key: 0.11666851
Timing sum large sparse array: 0.024529427, named: 0.0233645
done!
INFO: NamedArrays tests passed

>>> End of log
