>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-98-generic #145-Ubuntu SMP Sat Oct 8 20:13:07 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (847.265625 MB free)
Uptime: 5831.0 sec
Load Avg:  1.03955078125  1.0341796875  1.04736328125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     313054 s         50 s      31505 s     172148 s          9 s
#2  3500 MHz      79967 s         91 s      16171 s     473913 s          1 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.882212  0.905192  0.849922
b           │ 0.949809  0.711112  0.442836 0.882212421754452 0.882212421754452
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.882212  0.905192  0.849922
b     │ 0.949809  0.711112  0.442836
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.882212  0.905192  0.849922
b           │ 0.949809  0.711112  0.442836
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.882212  0.905192  0.849922
b     │ 0.949809  0.711112  0.442836
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0832469  0.0776553   0.535566   0.855885
two   │  0.480122   0.568342    0.17286   0.313063
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.403658   0.129913
1           │ 0.0853035   0.809959

[:, :, indexing=1] =
base ╲ zero │          0           1
────────────┼───────────────────────
0           │   0.222313    0.622274
1           │   0.726484  0.00660713
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.383541
2 │ 0.789698
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.37435   0.457214
2     │ 0.0220441   0.182843
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.938383  0.203024
2     │ 0.521227  0.999059

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.245223  0.598397
2     │  0.86712  0.921623
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.935639  0.925102
2     │ 0.117155  0.850942

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.378424  0.149398
2     │ 0.922718  0.381178

[:, :, C=1, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.326202  0.0666656
2     │  0.807325   0.244856

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.758429   0.23932
2     │ 0.906186  0.284197
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.681763  0.375075
2     │ 0.207975  0.644158

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.820898  0.505968
2     │ 0.141333  0.469901

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.765321   0.168609
2     │ 0.0624675     0.1897

[:, :, C=2, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.313433  0.0593123
2     │ 0.0840573   0.667481

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.445666  0.464464
2     │ 0.845154  0.663985

[:, :, C=2, D=1, E=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.333331     0.61859
2     │   0.980654  0.00442406

[:, :, C=1, D=2, E=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0513452  0.0911639
2     │  0.574115  0.0453591

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.27969  0.279112
2     │ 0.919156   0.51653
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.133696  0.401093

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.854583  0.107989
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │  0.312756
2     │ 0.0346296

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.729838
2     │ 0.554917
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.30693  0.102159
2     │ 0.959458  0.873551
done!
Timing named index: 0.00118128, array index: 0.000423448, named key: 0.078348723
Timing sum large sparse array: 0.008457885, named: 0.022894667
INFO: NamedArrays tests passed

>>> End of log
