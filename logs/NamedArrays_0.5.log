>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.3
INFO: Installing Iterators v0.3.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.3
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.1
Commit 6445c82 (2017-03-05 13:25 UTC)
Platform Info:
  OS: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-113-generic #160-Ubuntu SMP Thu Mar 9 09:27:29 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (726.1796875 MB free)
Uptime: 7870.0 sec
Load Avg:  1.4853515625  1.20947265625  1.10791015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     444905 s       3682 s      48326 s     194890 s         14 s
#2  3500 MHz     108577 s       2597 s      20880 s     640377 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.20.0
 - DataStructures                0.5.3
 - Iterators                     0.3.0
 - Polynomials                   0.1.3
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.45451281093940366	0.7123731350362159	0.17630662169397615	0.4967255092954286
two	0.8082469904051819	0.4525945189942029	0.02123649343541456	0.10958467821741413
a	24
b	24
c	69
d	91
e	56
f	47
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.844774  0.929699  0.100817
b           │ 0.704234  0.271445  0.213842 0.8447738085570771 0.8447738085570771
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.844774  0.929699  0.100817
b     │ 0.704234  0.271445  0.213842
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.844774  0.929699  0.100817
b           │ 0.704234  0.271445  0.213842
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.844774  0.929699  0.100817
b     │ 0.704234  0.271445  0.213842
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │         一          二          三          四
────────────────┼───────────────────────────────────────────
一              │   0.266942    0.325394   0.0779392    0.119742
二              │   0.366974    0.775082  0.00259357    0.786193
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139644660105232
0-element Named Array{Any,1}

[0.538043 0.443165 0.814388 0.509896; 0.895824 0.92668 0.926184 0.437808]
2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.538043  0.443165  0.814388  0.509896
two   │ 0.895824   0.92668  0.926184  0.4378082×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.538043  0.443165  0.814388  0.509896
two   │ 0.895824   0.92668  0.926184  0.4378082×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.958842    -0.719299  …   -0.0965484      2.06618
2     │     1.00699    -0.092892  …      1.19504    -0.9620291000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    -2.33717    -0.741979
2     │ -0.00145777     0.614948
3     │    -1.27443     -1.74825
4     │    -2.11133      1.43124
5     │   -0.895403      1.26001
6     │    0.276833     -0.85605
7     │  -0.0402226    -0.267409
8     │    -1.22265     0.980234
9     │    0.408174    0.0179937
⋮                 ⋮            ⋮
992   │    -1.12709     -1.39232
993   │    0.140378    -0.545677
994   │   -0.344102    -0.742832
995   │     1.90463     -1.29169
996   │    0.102058    -0.290103
997   │   -0.245283     0.160188
998   │    0.820117    -0.364631
999   │    -1.93377     0.332646
1000  │  -0.0013718     0.4151591000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │  -0.957019
2    │    1.57405
3    │  -0.139027
4    │    1.13952
5    │    0.31673
6    │   0.189907
7    │   0.600971
8    │   0.716134
9    │    -2.3949
⋮               ⋮
992  │   0.938865
993  │   -1.11913
994  │  -0.374334
995  │    1.25716
996  │    0.27118
997  │  -0.491706
998  │ -0.0692244
999  │   -1.01701
1000 │   -1.333372×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.629251  0.619625
1           │   0.7662  0.827929

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.642355  0.584636
1           │ 0.939613  0.199555
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.592791
2  │ 0.145946
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.940526  0.155895
2     │ 0.922621   0.55523
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.761124  0.0115216
2     │  0.639727   0.764326

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.671001  0.419986
2     │ 0.502766  0.118137
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0355395   0.908822
2     │  0.775189   0.230242

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.684259  0.322776
2     │ 0.653269  0.812374

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.984117  0.532536
2     │ 0.197033  0.747174

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.966588   0.445359
2     │   0.33923  0.0392758
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.741548  0.751887
2     │ 0.223158  0.889277

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.754987   0.41802
2     │ 0.814805   0.57142

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0234424   0.530486
2     │ 0.0622297   0.697307
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.238678   0.56366

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.793108  0.895613
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1
──────┼───────────
1     │ 0.00173633
2     │   0.200921

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.381448
2     │  0.68723
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.209466  0.298802
2     │ 0.410064  0.835711
1000×1000 Named sparse matrix with 80 Float64 nonzero entries:
	[16390501590956164603,  5004131969199419793]  =  0.6331875376346925
	[14680060904445900148, 13789993170142104254]  =  0.03752404940769294
	[5481191165173026183 , 12809965746239821631]  =  0.9937867156036904
	[2836200141957565154 , 17095493447719212504]  =  0.6714052632918508
	[4509385789584299296 , 17095493447719212504]  =  0.5200132928008996
	[18213258608646582471, 11080872162023102847]  =  0.6793945611232806
	[5723128691850249417 ,  2849690884155085581]  =  0.3334712436669367
	[10659699155492159423,  4394159825732135742]  =  0.2691954483077317
	                                              ⋮
	[17742935406460696265, 12901330087571726961]  =  0.530085989582211
	[5643811413442923432 , 11033897610157224162]  =  0.6786154447676003
	[12038840764336457118, 14774945750507892610]  =  0.8040452717917901
	[27911956389339708   , 17718833055079784125]  =  0.9549958903196927
	[3672445739059134796 , 10024080200852233627]  =  0.037634973029434526
	[10923390679270416228, 11470862121108514714]  =  0.12898489026165283
	[3684962664704690986 , 11314283927973801071]  =  0.8128053575999228
	[8803535867071971780 ,  4047135350800189603]  =  0.1990962204192801
	[12023328037222515112,  3733926995351842633]  =  0.6903741870811346Timing named index: 0.002057129, array index: 0.000772697, named key: 0.126136815
Timing sum large sparse array: 0.021902684, named: 0.025547172
done!
INFO: NamedArrays tests passed

>>> End of log
