>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (837.55078125 MB free)
Uptime: 5935.0 sec
Load Avg:  0.9501953125  0.97021484375  1.05908203125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     315813 s       8061 s      43268 s     158555 s         29 s
#2  3500 MHz      95612 s        540 s      22927 s     454815 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.4
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.4260112753486818	0.9550171334455575	0.9929945436374359	0.8394446687334931
two	0.8443457489351185	0.5313787870162534	0.8440101436452754	0.06977871659987689
a	21
b	100
c	64
d	54
e	21
f	6
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.743255  0.166984   0.21279
b           │ 0.535042  0.664234  0.712196 0.7432549222932687 0.7432549222932687
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.743255  0.166984   0.21279
b     │ 0.535042  0.664234  0.712196
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.743255  0.166984   0.21279
b           │ 0.535042  0.664234  0.712196
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.743255  0.166984   0.21279
b     │ 0.535042  0.664234  0.712196
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │       一        二        三        四
────────────────┼───────────────────────────────────
一              │ 0.658971  0.482149   0.93409  0.415709
二              │ 0.618142  0.942234  0.246091  0.471693
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
140272277087008
0-element Named Array{Any,1}

[0.848073 0.0478299 0.597033 0.500013; 0.112431 0.34763 0.582265 0.342645]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.848073  0.0478299   0.597033   0.500013
two   │  0.112431    0.34763   0.582265   0.3426452×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.848073  0.0478299   0.597033   0.500013
two   │  0.112431    0.34763   0.582265   0.3426452×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │   -0.967476      2.06489  …     0.446863      1.41711
2     │     0.67199     0.214042  …    0.0138045      1.173821000×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │ -0.321004   0.392707
2     │ -0.996365   0.252818
3     │  -1.48184   -2.08265
4     │ -0.289389   0.369506
5     │ -0.205468   -1.29297
6     │   1.81043    0.48381
7     │   1.83392  -0.648921
8     │  0.906524  -0.789486
9     │  0.349755   -1.02983
⋮               ⋮          ⋮
992   │  -1.07547   0.751382
993   │  -0.99115    1.59974
994   │  0.558038   0.870547
995   │  0.666937  -0.282089
996   │ -0.241759    1.15462
997   │  0.127387   -1.60831
998   │  -1.28484   0.768028
999   │ -0.281783  -0.891429
1000  │  0.356063  -0.5732481000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ -0.685055
2    │ -0.453536
3    │ 0.0248697
4    │  -1.21635
5    │  0.417865
6    │  0.562276
7    │  0.568051
8    │  -2.00087
9    │ 0.0837644
⋮              ⋮
992  │ -0.110481
993  │   1.65486
994  │ -0.609151
995  │   1.28099
996  │ -0.337649
997  │  0.073265
998  │ -0.129923
999  │  -1.00295
1000 │   0.603652×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.168697  0.0729791
1           │  0.946477   0.493483

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.595816   0.98525
1           │   0.7103  0.325234
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.444985
2  │ 0.985757
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.562128  0.350184
2     │ 0.373089  0.527277
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.335217   0.736367
2     │ 0.0793913   0.993075

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.932116  0.119449
2     │ 0.324979  0.287082
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.235713  0.449819
2     │  0.30459  0.519241

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.695063  0.513106
2     │ 0.473866  0.729949

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00795894   0.0385518
2     │   0.630688    0.612314

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.936624   0.92438
2     │ 0.748654  0.755946
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.65111  0.611845
2     │ 0.161336  0.905325

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.534534   0.842959
2     │ 0.0169546   0.319747

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0229987   0.652452
2     │  0.460271   0.984509
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.500409  0.698967

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.673067  0.215359
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.329496
2     │ 0.315869

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.295437
2     │ 0.832203
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00650257    0.607203
2     │   0.196253    0.689611
1000×1000 Named sparse matrix with 105 Float64 nonzero entries:
	[16449765671153982371,  5927176887743683346]  =  0.614350687904887
	[8173065530021071025 ,  5927176887743683346]  =  0.3397966817065756
	[2858848191422151957 ,  6806539949965918083]  =  0.006646842133648301
	[2202644137930953607 ,  4786699431706339713]  =  0.07523993750202229
	[4681672859498425805 ,  5839463014734961202]  =  0.7295274138415675
	[14956803718882296446,  2001767177420584454]  =  0.2657511473220464
	[5093524509719114539 ,  2836200141957565154]  =  0.0074166228217686925
	[3822203247414266444 ,  2836200141957565154]  =  0.3837195271685936
	                                              ⋮
	[15507769097532104225, 16836080019131185762]  =  0.8535901395375982
	[4553087567028739273 , 10655964431342481635]  =  0.5098364367357335
	[14774945750507892610, 10655964431342481635]  =  0.6817475655316856
	[8161571390594682873 ,  6565262192402102057]  =  0.1368365644205236
	[17813916387369881   , 14599810768241287016]  =  0.4322905270788209
	[8699333159457747740 , 13690505415342562739]  =  0.6149737855015511
	[3253468397832770835 , 13690505415342562739]  =  0.5154803761686668
	[14956803718882296446,  2588469222286953884]  =  0.5454529552386709
	[9833052444289127168 ,  7519919299137062942]  =  0.6316747253845605Timing named index: 0.000818327, array index: 0.000422448, named key: 0.089575749
Timing sum large sparse array: 0.023814831, named: 0.025702427
done!
INFO: NamedArrays tests passed

>>> End of log
