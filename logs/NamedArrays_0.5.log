>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.1
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-105-generic #152-Ubuntu SMP Fri Dec 2 15:37:11 UTC 2016 x86_64 x86_64
Memory: 2.9392738342285156 GB (827.67578125 MB free)
Uptime: 5641.0 sec
Load Avg:  0.96044921875  0.96240234375  1.04541015625
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     324440 s       3616 s      44970 s     130478 s         12 s
#2  3500 MHz      81630 s       2927 s      18571 s     447404 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.5
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.1
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.14981957313790017	0.06902123538628047	0.6410674653115445	0.09358702441703204
two	0.3761877817736914	0.879931587653225	0.9637729585621333	0.029121730025670978
a	98
b	38
c	8
d	62
e	35
f	79
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0836566   0.862638   0.862968
b           │  0.948042  0.0418396   0.592833 0.08365662831318343 0.08365662831318343
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0836566   0.862638   0.862968
b     │  0.948042  0.0418396   0.592833
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0836566   0.862638   0.862968
b           │  0.948042  0.0418396   0.592833
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0836566   0.862638   0.862968
b     │  0.948042  0.0418396   0.592833
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.575227   0.589805   0.276517  0.0887803
二              │  0.143445   0.570865   0.262092   0.517961
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.124932 0.433694 0.378959 0.0162487; 0.472053 0.165122 0.233474 0.993492]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.124932   0.433694   0.378959  0.0162487
two   │  0.472053   0.165122   0.233474   0.9934922×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.124932   0.433694   0.378959  0.0162487
two   │  0.472053   0.165122   0.233474   0.9934922×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    -1.32553      1.91565  …      1.27023     -1.41371
2     │    -1.14504     -1.25467  …     0.935867    -0.9289421000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │    0.844192  -0.00570612
2     │    0.909975    -0.791306
3     │     1.03452     -1.43494
4     │   -0.784276     0.539616
5     │    -1.02542    -0.101231
6     │     0.53237    -0.354696
7     │    0.400833     0.595061
8     │  -0.0753603      0.78734
9     │    -1.57845       1.4525
⋮                 ⋮            ⋮
992   │   -0.988433      1.21943
993   │    -1.24153     -1.92725
994   │   0.0134441      2.15879
995   │     1.12584    0.0454755
996   │  -0.0240847     0.789864
997   │    -1.70021     -0.47303
998   │ -0.00633234      1.11576
999   │    -1.54423    -0.772123
1000  │    0.222393     0.5010481000-element Named Array{Float64,1}
A    │ 
─────┼───────────
1    │    1.29476
2    │  -0.917475
3    │    1.20712
4    │   0.291091
5    │ -0.0808728
6    │   -1.28264
7    │ -0.0523719
8    │   0.589585
9    │  -0.566262
⋮               ⋮
992  │    1.24286
993  │   0.467631
994  │    2.12243
995  │   -1.31048
996  │   0.669913
997  │  -0.696245
998  │   -1.38336
999  │  -0.132928
1000 │   -1.092692×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │ 0.0140403   0.183477
1           │ 0.0626057   0.412588

[:, :, indexing=1] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.250757  0.0369516
1           │  0.787819   0.539497
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.326434
2  │   0.9429
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.385067  0.692132
2     │ 0.244419  0.596205
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.371099  0.363484
2     │ 0.644967   0.44356

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.157424  0.839091
2     │ 0.443547  0.424576
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.545132  0.295726
2     │ 0.717507   0.57613

[:, :, C=2, D=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │ 0.0924339   0.210079
2     │  0.493076    0.78059

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.670226  0.740644
2     │ 0.554387  0.380411

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.653131  0.557747
2     │ 0.175049  0.219535
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.464051    0.91898
2     │  0.614874  0.0630134

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.448878  0.233438
2     │ 0.924164  0.827352

[:, :, C=1, D=2, E=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │   0.969555    0.877425
2     │ 0.00854968    0.311775
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.283031  0.414334

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.512851  0.121457
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.661399
2     │ 0.772827

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.435944
2     │ 0.992876
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.707875  0.361495
2     │ 0.614621  0.749454
1000×1000 Named sparse matrix with 94 Float64 nonzero entries:
	[8779884342238752210 ,  6526988131186142725]  =  0.8078819493088158
	[8830415785437611716 ,  3929618674436644774]  =  0.980109057171747
	[16468281889911035053,  5312631360709731698]  =  0.20785763232817933
	[10109836606734241243, 17095493447719212504]  =  0.7577601707340798
	[9474715557068018910 , 14033074738777421392]  =  0.21401995783242178
	[13421307536398036800,  9283096199793891681]  =  0.3279886323761789
	[16320645429046908531,  7199089960335318010]  =  0.7521161713329059
	[8716531257863426619 ,  3039451196773527828]  =  0.07487513367275445
	                                              ⋮
	[9283096199793891681 ,  7608520278977511969]  =  0.5550613778102091
	[16252401167029097910,  6468689935112619700]  =  0.7609011373629806
	[4500327340515608799 ,  1526691723863411160]  =  0.4225537979278191
	[12174600735091283114,  6738482027934271349]  =  0.4216263374586733
	[18365636711081267169, 12169815624147734794]  =  0.9540819122263846
	[306017613260083765  , 14057278280866812536]  =  0.5593336013120465
	[10725201418295586676,  1523061068178304284]  =  0.7393974850373042
	[53689838181604040   ,  1203336841330469213]  =  0.8395311533284759
	[9301010200713812034 ,  9223427034658990711]  =  0.5040333976594253Timing named index: 0.001158453, array index: 0.000476599, named key: 0.077346334
Timing sum large sparse array: 0.00840121, named: 0.014600538
done!
INFO: NamedArrays tests passed

>>> End of log
