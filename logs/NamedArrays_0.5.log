>>> 'Pkg.add("NamedArrays")' log
INFO: Cloning cache of NamedArrays from https://github.com/davidavdav/NamedArrays.jl.git
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.1.10
INFO: Installing NamedArrays v0.5.2
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-96-generic #143-Ubuntu SMP Mon Aug 29 20:15:20 UTC 2016 x86_64 x86_64
Memory: 2.4471054077148438 GB (845.8046875 MB free)
Uptime: 6265.0 sec
Load Avg:  0.95947265625  0.9482421875  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3496 MHz     302498 s         55 s      31534 s     210329 s         12 s
#2  3496 MHz     104367 s        150 s      16640 s     484654 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.7.0
 - NamedArrays                   0.5.2
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.2
 - DataStructures                0.4.6
 - Iterators                     0.1.10
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0779813   0.820962   0.198066
b           │  0.779247   0.247305    0.15442 0.07798127524545095 0.07798127524545095
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0779813   0.820962   0.198066
b     │  0.779247   0.247305    0.15442
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │ 0.0779813   0.820962   0.198066
b           │  0.779247   0.247305    0.15442
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │ 0.0779813   0.820962   0.198066
b     │  0.779247   0.247305    0.15442
arithmetic, convert, getindex, copy, setindex, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, hcat, broadcast, vectorized, matmul, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
re-arrange, eachindex, matrixops, show
0-dimensional Named Array{Int64,0}
0-element Named Array{Any,1}

2×4 Named Array{Float64,2}
A ╲ B │        a         b         c         d
──────┼───────────────────────────────────────
one   │ 0.372067  0.855994  0.646094  0.719198
two   │ 0.216656  0.951357  0.996388  0.353368
2×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.516401  0.268321
1           │ 0.733806  0.984556

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.259413  0.138305
1           │ 0.465262  0.298487
2-element Named Array{Float64,1}
A │ 
──┼─────────
1 │ 0.490822
2 │ 0.796757
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.416893   0.44654
2     │ 0.980772  0.447391
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.377209  0.072168
2     │ 0.825991  0.418004

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.473249   0.374203
2     │  0.302465  0.0266015
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.317613   0.45889
2     │ 0.781427  0.342534

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.40067  0.655793
2     │  0.32911  0.529812

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00667614    0.312057
2     │   0.711833    0.898487

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.528652  0.912273
2     │ 0.431831  0.491284
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.40375  0.961117
2     │ 0.952551  0.177934

[:, :, C=2, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.223051   0.157346
2     │  0.653321  0.0676701

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.329506  0.0879174
2     │  0.724557   0.484928

[:, :, C=2, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.555448  0.901513
2     │ 0.756903  0.380405

[:, :, C=1, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.180133  0.972293
2     │ 0.556557   0.71021

[:, :, C=2, D=1, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.188206  0.673536
2     │ 0.912382  0.303404

[:, :, C=1, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.884217  0.687519
2     │ 0.995976  0.508579

[:, :, C=2, D=2, E=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.670555  0.704209
2     │    0.204  0.545345
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.370008  0.625301

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.488734  0.223311
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.732783
2     │ 0.738808

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │ 0.0503791
2     │  0.607237
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.537639  0.490054
2     │ 0.986065  0.607216
done!
Timing named index: 0.002029608, array index: 0.000800908, named key: 0.120692726
Timing sum large sparse array: 0.013987935, named: 0.036575944
INFO: NamedArrays tests passed

>>> End of log
