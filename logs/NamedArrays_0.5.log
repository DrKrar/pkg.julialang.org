>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.5.2
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.2
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-108-generic #155-Ubuntu SMP Wed Jan 11 16:58:52 UTC 2017 x86_64 x86_64
Memory: 2.9392738342285156 GB (977.16015625 MB free)
Uptime: 8217.0 sec
Load Avg:  0.98291015625  0.9716796875  1.0185546875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     435926 s         38 s      39222 s     249490 s         18 s
#2  3500 MHz     125038 s       6169 s      19600 s     649719 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.3
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.18.0
 - DataStructures                0.5.2
 - Iterators                     0.2.0
 - Polynomials                   0.1.2
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.621075185631921	0.7501769821329862	0.3400598689658043	0.06559192806485648
two	0.08710169866768935	0.8525022364480648	0.09312817071122703	0.8039017807017468
a	59
b	17
c	29
d	39
e	77
f	12
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.175361   0.264518  0.0413874
b           │  0.928874   0.191572   0.819028 0.17536056694700286 0.17536056694700286
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.175361   0.264518  0.0413874
b     │  0.928874   0.191572   0.819028
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │         c          d          e
────────────┼────────────────────────────────
a           │  0.175361   0.264518  0.0413874
b           │  0.928874   0.191572   0.819028
2×3 Named Array{Float64,2}
A ╲ B │         c          d          e
──────┼────────────────────────────────
a     │  0.175361   0.264518  0.0413874
b     │  0.928874   0.191572   0.819028
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.223465   0.395648   0.711172   0.951847
二              │  0.242426   0.740221  0.0361287   0.569055
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
139667295180336
0-element Named Array{Any,1}

[0.216127 0.00281116 0.488201 0.529099; 0.388946 0.113207 0.78611 0.128952]
2×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.216127  0.00281116    0.488201    0.529099
two   │   0.388946    0.113207     0.78611    0.1289522×4 Named Array{Float64,2}
A ╲ B │          a           b           c           d
──────┼───────────────────────────────────────────────
one   │   0.216127  0.00281116    0.488201    0.529099
two   │   0.388946    0.113207     0.78611    0.1289522×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │     0.112343     -0.525207  …     -0.852609     -0.805562
2     │    0.0945987       2.69036  …      0.169443      -1.419861000×2 Named Array{Float64,2}
A ╲ B │           1            2
──────┼─────────────────────────
1     │   -0.108898     0.452602
2     │   -0.589208     0.273367
3     │    0.405634      1.04255
4     │   -0.915353      1.01146
5     │    -1.47051      -1.0461
6     │    -1.14907     0.184586
7     │     1.74114    -0.221208
8     │   -0.235578    -0.353381
9     │   -0.661567    -0.521824
⋮                 ⋮            ⋮
992   │    0.940007    -0.109147
993   │    -1.73803  -0.00893257
994   │   -0.151065    -0.444897
995   │   -0.738099     -1.38919
996   │     1.00275     -2.25352
997   │   -0.208758       1.1481
998   │    0.396937     -0.58924
999   │    -1.41618    -0.940132
1000  │   -0.318292     0.9786731000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │   1.70586
2    │ -0.344807
3    │  -0.96928
4    │ -0.729805
5    │   0.37171
6    │  -1.58098
7    │ -0.669318
8    │ -0.738197
9    │  0.235991
⋮              ⋮
992  │   -1.3183
993  │  0.234988
994  │  0.942444
995  │ -0.684837
996  │  -0.96496
997  │ -0.243099
998  │ -0.706801
999  │  -0.14452
1000 │   0.475482×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.835463   0.19046
1           │ 0.279932  0.162541

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.743597   0.77492
1           │ 0.386294  0.691035
2-element Named Array{Float64,1}
A  │ 
───┼──────────
1  │  0.961604
2  │ 0.0543566
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.650175  0.156698
2     │ 0.712317  0.177017
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.608195   0.986654
2     │  0.537456  0.0339913

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.726145   0.427899
2     │  0.465844  0.0221797
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.515779  0.311867
2     │ 0.804491  0.451215

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.752398  0.493368
2     │ 0.381722  0.961558

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.900605   0.34871
2     │ 0.754325  0.447478

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.872092    0.46954
2     │  0.531539  0.0854245
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.891183  0.176747
2     │ 0.580553  0.164942

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.488324  0.085883
2     │ 0.891908  0.843947

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.63965  0.500626
2     │    0.218   0.75052
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.290409  0.530825

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.969185  0.282714
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0200138
2     │   0.25801

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.599572
2     │ 0.234683
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.418743  0.324458
2     │ 0.575289  0.733114
1000×1000 Named sparse matrix with 102 Float64 nonzero entries:
	[6330913940894778354 ,  4400785119912308702]  =  0.6566984218819212
	[16390501590956164603, 16462243977607957471]  =  0.20870664655104587
	[18332548282271391638,  4394159825732135742]  =  0.5135739935196444
	[9828685043168917423 , 12295598998729798629]  =  0.05390693130231039
	[12815275876572971981, 10596751188013898940]  =  0.9814471210059774
	[3926415979499511939 ,  6065204439534692180]  =  0.49841711162724156
	[3328880625782563796 ,   281356413667926651]  =  0.3399034060641135
	[53689838181604040   ,  8030317335019090683]  =  0.775639773316547
	                                              ⋮
	[8803535867071971780 , 17173839162019621584]  =  0.18990843855355855
	[11354191964706246766,  4682100877033407764]  =  0.13747986695111547
	[18180706245899323906, 11033897610157224162]  =  0.3241299211913524
	[11732026533134275955,  6468689935112619700]  =  0.1918717783427042
	[11496001657944805140, 11993454575275700781]  =  0.39212781905514227
	[16207601408309432074,  7989582431359101293]  =  0.22485062355619223
	[13864621993906192564, 14835807873575694564]  =  0.7857282578947655
	[17466052388280872253, 12020782256748308824]  =  0.9038914896233232
	[7083487105814040007 , 13690505415342562739]  =  0.11469803611303142Timing named index: 0.001641975, array index: 0.000770744, named key: 0.122757999
Timing sum large sparse array: 0.015907815, named: 0.038885119
done!
INFO: NamedArrays tests passed

>>> End of log
