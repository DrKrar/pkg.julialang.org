>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-101-generic #148-Ubuntu SMP Thu Oct 20 22:08:32 UTC 2016 x86_64 x86_64
Memory: 2.939281463623047 GB (856.88671875 MB free)
Uptime: 5689.0 sec
Load Avg:  0.96728515625  1.00634765625  1.0419921875
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3503 MHz     306317 s       6592 s      38940 s     156998 s          7 s
#2  3503 MHz      82143 s         58 s      17408 s     457680 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.5388487072310835	0.438871847302865	0.3771570404663789	0.6348031148519346
two	0.4041875652573488	0.5676070523090404	0.8457100416613654	0.8969706659972454
a	45
b	13
c	93
d	39
e	52
f	93
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.716531  0.311642  0.862035
b           │ 0.850501   0.24261  0.927053 0.716530633210779 0.716530633210779
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.716531  0.311642  0.862035
b     │ 0.850501   0.24261  0.927053
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.716531  0.311642  0.862035
b           │ 0.850501   0.24261  0.927053
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.716531  0.311642  0.862035
b     │ 0.850501   0.24261  0.927053
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.456644   0.722054   0.842996  0.0193522
二              │  0.416645   0.480911   0.320951   0.543019
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.0515532 0.335662 0.936493 0.930299; 0.126089 0.40548 0.185971 0.44086]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0515532   0.335662   0.936493   0.930299
two   │  0.126089    0.40548   0.185971    0.440862×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │ 0.0515532   0.335662   0.936493   0.930299
two   │  0.126089    0.40548   0.185971    0.440862×1000 Named Array{Float64,2}
A ╲ B │           1            2  …          999         1000
──────┼──────────────────────────────────────────────────────
1     │    0.795882      1.18853  …     0.831955      1.94779
2     │   0.0946044     -0.28325  …     -1.83693    0.05056661000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.282147    -0.56672
2     │   0.779886   -0.864386
3     │   0.034316  -0.0741073
4     │    1.62926   -0.366193
5     │    1.86006     1.60717
6     │   0.131919    0.211655
7     │   -1.90739     0.50915
8     │    -3.0846  -0.0617692
9     │   0.582931   -0.606081
⋮                ⋮           ⋮
992   │   0.378776   -0.851654
993   │   0.588042   -0.405472
994   │  -0.365113  -0.0664583
995   │   0.390378     -1.7894
996   │   -1.13717    0.650722
997   │  -0.477124   -0.570567
998   │  -0.288182    -0.46195
999   │  -0.393068     1.09614
1000  │  -0.193606    -1.186931000-element Named Array{Float64,1}
A    │ 
─────┼──────────
1    │ 0.0831356
2    │   1.06248
3    │   1.09046
4    │ -0.338327
5    │ 0.0138296
6    │ -0.686949
7    │  -1.80901
8    │  -1.02598
9    │  0.247124
⋮              ⋮
992  │   1.74756
993  │ 0.0971677
994  │ -0.403771
995  │   2.98553
996  │  -1.31616
997  │   1.70187
998  │   1.27697
999  │  0.625883
1000 │   1.250922×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │         0          1
────────────┼─────────────────────
0           │  0.238545   0.851805
1           │ 0.0282478  0.0771679

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │  0.97168  0.297807
1           │ 0.578975  0.657082
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.936166
2  │ 0.429707
2×2 Named Array{Float64,2}
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.215257  0.413086
2     │ 0.491712  0.519985
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.520391  0.0222817
2     │   0.58705   0.746931

[:, :, C=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.504828  0.0112625
2     │  0.831537   0.838683
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.299661    0.2541
2     │ 0.572442  0.238483

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.237616   0.35559
2     │ 0.752362  0.938537

[:, :, C=1, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.365683  0.308609
2     │ 0.369156  0.553739

[:, :, C=2, D=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.09125   0.31713
2     │ 0.808651  0.361753
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │  0.68234  0.174532
2     │ 0.931711  0.812648

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.216054  0.547895
2     │ 0.826044  0.596411

[:, :, C=1, D=2, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.436521   0.496126
2     │ 0.0321111    0.79403
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.907692  0.0702734

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.176243  0.296306
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │         1
──────┼──────────
1     │ 0.0841487
2     │  0.674774

[:, :, C=2] =
A ╲ B │         1
──────┼──────────
1     │    0.7633
2     │ 0.0693246
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │          1           2
──────┼───────────────────────
1     │ 0.00535233     0.10492
2     │  0.0619386    0.853284
1000×1000 Named sparse matrix with 107 Float64 nonzero entries:
	[4565099145871195153 ,   397394769374478572]  =  0.9359465668711511
	[12789875089453902010,  5647414292592918739]  =  0.5939775010243216
	[6333909840472075512 ,  6134978669850253296]  =  0.96243524288813
	[8219611685618320698 , 14517667374310463124]  =  0.09377355699859624
	[4400785119912308702 , 18443816037252674910]  =  0.1396770925155859
	[532635700462514874  , 17676219393380616284]  =  0.918335421538242
	[15090471957562756503,  4976045735032000325]  =  0.5975343070735442
	[3029872332119767940 , 15774366784000975931]  =  0.35143872067097104
	                                              ⋮
	[10469764766191980213, 11551291857879764225]  =  0.7439129399724553
	[11314283927973801071, 10663619072362037589]  =  0.47795878098025235
	[592365234179887848  , 11527542315164007414]  =  0.3360332492985394
	[11907679469289587679, 11527542315164007414]  =  0.849709746573436
	[10596751188013898940, 13950575499123628905]  =  0.060989121866593
	[437360754480709846  , 13950575499123628905]  =  0.18864891033513076
	[8090338657268802519 ,   427459847123490633]  =  0.758295236532625
	[15914940686739716899, 14599810768241287016]  =  0.11888406520982331
	[9754155460475440262 , 13690505415342562739]  =  0.06979955503703494Timing named index: 0.001390369, array index: 0.000675002, named key: 0.116110793
Timing sum large sparse array: 0.024258608, named: 0.026859295
done!
INFO: NamedArrays tests passed

>>> End of log
