>>> 'Pkg.add("NamedArrays")' log
INFO: Installing Combinatorics v0.3.2
INFO: Installing DataStructures v0.4.6
INFO: Installing Iterators v0.2.0
INFO: Installing NamedArrays v0.5.3
INFO: Installing Polynomials v0.1.0
INFO: Package database updated
INFO: METADATA is out-of-date — you may not have the latest version of NamedArrays
INFO: Use `Pkg.update()` to get the latest versions of your packages

>>> 'Pkg.test("NamedArrays")' log
Julia Version 0.5.0
Commit 3c9d753 (2016-09-19 18:14 UTC)
Platform Info:
  System: Linux (x86_64-pc-linux-gnu)
  CPU: Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz
  WORD_SIZE: 64
           Ubuntu 14.04.5 LTS
  uname: Linux 3.13.0-100-generic #147-Ubuntu SMP Tue Oct 18 16:48:51 UTC 2016 x86_64 x86_64
Memory: 2.939289093017578 GB (851.92578125 MB free)
Uptime: 5746.0 sec
Load Avg:  1.02001953125  0.97119140625  1.02392578125
Intel(R) Xeon(R) CPU E3-1241 v3 @ 3.50GHz: 
       speed         user         nice          sys         idle          irq
#1  3500 MHz     320068 s         10 s      42568 s     146300 s          9 s
#2  3500 MHz      73324 s        168 s      17514 s     471031 s          0 s

  BLAS: libopenblas (USE64BITINT DYNAMIC_ARCH NO_AFFINITY Nehalem)
  LAPACK: libopenblas64_
  LIBM: libopenlibm
  LLVM: libLLVM-3.7.1 (ORCJIT, haswell)
Environment:
  TERM = vt100
  LD_LIBRARY_PATH = :/usr/local/lib/
  PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/vagrant/julia/bin/
  JAVA_HOME = /usr/lib/jvm/java-7-oracle
  HOME = /home/vagrant

Package Directory: /home/vagrant/.julia/v0.5
2 required packages:
 - JSON                          0.8.0
 - NamedArrays                   0.5.3
5 additional packages:
 - Combinatorics                 0.3.2
 - Compat                        0.9.3
 - DataStructures                0.4.6
 - Iterators                     0.2.0
 - Polynomials                   0.1.0
INFO: Testing NamedArrays
Starting test, no assertions should fail... base, one	0.492089504964637	0.5107507530683868	0.9999991958203156	0.6660654134769497
two	0.775050170038992	0.9605544089038163	0.506787296918426	0.9382347609707131
a	2
b	2
c	55
d	80
e	81
f	10
construction, 2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.467964  0.768999  0.283533
b           │ 0.884502  0.311345  0.142012 0.46796351921958745 0.46796351921958745
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.467964  0.768999  0.283533
b     │ 0.884502  0.311345  0.142012
2×3 Named Array{Float64,2}
dim1 ╲ dim2 │        c         d         e
────────────┼─────────────────────────────
a           │ 0.467964  0.768999  0.283533
b           │ 0.884502  0.311345  0.142012
2×3 Named Array{Float64,2}
A ╲ B │        c         d         e
──────┼─────────────────────────────
a     │ 0.467964  0.768999  0.283533
b     │ 0.884502  0.311345  0.142012
arithmetic, WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
WARNING: Dropping mismatching names
convert, getindex, setindex, 2×4 Named Array{Float64,2}
magnificent ╲ 7 │        一         二         三         四
────────────────┼───────────────────────────────────────
一              │  0.907983     0.3149   0.301931   0.648678
二              │ 0.0918254   0.125269   0.626557   0.534201
hcat/vcat, copy, sum, conversions, changing names, multi-dimensional, dodgy indices, sort, broadcast, vectorized, re-arrange, eachindex, matrixops, show,
0-dimensional Named Array{Int64,0}
0
0-element Named Array{Any,1}

[0.662182 0.729708 0.264869 0.89578; 0.0890677 0.632569 0.247419 0.726452]
2×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.662182   0.729708   0.264869    0.89578
two   │ 0.0890677   0.632569   0.247419   0.7264522×4 Named Array{Float64,2}
A ╲ B │         a          b          c          d
──────┼───────────────────────────────────────────
one   │  0.662182   0.729708   0.264869    0.89578
two   │ 0.0890677   0.632569   0.247419   0.7264522×1000 Named Array{Float64,2}
A ╲ B │            1             2  …           999          1000
──────┼──────────────────────────────────────────────────────────
1     │    -0.694841     -0.323965  …       0.75333      0.231574
2     │     0.366717      -1.72468  …     0.0899527      0.6586751000×2 Named Array{Float64,2}
A ╲ B │          1           2
──────┼───────────────────────
1     │  -0.297551    0.934109
2     │  -0.361652    0.807411
3     │   0.664026    0.295047
4     │    0.46219    0.782062
5     │     1.7689    -1.32104
6     │   0.661139   -0.398852
7     │  0.0905427   0.0985607
8     │ 0.00394769   -0.013635
9     │    1.29951     -1.0893
⋮                ⋮           ⋮
992   │   0.182061    0.684428
993   │  -0.371817    0.836119
994   │   0.689194    -1.83731
995   │   0.132175     1.38043
996   │ -0.0637574   -0.183333
997   │   0.146037   -0.115715
998   │   -1.33769    0.818865
999   │ -0.0765995   0.0963768
1000  │   0.928515    0.2421571000-element Named Array{Float64,1}
A    │ 
─────┼────────────
1    │   -0.605488
2    │      4.0213
3    │    0.345275
4    │   -0.157306
5    │   0.0685704
6    │    -1.25243
7    │    0.892323
8    │    0.195011
9    │ -0.00936536
⋮                ⋮
992  │   -0.414834
993  │     1.51789
994  │    0.189398
995  │   -0.737982
996  │     1.19545
997  │    0.318772
998  │   -0.300852
999  │   -0.735005
1000 │     1.371462×2×2 Named Array{Float64,3}

[:, :, indexing=0] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.125753  0.612897
1           │ 0.890669  0.442897

[:, :, indexing=1] =
base ╲ zero │        0         1
────────────┼───────────────────
0           │ 0.574296  0.698127
1           │ 0.596145    0.2936
2-element Named Array{Float64,1}
A  │ 
───┼─────────
1  │ 0.861418
2  │ 0.734362
2×2 Named Array{Float64,2}
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.66301  0.0740919
2     │  0.702602   0.725846
2×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.538736   0.70764
2     │ 0.558984  0.994886

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.633979  0.267187
2     │ 0.965176  0.245762
2×2×2×2 Named Array{Float64,4}

[:, :, C=1, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.372873  0.579425
2     │ 0.848863  0.137945

[:, :, C=2, D=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.592427  0.266601
2     │ 0.216718  0.622574

[:, :, C=1, D=2] =
A ╲ B │          1           2
──────┼───────────────────────
1     │     0.3462  0.00665019
2     │   0.316669    0.432947

[:, :, C=2, D=2] =
A ╲ B │         1          2
──────┼─────────────────────
1     │   0.94132  0.0297476
2     │  0.334077   0.145962
2×2×2×2×2 Named Array{Float64,5}

[:, :, C=1, D=1, E=1] =
A ╲ B │         1          2
──────┼─────────────────────
1     │  0.188304   0.643069
2     │  0.363612  0.0324626

[:, :, C=2, D=1, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.196668  0.366317
2     │ 0.721646  0.825427

[:, :, C=1, D=2, E=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.150702  0.590082
2     │ 0.213774  0.408986
⋮
1×2×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.818908  0.434848

[:, :, C=2] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.624333  0.431623
2×1×2 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1
──────┼─────────
1     │ 0.907984
2     │ 0.611741

[:, :, C=2] =
A ╲ B │        1
──────┼─────────
1     │ 0.669503
2     │ 0.132139
2×2×1 Named Array{Float64,3}

[:, :, C=1] =
A ╲ B │        1         2
──────┼───────────────────
1     │ 0.909959    0.3553
2     │ 0.680154  0.460872
1000×1000 Named sparse matrix with 102 Float64 nonzero entries:
	[1834107590195416916 ,  4400785119912308702]  =  0.5657612138968522
	[17434638896193218915, 14304565767364922256]  =  0.5562296192874114
	[8600174387665261856 , 14304565767364922256]  =  0.05674567483134463
	[9828685043168917423 , 14343632987770563929]  =  0.7091311320852098
	[3279378535085980212 , 14343632987770563929]  =  0.28795515110987036
	[14110845009009629080, 13888991764943741743]  =  0.8990844551976584
	[5688850749322968570 , 10106592262940987645]  =  0.43094024148596133
	[4805073549399112256 ,  8069307267129313135]  =  0.8526855198555239
	                                              ⋮
	[1831003761424276165 ,  4788923618671962983]  =  0.5697438458928712
	[3064253281526677720 , 11551291857879764225]  =  0.3669358810839902
	[13872873498766619962, 11551291857879764225]  =  0.012973164817354776
	[12428006241268412898, 10370911177498520402]  =  0.0072784415455702245
	[5548054372471903342 , 17737936919457265947]  =  0.26729645673358693
	[2072770496586688023 , 14057278280866812536]  =  0.2924756773833057
	[15607310917841701902,  9223427034658990711]  =  0.273576392908105
	[3701904739816180802 ,  4047135350800189603]  =  0.5822954449569038
	[15465980046630820984,  3010300210541878305]  =  0.879485135902478Timing named index: 0.000963972, array index: 0.000143015, named key: 0.077040265
Timing sum large sparse array: 0.011224704, named: 0.022886653
done!
INFO: NamedArrays tests passed

>>> End of log
